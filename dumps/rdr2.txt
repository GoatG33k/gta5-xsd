struct AMV__AMVolumeGroupData
{
	array<struct _0xBCAE6F4C>        groups;                          // type:ARRAY.ATARRAY
};

struct AMV__CAMVolumeListSaveData
{
	array<struct _0x2395C18C>        amvList;                         // type:ARRAY.ATARRAY
	string                           txdName;                         // type:STRING.ATNONFINALHASHSTRING
};

struct AMV__CHiResTerrainGridData
{
	uint                             extentZ;                         // type:UINT.0
	float                            falloffPower;                    // type:FLOAT.0
	float                            falloffZMinScale;                // type:FLOAT.0
	float                            falloffZMaxScale;                // type:FLOAT.0
	float                            falloffUnderZScale;              // type:FLOAT.0
	float                            falloffUnderZBias;               // type:FLOAT.0
	vec3V                            samplingOffsetScale;             // type:VEC3V.0
	vec3V                            samplingOffset;                  // type:VEC3V.0
	float                            samplingOffsetStrength;          // type:FLOAT.0
	float                            drawDistance;                    // type:FLOAT.0
	float                            blendDistance;                   // type:FLOAT.0
};

struct AMV__CLowResTerrainGridData
{
	uint                             sizeX;                           // type:UINT.0
	uint                             sizeY;                           // type:UINT.0
	uint                             extentZ;                         // type:UINT.0
	float                            falloffPower;                    // type:FLOAT.0
	float                            falloffZMinScale;                // type:FLOAT.0
	float                            falloffZMaxScale;                // type:FLOAT.0
};

struct ActionSet
{
	array<struct EmoteClipVariationInfo>     ActionArray;                     // type:ARRAY.ATARRAY
};

struct AimingToggled : _0x683B6CF6
{
};

struct AmmoDisplayValueConversion : _0xAB76836B
{
	bool                                             ApplyDefault;                    // type:BOOL.0
	string                                           Default;                         // type:STRING.ATSTRING
	map<enum eUIAmmoSpecialDisplayValue, string>     Dictionary;                      // type:MAP.ATMAP
};

struct AmmoDisplayValueConversionInitializer
{
};

struct AnimPostFXManager
{
	array<struct _0x8A3C2709>        RegisteredStacks;                // type:ARRAY.ATARRAY
};

struct AnimatedPostFX
{
	bool                             Disabled;                        // type:BOOL.0
	struct _0xF2C8EC9D               _0x37A7906A;                     // type:STRUCT.STRUCTURE
	struct _0x915EB48B               _0xA2BDD5B6;                     // type:STRUCT.STRUCTURE
	struct _0xBD1F3905               _0xF72AB247;                     // type:STRUCT.STRUCTURE
	struct _0xF266934D               _0xE68D464A;                     // type:STRUCT.STRUCTURE
	struct _0x70425A87               _0xEBB8A903;                     // type:STRUCT.STRUCTURE
	struct _0x82A61E68               _0x3CBB3D22;                     // type:STRUCT.STRUCTURE
	struct _0x4A2F5434               _0x2B190135;                     // type:STRUCT.STRUCTURE
	struct _0x9997A51C               _0xBC377243;                     // type:STRUCT.STRUCTURE
	struct _0x14EBCAB0               _0x4CFE0F35;                     // type:STRUCT.STRUCTURE
	struct _0x3A98C5F0               _0xC6366990;                     // type:STRUCT.STRUCTURE
	struct _0x9EF02B9D               _0xF862163C;                     // type:STRUCT.STRUCTURE
	struct _0xD00D898F               _0x2B96ECCD;                     // type:STRUCT.STRUCTURE
	struct _0x1726F3BE               _0x3AD7B97A;                     // type:STRUCT.STRUCTURE
};

struct AttributeBitData : _0x166AC204
{
	array<uchar>                     Data;                            // type:ARRAY.ATARRAY
};

struct AttributeBitSet : _0x166AC204
{
	bitset<enum _0x00000000>         BitSet;                          // type:BITSET.ATBITSET
};

struct AttributeBool : _0x166AC204
{
	bool                             Bool;                            // type:BOOL.0
};

struct AttributeFloat : _0x166AC204
{
	float                            Float;                           // type:FLOAT.0
};

struct AttributeHashString : _0x166AC204
{
	string                           HashString;                      // type:STRING.ATNONFINALHASHSTRING
};

struct AttributeInt : _0x166AC204
{
	int                              Int;                             // type:INT.0
};

struct AttributeMatrix34 : _0x166AC204
{
	matrix34V                        Matrix34;                        // type:MAT34V.0
};

struct AttributeQuaternion : _0x166AC204
{
	quatV                            Quaternion;                      // type:QUATV.0
};

struct AttributeSituation : _0x166AC204
{
	quatV                            Quaternion;                      // type:QUATV.0
	vec3V                            Vector3;                         // type:VEC3V.0
};

struct AttributeString : _0x166AC204
{
	string                           String;                          // type:STRING.ATSTRING
};

struct AttributeVector3 : _0x166AC204
{
	vec3V                            Vector3;                         // type:VEC3V.0
};

struct AttributeVector4 : _0x166AC204
{
	vec4V                            Vector4;                         // type:VEC4V.0
};

struct Attributes : _0x166AC204
{
	struct _0xA1DB485F               Attributes;                      // type:STRUCT.STRUCTURE
};

struct BRANCH_BEND_AND_TRI_WAVE_MICRO_MOVEMENTS_LOCALS
{
	array<struct _0xCCCD2F07, 3>     BasisWaves;                      // type:ARRAY.MEMBER
	float                            PivotHeight;                     // type:FLOAT.0
};

struct BlackjackGameData
{
	int                                          currSeat;                        // type:INT.0
	int                                          turnEndPosix;                    // type:INT.0
	struct BlackjackHand                         dealerHand;                      // type:STRUCT.STRUCTURE
	array<struct BlackjackPlayerGameData, 4>     playerData;                      // type:ARRAY.ATFIXEDARRAY
};

struct BlackjackGameSettings : MinigameSettings
{
	int                              turnTimeoutSec;                  // type:INT.0
	int                              minBet;                          // type:INT.0
	int                              maxBet;                          // type:INT.0
	int                              maxBuyIn;                        // type:INT.0
};

struct BlackjackHand : Hand
{
	int                              value;                           // type:INT.0
};

struct BlackjackPlayerGameData
{
	int                                seat;                            // type:INT.0
	int                                bank;                            // type:INT.0
	int                                insurBet;                        // type:INT.0
	int                                currHandIdx;                     // type:INT.0
	int                                iNumBets;                        // type:INT.0
	int                                iNumHands;                       // type:INT.0
	array<int, 2>                      bets;                            // type:ARRAY.ATFIXEDARRAY
	array<struct BlackjackHand, 2>     hands;                           // type:ARRAY.ATFIXEDARRAY
};

struct BleedoutProfile
{
	map<string, struct _0x56757596>     Overrides;                       // type:MAP.ATBINARYMAP
	struct _0x56757596                  Default;                         // type:STRUCT.STRUCTURE
};

struct BlendPreset
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x31274B4F>        layers;                          // type:ARRAY.ATARRAY
};

struct BlendPresets
{
	array<struct BlendPreset>        presets;                         // type:ARRAY.ATARRAY
};

struct BlendSet
{
	string                           NetworkId;                       // type:STRING.ATNONFINALHASHSTRING
	bool                             Loop;                            // type:BOOL.0
	bitset<enum _0x63C8EA1C>         SignalsToSend;                   // type:BITSET.8BIT
	array<struct _0xF0EF6FC6>        Directions;                      // type:ARRAY.ATARRAY
};

struct BlipCategory
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct BlipCondition
{
	uint                             EvaluationFreqMS;                // type:UINT.0
	struct _0x0A510DA9               Condition;                       // type:STRUCT.POINTER
};

struct BlipLinkageData
{
	string                           Linkage;                         // type:STRING.ATFINALHASHSTRING
	string                           LinkageMP;                       // type:STRING.ATFINALHASHSTRING
	string                           TextureDictionary;               // type:STRING.ATNONFINALHASHSTRING
	vec2V                            Offset;                          // type:VEC2V.0
	vec2V                            Size;                            // type:VEC2V.0
	vec2V                            TextSize;                        // type:VEC2V.0
	string                           HigherLinkage;                   // type:STRING.ATNONFINALHASHSTRING
	string                           LowerLinkage;                    // type:STRING.ATNONFINALHASHSTRING
	string                           DirectionLinkage;                // type:STRING.ATNONFINALHASHSTRING
	string                           BackgroundLinkage;               // type:STRING.ATNONFINALHASHSTRING
	string                           AreaCoreLinkage;                 // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xCB023CBE>         Flags;                           // type:BITSET.8BIT
};

struct BlipLinkageStore
{
	string                                  DefaultHigherLinkage;            // type:STRING.ATNONFINALHASHSTRING
	string                                  DefaultLowerLinkage;             // type:STRING.ATNONFINALHASHSTRING
	string                                  DefaultDirectionLinkage;         // type:STRING.ATNONFINALHASHSTRING
	string                                  DefaultBackgroundLinkage;        // type:STRING.ATNONFINALHASHSTRING
	string                                  DefaultLOSCone;                  // type:STRING.ATNONFINALHASHSTRING
	float                                   AreaBlipCollapseThreshold;       // type:FLOAT.0
	map<string, struct BlipLinkageData>     PerLinkageData;                  // type:MAP.ATBINARYMAP
};

struct BlipModuleWithCondition : _0x7EAFD12D
{
	struct void                      ConditionData;                   // type:STRUCT.EXTERNAL_NAMED
	short                            StayTrueTimeMS;                  // type:SHORT.0
	bool                             InvertCondition;                 // type:BOOL.0
	bool                             DoActionOnPop;                   // type:BOOL.0
};

struct BlipStyle
{
	string                           Parent;                          // type:STRING.ATNONFINALHASHSTRING
	string                           ExclusiveType;                   // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x7EAFD12D>        Actions;                         // type:ARRAY.ATARRAY
};

struct BlipStyleStore
{
	struct BlipLinkageStore               Linkages;                        // type:STRUCT.STRUCTURE
	map<string, struct BlipCondition>     Conditions;                      // type:MAP.ATBINARYMAP
	map<string, struct BlipStyle>         Styles;                          // type:MAP.ATBINARYMAP
	map<string, enum BlipRange>           Ranges;                          // type:MAP.ATBINARYMAP
	map<string, struct _0xDA5213F7>       Groups;                          // type:MAP.ATBINARYMAP
	array<struct BlipCategory>            Categories;                      // type:ARRAY.ATARRAY
	struct _0xB3CC7D49                    Tunables;                        // type:STRUCT.STRUCTURE
	string                                _0x43AF4C38;                     // type:STRING.ATNONFINALHASHSTRING
	string                                _0xD3954C0B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct BlipValueConversion : _0xAB76836B
{
};

struct BoardDomino : Domino
{
	struct DominoesBoardPos          pos;                             // type:STRUCT.STRUCTURE
	enum CompassDirection            orientation;                     // type:ENUM.32BIT
};

struct BoatHullBlackList
{
	array<struct _0x200C29DC>        List;                            // type:ARRAY.ATARRAY
};

struct BoxOccluder
{
	vec4V                            _0xCC2290C3;                     // type:VEC4V.0
	vec4V                            _0x614B958A;                     // type:VEC4V.0
};

struct BreakoutClipData
{
	string                           clipsetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           clipId;                          // type:STRING.ATNONFINALHASHSTRING
};

struct CAIActionClearCombatOrderDynamicTask : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             ForceAbort;                      // type:BOOL.0
};

struct CAIActionClearCombatOrderFlags : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x426BAA95>         GeneralFlags;                    // type:BITSET.32BIT
	bitset<enum _0xEBFCC29A>         _0xE146753E;                     // type:BITSET.32BIT
};

struct CAIActionClearCombatOrderOverrideTarget : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIActionClearUnknownThreatInteriors : _0x75A967D5
{
};

struct CAIActionNode : _0xEB587558
{
	struct _0x75A967D5               Action;                          // type:STRUCT.POINTER
};

struct CAIActionOverrideCombatStyle : _0x75A967D5
{
	enum _0x54B82C2C                 CombatStyle;                     // type:ENUM.32BIT
	struct CAICondition              _0xA5F73BF1;                     // type:STRUCT.POINTER
};

struct CAIActionSayDialog : _0x75A967D5
{
	enum _0x563FBCEA                 Source;                          // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	string                           DebugDisplay;                    // type:STRING.ATSTRING
	string                           Context;                         // type:STRING.ATPARTIALHASHVALUE
};

struct CAIActionSendBoolMessage : _0x75A967D5
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             Value;                           // type:BOOL.0
	bool                             Broadcast;                       // type:BOOL.0
};

struct CAIActionSetBool : _0x75A967D5
{
	string                           BoolName;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             Value;                           // type:BOOL.0
};

struct CAIActionSetBrawlingStyle : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           BrawlingStyle;                   // type:STRING.ATNONFINALHASHSTRING
};

struct CAIActionSetCombatOrderDynamicTask : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	struct _0x14229900               Task;                            // type:STRUCT.POINTER
	uint                             Duration;                        // type:UINT.0
};

struct CAIActionSetCombatOrderOverrideTarget : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           OverrideTarget;                  // type:STRING.ATNONFINALHASHSTRING
};

struct CAIActionSetCombatSituation : _0x75A967D5
{
	string                           CombatSituation;                 // type:STRING.ATNONFINALHASHSTRING
};

struct CAIActionSetPedResetFlags : _0x75A967D5
{
	enum _0x563FBCEA                      Ped;                             // type:ENUM.32BIT
	bitset<enum ePedResetFlags>           ResetFlags;                      // type:BITSET.64BIT
	bitset<enum ePedScriptResetFlags>     ScriptResetFlags;                // type:BITSET.32BIT
};

struct CAIActionUnlockClosestDoor : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIAttitudeRuleSetDictionary
{
	map<string, struct _0x55B09631>     AttitudeRuleSetMap;              // type:MAP.ATBINARYMAP
};

struct CAIBlackboardBoolNode : _0xEB587558
{
	string                           BoolName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAIBoolSensorNode : _0xEB587558
{
	string                           BoolName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAICondition
{
};

struct CAIConditionAffluence : _0xA5D4CB80
{
	enum Affluence                   Affluence;                       // type:ENUM.32BIT
};

struct CAIConditionAge : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xD4CFF347                 _0xD4982914;                     // type:ENUM.32BIT
	enum _0xD4CFF347                 UpperBoundGroup;                 // type:ENUM.32BIT
};

struct CAIConditionAmbientAIMemoryReactionsEnabled : CAICondition
{
};

struct CAIConditionAmbientEventDirection : CAICondition
{
	vec3                             Direction;                       // type:VECTOR3.0
	float                            Threshold;                       // type:FLOAT.0
	bool                             FlattenZ;                        // type:BOOL.0
};

struct CAIConditionAmbientEventTypeCheck : CAICondition
{
	enum AmbientEventType            Type;                            // type:ENUM.32BIT
};

struct CAIConditionAmbientResponseProfile : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Profile;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionAmbientlyCarriableWhenDead : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionAnd : _0x2CDD99AB
{
};

struct CAIConditionAngleBetweenPedAndScenario : _0xCAAD7E2F
{
};

struct CAIConditionAngleFromDesiredMovementToTargetDirection : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             Absolute;                        // type:BOOL.0
};

struct CAIConditionAngleToTargetRelativeToCurrentHeading : CAICondition
{
	enum _0x563FBCEA                 FromPed;                         // type:ENUM.32BIT
	enum _0x563FBCEA                 ToPed;                           // type:ENUM.32BIT
	float                            UpperBound;                      // type:FLOAT.0
	float                            LowerBound;                      // type:FLOAT.0
};

struct CAIConditionAngleToTargetRelativeToHeading : CAICondition
{
	enum _0x563FBCEA                 FromEntity;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetEntity;                    // type:ENUM.32BIT
	float                            MinAngleDegrees;                 // type:FLOAT.0
	float                            MaxAngleDegrees;                 // type:FLOAT.0
	bool                             Vertical;                        // type:BOOL.0
	bool                             _0xB36515E3;                     // type:BOOL.0
};

struct CAIConditionAnimalBeingTamedHasFailed : CAICondition
{
	enum _0x563FBCEA                 Animal;                          // type:ENUM.32BIT
};

struct CAIConditionAnimalBeingTamedIsMinorFail : CAICondition
{
	enum _0x563FBCEA                 Animal;                          // type:ENUM.32BIT
};

struct CAIConditionAnimalBeingTamedIsReact : CAICondition
{
	enum _0x563FBCEA                 Animal;                          // type:ENUM.32BIT
};

struct CAIConditionAnimalBeingTamedIsRetry : CAICondition
{
	enum _0x563FBCEA                 Animal;                          // type:ENUM.32BIT
};

struct CAIConditionAnimalBeingTamedIsStart : CAICondition
{
	enum _0x563FBCEA                 Animal;                          // type:ENUM.32BIT
};

struct CAIConditionAnimalHasBeenAlertedRecently : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionAnimalHasOwner : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xABEFF98C;                     // type:BOOL.0
};

struct CAIConditionAnimalOwnerIsMale : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionAnimalOwnerLastSeenMounted : CAICondition
{
	enum _0x563FBCEA                 AnimalPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 ViewerPed;                       // type:ENUM.32BIT
};

struct CAIConditionAnimalShouldPlayScenarioReaction : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum AmbientEventType            Type;                            // type:ENUM.32BIT
	bool                             IgnoreAlertedDistanceChecks;     // type:BOOL.0
	bool                             Base;                            // type:BOOL.0
};

struct CAIConditionAnimalShouldReactLookIntoExitScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionAnimalTimeSinceAttackState : CAICondition
{
	float                            Time;                            // type:FLOAT.0
	array<enum _0x9EDED34A>          AttackStates;                    // type:ARRAY.ATARRAY
};

struct CAIConditionApproachingCrimeSceneEvent : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionArePedConfigFlagsSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum ePedConfigFlags>     ConfigFlags;                     // type:BITSET.64BIT
};

struct CAIConditionArePedGameplayConfigFlagsSet : CAICondition
{
	enum _0x563FBCEA                         Ped;                             // type:ENUM.32BIT
	bitset<enum ePedGameplayConfigFlags>     ConfigFlags;                     // type:BITSET.32BIT
};

struct CAIConditionArePedGameplayResetFlagsSet : CAICondition
{
	enum _0x563FBCEA                        Ped;                             // type:ENUM.32BIT
	bitset<enum ePedGameplayResetFlags>     ResetFlags;                      // type:BITSET.32BIT
};

struct CAIConditionArePedObjectInteractionFlagsSet : CAICondition
{
	enum _0x563FBCEA                         Ped;                             // type:ENUM.32BIT
	bitset<enum eObjectInteractionFlags>     Flags;                           // type:BITSET.32BIT
};

struct CAIConditionArePedRagdollResetFlagsSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x77B7C0B1>         ResetFlags;                      // type:BITSET.32BIT
};

struct CAIConditionArePedResetFlagsSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum ePedResetFlags>      ResetFlags;                      // type:BITSET.64BIT
};

struct CAIConditionArePedScriptConfigFlagsSet : CAICondition
{
	enum _0x563FBCEA                       Ped;                             // type:ENUM.32BIT
	bitset<enum ePedScriptConfigFlags>     ConfigFlags;                     // type:BITSET.32BIT
};

struct CAIConditionArePedScriptResetFlagsSet : CAICondition
{
	enum _0x563FBCEA                      Ped;                             // type:ENUM.32BIT
	bitset<enum ePedScriptResetFlags>     ResetFlags;                      // type:BITSET.32BIT
};

struct CAIConditionArePedsInScenarioCluster : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x0059DBF1;                     // type:ENUM.32BIT
};

struct CAIConditionArePlayerConfigFlagsSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x72FC530C>         Flags;                           // type:BITSET.32BIT
};

struct CAIConditionArePlayerResetFlagsSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xCBF304A1>         ResetFlags;                      // type:BITSET.32BIT
};

struct CAIConditionAreScenarioInfoFlagsSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             GetScenarioPointFromPed;         // type:BOOL.0
	bitset<enum _0x9138840C>         InfoFlags;                       // type:BITSET.32BIT
};

struct CAIConditionAreScenarioPointFlagsSet : CAICondition
{
	enum _0x563FBCEA                            Ped;                             // type:ENUM.32BIT
	bitset<enum CScenarioPointFlags__Flags>     ScenarioPointFlags;              // type:BITSET.32BIT
	bool                                        UsePointFromContext;             // type:BOOL.0
	bool                                        UseNextScenarioPoint;            // type:BOOL.0
};

struct CAIConditionAreTaskFlagsSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x982F0A37>         Flags;                           // type:BITSET.32BIT
};

struct CAIConditionAttackGroupGrapplingMemberCount : CAICondition
{
	uint                             Count;                           // type:UINT.0
};

struct CAIConditionAttackGroupMeleeMemberCount : CAICondition
{
	uint                             Count;                           // type:UINT.0
};

struct CAIConditionAttitudeTowardsPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	array<enum _0xFCE09374>          Attitudes;                       // type:ARRAY.ATARRAY
};

struct CAIConditionAwayFromPackOffset : CAICondition
{
};

struct CAIConditionBarBrawlPropagationWithinRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionBlackboardBool : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             IsTrue;                          // type:BOOL.0
};

struct CAIConditionBlackboardFloat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
	bool                             FailIfNotFound;                  // type:BOOL.0
};

struct CAIConditionBlackboardString : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Compare;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             IsTrue;                          // type:BOOL.0
};

struct CAIConditionBlackboardStringExists : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionBlackboardUnsignedInt : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             FailIfNotFound;                  // type:BOOL.0
};

struct CAIConditionBodyAnimConstraintInfoBodyPart : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eBodyPart                   BodyPart;                        // type:ENUM.32BIT
	enum eBodyPartState              State;                           // type:ENUM.32BIT
	enum eBodyPartObject             Object;                          // type:ENUM.32BIT
};

struct CAIConditionBodyAnimConstraintInfoBodyPartObject : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eBodyPart                   BodyPart;                        // type:ENUM.32BIT
	enum eBodyPartObject             Object;                          // type:ENUM.32BIT
};

struct CAIConditionBodyAnimConstraintInfoBodyPartState : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eBodyPart                   BodyPart;                        // type:ENUM.32BIT
	enum eBodyPartState              State;                           // type:ENUM.32BIT
};

struct CAIConditionBodyAnimConstraintInfoStateSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           BodyAnimConstraintInfoStateSet;  // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionBountyAmount : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	int                              BountyLowerBound;                // type:INT.0
	int                              BountyUpperBound;                // type:INT.0
	char                             WantedLevelLowerBound;           // type:CHAR.0
	char                             WantedLevelUpperBound;           // type:CHAR.0
};

struct CAIConditionBountyIncidentLawHaveArrived : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CAIConditionBountyIncidentSeverity : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	enum _0x655601C3                 Severity;                        // type:ENUM.32BIT
};

struct CAIConditionBountyIncidentWithinRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             UseCrimeSceneLocationFirstIfAvailable; // type:BOOL.0
	bool                             UseVisitRadius;                  // type:BOOL.0
};

struct CAIConditionBraveryFlagSet : CAICondition
{
	enum eBraveryFlags               Flag;                            // type:ENUM.32BIT
};

struct CAIConditionBulletSegmentWithinRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Range;                           // type:FLOAT.0
};

struct CAIConditionCanAdvance : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
};

struct CAIConditionCanAnimalCharge : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	bool                             CheckProbability;                // type:BOOL.0
};

struct CAIConditionCanEquipWeapon : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             MustBeGun;                       // type:BOOL.0
};

struct CAIConditionCanFight : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
	bool                             _0x49AF3125;                     // type:BOOL.0
};

struct CAIConditionCanInteract : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
	enum InteractionType             TypeOverride;                    // type:ENUM.32BIT
	bool                             CheckElevationDiff;              // type:BOOL.0
};

struct CAIConditionCanLeaveScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionCanMoveInScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionCanPlayInCarIdle : CAICondition
{
};

struct CAIConditionCanPoliceConfrontTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CAIConditionCanWitnessCrime : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionChainedScenarioPointsHasProp : CAICondition
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionChainedScenarioPointsInUse : CAICondition
{
	bitset<enum _0x7DF6E11F>         ChainTypes;                      // type:BITSET.32BIT
};

struct CAIConditionCheckBraveryFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum eBraveryFlags>       Flags;                           // type:BITSET.32BIT
};

struct CAIConditionCheckFloatStat : CAICondition
{
	struct StatId                    StatId;                          // type:STRUCT.STRUCTURE
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MinValue;                        // type:FLOAT.0
	float                            MaxValue;                        // type:FLOAT.0
};

struct CAIConditionCheckIntegerStat : CAICondition
{
	struct StatId                    StatId;                          // type:STRUCT.STRUCTURE
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
	short                            MinValue;                        // type:SHORT.0
	short                            MaxValue;                        // type:SHORT.0
};

struct CAIConditionCheckMemories : CAICondition
{
	enum _0x05A6E79E                 Mode;                            // type:ENUM.32BIT
	array<struct _0x4CB568F7>        Memories;                        // type:ARRAY.ATARRAY
};

struct CAIConditionCheckPendingWeaponInfoFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xC0B6A160>         WeaponInfoFlags;                 // type:BITSET.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
};

struct CAIConditionCheckRelationship : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	enum _0x8F0F2387                 RelationshipType;                // type:ENUM.32BIT
};

struct CAIConditionClockWithinRange : CAICondition
{
	int                              LowerBoundHours;                 // type:INT.0
	int                              _0xDCF3AAC8;                     // type:INT.0
	int                              UpperBoundHours;                 // type:INT.0
	int                              _0xFD9E287B;                     // type:INT.0
};

struct CAIConditionCombatDirectorCanArrestTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionCombatDirectorIsTargetBeingArrested : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionCombatFlowInRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionCompanionFailedAdvanceReason : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           FailureReasonHash;               // type:STRING.ATHASHVALUE
};

struct CAIConditionCompanionIsInVolume : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x49CC695C                 VolumeType;                      // type:ENUM.32BIT
	bitset<enum _0xF71F48F0>         Flags;                           // type:BITSET.32BIT
};

struct CAIConditionCrimeInvestigating : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x655601C3                 Severity;                        // type:ENUM.32BIT
	string                           Type;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             CreatedWithin;                   // type:UINT.0
	bool                             FoundEvidence;                   // type:BOOL.0
	bool                             IsVictim;                        // type:BOOL.0
	bool                             HasVictim;                       // type:BOOL.0
	bool                             IsRecent;                        // type:BOOL.0
	bool                             ShouldConfirmAfterCheckingCrimeScene; // type:BOOL.0
	bool                             IsInGuardZone;                   // type:BOOL.0
	bool                             MustBeInvestigating;             // type:BOOL.0
};

struct CAIConditionCrimeSceneContainsInterior : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionCriminalIdentifiedByEyewitness : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionCrouched : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionCrouchedKnee : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0x86A6B74A;                     // type:BOOL.0
};

struct CAIConditionCurrentDispatchPhaseCountInRange : CAICondition
{
	uint                             MinPhaseCount;                   // type:UINT.0
	uint                             MaxPhaseCount;                   // type:UINT.0
};

struct CAIConditionCurrentFleeStyle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
	bool                             GreaterThanOrEqualToStyle;       // type:BOOL.0
	bool                             LessThanOrEqualToStyle;          // type:BOOL.0
};

struct CAIConditionCurrentLawRegionInLockdown : CAICondition
{
};

struct CAIConditionCurrentLawRegionWilderness : CAICondition
{
};

struct CAIConditionCurrentMoveBlendRatio : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
};

struct CAIConditionDamagedByEntityUnarmed : CAICondition
{
	enum _0x563FBCEA                 DamagedEntity;                   // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xFC7D4862;                     // type:ENUM.32BIT
	uint                             TimeIntervalMS;                  // type:UINT.0
};

struct CAIConditionDangerousSpecies : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
};

struct CAIConditionDaysSinceMissionCompleted : CAICondition
{
	string                           MissionID;                       // type:STRING.ATNONFINALHASHSTRING
	array<string>                    MissionIDs;                      // type:ARRAY.ATARRAY
	uint                             MinDaysSince;                    // type:UINT.0
	uint                             MaxDaysSince;                    // type:UINT.0
};

struct CAIConditionDaysSinceProcmissionCompleted : CAICondition
{
	enum _0x19A9393C                 ActivityType;                    // type:ENUM.32BIT
	uint                             MinDaysSince;                    // type:UINT.0
	uint                             MaxDaysSince;                    // type:UINT.0
};

struct CAIConditionDesiredFacingRelativeToCurrentFacing : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct CAIConditionDesiredRelativeFacing : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
};

struct CAIConditionDidHorseRecentlyHaveRider : CAICondition
{
	enum _0x563FBCEA                 Horse;                           // type:ENUM.32BIT
	bool                             _0x5CC2791F;                     // type:BOOL.0
	int                              LastRiderDismountTimeMs;         // type:INT.0
};

struct CAIConditionDirectionRelativeToTarget : CAICondition
{
	enum _0x563FBCEA                 FromEntity;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetEntity;                    // type:ENUM.32BIT
	float                            Threshold;                       // type:FLOAT.0
	bool                             FlattenZ;                        // type:BOOL.0
	bool                             LessThan;                        // type:BOOL.0
};

struct CAIConditionDirectionRelativeToTargetHead : CAICondition
{
	enum _0x563FBCEA                 FromEntity;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetEntity;                    // type:ENUM.32BIT
	float                            Threshold;                       // type:FLOAT.0
	bool                             FlattenZ;                        // type:BOOL.0
	bool                             LessThan;                        // type:BOOL.0
};

struct CAIConditionDirectionToEmotionalLocoTarget : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
};

struct CAIConditionDistanceBetweenEntities : CAICondition
{
	enum _0x563FBCEA                 EntityA;                         // type:ENUM.32BIT
	enum _0x563FBCEA                 EntityB;                         // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             IgnoreXY;                        // type:BOOL.0
	bool                             FlattenZ;                        // type:BOOL.0
};

struct CAIConditionDistanceFromOwnedVolume : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionDistanceToEvent : CAICondition
{
	enum _0x563FBCEA                 TestEntity;                      // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             IgnoreXY;                        // type:BOOL.0
	bool                             FlattenZ;                        // type:BOOL.0
	bool                             UseTargetEntityPosition;         // type:BOOL.0
};

struct CAIConditionDistanceToPlayer : CAICondition
{
	enum _0x563FBCEA                 TestEntity;                      // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             IgnoreXY;                        // type:BOOL.0
	bool                             FlattenZ;                        // type:BOOL.0
};

struct CAIConditionDistanceToPoint : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             FlattenZ;                        // type:BOOL.0
	bool                             UseNextScenarioPoint;            // type:BOOL.0
};

struct CAIConditionDoPedsHaveSamePersonalityFlags : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
	bool                             AnyFlags;                        // type:BOOL.0
};

struct CAIConditionDoesHumanPedVoiceHaveZeroContexts : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionDoesLastDamageWeaponHaveFlags : CAICondition
{
	enum _0x563FBCEA                 DamagedPed;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 DamageInflictor;                 // type:ENUM.32BIT
	bitset<enum _0xC0B6A160>         WeaponInfoFlags;                 // type:BITSET.32BIT
};

struct CAIConditionDoesPedHaveUnplayedValidOneShotContext : CAICondition
{
	enum _0x563FBCEA                 SpeakingPed;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CAIConditionDraftAnimalSpeed : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	float                            MinMBR;                          // type:FLOAT.0
	float                            MaxMBR;                          // type:FLOAT.0
	bool                             UseDesiredMBR;                   // type:BOOL.0
};

struct CAIConditionDraftVehicleHasShotgunPassenger : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionEmotionalLoco : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum EmotionalState              EmotionalState;                  // type:ENUM.32BIT
};

struct CAIConditionEmotionalPresetScenarioBreakoutSpeed : CAICondition
{
	enum _0x5B27B358                 Speed;                           // type:ENUM.32BIT
};

struct CAIConditionEmotionalStateCheck : CAICondition
{
	enum EmotionalState              EmotionalState;                  // type:ENUM.32BIT
};

struct CAIConditionEntityExists : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionEntityIsLastMount : CAICondition
{
	enum _0x563FBCEA                 PotentialMount;                  // type:ENUM.32BIT
	enum _0x563FBCEA                 PotentialOwner;                  // type:ENUM.32BIT
};

struct CAIConditionEntityIsOwnedMount : CAICondition
{
	enum _0x563FBCEA                 Mount;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Owner;                           // type:ENUM.32BIT
};

struct CAIConditionEntityIsPassive : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionEntityOutsidePen : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionEntityPrefersFleeToCower : CAICondition
{
	enum _0x563FBCEA                 AnimalPed;                       // type:ENUM.32BIT
};

struct CAIConditionEntityType : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	enum _0x41A2C5A0                 Type;                            // type:ENUM.32BIT
};

struct CAIConditionEntityWithinAnimalAlertedRange : _0x7BB9CD06
{
};

struct CAIConditionEntityWithinAnimalFleeOrCombatRange : _0x7BB9CD06
{
};

struct CAIConditionEntityWithinAnimalLoudNoiseAlertedRange : _0x7BB9CD06
{
};

struct CAIConditionEntityWithinAnimalLoudNoiseFleeOrCombatRange : _0x7BB9CD06
{
};

struct CAIConditionEntityWithinGunCombatArea : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	bool                             MustBeActiveGunfight;            // type:BOOL.0
	float                            BufferDistance;                  // type:FLOAT.0
};

struct CAIConditionEquippedWeaponGroup : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Group;                           // type:STRING.ATNONFINALHASHSTRING
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	bool                             CheckPendingOnly;                // type:BOOL.0
	bool                             CheckPendingToo;                 // type:BOOL.0
	bool                             CheckWeaponFromEvent;            // type:BOOL.0
};

struct CAIConditionEquippedWeaponHasScope : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
};

struct CAIConditionEquippedWeaponHolsterPoint : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          WeaponAttachPoint;               // type:ENUM.32BIT
	enum eWeaponAttachPoint          WeaponHolsterPoint;              // type:ENUM.32BIT
};

struct CAIConditionEquippedWeaponInfoFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xC0B6A160>         WeaponInfoFlags;                 // type:BITSET.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	bool                             RequireAll;                      // type:BOOL.0
	bool                             CheckWeaponFromEvent;            // type:BOOL.0
};

struct CAIConditionEquippedWeaponName : CAICondition
{
	string                           WeaponName;                      // type:STRING.ATNONFINALHASHSTRING
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xDE85939E;                     // type:BOOL.0
};

struct CAIConditionEquippedWeaponType : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x8ECA83BA                 WeaponType;                      // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	bool                             CheckPendingOnly;                // type:BOOL.0
	bool                             CheckPendingToo;                 // type:BOOL.0
};

struct CAIConditionEventDamageMelee : CAICondition
{
};

struct CAIConditionEventDamageSourceIsPlayer : CAICondition
{
};

struct CAIConditionEventDamageType : CAICondition
{
	enum eDamageType                 DamageType;                      // type:ENUM.32BIT
};

struct CAIConditionEventDamageUnarmed : CAICondition
{
};

struct CAIConditionEventRansackIsObjectLocked : CAICondition
{
};

struct CAIConditionEventShockingSpeechHash : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x6D2F5334;                     // type:ENUM.32BIT
	string                           SpeechHash;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionEventVehicleDamageInflictorIsVehicle : CAICondition
{
};

struct CAIConditionEventWithinNearbyReactionRange : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionExitWithNoProps : CAICondition
{
};

struct CAIConditionFalse : CAICondition
{
};

struct CAIConditionFindNearbyPed : CAICondition
{
	bitset<enum _0xCC8D3291>                    PersonalityFlags;                // type:BITSET.32BIT
	enum _0x563FBCEA                            PedToSearchFrom;                 // type:ENUM.32BIT
	enum _0x563FBCEA                            PedToExclude;                    // type:ENUM.32BIT
	float                                       Radius;                          // type:FLOAT.0
	uint                                        MaxPedsToCheck;                  // type:UINT.0
	uint                                        MustNotHaveSpokenWithPlayerMS;   // type:UINT.0
	bool                                        MustBeHuman;                     // type:BOOL.0
	bool                                        MustNotBeHuman;                  // type:BOOL.0
	bool                                        MustBeAlive;                     // type:BOOL.0
	bool                                        MustBeDead;                      // type:BOOL.0
	bool                                        MustBeLaw;                       // type:BOOL.0
	bool                                        _0x47006713;                     // type:BOOL.0
	bool                                        _0xAAFA0AAB;                     // type:BOOL.0
	bool                                        MustNotBeWitness;                // type:BOOL.0
	bool                                        MustNotBeLaw;                    // type:BOOL.0
	bool                                        MustNotBeGuard;                  // type:BOOL.0
	bool                                        _0x095AB0DE;                     // type:BOOL.0
	bool                                        MustNotBePlayer;                 // type:BOOL.0
	bool                                        MustBeFriendly;                  // type:BOOL.0
	bool                                        MustBeSameInterior;              // type:BOOL.0
	bool                                        MustBeSameSex;                   // type:BOOL.0
	bool                                        MustBeOppositeSex;               // type:BOOL.0
	bool                                        RequireScenarioAndResetFlags;    // type:BOOL.0
	bitset<enum CScenarioPointFlags__Flags>     ScenarioPointFlags;              // type:BITSET.32BIT
	bitset<enum ePedScriptResetFlags>           ScriptResetFlags;                // type:BITSET.32BIT
	bitset<enum ePedConfigFlags>                ConfigFlags;                     // type:BITSET.64BIT
	string                                      PersCharName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionFindNearbyWitnessPed : CAICondition
{
	enum _0x563FBCEA                 PedToSearchFrom;                 // type:ENUM.32BIT
	enum _0x563FBCEA                 PedToExclude;                    // type:ENUM.32BIT
	enum _0x563FBCEA                 Criminal;                        // type:ENUM.32BIT
	float                            Radius;                          // type:FLOAT.0
	uint                             MaxPedsToCheck;                  // type:UINT.0
	uint                             MinPedsNeeded;                   // type:UINT.0
	bool                             MustBeReporting;                 // type:BOOL.0
	bool                             MustBeInvestigating;             // type:BOOL.0
	bool                             _0x4780A5FD;                     // type:BOOL.0
	bool                             MustBeVisibleOnScreen;           // type:BOOL.0
};

struct CAIConditionFishingOverriddenCastPower : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            PowerLessThanOrEqualTo;          // type:FLOAT.0
};

struct CAIConditionFoggy : _0xDA1F7477
{
	float                            _0xA3276134;                     // type:FLOAT.0
};

struct CAIConditionFullyInIdle : CAICondition
{
};

struct CAIConditionGatorPit : CAICondition
{
	enum _0xEB0DBE83                 Check;                           // type:ENUM.32BIT
	float                            TimeThreshold;                   // type:FLOAT.0
};

struct CAIConditionGesticularLootingEnabled : CAICondition
{
};

struct CAIConditionGoalContext : CAICondition
{
	string                           ContextHash;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionGroupMemberCount : CAICondition
{
	enum _0x563FBCEA                 GroupMember;                     // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
	bool                             IgnoreDeadMembers;               // type:BOOL.0
	bool                             MalesOnly;                       // type:BOOL.0
	bool                             _0xDB8D743C;                     // type:BOOL.0
};

struct CAIConditionGroupParticipantId : CAICondition
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionHasAIGroupID : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           AIGroupID;                       // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionHasARider : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 RiderPed;                        // type:ENUM.32BIT
};

struct CAIConditionHasAggressiveInteractions : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasAmmoOfType : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           AmmoType;                        // type:STRING.ATNONFINALHASHSTRING
	short                            _0x317993CE;                     // type:SHORT.0
	short                            _0x81CC148E;                     // type:SHORT.0
	bool                             CheckHasMaxAmmo;                 // type:BOOL.0
};

struct CAIConditionHasAnySpeechRuleSets : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasAnyWeaponEquipped : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	bool                             CheckPendingOnly;                // type:BOOL.0
	bool                             CheckPendingToo;                 // type:BOOL.0
};

struct CAIConditionHasClearExitPath : CAICondition
{
};

struct CAIConditionHasCompletedAmbientReactIntro : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasConfirmedCrime : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x655601C3                 CrimeSeverity;                   // type:ENUM.32BIT
	string                           Crime;                           // type:STRING.ATNONFINALHASHSTRING
	uint                             CreatedWithin;                   // type:UINT.0
	bool                             CanUseConfrontation;             // type:BOOL.0
	bool                             IsVictimOfCrime;                 // type:BOOL.0
	bool                             IsRecentCrime;                   // type:BOOL.0
	bool                             IsAssaultCrime;                  // type:BOOL.0
	bool                             IsMurderCrime;                   // type:BOOL.0
	bool                             IsTheftCrime;                    // type:BOOL.0
	bool                             MustBeHumanVictim;               // type:BOOL.0
	bool                             IsBlockingStopWitness;           // type:BOOL.0
};

struct CAIConditionHasCrimeAboutCriminal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Criminal;                        // type:ENUM.32BIT
};

struct CAIConditionHasDecalFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xC5EADBF2>         DecalInfoFlagsInclude;           // type:BITSET.32BIT
	bitset<enum _0xC5EADBF2>         _0xE09A3170;                     // type:BITSET.32BIT
	int                              _0x0F066987;                     // type:INT.0
	float                            _0x322F5B85;                     // type:FLOAT.0
	float                            fMinHeight;                      // type:FLOAT.0
	float                            _0x2B8ACC43;                     // type:FLOAT.0
};

struct CAIConditionHasEnterExitFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xF9C94678>         Flags;                           // type:BITSET.32BIT
};

struct CAIConditionHasFocusTarget : CAICondition
{
};

struct CAIConditionHasForgivenCrime : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 CriminalPed;                     // type:ENUM.32BIT
	string                           Crime;                           // type:STRING.ATNONFINALHASHSTRING
	bool                             HasLeaderForgiven;               // type:BOOL.0
};

struct CAIConditionHasGuardZone : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasInteractionLockOnTarget : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	bool                             _0x260EAEC9;                     // type:BOOL.0
	bool                             UseTargeting;                    // type:BOOL.0
};

struct CAIConditionHasInteractionWithResponseFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xC901751A>         InteractionResponseFlags;        // type:BITSET.16BIT
};

struct CAIConditionHasInventoryItem : CAICondition
{
	string                           ItemId;                          // type:STRING.ATNONFINALHASHSTRING
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinItemCount;                    // type:INT.0
	int                              MaxItemCount;                    // type:INT.0
};

struct CAIConditionHasLootAtVisibleLootSlot : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	enum _0x41DA6081                 Slot;                            // type:ENUM.32BIT
};

struct CAIConditionHasMoveNetworkProperty : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	string                           Property;                        // type:STRING.ATHASHVALUE
};

struct CAIConditionHasNegativeResponseOverride : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasNoProp : CAICondition
{
};

struct CAIConditionHasOrder : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasPersonalityFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xCC8D3291>         Flags;                           // type:BITSET.32BIT
	bool                             AnyFlags;                        // type:BOOL.0
};

struct CAIConditionHasPositiveResponseOverride : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasPositiveResponseSpeechOverride : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasProp : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           PropSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionHasPropWithTypeFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xD6A54707>         PropTypeFlags;                   // type:BITSET.32BIT
};

struct CAIConditionHasRansackScenarioBeenLooted : CAICondition
{
};

struct CAIConditionHasReactionAnalysisTriggeredEscalation : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasRoomToDodge : CAICondition
{
};

struct CAIConditionHasSatchelItem : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           ItemName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionHasScavengerLayout : CAICondition
{
	enum _0x563FBCEA                 Corpse;                          // type:ENUM.32BIT
};

struct CAIConditionHasScenarioCapability : _0xA5D4CB80
{
	string                           CapabilitiesString;              // type:STRING.ATSTRING
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasScenarioPropId : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionHasSpeechContext : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Context;                         // type:STRING.ATPARTIALHASHVALUE
	bool                             _0x617B384C;                     // type:BOOL.0
};

struct CAIConditionHasSpeechRuleSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           SpeechRuleSet;                   // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionHasTaskUsingScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           ScenarioName;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x93C92D41;                     // type:BOOL.0
	bool                             MustBeSeatedScenario;            // type:BOOL.0
};

struct CAIConditionHasValidAmbientEvent : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionHasValidScenarioPoint : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xC6A608C1;                     // type:BOOL.0
};

struct CAIConditionHasWeaponForAmmoType : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           AmmoType;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionHasWeaponInAttachPoint : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	bool                             IgnoreUnarmed;                   // type:BOOL.0
};

struct CAIConditionHasWeaponWithFlags : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xC0B6A160>         WeaponFlags;                     // type:BITSET.32BIT
	bitset<enum _0xC0B6A160>         ExcludeWeaponFlags;              // type:BITSET.32BIT
	bool                             OnlyCheckEquippedWeapon;         // type:BOOL.0
	bool                             OnlyCheckWeaponFromEvent;        // type:BOOL.0
	bool                             GetWeaponFlagsFromConditionalAnims; // type:BOOL.0
	bool                             RequireWeaponAvailableInDefaultLoadout; // type:BOOL.0
};

struct CAIConditionHorseBondingLevel : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              BondingLevel;                    // type:INT.0
};

struct CAIConditionHumanPedsRemainingInCurrentIncident : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionIdentifiedAsCriminal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 ObservingPed;                    // type:ENUM.32BIT
	bool                             _0xBC9B282B;                     // type:BOOL.0
	bool                             CheckIfDisguised;                // type:BOOL.0
};

struct CAIConditionIkArmActive : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eBodyPart                   Arm;                             // type:ENUM.32BIT
};

struct CAIConditionIkArmHighPriority : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eBodyPart                   Arm;                             // type:ENUM.32BIT
};

struct CAIConditionInCover : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0x7B6B64AB;                     // type:BOOL.0
	bool                             _0x934B1080;                     // type:BOOL.0
};

struct CAIConditionInInterior : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionInSameGroup : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
};

struct CAIConditionInSameInterior : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
	bool                             MustBeInInterior;                // type:BOOL.0
};

struct CAIConditionInSameVehicleOrMount : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
	bool                             ConsiderAttachments;             // type:BOOL.0
	bool                             ConsiderGroundEntities;          // type:BOOL.0
};

struct CAIConditionInVehicleSeat : CAICondition
{
	char                             SeatIndex;                       // type:CHAR.0
	bool                             UseLayout;                       // type:BOOL.0
};

struct CAIConditionIncidentSeverity : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	enum _0x655601C3                 MinSeverity;                     // type:ENUM.32BIT
	enum _0x655601C3                 MaxSeverity;                     // type:ENUM.32BIT
};

struct CAIConditionInteractionPersonality : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           InteractionPersonality;          // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIntimidationType : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x95842B4B                 Type;                            // type:ENUM.32BIT
	bool                             CheckIfIsOnFootType;             // type:BOOL.0
};

struct CAIConditionIsAIPerson : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           AIPersonID;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsAPlayerAiming : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	bool                             RequiresAimInput;                // type:BOOL.0
	bool                             RequiresWeapon;                  // type:BOOL.0
	uint                             MinTimeAimingMS;                 // type:UINT.0
};

struct CAIConditionIsAPlayerAimingAtEntity : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetEntity;                    // type:ENUM.32BIT
	bool                             RequiresWeapon;                  // type:BOOL.0
};

struct CAIConditionIsAPlayerControlledAnimal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsAimingAtTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	bool                             CheckUsingTargetting;            // type:BOOL.0
};

struct CAIConditionIsAmbientFriend : CAICondition
{
	enum _0x563FBCEA                 _0xCD2E7AA4;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x755C4AF9;                     // type:ENUM.32BIT
};

struct CAIConditionIsAnimal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x12673732                 DomesticatedLevel;               // type:ENUM.32BIT
	bool                             MustBeLivestock;                 // type:BOOL.0
};

struct CAIConditionIsAnimalTameable : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
};

struct CAIConditionIsAnimalUnalerted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsAttached : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsAttractedToBait : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsAttractedToBirdFeed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CAIConditionIsAttractedToFishingLure : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsBeingArrestedByAI : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsBeingDismounted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsBeingJacked : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsBird : CAICondition
{
};

struct CAIConditionIsBirdLanding : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsBlackwaterLawPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsBloody : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsBoat : CAICondition
{
	enum _0x563FBCEA                 Vehicle;                         // type:ENUM.32BIT
};

struct CAIConditionIsBountyHunter : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsCarryingEntityWithConfig : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           CarryConfigHash;                 // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsCarryingPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	uint                             _0x901C1701;                     // type:UINT.0
	bool                             CarriedPedMustBeInnocent;        // type:BOOL.0
	bool                             CarriedPedMustBeHuman;           // type:BOOL.0
	bool                             CarriedPedMustBeAnimal;          // type:BOOL.0
	bool                             CarriedPedMustBeGuard;           // type:BOOL.0
	bool                             CarriedPedMustHaveABounty;       // type:BOOL.0
	bool                             CarriedPedMustBeHogtied;         // type:BOOL.0
	bool                             CarriedPedMustBeDead;            // type:BOOL.0
	bool                             CarriedPedMustBeMale;            // type:BOOL.0
	bool                             CarriedPedMustBeFemale;          // type:BOOL.0
};

struct CAIConditionIsCarryingSkins : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsCastingUnderarm : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsChasingPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	bool                             MustBeGaining;                   // type:BOOL.0
};

struct CAIConditionIsClosestLawPedToPlayer : CAICondition
{
	enum _0x563FBCEA                 _0x81E70BD6;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	bool                             MustBeInSameInterior;            // type:BOOL.0
	bool                             CheckZDistance;                  // type:BOOL.0
	float                            _0x68F71828;                     // type:FLOAT.0
};

struct CAIConditionIsCompanion : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             CheckRelationshipGroup;          // type:BOOL.0
};

struct CAIConditionIsCompanionMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsCompositeEntityBase : CAICondition
{
};

struct CAIConditionIsConfronting : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsCoward : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsCrimeSceneFlagSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Criminal;                        // type:ENUM.32BIT
	bitset<enum _0x8C9BD833>         Flag;                            // type:BITSET.16BIT
};

struct CAIConditionIsCurrentOrLastPlayerTarget : CAICondition
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	uint                             UpperBound;                      // type:UINT.0
};

struct CAIConditionIsCurrentTimeInPersCharTODRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xB3AF4231                 RangeToCheck;                    // type:ENUM.32BIT
};

struct CAIConditionIsDead : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsDeputyPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsDispatchPhasePreviousPhase : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	string                           Phase;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsDraftAnimal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsDraftVehicleShotgunPassenger : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsDrawingWeapon : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsDrivingDraftVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsDrivingVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsDrunk : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            ValueToBeConsideredDrunk;        // type:FLOAT.0
};

struct CAIConditionIsDrunknessInRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionIsEasyPrey : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
};

struct CAIConditionIsEdiblePrey : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
	bool                             MustBeAlive;                     // type:BOOL.0
	bool                             MustBeDead;                      // type:BOOL.0
	bool                             MustBeLootable;                  // type:BOOL.0
	bool                             MustBePrey;                      // type:BOOL.0
	bool                             CheckCorpseCapacity;             // type:BOOL.0
	bool                             IgnoreAvoidanceVolumeCheck;      // type:BOOL.0
};

struct CAIConditionIsEntityBeingCarried : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionIsEntityBeingCarriedSpecific : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x7235D844;                     // type:ENUM.32BIT
	bool                             _0xD78A2931;                     // type:BOOL.0
	bool                             CarrierMustBeMount;              // type:BOOL.0
	bool                             CarrierMustBeLocalPlayer;        // type:BOOL.0
	bool                             _0x42D66407;                     // type:BOOL.0
	bool                             UseRiderAsCarrierIfCarrierIsMount; // type:BOOL.0
};

struct CAIConditionIsEntityOnFire : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	bool                             IsOnFire;                        // type:BOOL.0
};

struct CAIConditionIsEntityOnMyMind : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xF3FD8C14;                     // type:ENUM.32BIT
	enum _0x4D40591B                 Reason;                          // type:ENUM.32BIT
	float                            TimeLimitInSeconds;              // type:FLOAT.0
};

struct CAIConditionIsEntityOwnedByEntity : CAICondition
{
	enum _0x563FBCEA                 OwnerEntity;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 OwnedEntity;                     // type:ENUM.32BIT
};

struct CAIConditionIsEntityOwnedByGroupMemberOfPed : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsEvadingLaw : CAICondition
{
};

struct CAIConditionIsExitingScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             MustBeForThreatResponse;         // type:BOOL.0
};

struct CAIConditionIsFemale : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsFish : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsFishingFromBoat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsFixed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsFlying : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsFollowingRoute : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             IsTrue;                          // type:BOOL.0
};

struct CAIConditionIsFriendlyWith : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
	bool                             UseDefaultFriendlyCheck;         // type:BOOL.0
	bool                             IncludeRespect;                  // type:BOOL.0
	bool                             IncludeScenarios;                // type:BOOL.0
};

struct CAIConditionIsFromPrompt : CAICondition
{
	string                           PromptText;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsGenericSkinningSize : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x4B992707                 Size;                            // type:ENUM.32BIT
};

struct CAIConditionIsGesturing : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsGettingUp : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsGroupLeader : CAICondition
{
	enum _0x563FBCEA                 GroupMember;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 GroupLeader;                     // type:ENUM.32BIT
};

struct CAIConditionIsGuard : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsGunshotThreateningToPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsHitched : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	array<string>                    ScenarioHashes;                  // type:ARRAY.ATARRAY
};

struct CAIConditionIsHogtied : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsHorse : _0xA5D4CB80
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsHorseAllowedToKick : CAICondition
{
	enum _0x563FBCEA                 Horse;                           // type:ENUM.32BIT
};

struct CAIConditionIsHorseInBadCondition : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsHorseInGoodCondition : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsHuman : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsHumming : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsIgnoringAgitator : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct CAIConditionIsInAVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInAnEscalatedFriendlyReactionArea : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsInAttackRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             IgnoreMinRange;                  // type:BOOL.0
};

struct CAIConditionIsInCity : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionIsInCombat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            MinTimeInCombat;                 // type:FLOAT.0
};

struct CAIConditionIsInCombatWithEntity : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	bool                             TaskMustBeActive;                // type:BOOL.0
	float                            MinTimeInCombat;                 // type:FLOAT.0
};

struct CAIConditionIsInConversation : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x54E5D0C1                 Type;                            // type:ENUM.32BIT
};

struct CAIConditionIsInCover : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x42338022>         Flags;                           // type:BITSET.16BIT
};

struct CAIConditionIsInDispute : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInDisputeWith : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct CAIConditionIsInDraftVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInGrappleChoke : CAICondition
{
	enum _0x563FBCEA                 Attacker;                        // type:ENUM.32BIT
	enum _0x563FBCEA                 Victim;                          // type:ENUM.32BIT
	bool                             OrTryingToChoke;                 // type:BOOL.0
	bool                             SkipVictim;                      // type:BOOL.0
};

struct CAIConditionIsInGuardZone : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInInteraction : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInInteractionWith : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct CAIConditionIsInInterior : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInLOS : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetEntity;                    // type:ENUM.32BIT
	bool                             ConsiderNotSureValid;            // type:BOOL.0
};

struct CAIConditionIsInNetworkSession : CAICondition
{
};

struct CAIConditionIsInPlayerGroup : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInTown : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionIsInVolume : CAICondition
{
	string                           VolumeName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsInWater : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsIncapacitated : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsIncidentInForest : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsIncidentTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CAIConditionIsIncidentTargetIdentified : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsInjured : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsInsideHazardScenarioEventReactionRadius : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
};

struct CAIConditionIsInteractionLockOnTarget : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	bool                             UseTargeting;                    // type:BOOL.0
	bool                             UseLocalPlayerAsFallback;        // type:BOOL.0
};

struct CAIConditionIsItemUnlocked : CAICondition
{
	string                           UnlockHash;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             SinglePlayer;                    // type:BOOL.0
	bool                             MultiPlayer;                     // type:BOOL.0
};

struct CAIConditionIsKilledByUnarmed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsLastMeleeTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CAIConditionIsLawDispatchLeader : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsLawEnforcement : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsLegendaryAnimal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsLootingRewardSetupActive : CAICondition
{
	string                           LootingSetup;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsMale : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsMetaPedType : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eMetaPedType                MetaPedType;                     // type:ENUM.32BIT
};

struct CAIConditionIsMissionPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsMountFasterThan : CAICondition
{
	enum _0x563FBCEA                 DriverPed;                       // type:ENUM.32BIT
	enum _0x23036FEE                 SpeedGait;                       // type:ENUM.32BIT
};

struct CAIConditionIsMovingToCover : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x42338022>         Flags;                           // type:BITSET.16BIT
};

struct CAIConditionIsMovingToTacticalPoint : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             AtPoint;                         // type:BOOL.0
	bitset<enum _0xCBF128D1>         DistributionFlags;               // type:BITSET.32BIT
};

struct CAIConditionIsMuddy : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsMultiplayerGame : CAICondition
{
};

struct CAIConditionIsObese : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsOnFoot : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsOnMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             RequireFancyMount;               // type:BOOL.0
};

struct CAIConditionIsOnPavementGraph : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xD6D8B257;                     // type:BOOL.0
	bool                             NotInWilderness;                 // type:BOOL.0
};

struct CAIConditionIsOnScreen : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	float                            _0x2D2A6B9B;                     // type:FLOAT.0
};

struct CAIConditionIsOnTrain : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPassengerInVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPassengerOnMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedClosestToCrimeSceneBody : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x81E70BD6;                     // type:ENUM.32BIT
	float                            MaxDistance;                     // type:FLOAT.0
	bool                             MustBeInSameInterior;            // type:BOOL.0
};

struct CAIConditionIsPedCommandHashActive : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Command;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsPedDeadThroughKnockout : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedDriver : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xFD958885;                     // type:BOOL.0
	bool                             _0xA53F6B78;                     // type:BOOL.0
};

struct CAIConditionIsPedEnemyToPlayer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedFleeingFromTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsPedInBoat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedInFirstPersonMode : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedInMinimalInteractionSeat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedInOwnedVolume : CAICondition
{
	enum _0x563FBCEA                 OwnerPed;                        // type:ENUM.32BIT
	enum _0x563FBCEA                 QueryPed;                        // type:ENUM.32BIT
	bitset<enum _0x156D36E6>         OwnershipFlags;                  // type:BITSET.32BIT
	bool                             CheckForMainOwnerOnly;           // type:BOOL.0
};

struct CAIConditionIsPedInRain : _0xDA1F7477
{
};

struct CAIConditionIsPedInShelteredVehicleSeat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedInterrogationWingman : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedKnockedOut : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionIsPedKnockedOutAndWillNeverWakeUp : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedLooting : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             LootedPedMustBeInnocent;         // type:BOOL.0
	bool                             LootedPedMustBeHuman;            // type:BOOL.0
	bool                             MustBeActivelyLooting;           // type:BOOL.0
};

struct CAIConditionIsPedMovingAway : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	float                            MinMBR;                          // type:FLOAT.0
	float                            DotThreshold;                    // type:FLOAT.0
};

struct CAIConditionIsPedMovingToward : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	float                            MinMBR;                          // type:FLOAT.0
	float                            DotThreshold;                    // type:FLOAT.0
};

struct CAIConditionIsPedOnMyVehicleRoof : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 DriverPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsPedOnTargetsLastMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CAIConditionIsPedParticipatingInCSISearch : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             AllowAnyPOISearch;               // type:BOOL.0
	bool                             AllowPursuitSearch;              // type:BOOL.0
};

struct CAIConditionIsPedSaddledHorse : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPedVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Vehicle;                         // type:ENUM.32BIT
};

struct CAIConditionIsPedWearingTag : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Tag;                             // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x45008A19;                     // type:BOOL.0
	bool                             IsStreamedIn;                    // type:BOOL.0
};

struct CAIConditionIsPennedFleeing : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPersChar : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsPersCharMoodSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xFD372C5C                 Mood;                            // type:ENUM.32BIT
	array<enum _0xFD372C5C>          Moods;                           // type:ARRAY.ATARRAY
};

struct CAIConditionIsPersPedInSameVolAsBulletImpact : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPersPedInSameVolAsTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CAIConditionIsPinkertonPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPinnedDown : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPlayer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPlayerChasingAnyPed : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	bool                             MustBeGaining;                   // type:BOOL.0
};

struct CAIConditionIsPlayerInForest : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsPlayerInTheWay : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsPlayerInVehicle : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionIsPlayerMoodSet : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xFD372C5C                 Mood;                            // type:ENUM.32BIT
	array<enum _0xFD372C5C>          Moods;                           // type:ARRAY.ATARRAY
};

struct CAIConditionIsPlayerMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	bool                             CheckRider;                      // type:BOOL.0
	bool                             CheckIsAnyTypeOfPlayerHorse;     // type:BOOL.0
};

struct CAIConditionIsPlayerOnAMission : CAICondition
{
};

struct CAIConditionIsPolicePed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsRansackScenarioEmpty : CAICondition
{
	int                              Volume;                          // type:INT.0
};

struct CAIConditionIsRansackScenarioFullySearched : CAICondition
{
};

struct CAIConditionIsRareAnimal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsReloading : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xDE389569;                     // type:BOOL.0
};

struct CAIConditionIsRenderedScorched : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionIsRoadblockPolicePed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsScenarioEntityBroken : CAICondition
{
};

struct CAIConditionIsScriptFlagActive : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	bitset<enum _0x392297FE>         ScriptEventFlags;                // type:BITSET.8BIT
};

struct CAIConditionIsSecondaryTaskRunning : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           TaskHash;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsSexyPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsSheriffPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsSleeping : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsSpeaking : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             IgnoreSpeechFlaggedToPlay;       // type:BOOL.0
};

struct CAIConditionIsStanding : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsSwimming : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsTargetInOurTerritory : CAICondition
{
	enum _0x563FBCEA                 TerritorialPed;                  // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsTargetInOurThreatArea : CAICondition
{
	enum _0x563FBCEA                 TerritorialPed;                  // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsTargetNearOurTerritory : CAICondition
{
	enum _0x563FBCEA                 TerritorialPed;                  // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsTargetSurrounded : CAICondition
{
	enum _0x563FBCEA                 AttackingPed;                    // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CAIConditionIsTaskRunning : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           TaskHash;                        // type:STRING.ATNONFINALHASHSTRING
	array<string>                    TaskList;                        // type:ARRAY.ATARRAY
	bool                             MustBeActive;                    // type:BOOL.0
	bool                             UseCache;                        // type:BOOL.0
};

struct CAIConditionIsTaskSequenceRunning : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             MustBeActive;                    // type:BOOL.0
};

struct CAIConditionIsThreatenedBy : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
	bool                             _0xAC7A8258;                     // type:BOOL.0
	bool                             _0xCA9A5162;                     // type:BOOL.0
	bool                             _0xF290F4F0;                     // type:BOOL.0
};

struct CAIConditionIsTrafficPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsUnderFire : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsUsingBusyScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsUsingRagdoll : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsUsingScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           ScenarioName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionIsUsingTerritoryScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsVehiclePulledByEntity : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PullingEntity;                   // type:ENUM.32BIT
};

struct CAIConditionIsWandering : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionIsWeaponPickup : CAICondition
{
	enum _0x45D394CD                 WeaponType;                      // type:ENUM.32BIT
};

struct CAIConditionIsWhistling : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionLassoedPedWasInSameVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 LassoedPed;                      // type:ENUM.32BIT
};

struct CAIConditionLastGreetContextPlayerSaidToPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
	array<string>                    SpeechContextList;               // type:ARRAY.ATARRAY
	uint                             MaxTimeSinceMS;                  // type:UINT.0
	bool                             MustHaveSpokenMostRecently;      // type:BOOL.0
};

struct CAIConditionLastHogtieWeapon : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           WeaponHash;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionLastSpeechContextLeaderSaidToPlayer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
	array<string>                    SpeechContextList;               // type:ARRAY.ATARRAY
	uint                             MaxTimeSinceMS;                  // type:UINT.0
	bool                             MustHaveSpokenMostRecently;      // type:BOOL.0
};

struct CAIConditionLastSpeechContextPedSaidToPlayer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
	array<string>                    SpeechContextList;               // type:ARRAY.ATARRAY
	uint                             MaxTimeSinceMS;                  // type:UINT.0
	bool                             MustHaveSpokenMostRecently;      // type:BOOL.0
};

struct CAIConditionLastSpeechContextPlayerSaidToPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
	array<string>                    SpeechContextList;               // type:ARRAY.ATARRAY
	uint                             MaxTimeSinceMS;                  // type:UINT.0
	bool                             MustHaveSpokenMostRecently;      // type:BOOL.0
};

struct CAIConditionLocoHasAnyPropOnWeaponAttachPoints : CAICondition
{
	enum _0x563FBCEA                   Ped;                             // type:ENUM.32BIT
	array<string>                      PropSets;                        // type:ARRAY.ATARRAY
	array<enum eWeaponAttachPoint>     WeaponAttachPoints;              // type:ARRAY.ATARRAY
};

struct CAIConditionLocoHasProp : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           PropSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionLocoHasPropOnWeaponAttachPoints : CAICondition
{
	enum _0x563FBCEA                   Ped;                             // type:ENUM.32BIT
	string                             PropSet;                         // type:STRING.ATNONFINALHASHSTRING
	array<enum eWeaponAttachPoint>     WeaponAttachPoints;              // type:ARRAY.ATARRAY
};

struct CAIConditionMatchCarryConfigAtAttachSlot : CAICondition
{
	enum _0x563FBCEA                 Parent;                          // type:ENUM.32BIT
	string                           CarryConfig;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x058649C5                 Slot;                            // type:ENUM.32BIT
	bool                             CheckAnyConfig;                  // type:BOOL.0
};

struct CAIConditionMatchPedDecorator : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           DecoratorToMatch;                // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionMatchScenarioEntityDecorator : CAICondition
{
	string                           DecoratorToMatch;                // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionMatchStringDecorator : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	string                           DecoratorKey;                    // type:STRING.ATNONFINALHASHSTRING
	string                           DecoratorValue;                  // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionMeleeTargetWillFight : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionModel : _0xA5D4CB80
{
	struct void                      ModelSet;                        // type:STRUCT.EXTERNAL_NAMED
};

struct CAIConditionModelName : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionModelNameInList : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	array<string>                    ModelNames;                      // type:ARRAY.ATARRAY
};

struct CAIConditionMotionStyleCurrent : CAICondition
{
	string                           Style;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionMotivationWithinRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	enum _0x705A8B9B                 Motivation;                      // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             UseDirectedMotivation;           // type:BOOL.0
};

struct CAIConditionMountGait : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xC6AB2DAA                 Gait;                            // type:ENUM.32BIT
};

struct CAIConditionMountSpeed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x7252FBF4                 Speed;                           // type:ENUM.32BIT
};

struct CAIConditionMountedPlayerCanFendOffPredators : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionMovementModeType : CAICondition
{
	enum MovementModeType            MovementModeType;                // type:ENUM.32BIT
	string                           MovementModeIdle;                // type:STRING.ATNONFINALHASHSTRING
	bool                             HighEnergy;                      // type:BOOL.0
};

struct CAIConditionNeedToCreatePreEnterProps : CAICondition
{
	array<string>                    Id;                              // type:ARRAY.ATARRAY
};

struct CAIConditionNeedToDestroyPreEnterProps : CAICondition
{
	array<string>                    Id;                              // type:ARRAY.ATARRAY
};

struct CAIConditionNode : _0x673DCB64
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CAIConditionNodeAny : _0x673DCB64
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CAIConditionNot : CAICondition
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CAIConditionNumCombatDirectorTargetsMarkedForDeath : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionNumEntitiesInCompositeLootable : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	uint                             MinEntities;                     // type:UINT.0
	uint                             MaxEntities;                     // type:UINT.0
	bool                             UnlootedOnly;                    // type:BOOL.0
};

struct CAIConditionNumPedsInCombatDirectorIsInRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
	struct CAICondition              Filter;                          // type:STRUCT.POINTER
};

struct CAIConditionNumPedsInCombatWithPlayer : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	uint                             MinPeds;                         // type:UINT.0
	uint                             MaxPeds;                         // type:UINT.0
	bool                             ShootingEnemies;                 // type:BOOL.0
	bool                             MeleeEnemies;                    // type:BOOL.0
	bool                             HumanMeleeEnemies;               // type:BOOL.0
	bool                             _0x0954A09C;                     // type:BOOL.0
	bool                             NotArresting;                    // type:BOOL.0
};

struct CAIConditionNumPedsPlayerHasKnockedOver : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	uint                             NumPeds;                         // type:UINT.0
};

struct CAIConditionNumPiecesOfCrimeSceneEvidence : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	uint                             MinEvidenceCount;                // type:UINT.0
	uint                             _0x6058BC50;                     // type:UINT.0
};

struct CAIConditionNumSpectatorsLessThan : CAICondition
{
	uint                             Count;                           // type:UINT.0
};

struct CAIConditionNumThreatsInCombatDirectorIsInRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionNumTimesDispatchPhaseSelected : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	string                           Phase;                           // type:STRING.ATNONFINALHASHSTRING
	char                             LowerBound;                      // type:CHAR.0
	char                             UpperBound;                      // type:CHAR.0
};

struct CAIConditionOneHandedWeaponEquipped : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
};

struct CAIConditionOr : _0x2CDD99AB
{
	int                              lastEvaluatedConditionIndex;     // type:INT.0
};

struct CAIConditionOutsidePercentageOfSensoryRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            PctAudioRange;                   // type:FLOAT.0
	float                            PctVisualRange;                  // type:FLOAT.0
};

struct CAIConditionOwnerIsWithinRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Range;                           // type:FLOAT.0
};

struct CAIConditionPackAttackCurrentState : CAICondition
{
	enum _0x9EDED34A                 State;                           // type:ENUM.32BIT
};

struct CAIConditionPackPermitsAttack : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	bool                             CheckIntensityConditions;        // type:BOOL.0
};

struct CAIConditionParticipantExclusive : CAICondition
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CAIConditionPedCanBeIntimidatedDuringFlee : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPedCanPlayBumpReactionFromPlayer : CAICondition
{
	enum _0x563FBCEA                 _0x7D20A31E;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CAIConditionPedDirectionAngle : _0xCAAD7E2F
{
};

struct CAIConditionPedDirectionAngleWithOffset : _0xCAAD7E2F
{
	vec3                             Offset;                          // type:VECTOR3.0
};

struct CAIConditionPedGroupLeader : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPedHadSimpleMemoryBefore : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x8B2BD05B                 FirstMemory;                     // type:ENUM.32BIT
	enum _0x8B2BD05B                 SecondMemory;                    // type:ENUM.32BIT
};

struct CAIConditionPedHadSimpleMemoryForPlayerBefore : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x62A8CB86                 FirstMemory;                     // type:ENUM.32BIT
	enum _0x62A8CB86                 SecondMemory;                    // type:ENUM.32BIT
};

struct CAIConditionPedHasAIMemory : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	struct _0xABB31B99               Filter;                          // type:STRUCT.POINTER
	string                           StaticFilterName;                // type:STRING.ATNONFINALHASHSTRING
	uint                             MinOccurrences;                  // type:UINT.0
	uint                             _0x126421AF;                     // type:UINT.0
};

struct CAIConditionPedHasPlayedSilentSpeech : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              QueryTimeMS;                     // type:INT.0
};

struct CAIConditionPedHasRobberyMemory : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 SourcePed;                       // type:ENUM.32BIT
	enum _0x8C92AFD0                 MemoryType;                      // type:ENUM.32BIT
	int                              QueryTimeMS;                     // type:INT.0
	int                              CountMin;                        // type:INT.0
	int                              CountMax;                        // type:INT.0
};

struct CAIConditionPedHasSimpleMemory : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x8B2BD05B                 MemoryType;                      // type:ENUM.32BIT
	int                              QueryTimeMS;                     // type:INT.0
	uint                             MinTimeMS;                       // type:UINT.0
	bool                             IgnoreQueryTime;                 // type:BOOL.0
	bool                             CheckFutureTimer;                // type:BOOL.0
};

struct CAIConditionPedHasSimpleMemoryForPlayer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x62A8CB86                 MemoryType;                      // type:ENUM.32BIT
	bool                             CheckFutureTimer;                // type:BOOL.0
	uint                             QueryTimeMS;                     // type:UINT.0
	uint                             MinTimeMS;                       // type:UINT.0
};

struct CAIConditionPedHealthPercentageInRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionPedHorseDistance : CAICondition
{
	enum _0x563FBCEA                 PedWithHorse;                    // type:ENUM.32BIT
	enum _0x563FBCEA                 PedToMeasure;                    // type:ENUM.32BIT
	float                            MinDistToHorse;                  // type:FLOAT.0
	float                            MaxDistToHorse;                  // type:FLOAT.0
};

struct CAIConditionPedIsAimingInAir : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPedIsInVolume : CAICondition
{
	string                           VolumeName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionPedIsInVolumeWithPropertyFlag : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x2B63257B                 PropertyFlag;                    // type:ENUM.32BIT
};

struct CAIConditionPedIsSaddledPlayerMount : CAICondition
{
	enum _0x563FBCEA                 Mount;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPedIsUnderAttackFromBehind : CAICondition
{
	enum _0x563FBCEA                 PedInCombat;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 PedToCheck;                      // type:ENUM.32BIT
	bool                             _0x6E141E0C;                     // type:BOOL.0
	bool                             AttackerMustHaveLOS;             // type:BOOL.0
};

struct CAIConditionPedOnMountCover : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             IsTrue;                          // type:BOOL.0
};

struct CAIConditionPedShouldUseDownedLootBlips : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPedSize : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x5066C50A                 Size;                            // type:ENUM.32BIT
};

struct CAIConditionPedTimeSpentStill : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Time;                            // type:FLOAT.0
};

struct CAIConditionPedWanted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             ActiveWantedOnly;                // type:BOOL.0
	float                            BountyGreaterThan;               // type:FLOAT.0
	float                            BountyLessThanOrEqualTo;         // type:FLOAT.0
};

struct CAIConditionPedWantedLevel : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              From;                            // type:INT.0
	int                              To;                              // type:INT.0
};

struct CAIConditionPedsRemainingInCurrentIncident : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	enum DispatchType                DispatchType;                    // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionPercentCombatDirectorPedsNeedingToBreachInterior : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionPercentCombatDirectorPedsNeedingToClimbToTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionPercentCombatDirectorPedsWithNoRouteToTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	uint                             TimeWithoutRoute;                // type:UINT.0
};

struct CAIConditionPercentCombatDirectorTargetsFleeing : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionPercentCombatDirectorTargetsLoitering : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionPercentThreatsInInteriorIsInRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	float                            Distance;                        // type:FLOAT.0
	bool                             MustBeKnown;                     // type:BOOL.0
};

struct CAIConditionPlayerCanPlayBumpReaction : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
};

struct CAIConditionPlayerDamagedOrFiredOnLaw : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
};

struct CAIConditionPlayerFallHeight : CAICondition
{
	float                            UpperBound;                      // type:FLOAT.0
	float                            LowerBound;                      // type:FLOAT.0
};

struct CAIConditionPlayerHasBooleanStat : CAICondition
{
	struct StatId                    StatId;                          // type:STRUCT.STRUCTURE
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionPlayerHasMeleeInteractionPromptShowing : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CAIConditionPlayerHasSimpleMemory : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x6ED55512                 MemoryType;                      // type:ENUM.32BIT
	bool                             CheckFutureTimer;                // type:BOOL.0
	int                              QueryTimeMS;                     // type:INT.0
};

struct CAIConditionPlayerHasSpaceForIdle : CAICondition
{
};

struct CAIConditionPlayerHuntingLoad : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionPlayerIsDeadeyeActive : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPlayerWasHostileTowardsLaw : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
};

struct CAIConditionPointDirectionAngle : _0xCAAD7E2F
{
};

struct CAIConditionPropDofFloatValue : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           PropId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           DofName;                         // type:STRING.ATSTRING
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionPropInLeftHand : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPropInRightHand : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionPropsRequiredToEnter : CAICondition
{
	array<string>                    Id;                              // type:ARRAY.ATARRAY
};

struct CAIConditionQuickHumanLootingEnabled : CAICondition
{
};

struct CAIConditionQuickHumanRevivesEnabled : CAICondition
{
};

struct CAIConditionRaining : _0xDA1F7477
{
	float                            RainAmount;                      // type:FLOAT.0
};

struct CAIConditionRandom : CAICondition
{
	float                            Chances;                         // type:FLOAT.0
};

struct CAIConditionRandomTimeSinceConditionalAnimsChange : CAICondition
{
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct CAIConditionReferenced : CAICondition
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionRegionFameInRange : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionRemainingPathDistance : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             OrNotPathing;                    // type:BOOL.0
	bool                             _0x61E7B534;                     // type:BOOL.0
	bool                             Direct;                          // type:BOOL.0
};

struct CAIConditionRemainingPathLengthToTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            _0xCD07E07F;                     // type:FLOAT.0
	float                            MaxRatio;                        // type:FLOAT.0
};

struct CAIConditionReward : CRewards
{
	struct CAICondition              condition;                       // type:STRUCT.POINTER
	struct CBaseReward               successReward;                   // type:STRUCT.POINTER
	struct CBaseReward               failureReward;                   // type:STRUCT.POINTER
};

struct CAIConditionRoadNodeDensityWithBounds : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	uchar                            MinDensity;                      // type:UCHAR.0
	uchar                            MaxDensity;                      // type:UCHAR.0
};

struct CAIConditionRouteToTargetObstructedByLockedDoor : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionSameEntity : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
};

struct CAIConditionSameSpecies : CAICondition
{
	enum _0x563FBCEA                 PedA;                            // type:ENUM.32BIT
	enum _0x563FBCEA                 PedB;                            // type:ENUM.32BIT
};

struct CAIConditionSandStorm : _0xDA1F7477
{
	float                            SandStorm;                       // type:FLOAT.0
};

struct CAIConditionSawPlayerPutOnDisguise : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
};

struct CAIConditionScenarioActivityTypeCheck : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xE52A9E81                 ActivityType;                    // type:ENUM.32BIT
	bool                             UseNextScenarioPoint;            // type:BOOL.0
};

struct CAIConditionScenarioPointCategoryHash : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Category;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             UseNextScenarioPoint;            // type:BOOL.0
	bool                             _0xA4406B89;                     // type:BOOL.0
	bool                             _0xEFEA82B1;                     // type:BOOL.0
};

struct CAIConditionScenarioPointHasNoProp : CAICondition
{
};

struct CAIConditionScenarioPointHasProp : CAICondition
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionScenarioPointPropDofFloatValue : CAICondition
{
	string                           PropId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           DofName;                         // type:STRING.ATSTRING
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionScenarioVariation : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           animationCategory;               // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionSharedTargetingTargetsLastKnownInGuardZone : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionSharedTargetingTargetsVisible : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	uint                             _0x33F15C3E;                     // type:UINT.0
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionSharedTargettingTargetsKnown : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	uint                             TimeSinceKnown;                  // type:UINT.0
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionSharedTargettingTargetsLost : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionShockingEventRecentlyRespondedTo : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldBehaveLikeLaw : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldGreetPlayer : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldGreetWithAudioInGroupReply : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            ChanceToGreet;                   // type:FLOAT.0
	bool                             AllowScriptOverride;             // type:BOOL.0
};

struct CAIConditionShouldPlayUrgentSpeech : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldReactSilentlyToWeaponAimedAt : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldReactSilentlyToWeaponEquipped : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldSilentlyGreetPlayer : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldSpeakAtSameTimeAsFriendly : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldSpeechTriggerGesturesOnHorseback : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionShouldTriggerHazardWarning : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
};

struct CAIConditionSnowing : _0xDA1F7477
{
	float                            SnowAmount;                      // type:FLOAT.0
};

struct CAIConditionSourceOfDeath : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0xC0B6A160>         WeaponInfoFlags;                 // type:BITSET.32BIT
	enum eDamageType                 DamageType;                      // type:ENUM.32BIT
};

struct CAIConditionSpecies : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           SpeciesName;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionSpeed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x9FB63BD7                 Speed;                           // type:ENUM.32BIT
};

struct CAIConditionSpottedByLaw : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionStealth : CAICondition
{
};

struct CAIConditionSubContextCarriedPed : CAICondition
{
	enum _0x563FBCEA                 CarryingPed;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 DestinationSlot;                 // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CAIConditionSubContextClosestThreat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 DestinationSlot;                 // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CAIConditionSubContextGroupLeader : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CAIConditionSunny : _0xDA1F7477
{
};

struct CAIConditionSynced : CAICondition
{
};

struct CAIConditionTakeSampleEnabled : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionTargetWhereaboutsKnown : CAICondition
{
	enum _0x563FBCEA                 TargetingPed;                    // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetedPed;                     // type:ENUM.32BIT
};

struct CAIConditionTargetingPed : CAICondition
{
	enum _0x563FBCEA                 TargetingPed;                    // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetedPed;                     // type:ENUM.32BIT
};

struct CAIConditionTemperature : _0xDA1F7477
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionThreatTooCloseToAnimal : CAICondition
{
	enum _0x563FBCEA                 AnimalPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 Threat;                          // type:ENUM.32BIT
	float                            DistanceThreshold;               // type:FLOAT.0
	float                            FistPersonMultiplier;            // type:FLOAT.0
};

struct CAIConditionTime : _0xDA1F7477
{
	bitset<enum _0x1BB7D173>         Hours;                           // type:BITSET.32BIT
};

struct CAIConditionTimeEvading : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionTimeInDispatchPhase : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	uint                             LowerBound;                      // type:UINT.0
	uint                             UpperBound;                      // type:UINT.0
};

struct CAIConditionTimeInTask : CAICondition
{
	float                            Threshold;                       // type:FLOAT.0
};

struct CAIConditionTimeIntoSpeech : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionTimeLeftInScenario : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
	bool                             UseTimeOfDay;                    // type:BOOL.0
};

struct CAIConditionTimeOfDay : CAICondition
{
	int                              startHour;                       // type:INT.0
	int                              endHour;                         // type:INT.0
};

struct CAIConditionTimeOfDayWithMinutes : CAICondition
{
	int                              startHour;                       // type:INT.0
	int                              startMinute;                     // type:INT.0
	int                              endHour;                         // type:INT.0
	int                              endMinute;                       // type:INT.0
};

struct CAIConditionTimePlayerHostileInDispatchPhase : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	uint                             LowerBound;                      // type:UINT.0
	uint                             UpperBound;                      // type:UINT.0
};

struct CAIConditionTimeSinceAcquiredHorse : CAICondition
{
	enum _0x563FBCEA                 Rider;                           // type:ENUM.32BIT
	uint                             _0x39405DCA;                     // type:UINT.0
	uint                             MinGameDaysSince;                // type:UINT.0
	uint                             _0x17AFBDBA;                     // type:UINT.0
	uint                             MaxGameDaysSince;                // type:UINT.0
	uint                             _0x6364E142;                     // type:UINT.0
	uint                             MinGameDaysSincePrevious;        // type:UINT.0
	uint                             _0x6BFC0B30;                     // type:UINT.0
	uint                             _0xE2C808AA;                     // type:UINT.0
	bool                             _0xC6AA6901;                     // type:BOOL.0
};

struct CAIConditionTimeSinceArrestFinished : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	uint                             Time;                            // type:UINT.0
};

struct CAIConditionTimeSinceBountyAcquired : CAICondition
{
	uint                             _0x1B6982EE;                     // type:UINT.0
	uint                             TimeLessThanOrEqualTo;           // type:UINT.0
};

struct CAIConditionTimeSinceDismountedHorse : CAICondition
{
	enum _0x563FBCEA                 Mount;                           // type:ENUM.32BIT
	uint                             _0x39405DCA;                     // type:UINT.0
	uint                             MinGameDaysSince;                // type:UINT.0
	uint                             _0x17AFBDBA;                     // type:UINT.0
	uint                             MaxGameDaysSince;                // type:UINT.0
};

struct CAIConditionTimeSinceHorseBreakingWeakGrip : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionTimeSinceHorseLastDismounted : CAICondition
{
	enum _0x563FBCEA                 Horse;                           // type:ENUM.32BIT
	uint                             _0xECB4265A;                     // type:UINT.0
	bool                             ValidIfNonZero;                  // type:BOOL.0
};

struct CAIConditionTimeSincePedKilled : CAICondition
{
	enum _0x563FBCEA                 VictimPed;                       // type:ENUM.32BIT
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionTimeTargetNotVisible : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	uint                             MinTimeNotVisibleMS;             // type:UINT.0
	uint                             _0x28E10FA0;                     // type:UINT.0
};

struct CAIConditionTimesGreetedByPlayer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct CAIConditionTrue : CAICondition
{
};

struct CAIConditionTwoHandedWeaponEquipped : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	bool                             CheckPendingOnly;                // type:BOOL.0
	bool                             CheckPendingToo;                 // type:BOOL.0
};

struct CAIConditionUsingActionMode : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionVehicleBraking : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	float                            MinVelo;                         // type:FLOAT.0
};

struct CAIConditionVehicleCanSafelyStop : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CAIConditionVehicleCompartmentState : CAICondition
{
	enum _0x563FBCEA                 Vehicle;                         // type:ENUM.32BIT
	enum _0x5AF08F50                 State;                           // type:ENUM.32BIT
};

struct CAIConditionVehicleExtraIsOn : CAICondition
{
	enum _0x563FBCEA                 Vehicle;                         // type:ENUM.32BIT
	enum _0xBEEA6142                 Id;                              // type:ENUM.32BIT
};

struct CAIConditionVehicleHasDriver : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	bool                             _0xFD958885;                     // type:BOOL.0
	bool                             _0xA53F6B78;                     // type:BOOL.0
	bool                             IncludeDead;                     // type:BOOL.0
};

struct CAIConditionVehicleHasPedInAnySeat : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIConditionVehicleType : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	enum VehicleType                 VehicleType;                     // type:ENUM.32BIT
	bool                             MustBeSwank;                     // type:BOOL.0
};

struct CAIConditionVelocityWithinRange : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct CAIConditionWantedHasReportedCrimeInQueue : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	bool                             MustBeOnlyReportedCrime;         // type:BOOL.0
	string                           Crime;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CAIConditionWantedInterrogator : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 Interrogator;                    // type:ENUM.32BIT
};

struct CAIConditionWantedLevel : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	int                              WantedScoreLowerBound;           // type:INT.0
	int                              _0x2B9A70AE;                     // type:INT.0
	char                             WantedLevelLowerBound;           // type:CHAR.0
	char                             WantedLevelUpperBound;           // type:CHAR.0
};

struct CAIConditionWantedPursuit : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 ObservingPed;                    // type:ENUM.32BIT
	bool                             AllowActivePursuit;              // type:BOOL.0
	bool                             AllowDismissedSuspect;           // type:BOOL.0
	bool                             AllowPassivePursuit;             // type:BOOL.0
	bool                             CheckIfDisguised;                // type:BOOL.0
};

struct CAIConditionWantsToExitScenario : CAICondition
{
	enum _0x0A1A2A84                 MinPriority;                     // type:ENUM.32BIT
	enum _0x0A1A2A84                 _0x39B59F4C;                     // type:ENUM.32BIT
};

struct CAIConditionWasAimedAtByPlayer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             _0x5D113BD5;                     // type:BOOL.0
};

struct CAIConditionWasPedKilledByPed : CAICondition
{
	enum _0x563FBCEA                 KillerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 VictimPed;                       // type:ENUM.32BIT
};

struct CAIConditionWeaponHasDamageType : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eDamageType                 DamageType;                      // type:ENUM.32BIT
};

struct CAIConditionWet : CAICondition
{
};

struct CAIConditionWillMeleeActionResultInDeath : CAICondition
{
};

struct CAIConditionWillMeleeActionResultInKnockout : CAICondition
{
};

struct CAIConditionWindy : _0xDA1F7477
{
	float                            WindSpeed;                       // type:FLOAT.0
};

struct CAIConditionWitnessLeader : CAICondition
{
	enum _0x563FBCEA                 WitnessPed;                      // type:ENUM.32BIT
	bool                             HasAnyLeader;                    // type:BOOL.0
};

struct CAIConditionWorldPosWithinSphere : CAICondition
{
	struct rage__spdSphere           Sphere;                          // type:STRUCT.STRUCTURE
};

struct CAIConstantNode : _0x673DCB64
{
	enum _0x1C790656                 Result;                          // type:ENUM.32BIT
};

struct CAICurvePoint
{
	float                            Angle;                           // type:FLOAT.0
	float                            Speed;                           // type:FLOAT.0
};

struct CAIFSMNode : _0x4D892A30
{
};

struct CAIFSMTransitionNode : _0xEB587558
{
	string                           State;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CAIHandlingInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            MinBrakeDistance;                // type:FLOAT.0
	float                            MaxBrakeDistance;                // type:FLOAT.0
	float                            MaxSpeedAtBrakeDistance;         // type:FLOAT.0
	float                            AbsoluteMinSpeed;                // type:FLOAT.0
	array<struct CAICurvePoint>      AICurvePoints;                   // type:ARRAY.ATARRAY
};

struct CAIHandlingInfoMgr
{
	array<struct CAIHandlingInfo>     AIHandlingInfos;                 // type:ARRAY.ATARRAY
};

struct CAIIsAReportingWitness : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             MustBeKnown;                     // type:BOOL.0
	bool                             _0xC26308F9;                     // type:BOOL.0
	bool                             _0xB6D52C27;                     // type:BOOL.0
};

struct CAIKnowledgeAttributeSetDictionary
{
	map<string, struct _0xAC46FDA5>     KnownObjectsMap;                 // type:MAP.ATBINARYMAP
};

struct CAIMarkupDictionary
{
	array<struct CAIMarkupObject>     Objects;                         // type:ARRAY.ATARRAY
};

struct CAIMarkupInfoChildren : _0x2D57BE23
{
	array<struct CAIMarkupObject>     Children;                        // type:ARRAY.ATARRAY
};

struct CAIMarkupInfoCombatProgram : _0x2D57BE23
{
	string                           Event;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CAIMarkupInfoDictionaryRef : _0x2D57BE23
{
	string                           FileName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAIMarkupInfoFlee : _0x2D57BE23
{
	bitset<enum _0xFFFE6F22>         Flags;                           // type:BITSET.32BIT
};

struct CAIMarkupInfoModifier : _0x2D57BE23
{
	float                            Modifier;                        // type:FLOAT.0
};

struct CAIMarkupInfoTactical : _0x2D57BE23
{
	bitset<enum _0x55073925>         Flags;                           // type:BITSET.32BIT
	int                              MaxBreachers;                    // type:INT.0
	int                              MinBreachers;                    // type:INT.0
};

struct CAIMarkupInfoTacticalPoint : _0x2D57BE23
{
	bitset<enum _0xD76B0DE6>         Flags;                           // type:BITSET.32BIT
	float                            IdentificationDistance;          // type:FLOAT.0
};

struct CAIMarkupObject
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x2D57BE23>        Info;                            // type:ARRAY.ATARRAY
	bitset<enum _0x55737B73>         Flags;                           // type:BITSET.32BIT
	struct _0x4AAC5C2A               Spatial;                         // type:STRUCT.POINTER
};

struct CAIMarkupSpatialInfinite : _0x4AAC5C2A
{
};

struct CAIMarkupSpatialPoint : _0x4AAC5C2A
{
	vec3                             Position;                        // type:VECTOR3.0
};

struct CAIMarkupSpatialVolume : _0x4AAC5C2A
{
	vec3                             Position;                        // type:VECTOR3.0
	vec3                             Orientation;                     // type:VECTOR3.0
	vec3                             Scale;                           // type:VECTOR3.0
};

struct CAIMeleeDamageReactionSensorNode : _0xEB587558
{
	array<string>                    DamageReactions;                 // type:ARRAY.ATARRAY
	float                            Threshold;                       // type:FLOAT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            DecayRate;                       // type:FLOAT.0
};

struct CAIMemoryEntityInfoDictionary
{
	map<string, struct _0xC159B717>     GroupInfoMap;                    // type:MAP.ATBINARYMAP
	map<string, struct _0x486331A0>     PersonInfoMap;                   // type:MAP.ATBINARYMAP
};

struct CAIMemoryFactFilterDaysSince : _0x3F8365DA
{
	uint                             MinDaysSince;                    // type:UINT.0
	uint                             MaxDaysSince;                    // type:UINT.0
};

struct CAIMemoryFactFilterFieldMatchesEntity : _0x3F8365DA
{
	enum _0xAE7C439F                 Field;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct CAIMemoryFactFilterHappenedToday : _0x3F8365DA
{
};

struct CAIMemoryFactFilterHasKnowledgeAttribute : _0x3F8365DA
{
	enum _0xAE7C439F                 Field;                           // type:ENUM.32BIT
	string                           AttributeName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct CAIMemoryFactFilterIndirectObject : _0x3F8365DA
{
	string                           _0x3AE530FD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CAIMemoryFactFilterIsFieldInMyGroup : _0x3F8365DA
{
	enum _0xAE7C439F                 Field;                           // type:ENUM.32BIT
};

struct CAIMemoryFactFilterIsMe : _0x3F8365DA
{
	enum _0xAE7C439F                 Field;                           // type:ENUM.32BIT
};

struct CAIMemoryFactFilterIsMyGroup : _0x3F8365DA
{
	enum _0xAE7C439F                 Field;                           // type:ENUM.32BIT
};

struct CAIMemoryFactFilterLocationIsHome : _0x3F8365DA
{
};

struct CAIMemoryFactFilterLocationIsOwnedByMe : _0x3F8365DA
{
};

struct CAIMemoryFactFilterObject : _0x3F8365DA
{
	string                           ObjectName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAIMemoryFactFilterSetDictionary
{
	map<string, struct _0xC744C8E7>     FilterSetMap;                    // type:MAP.ATBINARYMAP
	map<string, struct _0x5DA78944>     StaticFilterMap;                 // type:MAP.ATBINARYMAP
};

struct CAIMemoryFactFilterSubject : _0x3F8365DA
{
	string                           SubjectName;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CAIMemoryFactFilterTimeInRange : _0x3F8365DA
{
	uint                             MinMinutesSince;                 // type:UINT.0
	uint                             MaxMinutesSince;                 // type:UINT.0
};

struct CAIMemoryFactFilterVerb : _0x3F8365DA
{
	enum _0x6449EEE7                 VerbName;                        // type:ENUM.32BIT
};

struct CAIMemoryFilterAnd : _0xED138DAF
{
};

struct CAIMemoryFilterNot : _0xABB31B99
{
	struct _0xABB31B99               Filter;                          // type:STRUCT.POINTER
};

struct CAIMemoryFilterObservation : _0xABB31B99
{
	enum _0xB34C4879                 ObservationType;                 // type:ENUM.32BIT
};

struct CAIMemoryFilterOr : _0xED138DAF
{
};

struct CAIMemoryFilterStatic : _0xABB31B99
{
	string                           FilterName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CAINotNode : _0x673DCB64
{
};

struct CAIParallelNode : _0x4D892A30
{
	bool                             AllPass;                         // type:BOOL.0
};

struct CAIProgram : _0x673DCB64
{
	string                           FilePath;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CAISelectContextNode : _0x673DCB64
{
	string                           ContextName;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CAISelectorNode : _0x4D892A30
{
};

struct CAISequenceNode : _0x4D892A30
{
};

struct CAISpeed
{
	float                            Mag;                             // type:FLOAT.0
	enum _0x23036FEE                 Gait;                            // type:ENUM.32BIT
	enum _0x2E68F909                 Type;                            // type:ENUM.32BIT
};

struct CAITextNode : _0x673DCB64
{
	string                           Text;                            // type:STRING.ATSTRING
};

struct CAITimerNode : _0x673DCB64
{
	uint                             Duration;                        // type:UINT.0
};

struct CAIWaitNode : _0x673DCB64
{
	bool                             ResetOnFailure;                  // type:BOOL.0
};

struct CActionBranch
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x76382FA4>         Filter;                          // type:BITSET.32BIT
};

struct CActionBranchSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CActionBranch>      aActionBranches;                 // type:ARRAY.ATARRAY
	bitset<enum _0x02D4E122>         BranchAttrs;                     // type:BITSET.32BIT
};

struct CActionBranchSetContainer
{
	map<string, struct CActionBranchSet>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionCamera
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    CameraAnimLeft;                  // type:ARRAY.ATARRAY
	array<string>                    CameraAnimRight;                 // type:ARRAY.ATARRAY
	float                            PlayerRelativeHeadingDuringBlendout; // type:FLOAT.0
	int                              OverrideBlendInDuration;         // type:INT.0
	int                              OverrideBlendOutDuration;        // type:INT.0
	bool                             UseCatchUpOnCompletion;          // type:BOOL.0
	bool                             AlwaysUpdateSceneOriginOrientation; // type:BOOL.0
	bool                             IsLooped;                        // type:BOOL.0
	bool                             UseSmallerCollisionTestRadius;   // type:BOOL.0
	bool                             RaiseCamPositionSlightlyForCollisionTest; // type:BOOL.0
	bool                             UseSceneOriginForRelativeHeadingDuringBlendout; // type:BOOL.0
};

struct CActionCameraContainer
{
	map<string, struct CActionCamera>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionConfigInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x599B2D60>         ActionConfigFlags;               // type:BITSET.32BIT
};

struct CActionConfigInfoMgr
{
	array<struct CActionConfigInfo>     ActionConfigInfos;               // type:ARRAY.ATARRAY
};

struct CActionDefinition
{
	string                                    Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                    ImpulseTest;                     // type:STRING.ATNONFINALHASHSTRING
	string                                    InterrelationTest;               // type:STRING.ATNONFINALHASHSTRING
	string                                    SpecialConditionTest;            // type:STRING.ATNONFINALHASHSTRING
	string                                    ActionProbeTest;                 // type:STRING.ATNONFINALHASHSTRING
	array<struct CWeaponActionResultList>     aWeaponActionResultList;         // type:ARRAY.ATARRAY
	array<string>                             aBrawlingStyles;                 // type:ARRAY.ATARRAY
	struct _0x5B581DA6                        CondPedOther;                    // type:STRUCT.STRUCTURE
	bitset<enum _0x2538A9CA>                  ActionType;                      // type:BITSET.32BIT
	bitset<enum _0xB371AF74>                  DisableFlags;                    // type:BITSET.32BIT
	bitset<enum _0x76382FA4>                  SelfFilter;                      // type:BITSET.32BIT
	bitset<enum _0x8FC87130>                  TargetEntity;                    // type:BITSET.32BIT
	bitset<enum _0x21F00F8A>                  MovementSpeed;                   // type:BITSET.32BIT
	bitset<enum _0x4C899DA1>                  DesiredDirection;                // type:BITSET.32BIT
	bitset<enum _0xAA73DD0C>                  DefinitionAttrs;                 // type:BITSET.32BIT
	int                                       Priority;                        // type:INT.0
	char                                      SelectionRouletteBias;           // type:CHAR.0
	bool                                      Debug;                           // type:BOOL.0
};

struct CActionDefinitionContainer
{
	map<string, struct CActionDefinition>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionDefinitionSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x387E7294                 Type;                            // type:ENUM.32BIT
	array<string>                    aDefinitionIds;                  // type:ARRAY.ATARRAY
};

struct CActionDefinitionSetContainer
{
	map<string, struct CActionDefinitionSet>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionGrapple
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           IntroActionResult;               // type:STRING.ATNONFINALHASHSTRING
	string                           IdleActionResult;                // type:STRING.ATNONFINALHASHSTRING
	string                           OutroActionResult;               // type:STRING.ATNONFINALHASHSTRING
};

struct CActionGrappleContainer
{
	map<string, struct CActionGrapple>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionHoming
{
	vec2                             TargetOffset;                    // type:VECTOR2.0
	float                            MaxSpeed;                        // type:FLOAT.0
	float                            TargetHeading;                   // type:FLOAT.0
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x1D4C6710                 TargetType;                      // type:ENUM.32BIT
	bitset<enum _0xA105E618>         HomingAttrs;                     // type:BITSET.32BIT
};

struct CActionHomingContainer
{
	map<string, struct CActionHoming>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionImpulse
{
	enum _0x1639985A                 Impulse;                         // type:ENUM.32BIT
	enum _0x68AD7E0D                 State;                           // type:ENUM.32BIT
	vec2                             AnalogRange;                     // type:VECTOR2.0
	float                            Duration;                        // type:FLOAT.0
	bitset<enum _0xA7DA38FF>         ExcludeWeaponType;               // type:BITSET.32BIT
};

struct CActionImpulseList
{
	enum _0x9B2EFC0E                 ImpulseOp;                       // type:ENUM.32BIT
	array<struct CActionImpulse>     aImpulses;                       // type:ARRAY.ATARRAY
	bool                             InvertSense;                     // type:BOOL.0
};

struct CActionImpulseTest
{
	string                               Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x9B2EFC0E                     ImpulseOp;                       // type:ENUM.32BIT
	array<struct CActionImpulseList>     aImpulseLists;                   // type:ARRAY.ATARRAY
	bool                                 IgnoreValidation;                // type:BOOL.0
	bool                                 SkipRemotePlayer;                // type:BOOL.0
};

struct CActionImpulseTestContainer
{
	map<string, struct CActionImpulseTest>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionProbe
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x8ACD879F                 Type;                            // type:ENUM.32BIT
	enum eAnimBoneTag                OffsetBoneTag;                   // type:ENUM.32BIT
	enum eAnimBoneTag                AvgOffsetBoneTag;                // type:ENUM.32BIT
	vec3V                            Offset;                          // type:VEC3V.0
	float                            Heading;                         // type:FLOAT.0
	float                            Distance;                        // type:FLOAT.0
	float                            Radius;                          // type:FLOAT.0
	float                            NormalDotThreshold;              // type:FLOAT.0
	float                            FixedDepthThreshold;             // type:FLOAT.0
	float                            FlatDistanceThreshold;           // type:FLOAT.0
	bool                             Debug;                           // type:BOOL.0
	bitset<enum _0xAED82D9D>         Attrs;                           // type:BITSET.32BIT
};

struct CActionProbeContainer
{
	map<string, struct CActionProbe>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionProbeTest
{
	array<string>                    aActionProbes;                   // type:ARRAY.ATARRAY
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xF64FC565>         Attrs;                           // type:BITSET.32BIT
};

struct CActionProbeTestContainer
{
	map<string, struct CActionProbeTest>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionResult
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	array<string>                    aAnims;                          // type:ARRAY.ATARRAY
	string                           Camera;                          // type:STRING.ATNONFINALHASHSTRING
	string                           Homing;                          // type:STRING.ATNONFINALHASHSTRING
	string                           Grapple;                         // type:STRING.ATNONFINALHASHSTRING
	string                           DamageAndReaction;               // type:STRING.ATNONFINALHASHSTRING
	string                           ForcedReaction;                  // type:STRING.ATNONFINALHASHSTRING
	string                           StrikeBoneSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           ActionBranchSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                           NmReactionSet;                   // type:STRING.ATNONFINALHASHSTRING
	int                              Priority;                        // type:INT.0
	bitset<enum _0x9B409521>         ResultAttrs;                     // type:BITSET.32BIT
	bitset<enum _0xA2EF9186>         AttackAttrs;                     // type:BITSET.32BIT
	bitset<enum _0xB49F9405>         ClipSetAttrs;                    // type:BITSET.32BIT
};

struct CActionResultContainer
{
	map<string, struct CActionResult>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActionRumble
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             Duration;                        // type:UINT.0
	float                            Intensity;                       // type:FLOAT.0
};

struct CActionRumbleContainer
{
	map<string, struct CActionRumble>     Map;                             // type:MAP.ATBINARYMAP
};

struct CActiveCardInfo : CItemInfo
{
	string                           SearchHash;                      // type:STRING.ATNONFINALHASHSTRING
	uint                             Level;                           // type:UINT.0
	uint                             Charges;                         // type:UINT.0
	string                           Ability;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CAdditionProvider : _0xEFAEA34C
{
	struct _0xEFAEA34C               First;                           // type:STRUCT.POINTER
	struct _0xEFAEA34C               Second;                          // type:STRUCT.POINTER
};

struct CAimIkBaseBoneOffsetSet
{
	array<struct _0x64A62286>        Offsets;                         // type:ARRAY.ATARRAY
};

struct CAimSweepProfile
{
	float                            Offset;                          // type:FLOAT.0
	float                            OffsetWalk;                      // type:FLOAT.0
	float                            OffsetRun;                       // type:FLOAT.0
	float                            LimitCW;                         // type:FLOAT.0
	float                            LimitCCW;                        // type:FLOAT.0
	float                            TurnLimitCW;                     // type:FLOAT.0
	float                            TurnLimitCCW;                    // type:FLOAT.0
	float                            AutoTurnLimitCW;                 // type:FLOAT.0
	float                            AutoTurnLimitCCW;                // type:FLOAT.0
	float                            AutoTurnTime;                    // type:FLOAT.0
	float                            PitchLimitMin;                   // type:FLOAT.0
	float                            PitchLimitMax;                   // type:FLOAT.0
	string                           IkData;                          // type:STRING.ATNONFINALHASHSTRING
};

struct CAimSweepRangeSet
{
	bool                             UseFullRangeForUpperbody;        // type:BOOL.0
	array<struct _0x56F5D4DE>        Ranges;                          // type:ARRAY.ATARRAY
};

struct CAimUpperBodyDataBlock
{
	struct CAimUpperBodyTune                                 Tune;                            // type:STRUCT.STRUCTURE
	map<string, struct CAimSweepProfile>                     AimSweepProfiles;                // type:MAP.ATBINARYMAP
	map<string, struct CAimSweepRangeSet>                    AimSweepRangeSets;               // type:MAP.ATBINARYMAP
	array<struct _0x7A09E12C>                                Types;                           // type:ARRAY.ATARRAY
	map<string, struct CAimUpperBodyState>                   States;                          // type:MAP.ATBINARYMAP
	map<string, struct BlendSet>                             BlendPreSets;                    // type:MAP.ATBINARYMAP
	map<string, struct CFirstPersonTorsoSpaceSet>            FirstPersonTorsoSpaceSets;       // type:MAP.ATBINARYMAP
	map<string, struct CAimIkBaseBoneOffsetSet>              AimIkBaseBoneOffsetSets;         // type:MAP.ATBINARYMAP
	map<string, struct _0x88127A6D>                          AimIkData;                       // type:MAP.ATBINARYMAP
	map<string, struct CBodyBlendVariationAdditiveSetup>     BodyBlendVaritionAdditiveSetups; // type:MAP.ATBINARYMAP
};

struct CAimUpperBodyState
{
	array<string>                    TaskBlenderStates;               // type:ARRAY.ATARRAY
	map<string, string>              TaskBlenders;                    // type:MAP.ATBINARYMAP
};

struct CAimUpperBodyTune
{
	bool                             EnableAimUpperBodyTasks;         // type:BOOL.0
	struct _0x63C9A879               MotionWeaponStateSwitchBlends;   // type:STRUCT.STRUCTURE
	struct _0xD93AACD7               BolasSpringBlends;               // type:STRUCT.STRUCTURE
	struct _0xE012BA6A               PlayerStrafeMotionStateBlends;   // type:STRUCT.STRUCTURE
	struct _0xE012BA6A               AIStrafeMotionStateBlends;       // type:STRUCT.STRUCTURE
	struct _0x5E5F3FEF               PlayerUpperbodyWeaponAttachOffset; // type:STRUCT.STRUCTURE
	bool                             DisableUpperBodyRestartOnClipSetChange; // type:BOOL.0
	bool                             DisableUpperBodyRestartOnLowerBodyChange; // type:BOOL.0
	bool                             EnableBowAimSweeps;              // type:BOOL.0
	struct _0x49BFDD33               TargetInterpolationData;         // type:STRUCT.STRUCTURE
	struct _0xB033014C               DefaultPelvisBlendWeights;       // type:STRUCT.STRUCTURE
	struct _0x30FAEA90               FirstPersonBodyDamping;          // type:STRUCT.STRUCTURE
	struct _0x69F3EEB0               QuickAimSweeps;                  // type:STRUCT.STRUCTURE
	bool                             EnableBaseBoneIkOffset;          // type:BOOL.0
	bool                             EnableFacingDirectionIkOffset;   // type:BOOL.0
	bool                             EnableRollIkOffset;              // type:BOOL.0
	bool                             EnableIkRecoilForAllArmActions;  // type:BOOL.0
	bool                             EnableIkRecoilForGunFiring;      // type:BOOL.0
	bool                             EnableIkRecoilForGunCocking;     // type:BOOL.0
	bool                             EnableIkRecoilForGunSettle;      // type:BOOL.0
	bool                             WagonRearUseHandIKBaseBone;      // type:BOOL.0
	bool                             WagonRearUseElbowIKBaseBone;     // type:BOOL.0
	float                            WagonRearOscillationOffset;      // type:FLOAT.0
	bool                             UseSpineOffsetForWeaponBlocking; // type:BOOL.0
	uint                             WeaponBlockMinDuration;          // type:UINT.0
	uint                             WeaponBlockMinDurationCover;     // type:UINT.0
	float                            WeaponBlockElbowAimingZOffset;   // type:FLOAT.0
	vec3V                            WeaponBlockSpineOffset;          // type:VEC3V.0
	float                            WeaponBlockProbeLengthModifierVehicle; // type:FLOAT.0
	float                            WeaponBlockProbeLengthModifierOneHandedLongarm; // type:FLOAT.0
	float                            bHorseAimFlipIkBlendInPhase;     // type:FLOAT.0
	float                            AimSolveCustomWeightInterpRate;  // type:FLOAT.0
	float                            AimSolveCameraConstraintWeightInterpRate; // type:FLOAT.0
	struct _0x88127A6D               IkDefault;                       // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeLongArm;                 // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeBow;                     // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeFishingRod;              // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeShortArmRight90;         // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeLongArmLeft45;           // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeBowLeft45;               // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeReload;                  // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeReloadCrouch;            // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeThrownReducedLimits;     // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkStrafeMPJug;                   // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkRunAndGunLongArm;              // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkRunAndGunShortArm;             // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkRunAndGunLongArmReduced;       // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkRunAndGunShortArmReduced;      // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkRunAndFireLongArm;             // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkRunAndFireShortArm;            // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkVehicleDefault;                // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkVehicleDefaultLongArm;         // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkVehicleFrontBack;              // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkVehicleFrontBackLongArm;       // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkVehiclePassengerInside;        // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkVehiclePassengerInsideLongArm; // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkHorsebackDefault;              // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkHorsebackDefaultLongArm;       // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkCoverAimPlayer;                // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkCoverAimAIHardCover;           // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkCoverAimAISoftCover;           // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkLightSource;                   // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkFirstPersonBodyAimOnFoot;      // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkFirstPersonBodyAimOnMount;     // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkFirstPersonBodyAimOnMountWithPillion; // type:STRUCT.STRUCTURE
	struct _0x88127A6D               IkFirstPersonBodyAimOnVehicle;   // type:STRUCT.STRUCTURE
	struct _0x2CD56328               IkBaseBoneOffsets;               // type:STRUCT.STRUCTURE
	struct _0xAED288CB               FlinchClipSets;                  // type:STRUCT.STRUCTURE
	array<struct _0xF7E16543>        BowRollAdditive;                 // type:ARRAY.ATARRAY
	array<struct _0xF7E16543>        BowDrawnRollAdditive;            // type:ARRAY.ATARRAY
	array<struct _0xF7E16543>        BowCrouchRollAdditive;           // type:ARRAY.ATARRAY
	array<struct _0xF7E16543>        BowCrouchDrawnRollAdditive;      // type:ARRAY.ATARRAY
	string                           VehicleLowerBodyOneHandClipSetId; // type:STRING.ATNONFINALHASHSTRING
	string                           VehicleLowerBodyTwoHandClipSetId; // type:STRING.ATNONFINALHASHSTRING
	float                            LongArmTwoHandToOneHand;         // type:FLOAT.0
	float                            LongArmOneHandToTwoHand;         // type:FLOAT.0
	float                            MountAiAimIntroBlendDuration;    // type:FLOAT.0
	float                            MountAimIntroPlayRateRear;       // type:FLOAT.0
	float                            MountAimIntroPlayRateFront;      // type:FLOAT.0
	float                            MountAimOutroPlayRateRear;       // type:FLOAT.0
	float                            MountAimOutroPlayRateFront;      // type:FLOAT.0
	float                            OnFootGunAimOutroPlayRateMP;     // type:FLOAT.0
	float                            VehicleAimIntroPlayRate;         // type:FLOAT.0
	float                            MountAimPlayRateResetTime;       // type:FLOAT.0
	float                            BowAimIntroPlayRate;             // type:FLOAT.0
	float                            BowReloadPlayRate;               // type:FLOAT.0
	float                            BowReloadQuickPlayRate;          // type:FLOAT.0
	float                            BowTransDrawPlayRate;            // type:FLOAT.0
	float                            BowTransCancelPlayRate;          // type:FLOAT.0
	float                            BowTransSimpleAimBlendOutPhase;  // type:FLOAT.0
	float                            BowTransSimpleAimBlendOutDuration; // type:FLOAT.0
	float                            BowDrawnHandSwapPlayRate;        // type:FLOAT.0
	float                            BowDrawnFlipAimPlayRate;         // type:FLOAT.0
	float                            BowReloadQuickFacingOffsetBlendIn; // type:FLOAT.0
	float                            BowReloadQuickFacingOffsetBlendOut; // type:FLOAT.0
	float                            BowReleaseDuration;              // type:FLOAT.0
	float                            ThrownIgnitePlayRate;            // type:FLOAT.0
	float                            ThrownExtinguishPlayRate;        // type:FLOAT.0
	float                            AiVehicleTransitionPlayRate;     // type:FLOAT.0
	float                            GunIntroFacingDirectionOffsetInterpRate; // type:FLOAT.0
	float                            RideAndFireMovingHeadingMin;     // type:FLOAT.0
	float                            RideAndFireMovingHeadingMax;     // type:FLOAT.0
	float                            ObstacleForceForwardAim;         // type:FLOAT.2
	float                            HeightSpringDamping;             // type:FLOAT.0
	float                            HeightSpringConstant;            // type:FLOAT.0
	float                            _0xA5E5BD55;                     // type:FLOAT.0
	float                            _0x5A7A799C;                     // type:FLOAT.0
	float                            FWDLeanSpringDamping;            // type:FLOAT.0
	float                            FWDLeanSpringConstant;           // type:FLOAT.0
	float                            YawFlipSpringDamping;            // type:FLOAT.0
	float                            YawFlipSpringConstant;           // type:FLOAT.0
	float                            YawFlipSpringConstantVehicleExterior; // type:FLOAT.0
	float                            FirstPersonAimConstraintBlendOut; // type:FLOAT.0
	float                            MountFireVariationAngleLimit;    // type:FLOAT.0
	float                            MountFireVariationAnimationAngleLimit; // type:FLOAT.0
	float                            LongArmOneHandedFrontTransitionOffsetAngle; // type:FLOAT.0
	bool                             bDisableClampYawSignalToLimitDuringTransition; // type:BOOL.0
	bool                             EnableLeftAimingForPassengerVehicleDriveBys; // type:BOOL.0
	bool                             EnableLeftAimingForDriverVehicleDriveBys; // type:BOOL.0
	bool                             EnableLeftAimingForDriverMountDriveBys; // type:BOOL.0
	bool                             Enable1hRideAndFireAimingForAiMountDriveBys; // type:BOOL.0
	bool                             Enable2hRideAndFireAimingForAiMountDriveBys; // type:BOOL.0
	bool                             EnableFireVariationsForAiMountDriveBys; // type:BOOL.0
	bool                             EnableLeanFwdOnFoot;             // type:BOOL.0
	bool                             StrafeAimIntroPostCameraAnimUpdateForPlayer; // type:BOOL.0
	float                            IdleToAimTurnIntroPredictionAlpha; // type:FLOAT.0
	float                            IdleToAimTurnIntroIkBlendMinPhase; // type:FLOAT.0
	float                            IdleToAimTurnIntroIkBlendMaxPhase; // type:FLOAT.0
	float                            IdleAimSweepIntroPlayRate;       // type:FLOAT.0
	float                            SpineFacingAdditiveInterpRate;   // type:FLOAT.0
	float                            RideAndFireBasePoseBlendDurationMultiplier; // type:FLOAT.0
	float                            _0x09542166;                     // type:FLOAT.0
	vec3V                            IkFemaleRelativeBoneOffsetBow;   // type:VEC3V.0
};

struct CAimingInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            HeadingLimit;                    // type:FLOAT.0
	float                            SweepPitchMin;                   // type:FLOAT.0
	float                            SweepPitchMax;                   // type:FLOAT.0
	float                            StopRunAndGunLimitLeft;          // type:FLOAT.0
	float                            StartRunAndGunLimitLeft;         // type:FLOAT.0
	float                            StopRunAndGunLimitRight;         // type:FLOAT.0
	float                            StartRunAndGunLimitRight;        // type:FLOAT.0
};

struct CAmbientBirdSpawn__Tunables : CTuning
{
	float                            fMaxDistanceForGunfireSignal;    // type:FLOAT.0
	float                            fMaxDistanceForHeavyMovementSignal; // type:FLOAT.0
	float                            fMinDistanceForBrushSpawn;       // type:FLOAT.0
	float                            fMaxDistanceForBrushSpawn;       // type:FLOAT.0
	float                            fMinDistanceForTreeSpawn;        // type:FLOAT.0
	float                            fMaxDistanceForTreeSpawn;        // type:FLOAT.0
	float                            fHeightPercentForTreeSpawn;      // type:FLOAT.0
	float                            fRadiusFactor;                   // type:FLOAT.0
	float                            fMinRadiusForSpawningTree;       // type:FLOAT.0
	float                            fMinRadiusForSpawningBrush;      // type:FLOAT.0
	float                            fFailedAttemptDelay;             // type:FLOAT.0
	float                            fGunshotSpawnDelayMin;           // type:FLOAT.0
	float                            fGunshotSpawnDelayMax;           // type:FLOAT.0
};

struct CAmbientModelSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x5FD3E106>        Models;                          // type:ARRAY.ATARRAY
	float                            SpawnDistance;                   // type:FLOAT.0
	string                           AIMemoryGroup;                   // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB595C465>        LocoDescriptors;                 // type:ARRAY.ATARRAY
	struct _0xC7DA0371               TraversalInfo;                   // type:STRUCT.STRUCTURE
};

struct CAmbientModelSets
{
	array<struct CAmbientModelSet>     ModelSets;                       // type:ARRAY.ATARRAY
};

struct CAmbientModelVariations
{
};

struct CAmbientPedModelVariations : CAmbientModelVariations
{
	string                               LoadOut;                         // type:STRING.ATNONFINALHASHSTRING
	string                               CombatInfo;                      // type:STRING.ATNONFINALHASHSTRING
	string                               PersonalityInfo;                 // type:STRING.ATNONFINALHASHSTRING
	string                               Outfit;                          // type:STRING.ATNONFINALHASHSTRING
	string                               Health;                          // type:STRING.ATNONFINALHASHSTRING
	enum _0x12673732                     DomesticatedLevel;               // type:ENUM.32BIT
	enum _0xE0D62D76                     RarityLevel;                     // type:ENUM.32BIT
	enum _0x8040914A                     _0x93F93F39;                     // type:ENUM.32BIT
	struct MetaPedQualityProbability     QualityProbability;              // type:STRUCT.POINTER
};

struct CAmbientScannerManifest
{
	array<struct _0x23032C7B>        RegionDefs;                      // type:ARRAY.ATARRAY
};

struct CAmbientVehicleModelVariations : CAmbientModelVariations
{
	int                              BodyColour1;                     // type:INT.0
	int                              BodyColour2;                     // type:INT.0
	int                              BodyColour3;                     // type:INT.0
	int                              BodyColour4;                     // type:INT.0
	int                              WindowTint;                      // type:INT.0
	int                              ColourCombination;               // type:INT.0
	int                              Livery;                          // type:INT.0
	int                              ModKit;                          // type:INT.0
	array<struct _0x66838F63>        Mods;                            // type:ARRAY.ATARRAY
	int                              _0xD584AC52;                     // type:INT.0
	enum _0xE37EFE26                 Extra1;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra2;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra3;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra4;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra5;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra6;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra7;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra8;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra9;                          // type:ENUM.32BIT
	enum _0xE37EFE26                 Extra10;                         // type:ENUM.32BIT
	string                           drivers;                         // type:STRING.ATNONFINALHASHSTRING
	string                           shotgun;                         // type:STRING.ATNONFINALHASHSTRING
	string                           passengers;                      // type:STRING.ATNONFINALHASHSTRING
	array<string>                    horses;                          // type:ARRAY.ATARRAY
	array<string>                    propsetNames;                    // type:ARRAY.ATARRAY
};

struct CAmmoInfo : CWeaponInfoBase
{
	bitset<enum _0xEEAD8BCA>              AmmoFlags;                       // type:BITSET.16BIT
	string                                WeaponType;                      // type:STRING.ATNONFINALHASHSTRING
	string                                RewardHash;                      // type:STRING.ATNONFINALHASHSTRING
	string                                NmTuningSet;                     // type:STRING.ATNONFINALHASHSTRING
	float                                 ImpulseMultiplier;               // type:FLOAT.0
	float                                 SkinPenetration;                 // type:FLOAT.0
	float                                 BleedOutTimeMultiplier;          // type:FLOAT.0
	float                                 DeadeyeDrainModifier;            // type:FLOAT.0
	float                                 _0x08FAE4B6;                     // type:FLOAT.0
	int                                   NumDamageRegionsThatCanBeBypassed; // type:INT.0
	string                                StatName;                        // type:STRING.ATNONFINALHASHSTRING
	array<struct sDismembermentRange>     DismembermentRanges;             // type:ARRAY.ATARRAY
	int                                   NumPedImpacts;                   // type:INT.0
	uint                                  BulletsInBatch;                  // type:UINT.0
	struct _0xA4F06CAB                    Vfx;                             // type:STRUCT.STRUCTURE
};

struct CAmmoItemInfo : CItemInfo
{
	string                           WeaponName;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
	struct CInspectionInfo           InspectionInfo;                  // type:STRUCT.STRUCTURE
};

struct CAmmoProjectileInfo : CAmmoInfo
{
	float                            SkinPenetrationForAttaching;     // type:FLOAT.0
	float                            ObjectPenetrationForAttachment;  // type:FLOAT.0
	float                            LifeTime;                        // type:FLOAT.0
	float                            _0xE4758E97;                     // type:FLOAT.0
	float                            FromVehicleLifeTime;             // type:FLOAT.0
	float                            _0x32E3F7FF;                     // type:FLOAT.0
	float                            LifeTimeAfterBounceOffCloseRange; // type:FLOAT.0
	float                            LifeTimeAfterBounceOffFarRange;  // type:FLOAT.0
	float                            LifeTimeAfterFiring;             // type:FLOAT.0
	float                            MinLifeTimeAfterPlacement;       // type:FLOAT.0
	float                            LaunchSpeed;                     // type:FLOAT.0
	float                            SeparationTime;                  // type:FLOAT.0
	float                            TimeToReachTarget;               // type:FLOAT.0
	float                            Damping;                         // type:FLOAT.0
	float                            GravityFactor;                   // type:FLOAT.0
	float                            RicochetTolerance;               // type:FLOAT.0
	float                            PedRicochetTolerance;            // type:FLOAT.0
	float                            VehicleRicochetTolerance;        // type:FLOAT.0
	float                            FrictionMultiplier;              // type:FLOAT.0
	float                            _0x179F6672;                     // type:FLOAT.0
	float                            _0x1A14D03A;                     // type:FLOAT.0
	float                            _0x588528C9;                     // type:FLOAT.0
	string                           PickupHash;                      // type:STRING.ATNONFINALHASHSTRING
	string                           MPPickupHash;                    // type:STRING.ATNONFINALHASHSTRING
	struct _0x13B6A1E8               Explosion;                       // type:STRUCT.STRUCTURE
	struct _0xD1153528               VfxProjectile;                   // type:STRUCT.STRUCTURE
	bool                             LightOnlyActiveWhenStuck;        // type:BOOL.0
	bool                             LightFlickers;                   // type:BOOL.0
	bool                             LightSpeedsUp;                   // type:BOOL.0
	enum eAnimBoneTag                LightBone;                       // type:ENUM.32BIT
	vec3                             LightColour;                     // type:VECTOR3.0
	float                            LightIntensity;                  // type:FLOAT.0
	float                            LightRange;                      // type:FLOAT.0
	float                            LightFalloffExp;                 // type:FLOAT.0
	float                            LightFrequency;                  // type:FLOAT.0
	float                            LightPower;                      // type:FLOAT.0
	float                            CoronaSize;                      // type:FLOAT.0
	float                            CoronaIntensity;                 // type:FLOAT.0
	float                            CoronaZBias;                     // type:FLOAT.0
	vec3V                            FlightBoneXAxis;                 // type:VEC3V.0
	vec3V                            FlightBoneYAxis;                 // type:VEC3V.0
	vec3V                            FlightBonePositionOffset;        // type:VEC3V.0
	float                            SpinAngularVelocity;             // type:FLOAT.0
	vec3V                            _0x31C9C83E;                     // type:VEC3V.0
	float                            StickRotation;                   // type:FLOAT.0
	bool                             _0x97735FE5;                     // type:BOOL.0
	bitset<enum _0x8F261358>         ProjectileFlags;                 // type:BITSET.64BIT
	struct _0xA0D7A426               ProjectileSeekingTune;           // type:STRUCT.STRUCTURE
	struct _0xC37F3C13               ProjectileStickingTune;          // type:STRUCT.STRUCTURE
	struct _0xA53476B3               ProjectilePhysicsTune;           // type:STRUCT.STRUCTURE
	vec3                             UntriggeredProximityLightColour; // type:VECTOR3.0
	string                           VertData;                        // type:STRING.ATNONFINALHASHSTRING
	float                            RangeMultiplier;                 // type:FLOAT.0
	string                           _0x4E898026;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CAmmoRocketInfo : CAmmoProjectileInfo
{
	float                            ForwardDragCoeff;                // type:FLOAT.0
	float                            SideDragCoeff;                   // type:FLOAT.0
	float                            TimeBeforeHoming;                // type:FLOAT.0
	float                            TimeBeforeSwitchTargetMin;       // type:FLOAT.0
	float                            TimeBeforeSwitchTargetMax;       // type:FLOAT.0
	float                            ProximityRadius;                 // type:FLOAT.0
	float                            PitchChangeRate;                 // type:FLOAT.0
	float                            YawChangeRate;                   // type:FLOAT.0
	float                            RollChangeRate;                  // type:FLOAT.0
	float                            MaxRollAngleSin;                 // type:FLOAT.0
	float                            LifeTimePlayerVehicleLockedOverrideMP; // type:FLOAT.0
};

struct CAmmoThrownInfo : CAmmoProjectileInfo
{
	float                            ThrownForce;                     // type:FLOAT.0
	float                            ThrownForceFromVehicle;          // type:FLOAT.0
};

struct CAnimInfoBlackboardDataBool : _0xCC7762ED
{
};

struct CAnimInfoBlackboardDataFloat : _0xCC7762ED
{
	bool                             ConvertRadianToSignal;           // type:BOOL.0
	string                           OverrideNetworkParamName;        // type:STRING.ATNONFINALHASHSTRING
};

struct CAnimRateSet
{
	struct _0xCF1632CA               NormalEntry;                     // type:STRUCT.STRUCTURE
	struct _0xCF1632CA               AnimCombatEntry;                 // type:STRUCT.STRUCTURE
	struct _0xCF1632CA               NoAnimCombatEntry;               // type:STRUCT.STRUCTURE
	struct _0xCF1632CA               CombatJackEntry;                 // type:STRUCT.STRUCTURE
	struct _0xCF1632CA               ForcedEntry;                     // type:STRUCT.STRUCTURE
	bool                             UseInVehicleCombatRates;         // type:BOOL.0
	struct _0xCF1632CA               NormalInVehicle;                 // type:STRUCT.STRUCTURE
	struct _0xCF1632CA               NoAnimCombatInVehicle;           // type:STRUCT.STRUCTURE
	struct _0xCF1632CA               NormalExit;                      // type:STRUCT.STRUCTURE
	struct _0xCF1632CA               NoAnimCombatExit;                // type:STRUCT.STRUCTURE
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CAnimSpeedUps__Tunables : CTuning
{
	float                            MultiplayerClimbStandRateModifier; // type:FLOAT.0
	float                            MultiplayerClimbRunningRateModifier; // type:FLOAT.0
	float                            MultiplayerClimbClamberRateModifier; // type:FLOAT.0
	float                            MultiplayerEnterExitJackVehicleRateModifier; // type:FLOAT.0
	float                            MultiplayerLadderRateModifier;   // type:FLOAT.0
	float                            MultiplayerCoverIntroRateModifier; // type:FLOAT.0
	float                            MultiplayerIdleTurnRateModifier; // type:FLOAT.0
	bool                             ForceMPAnimRatesInSP;            // type:BOOL.0
};

struct CAnimalAnimationContext
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CAnimalAnimationContexts
{
	array<struct CAnimalAnimationContext>     Contexts;                        // type:ARRAY.ATARRAY
};

struct CAnimalAttackBehaviour
{
	string                                 Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                 Species;                         // type:STRING.ATNONFINALHASHSTRING
	string                                 Task;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CAnimalAttackTrigger>     Triggers;                        // type:ARRAY.ATARRAY
};

struct CAnimalAttackBehaviours
{
	array<struct CAnimalAttackBehaviour>     Behaviours;                      // type:ARRAY.ATARRAY
};

struct CAnimalAttackTrigger
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	enum _0x9EDED34A                 AttackState;                     // type:ENUM.32BIT
};

struct CAnimalUnalertedBehaviour
{
	string                                       Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                       Species;                         // type:STRING.ATNONFINALHASHSTRING
	string                                       Task;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x12673732                             DomesticatedLevel;               // type:ENUM.32BIT
	float                                        MaxDistance;                     // type:FLOAT.0
	float                                        InitialDelay;                    // type:FLOAT.0
	bool                                         StayCloseToOwnerPed;             // type:BOOL.0
	float                                        GoBackToGroupThresholdDistance;  // type:FLOAT.0
	array<struct CAnimalUnalertedTrigger, 8>     Triggers;                        // type:ARRAY.ATFIXEDARRAY
	bool                                         ForFlockMigration;               // type:BOOL.0
	float                                        _0x302D3679;                     // type:FLOAT.0
	float                                        _0xA46D06E2;                     // type:FLOAT.0
	bool                                         _0x6AA76470;                     // type:BOOL.0
};

struct CAnimalUnalertedBehaviourManager
{
	array<struct CAnimalUnalertedBehaviour>     Behaviours;                      // type:ARRAY.ATARRAY
	struct CAnimalUnalertedBehaviour            PlayerHorseBehaviour;            // type:STRUCT.STRUCTURE
};

struct CAnimalUnalertedFlockWander : _0xABCE9682
{
};

struct CAnimalUnalertedFlyingFormationWander : _0xABCE9682
{
};

struct CAnimalUnalertedFlyingWander : _0xABCE9682
{
};

struct CAnimalUnalertedIdle : _0xABCE9682
{
};

struct CAnimalUnalertedPavementGraphMigration : _0xABCE9682
{
};

struct CAnimalUnalertedSwimmingSchooling : _0xABCE9682
{
};

struct CAnimalUnalertedSwimmingWander : _0xABCE9682
{
};

struct CAnimalUnalertedTakeOff : _0xABCE9682
{
};

struct CAnimalUnalertedTrigger
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct _0xABCE9682               UnalertedState;                  // type:STRUCT.POINTER
	float                            Weight;                          // type:FLOAT.0
};

struct CAnimalUnalertedUseScenario : _0xABCE9682
{
	string                           ScenarioName;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             CanRunWithoutScenarioPoint;      // type:BOOL.0
	bool                             ForceGroundNavigation;           // type:BOOL.0
};

struct CAnimalUnalertedWander : _0xABCE9682
{
	bool                             CanBeRepeated;                   // type:BOOL.0
};

struct CAssistedMovementNode
{
	struct CNodeAddress                         Address;                         // type:STRUCT.STRUCTURE
	short                                       StartIndexOfLinks;               // type:SHORT.0
	uchar                                       NumLinks;                        // type:UCHAR.0
	int                                         CoorsX;                          // type:INT.0
	int                                         CoorsY;                          // type:INT.0
	short                                       CoorsZ;                          // type:SHORT.0
	bitset<enum eAssistedMovementNodeFlags>     Flags;                           // type:BITSET.32BIT
	uchar                                       Tension;                         // type:UCHAR.0
	string                                      RouteName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct CAssistedMovementNodeLink
{
	struct CNodeAddress              OtherNode;                       // type:STRUCT.STRUCTURE
};

struct CAttributeRankProvider : _0xEFAEA34C
{
	enum _0x99BEFEED                 AttributeType;                   // type:ENUM.32BIT
};

struct CAutoAimLevel
{
	array<struct CAutoAimLocation>     AutoAimLocations;                // type:ARRAY.ATARRAY
};

struct CAutoAimLocation
{
	enum eAnimBoneTag                TargetBone;                      // type:ENUM.32BIT
	float                            fProbability;                    // type:FLOAT.0
};

struct CAutoJunctionAdjustment
{
	vec3V                            vLocation;                       // type:VEC3V.0
	float                            fCycleOffset;                    // type:FLOAT.0
	float                            fCycleDuration;                  // type:FLOAT.0
};

struct CBaitData
{
	float                            AttractionDistance;              // type:FLOAT.0
	float                            EffectiveTimeMs;                 // type:FLOAT.0
	float                            TimeToWaitBeforeDispatch;        // type:FLOAT.0
	float                            MinSpawnDistance;                // type:FLOAT.0
	float                            MaxSpawnDistance;                // type:FLOAT.0
	float                            MinSpawnDistanceFromPlayer;      // type:FLOAT.0
	uint                             BaitCapacity;                    // type:UINT.0
	array<string>                    AttractedModels;                 // type:ARRAY.ATARRAY
	bool                             _0x06003465;                     // type:BOOL.0
	bool                             OnlySpawnIfNotEnoughMissionPedsInArea; // type:BOOL.0
};

struct CBaitingInfo
{
	map<string, struct CBaitData>     Baits;                           // type:MAP.ATBINARYMAP
};

struct CBarBrawlDefinition
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x1FA04F09               InnerVolume;                     // type:STRUCT.STRUCTURE
	struct _0x1FA04F09               OuterVolume;                     // type:STRUCT.STRUCTURE
	bitset<enum _0xB43E6CA6>         Attributes;                      // type:BITSET.32BIT
	bool                             Enabled;                         // type:BOOL.0
	bool                             Active;                          // type:BOOL.0
};

struct CBaseArchetypeDef : rage__fwArchetypeDef
{
	enum _0x079525DA                 _0x07D164A8;                     // type:ENUM.32BIT
};

struct CBaseCapsuleInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             FlattenCollisionNormals;         // type:BOOL.0
	bool                             UsesRagdollReactionIfShoved;     // type:BOOL.0
	bool                             DiesOnEnteringRagdoll;           // type:BOOL.0
	bool                             UseInactiveRagdollCollision;     // type:BOOL.0
	bool                             UseTighterTurnSettings;          // type:BOOL.0
	bool                             IsADynamicObjectForPathServer;   // type:BOOL.0
	bool                             UsePropBlockerBound;             // type:BOOL.0
	bool                             UseSoftBound;                    // type:BOOL.0
	bool                             UseMassAsInertia;                // type:BOOL.0
	bool                             AllowHumanWalkover;              // type:BOOL.0
	float                            Mass;                            // type:FLOAT.0
	float                            GroundInstanceDamage;            // type:FLOAT.0
	float                            GroundToRootOffset;              // type:FLOAT.0
	float                            ProbeRadius;                     // type:FLOAT.0
	float                            SoftBoundBaseMargin;             // type:FLOAT.0
	float                            MaxNormalZForFlatten;            // type:FLOAT.0
	float                            MinNormalZForFlatten;            // type:FLOAT.0
	float                            MaxNormalZForFlatten_Movable;    // type:FLOAT.0
	float                            MinHeightForFlatten;             // type:FLOAT.0
	float                            MinHeightForFlattenInteriorOffset; // type:FLOAT.0
	float                            MinHeightForFlattenWhileGrappleOffset; // type:FLOAT.0
	float                            AnimatedWaterSampleSize;         // type:FLOAT.0
	float                            AnimatedWaterSampleBuoyancyMult; // type:FLOAT.0
	float                            WaterFlowMultiplier;             // type:FLOAT.0
	float                            WaterSampleBuoyancyMult;         // type:FLOAT.0
	float                            ForcedFloatWaterSampleBuoyancyMult; // type:FLOAT.0
	vec3                             AnimatedWaterSampleOffset;       // type:VECTOR3.0
	vec3                             AngularInertiaScale;             // type:VECTOR3.0
	enum _0x13A96E5D                 RagdollType;                     // type:ENUM.32BIT
	enum _0x5A6CBB29                 HeadMatrixForwardDirection;      // type:ENUM.32BIT
};

struct CBaseElementLocation
{
	vec3                             location;                        // type:VECTOR3.0
	vec3                             rotation;                        // type:VECTOR3.0
};

struct CBaseElementLocationsMap
{
	array<struct CBaseElementLocation>     BaseElementLocations;            // type:ARRAY.ATARRAY
};

struct CBaseElements
{
	struct CBaseElementLocationsMap     BaseElementLocationsMap_HighApt; // type:STRUCT.STRUCTURE
	struct CBaseElementLocationsMap     BaseElementLocationsMap;         // type:STRUCT.STRUCTURE
};

struct CBaseReward
{
};

struct CBaseSaveObject
{
};

struct CBaseStatsSaveStructure : CBaseSaveObject
{
	array<struct CBaseStatsSaveStructure__CIntStatStruct>        _0x085EE24C;                     // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CFloatStatStruct>      FloatData;                       // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CBoolStatStruct>       BoolData;                        // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CStringStatStruct>     StringData;                      // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CUInt8StatStruct>      UInt8Data;                       // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CUInt16StatStruct>     UInt16Data;                      // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CUInt32StatStruct>     UInt32Data;                      // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CUInt64StatStruct>     UInt64Data;                      // type:ARRAY.ATARRAY
	array<struct CBaseStatsSaveStructure__CInt64StatStruct>      Int64Data;                       // type:ARRAY.ATARRAY
	uint                                                         codeVersion;                     // type:UINT.0
	uint                                                         dataVersion;                     // type:UINT.0
};

struct CBaseStatsSaveStructure__CBoolStatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	bool                             Data;                            // type:BOOL.0
};

struct CBaseStatsSaveStructure__CFloatStatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	float                            Data;                            // type:FLOAT.0
};

struct CBaseStatsSaveStructure__CInt64StatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	uint                             DataHigh;                        // type:UINT.0
	uint                             DataLow;                         // type:UINT.0
};

struct CBaseStatsSaveStructure__CIntStatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	int                              Data;                            // type:INT.0
};

struct CBaseStatsSaveStructure__CStringStatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	string                           Data;                            // type:STRING.ATSTRING
};

struct CBaseStatsSaveStructure__CUInt16StatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	ushort                           Data;                            // type:USHORT.0
};

struct CBaseStatsSaveStructure__CUInt32StatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	uint                             Data;                            // type:UINT.0
};

struct CBaseStatsSaveStructure__CUInt64StatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	uint                             DataHigh;                        // type:UINT.0
	uint                             DataLow;                         // type:UINT.0
};

struct CBaseStatsSaveStructure__CUInt8StatStruct
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
	uchar                            Data;                            // type:UCHAR.0
};

struct CBaseSubHandlingData : CHandlingObject
{
};

struct CBicycleInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x0DEE1CA7>        CruiseGearClipSpeeds;            // type:ARRAY.ATARRAY
	array<struct _0x0DEE1CA7>        FastGearClipSpeeds;              // type:ARRAY.ATARRAY
	float                            SpeedToTriggerBicycleLean;       // type:FLOAT.0
	float                            SpeedToTriggerStillTransition;   // type:FLOAT.0
	float                            DesiredSitRateMult;              // type:FLOAT.0
	float                            DesiredStandingInAirRateMult;    // type:FLOAT.0
	float                            DesiredStandingRateMult;         // type:FLOAT.0
	float                            StillToSitPedalGearApproachRate; // type:FLOAT.0
	float                            SitPedalGearApproachRate;        // type:FLOAT.0
	float                            StandPedalGearApproachRate;      // type:FLOAT.0
	float                            SitToStandPedalAccelerationScalar; // type:FLOAT.0
	float                            SitToStandPedalMaxRate;          // type:FLOAT.0
	float                            PedalToFreewheelBlendDuration;   // type:FLOAT.0
	float                            FreewheelToPedalBlendDuration;   // type:FLOAT.0
	float                            StillToSitToSitBlendOutDuration; // type:FLOAT.0
	float                            SitTransitionJumpPrepBlendDuration; // type:FLOAT.0
	float                            MinForcedInitialBrakeTime;       // type:FLOAT.0
	float                            MinForcedStillToSitTime;         // type:FLOAT.0
	float                            MinTimeInStandFreewheelState;    // type:FLOAT.0
	bool                             IsFixie;                         // type:BOOL.0
	bool                             HasImpactAnims;                  // type:BOOL.0
	bool                             UseHelmet;                       // type:BOOL.0
	bool                             CanTrackStand;                   // type:BOOL.0
};

struct CBikeHandlingData : CBaseSubHandlingData
{
	float                            fLeanFwdCOMMult;                 // type:FLOAT.0
	float                            fLeanFwdForceMult;               // type:FLOAT.0
	float                            fLeanBakCOMMult;                 // type:FLOAT.0
	float                            fLeanBakForceMult;               // type:FLOAT.0
	float                            fMaxBankAngle;                   // type:FLOAT.0
	float                            fFullAnimAngle;                  // type:FLOAT.0
	float                            fDesLeanReturnFrac;              // type:FLOAT.0
	float                            fStickLeanMult;                  // type:FLOAT.0
	float                            fBrakingStabilityMult;           // type:FLOAT.0
	float                            fInAirSteerMult;                 // type:FLOAT.0
	float                            fWheelieBalancePoint;            // type:FLOAT.0
	float                            fStoppieBalancePoint;            // type:FLOAT.0
	float                            fWheelieSteerMult;               // type:FLOAT.0
	float                            fRearBalanceMult;                // type:FLOAT.0
	float                            fFrontBalanceMult;               // type:FLOAT.0
	float                            fBikeGroundSideFrictionMult;     // type:FLOAT.0
	float                            fBikeWheelGroundSideFrictionMult; // type:FLOAT.0
	float                            fBikeOnStandLeanAngle;           // type:FLOAT.0
	float                            fBikeOnStandSteerAngle;          // type:FLOAT.0
	float                            fJumpForce;                      // type:FLOAT.0
};

struct CBikeLeanAngleHelper__Tunables : CTuning
{
	bool                             UseReturnOvershoot;              // type:BOOL.0
	bool                             UseInitialLeanForcing;           // type:BOOL.0
	float                            DesiredLeanAngleTolToBringLegIn; // type:FLOAT.0
	float                            DesiredSpeedToBringLegIn;        // type:FLOAT.0
	float                            DesiredLeanAngleRate;            // type:FLOAT.0
	float                            DesiredLeanAngleRateQuad;        // type:FLOAT.0
	float                            LeanAngleReturnRate;             // type:FLOAT.0
	float                            LeanAngleDefaultRate;            // type:FLOAT.0
	float                            LeanAngleDefaultRatePassenger;   // type:FLOAT.0
	float                            DesiredOvershootLeanAngle;       // type:FLOAT.0
	float                            LeanAngleReturnedTol;            // type:FLOAT.0
	float                            HasStickInputThreshold;          // type:FLOAT.0
	float                            LeaningExtremeThreshold;         // type:FLOAT.0
};

struct CBipedCapsuleInfo : CBaseCapsuleInfo
{
	float                            Radius;                          // type:FLOAT.0
	float                            RadiusRunning;                   // type:FLOAT.0
	float                            RadiusCrouched;                  // type:FLOAT.0
	float                            RadiusInCover;                   // type:FLOAT.0
	float                            RadiusCrouchedinCover;           // type:FLOAT.0
	float                            RadiusMobilePhone;               // type:FLOAT.0
	float                            RadiusFPSHeadBlocker;            // type:FLOAT.0
	float                            RadiusWeaponBlocked;             // type:FLOAT.0
	float                            RadiusSwimming;                  // type:FLOAT.0
	float                            RadiusSliding;                   // type:FLOAT.0
	float                            RadiusSlidingInto;               // type:FLOAT.0
	float                            HeadHeight;                      // type:FLOAT.0
	float                            KneeHeight;                      // type:FLOAT.0
	float                            ProbeYOffset;                    // type:FLOAT.0
	float                            CapsuleZOffset;                  // type:FLOAT.0
	float                            HeadHeightCrouched;              // type:FLOAT.0
	float                            HeadHeightSliding;               // type:FLOAT.0
	float                            CrouchedCapsuleOffsetZ;          // type:FLOAT.0
	float                            SlidingCapsuleOffsetZ;           // type:FLOAT.0
	float                            SlidingIntoCapsuleOffsetZ;       // type:FLOAT.0
	float                            GroundOffsetExtend;              // type:FLOAT.0
	float                            BoatBlockerHeadHeight;           // type:FLOAT.0
	float                            BoatBlockerZOffset;              // type:FLOAT.0
	float                            ForwardBlockerMaxExtension;      // type:FLOAT.0
	bool                             UseBoatBlockerBound;             // type:BOOL.0
	bool                             UseFallthroughBound;             // type:BOOL.0
	bool                             UseFPSHeadBlockerBound;          // type:BOOL.0
	bool                             UseForwardBlockerBound;          // type:BOOL.0
};

struct CBirdCapsuleInfo : CBipedCapsuleInfo
{
};

struct CBlockDesc
{
	uint                             version;                         // type:UINT.0
	uint                             flags;                           // type:UINT.0
	string                           name;                            // type:STRING.ATSTRING
	string                           exportedBy;                      // type:STRING.ATSTRING
	string                           owner;                           // type:STRING.ATSTRING
	string                           time;                            // type:STRING.ATSTRING
};

struct CBoatHandlingData : CBaseSubHandlingData
{
	float                            fBoxFrontMult;                   // type:FLOAT.0
	float                            fBoxRearMult;                    // type:FLOAT.0
	float                            fBoxSideMult;                    // type:FLOAT.0
	float                            fSampleTop;                      // type:FLOAT.0
	float                            fSampleBottom;                   // type:FLOAT.0
	float                            fSampleBottomTestCorrection;     // type:FLOAT.0
	float                            _0x39A1213F;                     // type:FLOAT.0
	float                            fAquaplaneForce;                 // type:FLOAT.0
	float                            fAquaplanePushWaterMult;         // type:FLOAT.0
	float                            fAquaplanePushWaterCap;          // type:FLOAT.0
	float                            fAquaplanePushWaterApply;        // type:FLOAT.0
	float                            fKeelMult;                       // type:FLOAT.0
	float                            fSpeeedSteerModMult;             // type:FLOAT.0
	float                            fRudderSpeed;                    // type:FLOAT.0
	float                            fRudderForce;                    // type:FLOAT.0
	float                            fRudderOffsetSubmerge;           // type:FLOAT.0
	float                            fRudderOffsetForce;              // type:FLOAT.0
	float                            fRudderOffsetForceZMult;         // type:FLOAT.0
	float                            fWaveAudioMult;                  // type:FLOAT.0
	vec3V                            vecMoveResistance;               // type:VEC3V.0
	vec3V                            vecTurnResistance;               // type:VEC3V.0
	float                            fLook_L_R_CamHeight;             // type:FLOAT.0
	float                            fDragCoefficient;                // type:FLOAT.0
	float                            fKeelSphereSize;                 // type:FLOAT.0
	float                            fPropRadius;                     // type:FLOAT.0
	float                            fLowLodAngOffset;                // type:FLOAT.0
	float                            fLowLodDraughtOffset;            // type:FLOAT.0
	int                              iPropRotAxis;                    // type:INT.0
	float                            fPropRotSpeed;                   // type:FLOAT.0
	float                            fImpellerOffset;                 // type:FLOAT.0
	float                            fImpellerForceMult;              // type:FLOAT.0
	float                            fDinghySphereBuoyConst;          // type:FLOAT.0
	float                            fProwRaiseMult;                  // type:FLOAT.0
	float                            fDeepWaterSampleBuoyancyMult;    // type:FLOAT.0
	float                            fStickToSurfaceStrength;         // type:FLOAT.0
	float                            fStickToSurfaceMaxStrength;      // type:FLOAT.0
	float                            fStickToSurfaceMinWaveDepth;     // type:FLOAT.0
	float                            fStickToSurfaceMaxWaveDepth;     // type:FLOAT.0
	float                            fDisturbBoxMultX;                // type:FLOAT.0
	float                            fDisturbBoxMultY;                // type:FLOAT.0
	int                              _0x0A670270;                     // type:INT.0
	float                            fStickToSurfaceMaxSpeed;         // type:FLOAT.0
	float                            fSharpTurnMult;                  // type:FLOAT.0
	float                            fFlowMult;                       // type:FLOAT.0
};

struct CBoatThrottleKickHelper__Tunables : CTuning
{
	array<struct _0x94CC9DE1>        BoatSettings;                    // type:ARRAY.ATARRAY
	struct _0x94CC9DE1               DefaultSettings;                 // type:STRUCT.STRUCTURE
};

struct CBodyAnimConstraintInfoState
{
	enum eBodyPart                   BodyPart;                        // type:ENUM.32BIT
	enum eBodyPartState              BodyPartState;                   // type:ENUM.32BIT
	enum eBodyPartObject             BodyPartObject;                  // type:ENUM.32BIT
};

struct CBodyAnimConstraintInfoStateSet
{
	map<string, struct CBodyAnimConstraintInfoState>     States;                          // type:MAP.ATBINARYMAP
};

struct CBodyAnimConstraintInfoStateSetManager
{
	map<string, struct CBodyAnimConstraintInfoStateSet>     Sets;                            // type:MAP.ATBINARYMAP
};

struct CBodyBlendVariationAdditiveSetup
{
	string                           SourceSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                           SourceClip;                      // type:STRING.ATNONFINALHASHSTRING
	string                           ReferenceSet;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ReferenceClip;                   // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponClip;                      // type:STRING.ATNONFINALHASHSTRING
	float                            SourcePlayRate;                  // type:FLOAT.0
	float                            ReferencePlayRate;               // type:FLOAT.0
	bool                             SourceLooped;                    // type:BOOL.0
	bool                             ReferenceLooped;                 // type:BOOL.0
	bool                             UseCodeControlledWeight;         // type:BOOL.0
	bool                             OneShot;                         // type:BOOL.0
	float                            BlendInDuration;                 // type:FLOAT.0
};

struct CBoneCollisionFlagsCollection
{
	array<struct _0x381A30C7>        boneCollisionFlagSets;           // type:ARRAY.ATARRAY
};

struct CBountyIncident__Tunables : CTuning
{
	struct _0x5C0A76A6               Evasion;                         // type:STRUCT.STRUCTURE
	struct _0x6640F4F1               MultiPlayer;                     // type:STRUCT.STRUCTURE
	struct _0x3D810B5F               StateLines;                      // type:STRUCT.STRUCTURE
	uint                             MaxTimeForOnFootSpawns;          // type:UINT.0
	uint                             MaxTimeToBlockOverAcquisition;   // type:UINT.0
	uint                             MaxTimeToAllowAcquisitionOfResourcesWhenNotSpawning; // type:UINT.0
	uint                             TimeBetweenLocationUpdates;      // type:UINT.0
	uint                             TimeToExtendVisibleEngagementRangeAfterShoutOrWhistle; // type:UINT.0
	float                            MaxDistanceToAssignResources;    // type:FLOAT.0
	float                            MaxDistanceBetweenIncidentsToAssignResources; // type:FLOAT.0
	float                            MaxDistanceToMergeIncidentResources; // type:FLOAT.0
	float                            DefaultNoSpawnTimeout;           // type:FLOAT.0
	float                            MinDistanceForLocationUpdates;   // type:FLOAT.0
	float                            LowSeverityLawResponseRadius;    // type:FLOAT.0
	float                            HighSeverityLawResponseRadius;   // type:FLOAT.0
	float                            DistanceFromLawToConsiderSuspectVisiblyEngaged; // type:FLOAT.0
	float                            ExtendedDistanceFromLawToConsiderSuspectVisiblyEngaged; // type:FLOAT.0
};

struct CBrawlingRefDataCollection
{
	map<string, struct _0x9B07AB77>     MeleeAnimData;                   // type:MAP.ATBINARYMAP
	map<string, struct _0x4C96E060>     GrappleAnimData;                 // type:MAP.ATBINARYMAP
	map<string, struct _0x4FD2D58B>     MeleeCombatData;                 // type:MAP.ATBINARYMAP
	map<string, struct _0xA7184F51>     GrappleCombatData;               // type:MAP.ATBINARYMAP
};

struct CBrawlingStrengthData
{
	string                                   Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                   AttackerBrawlingStyle;           // type:STRING.ATNONFINALHASHSTRING
	array<string>                            VictimBrawlingStlyes;            // type:ARRAY.ATARRAY
	array<struct CBrawlingStrengthRange>     StrengthRanges;                  // type:ARRAY.ATARRAY
};

struct CBrawlingStrengthRange
{
	vec2V                            Range;                           // type:VEC2V.0
	bitset<enum _0x0A7EBE86>         Attributes;                      // type:BITSET.32BIT
};

struct CBrawlingStyleDataCollection
{
	map<string, struct _0x344CA6CF>          StyleData;                       // type:MAP.ATBINARYMAP
	array<struct CBrawlingStrengthData>      StrengthData;                    // type:ARRAY.ATARRAY
	array<struct CBrawlingWeaponSetData>     WeaponSetData;                   // type:ARRAY.ATARRAY
};

struct CBrawlingWeaponSet
{
	bitset<enum _0x36B806FA>         WeaponType;                      // type:BITSET.32BIT
	struct void                      MeleeAnimData;                   // type:STRUCT.EXTERNAL_NAMED
	struct void                      GrappleAnimData;                 // type:STRUCT.EXTERNAL_NAMED
};

struct CBrawlingWeaponSetData
{
	string                                     Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                     AttackerBrawlingStyle;           // type:STRING.ATNONFINALHASHSTRING
	array<string>                              VictimBrawlingStlyes;            // type:ARRAY.ATARRAY
	array<struct CBrawlingWeaponSet>           WeaponSets;                      // type:ARRAY.ATARRAY
	map<string, struct CBrawlingWeaponSet>     WeaponSetMap;                    // type:MAP.ATBINARYMAP
	bitset<enum _0x63E593A5>                   OwnerContext;                    // type:BITSET.32BIT
	bitset<enum _0x63E593A5>                   TargetContext;                   // type:BITSET.32BIT
	bool                                       IsOwnerContextASubset;           // type:BOOL.0
	bool                                       _0x0CAECBD9;                     // type:BOOL.0
};

struct CBreakableVehicleDoorLockManagerData
{
	map<string, struct _0xD0029EDD>     AllAnimData;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x969D1B29>     AllLockData;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x459E5B73>     AllPromptData;                   // type:MAP.ATBINARYMAP
	map<string, struct _0x78EC956A>     AllCombinedData;                 // type:MAP.ATBINARYMAP
	map<string, struct _0x9DB65D06>     ConditionsForCombinedData;       // type:MAP.ATBINARYMAP
	struct _0x75CF5062                  Constants;                       // type:STRUCT.STRUCTURE
};

struct CCameraSaveStructure : CBaseSaveObject
{
	int                              _0x94FE478C;                     // type:INT.0
};

struct CCarGen
{
	vec3                             position;                        // type:VECTOR3.0
	float                            orientX;                         // type:FLOAT.0
	float                            orientY;                         // type:FLOAT.0
	float                            perpendicularLength;             // type:FLOAT.0
	string                           carModel;                        // type:STRING.ATNONFINALHASHSTRING
	uint                             flags;                           // type:UINT.0
	int                              bodyColorRemap1;                 // type:INT.0
	int                              bodyColorRemap2;                 // type:INT.0
	int                              bodyColorRemap3;                 // type:INT.0
	int                              bodyColorRemap4;                 // type:INT.0
	string                           popGroup;                        // type:STRING.ATNONFINALHASHSTRING
	char                             livery;                          // type:CHAR.0
};

struct CCarHandlingData : CBaseSubHandlingData
{
};

struct CCarryMgrData
{
	map<string, struct _0x8D070486>                  CarryActionBlipSets;             // type:MAP.ATBINARYMAP
	map<string, struct _0x522DC506>                  CarryActionPromptTables;         // type:MAP.ATBINARYMAP
	map<string, struct _0x7FB7EDFF>                  ApproachActionWeightTables;      // type:MAP.ATBINARYMAP
	map<string, struct _0x1408091B>                  CCarryConfigDatas;               // type:MAP.ATBINARYMAP
	map<string, struct _0xA93417F2>                  CarryingMovementDatas;           // type:MAP.ATBINARYMAP
	map<string, struct _0xFEF486F6>                  CarriableIdlesDatas;             // type:MAP.ATBINARYMAP
	map<string, vec4V>                               ProtoOnlyOffsets;                // type:MAP.ATBINARYMAP
	map<string, struct _0xBECA49CE>                  DropActionDataSetDatas;          // type:MAP.ATBINARYMAP
	map<string, struct _0xD80D0344>                  HogtieActionDataSetDatas;        // type:MAP.ATBINARYMAP
	map<string, struct _0x9693704B>                  CutFreeActionDataSetDatas;       // type:MAP.ATBINARYMAP
	map<string, struct _0x12C5D5FB>                  ApproachPickupActionDataSetDatas; // type:MAP.ATBINARYMAP
	map<string, struct _0x45B035D1>                  ApproachLootingSetDatas;         // type:MAP.ATBINARYMAP
	map<string, struct _0x5E182D48>                  PlaceOnParentActionDataSetDatas; // type:MAP.ATBINARYMAP
	map<string, struct _0xB4A66F44>                  DropProbes;                      // type:MAP.ATBINARYMAP
	map<string, struct _0xE927D764>                  PromptProbes;                    // type:MAP.ATBINARYMAP
	map<string, struct _0x87F6F8E5>                  MTHWeights;                      // type:MAP.ATBINARYMAP
	map<string, struct _0xA135B60D>                  AnimScenes;                      // type:MAP.ATBINARYMAP
	map<string, struct _0x79216895>                  EscapeActionDataSets;            // type:MAP.ATBINARYMAP
	map<string, struct _0x8AE20C28>                  CarriableVfxDataSets;            // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     CarryActionPromptTableSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     CarryActionBlipSetSelectors;     // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     IdlesAnimSelectors;              // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     DropAnimDataSetSelectors;        // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     HumanCarryingMovementDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     MountCarryingMovementDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     VehicleCarryingMovementDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     ApproachPickupAnimDataSetSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     ApproachPickupFromParentAnimDataSetSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     ApproachPlaceOnParentAnimDataSetSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     HogtieActionDataSetSelectors;    // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     CutFreeActionDataSetSelectors;   // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     ApproachLootingActionDataSetSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     DeadAndHogtiedSwapConfigSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     HogtieBindingOutfitHashSelectors; // type:MAP.ATBINARYMAP
	map<string, struct _0x154728B8>                  CarryActionAnimRateSelectors;    // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     CarriableVfxDataSetSelectors;    // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     CarriablePromptTextSelectors;    // type:MAP.ATBINARYMAP
	array<string>                                    KnownCarriableModels;            // type:ARRAY.ATARRAY
	struct _0xE4265CCD                               Constants;                       // type:STRUCT.STRUCTURE
};

struct CCleanUpIncident__Tunables : CTuning
{
	uint                             MinTimeToWaitForArrivals;        // type:UINT.0
	float                            MaxDistanceForDialogueWithNearbyPed; // type:FLOAT.0
};

struct CClimbParams
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x19F0CFA9               HorizontalTest;                  // type:STRUCT.STRUCTURE
	struct _0x86D596F3               EdgeDetection;                   // type:STRUCT.STRUCTURE
	struct _0x687C2226               ComputeHandholdTest;             // type:STRUCT.STRUCTURE
	struct _0x7E4CDA74               ValidateHandhold;                // type:STRUCT.STRUCTURE
	struct _0x7EE781B7               ValidIntersection;               // type:STRUCT.STRUCTURE
	struct _0x2D47A95E               Stairs;                          // type:STRUCT.STRUCTURE
	struct _0x28929464               SlopeDetection;                  // type:STRUCT.STRUCTURE
	struct _0x1A690F44               BlockJump;                       // type:STRUCT.STRUCTURE
	struct _0x1785F817               JumpVault;                       // type:STRUCT.STRUCTURE
	struct _0xE3CFCA6A               DetermineVolume;                 // type:STRUCT.STRUCTURE
	struct _0xB2B0054D               ClimbAngle;                      // type:STRUCT.STRUCTURE
	struct _0x9A0418C5               Overhang;                        // type:STRUCT.STRUCTURE
	struct _0x64C9E73E               SideClearance;                   // type:STRUCT.STRUCTURE
	float                            fParallelDot;                    // type:FLOAT.0
	float                            fForwardDot;                     // type:FLOAT.0
	float                            fStickDot;                       // type:FLOAT.0
	float                            fAutoParallelDot;                // type:FLOAT.0
	float                            fAutoForwardDot;                 // type:FLOAT.0
	float                            fAutoStickDot;                   // type:FLOAT.0
	float                            fManualHeadingDiffMin;           // type:FLOAT.0
	float                            fManualHeadingDiffMax;           // type:FLOAT.0
	float                            fMaxClimbHeight;                 // type:FLOAT.0
	float                            fMinClimbHeight;                 // type:FLOAT.0
	float                            fMinFailClimbHeight;             // type:FLOAT.0
	float                            fMinClimbHeightLowerBound;       // type:FLOAT.0
	float                            fMaxHeightDropAllowance;         // type:FLOAT.0
	float                            fMaxAutoStepUpHeight;            // type:FLOAT.0
	float                            fMaxAutoVaultHeight;             // type:FLOAT.0
	float                            fMinAutoVaultClimbAngle;         // type:FLOAT.0
	float                            fMaxCrouchAutoVaultHeight;       // type:FLOAT.0
	float                            _0x0AF446E7;                     // type:FLOAT.0
	float                            fStepUpSlopeDotLimit;            // type:FLOAT.0
	float                            fEdgeCalculationDistScoreRangeMax; // type:FLOAT.0
	float                            fOverHeadSegmentCastStartOffset; // type:FLOAT.0
	float                            fOverHeadSegmentCastEndOffset;   // type:FLOAT.0
	float                            fOverHeadSegmentCastEndOffsetOnTrains; // type:FLOAT.0
	float                            fUseTestOrientationHeight;       // type:FLOAT.0
	float                            fAutoVaultMinMBR_AIControlled;   // type:FLOAT.0
	float                            fAutoVaultMinMBR_PlayerControlled; // type:FLOAT.0
	float                            fMaxHandholdGroundAngle;         // type:FLOAT.0
	float                            fReducedClimbingMaxHeight;       // type:FLOAT.0
	float                            fReducedClimbingMaxDepth;        // type:FLOAT.0
	bool                             bShowStickIntent;                // type:BOOL.0
	bool                             bDoHorizontalLineTests;          // type:BOOL.0
	bool                             bDoAutoVaultAsyncTests;          // type:BOOL.0
};

struct CClimbTuneMgr
{
	struct _0x48595F30                        PlayerClimbData;                 // type:STRUCT.STRUCTURE
	array<struct CClimbParams>                aClimbParams;                    // type:ARRAY.ATARRAY
	struct void                               DefaultClimbParams;              // type:STRUCT.EXTERNAL_NAMED
	array<struct CDropDownDetectorParams>     aDropdownDetectorParams;         // type:ARRAY.ATARRAY
	struct void                               DefaultDropDownParams;           // type:STRUCT.EXTERNAL_NAMED
};

struct CClipScalingHelper__Tunables : CTuning
{
	bool                             DisableRotationScaling;          // type:BOOL.0
	bool                             DisableRotationOvershoot;        // type:BOOL.0
	bool                             DisableTranslationScaling;       // type:BOOL.0
	bool                             DisableTranslationOvershoot;     // type:BOOL.0
	float                            MinVelocityToScale;              // type:FLOAT.0
	float                            MaxTransVelocity;                // type:FLOAT.0
	float                            MinRemainingAnimDurationToScale; // type:FLOAT.0
	float                            MinAnimRotationDeltaToScale;     // type:FLOAT.0
	float                            MinAnimTranslationDeltaToScale;  // type:FLOAT.0
	float                            MinCurrentRotationDeltaToScale;  // type:FLOAT.0
	float                            DefaultMinRotationScalingValue;  // type:FLOAT.0
	float                            DefaultMaxRotationScalingValue;  // type:FLOAT.0
	float                            DefaultMinTranslationScalingValue; // type:FLOAT.0
	float                            DefaultMaxTranslationScalingValue; // type:FLOAT.0
};

struct CClothingInfo : CItemInfo
{
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
};

struct CCoachInfo : CItemInfo
{
};

struct CCoachModInfo : CItemInfo
{
};

struct CCoarsePathLink
{
	struct CNodeAddress                 OtherNode;                       // type:STRUCT.STRUCTURE
	ushort                              Distance;                        // type:USHORT.0
	uchar                               LanesFromOtherNode;              // type:UCHAR.0
	uchar                               LanesToOtherNode;                // type:UCHAR.0
	uchar                               HierarchyOrder;                  // type:UCHAR.0
	bitset<enum ePathNodeLinkFlags>     Flags;                           // type:BITSET.32BIT
};

struct CCoarsePathNode
{
	struct CPathNode                 Node;                            // type:STRUCT.STRUCTURE
	struct CNodeAddress              MainNodeAddress;                 // type:STRUCT.STRUCTURE
};

struct CCoarseRoadGraph
{
	array<struct CCoarsePathNode>     Nodes;                           // type:ARRAY.ATARRAY
	array<struct CCoarsePathLink>     Links;                           // type:ARRAY.ATARRAY
};

struct CCollectableBase
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ToolTip;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Texture;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Txd;                             // type:STRING.ATNONFINALHASHSTRING
	string                           LargeTexture;                    // type:STRING.ATNONFINALHASHSTRING
	string                           LargeTxd;                        // type:STRING.ATNONFINALHASHSTRING
	string                           Category;                        // type:STRING.ATNONFINALHASHSTRING
	string                           Subcategory;                     // type:STRING.ATNONFINALHASHSTRING
	string                           IPLGroup;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CCollectableCigaretteCard : _0x6676112C
{
	bool                             Horizontal;                      // type:BOOL.0
	string                           BackTexture;                     // type:STRING.ATNONFINALHASHSTRING
	string                           BackTxd;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           SatchelItem;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CCollectableInfinateFindAndTurnInItem : CCollectableBase
{
};

struct CCollectableTreasure : CCollectableUniqueFindAndKeepItem
{
	vec3                             WarpLocation;                    // type:VECTOR3.0
	float                            WarpHeading;                     // type:FLOAT.0
};

struct CCollectableUniqueFindAndKeepItem : CCollectableBase
{
};

struct CCollectableUniqueFindAndTurnInItem : CCollectableBase
{
	vec3                             PlacementLocation;               // type:VECTOR3.0
	vec3                             WarpLocation;                    // type:VECTOR3.0
	float                            WarpHeading;                     // type:FLOAT.0
};

struct CCollectables
{
	uint                               Version;                         // type:UINT.0
	array<struct _0xF51D5F09>          _0x69CDA667;                     // type:ARRAY.ATARRAY
	array<struct CCollectableBase>     Collectables;                    // type:ARRAY.ATARRAY
};

struct CCombatInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x08DBCEDC                 CombatStyleModifier;             // type:ENUM.32BIT
	enum _0x4F456B61                 CombatMovement;                  // type:ENUM.32BIT
	enum _0xE97E4C7D                 CombatSpeed;                     // type:ENUM.32BIT
	bitset<enum _0x11286914>         BehaviourFlags;                  // type:BITSET.32BIT
	bitset<enum _0xB03DA555>         ExecuteTargetFlags;              // type:BITSET.32BIT
	enum _0xE793438C                 CombatAbility;                   // type:ENUM.32BIT
	enum _0xB69160F5                 AttackRanges;                    // type:ENUM.32BIT
	enum _0xE078876B                 FlankLimit;                      // type:ENUM.32BIT
	enum _0xB3D45189                 TargetLossResponse;              // type:ENUM.32BIT
	enum _0xC7B8413A                 TargetInjuredReaction;           // type:ENUM.32BIT
	enum _0xF035B4CB                 CoverHeightPreference;           // type:ENUM.32BIT
	enum _0xF4D7346E                 TacticalPointPreference;         // type:ENUM.32BIT
	float                            WeaponShootRateModifier;         // type:FLOAT.0
	float                            BlindFireChance;                 // type:FLOAT.0
	float                            BurstDurationInCover;            // type:FLOAT.0
	float                            MaxShootingDistance;             // type:FLOAT.0
	float                            TimeBetweenBurstsInCover;        // type:FLOAT.0
	float                            TimeBetweenPeeks;                // type:FLOAT.0
	float                            StrafeWhenMovingChance;          // type:FLOAT.0
	float                            WeaponAccuracy;                  // type:FLOAT.0
	float                            WalkWhenStrafingChance;          // type:FLOAT.0
	float                            HeliSpeedModifier;               // type:FLOAT.0
	float                            HeliSensesRange;                 // type:FLOAT.0
	float                            AttackWindowDistanceForCover;    // type:FLOAT.0
	float                            TimeToInvalidateInjuredTarget;   // type:FLOAT.0
	float                            MinimumDistanceToTarget;         // type:FLOAT.0
	float                            BulletImpactDetectionRange;      // type:FLOAT.0
	float                            _0x6A9388A5;                     // type:FLOAT.0
	float                            AimTurnThreshold;                // type:FLOAT.0
	float                            OptimalCoverDistance;            // type:FLOAT.0
	float                            AutomobileSpeedModifier;         // type:FLOAT.0
	float                            SpeedToFleeInVehicle;            // type:FLOAT.0
	float                            TriggerChargeTime_Far;           // type:FLOAT.0
	float                            TriggerChargeTime_Near;          // type:FLOAT.0
	float                            MaxDistanceToHearEvents;         // type:FLOAT.0
	float                            MaxDistanceToHearEventsUsingLOS; // type:FLOAT.0
	float                            MountSpeedModifier;              // type:FLOAT.0
	float                            MinTimeBetweenProjectileThrows;  // type:FLOAT.0
	float                            AccuracyOffsetModifier;          // type:FLOAT.0
	float                            MinTimeInBestCoverForAltCoverUse; // type:FLOAT.0
	float                            CrouchChance;                    // type:FLOAT.0
	float                            MaxWeaponPickupDistance;         // type:FLOAT.0
	float                            BulletReactionChance;            // type:FLOAT.0
	float                            _0x3C643FA4;                     // type:FLOAT.0
	float                            _0x0CEC48DC;                     // type:FLOAT.0
	float                            _0xF86FE7F5;                     // type:FLOAT.0
	float                            _0xABAF7CBA;                     // type:FLOAT.0
	float                            _0x7D73B16B;                     // type:FLOAT.0
	float                            _0x825C0B4F;                     // type:FLOAT.0
	float                            _0x43F782A1;                     // type:FLOAT.0
	float                            PinnedDownTakeCoverAmount;       // type:FLOAT.0
	float                            HipFireChanceMultiplier;         // type:FLOAT.0
	float                            WeaponPickupChance;              // type:FLOAT.0
	float                            _0xF8567CF9;                     // type:FLOAT.0
	float                            ExecuteTargetChance;             // type:FLOAT.0
	float                            ExecuteTargetFromReloadChance;   // type:FLOAT.0
	float                            ExecuteTargetMaxDistance;        // type:FLOAT.0
	float                            _0x9509B7D0;                     // type:FLOAT.0
	float                            _0xA94F8185;                     // type:FLOAT.0
	float                            MinTimeInCombatBeforeCharge;     // type:FLOAT.0
	float                            StartStandAndFireDistance;       // type:FLOAT.0
	float                            ConsiderRecentChargeAsActiveTimeout; // type:FLOAT.0
	float                            MinTimeBetweenChargesAtSameTarget; // type:FLOAT.0
	float                            MinTimeForSamePedToChargeAgain;  // type:FLOAT.0
	float                            _0x2A55712F;                     // type:FLOAT.0
	float                            _0x0247D0C2;                     // type:FLOAT.0
	float                            MinimumInCoverDistanceToTarget;  // type:FLOAT.0
	float                            _0x40D986C6;                     // type:FLOAT.0
	float                            _0x6B6A307B;                     // type:FLOAT.0
	float                            _0xAB7B3A68;                     // type:FLOAT.0
	float                            _0xC6F362EC;                     // type:FLOAT.0
	float                            MinDistanceFromTargetForLastManFlee; // type:FLOAT.0
	float                            ChanceOfLastManFleeFromCombat;   // type:FLOAT.0
	float                            _0xF90B3FEA;                     // type:FLOAT.0
	float                            _0xA666E534;                     // type:FLOAT.0
	float                            _0xAE22ED1D;                     // type:FLOAT.0
	float                            _0x28F16467;                     // type:FLOAT.0
	float                            _0xD981CDBB;                     // type:FLOAT.0
	float                            DistanceToConsiderDismount;      // type:FLOAT.0
	float                            DistanceToConsiderDismountInWilderness; // type:FLOAT.0
	float                            CoverMaxConsecutiveFlinchesAmount; // type:FLOAT.0
	float                            _0x471F36DD;                     // type:FLOAT.0
	float                            _0x24446F64;                     // type:FLOAT.0
	string                           FiringPatternHash;               // type:STRING.ATNONFINALHASHSTRING
	string                           FiringPatternInCoverHash;        // type:STRING.ATNONFINALHASHSTRING
	string                           FiringPatternExplosivesInCoverHash; // type:STRING.ATNONFINALHASHSTRING
	string                           FiringPatternThrownInCoverHash;  // type:STRING.ATNONFINALHASHSTRING
	string                           FiringPatternInMountedWeaponHash; // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCC24273C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           MountedChasingProfile;           // type:STRING.ATNONFINALHASHSTRING
};

struct CCombatInfoMgr
{
	array<struct CCombatInfo>        CombatInfos;                     // type:ARRAY.ATARRAY
};

struct CCombatTaskManager__Tunables : CTuning
{
	float                            fTimeBetweenUpdates;             // type:FLOAT.0
	float                            _0x168D814B;                     // type:FLOAT.0
	float                            _0xDE0E3B66;                     // type:FLOAT.0
	int                              iMaxPedsInCombatTask;            // type:INT.0
};

struct CCompEntityAnims
{
	string                                   AnimDict;                        // type:STRING.MEMBER
	string                                   AnimName;                        // type:STRING.MEMBER
	string                                   AnimatedModel;                   // type:STRING.MEMBER
	float                                    punchInPhase;                    // type:FLOAT.0
	float                                    punchOutPhase;                   // type:FLOAT.0
	array<struct CCompEntityEffectsData>     effectsData;                     // type:ARRAY.ATARRAY
};

struct CCompEntityEffectsData
{
	uint                             fxType;                          // type:UINT.0
	vec3                             fxOffsetPos;                     // type:VECTOR3.0
	vec4                             fxOffsetRot;                     // type:VECTOR4.0
	uint                             boneTag;                         // type:UINT.0
	float                            startPhase;                      // type:FLOAT.0
	float                            endPhase;                        // type:FLOAT.0
	bool                             ptFxIsTriggered;                 // type:BOOL.0
	string                           ptFxTag;                         // type:STRING.MEMBER
	float                            ptFxScale;                       // type:FLOAT.0
	float                            ptFxProbability;                 // type:FLOAT.0
	bool                             ptFxHasTint;                     // type:BOOL.0
	uchar                            ptFxTintR;                       // type:UCHAR.0
	uchar                            ptFxTintG;                       // type:UCHAR.0
	uchar                            ptFxTintB;                       // type:UCHAR.0
	vec3                             ptFxSize;                        // type:VECTOR3.0
};

struct CCompanionAIConditionCountEnemies : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 ExclusionPed;                    // type:ENUM.32BIT
	int                              MinEnemies;                      // type:INT.0
	int                              MaxEnemies;                      // type:INT.0
};

struct CCompanionAIConditionCountMissingEnemies : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinMissingEnemies;               // type:INT.0
};

struct CCompanionAIConditionCountVisibleEnemies : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinVisibleEnemies;               // type:INT.0
	int                              MaxVisibleEnemies;               // type:INT.0
};

struct CCompanionAnalysisKnowledge__CCombatTuningManager
{
	map<string, struct _0xB2B34F13>     CombatTuningMap;                 // type:MAP.ATBINARYMAP
};

struct CCompanionAnalysisKnowledge__CPersonalityInfoManager
{
	map<string, struct _0xBF9C8608>     PersonalityInfoMap;              // type:MAP.ATBINARYMAP
};

struct CCompanionAnalysisRuleSetAlerted__Tunables : CTuning
{
	float                            Test;                            // type:FLOAT.0
};

struct CCompanionAnalysisRuleSetCatNMouse__Tunables : CTuning
{
	float                            StartRetreatingClosestThreatDistance; // type:FLOAT.0
	float                            StartRetreatingClosestThreatDistanceAndCanSeeMe; // type:FLOAT.0
	float                            StartRetreatingClosestThreatETA; // type:FLOAT.0
	float                            ContinueRetreatingTime;          // type:FLOAT.0
	float                            ContinueRetreatingClosestThreatETA; // type:FLOAT.0
	float                            ContinueRetreatingClosestThreatDistance; // type:FLOAT.0
	float                            StartAdvancingClosestThreatMaxDistance; // type:FLOAT.0
	float                            StartAdvancingClosestThreatMinDistance; // type:FLOAT.0
	float                            StartAdvancingNotAdvancingNotRetreatingTime; // type:FLOAT.0
	float                            ContinueAdvancingClosestThreatDistance; // type:FLOAT.0
	float                            ContinueAdvancingClosestThreatLOSTime; // type:FLOAT.0
	float                            ContinueAdvancingClosestThreatSeesMeTime; // type:FLOAT.0
	float                            StandAndFightClosestThreatDistance; // type:FLOAT.0
};

struct CCompanionAnalysisRuleSetCombat__Tunables : CTuning
{
	float                            Test;                            // type:FLOAT.0
};

struct CCompanionAnalysisRuleSetDefault__Tunables : CTuning
{
	float                            Test;                            // type:FLOAT.0
};

struct CCompanionAnalysisRuleSetLead__Tunables : CTuning
{
};

struct CCompanionBehaviorActionDialog : _0x6002A167
{
	string                           Context;                         // type:STRING.ATPARTIALHASHVALUE
	string                           DebugDisplay;                    // type:STRING.ATSTRING
};

struct CCompanionBehaviorActionEquipWeapon : _0x6002A167
{
	bool                             DrawWeapon;                      // type:BOOL.0
	bool                             HolsterWeapon;                   // type:BOOL.0
	uint                             MinTimeMS;                       // type:UINT.0
	uint                             MaxTimeMS;                       // type:UINT.0
};

struct CCompanionBehaviorActionGotoPosition : _0x6002A167
{
};

struct CCompanionBehaviorActionHeadLook : _0x6002A167
{
	enum _0xB68B3A53                 HeadLookTargetType;              // type:ENUM.32BIT
};

struct CCompanionBehaviorActionList : _0x6002A167
{
	array<struct _0x6002A167>        Actions;                         // type:ARRAY.ATARRAY
};

struct CCompanionBehaviorActionPedConversation : _0x6002A167
{
	string                           Conversation;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CCompanionBehaviorActionPedInteraction : _0x6002A167
{
};

struct CCompanionBehaviorActionRandomSelectDynamicScenario : _0x6002A167
{
	array<struct _0xC4B9FD26>        ScenarioTypes;                   // type:ARRAY.ATARRAY
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct CCompanionBehaviorActionRememberTimedEvent : _0x6002A167
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	string                           Context;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CCompanionBehaviorActionSelectLootable : _0x6002A167
{
};

struct CCompanionBehaviorActionSelectScenario : _0x6002A167
{
};

struct CCompanionBehaviorActionSimpleTask : _0x6002A167
{
};

struct CCompanionBehaviorActionSimpleTaskWithDelay : CCompanionBehaviorActionSimpleTask
{
	uint                             MinTimeMS;                       // type:UINT.0
	uint                             MaxTimeMS;                       // type:UINT.0
};

struct CCompanionBehaviorActionWhistleForHorse : _0x6002A167
{
};

struct CCompanionBehaviorConditionActivityDestinationInRange : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct CCompanionBehaviorConditionActivityStartInRange : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct CCompanionBehaviorConditionActivityType : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	enum _0x18F77396                 ActivityType;                    // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionBeatNearby : CAICondition
{
};

struct CCompanionBehaviorConditionCanConverse : CAICondition
{
	enum _0x563FBCEA                 EntityA;                         // type:ENUM.32BIT
	enum _0x563FBCEA                 EntityB;                         // type:ENUM.32BIT
	string                           Conversation;                    // type:STRING.ATNONFINALHASHSTRING
	uint                             RepeatDelay;                     // type:UINT.0
};

struct CCompanionBehaviorConditionCanDialog : CAICondition
{
	enum _0x563FBCEA                 EntityA;                         // type:ENUM.32BIT
	enum _0x563FBCEA                 EntityB;                         // type:ENUM.32BIT
	string                           Context;                         // type:STRING.ATPARTIALHASHVALUE
	uint                             RepeatDelay;                     // type:UINT.0
};

struct CCompanionBehaviorConditionCanSearch : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionCanWhistle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xE1A9337A;                     // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionCheckAbilities : CAICondition
{
	bitset<enum _0x27480FC6>         Abilities;                       // type:BITSET.32BIT
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionCheckTimedEventHistory : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	string                           Context;                         // type:STRING.ATNONFINALHASHSTRING
	uint                             MaxTimeMS;                       // type:UINT.0
	bool                             CheckGroup;                      // type:BOOL.0
};

struct CCompanionBehaviorConditionCompanionName : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CCompanionBehaviorConditionDialogTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x4ED80C74;                     // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionDistToLeaderIsInRange : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct CCompanionBehaviorConditionDistToPositionIsInRange : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct CCompanionBehaviorConditionFormationPositionInRange : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct CCompanionBehaviorConditionHack1 : CAICondition
{
};

struct CCompanionBehaviorConditionHasCombatTargets : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionIsDynamic : CAICondition
{
};

struct CCompanionBehaviorConditionIsInGroup : CAICondition
{
	enum _0x563FBCEA                 EntityA;                         // type:ENUM.32BIT
	enum _0x563FBCEA                 EntityB;                         // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionIsScenarioType : CAICondition
{
	string                           ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CCompanionBehaviorConditionKnowledgeTag : CAICondition
{
	enum _0xB19ED4E7                 Tag;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionLootable : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionMountTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xE1A9337A;                     // type:ENUM.32BIT
};

struct CCompanionBehaviorConditionPositionIsInVolume : CAICondition
{
};

struct CCompanionBehaviorConditionScenarioFinder : CAICondition
{
	bool                             IgnoreTimeRestrictions;          // type:BOOL.0
	bool                             IgnoreModelRestrictions;         // type:BOOL.0
	bool                             _0xEACE8CA1;                     // type:BOOL.0
	bool                             _0x394F7BF0;                     // type:BOOL.0
	bool                             _0x2710E316;                     // type:BOOL.0
	bool                             bRespectNoAttractionFlag;        // type:BOOL.0
	bool                             bCheckBlockingAreas;             // type:BOOL.0
	bitset<enum _0x9138840C>         RequiredScenarioInfoFlags;       // type:BITSET.32BIT
};

struct CCompanionBehaviorDictionary
{
	string                                         Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CCompanionBehaviorRuleSet>        RuleSets;                        // type:ARRAY.ATARRAY
	array<struct CCompanionBehaviorDictionary>     Dictionaries;                    // type:ARRAY.ATARRAY
};

struct CCompanionBehaviorManager
{
	struct CCompanionBehaviorDictionary     Dictionary;                      // type:STRUCT.STRUCTURE
};

struct CCompanionBehaviorRule
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct CAICondition              Validate;                        // type:STRUCT.POINTER
	array<struct _0x6002A167>        Actions;                         // type:ARRAY.ATARRAY
};

struct CCompanionBehaviorRuleSet
{
	string                                            Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CCompanionBehaviorRule>              Rules;                           // type:ARRAY.ATARRAY
	array<struct CCompanionBehaviorRuleSetHandle>     Includes;                        // type:ARRAY.ATARRAY
};

struct CCompanionBehaviorRuleSetHandle
{
	array<string, 5>                 Path;                            // type:ARRAY.ATFIXEDARRAY
};

struct CCompanionBehaviorScorerAdd : _0x970644E1
{
};

struct CCompanionBehaviorScorerConditionalConstant : _0x857163E6
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	float                            Score;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerConstant : _0x857163E6
{
	float                            Score;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerCurrentCoverPoint : _0x857163E6
{
	float                            Score;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerDistToActivityDestination : _0x857163E6
{
	float                            Scale;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerDistToGroupLeader : _0x857163E6
{
	float                            Scale;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerDistToMountTarget : _0x857163E6
{
	float                            Scale;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerDistToPosition : _0x857163E6
{
	float                            Scale;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerIsInAScenarioChain : _0x857163E6
{
	float                            Score;                           // type:FLOAT.0
};

struct CCompanionBehaviorScorerIsNextLinkInScenarioChain : _0x857163E6
{
	float                            Score;                           // type:FLOAT.0
};

struct CCompanionBehaviorTaskEquipWeapon : _0x14229900
{
	bool                             DrawWeapon;                      // type:BOOL.0
	bool                             HolsterWeapon;                   // type:BOOL.0
};

struct CCompanionBehaviorTaskGotoPosition : _0x14229900
{
	float                            PathSearchCompletionRadius;      // type:FLOAT.0
	float                            MoveFollowPathTargetRadius;      // type:FLOAT.0
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct CCompanionBehaviorTaskHeal : _0x14229900
{
};

struct CCompanionBehaviorTaskSearch : _0x14229900
{
};

struct CCompanionBehaviorTaskStealthKill : _0x14229900
{
};

struct CCompendium
{
	uint                                      Version;                         // type:UINT.0
	array<struct CCompendiumCategoryBase>     Categories;                      // type:ARRAY.ATARRAY
	array<struct _0xF010F3EE>                 Subcategories;                   // type:ARRAY.ATARRAY
};

struct CCompendiumCategoryAnimal : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryAnimalMP : CCompendiumCategoryAnimal
{
};

struct CCompendiumCategoryBase
{
	enum eCompendiumCategories            Category;                        // type:ENUM.32BIT
	string                                PageTitleText;                   // type:STRING.ATNONFINALHASHSTRING
	string                                LocText;                         // type:STRING.ATNONFINALHASHSTRING
	string                                ToolTip;                         // type:STRING.ATNONFINALHASHSTRING
	string                                DescriptionText;                 // type:STRING.ATNONFINALHASHSTRING
	string                                Texture;                         // type:STRING.ATNONFINALHASHSTRING
	string                                Txd;                             // type:STRING.ATNONFINALHASHSTRING
	string                                MenuLink;                        // type:STRING.ATNONFINALHASHSTRING
	string                                DetailsMenuLink;                 // type:STRING.ATNONFINALHASHSTRING
	string                                ToastAppID;                      // type:STRING.ATNSHASHSTRING
	string                                ToastEntryPoint;                 // type:STRING.ATNONFINALHASHSTRING
	string                                MenuUndiscoveredItemTitleOverride; // type:STRING.ATNONFINALHASHSTRING
	string                                MenuUndiscoveredItemDescOverride; // type:STRING.ATNONFINALHASHSTRING
	bool                                  PreventSaving;                   // type:BOOL.0
	array<struct CCompendiumItemBase>     Items;                           // type:ARRAY.ATARRAY
	array<struct _0xFD39358F>             EditionData;                     // type:ARRAY.ATARRAY
};

struct CCompendiumCategoryCigCards : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryEquipment : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryFish : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryFishMP : CCompendiumCategoryFish
{
};

struct CCompendiumCategoryGang : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryHerb : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryHerbMP : CCompendiumCategoryHerb
{
};

struct CCompendiumCategoryHorse : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryHorseMP : CCompendiumCategoryHorse
{
};

struct CCompendiumCategoryWeapon : CCompendiumCategoryBase
{
};

struct CCompendiumCategoryWeaponMP : CCompendiumCategoryWeapon
{
};

struct CCompendiumItemAnimal : CCompendiumItemBase
{
	string                           ShortDescription;                // type:STRING.ATNONFINALHASHSTRING
	string                           StatName;                        // type:STRING.ATNSHASHSTRING
	string                           MapDiscoveryLinkage;             // type:STRING.ATNONFINALHASHSTRING
	bool                             IsLegendary;                     // type:BOOL.0
	bool                             IsDomestic;                      // type:BOOL.0
};

struct CCompendiumItemAnimalMP : CCompendiumItemAnimal
{
};

struct CCompendiumItemAnimalNaturalist : CCompendiumItemAnimalMP
{
	string                           Sample;                          // type:STRING.ATNONFINALHASHSTRING
	string                           Stamp;                           // type:STRING.ATNONFINALHASHSTRING
	string                           StudyAwardId;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CCompendiumItemAnimalNaturalistLegendary : CCompendiumItemAnimalNaturalist
{
	array<string>                    LegendaryDescriptions;           // type:ARRAY.ATARRAY
};

struct CCompendiumItemBase
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Description;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ToolTip;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ToastTextureName;                // type:STRING.ATNONFINALHASHSTRING
	string                           ToastTextureTxd;                 // type:STRING.ATNONFINALHASHSTRING
	string                           SmallTextureName;                // type:STRING.ATNONFINALHASHSTRING
	string                           SmallTextureTxd;                 // type:STRING.ATNONFINALHASHSTRING
	string                           LargeTextureName;                // type:STRING.ATNONFINALHASHSTRING
	string                           LargeTextureTxd;                 // type:STRING.ATNONFINALHASHSTRING
	enum eCompendiumCategories       Category;                        // type:ENUM.32BIT
	bool                             PreventToasts;                   // type:BOOL.0
	bool                             CanBeMissed;                     // type:BOOL.0
};

struct CCompendiumItemEquipment : CCompendiumItemBase
{
};

struct CCompendiumItemFish : CCompendiumItemBase
{
	array<struct _0xA881D421>        LureSuitabilityGroups;           // type:ARRAY.ATARRAY
	string                           ShortDescription;                // type:STRING.ATNONFINALHASHSTRING
	string                           StatName;                        // type:STRING.ATNSHASHSTRING
	string                           MapDiscoveryLinkage;             // type:STRING.ATNONFINALHASHSTRING
	bool                             IsLegendary;                     // type:BOOL.0
};

struct CCompendiumItemGang : CCompendiumItemBase
{
	string                           DescriptionBrief;                // type:STRING.ATNONFINALHASHSTRING
	struct _0x5FBA3B3A               Camps;                           // type:STRUCT.STRUCTURE
	struct _0x5FBA3B3A               Hideouts;                        // type:STRUCT.STRUCTURE
	bool                             HasBounties;                     // type:BOOL.0
};

struct CCompendiumItemHerb : CCompendiumItemBase
{
	string                           StatName;                        // type:STRING.ATNSHASHSTRING
	string                           MapDiscoveryLinkage;             // type:STRING.ATNONFINALHASHSTRING
	string                           CigCardName;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             CanTaste;                        // type:BOOL.0
};

struct CCompendiumItemHorse : CCompendiumItemBase
{
	string                           MapDiscoveryLinkage;             // type:STRING.ATNONFINALHASHSTRING
	string                           ShortDescription;                // type:STRING.ATNONFINALHASHSTRING
	string                           AttributeSet;                    // type:STRING.ATNONFINALHASHSTRING
	struct _0x5FBA3B3A               CommonCoats;                     // type:STRUCT.STRUCTURE
	struct _0x5FBA3B3A               UncommonCoats;                   // type:STRUCT.STRUCTURE
	bool                             IsWild;                          // type:BOOL.0
};

struct CCompendiumItemWeapon : CCompendiumItemBase
{
	string                           WeaponName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           AmmoName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CCompendiumSubcategoryNaturalistAnimals : _0x3BEADE9F
{
	string                           StampCollectionBuyAward;         // type:STRING.ATNONFINALHASHSTRING
	string                           ToastTitle;                      // type:STRING.ATNONFINALHASHSTRING
	string                           ToastDescriptionProgress;        // type:STRING.ATNONFINALHASHSTRING
	string                           ToastDescriptionComplete;        // type:STRING.ATNONFINALHASHSTRING
	string                           HelpTextId;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CCompositeEntityAnimation
{
	string                                           animDict;                        // type:STRING.MEMBER
	string                                           animName;                        // type:STRING.MEMBER
	string                                           animatedModel;                   // type:STRING.MEMBER
	float                                            punchInPhase;                    // type:FLOAT.0
	float                                            punchOutPhase;                   // type:FLOAT.0
	array<struct CCompositeEntityEffectsSetting>     effectsData;                     // type:ARRAY.ATARRAY
};

struct CCompositeEntityArchetypeDef : CBaseArchetypeDef
{
	string                                      startModel;                      // type:STRING.MEMBER
	string                                      endModel;                        // type:STRING.MEMBER
	string                                      startImapFile;                   // type:STRING.ATNONFINALHASHSTRING
	string                                      endImapFile;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct CCompositeEntityAnimation>     animations;                      // type:ARRAY.ATARRAY
};

struct CCompositeEntityEffectsSetting
{
	enum _0x1A0C237C                 fxType;                          // type:ENUM.32BIT
	vec3                             fxOffsetPos;                     // type:VECTOR3.0
	vec4                             fxOffsetRot;                     // type:VECTOR4.0
	uint                             boneTag;                         // type:UINT.0
	float                            startPhase;                      // type:FLOAT.0
	float                            endPhase;                        // type:FLOAT.0
	bool                             ptFxIsTriggered;                 // type:BOOL.0
	string                           ptFxTag;                         // type:STRING.MEMBER
	float                            ptFxScale;                       // type:FLOAT.0
	float                            ptFxProbability;                 // type:FLOAT.0
	bool                             ptFxHasTint;                     // type:BOOL.0
	uchar                            ptFxTintR;                       // type:UCHAR.0
	uchar                            ptFxTintG;                       // type:UCHAR.0
	uchar                            ptFxTintB;                       // type:UCHAR.0
	vec3                             ptFxSize;                        // type:VECTOR3.0
};

struct CCompositeEntityType
{
	string                             Name;                            // type:STRING.MEMBER
	float                              lodDist;                         // type:FLOAT.0
	uint                               flags;                           // type:UINT.0
	uint                               specialAttribute;                // type:UINT.0
	vec3                               bbMin;                           // type:VECTOR3.0
	vec3                               bbMax;                           // type:VECTOR3.0
	vec3                               bsCentre;                        // type:VECTOR3.0
	float                              bsRadius;                        // type:FLOAT.0
	string                             StartModel;                      // type:STRING.MEMBER
	string                             EndModel;                        // type:STRING.MEMBER
	string                             Audio;                           // type:STRING.MEMBER
	string                             StartImapFile;                   // type:STRING.ATNONFINALHASHSTRING
	string                             EndImapFile;                     // type:STRING.ATNONFINALHASHSTRING
	string                             PtFxAssetName;                   // type:STRING.ATNONFINALHASHSTRING
	array<struct CCompEntityAnims>     Animations;                      // type:ARRAY.ATARRAY
};

struct CCompositeLootableEntityDefsGroup
{
	map<string, struct _0xD46703DD>     Group;                           // type:MAP.ATBINARYMAP
};

struct CConditionalAnimManager
{
	array<struct CConditionalAnimsGroup>     ConditionalAnimsGroup;           // type:ARRAY.ATARRAY
};

struct CConditionalAnimRansackInfo
{
	float                            MaxAngleAdjustment;              // type:FLOAT.0
	float                            CapsuleMargin;                   // type:FLOAT.0
	float                            MinPlaybackRate;                 // type:FLOAT.0
	float                            MaxPlaybackRate;                 // type:FLOAT.0
	bool                             NoGripAlignment;                 // type:BOOL.0
	vec3V                            FemaleIkOffset;                  // type:VEC3V.0
};

struct CConditionalAnimScene : _0x594EF6D2
{
	string                                 SceneId;                         // type:STRING.ATNONFINALHASHSTRING
	string                                 PlayListId;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct CConditionalPlayList>     PlayLists;                       // type:ARRAY.ATARRAY
	string                                 ControlEntityId;                 // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x2AB4B219>               Flags;                           // type:BITSET.32BIT
	array<struct _0x633FCD2F>              ParticipantFlags;                // type:ARRAY.ATARRAY
};

struct CConditionalAnimTransitionInfo
{
	string                                          Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CAICondition>                      Conditions;                      // type:ARRAY.ATARRAY
	struct CConditionalAnimTransitionPromptInfo     ActivationPrompt;                // type:STRUCT.POINTER
	bitset<enum _0x57366AB1>                        Flags;                           // type:BITSET.32BIT
	float                                           Weight;                          // type:FLOAT.0
	float                                           BlendInDuration;                 // type:FLOAT.0
	float                                           BlendOutDuration;                // type:FLOAT.0
	string                                          _0x3935ABBF;                     // type:STRING.ATFINALHASHSTRING
	array<struct _0x594EF6D2>                       Transitions;                     // type:ARRAY.ATARRAY
	string                                          FromConditionalAnims;            // type:STRING.ATNONFINALHASHSTRING
	array<string>                                   TransitionToConditionalAnimsList; // type:ARRAY.ATARRAY
	string                                          ControlWeightEntityId;           // type:STRING.ATNONFINALHASHSTRING
};

struct CConditionalAnimTransitionPromptInfo
{
	string                           PromptText;                      // type:STRING.ATNONFINALHASHSTRING
	enum rage__InputType             InputType;                       // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
	enum _0x4C3F949C                 TriggerType;                     // type:ENUM.32BIT
	bool                             _0xD55062A6;                     // type:BOOL.0
	bool                             IsAmbientPrompt;                 // type:BOOL.0
};

struct CConditionalAnimWeaponInfo
{
	bitset<enum _0xC0B6A160>         UseWeaponFlags;                  // type:BITSET.32BIT
	bitset<enum _0xC0B6A160>         ExcludeWeaponFlags;              // type:BITSET.32BIT
	enum eWeaponAttachPoint          UseWeaponAttachPoint;            // type:ENUM.32BIT
};

struct CConditionalAnims
{
	string                                    Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x0090661F>                  Flags;                           // type:BITSET.64BIT
	bitset<enum _0x24E2C94A>                  DebugFlags;                      // type:BITSET.32BIT
	enum _0xE52A9E81                          ActivityTypeOverride;            // type:ENUM.32BIT
	float                                     Probability;                     // type:FLOAT.0
	float                                     SpawningProbabilityOverride;     // type:FLOAT.0
	struct CAICondition                       SpecialCondition;                // type:STRUCT.POINTER
	float                                     SpecialConditionProbability;     // type:FLOAT.0
	float                                     NextIdleTime;                    // type:FLOAT.0
	float                                     BlendInDelta;                    // type:FLOAT.0
	float                                     BlendOutDelta;                   // type:FLOAT.0
	string                                    AudioScenario;                   // type:STRING.ATNONFINALHASHSTRING
	string                                    _0xBE940FE9;                     // type:STRING.ATNONFINALHASHSTRING
	string                                    GestureClipSetId;                // type:STRING.ATNONFINALHASHSTRING
	string                                    SecondaryGestureClipSetId;       // type:STRING.ATNONFINALHASHSTRING
	string                                    FacialGestureClipSetId;          // type:STRING.ATNONFINALHASHSTRING
	string                                    LeftHandGestureClipSetId;        // type:STRING.ATNONFINALHASHSTRING
	string                                    RightHandGestureClipSetId;       // type:STRING.ATNONFINALHASHSTRING
	string                                    AuxiliaryGestureClipSetId;       // type:STRING.ATNONFINALHASHSTRING
	array<string>                             BodyPartStateSets;               // type:ARRAY.ATARRAY
	array<string>                             ReactBodyPartStateSets;          // type:ARRAY.ATARRAY
	string                                    FacialClipSetId;                 // type:STRING.ATNONFINALHASHSTRING
	string                                    LowLodBaseAnim;                  // type:STRING.ATNONFINALHASHSTRING
	struct CConditionalAnimWeaponInfo         WeaponInfo;                      // type:STRUCT.POINTER
	struct CConditionalAnimRansackInfo        RansackInfo;                     // type:STRUCT.POINTER
	vec3V                                     LookAtOffset;                    // type:VEC3V.0
	float                                     AmbientLookAtAngleMaxLimit;      // type:FLOAT.0
	float                                     AmbientLookAtAngleMinLimit;      // type:FLOAT.0
	float                                     AmbientLookAtPedDistanceOverride; // type:FLOAT.0
	float                                     PedDrunknessOnExit;              // type:FLOAT.0
	float                                     TimeTilPedSetsDrunkness;         // type:FLOAT.0
	float                                     ActiveLookMinThreshold;          // type:FLOAT.0
	float                                     ActiveLookMaxThreshold;          // type:FLOAT.0
	float                                     ImmediateBreakoutBlendOut;       // type:FLOAT.0
	array<struct _0xAC3664B9>                 ReactionsTransitionsToConditionalAnims; // type:ARRAY.ATARRAY
	string                                    EmotionalLayerUpperBodySolverTemplate; // type:STRING.ATNONFINALHASHSTRING
	string                                    ReactionActionWeightMultiplierTemplate; // type:STRING.ATNONFINALHASHSTRING
	string                                    DancingLayerTemplate;            // type:STRING.ATNONFINALHASHSTRING
	array<struct CConditionalClipSetProp>     PropData;                        // type:ARRAY.ATARRAY
	struct CAICondition                       SpecialPreEnterCondition;        // type:STRUCT.POINTER
	struct CAICondition                       _0x02DCF76F;                     // type:STRUCT.POINTER
	array<struct CAICondition>                Conditions;                      // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 BaseAnims;                       // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 Enters;                          // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 _0xFA3CF6F3;                     // type:ARRAY.ATARRAY
	array<struct CAICondition>                ExitConditions;                  // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 Exits;                           // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 MovingExits;                     // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 Variations;                      // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 SecondaryVariations;             // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 ActiveLooks;                     // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 Reactions;                       // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 ReactionEnters;                  // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 ReactionExits;                   // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 ReactionEmotionalLayers;         // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 ReactionAdditiveReference;       // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 ReactionActionLayers;            // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 EmotionalExits;                  // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 CombatExits;                     // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 QuickExits;                      // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 _0x6E0D83A5;                     // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 DancingLayers;                   // type:ARRAY.ATARRAY
	array<struct _0x594EF6D2>                 DancingAdditiveReference;        // type:ARRAY.ATARRAY
	string                                    Fallback;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CConditionalAnimsFile
{
	array<struct CConditionalAnims>                  ConditionalAnims;                // type:ARRAY.ATARRAY
	array<struct CConditionalAnimTransitionInfo>     ConditionalAnimTransitions;      // type:ARRAY.ATARRAY
};

struct CConditionalAnimsGroup
{
	string                                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CConditionalAnims>                  ConditionalAnims;                // type:ARRAY.ATARRAY
	array<struct CConditionalAnimTransitionInfo>     ConditionalAnimTransitions;      // type:ARRAY.ATARRAY
};

struct CConditionalCarryingFlagsSelector
{
	bitset<enum _0x75F7A4EB>         Default;                         // type:BITSET.32BIT
	array<struct _0x2D66239C>        ConditionOverrideFlags;          // type:ARRAY.ATARRAY
};

struct CConditionalClipSet : _0x594EF6D2
{
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           AssociatedSpeech;                // type:STRING.ATNONFINALHASHSTRING
	string                           EmotionalLayerUpperBodySolverTemplateOverride; // type:STRING.ATNONFINALHASHSTRING
	struct _0x594EF6D2               ReactionAdditiveReferenceOverride; // type:STRUCT.POINTER
	float                            MinDuration;                     // type:FLOAT.0
	float                            MaxDuration;                     // type:FLOAT.0
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	float                            WrapDirection;                   // type:FLOAT.0
	bool                             SupportsRandomClipSelectionForEmotionalLayer; // type:BOOL.0
};

struct CConditionalClipSetProp
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	string                           PropType;                        // type:STRING.ATNONFINALHASHSTRING
	string                           PropSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ItemInteraction;                 // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAF481637;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3393400A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           CarriableConfig;                 // type:STRING.ATNONFINALHASHSTRING
	enum _0x058649C5                 CarriableWarpSlot;               // type:ENUM.32BIT
	string                           _0x4E7F2A48;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x672FA8CF>        AnimDofInitData;                 // type:ARRAY.ATARRAY
	bitset<enum _0x4B29D9E5>         Flags;                           // type:BITSET.32BIT
	enum eWeaponAttachPoint          HoldingAttachPoint;              // type:ENUM.32BIT
	float                            ChanceOfSpawning;                // type:FLOAT.0
};

struct CConditionalFacialAnim
{
	string                           ClipsetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CConditionalFacialAnimManager
{
	map<string, struct CConditionalFacialAnimationGroup>     ConditionalFacialAnimGroups;     // type:MAP.ATBINARYMAP
};

struct CConditionalFacialAnimationGroup
{
	array<struct CConditionalFacialAnim>     ConditionalFacialAnimInfos;      // type:ARRAY.ATARRAY
};

struct CConditionalHashSelector
{
	string                           Default;                         // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x1824C4AB>        ConditionOverrideHashes;         // type:ARRAY.ATARRAY
};

struct CConditionalPlayList
{
	string                           PlayListId;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CConditionalPlayListWithProperies : CConditionalPlayList
{
	float                            HeadingDegrees;                  // type:FLOAT.0
};

struct CConfigOnlineServices
{
	string                           RosTitleName;                    // type:STRING.CONST_STRING
	int                              RosTitleVersion;                 // type:INT.0
	int                              RosScVersion;                    // type:INT.0
	int                              RosGameServerVersionNumber;      // type:INT.0
	string                           RosGameServerCatalogReleaseId;   // type:STRING.ATNONFINALHASHSTRING
	int                              SteamAppId;                      // type:INT.0
	string                           TitleDirectoryName;              // type:STRING.CONST_STRING
	string                           MultiplayerSessionTemplateName;  // type:STRING.CONST_STRING
	string                           MultiplayerSessionImage;         // type:STRING.CONST_STRING
};

struct CConfigScaleformManager
{
	int                              PrimaryHeapSizeKB;               // type:INT.0
};

struct CConfigScriptResourceExpectedMaximums
{
	array<struct CScriptResourceExpectedMaximum>     ExpectedMaximumsArray;           // type:ARRAY.ATARRAY
};

struct CConfigScriptStackSizes
{
	map<string, array<struct CScriptStackSizeDataEntry>>     StackSizeData;                   // type:MAP.ATBINARYMAP
	map<string, string>                                      _0x8C81E3A1;                     // type:MAP.ATBINARYMAP
};

struct CConfigUIArbiter
{
	struct CConfigUIRingBuffer       EventBuffer;                     // type:STRUCT.STRUCTURE
	struct CConfigUIRingBuffer       ActionBuffer;                    // type:STRUCT.STRUCTURE
};

struct CConfigUIRingBuffer
{
	int                              BufferSizeKB;                    // type:INT.0
};

struct CConsumableInfo : CItemInfo
{
	array<struct _0x5DF15BAA>        StatModifierArray;               // type:ARRAY.ATARRAY
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
	struct CInspectionInfo           InspectionInfo;                  // type:STRUCT.STRUCTURE
};

struct CContentsOfWeatherXmlFile
{
	float                            VersionNumber;                   // type:FLOAT.0
	array<struct _0xF72CBA11>        WeatherGpuFx;                    // type:ARRAY.ATARRAY
	array<struct _0x11C51609>        WeatherTypes;                    // type:ARRAY.ATARRAY
	array<struct _0x5B800C53>        WeatherCycles;                   // type:ARRAY.ATARRAY
	array<string>                    SinglePlayerOnlyWeathers;        // type:ARRAY.ATARRAY
	struct _0xCCFE7AD6               WeatherMiscData;                 // type:STRUCT.STRUCTURE
};

struct CContextualTaskAddOnNotifyOfApproach : _0x4F9987A4
{
	enum _0x563FBCEA                 _0x770F4295;                     // type:ENUM.32BIT
};

struct CContextualTaskAnimalAlerted : _0x14229900
{
	enum _0x563FBCEA                 _0x77F019B6;                     // type:ENUM.32BIT
	float                            MinTimeAlerted;                  // type:FLOAT.0
	float                            MaxTimeAlerted;                  // type:FLOAT.0
};

struct CContextualTaskAnimalBeingTamed : _0x14229900
{
	enum _0x563FBCEA                 _0xDB7704B4;                     // type:ENUM.32BIT
	bool                             bAlreadyCalledOut;               // type:BOOL.0
};

struct CContextualTaskAnimalCombatCharge : _0x14229900
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CContextualTaskAnimalLookAtEvent : _0x14229900
{
};

struct CContextualTaskBarBrawlCombat : _0x14229900
{
};

struct CContextualTaskCarrionBird : _0x14229900
{
	enum _0x563FBCEA                 _0x41F58EC5;                     // type:ENUM.32BIT
};

struct CContextualTaskCombatBreakout : _0x14229900
{
	enum AmbientEventType            _0x9141FD78;                     // type:ENUM.32BIT
};

struct CContextualTaskConfrontCriminal : _0x14229900
{
	enum _0x563FBCEA                 _0xB5B32CEF;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 SecondaryEntity;                 // type:ENUM.32BIT
	bool                             EnableJacking;                   // type:BOOL.0
	bool                             DisableIntimidate;               // type:BOOL.0
	bool                             CanShove;                        // type:BOOL.0
	bool                             ItemStolen;                      // type:BOOL.0
	bool                             _0xE2D58943;                     // type:BOOL.0
};

struct CContextualTaskCower : _0x14229900
{
	enum _0x563FBCEA                 _0xECA51745;                     // type:ENUM.32BIT
	int                              MinCowerDuration;                // type:INT.0
	int                              MaxCowerDuration;                // type:INT.0
	bool                             MustFaceEntity;                  // type:BOOL.0
};

struct CContextualTaskCutFree : _0x14229900
{
	enum _0x563FBCEA                 TargetEntity;                    // type:ENUM.32BIT
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct CContextualTaskDoNothing : _0x14229900
{
	float                            Time;                            // type:FLOAT.0
};

struct CContextualTaskDogConfront : _0x14229900
{
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
};

struct CContextualTaskEat : _0x14229900
{
	enum _0x563FBCEA                 Predator;                        // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x41F58EC5;                     // type:ENUM.32BIT
	float                            MinTimeToFaceDeadBody;           // type:FLOAT.0
	float                            MaxTimeToFaceDeadBody;           // type:FLOAT.0
	bool                             IsAttractedToBait;               // type:BOOL.0
};

struct CContextualTaskEvadeAnim : _0x14229900
{
	enum _0x563FBCEA                 _0x6E3E1AA3;                     // type:ENUM.32BIT
	bool                             StartFromBump;                   // type:BOOL.0
	bool                             _0x7B8DBCDE;                     // type:BOOL.0
	bool                             _0x53E9088D;                     // type:BOOL.0
	bool                             UseLocomotion;                   // type:BOOL.0
	bool                             _0xE79F7AAB;                     // type:BOOL.0
	bool                             _0xFEB02FBE;                     // type:BOOL.0
	bool                             _0x0386A663;                     // type:BOOL.0
	bool                             _0x8521B6EE;                     // type:BOOL.0
	bool                             _0xA4465F98;                     // type:BOOL.0
	vec3V                            _0x7FE39525;                     // type:VEC3V.0
};

struct CContextualTaskExit : _0x14229900
{
	bool                             ImmediateExit;                   // type:BOOL.0
};

struct CContextualTaskFlee : _0x14229900
{
	enum _0x563FBCEA                 _0xC06522C6;                     // type:ENUM.32BIT
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
	float                            MoveBlendRatioInTraffic;         // type:FLOAT.0
	float                            SafeDistance;                    // type:FLOAT.0
	float                            FleeMaxTime;                     // type:FLOAT.0
	bool                             SeekCover;                       // type:BOOL.0
	bool                             SeekFleeScenarios;               // type:BOOL.0
	bool                             PreferFleeScenarios;             // type:BOOL.0
	bool                             PreferInteriorScenarios;         // type:BOOL.0
	bool                             PreferInteriorScenariosIfOutside; // type:BOOL.0
	bool                             TurnInPlaceFirst;                // type:BOOL.0
	bool                             AllowReturnToScenarioPoint;      // type:BOOL.0
	bool                             CanRestartFlee;                  // type:BOOL.0
	bool                             AnimalAlwaysFlee;                // type:BOOL.0
	bool                             WatchFromInteriorPortal;         // type:BOOL.0
	bool                             DontPlayDialogue;                // type:BOOL.0
	bool                             DontUseMounts;                   // type:BOOL.0
	bool                             ForceLeaveVehicle;               // type:BOOL.0
	bool                             ForceAllowMountedTurnAround;     // type:BOOL.0
	bool                             FleeFromEventPosition;           // type:BOOL.0
	bool                             ShouldWrapInThreatResponseTask;  // type:BOOL.0
	bool                             DetachFromDraftVehicleFirst;     // type:BOOL.0
	bool                             ForceStartInIntimidation;        // type:BOOL.0
	bool                             UseBulletImpactPosAsTarget;      // type:BOOL.0
};

struct CContextualTaskFollow : _0x14229900
{
	enum _0x563FBCEA                 _0xCBA971FF;                     // type:ENUM.32BIT
	float                            MoveBlendRatio;                  // type:FLOAT.0
	float                            Radius;                          // type:FLOAT.0
	int                              Time;                            // type:INT.0
};

struct CContextualTaskFriendlyFireAimedAt : _0x14229900
{
	enum _0x563FBCEA                 _0x091F09F1;                     // type:ENUM.32BIT
};

struct CContextualTaskFriendlyFireNearMiss : _0x14229900
{
};

struct CContextualTaskGatorPit : _0x14229900
{
	enum _0x563FBCEA                 Victim;                          // type:ENUM.32BIT
};

struct CContextualTaskHazardMaximizeAgitation : _0x14229900
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CContextualTaskHazardSink : _0x14229900
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CContextualTaskHazardWarning : _0x14229900
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CContextualTaskHorseKick : _0x14229900
{
	bool                             InterruptEarly;                  // type:BOOL.0
	bool                             RehitchAfterKick;                // type:BOOL.0
};

struct CContextualTaskHorseSpooked : _0x14229900
{
	enum _0x563FBCEA                 Threat;                          // type:ENUM.32BIT
	float                            StrengthMultiplier;              // type:FLOAT.0
	uint                             Duration;                        // type:UINT.0
};

struct CContextualTaskInteraction : _0x14229900
{
	enum _0x563FBCEA                 PedToInteract;                   // type:ENUM.32BIT
	enum InteractionType             TypeOverride;                    // type:ENUM.32BIT
	bool                             SendToValidRider;                // type:BOOL.0
};

struct CContextualTaskInvestigatePotentialCrime : _0x14229900
{
};

struct CContextualTaskMountedGunfireResponse : _0x14229900
{
};

struct CContextualTaskMoveToTacticalPoint : _0x14229900
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           SearchProfile;                   // type:STRING.ATNONFINALHASHSTRING
	string                           UsageProfile;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CContextualTaskPoliceConfront : _0x14229900
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CContextualTaskPoliceDogConfront : _0x14229900
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CContextualTaskRandomFromArray : _0x14229900
{
	array<struct CContextualTaskWeighted>     Tasks;                           // type:ARRAY.ATARRAY
};

struct CContextualTaskReact : _0x14229900
{
	enum _0x563FBCEA                 EntityToLookAt;                  // type:ENUM.32BIT
	enum _0x563FBCEA                 SecondaryEntityToLookAt;         // type:ENUM.32BIT
	struct _0x4299117A               ReactionAnalysisData;            // type:STRUCT.STRUCTURE
	struct _0x14229900               SecondaryTask;                   // type:STRUCT.POINTER
};

struct CContextualTaskReactToBeingJacked : _0x14229900
{
	enum _0x563FBCEA                 Vehicle;                         // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x026132A4;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xD284D5F8;                     // type:ENUM.32BIT
	bool                             ForceFleeOverride;               // type:BOOL.0
	bool                             PreferFlee;                      // type:BOOL.0
};

struct CContextualTaskReactToInjuredRider : _0x14229900
{
	enum _0x563FBCEA                 Mount;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Inflictor;                       // type:ENUM.32BIT
};

struct CContextualTaskSequence : _0x14229900
{
	array<struct _0x14229900>        Sequence;                        // type:ARRAY.ATARRAY
};

struct CContextualTaskShootAtOverrideTarget : _0x14229900
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           FiringPattern;                   // type:STRING.ATNONFINALHASHSTRING
	int                              Duration;                        // type:INT.0
	bool                             _0x9EC53304;                     // type:BOOL.0
	bool                             AimOnly;                         // type:BOOL.0
};

struct CContextualTaskSideStep : _0x14229900
{
	enum _0x563FBCEA                 PedToReactTo;                    // type:ENUM.32BIT
};

struct CContextualTaskSpectate : _0x14229900
{
	float                            ApproachDistanceMin;             // type:FLOAT.0
	float                            ApproachDistanceMax;             // type:FLOAT.0
	float                            TargetChangeDistanceForRescan;   // type:FLOAT.0
};

struct CContextualTaskThreatResponse : _0x14229900
{
	enum _0x563FBCEA                 PedToReactTo;                    // type:ENUM.32BIT
	enum _0x563FBCEA                 PedToCopy;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 InitialThreatSourcePed;          // type:ENUM.32BIT
	float                            FleeMaxTime;                     // type:FLOAT.0
	float                            BlockHidingForTime;              // type:FLOAT.0
	bool                             SeekFleeScenariosWhenFleeing;    // type:BOOL.0
	bool                             PreferInteriorScenarios;         // type:BOOL.0
	bool                             PreferInteriorScenariosIfOutside; // type:BOOL.0
	bool                             CanBeIntimidatedWhenFleeing;     // type:BOOL.0
	bool                             CanRestartFlee;                  // type:BOOL.0
	bool                             PreferFlee;                      // type:BOOL.0
	bool                             PreferFight;                     // type:BOOL.0
	bool                             ForceFleeOverride;               // type:BOOL.0
	bool                             ForceFightOverride;              // type:BOOL.0
	bool                             AllowReturnToScenarioPoint;      // type:BOOL.0
	bool                             WatchFromInteriorPortalWhenFleeing; // type:BOOL.0
	bool                             DisableRespondedToThreatBroadcast; // type:BOOL.0
	bool                             BroadcastInitialThreatSource;    // type:BOOL.0
	bool                             RespondingToHostileAction;       // type:BOOL.0
	bool                             CanShootAtTargetsWhenFleeing;    // type:BOOL.0
	bool                             DontPlayReactionWhenFleeing;     // type:BOOL.0
	bool                             CopyThreatResponse;              // type:BOOL.0
	bool                             MustCopyGroupMember;             // type:BOOL.0
	bool                             SetInitialAudioFromEvent;        // type:BOOL.0
	bool                             ForceAllowMountedTurnAround;     // type:BOOL.0
	bool                             DisableAimIntro;                 // type:BOOL.0
	bool                             UseCarrierAsPedToReactTo;        // type:BOOL.0
	bool                             PreventStoppingDuringAimIntro;   // type:BOOL.0
	bool                             DisableWeaponSelectOnStartIfAlreadyHasGun; // type:BOOL.0
	bool                             UseRiderOrLastRiderAsAggressor;  // type:BOOL.0
	bool                             FleeingDueToSilentAttack;        // type:BOOL.0
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
	enum _0x2512FC5E                 CombatReason;                    // type:ENUM.32BIT
	struct _0x77CA3522               InitialAudio;                    // type:STRUCT.STRUCTURE
};

struct CContextualTaskThreatResponseAnimal : _0x14229900
{
	enum _0x563FBCEA                 PedToReactTo;                    // type:ENUM.32BIT
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
	bool                             UsePedPosAsTarget;               // type:BOOL.0
	bool                             UseEventPosAsTarget;             // type:BOOL.0
	bool                             SeekFleeScenarios;               // type:BOOL.0
	bool                             SeekOwnersHelp;                  // type:BOOL.0
	bool                             RespondingToHostileAction;       // type:BOOL.0
	bool                             BlockAlertedResponse;            // type:BOOL.0
	bool                             BlockAlertedResponseIfAlerted;   // type:BOOL.0
	bool                             ForceFleeIfNotAlerted;           // type:BOOL.0
	bool                             ForceFleeIfTargetInvolvedInAGunfight; // type:BOOL.0
	bool                             UseFleeStyleFromEventIfPossible; // type:BOOL.0
	bool                             TryAutoFleeStyle;                // type:BOOL.0
	bool                             OnlyUseOriginalTargetWhenFleeing; // type:BOOL.0
	bool                             IgnoreFriendlyCheck;             // type:BOOL.0
	float                            _0x5614E87C;                     // type:FLOAT.0
	uint                             _0x9842923B;                     // type:UINT.0
};

struct CContextualTaskTriggerInPlaceResponse : _0x14229900
{
	enum AmbientEventType            IntroAmbientEventType;           // type:ENUM.32BIT
	enum AmbientEventType            OutroAmbientEventType;           // type:ENUM.32BIT
	enum _0x563FBCEA                 EntityToLookAt;                  // type:ENUM.32BIT
	enum _0x563FBCEA                 SecondaryEntityToLookAt;         // type:ENUM.32BIT
	bool                             _0xF70741C3;                     // type:BOOL.0
	float                            ReactionTime;                    // type:FLOAT.0
};

struct CContextualTaskTurnToFace : _0x14229900
{
	enum _0x563FBCEA                 _0xB75B93E1;                     // type:ENUM.32BIT
	string                           _0xEA511EA0;                     // type:STRING.ATNONFINALHASHSTRING
	float                            MinTimeToFace;                   // type:FLOAT.0
	float                            MaxTimeToFace;                   // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct CContextualTaskVehicleFlee : _0x14229900
{
	enum _0x563FBCEA                 _0x2DC56B32;                     // type:ENUM.32BIT
	float                            _0x06A26936;                     // type:FLOAT.0
	float                            _0xB85B159A;                     // type:FLOAT.0
	float                            StopDistanceFromStartLockBox;    // type:FLOAT.0
	float                            Speed;                           // type:FLOAT.0
	bool                             UseDriverlessBehavior;           // type:BOOL.0
};

struct CContextualTaskWalkRoundEntity : _0x14229900
{
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct CContextualTaskWalkRoundFire : _0x14229900
{
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct CContextualTaskWeighted : _0x14229900
{
	struct _0x14229900               Task;                            // type:STRUCT.POINTER
	float                            Weight;                          // type:FLOAT.0
};

struct CConversationDictionary
{
	map<string, struct _0x6332BCAA>     ConversationFlowMap;             // type:MAP.ATBINARYMAP
	map<string, struct _0xF4257EC3>     ConversationTopicMap;            // type:MAP.ATBINARYMAP
};

struct CConversationList
{
	array<struct _0x464F1683>        ConversationList;                // type:ARRAY.ATARRAY
};

struct CConversationManager__Tunables : CTuning
{
	ushort                           uTimeMsBetweenGeneratingAvailableConversers; // type:USHORT.0
	ushort                           uMinTimeMsBetweenConversations;  // type:USHORT.0
	ushort                           uMaxTimeMsBetweenConversations;  // type:USHORT.0
	ushort                           uMinTimeMsBetweenConversationTries; // type:USHORT.0
	ushort                           uMaxTimeMsBetweenConversationTries; // type:USHORT.0
	ushort                           uTimeMsToDisableNewConvosOnPedSinceLastSpeech; // type:USHORT.0
	ushort                           uTimeMsBetweenSamePairConversations; // type:USHORT.0
	ushort                           uMinTimeSinceScriptedConversationMs; // type:USHORT.0
	uchar                            uTargetNumConversations;         // type:UCHAR.0
	float                            fMaxZDifferenceBetweenConversers; // type:FLOAT.0
	float                            fApproachDistanceToStartTalking; // type:FLOAT.0
	float                            fApproachStateTimeOutInSec;      // type:FLOAT.0
	float                            fStartingConvoStateTimeOutInSec; // type:FLOAT.0
	float                            fRadiusWithinNewConversationsGetCreated; // type:FLOAT.0
	float                            fDistanceToRegisterForConversation; // type:FLOAT.0
	float                            fDistanceToUnregisterForConversation; // type:FLOAT.0
	float                            fDistanceToConsiderConvoOutOfScope; // type:FLOAT.0
	float                            fDistanceToConsiderPedTooCloseToConvo; // type:FLOAT.0
	float                            fWanderHeadingToConsiderPassingByScenario; // type:FLOAT.0
	float                            fWanderPassingByDestinationFromConvoMinDist; // type:FLOAT.0
	float                            fWanderPassingByDestinationFromConvoMinDistCamp; // type:FLOAT.0
	float                            fMaxHeadingDeltaForScenarioToScenario; // type:FLOAT.0
	float                            fTimeToFollowPostConversation;   // type:FLOAT.0
	float                            fConfidentPersonalityWeight;     // type:FLOAT.0
	float                            fShyPersonalityWeight;           // type:FLOAT.0
	float                            fDefaultSelectionWeight;         // type:FLOAT.0
	float                            fMinDistanceMovedToUpdatePopZones; // type:FLOAT.0
	uint                             uNumberOfFlowsToProcessPerFrame; // type:UINT.0
	uint                             uNumberOfTopicsToProcessPerFrame; // type:UINT.0
	float                            fMaxUsTimeAllowedSpentDuringGeneration; // type:FLOAT.0
	ushort                           uTimeSecondsToRememberPairFailedConvo; // type:USHORT.0
	ushort                           uPairFailedConvoCacheMapSize;    // type:USHORT.0
};

struct CCooldownModifierGunshotData : _0x07B49970
{
};

struct CCooldownModifierLingerData : _0x07B49970
{
};

struct CCooldownModifierOnTheMoveData : _0x07B49970
{
};

struct CCooldownModifierRegionChangedData : _0x07B49970
{
};

struct CCoverHelpersTunables
{
	struct _0x1301A27D               VantageHelpers;                  // type:STRUCT.STRUCTURE
	struct _0x03810EA5               CoverPointStatusHelper;          // type:STRUCT.STRUCTURE
	struct _0x1A0DEFB7               CoverDoorHelper;                 // type:STRUCT.STRUCTURE
	struct _0xED1EA580               CoverExitNormalPedCapsuleAreas;  // type:STRUCT.STRUCTURE
};

struct CCoverPointCoverToCoverInfo
{
	int                              _0x81BFD8CF;                     // type:INT.0
	int                              _0x1806FC29;                     // type:INT.0
};

struct CCoverPointNode
{
	vec3V                            vPos;                            // type:VEC3V.0
	uint64                           _0x9A5427E8;                     // type:UINT64.0
	enum _0xF7EE69B9                 _0xB1D633A7;                     // type:ENUM.32BIT
	int                              _0x1863CE8E;                     // type:INT.0
	int                              _0x81BFD8CF;                     // type:INT.0
	int                              _0x1806FC29;                     // type:INT.0
	int                              _0xF25CA635;                     // type:INT.0
	int                              _0xD3271D5C;                     // type:INT.0
	short                            _0x17741479;                     // type:SHORT.0
	enum _0x7245BA24                 _0x5DFE946B;                     // type:ENUM.32BIT
	enum _0x5C3B2E01                 Height;                          // type:ENUM.32BIT
	float                            Direction;                       // type:FLOAT.0
	float                            _0x549F516C;                     // type:FLOAT.0
	float                            _0xBA04C5E5;                     // type:FLOAT.0
	float                            _0xF6448257;                     // type:FLOAT.0
	float                            _0xD9411B64;                     // type:FLOAT.0
	bitset<enum _0x42338022>         Flags;                           // type:BITSET.16BIT
	bitset<enum _0x3790990D>         Status;                          // type:BITSET.8BIT
	struct CCoverPointUsageInfo      _0x94A7F161;                     // type:STRUCT.STRUCTURE
	struct CCoverPointUsageInfo      _0xAC5E4DDE;                     // type:STRUCT.STRUCTURE
	struct CCoverPointUsageInfo      _0xFB8375C7;                     // type:STRUCT.STRUCTURE
};

struct CCoverPointUsageInfo
{
	enum _0x5C3B2E01                 Height;                          // type:ENUM.32BIT
	bitset<enum _0x42338022>         Flags;                           // type:BITSET.16BIT
};

struct CCoverTuningFile
{
	array<struct _0x365DA5C8>        NamedTuningArray;                // type:ARRAY.ATARRAY
	array<struct _0xE3C9C5BB>        ModelToTuneMapping;              // type:ARRAY.ATARRAY
};

struct CCreatureMetaData
{
	array<struct _0x8293073B>        _0xD603A65D;                     // type:ARRAY.ATARRAY
	array<struct _0x986A0759>        metaPedExpressions;              // type:ARRAY.ATARRAY
	array<struct _0xD3EC86B0>        _0xBBA4C7DB;                     // type:ARRAY.ATARRAY
};

struct CCrimeInfoManager
{
	array<struct CDefaultCrimeInfo>     Crimes;                          // type:ARRAY.ATARRAY
};

struct CCrimeInformations
{
	map<string, struct _0x3D83C5A7>               CrimeInformations;               // type:MAP.ATBINARYMAP
	map<enum _0xB26911B2, struct _0x0026E5C0>     CrimeSelector;                   // type:MAP.ATBINARYMAP
	map<enum _0xB26911B2, struct _0x47E8F679>     CrimeSensoryDataSelector;        // type:MAP.ATBINARYMAP
	struct _0xBD0AD460                            DefaultSensoryData;              // type:STRUCT.STRUCTURE
	array<string>                                 TrackedCriminalOutfitCategories; // type:ARRAY.ATARRAY
};

struct CCrimeObserver__Tunables : CTuning
{
	int                              TimeBetweenUpdates_High;         // type:INT.0
	int                              TimeBetweenUpdates_Med;          // type:INT.0
	int                              TimeBetweenUpdates_Low;          // type:INT.0
	int                              SearchLOSDelay;                  // type:INT.0
	int                              ObserveLOSDelay;                 // type:INT.0
	int                              DropOldCrimesDelay;              // type:INT.0
	int                              PotentialCrimeEventDelay;        // type:INT.0
	int                              ImmediateCrimeEventDelay;        // type:INT.0
	int                              InvestigatedCrimeEventDelay;     // type:INT.0
	int                              WitnessAfterCombatDelay;         // type:INT.0
	int                              MaxInvestigatorsOverall;         // type:INT.0
	int                              MaxReportersOverall;             // type:INT.0
	int                              MinTimeToNextSpeechContext;      // type:INT.0
	int                              MaxTimeToNextSpeechContext;      // type:INT.0
	float                            FleeDistance;                    // type:FLOAT.0
	float                            TimeToIdentifyCriminal;          // type:FLOAT.0
	float                            ConfirmationRadius;              // type:FLOAT.0
	float                            CrimeProximity;                  // type:FLOAT.0
	float                            CrimeSceneRadiusBuffer;          // type:FLOAT.0
};

struct CCurve
{
	float                            fInputMax;                       // type:FLOAT.0
	float                            fResultMax;                      // type:FLOAT.0
	float                            fPow;                            // type:FLOAT.0
};

struct CCurveSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CCurve>             curves;                          // type:ARRAY.ATARRAY
	bool                             _0x65209AEB;                     // type:BOOL.0
};

struct CCustomCoverNodeData
{
	vec3V                            Position;                        // type:VEC3V.0
	int                              ThisNodeId;                      // type:INT.0
	int                              LeftNodeId;                      // type:INT.0
	int                              RightNodeId;                     // type:INT.0
	uchar                            Direction;                       // type:UCHAR.0
	enum _0xA19D7458                 Corner;                          // type:ENUM.8BIT
	enum _0xB58106CE                 Height;                          // type:ENUM.8BIT
};

struct CDLCScript
{
	string                           startupScript;                   // type:STRING.ATFINALHASHSTRING
	int                              scriptCallstackSize;             // type:INT.0
};

struct CDamageAndReaction
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ActionRumble;                    // type:STRING.ATNONFINALHASHSTRING
	string                           DamageModifier;                  // type:STRING.ATNONFINALHASHSTRING
	float                            OnHitDamageAmountMin;            // type:FLOAT.0
	float                            OnHitDamageAmountMax;            // type:FLOAT.0
	float                            OnHitAgitationAmount;            // type:FLOAT.0
	float                            Cost;                            // type:FLOAT.0
	enum eAnimBoneTag                ForcedDamageBoneTag;             // type:ENUM.32BIT
	bitset<enum _0xF5B84E35>         DamageReactionAttrs;             // type:BITSET.32BIT
};

struct CDamageAndReactionContainer
{
	map<string, struct CDamageAndReaction>     Map;                             // type:MAP.ATBINARYMAP
};

struct CDamageConditionAIFemalePed : _0xBC6A0384
{
};

struct CDamageConditionAnd : _0xF29C16F4
{
};

struct CDamageConditionCanDamagePed : _0xBC6A0384
{
};

struct CDamageConditionCloudTunableCheck : _0xBC6A0384
{
};

struct CDamageConditionCompareAbstract : _0x80456568
{
	struct _0xEFAEA34C               LHS;                             // type:STRUCT.POINTER
	struct _0xEFAEA34C               RHS;                             // type:STRUCT.POINTER
};

struct CDamageConditionDistance : _0x3A89BDEB
{
};

struct CDamageConditionFromAmmoType : _0xBC6A0384
{
	array<string>                    AmmoTypes;                       // type:ARRAY.ATARRAY
};

struct CDamageConditionFromDamageType : _0xBC6A0384
{
	array<enum eDamageType>          DamageTypes;                     // type:ARRAY.ATARRAY
};

struct CDamageConditionFromFreeAimPlayer : _0xBC6A0384
{
};

struct CDamageConditionFromWeaponAndAmmoGroup : _0xBC6A0384
{
	array<string>                    WeaponGroups;                    // type:ARRAY.ATARRAY
};

struct CDamageConditionFromWeaponGroup : _0xBC6A0384
{
	array<string>                    WeaponGroups;                    // type:ARRAY.ATARRAY
};

struct CDamageConditionFromWeaponType : _0xBC6A0384
{
	array<string>                    WeaponTypes;                     // type:ARRAY.ATARRAY
};

struct CDamageConditionFromZoomScope : _0xBC6A0384
{
};

struct CDamageConditionHitBone : _0xBC6A0384
{
	array<enum eAnimBoneTag>         Bones;                           // type:ARRAY.ATARRAY
};

struct CDamageConditionInflictorIsMyMeleeTarget : _0xBC6A0384
{
};

struct CDamageConditionInflictorIsPlayer : _0xBC6A0384
{
};

struct CDamageConditionIsMP : _0xBC6A0384
{
};

struct CDamageConditionLimitedUse : _0xBC6A0384
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             Value;                           // type:UINT.0
};

struct CDamageConditionNot : _0xBC6A0384
{
	struct _0xBC6A0384               Condition;                       // type:STRUCT.POINTER
};

struct CDamageConditionOr : _0xF29C16F4
{
};

struct CDamageConditionPedConfigFlags : _0xBC6A0384
{
	bitset<enum ePedScriptConfigFlags>     ConfigFlags;                     // type:BITSET.32BIT
};

struct CDamageConditionShouldAllowBleedout : _0xBC6A0384
{
};

struct CDamageConditionVictimExists : _0xBC6A0384
{
};

struct CDamageConditionVictimHasTranquilizerProfile : _0xBC6A0384
{
};

struct CDamageConditionVictimHealthState : _0xBC6A0384
{
	enum _0xB626B44E                 HealthState;                     // type:ENUM.32BIT
};

struct CDamageConditionVictimIsAnimal : _0xBC6A0384
{
};

struct CDamageConditionVictimIsPlayer : _0xBC6A0384
{
};

struct CDamageConditionVictimIsPlayingGetup : _0xBC6A0384
{
};

struct CDamageConditionVictimIsUsingRagdoll : _0xBC6A0384
{
};

struct CDamageDataManager
{
	array<struct _0x43127582>                                DamageModifiers;                 // type:ARRAY.ATARRAY
	map<string, struct sDismembermentData>                   DismembermentData;               // type:MAP.ATBINARYMAP
	map<enum _0x5066C50A, struct sDamageCleanlinessData>     DamageCleanlinessDatas;          // type:MAP.ATBINARYMAP
	map<string, struct _0x266CBDB1>                          _0x0735B565;                     // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>             _0xC7837374;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x9BE5E2A2>                          _0xA763DF74;                     // type:MAP.ATBINARYMAP
	array<struct CHitReactData>                              HitReactData;                    // type:ARRAY.ATARRAY
	struct CHitReactGripData                                 HitReactGripData;                // type:STRUCT.POINTER
};

struct CDamageModifierAdd : _0x3734480F
{
};

struct CDamageModifierAddAbstract : _0x187BE9B9
{
};

struct CDamageModifierApplyPoison : _0x43127582
{
};

struct CDamageModifierClamp : _0xF6282E2F
{
};

struct CDamageModifierFirstSuccessfulReference : _0x43127582
{
	array<string>                    Modifiers;                       // type:ARRAY.ATARRAY
};

struct CDamageModifierForceBleedout : _0x43127582
{
	string                           BleedoutType;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             VerifyAllowed;                   // type:BOOL.0
};

struct CDamageModifierForceInjury : _0x43127582
{
};

struct CDamageModifierForceMeleeDamage : _0x43127582
{
};

struct CDamageModifierForceRagdoll : _0x43127582
{
};

struct CDamageModifierIncrementTranquilizerCounts : _0x43127582
{
};

struct CDamageModifierInstantKill : _0x43127582
{
};

struct CDamageModifierModifyCriticalRegionData : _0x43127582
{
	float                            CriticalChance;                  // type:FLOAT.0
	float                            CriticalDamageModifierNear;      // type:FLOAT.0
	float                            CriticalDamageModifierFar;       // type:FLOAT.0
	float                            CriticalDamageDistanceNear;      // type:FLOAT.0
	float                            CriticalDamageDistanceFar;       // type:FLOAT.0
	bool                             CriticalDamageApplyModifierBeforeNear; // type:BOOL.0
};

struct CDamageModifierMulti : _0x43127582
{
	array<struct _0x43127582>        Modifiers;                       // type:ARRAY.ATARRAY
};

struct CDamageModifierMultiReference : _0x43127582
{
	array<string>                    Modifiers;                       // type:ARRAY.ATARRAY
};

struct CDamageModifierMultiply : _0x3734480F
{
};

struct CDamageModifierNoCriticalOrFatalDamage : _0x43127582
{
};

struct CDamageModifierNonFatalDamage : _0x43127582
{
};

struct CDamageModifierPreventBleedout : _0x43127582
{
};

struct CDamageModifierPreventCriticalResponse : _0x43127582
{
};

struct CDamageModifierPreventFatalMeleeDamage : _0x43127582
{
};

struct CDamageModifierSuppressRagdoll : _0x43127582
{
};

struct CDataFileMgr__ChangeSetData
{
	string                                            associatedMap;                   // type:STRING.ATSTRING
	array<string>                                     filesToInvalidate;               // type:ARRAY.ATARRAY
	array<string>                                     filesToDisable;                  // type:ARRAY.ATARRAY
	array<string>                                     filesToEnable;                   // type:ARRAY.ATARRAY
	array<string>                                     txdToUnload;                     // type:ARRAY.ATARRAY
	array<string>                                     txdToLoad;                       // type:ARRAY.ATARRAY
	array<struct CDataFileMgr__ResourceReference>     residentResources;               // type:ARRAY.ATARRAY
	array<struct CDataFileMgr__ResourceReference>     unregisterResources;             // type:ARRAY.ATARRAY
};

struct CDataFileMgr__ContentChangeSet
{
	string                                            changeSetName;                   // type:STRING.ATSTRING
	array<struct CDataFileMgr__ChangeSetData>         mapChangeSetData;                // type:ARRAY.ATARRAY
	array<string>                                     filesToInvalidate;               // type:ARRAY.ATARRAY
	array<string>                                     filesToDisable;                  // type:ARRAY.ATARRAY
	array<string>                                     filesToEnable;                   // type:ARRAY.ATARRAY
	array<string>                                     txdToUnload;                     // type:ARRAY.ATARRAY
	array<string>                                     txdToLoad;                       // type:ARRAY.ATARRAY
	array<struct CDataFileMgr__ResourceReference>     residentResources;               // type:ARRAY.ATARRAY
	array<struct CDataFileMgr__ResourceReference>     unregisterResources;             // type:ARRAY.ATARRAY
	bool                                              requiresLoadingScreen;           // type:BOOL.0
	enum LoadingScreenContext                         loadingScreenContext;            // type:ENUM.32BIT
	struct ExecutionConditions                        executionConditions;             // type:STRUCT.STRUCTURE
	bool                                              useCacheLoader;                  // type:BOOL.0
};

struct CDataFileMgr__ContentsOfDataFileXml
{
	array<string>                                    disabledFiles;                   // type:ARRAY.ATARRAY
	array<string>                                    includedDataFiles;               // type:ARRAY.ATARRAY
	array<struct CDataFileMgr__DataFileArray>        includedXmlFiles;                // type:ARRAY.ATARRAY
	array<struct CDataFileMgr__DataFile>             dataFiles;                       // type:ARRAY.ATARRAY
	array<struct CDataFileMgr__ContentChangeSet>     contentChangeSets;               // type:ARRAY.ATARRAY
	array<string>                                    patchFiles;                      // type:ARRAY.ATARRAY
	array<string>                                    allowedFolders;                  // type:ARRAY.ATARRAY
};

struct CDataFileMgr__DataFile
{
	string                           filename;                        // type:STRING.MEMBER
	string                           registerAs;                      // type:STRING.ATSTRING
	enum _0x3FF19213                 fileType;                        // type:ENUM.32BIT
	bool                             locked;                          // type:BOOL.0
	bool                             enforceLsnSorting;               // type:BOOL.0
	bool                             loadCompletely;                  // type:BOOL.0
	bool                             disabled;                        // type:BOOL.0
	bool                             persistent;                      // type:BOOL.0
	bool                             overlay;                         // type:BOOL.0
	bool                             patchFile;                       // type:BOOL.0
	bool                             doPostLoad;                      // type:BOOL.0
	bool                             devOnly;                         // type:BOOL.0
	bool                             CRCfromHeader;                   // type:BOOL.0
	enum _0xB7FD3197                 contents;                        // type:ENUM.32BIT
	enum _0x5769C770                 filter;                          // type:ENUM.32BIT
};

struct CDataFileMgr__DataFileArray
{
	array<struct CDataFileMgr__DataFile>     dataFiles;                       // type:ARRAY.ATARRAY
};

struct CDataFileMgr__ResourceReference
{
	string                           AssetName;                       // type:STRING.ATSTRING
	string                           Extension;                       // type:STRING.MEMBER
};

struct CDeadeyeSpecialAbility
{
};

struct CDeadeyeSpecialAbility__Tunables : CTuning
{
	array<struct CAutoAimLevel>      AutoAimLevels;                   // type:ARRAY.ATARRAY
	struct _0x24CF7EA7               AutoAimDelaysDefault;            // type:STRUCT.STRUCTURE
	struct _0x24CF7EA7               AutoAimDelaysFast;               // type:STRUCT.STRUCTURE
	bool                             _0x4B984A2A;                     // type:BOOL.0
	bool                             _0x98CACBA9;                     // type:BOOL.0
	float                            _0xCF8E77B7;                     // type:FLOAT.0
	float                            _0xF072C3BC;                     // type:FLOAT.0
	float                            _0x375AFCED;                     // type:FLOAT.0
	float                            _0xF278232D;                     // type:FLOAT.0
	float                            fAimDirectionThresholdAngle;     // type:FLOAT.0
	float                            fAimDirectionThresholdAngleDualWield; // type:FLOAT.0
	float                            fAimDirectionThresholdMaxAngle;  // type:FLOAT.0
	float                            fTimeForMinAimAngle;             // type:FLOAT.0
	float                            fTimeForMaxAimAngle;             // type:FLOAT.0
	float                            fDistThresholdForMaxAimAngle;    // type:FLOAT.0
	bool                             _0xD7C9B65C;                     // type:BOOL.0
	float                            _0xF73FD6E5;                     // type:FLOAT.0
	bool                             _0xA815DE9C;                     // type:BOOL.0
	bool                             _0xE1DBFBF0;                     // type:BOOL.0
	bool                             _0x5CD87954;                     // type:BOOL.0
	float                            fTagCullAngle;                   // type:FLOAT.0
	float                            _0x407E41B4;                     // type:FLOAT.0
	float                            _0xE903D684;                     // type:FLOAT.0
	bool                             _0xAF00D682;                     // type:BOOL.0
	bool                             _0x5863D3B9;                     // type:BOOL.0
	bool                             _0xC291E70E;                     // type:BOOL.0
	bool                             _0x49A78B87;                     // type:BOOL.0
	float                            _0xBA8FB85C;                     // type:FLOAT.0
	struct _0x10338E35               Level1;                          // type:STRUCT.STRUCTURE
	struct _0x10338E35               Level2;                          // type:STRUCT.STRUCTURE
	struct _0x10338E35               Level3;                          // type:STRUCT.STRUCTURE
	struct _0x10338E35               Level4;                          // type:STRUCT.STRUCTURE
	struct _0x10338E35               Level5;                          // type:STRUCT.STRUCTURE
	uint                             _0x9497FF3A;                     // type:UINT.0
	uint                             _0x8D7AA9DB;                     // type:UINT.0
	bool                             bFxLowEnergyModulationEnabled;   // type:BOOL.0
	uchar                            uFxLowEnergyModulationChannel;   // type:UCHAR.0
	float                            fFxLowEnergyMinEnergyThreshold;  // type:FLOAT.0
	float                            fFxLowEnergyMaxEnergyThreshold;  // type:FLOAT.0
	float                            fFxLowEnergyModulationInterpRate; // type:FLOAT.0
	uint                             uFiringTimeOutMs;                // type:UINT.0
};

struct CDefaultCarriablesDataManager
{
	map<string, struct _0xD86EAE38>              DefaultCarriableConfigByModel;   // type:MAP.ATBINARYMAP
	map<string, struct _0x0BC0B7DA>              UsableInventoryItemInfos;        // type:MAP.ATBINARYMAP
	map<string, struct _0x076AC487>              ReachArmByModelInfos;            // type:MAP.ATBINARYMAP
	map<string, struct _0x53360556>              UIContextOverridesByModelData;   // type:MAP.ATBINARYMAP
	map<string, string>                          DefinedDefaultHogtiedConfigs;    // type:MAP.ATBINARYMAP
	map<string, string>                          DefinedDefaultDeadAndCarriableConfigs; // type:MAP.ATBINARYMAP
	map<string, string>                          DefinedDefaultCompositeEntityConfigs; // type:MAP.ATBINARYMAP
	map<string, string>                          DefinedDefaultGenericObjectConfigs; // type:MAP.ATBINARYMAP
	string                                       DefaultHogtiedConfig;            // type:STRING.ATNONFINALHASHSTRING
	struct CConditionalHashSelector              DefaultDeadAndCarriableSelector; // type:STRUCT.STRUCTURE
	struct CConditionalHashSelector              DefaultCompositeEntitySelector;  // type:STRUCT.STRUCTURE
	struct CConditionalHashSelector              DefaultGenericObjectSelector;    // type:STRUCT.STRUCTURE
	struct CConditionalCarryingFlagsSelector     DefaultCarryingFlagsSelector;    // type:STRUCT.STRUCTURE
};

struct CDefaultCrimeInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            _0x241629CD;                     // type:FLOAT.0
};

struct CDefaultLootData
{
	struct CConditionalHashSelector     DefaultLootConfigSelector;       // type:STRUCT.STRUCTURE
	struct _0x8F720542                  DefaultLootFlagsSelector;        // type:STRUCT.STRUCTURE
};

struct CDefaultTaskDataManager
{
	array<struct CDefaultTaskDataSet>     aDefaultTaskData;                // type:ARRAY.ATARRAY
	struct void                           DefaultSet;                      // type:STRUCT.EXTERNAL_NAMED
};

struct CDefaultTaskDataSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct sDefaultTaskData          onFoot;                          // type:STRUCT.POINTER
};

struct CDeformableObjectManager
{
	map<string, struct _0x9AD9DC27>     DeformableObjects;               // type:MAP.ATBINARYMAP
};

struct CDestroyableCoverTunables
{
	map<string, struct _0xE1798D8F>     DestroyableObjectsSupported;     // type:MAP.ATBINARYMAP
	struct _0x08F3144A                  DestroyableCoverHelpers;         // type:STRUCT.STRUCTURE
	struct _0x0EB6EFC7                  DestroyableComponentTunables;    // type:STRUCT.STRUCTURE
};

struct CDispatchAdvancedSpawnHelper__Tunables : CTuning
{
	struct _0xDF31A28C               Rendering;                       // type:STRUCT.STRUCTURE
	struct _0xA7E37FBA               Scoring;                         // type:STRUCT.STRUCTURE
	float                            TimeBetweenInvalidateInvalidDispatchVehicles; // type:FLOAT.0
	float                            TimeBetweenMarkDispatchVehiclesForDespawn; // type:FLOAT.0
	float                            _0x496862FC;                     // type:FLOAT.0
	float                            _0x3EFD78C2;                     // type:FLOAT.0
};

struct CDispatchConditionCrimeSceneBodies : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	uint                             MinBodies;                       // type:UINT.0
	uint                             _0x0B22272F;                     // type:UINT.0
	bool                             _0xA8A80EE1;                     // type:BOOL.0
	bool                             _0x206C4225;                     // type:BOOL.0
};

struct CDispatchConditionDistanceToClosestTown : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct CDispatchConditionInterrogationStarted : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CDispatchConditionMurderIncidentsWithinTimeRange : CAICondition
{
	uint                             MinAmountOfMurders;              // type:UINT.0
	uint                             MaxMinutesSince;                 // type:UINT.0
};

struct CDispatchConditionNearestPedIsRespondingToIncident : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CDispatchConditionSimilarCrimeScenesWithinTimeRange : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	uint                             MinIncidents;                    // type:UINT.0
	uint                             _0xC0656D81;                     // type:UINT.0
	uint                             MinMinutesSince;                 // type:UINT.0
	uint                             MaxMinutesSince;                 // type:UINT.0
	bool                             CheckDeadHumans;                 // type:BOOL.0
	bool                             CheckDeadAnimals;                // type:BOOL.0
	bool                             CheckRegion;                     // type:BOOL.0
};

struct CDispatchConditionSuspectAccused : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CDispatchConditionTargetEscaping : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CDispatchConditionTimeSinceWitnessReportedThisPhase : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	uint                             MinTimeMS;                       // type:UINT.0
	uint                             MaxTimeMS;                       // type:UINT.0
};

struct CDispatchData
{
	array<struct _0x4E3A79D1>           VehicleSets;                     // type:ARRAY.ATARRAY
	map<string, struct _0x37603C00>     PedVariations;                   // type:MAP.ATBINARYMAP
	array<int>                          SinglePlayerWantedLevelThresholds; // type:ARRAY.ATARRAY
	array<int>                          MultiPlayerWantedLevelThresholds; // type:ARRAY.ATARRAY
	array<float>                        SingleplayerWantedLevelRadius;   // type:ARRAY.ATARRAY
	array<float>                        MultiplayerWantedLevelRadius;    // type:ARRAY.ATARRAY
	array<struct _0x5B2CB9E0>           WantedResponses;                 // type:ARRAY.ATARRAY
	array<struct _0x9FFC3E87>           EmergencyResponses;              // type:ARRAY.ATARRAY
	uint                                ParoleDuration;                  // type:UINT.0
	array<float>                        LawSpawnDelayMin;                // type:ARRAY.ATARRAY
	array<float>                        LawSpawnDelayMax;                // type:ARRAY.ATARRAY
	array<float>                        AmbulanceSpawnDelayMin;          // type:ARRAY.ATARRAY
	array<float>                        AmbulanceSpawnDelayMax;          // type:ARRAY.ATARRAY
	array<float>                        FireSpawnDelayMin;               // type:ARRAY.ATARRAY
	array<float>                        FireSpawnDelayMax;               // type:ARRAY.ATARRAY
	float                               InHeliRadiusMultiplier;          // type:FLOAT.0
	float                               ImmediateDetectionRange;         // type:FLOAT.0
	float                               OnScreenImmediateDetectionRange; // type:FLOAT.0
	float                               MaxDistanceToIncidentForInFrontSpawning; // type:FLOAT.0
	float                               MinDotForInFrontSpawning;        // type:FLOAT.0
	struct _0xB63EC1F3                  DispatchOrderDistances;          // type:STRUCT.STRUCTURE
	array<int>                          CopsToPreserveAroundPlayer;      // type:ARRAY.ATARRAY
	array<int>                          MultiplayerCopsToPreserveAroundPlayer; // type:ARRAY.ATARRAY
	map<string, struct _0xBC882F78>     RegionInfo;                      // type:MAP.ATBINARYMAP
	array<struct _0xFD72E10B>           BountyResponses;                 // type:ARRAY.ATARRAY
	array<struct _0xFDC42395>           BountyResponseCooldowns;         // type:ARRAY.ATARRAY
	array<string>                       CleanUpDispatchPedPresets;       // type:ARRAY.ATARRAY
	map<string, struct _0x07B49970>     MayhemCooldownModifiers;         // type:MAP.ATBINARYMAP
	array<struct _0x9AC43A5E>           DispatchCombatSpecs;             // type:ARRAY.ATARRAY
	map<string, struct _0x3A636087>     DispatchPedGroupPresets;         // type:MAP.ATBINARYMAP
	struct _0xE32DFF77                  DispatchApproachParams;          // type:STRUCT.STRUCTURE
};

struct CDispatchHelperSearchInAutomobile__Tunables : CTuning
{
	array<struct _0x8C1D122A>        Constraints;                     // type:ARRAY.ATARRAY
	float                            MaxDistanceFromRoadNode;         // type:FLOAT.0
	float                            CruiseSpeed;                     // type:FLOAT.0
};

struct CDispatchHelperSearchInBoat__Tunables : CTuning
{
	array<struct _0x8C1D122A>        Constraints;                     // type:ARRAY.ATARRAY
	float                            CruiseSpeed;                     // type:FLOAT.0
};

struct CDispatchHelperSearchInHeli__Tunables : CTuning
{
	array<struct _0x8C1D122A>        Constraints;                     // type:ARRAY.ATARRAY
};

struct CDispatchHelperSearchOnFoot__Tunables : CTuning
{
	array<struct _0x8C1D122A>        Constraints;                     // type:ARRAY.ATARRAY
	array<struct _0x8C1D122A>        _0x4BBC8DE6;                     // type:ARRAY.ATARRAY
	float                            MaxDistanceFromNavMesh;          // type:FLOAT.0
	float                            _0x21D7A4A7;                     // type:FLOAT.0
};

struct CDispatchHelperVolumes__Tunables : CTuning
{
	struct _0xCDCAA06A               Rendering;                       // type:STRUCT.STRUCTURE
	struct _0xC1B39685               LocationForNearestCarNodeOverrides; // type:STRUCT.STRUCTURE
	struct _0x358A9ABA               EnclosedSearchRegions;           // type:STRUCT.STRUCTURE
	struct _0x89D0D131               BlockingAreas;                   // type:STRUCT.STRUCTURE
};

struct CDispatchSpawnHelper__Tunables : CTuning
{
	struct _0x8D3B018D               Restrictions;                    // type:STRUCT.STRUCTURE
	struct _0xD31CA25D               Rendering;                       // type:STRUCT.STRUCTURE
	struct _0xB1A45B8F               Timers;                          // type:STRUCT.STRUCTURE
	float                            MinSpawnDistance;                // type:FLOAT.0
	float                            _0x194966CC;                     // type:FLOAT.0
	float                            IdealSpawnDistance;              // type:FLOAT.0
	float                            _0x936ED4C3;                     // type:FLOAT.0
	float                            MaxSpawnDistance;                // type:FLOAT.0
	float                            _0x4E414CF2;                     // type:FLOAT.0
	float                            _0xC1CC0EDE;                     // type:FLOAT.0
	float                            _0xA9E62515;                     // type:FLOAT.0
	float                            MinDotForInFront;                // type:FLOAT.0
	float                            MaxDistanceTraveledMultiplier;   // type:FLOAT.0
	float                            MinSpeedToBeConsideredEscapingInVehicle; // type:FLOAT.0
	float                            _0xBD71566C;                     // type:FLOAT.0
	float                            MaxDistanceForDispatchPosition;  // type:FLOAT.0
	float                            _0x7F239D7D;                     // type:FLOAT.0
	float                            _0xCAB8819D;                     // type:FLOAT.0
	float                            _0xCCFC776A;                     // type:FLOAT.0
	uint                             _0x402917F0;                     // type:UINT.0
	bool                             _0x447434A6;                     // type:BOOL.0
	bool                             _0x094D59AB;                     // type:BOOL.0
	bool                             _0xF8481873;                     // type:BOOL.0
	bool                             _0x882A3719;                     // type:BOOL.0
};

struct CDistantLODLight
{
	array<struct FloatXYZ>           position;                        // type:ARRAY.ATARRAY
	array<uint>                      _0x94720DEC;                     // type:ARRAY.ATARRAY
	array<float>                     intensity;                       // type:ARRAY.ATARRAY
	ushort                           numStreetLights;                 // type:USHORT.0
	ushort                           category;                        // type:USHORT.0
	array<uint>                      powerGridId;                     // type:ARRAY.ATARRAY
	array<uint>                      hash;                            // type:ARRAY.ATARRAY
};

struct CDocumentInfo : CItemInfo
{
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
	struct CInspectionInfo           InspectionInfo;                  // type:STRUCT.STRUCTURE
};

struct CDoorInteractionDataList
{
	map<string, struct _0x7A8569BE>     DoorModelToAnimMapping;          // type:MAP.ATBINARYMAP
	map<string, struct _0xDBA405BE>     DoorInteractionAnimInfos;        // type:MAP.ATBINARYMAP
	struct _0x9DD0D1EC                  DoorFallbackAnims;               // type:STRUCT.STRUCTURE
};

struct CDoorTuningFile
{
	array<struct _0x243B5E8B>        NamedTuningArray;                // type:ARRAY.ATARRAY
	array<struct _0x37ADF737>        ModelToTuneMapping;              // type:ARRAY.ATARRAY
};

struct CDraftVehHandlingData : CBaseSubHandlingData
{
	vec3V                            CarriageBodyCOMOffset;           // type:VEC3V.0
	float                            fYokeMaxYaw;                     // type:FLOAT.0
	float                            _0xDE729B52;                     // type:FLOAT.0
	float                            fYokeMaxPitch;                   // type:FLOAT.0
	float                            fBody3DOFSpringK;                // type:FLOAT.0
	float                            fBody3DOFSpringSpeedStrength;    // type:FLOAT.0
	float                            fBody3DOFSpringAngleStrength;    // type:FLOAT.0
	float                            fBody3DOFSpringMaxLean;          // type:FLOAT.0
	float                            fBody3DOFSpringMaxTwist;         // type:FLOAT.0
	float                            fBodyPrismaticSpringK;           // type:FLOAT.0
	float                            fBodyPrismaticSpringSpeedStrength; // type:FLOAT.0
	float                            fBodyPrismaticSpringPositionStrength; // type:FLOAT.0
	float                            fBodyPrismaticSpringMin;         // type:FLOAT.0
	float                            fBodyPrismaticSpringMax;         // type:FLOAT.0
	float                            brakeMinWheelLatFricFront;       // type:FLOAT.0
	float                            brakeMinWheelLatFricRear;        // type:FLOAT.0
	float                            maxSpeedOvershoot;               // type:FLOAT.0
	float                            speedReductionForDriftTurn;      // type:FLOAT.0
	float                            minSpeedForTurn;                 // type:FLOAT.0
	float                            maxSpeedForTurn;                 // type:FLOAT.0
	struct _0x93DC364E               animalTuning;                    // type:STRUCT.STRUCTURE
};

struct CDrivebyWeaponGroup
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    WeaponGroupNames;                // type:ARRAY.ATARRAY
	array<string>                    WeaponTypeNames;                 // type:ARRAY.ATARRAY
};

struct CDropDownDetectorParams
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            fDropDownDepthRadius;            // type:FLOAT.0
	float                            fDropDownMinHeight;              // type:FLOAT.0
	float                            fHeightToDropDownCutoff;         // type:FLOAT.0
	float                            fDropDownStartZOffset;           // type:FLOAT.0
	float                            fDropDownStartForwardOffset;     // type:FLOAT.0
	float                            fDropDownSlopeDotMax;            // type:FLOAT.0
	float                            fDropDownSlopeDotMinDirectionCutoff; // type:FLOAT.0
	float                            fDropDownPointMinZDot;           // type:FLOAT.0
	float                            fTestHeightDifference;           // type:FLOAT.0
	float                            fSlantedSlopeDot;                // type:FLOAT.0
	bool                             bPerformControlTest;             // type:BOOL.0
	bool                             bAllowOnMovingEntity;            // type:BOOL.0
	float                            fDropDownEdgeTestRadius;         // type:FLOAT.0
	float                            fDropDownBestDistanceDotMax;     // type:FLOAT.0
	float                            fDropDownBestDistanceDotMin;     // type:FLOAT.0
	float                            fDropDownSlopeTolerance;         // type:FLOAT.0
	float                            fDropDownClearanceTestZOffset;   // type:FLOAT.0
	float                            fDropDownClearanceTestRadius;    // type:FLOAT.0
	float                            fDropDownEdgeThresholdDot;       // type:FLOAT.0
	float                            fDropdownSlopeCheckMaxDot;       // type:FLOAT.0
	float                            fDropdownSlopeCheckMinNormalZ;   // type:FLOAT.0
	float                            fAutoJumpMaxDistance;            // type:FLOAT.0
	float                            fAutoJumpMinDistance;            // type:FLOAT.0
	float                            fAutoJumpMinDropHeight;          // type:FLOAT.0
	float                            fMidpointTestRadius;             // type:FLOAT.0
	float                            fMidpointTestCutoff;             // type:FLOAT.0
	float                            fBiasRightSideHeading;           // type:FLOAT.0
	float                            fGapDetectionDistance;           // type:FLOAT.0
	float                            fHandDropMinHeight;              // type:FLOAT.0
	float                            fHandTestRadius;                 // type:FLOAT.0
	float                            fHandTestOffset;                 // type:FLOAT.0
	float                            fWaterDistanceCheck;             // type:FLOAT.0
	struct _0x841DA14C               WalkParams;                      // type:STRUCT.STRUCTURE
	struct _0x841DA14C               RunParams;                       // type:STRUCT.STRUCTURE
};

struct CDuelingConfigInfoManager
{
	map<string, struct _0x6CD82697>     DuelingAnimConfigs;              // type:MAP.ATBINARYMAP
	map<string, struct _0x1D49448F>     DuelingConfigs;                  // type:MAP.ATBINARYMAP
};

struct CDynamicObjectCoverPointCollection
{
	map<string, struct _0x4712787B>     CoverPointSets;                  // type:MAP.ATBINARYMAP
	array<struct _0xF2D19401>           _0x2E902B91;                     // type:ARRAY.ATARRAY
};

struct CDynamicScenarioEntry
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCDB910F8;                     // type:STRING.ATNONFINALHASHSTRING
	vec3                             PositionOffset;                  // type:VECTOR3.0
	float                            WeaponOnBackOffset;              // type:FLOAT.0
	bool                             AllowedInInterior;               // type:BOOL.0
	float                            ForwardClearDistance;            // type:FLOAT.0
	float                            MaxSlopeAngle;                   // type:FLOAT.0
	float                            MaxWaterDepth;                   // type:FLOAT.0
};

struct CDynamicScenarioManager
{
	array<struct CDynamicScenarioEntry>        OnFootScenarios;                 // type:ARRAY.ATARRAY
	array<struct CDynamicScenarioEntry>        _0x38C34402;                     // type:ARRAY.ATARRAY
	array<struct CDynamicSitScenarioEntry>     SitScenarios;                    // type:ARRAY.ATARRAY
	array<struct _0x222CAA2C>                  _0x26A52229;                     // type:ARRAY.ATARRAY
	array<struct _0xB8F6490B>                  _0xDC5A26EA;                     // type:ARRAY.ATARRAY
};

struct CDynamicSitScenarioEntry : _0xB8F6490B
{
	bitset<enum _0x664BF8F0>         CanBeUsedFor;                    // type:BITSET.32BIT
};

struct CEmoteInfo
{
	string                                     Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                     PromptLabel;                     // type:STRING.ATNONFINALHASHSTRING
	string                                     ActionPromptLabel;               // type:STRING.ATNONFINALHASHSTRING
	string                                     TickerMsgLabel;                  // type:STRING.ATNONFINALHASHSTRING
	struct _0x5ECFF4EF                         BaseAnimInfo;                    // type:STRUCT.STRUCTURE
	array<struct ConditionalEmoteAnimInfo>     ConditionalAnimInfos;            // type:ARRAY.ATARRAY
};

struct CEmoteMetadata
{
	array<struct CEmoteInfo>         EmoteInfos;                      // type:ARRAY.ATARRAY
};

struct CEmotionalPresets
{
	map<string, struct _0x222E43A6>     Presets;                         // type:MAP.ATBINARYMAP
};

struct CEnergyConfigInfos
{
	map<string, struct _0x0E1D2569>     HealthRechargeConfig;            // type:MAP.ATBINARYMAP
	map<string, struct _0x742934C4>     HealthConfig;                    // type:MAP.ATBINARYMAP
	map<string, struct _0xC3397DC8>     StaminaConfig;                   // type:MAP.ATBINARYMAP
	map<string, struct _0xAA5C42E5>     SpecialAbilityConfig;            // type:MAP.ATBINARYMAP
	map<string, struct _0x78FBE78C>     EnergyConfig;                    // type:MAP.ATBINARYMAP
	struct void                         DefaultConfig;                   // type:STRUCT.EXTERNAL_NAMED
	float                               DefaultMissionPedHealth;         // type:FLOAT.0
	float                               DefaultPlayerPedHealth;          // type:FLOAT.0
	struct void                         PlayerOverrideSinglePlayer;      // type:STRUCT.EXTERNAL_NAMED
	struct void                         PlayerOverrideMultiPlayer;       // type:STRUCT.EXTERNAL_NAMED
};

struct CEntityDef : rage__fwEntityDef
{
	uint                             tintValue;                       // type:UINT.0
	uchar                            _0x0DC5F270;                     // type:UCHAR.0
	uchar                            _0x540CA436;                     // type:UCHAR.0
};

struct CEntryAnimVariations
{
	string                                Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x0090661F>              Flags;                           // type:BITSET.32BIT
	array<struct CAICondition>            Conditions;                      // type:ARRAY.ATARRAY
	array<struct CConditionalClipSet>     EntryAnims;                      // type:ARRAY.ATARRAY
	array<struct CConditionalClipSet>     JackingAnims;                    // type:ARRAY.ATARRAY
	array<struct CConditionalClipSet>     ExitAnims;                       // type:ARRAY.ATARRAY
};

struct CEntryPointOverride
{
	string                           LayoutOverride;                  // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x7A28F0AE>        EntryPoints;                     // type:ARRAY.ATARRAY
};

struct CEntryPointOverrideInfo
{
	string                                Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CEntryPointOverride>     EntryPointOverride;              // type:ARRAY.ATARRAY
};

struct CEntryZone
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct void                      TriggerInfo;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                      AnimInfo;                        // type:STRUCT.EXTERNAL_NAMED
};

struct CEntryZoneSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct void>               EntryZones;                      // type:ARRAY.ATARRAY
};

struct CEventCrimeCryForHelp__Tunables : CTuning
{
	float                            MaxDistance;                     // type:FLOAT.0
	float                            _0x53CBA719;                     // type:FLOAT.0
	float                            _0xF4DFAF9B;                     // type:FLOAT.0
	float                            _0x6C6842B8;                     // type:FLOAT.0
	float                            _0x99BFBB41;                     // type:FLOAT.0
	float                            _0x3A44FFC9;                     // type:FLOAT.0
};

struct CEventDataDecisionMaker
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           DecisionMakerParentRef;          // type:STRING.ATNONFINALHASHSTRING
	string                           DecisionMakerMountedRef;         // type:STRING.ATNONFINALHASHSTRING
	string                           DecisionMakerDraftRef;           // type:STRING.ATNONFINALHASHSTRING
	string                           DecisionMakerTiedUpRef;          // type:STRING.ATNONFINALHASHSTRING
	string                           DecisionMakerGroupBeatRef;       // type:STRING.ATNONFINALHASHSTRING
	string                           DecisionMakerThreatResponseRef;  // type:STRING.ATNONFINALHASHSTRING
	string                           DecisionMakerPlayerHorseRef;     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    EventResponse;                   // type:ARRAY.ATARRAY
};

struct CEventDataManager
{
	string                                        DefaultDecisionMaker;            // type:STRING.ATNONFINALHASHSTRING
	string                                        DefaultDecisionMakerForPlayers;  // type:STRING.ATNONFINALHASHSTRING
	string                                        DefaultDecisionMakerForCops;     // type:STRING.ATNONFINALHASHSTRING
	array<struct CEventDataDecisionMaker>         eventDecisionMaker;              // type:ARRAY.ATARRAY
	array<struct CEventDecisionMakerResponse>     eventDecisionMakerResponseData;  // type:ARRAY.ATARRAY
	string                                        DefaultEventContextTemplate;     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0xD0D581B5>               EventContextTemplates;           // type:MAP.ATBINARYMAP
	map<string, struct _0x7F9C71D2>               EventTrackerLists;               // type:MAP.ATBINARYMAP
	array<struct _0x050E1B8D>                     LookIntensityTemplates;          // type:ARRAY.ATARRAY
};

struct CEventDecisionMakerResponse
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum eEventType                  Event;                           // type:ENUM.32BIT
	struct _0xEC2C95AA               Cooldown;                        // type:STRUCT.STRUCTURE
	array<struct _0xDA769AA4>        Decision;                        // type:ARRAY.ATARRAY
};

struct CEventExplosionHeard__Tunables : CTuning
{
	float                            _0x7471FDFE;                     // type:FLOAT.0
	float                            _0xC8FF9EA5;                     // type:FLOAT.0
	float                            MaxCombineDistThresholdSquared;  // type:FLOAT.0
};

struct CEventFootStepHeard__Tunables : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
};

struct CEventGunAimedAt__Tunables : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            _0x05F57CA0;                     // type:FLOAT.0
	float                            _0x4FE36171;                     // type:FLOAT.0
};

struct CEventMeleeAction__Tunables : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            PedFearImpact;                   // type:FLOAT.0
	string                           _0x405F29E1;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x61670DA2;                     // type:FLOAT.0
};

struct CEventPedJackingMyVehicle__Tunables : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            _0x3E0A75E7;                     // type:FLOAT.0
};

struct CEventPotentialBeWalkedInto__Tunables : CTuning
{
	float                            _0x2AC67B9C;                     // type:FLOAT.2
	float                            _0xDBE487A8;                     // type:FLOAT.0
	float                            _0x62725810;                     // type:FLOAT.0
	float                            _0x353889A0;                     // type:FLOAT.0
	float                            _0xBC4D64A0;                     // type:FLOAT.0
	float                            _0x3960FC7E;                     // type:FLOAT.0
};

struct CEventPotentialBlast__Tunables : CTuning
{
};

struct CEventPotentialGetRunOver__Tunables : CTuning
{
	float                            MinSpeedToDive;                  // type:FLOAT.0
	float                            SpeedToAlwaysDive;               // type:FLOAT.0
	float                            _0x375C2233;                     // type:FLOAT.0
	float                            _0xB6F16D4A;                     // type:FLOAT.0
	float                            MaxSpeedToDive;                  // type:FLOAT.0
	float                            ChancesToDive;                   // type:FLOAT.0
	float                            _0xFD158203;                     // type:FLOAT.0
	float                            MinDelay;                        // type:FLOAT.0
	float                            MaxDelay;                        // type:FLOAT.0
	float                            _0x70C7D053;                     // type:FLOAT.0
	float                            _0xCDC06EA1;                     // type:FLOAT.0
	float                            _0xB4B2BE0A;                     // type:FLOAT.0
};

struct CEventRequestHelp__Tunables : CTuning
{
	float                            MaxRangeWithoutRadioForFistFights; // type:FLOAT.0
	uint                             _0x6F8C9D1E;                     // type:UINT.0
	float                            _0xF4AD6ED3;                     // type:FLOAT.0
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
};

struct CEventRespondedToThreat__Tunables : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
};

struct CEventShocking__Tunables : CTuning
{
	float                            LifeTime;                        // type:FLOAT.0
	float                            VisualReactionRange;             // type:FLOAT.0
	float                            CopInVehicleVisualReactionRange; // type:FLOAT.0
	float                            AudioReactionRange;              // type:FLOAT.0
	float                            _0xAABBBF85;                     // type:FLOAT.0
	float                            _0x21EC68FC;                     // type:FLOAT.0
	float                            _0xC29466AD;                     // type:FLOAT.0
	float                            AIOnlyReactionRangeScaleFactor;  // type:FLOAT.0
	float                            MinWatchTime;                    // type:FLOAT.0
	float                            MaxWatchTime;                    // type:FLOAT.0
	float                            PedGenBlockedAreaMinRadius;      // type:FLOAT.0
	float                            WanderInfluenceSphereRadius;     // type:FLOAT.0
	float                            AmbientEventLifetime;            // type:FLOAT.0
	float                            MinTimeForAmbientReaction;       // type:FLOAT.0
	float                            MaxTimeForAmbientReaction;       // type:FLOAT.0
	float                            ShockingSpeechChance;            // type:FLOAT.0
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            DuplicateDistanceCheck;          // type:FLOAT.0
	float                            MaxTimeForAudioReaction;         // type:FLOAT.0
	float                            _0x954ABAB7;                     // type:FLOAT.0
	float                            _0xBECEB75F;                     // type:FLOAT.0
	float                            _0x53FCDC77;                     // type:FLOAT.0
	uint                             _0xE93D71EE;                     // type:UINT.0
	uint                             PedGenBlockingAreaLifeTimeMS;    // type:UINT.0
	uint                             _0xE4EF9DE2;                     // type:UINT.0
	uint                             _0x4BB50380;                     // type:UINT.0
	float                            _0xE109D62F;                     // type:FLOAT.0
	uint                             DuplicateTimeCheck;              // type:UINT.0
	enum eEventType                  _0x18B8C243;                     // type:ENUM.32BIT
	string                           ShockingSpeechHash;              // type:STRING.ATNONFINALHASHSTRING
	string                           ShockingFilmSpeechHash;          // type:STRING.ATNONFINALHASHSTRING
	enum AmbientEventType            AmbientEventType;                // type:ENUM.32BIT
	bool                             AddPedGenBlockedArea;            // type:BOOL.0
	bool                             _0xB25BEEA3;                     // type:BOOL.0
	bool                             AllowIgnoreAsLowPriority;        // type:BOOL.0
	bool                             DebugDisplayAlwaysUseEventPosition; // type:BOOL.0
	bool                             VehicleSlowDown;                 // type:BOOL.0
	bool                             IgnoreIfSensingPedIsOtherEntity; // type:BOOL.0
	bool                             AllowScanningEvenIfPreviouslyReacted; // type:BOOL.0
	enum _0x6BDE35C8                 ReactionMode;                    // type:ENUM.32BIT
	bool                             CanCallPolice;                   // type:BOOL.0
	bool                             IgnoreFovForHeadIk;              // type:BOOL.0
	bool                             ReactToOtherEntity;              // type:BOOL.0
	bool                             _0x85C8296D;                     // type:BOOL.0
	bool                             _0xADBBE59C;                     // type:BOOL.0
	bool                             _0x241770B1;                     // type:BOOL.0
	bool                             _0xDA4F9A70;                     // type:BOOL.0
	bool                             _0xE95EC6F8;                     // type:BOOL.0
	bool                             _0xBB5C3DA4;                     // type:BOOL.0
	bool                             _0xE2E80E17;                     // type:BOOL.0
	bool                             _0x6325E4C4;                     // type:BOOL.0
	bool                             _0x68ED7A33;                     // type:BOOL.0
	enum _0x7613C3F7                 _0x8D90984D;                     // type:ENUM.32BIT
	uint                             _0x220FAFA7;                     // type:UINT.0
	float                            _0x18183FB0;                     // type:FLOAT.0
};

struct CEventSuspiciousActivity__Tunables : CTuning
{
	float                            fMinDistanceToBeConsideredSameEvent; // type:FLOAT.0
};

struct CExplosionInfoManager
{
	array<struct _0x977D9A7F>        aExplosionTagData;               // type:ARRAY.ATARRAY
};

struct CExtensionDef : rage__fwExtensionDef
{
	vec3                             offsetPosition;                  // type:VECTOR3.0
};

struct CExtensionDefAudioCollisionSettings : CExtensionDef
{
	string                           settings;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CExtensionDefAudioEmitter : CExtensionDef
{
	vec4                             offsetRotation;                  // type:VECTOR4.0
	uint                             effectHash;                      // type:UINT.0
};

struct CExtensionDefBuoyancy : CExtensionDef
{
};

struct CExtensionDefClimbHandHold : CExtensionDef
{
	vec3                             left;                            // type:VECTOR3.0
	vec3                             right;                           // type:VECTOR3.0
	vec3                             normal;                          // type:VECTOR3.0
};

struct CExtensionDefDecal : CExtensionDef
{
	vec4                             offsetRotation;                  // type:VECTOR4.0
	string                           _0x47AEE370;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0xCB75C79B;                     // type:INT.0
	int                              boneTag;                         // type:INT.0
	float                            scale;                           // type:FLOAT.0
	int                              probability;                     // type:INT.0
	int                              flags;                           // type:INT.0
};

struct CExtensionDefDoor : CExtensionDef
{
	bool                             _0xDAF8214E;                     // type:BOOL.0
	bool                             enableLimitAngle;                // type:BOOL.0
	bool                             _0x091A42D0;                     // type:BOOL.0
	bool                             startsLocked;                    // type:BOOL.0
	bool                             canBreak;                        // type:BOOL.0
	bool                             _0xA37CAB71;                     // type:BOOL.0
	float                            _0xCFE37BDB;                     // type:FLOAT.0
	float                            _0xA0CF3C8D;                     // type:FLOAT.0
	float                            _0x9C555ECF;                     // type:FLOAT.0
	float                            _0xBCA0289E;                     // type:FLOAT.0
	float                            doorTargetRatio;                 // type:FLOAT.0
	string                           audioHash;                       // type:STRING.ATNONFINALHASHSTRING
	array<string, 4>                 _0x5907D538;                     // type:ARRAY.ATFIXEDARRAY
};

struct CExtensionDefExplosionEffect : CExtensionDef
{
	vec4                             offsetRotation;                  // type:VECTOR4.0
	string                           explosionName;                   // type:STRING.ATNONFINALHASHSTRING
	int                              boneTag;                         // type:INT.0
	int                              explosionTag;                    // type:INT.0
	int                              explosionType;                   // type:INT.0
	uint                             flags;                           // type:UINT.0
};

struct CExtensionDefExpression : CExtensionDef
{
	string                           expressionDictionaryName;        // type:STRING.ATFINALHASHSTRING
	string                           expressionName;                  // type:STRING.ATFINALHASHSTRING
	string                           creatureMetadataName;            // type:STRING.ATFINALHASHSTRING
	bool                             initialiseOnCollision;           // type:BOOL.0
	string                           expressionSetName;               // type:STRING.ATFINALHASHSTRING
};

struct CExtensionDefLadder : CExtensionDef
{
	vec3                             bottom;                          // type:VECTOR3.0
	vec3                             top;                             // type:VECTOR3.0
	vec3                             normal;                          // type:VECTOR3.0
	enum _0x4D24FF09                 materialType;                    // type:ENUM.32BIT
	string                           template;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             canGetOffAtTop;                  // type:BOOL.0
	bool                             canGetOffAtBottom;               // type:BOOL.0
};

struct CExtensionDefLight : CExtensionDef
{
};

struct CExtensionDefLightEffect : CExtensionDef
{
	array<struct CLightAttrDef>      instances;                       // type:ARRAY.ATARRAY
	array<struct CLightAttrDef>      _0xC4E96A00;                     // type:ARRAY.ATARRAY
};

struct CExtensionDefLightShaft : CExtensionDef
{
	vec3                             cornerA;                         // type:VECTOR3.0
	vec3                             cornerB;                         // type:VECTOR3.0
	vec3                             cornerC;                         // type:VECTOR3.0
	vec3                             cornerD;                         // type:VECTOR3.0
	vec3                             direction;                       // type:VECTOR3.0
	float                            directionAmount;                 // type:FLOAT.0
	float                            length;                          // type:FLOAT.0
	float                            fadeInTimeStart;                 // type:FLOAT.0
	float                            fadeInTimeEnd;                   // type:FLOAT.0
	float                            fadeOutTimeStart;                // type:FLOAT.0
	float                            fadeOutTimeEnd;                  // type:FLOAT.0
	float                            fadeDistanceStart;               // type:FLOAT.0
	float                            fadeDistanceEnd;                 // type:FLOAT.0
	uint                             color;                           // type:UINT.1
	float                            intensity;                       // type:FLOAT.0
	uchar                            flashiness;                      // type:UCHAR.0
	uint                             flags;                           // type:UINT.0
	enum _0x732734E1                 densityType;                     // type:ENUM.32BIT
	enum _0x87184673                 volumeType;                      // type:ENUM.32BIT
	float                            softness;                        // type:FLOAT.0
	bool                             scaleBySunIntensity;             // type:BOOL.0
};

struct CExtensionDefParticleEffect : CExtensionDef
{
	vec4                             offsetRotation;                  // type:VECTOR4.0
	string                           fxName;                          // type:STRING.ATNONFINALHASHSTRING
	int                              fxType;                          // type:INT.0
	int                              boneTag;                         // type:INT.0
	float                            scale;                           // type:FLOAT.0
	int                              probability;                     // type:INT.0
	int                              flags;                           // type:INT.0
	uint                             color;                           // type:UINT.1
	string                           guid;                            // type:STRING.ATNONFINALHASHSTRING
	string                           emitterMesh;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CExtensionDefProcObject : CExtensionDef
{
	float                            radiusInner;                     // type:FLOAT.0
	float                            radiusOuter;                     // type:FLOAT.0
	float                            spacing;                         // type:FLOAT.0
	float                            minScale;                        // type:FLOAT.0
	float                            maxScale;                        // type:FLOAT.0
	float                            minScaleZ;                       // type:FLOAT.0
	float                            maxScaleZ;                       // type:FLOAT.0
	float                            minZOffset;                      // type:FLOAT.0
	float                            maxZOffset;                      // type:FLOAT.0
	uint                             objectHash;                      // type:UINT.0
	uint                             flags;                           // type:UINT.0
};

struct CExtensionDefScript : CExtensionDef
{
	string                                     scriptName;                      // type:STRING.ATSTRING
	array<struct CExtensionDefScriptChild>     children;                        // type:ARRAY.ATARRAY
};

struct CExtensionDefScriptChild
{
	vec3                             position;                        // type:VECTOR3.0
	float                            _0x431040F0;                     // type:FLOAT.0
};

struct CExtensionDefSpawnPoint : CExtensionDef
{
	vec4                                        offsetRotation;                  // type:VECTOR4.0
	string                                      spawnType;                       // type:STRING.ATNONFINALHASHSTRING
	string                                      pedType;                         // type:STRING.ATNONFINALHASHSTRING
	string                                      group;                           // type:STRING.ATNONFINALHASHSTRING
	string                                      interior;                        // type:STRING.ATNONFINALHASHSTRING
	string                                      requiredImap;                    // type:STRING.ATNONFINALHASHSTRING
	enum _0xAB78892D                            availableInMpSp;                 // type:ENUM.32BIT
	float                                       probability;                     // type:FLOAT.0
	float                                       timeTillPedLeaves;               // type:FLOAT.0
	float                                       onScreenTimeTillPedLeaves;       // type:FLOAT.0
	float                                       radius;                          // type:FLOAT.0
	uchar                                       start;                           // type:UCHAR.0
	uchar                                       end;                             // type:UCHAR.0
	bitset<enum CScenarioPointFlags__Flags>     flags;                           // type:BITSET.32BIT
	bool                                        highPri;                         // type:BOOL.0
	bool                                        extendedRange;                   // type:BOOL.0
	bool                                        shortRange;                      // type:BOOL.0
	uint64                                      disabledConditionalAnims;        // type:UINT64.0
};

struct CExtensionDefSpawnPointOverride : CExtensionDef
{
	string                                      ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
	uchar                                       iTimeStartOverride;              // type:UCHAR.0
	uchar                                       iTimeEndOverride;                // type:UCHAR.0
	string                                      Group;                           // type:STRING.ATNONFINALHASHSTRING
	string                                      ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
	enum _0xAB78892D                            AvailabilityInMpSp;              // type:ENUM.32BIT
	bitset<enum CScenarioPointFlags__Flags>     Flags;                           // type:BITSET.32BIT
	float                                       Radius;                          // type:FLOAT.0
	float                                       TimeTillPedLeaves;               // type:FLOAT.0
};

struct CExtensionDefSwayableEffect : CExtensionDef
{
	int                              boneTag;                         // type:INT.0
	float                            _0x96000FC3;                     // type:FLOAT.0
	float                            _0x9A8CB3C1;                     // type:FLOAT.0
	float                            _0xA52DA7CC;                     // type:FLOAT.0
	float                            _0x8B9F447D;                     // type:FLOAT.0
	float                            _0xD2BC3460;                     // type:FLOAT.0
	float                            _0xA22393A2;                     // type:FLOAT.0
};

struct CExtensionDefWalkDontWalk : CExtensionDef
{
};

struct CExtensionDefWindDisturbance : CExtensionDef
{
	vec4                             offsetRotation;                  // type:VECTOR4.0
	int                              disturbanceType;                 // type:INT.0
	int                              boneTag;                         // type:INT.0
	vec4                             size;                            // type:VECTOR4.0
	float                            strength;                        // type:FLOAT.0
	int                              flags;                           // type:INT.0
};

struct CExtraContentSaveStructure : CBaseSaveObject
{
	array<struct CExtraContentSaveStructure__CInstalledPackagesStruct>     InstalledPackages;               // type:ARRAY.ATARRAY
};

struct CExtraContentSaveStructure__CInstalledPackagesStruct
{
	uint                             nameHash;                        // type:UINT.0
};

struct CFallenSnowData
{
	bool                             Enabled;                         // type:BOOL.0
	array<struct _0xD0949F53>        SeasonChannelData;               // type:ARRAY.ATARRAY
	string                           SnowDiffuseMapName;              // type:STRING.ATNONFINALHASHSTRING
	string                           SnowNormalMapName;               // type:STRING.ATNONFINALHASHSTRING
};

struct CFiringPatternInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	short                            NumberOfBurstsMin;               // type:SHORT.0
	short                            NumberOfBurstsMax;               // type:SHORT.0
	short                            NumberOfShotsPerBurstMin;        // type:SHORT.0
	short                            NumberOfShotsPerBurstMax;        // type:SHORT.0
	float                            TimeBetweenShotsMin;             // type:FLOAT.0
	float                            TimeBetweenShotsMax;             // type:FLOAT.0
	float                            TimeBetweenShotsAbsoluteMin;     // type:FLOAT.0
	float                            TimeBetweenBurstsMin;            // type:FLOAT.0
	float                            TimeBetweenBurstsMax;            // type:FLOAT.0
	float                            TimeBetweenBurstsAbsoluteMin;    // type:FLOAT.0
	float                            _0x42652E49;                     // type:FLOAT.0
	float                            TimeBeforeFiringMin;             // type:FLOAT.0
	float                            TimeBeforeFiringMax;             // type:FLOAT.0
};

struct CFiringPatternInfoManager
{
	array<struct CFiringPatternInfo>     Infos;                           // type:ARRAY.ATARRAY
};

struct CFirstPersonDriveByLookAroundData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             AllowLookback;                   // type:BOOL.0
	vec2                             HeadingLimits;                   // type:VECTOR2.0
	struct _0x688F83C2               DataLeft;                        // type:STRUCT.STRUCTURE
	struct _0x688F83C2               DataRight;                       // type:STRUCT.STRUCTURE
	struct _0x8FCEAB89               WheelClipInfo;                   // type:STRUCT.STRUCTURE
};

struct CFirstPersonTorsoSpaceSet
{
	float                            MinYawLimit;                     // type:FLOAT.0
	float                            MaxYawLimit;                     // type:FLOAT.0
	float                            MinPitchLimit;                   // type:FLOAT.0
	float                            MaxPitchLimit;                   // type:FLOAT.0
	float                            MinYawScaleLimit;                // type:FLOAT.0
	float                            MaxYawScaleLimit;                // type:FLOAT.0
	float                            MinPitchScaleLimit;              // type:FLOAT.0
	float                            MaxPitchScaleLimit;              // type:FLOAT.0
};

struct CFishCapsuleInfo : CBaseCapsuleInfo
{
	float                            Radius;                          // type:FLOAT.0
	float                            Length;                          // type:FLOAT.0
	float                            ZOffset;                         // type:FLOAT.0
	float                            YOffset;                         // type:FLOAT.0
};

struct CFishingInteractionData
{
	map<string, struct _0x57DC40B1>                  FishingConfigDatas;              // type:MAP.ATBINARYMAP
	map<string, struct _0x8A6E3315>                  FishingUnhookActionDataSets;     // type:MAP.ATBINARYMAP
	map<string, struct _0xE8A8C72E>                  FishingStruggleDataSets;         // type:MAP.ATBINARYMAP
	map<string, struct _0x46976C8C>                  FishingFlickDataSets;            // type:MAP.ATBINARYMAP
	map<string, struct _0xA135B60D>                  AnimScenes;                      // type:MAP.ATBINARYMAP
	map<string, struct _0xB83FE8C0>                  CastingProbeDataSets;            // type:MAP.ATBINARYMAP
	map<string, struct _0xADCE8784>                  UnhookProbeDataSets;             // type:MAP.ATBINARYMAP
	map<string, struct _0x841AC52D>                  DefaultFishingConfigByModel;     // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     DefaultFishingConfigDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     DefaultCastingProbeDataSetSelectors; // type:MAP.ATBINARYMAP
};

struct CFleeDecisionMakerData
{
	map<string, struct _0xF0B6D49B>     Profiles;                        // type:MAP.ATBINARYMAP
};

struct CFlightTuningSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           MotionSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                           TakeOffClipSet;                  // type:STRING.ATNONFINALHASHSTRING
	string                           LandingClipSet;                  // type:STRING.ATNONFINALHASHSTRING
	string                           WaterTakeOffClipSet;             // type:STRING.ATNONFINALHASHSTRING
	string                           WaterLandingClipSet;             // type:STRING.ATNONFINALHASHSTRING
	float                            FlapSpeedMin;                    // type:FLOAT.0
	float                            FlapSpeedMax;                    // type:FLOAT.0
	float                            GlideSpeedMin;                   // type:FLOAT.0
	float                            GlideSpeedMax;                   // type:FLOAT.0
	float                            MaxFlapDuration;                 // type:FLOAT.0
	float                            MaxGlideDuration;                // type:FLOAT.0
	float                            FlapToGlideTransitionThreshold;  // type:FLOAT.0
	float                            GlideToFlapTransitionThreshold;  // type:FLOAT.0
	float                            FlightStaminaDecreaseRate;       // type:FLOAT.0
	float                            LandingRadius;                   // type:FLOAT.0
	float                            WaterLandingRadius;              // type:FLOAT.0
	float                            TurbulenceAmplitudeX;            // type:FLOAT.0
	float                            TurbulenceAmplitudeY;            // type:FLOAT.0
	float                            TurbulenceAmplitudeZ;            // type:FLOAT.0
	float                            MinHeadingLerpRate;              // type:FLOAT.0
	float                            MaxHeadingLerpRateAvoiding;      // type:FLOAT.0
	float                            MaxHeadingLerpRateFlapping;      // type:FLOAT.0
	float                            MaxHeadingLerpRateGliding;       // type:FLOAT.0
	float                            HeadingAccelerationAvoiding;     // type:FLOAT.0
	float                            HeadingAccelerationFlapping;     // type:FLOAT.0
	float                            HeadingAccelerationGliding;      // type:FLOAT.0
};

struct CFloatProvider : _0xEFAEA34C
{
	float                            Value;                           // type:FLOAT.0
};

struct CFlockSpawnManager__Tunables : CTuning
{
	float                            DistFreeFromNearbyAnimals;       // type:FLOAT.0
	float                            DistFreeFromNearbyAnimalsSameSpecies; // type:FLOAT.0
	float                            DistFreeFromNearbyAnimalsForest; // type:FLOAT.0
	float                            DistFreeFromNearbyAnimalsSameSpeciesForest; // type:FLOAT.0
	float                            DistFreeFromNearbyAnimalsScenario; // type:FLOAT.0
	float                            DistFreeFromNearbyAnimalsSameSpeciesScenario; // type:FLOAT.0
	float                            _0xB7221B5C;                     // type:FLOAT.0
	float                            SpawnRadiusSpreadFactor;         // type:FLOAT.0
	int                              TimeFlockSleeping;               // type:INT.0
	float                            MpSpawnTurnMaxDistance;          // type:FLOAT.0
	float                            MpSpawnTurnDuration;             // type:FLOAT.0
	float                            MpSpawnTimeBetweenTurns;         // type:FLOAT.0
	int                              MaxAttemptsGatheringPoints;      // type:INT.0
};

struct CFlockVariationManager
{
	array<struct _0x6D31BD9C>        FlockVariationSets;              // type:ARRAY.ATARRAY
};

struct CFluidVesselManager
{
	map<string, struct _0x2AA6E518>     FluidVessels;                    // type:MAP.ATBINARYMAP
};

struct CFlyingHandlingData : CBaseSubHandlingData
{
	float                            fThrust;                         // type:FLOAT.0
	float                            fThrustFallOff;                  // type:FLOAT.0
	float                            fThrustVectoring;                // type:FLOAT.0
	float                            fYawMult;                        // type:FLOAT.0
	float                            fYawStabilise;                   // type:FLOAT.0
	float                            fSideSlipMult;                   // type:FLOAT.0
	float                            fRollMult;                       // type:FLOAT.0
	float                            fRollStabilise;                  // type:FLOAT.0
	float                            fPitchMult;                      // type:FLOAT.0
	float                            fPitchStabilise;                 // type:FLOAT.0
	float                            fFormLiftMult;                   // type:FLOAT.0
	float                            fAttackLiftMult;                 // type:FLOAT.0
	float                            fAttackDiveMult;                 // type:FLOAT.0
	float                            fGearDownDragV;                  // type:FLOAT.0
	float                            fGearDownLiftMult;               // type:FLOAT.0
	float                            fWindMult;                       // type:FLOAT.0
	float                            fMoveRes;                        // type:FLOAT.0
	vec3V                            vecTurnRes;                      // type:VEC3V.0
	vec3V                            vecSpeedRes;                     // type:VEC3V.0
	float                            fGearDoorFrontOpen;              // type:FLOAT.0
	float                            fGearDoorRearOpen;               // type:FLOAT.0
	float                            fGearDoorRearOpen2;              // type:FLOAT.0
	float                            fGearDoorRearMOpen;              // type:FLOAT.0
	float                            fTurublenceMagnitudeMax;         // type:FLOAT.0
	float                            fTurublenceForceMulti;           // type:FLOAT.0
	float                            fTurublenceRollTorqueMulti;      // type:FLOAT.0
	float                            fTurublencePitchTorqueMulti;     // type:FLOAT.0
	float                            fBodyDamageControlEffectMult;    // type:FLOAT.0
	float                            fInputSensitivityForDifficulty;  // type:FLOAT.0
	float                            fOnGroundYawBoostSpeedPeak;      // type:FLOAT.0
	float                            fOnGroundYawBoostSpeedCap;       // type:FLOAT.0
	float                            fEngineOffGlideMulti;            // type:FLOAT.0
	float                            fAfterburnerEffectRadius;        // type:FLOAT.0
	float                            fAfterburnerEffectDistance;      // type:FLOAT.0
	float                            fAfterburnerEffectForceMulti;    // type:FLOAT.0
	float                            fSubmergeLevelToPullHeliUnderwater; // type:FLOAT.0
	enum _0xD8F7B033                 handlingType;                    // type:ENUM.32BIT
};

struct CGameConfig : fwConfig
{
	struct _0x3FC89C8A                               ConfigPopulation;                // type:STRUCT.STRUCTURE
	struct _0x1BC84E35                               Config2dEffects;                 // type:STRUCT.STRUCTURE
	struct _0x7C6FF6B3                               ConfigModelInfo;                 // type:STRUCT.STRUCTURE
	struct _0xEBD2F233                               _0x74B23A2B;                     // type:STRUCT.STRUCTURE
	struct _0x81ACA8F2                               ConfigExtensions;                // type:STRUCT.STRUCTURE
	struct _0x777A46D6                               ConfigStreamingEngine;           // type:STRUCT.STRUCTURE
	struct CConfigOnlineServices                     ConfigOnlineServices;            // type:STRUCT.STRUCTURE
	struct _0x2B496E53                               ConfigUGCDescriptions;           // type:STRUCT.STRUCTURE
	struct _0x0BC2DDB5                               ConfigNetScriptBroadcastData;    // type:STRUCT.STRUCTURE
	struct CConfigScriptStackSizes                   ConfigScriptStackSizes;          // type:STRUCT.STRUCTURE
	struct CConfigScriptResourceExpectedMaximums     ConfigScriptResourceExpectedMaximums; // type:STRUCT.STRUCTURE
	struct _0x3B34D3BB                               ConfigScriptTextLines;           // type:STRUCT.STRUCTURE
	struct CConfigScaleformManager                   ConfigScaleformManager;          // type:STRUCT.STRUCTURE
	struct _0x78970E5F                               ConfigMediaTranscoding;          // type:STRUCT.STRUCTURE
	struct CConfigUIArbiter                          ConfigUIDatabinding;             // type:STRUCT.STRUCTURE
	struct CConfigUIArbiter                          ConfigUIScaleformComplexObjects; // type:STRUCT.STRUCTURE
	struct CConfigUIRingBuffer                       ConfigUIEventDispatcher;         // type:STRUCT.STRUCTURE
	struct _0x4E43A94C                               _0xE0F183C1;                     // type:STRUCT.STRUCTURE
	struct _0x97181982                               _0x1D311E2C;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x53C3CC2E>                  Threads;                         // type:MAP.ATMAP
	enum _0xEA532D0D                                 UseVehicleBurnoutTexture;        // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0xAC4D708F;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 AllowCrouchedMovement;           // type:ENUM.32BIT
	enum _0xEA532D0D                                 AllowParachuting;                // type:ENUM.32BIT
	enum _0xEA532D0D                                 AllowStealthMovement;            // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0x8A6F6BC2;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0x479D792B;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0x7ED9B17D;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0xF95BED85;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0xC0B27D8B;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0xD732FD81;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0xBD486499;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0x53D4C5FC;                     // type:ENUM.32BIT
	enum _0xEA532D0D                                 _0x4887B2CD;                     // type:ENUM.32BIT
	int                                              _0x8EE59164;                     // type:INT.0
	int                                              _0xC16BDB74;                     // type:INT.0
	int                                              _0x03C4BD8E;                     // type:INT.0
	int                                              MaxLoadedParsedDataFiles;        // type:INT.0
	int                                              _0xAD171381;                     // type:INT.0
	int                                              _0x98A91322;                     // type:INT.0
	int                                              CacheLoaderBufferSizeKB;         // type:INT.0
	int                                              EntityDrawDataCacheBufferSizeKB; // type:INT.0
	int                                              EntityDrawDataCacheGPUBufferSizeKB; // type:INT.0
	int                                              _0xA600422B;                     // type:INT.0
	int                                              _0x1A3E5550;                     // type:INT.0
	int                                              _0xA48C2AFE;                     // type:INT.0
	int                                              _0x58887610;                     // type:INT.0
	string                                           _0x523AFF67;                     // type:STRING.CONST_STRING
	string                                           _0x241A46BF;                     // type:STRING.CONST_STRING
	string                                           _0x0478C2B2;                     // type:STRING.CONST_STRING
	string                                           DebugScriptsPath;                // type:STRING.CONST_STRING
	string                                           _0xADF441D3;                     // type:STRING.CONST_STRING
};

struct CGarages__CGarageInitDataList
{
	array<struct _0xDB48D0F8>        garages;                         // type:ARRAY.ATARRAY
};

struct CGestureCondition
{
	struct CAICondition              pCondition;                      // type:STRUCT.POINTER
};

struct CGestureConditionManager
{
	map<string, struct CGestureCondition>     Conditions;                      // type:MAP.ATBINARYMAP
};

struct CGestureInfo : CItemInfo
{
	string                           AnimationDictionary;             // type:STRING.ATFINALHASHSTRING
	string                           AnimationName;                   // type:STRING.ATFINALHASHSTRING
};

struct CGoldBarInfo : CItemInfo
{
};

struct CGrappleSequence
{
	string                                          Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                          SequenceStart;                   // type:STRING.ATNONFINALHASHSTRING
	map<string, struct CGrappleSequenceElement>     aSequenceList;                   // type:MAP.ATBINARYMAP
};

struct CGrappleSequenceContainer
{
	map<string, struct CGrappleSequence>     Map;                             // type:MAP.ATBINARYMAP
};

struct CGrappleSequenceElement
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ActionResultId;                  // type:STRING.ATNONFINALHASHSTRING
	float                            StruggleDuration;                // type:FLOAT.0
	float                            IncrementRate;                   // type:FLOAT.0
	float                            DecrementRate;                   // type:FLOAT.0
	float                            _0x367E6AFF;                     // type:FLOAT.0
	float                            _0x09E0E6CA;                     // type:FLOAT.0
	string                           SuccessTransition;               // type:STRING.ATNONFINALHASHSTRING
	string                           FailureTransition;               // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xA940EBAD>         ElementAttributes;               // type:BITSET.32BIT
};

struct CGravityWellDefinitionList
{
	array<struct _0x80772CDC>        arDefinitions;                   // type:ARRAY.ATARRAY
};

struct CGroup
{
	int                              Id;                              // type:INT.0
	string                           Name;                            // type:STRING.ATSTRING
	array<struct CRsRef>             RefList;                         // type:ARRAY.ATARRAY
};

struct CGuardConditionAnyTargetIsApproaching : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
};

struct CGuardConditionCanConfrontWhenTargetOutsideThreatArea : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CGuardConditionCanInvestigateAfterCombat : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
};

struct CGuardConditionIsConfrontingPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CGuardConditionIsDisabled : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CGuardConditionIsOnHighAlert : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CGuardConditionIsSupporter : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CGuardConditionTargetIsApproaching : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CGuardConditionTargetIsLeaving : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CGuardConditionTargetSpottedEnteringRestrictedArea : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CGuardConditionTargetWarned : CAICondition
{
	enum _0x563FBCEA                 Guard;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	bool                             FinalWarning;                    // type:BOOL.0
};

struct CGuardConditionZoneHasConfrontingPed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CHDTxdAssetBinding
{
	enum _0xC9E9A69A                 assetType;                       // type:ENUM.32BIT
	string                           targetAsset;                     // type:STRING.MEMBER
	string                           HDTxd;                           // type:STRING.MEMBER
};

struct CHandlingData : CHandlingObject
{
	string                                 HandlingName;                    // type:STRING.ATNONFINALHASHSTRING
	float                                  fMass;                           // type:FLOAT.0
	float                                  fInitialDragCoeff;               // type:FLOAT.0
	vec3V                                  CentreOfMassOffset;              // type:VEC3V.0
	vec3V                                  InertiaMultiplier;               // type:VEC3V.0
	float                                  fPercentSubmerged;               // type:FLOAT.0
	float                                  fDriveBias;                      // type:FLOAT.0
	uchar                                  nInitialDriveGears;              // type:UCHAR.0
	float                                  fDriveInertia;                   // type:FLOAT.0
	float                                  fClutchChangeRateScaleUpShift;   // type:FLOAT.0
	float                                  fClutchChangeRateScaleDownShift; // type:FLOAT.0
	float                                  fInitialDriveForce;              // type:FLOAT.0
	float                                  fInitialDriveMaxFlatVel;         // type:FLOAT.0
	float                                  fBrakeForce;                     // type:FLOAT.0
	float                                  fBrakeBias;                      // type:FLOAT.0
	float                                  fHandBrakeForce;                 // type:FLOAT.0
	float                                  fSteeringLock;                   // type:FLOAT.0
	float                                  fTractionCurveMax;               // type:FLOAT.0
	float                                  fTractionCurveMin;               // type:FLOAT.0
	float                                  fTractionCurveLateral;           // type:FLOAT.0
	float                                  fTractionSpringDeltaMax;         // type:FLOAT.0
	float                                  fLowSpeedTractionLossMult;       // type:FLOAT.0
	float                                  fCamberStiffnesss;               // type:FLOAT.0
	float                                  fTractionBias;                   // type:FLOAT.0
	float                                  fTractionLossMult;               // type:FLOAT.0
	float                                  fSuspensionForce;                // type:FLOAT.0
	float                                  fSuspensionCompDamp;             // type:FLOAT.0
	float                                  fSuspensionReboundDamp;          // type:FLOAT.0
	float                                  fSuspensionUpperLimit;           // type:FLOAT.0
	float                                  fSuspensionLowerLimit;           // type:FLOAT.0
	float                                  fSuspensionRaise;                // type:FLOAT.0
	float                                  fSuspensionBias;                 // type:FLOAT.0
	float                                  fAntiRollBarForce;               // type:FLOAT.0
	float                                  fAntiRollBarBiasFront;           // type:FLOAT.0
	float                                  fRollCentreHeightFront;          // type:FLOAT.0
	float                                  fRollCentreHeightRear;           // type:FLOAT.0
	float                                  fCollisionDamageMult;            // type:FLOAT.0
	float                                  fWeaponDamageMult;               // type:FLOAT.0
	float                                  fDeformationDamageMult;          // type:FLOAT.0
	float                                  fEngineDamageMult;               // type:FLOAT.0
	float                                  fExplosionDamageMult;            // type:FLOAT.0
	float                                  fPetrolTankVolume;               // type:FLOAT.0
	float                                  fOilVolume;                      // type:FLOAT.0
	float                                  _0x80593873;                     // type:FLOAT.0
	vec3V                                  SeatOffsetDist;                  // type:VEC3V.0
	uint                                   nMonetaryValue;                  // type:UINT.0
	bitset<enum _0x5557DD3B>               ModelFlags;                      // type:BITSET.32BIT
	bitset<enum _0xFF08B845>               HandlingFlags;                   // type:BITSET.32BIT
	bitset<enum _0x573C6E02>               DamageFlags;                     // type:BITSET.32BIT
	string                                 AIHandling;                      // type:STRING.ATNONFINALHASHSTRING
	float                                  fWeaponDamageScaledToVehHealthMult; // type:FLOAT.0
	struct void                            pTemplateData;                   // type:STRUCT.EXTERNAL_NAMED
	bitset<enum _0x6FC65E96>               CustomizedFields;                // type:BITSET.32BIT
	array<struct CBaseSubHandlingData>     SubHandlingData;                 // type:ARRAY.ATARRAY
};

struct CHandlingDataMgr
{
	array<struct CHandlingData>      HandlingData;                    // type:ARRAY.ATARRAY
};

struct CHandlingObject
{
};

struct CHazardNode
{
	string                              Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                              ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                              ClipThreat;                      // type:STRING.ATNONFINALHASHSTRING
	string                              ClipVictim;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct CHazardTransition>     Successes;                       // type:ARRAY.ATARRAY
	array<struct CHazardTransition>     Fails;                           // type:ARRAY.ATARRAY
	string                              CameraShake;                     // type:STRING.ATNONFINALHASHSTRING
	string                              RumbleCurve;                     // type:STRING.ATNONFINALHASHSTRING
	string                              MeleeResult;                     // type:STRING.ATNONFINALHASHSTRING
	float                               RumbleCurveStart;                // type:FLOAT.0
	float                               RumbleCurveDuration;             // type:FLOAT.0
	bool                                UseMTH;                          // type:BOOL.0
	bool                                _0xC5EDBDE2;                     // type:BOOL.0
	bool                                ResetThreatPosition;             // type:BOOL.0
};

struct CHazardNodes
{
	map<string, struct CHazardNode>     Nodes;                           // type:MAP.ATBINARYMAP
};

struct CHazardTransition
{
	string                           Node;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct CHealthProvider : _0xEFAEA34C
{
	enum _0xCD833EC0                 Threshold;                       // type:ENUM.32BIT
};

struct CHealthRatioProvider : _0xEFAEA34C
{
	struct _0xEFAEA34C               Ratio;                           // type:STRUCT.POINTER
};

struct CHitReactData
{
	enum _0x102E33A4                 RecoveryDirection;               // type:ENUM.32BIT
	array<string>                    Anims;                           // type:ARRAY.ATARRAY
	float                            BlendInDuration;                 // type:FLOAT.0
	string                           LanternClipName;                 // type:STRING.ATNONFINALHASHSTRING
};

struct CHitReactGripData
{
	struct _0x1FC0213F               DuringHitReaction;               // type:STRUCT.STRUCTURE
	struct _0x1FC0213F               DuringProjectileRemoval;         // type:STRUCT.STRUCTURE
};

struct CHitReactionDefinition
{
	array<struct CHitReactionResult>     aReactionResults;                // type:ARRAY.ATARRAY
	bitset<enum _0x8FC87130>             TargetEntityType;                // type:BITSET.32BIT
	bitset<enum _0x21F00F8A>             MovementSpeed;                   // type:BITSET.32BIT
	bitset<enum _0x4C899DA1>             MovementDirection;               // type:BITSET.32BIT
	bitset<enum _0x9B8578C2>             CombatStance;                    // type:BITSET.32BIT
	bitset<enum _0xAA73DD0C>             DefinitionAttrs;                 // type:BITSET.32BIT
	bitset<enum _0xA2EF9186>             AttackAttrs;                     // type:BITSET.32BIT
	bitset<enum _0x4C899DA1>             AttackerDirection;               // type:BITSET.32BIT
	bitset<enum _0xE72522AC>             PedPose;                         // type:BITSET.32BIT
	string                               Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                               SpecialConditionTest;            // type:STRING.ATNONFINALHASHSTRING
	string                               ActionProbeTest;                 // type:STRING.ATNONFINALHASHSTRING
	int                                  Priority;                        // type:INT.0
	enum eAnimBoneTag                    BoneTag;                         // type:ENUM.32BIT
	bool                                 Debug;                           // type:BOOL.0
};

struct CHitReactionDefinitionContainer
{
	map<string, struct CHitReactionDefinition>     Map;                             // type:MAP.ATBINARYMAP
};

struct CHitReactionResult
{
	bitset<enum _0xD1509929>                  HitDirection;                    // type:BITSET.32BIT
	array<struct CWeaponActionResultList>     aWeaponActionResultList;         // type:ARRAY.ATARRAY
};

struct CHorseInfo : CItemInfo
{
	string                           Variation;                       // type:STRING.ATNONFINALHASHSTRING
};

struct CHorseModInfo : CItemInfo
{
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
};

struct CHumanInteractionMetadata
{
	array<struct InteractionTransitionData>     Transitions;                     // type:ARRAY.ATARRAY
	string                                      InteractionType;                 // type:STRING.ATNONFINALHASHSTRING
	string                                      NextInteractionType;             // type:STRING.ATNONFINALHASHSTRING
	string                                      PostInteractionType;             // type:STRING.ATNONFINALHASHSTRING
	string                                      EnterClipSetId;                  // type:STRING.ATNONFINALHASHSTRING
	string                                      EnterRightSideClipSetId;         // type:STRING.ATNONFINALHASHSTRING
	string                                      ParentEnterClipSetId;            // type:STRING.ATNONFINALHASHSTRING
	string                                      ParentEnterRightSideClipSetId;   // type:STRING.ATNONFINALHASHSTRING
	string                                      EnterPropClipId;                 // type:STRING.ATNONFINALHASHSTRING
	string                                      _0x16F3280C;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      PrimaryClipSetId;                // type:STRING.ATNONFINALHASHSTRING
	string                                      RightSideClipSetId;              // type:STRING.ATNONFINALHASHSTRING
	string                                      ParentPrimaryClipSetId;          // type:STRING.ATNONFINALHASHSTRING
	string                                      ParentRightSideClipSetId;        // type:STRING.ATNONFINALHASHSTRING
	struct _0xE9533F29                          LeftSideMountedInteractionData;  // type:STRUCT.STRUCTURE
	struct _0xE9533F29                          RightSideMountedInteractionData; // type:STRUCT.STRUCTURE
	string                                      _0x0C70C69E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      _0xCFEA78D1;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      EnterGestureFallbackClipSetId;   // type:STRING.ATNONFINALHASHSTRING
	string                                      RightEnterGestureFallbackClipSetId; // type:STRING.ATNONFINALHASHSTRING
	array<string>                               ChildClipIds;                    // type:ARRAY.ATARRAY
	uchar                                       NumMountedChildClipIds;          // type:UCHAR.0
	string                                      GestureFallbackClipId;           // type:STRING.ATNONFINALHASHSTRING
	string                                      BaseChildClipId;                 // type:STRING.ATNONFINALHASHSTRING
	string                                      ChildExitClipId;                 // type:STRING.ATNONFINALHASHSTRING
	string                                      MountedEnterClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                                      ParentClipId;                    // type:STRING.ATNONFINALHASHSTRING
	string                                      _0xECAF7331;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      PropClipId;                      // type:STRING.ATNONFINALHASHSTRING
	string                                      _0x403C3BE0;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      BaseParentClipId;                // type:STRING.ATNONFINALHASHSTRING
	string                                      _0x5349F3CB;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      _0x8BD3EA4B;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      _0xB73A70BC;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      ChildFilterHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                                      ParentFilterHash;                // type:STRING.ATNONFINALHASHSTRING
	string                                      ChildBodyBlendTemplateHash;      // type:STRING.ATNONFINALHASHSTRING
	string                                      ParentBodyBlendTemplateHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                      MountedChildFilterHash;          // type:STRING.ATNONFINALHASHSTRING
	string                                      MountedParentFilterHash;         // type:STRING.ATNONFINALHASHSTRING
	string                                      _0x8994DDC2;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      PropString;                      // type:STRING.ATNONFINALHASHSTRING
	array<string>                               ChildMTHClipNamePairings;        // type:ARRAY.ATARRAY
	array<string>                               ParentMTHClipNamePairings;       // type:ARRAY.ATARRAY
	vec3V                                       OriginOffset;                    // type:VEC3V.0
	vec3V                                       OriginRightOffset;               // type:VEC3V.0
	vec3V                                       FacingUpSlopeOffsetScaler;       // type:VEC3V.0
	vec3V                                       FacingDownSlopeOffsetScaler;     // type:VEC3V.0
	vec3V                                       RightFacingUpSlopeOffsetScaler;  // type:VEC3V.0
	vec3V                                       RightFacingDownSlopeOffsetScaler; // type:VEC3V.0
	float                                       OriginHeadingOffset;             // type:FLOAT.0
	float                                       OriginRightHeadingOffset;        // type:FLOAT.0
	float                                       MaxParentPitch;                  // type:FLOAT.0
	float                                       MaxHeightDelta;                  // type:FLOAT.0
	float                                       BlendOutDuration;                // type:FLOAT.0
	float                                       MountedEndClipBlendOutDuration;  // type:FLOAT.0
	float                                       PartialBodyBreakoutBlendOutDuration; // type:FLOAT.0
	float                                       OverrideBlendInDistance;         // type:FLOAT.0
	float                                       _0x3FEE19B4;                     // type:FLOAT.0
	float                                       OverrideBlendInHeading;          // type:FLOAT.0
	float                                       _0x340E2340;                     // type:FLOAT.0
	float                                       _0x3A41EAF3;                     // type:FLOAT.0
	float                                       _0x18A4F170;                     // type:FLOAT.0
	float                                       _0x5C9E2740;                     // type:FLOAT.0
	float                                       _0x8534C567;                     // type:FLOAT.0
	float                                       _0x1049E39E;                     // type:FLOAT.0
	float                                       MaximumReachHeight;              // type:FLOAT.0
	enum eAnimBoneTag                           RightSideSceneOriginBone;        // type:ENUM.32BIT
	enum eAnimBoneTag                           LeftSideSceneOriginBone;         // type:ENUM.32BIT
	enum eAnimBoneTag                           LeftSidePropAttachBone;          // type:ENUM.32BIT
	enum eAnimBoneTag                           RightSidePropAttachBone;         // type:ENUM.32BIT
	enum eAnimBoneTag                           LeftSideMountedPropAttachBone;   // type:ENUM.32BIT
	enum eAnimBoneTag                           RightSideMountedPropAttachBone;  // type:ENUM.32BIT
	enum eAnimBoneTag                           LeftSideLeftIkTargetBone;        // type:ENUM.32BIT
	enum eAnimBoneTag                           LeftSideRightIkTargetBone;       // type:ENUM.32BIT
	enum eAnimBoneTag                           RightSideLeftIkTargetBone;       // type:ENUM.32BIT
	enum eAnimBoneTag                           RightSideRightIkTargetBone;      // type:ENUM.32BIT
	enum eAnimBoneTag                           _0xBF009E0C;                     // type:ENUM.32BIT
	enum eAnimBoneTag                           _0xB8E598AB;                     // type:ENUM.32BIT
	enum eAnimBoneTag                           LeftSideLosBone;                 // type:ENUM.32BIT
	enum eAnimBoneTag                           RightSideLosBone;                // type:ENUM.32BIT
	enum LookIkRotationLimit                    LookAtHeadRotationYawLimit;      // type:ENUM.32BIT
	enum LookIkRotationLimit                    LookAtNeckRotationYawLimit;      // type:ENUM.32BIT
	enum LookIkRotationLimit                    LookAtHeadRotationPitchLimit;    // type:ENUM.32BIT
	enum LookIkRotationLimit                    LookAtNeckRotationPitchLimit;    // type:ENUM.32BIT
	bitset<enum _0xBD025FFD>                    Flags;                           // type:BITSET.32BIT
	float                                       AnimRate;                        // type:FLOAT.0
};

struct CHumanInteractionMetadataManager
{
	float                                       ShortPatAgitationChange;         // type:FLOAT.0
	float                                       LongPatAgitationChangePerSecond; // type:FLOAT.0
	float                                       VerbalAgitationChange;           // type:FLOAT.0
	array<struct CHumanInteractionMetadata>     HumanInteractionData;            // type:ARRAY.ATARRAY
};

struct CIdlePreferenceManager
{
	array<struct _0x5B683B5B>        IdlePreferences;                 // type:ARRAY.ATARRAY
};

struct CIkRecoilInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xEC550523               Default;                         // type:STRUCT.STRUCTURE
	struct _0xEC550523               DefaultSlowMotion;               // type:STRUCT.STRUCTURE
	struct _0xEC550523               HipFire;                         // type:STRUCT.STRUCTURE
	struct _0xEC550523               HipFireSlowMotion;               // type:STRUCT.STRUCTURE
	struct _0xEC550523               GunInAir;                        // type:STRUCT.STRUCTURE
	struct _0xEC550523               GunInAirSlowMotion;              // type:STRUCT.STRUCTURE
};

struct CImapDependencies
{
	string                           imapName;                        // type:STRING.ATNONFINALHASHSTRING
	bitset<enum manifestFlags>       manifestFlags;                   // type:BITSET.32BIT
	array<string>                    itypDepArray;                    // type:ARRAY.ATARRAY
};

struct CImapDependency
{
	string                           imapName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           itypName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           packFileName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CInVehicleOverrideInfo
{
	string                              Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CSeatOverrideInfo>     SeatOverrideInfos;               // type:ARRAY.ATARRAY
};

struct CIncident__Tunables
{
	float                            DefaultAmbientRestrictionVolumeRadius; // type:FLOAT.0
	float                            PostDismissalSearcherArrestRadius; // type:FLOAT.0
	float                            PostDismissalCrimeSceneArrestRadius; // type:FLOAT.0
	float                            InformationSharingDistance;      // type:FLOAT.0
	uint                             PostDismissalGracePeriodMS;      // type:UINT.0
	int                              MinimumBountyForIdentifiedDialogue; // type:INT.0
	uint                             TimeSinceIncidentStartToSilenceSpottedAudioMS; // type:UINT.0
	uint                             MaxTimeToWaitOnSpawnedResourcesMS; // type:UINT.0
};

struct CInspectionInfo
{
	string                            Model;                           // type:STRING.ATNONFINALHASHSTRING
	string                            ClipSet;                         // type:STRING.ATFINALHASHSTRING
	string                            GripClipSet;                     // type:STRING.ATFINALHASHSTRING
	enum eAnimBoneTag                 AttachBone;                      // type:ENUM.32BIT
	string                            DynamicTextureSource;            // type:STRING.ATFINALHASHSTRING
	bool                              FullBody;                        // type:BOOL.0
	bool                              EnableManipulationSweeps;        // type:BOOL.0
	bitset<enum _0x407A089D>          MoveContextFlags;                // type:BITSET.32BIT
	string                            CameraDataDictName;              // type:STRING.ATFINALHASHSTRING
	string                            CameraOverrideSettingsName;      // type:STRING.ATNONFINALHASHSTRING
	string                            CameraOverrideSettingsNameFirstPerson; // type:STRING.ATNONFINALHASHSTRING
	string                            AnimationDictionary;             // type:STRING.ATNONFINALHASHSTRING
	map<enum _0x09BC04A5, string>     PlayerClips;                     // type:MAP.ATBINARYMAP
	map<enum _0x09BC04A5, string>     ItemClips;                       // type:MAP.ATBINARYMAP
	string                            InspectContextString;            // type:STRING.ATNONFINALHASHSTRING
	string                            Interact01ContextString;         // type:STRING.ATNONFINALHASHSTRING
	string                            Interact02ContextString;         // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionActionAddCustomWeaponAnimStreamingRequest : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	struct _0x52C814EF               OverrideFilter;                  // type:STRUCT.STRUCTURE
	bool                             UseMagicExpectedWeapon;          // type:BOOL.0
	float                            Time;                            // type:FLOAT.0
};

struct CInteractionActionApplyInteraction : _0x22B199F9
{
	enum InteractionType             Type;                            // type:ENUM.32BIT
	string                           SpeechType;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionActionApproach : _0x1619E486
{
	bool                             ClampMoveBlendRatio;             // type:BOOL.0
	string                           AmbientClips;                    // type:STRING.ATNONFINALHASHSTRING
	float                            TargetRadius;                    // type:FLOAT.0
	bool                             OffsetCanBeAdjusted;             // type:BOOL.0
};

struct CInteractionActionApproachLastCachedPlayerPosition : _0x1619E486
{
	float                            TargetRadius;                    // type:FLOAT.0
	float                            SlowDownDistance;                // type:FLOAT.0
	bool                             MaintainCurrentSpeed;            // type:BOOL.0
};

struct CInteractionActionBark : _0x1619E486
{
	string                           Scenario;                        // type:STRING.ATNONFINALHASHSTRING
	float                            _0x672EE3CB;                     // type:FLOAT.0
};

struct CInteractionActionBecomeWitness : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Criminal;                        // type:ENUM.32BIT
	string                           Crime;                           // type:STRING.ATNONFINALHASHSTRING
	bool                             IsVictim;                        // type:BOOL.0
	bool                             _0xCBA55774;                     // type:BOOL.0
};

struct CInteractionActionBecomeWitnessLeader : _0x22B199F9
{
	bool                             ForceLeadership;                 // type:BOOL.0
	bool                             BecomeLeaderIfCloser;            // type:BOOL.0
};

struct CInteractionActionBeginInterrogation : _0x22B199F9
{
};

struct CInteractionActionBlockFleeDecision : _0x22B199F9
{
	uint                             Duration;                        // type:UINT.0
	bool                             _0xA47F8AE9;                     // type:BOOL.0
	bool                             BlockHide;                       // type:BOOL.0
};

struct CInteractionActionBlockFleeDialogueForTime : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              DurationMinMS;                   // type:INT.0
	int                              DurationMaxMS;                   // type:INT.0
};

struct CInteractionActionBlockGreets : _0x22B199F9
{
	enum _0x563FBCEA                 GreetingPed;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	uint                             BlockForTimeMS;                  // type:UINT.0
};

struct CInteractionActionBlockNegativePrompt : _0x22B199F9
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	uint                             BlockForTimeMS;                  // type:UINT.0
};

struct CInteractionActionBroadcastSpeech : _0x22B199F9
{
	string                                      SpeechType;                      // type:STRING.ATNONFINALHASHSTRING
	float                                       Radius;                          // type:FLOAT.0
	bool                                        RequireAllFlagTypes;             // type:BOOL.0
	bool                                        FlipAgitator;                    // type:BOOL.0
	bitset<enum CScenarioPointFlags__Flags>     ScenarioPointFlags;              // type:BITSET.32BIT
	bitset<enum ePedScriptResetFlags>           ScriptResetFlags;                // type:BITSET.32BIT
	bitset<enum ePedConfigFlags>                PedConfigFlags;                  // type:BITSET.64BIT
};

struct CInteractionActionBroadcastTrigger : _0x22B199F9
{
	string                           ReactionTrigger;                 // type:STRING.ATNONFINALHASHSTRING
	float                            Radius;                          // type:FLOAT.0
};

struct CInteractionActionCacheAgitatorPosition : _0x22B199F9
{
};

struct CInteractionActionCalloutRequestHelp : _0x22B199F9
{
};

struct CInteractionActionCenterIncidentOnPed : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionActionChangeAmbientReactionLifeTime : _0x22B199F9
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	float                            _0xFF34302E;                     // type:FLOAT.0
	float                            NewAnimationTime;                // type:FLOAT.0
};

struct CInteractionActionChangeResponse : _0x22B199F9
{
	string                           Response;                        // type:STRING.ATNONFINALHASHSTRING
	string                           State;                           // type:STRING.ATNONFINALHASHSTRING
	bool                             UsePositiveResponseOverride;     // type:BOOL.0
	bool                             UseNegativeResponseOverride;     // type:BOOL.0
};

struct CInteractionActionChangeTrafficMoveBlendRatio : _0x22B199F9
{
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct CInteractionActionClearGreetHistory : _0x22B199F9
{
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CInteractionActionClearLookRequest : _0x22B199F9
{
};

struct CInteractionActionClearSimplePerPlayerMemory : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 SourcePed;                       // type:ENUM.32BIT
	enum _0x62A8CB86                 MemoryType;                      // type:ENUM.32BIT
};

struct CInteractionActionConditional : _0x22B199F9
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct _0x22B199F9               Action;                          // type:STRUCT.POINTER
};

struct CInteractionActionConfirmCrimeInvestigating : _0x22B199F9
{
};

struct CInteractionActionConfront : _0x1619E486
{
	string                           AmbientClips;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ShoveDialogue;                   // type:STRING.ATPARTIALHASHVALUE
	string                           EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	enum AmbientEventType            _0x4FA6BF06;                     // type:ENUM.32BIT
	float                            TargetBackOffDistance;           // type:FLOAT.0
	float                            MaxAdditionalPathLength;         // type:FLOAT.0
	float                            ChanceToEscalate;                // type:FLOAT.0
	bool                             DisableIntimidate;               // type:BOOL.0
	bool                             DisableShoving;                  // type:BOOL.0
	bool                             ForceIntimidate;                 // type:BOOL.0
	bool                             DisableMovement;                 // type:BOOL.0
	bool                             QuitTaskAfterShove;              // type:BOOL.0
	bool                             _0xB7005D44;                     // type:BOOL.0
	bool                             ForceGunslinger;                 // type:BOOL.0
	bool                             UseRandomWeaponAction;           // type:BOOL.0
	bool                             _0x3176B5A3;                     // type:BOOL.0
	bool                             _0xE110C1DD;                     // type:BOOL.0
	bool                             AllowSpeedAdjustment;            // type:BOOL.0
	bool                             DontIdleAtStartIfOutsideTargetRadius; // type:BOOL.0
	bool                             AllowEvasiveAnim;                // type:BOOL.0
	bool                             EquipWeapon;                     // type:BOOL.0
};

struct CInteractionActionConfrontAimWeapon : _0x22B199F9
{
};

struct CInteractionActionConfrontCriminalCanReEnterTransport : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Property;                        // type:ENUM.32BIT
};

struct CInteractionActionConfrontDrawWeapon : _0x22B199F9
{
};

struct CInteractionActionCreateGuardDogBarkingEvent : _0x22B199F9
{
};

struct CInteractionActionCreateLookRequest : _0x22B199F9
{
	string                           LookAtSequencePreset;            // type:STRING.ATNONFINALHASHSTRING
	int                              ExpiryTime;                      // type:INT.0
	bool                             UseFullFacing;                   // type:BOOL.0
	bool                             OnlyUseIK;                       // type:BOOL.0
	bool                             SetInteractionHandle;            // type:BOOL.0
	enum _0xD48BCC02                 Priority;                        // type:ENUM.32BIT
};

struct CInteractionActionCreatePlayerGriefingEvent : _0x22B199F9
{
	bool                             OnlyAffectLaw;                   // type:BOOL.0
};

struct CInteractionActionCreateSeenPedIntimidatedEvent : _0x22B199F9
{
};

struct CInteractionActionCreateSeenPedRobbedEvent : _0x22B199F9
{
};

struct CInteractionActionDisableAgitatorNegativePrompt : _0x22B199F9
{
};

struct CInteractionActionDisableAgitatorPositivePrompt : _0x22B199F9
{
};

struct CInteractionActionDisableArmamentCheckForHostileActions : _0x22B199F9
{
	bool                             Disable;                         // type:BOOL.0
};

struct CInteractionActionDismissSuspect : _0x22B199F9
{
};

struct CInteractionActionDismount : _0x1619E486
{
	bool                             _0x52F4AE43;                     // type:BOOL.0
};

struct CInteractionActionDogConfront : _0x1619E486
{
};

struct CInteractionActionDrawWeapon : _0x1619E486
{
	bool                             SlowUnholster;                   // type:BOOL.0
};

struct CInteractionActionDropOffPassenger : _0x1619E486
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x5BAE0294;                     // type:ENUM.32BIT
};

struct CInteractionActionEndInterrogation : _0x22B199F9
{
};

struct CInteractionActionEnterVehicle : _0x1619E486
{
};

struct CInteractionActionExitAmbientReaction : _0x22B199F9
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	enum AmbientEventType            EventType;                       // type:ENUM.32BIT
};

struct CInteractionActionExitTransport : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionActionFace : _0x1619E486
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	string                           AmbientClips;                    // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3C8AB604;                     // type:FLOAT.0
	float                            _0x2193DD07;                     // type:FLOAT.0
	bool                             _0x32C3DECD;                     // type:BOOL.0
};

struct CInteractionActionFight : _0x1619E486
{
	bool                             FightUnarmed;                    // type:BOOL.0
	bool                             DontFleeIfDriverOfVehicleWithPassengers; // type:BOOL.0
	bool                             CanFightArmedPedsWhenNotArmed;   // type:BOOL.0
	bool                             DisableAimIntro;                 // type:BOOL.0
	bool                             DisableRespondedToThreatBroadcast; // type:BOOL.0
	bool                             _0xFA9BD2F0;                     // type:BOOL.0
	bool                             DisableWeaponSelectOnStartIfAlreadyHasGun; // type:BOOL.0
	float                            _0xB7788494;                     // type:FLOAT.0
};

struct CInteractionActionFlee : _0x1619E486
{
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
	float                            _0x78B79F2F;                     // type:FLOAT.0
	bool                             _0x8D1A7B5A;                     // type:BOOL.0
	bool                             _0x7179D276;                     // type:BOOL.0
	bool                             SkipFleeReaction;                // type:BOOL.0
	bool                             AllowFleeDialogue;               // type:BOOL.0
	bool                             DontUseMounts;                   // type:BOOL.0
	bool                             CanShootAtTarget;                // type:BOOL.0
	bool                             UseDistanceTraveledForSpeedCalc; // type:BOOL.0
	bool                             DontStopForTargetWhenInVehicle;  // type:BOOL.0
};

struct CInteractionActionFleeWithLeader : _0x1619E486
{
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
	bool                             AllowFleeDialogue;               // type:BOOL.0
	bool                             CanShootAtTarget;                // type:BOOL.0
};

struct CInteractionActionFollow : _0x1619E486
{
	bool                             FollowLeader;                    // type:BOOL.0
	float                            _0x3BEBFAB7;                     // type:FLOAT.0
	bool                             _0xAB113023;                     // type:BOOL.0
};

struct CInteractionActionFollowAndConverse : _0x1619E486
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	float                            OverrideFollowOffsetOnHorse;     // type:FLOAT.0
	bool                             ClampMoveBlendRatio;             // type:BOOL.0
	bool                             _0xEE90A4A7;                     // type:BOOL.0
};

struct CInteractionActionForceDefuse : _0x22B199F9
{
};

struct CInteractionActionForceOutPassengerPed : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionActionForceTriggerToFinish : _0x22B199F9
{
	string                           ReactionTrigger;                 // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionActionForgiveCriminal : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 CriminalPed;                     // type:ENUM.32BIT
};

struct CInteractionActionGesture : _0x22B199F9
{
	string                           Gesture;                         // type:STRING.ATNONFINALHASHSTRING
	array<string>                    Gestures;                        // type:ARRAY.ATARRAY
};

struct CInteractionActionGuardReportTargetWhereabouts : _0x22B199F9
{
};

struct CInteractionActionGuardRequestHelp : _0x22B199F9
{
};

struct CInteractionActionGuardResetCachedDistance : _0x22B199F9
{
};

struct CInteractionActionGuardResetCachedDistanceForAllTargets : _0x22B199F9
{
};

struct CInteractionActionGuardSetConfrontingPed : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionActionHolsterWeapon : _0x1619E486
{
	bool                             ShouldUsedRelaxedHolster;        // type:BOOL.0
};

struct CInteractionActionIdentifyCriminal : _0x22B199F9
{
};

struct CInteractionActionIdentifySuspect : _0x22B199F9
{
};

struct CInteractionActionIgnoreAgitator : _0x22B199F9
{
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x147F9BD1;                     // type:ENUM.32BIT
	uint                             TimeToIgnoreMS;                  // type:UINT.0
	bool                             _0x77AF7C46;                     // type:BOOL.0
	bool                             EnableGroupIgnore;               // type:BOOL.0
};

struct CInteractionActionIncrementCampDisputeCounter : _0x22B199F9
{
	int                              InterveneThreshold;              // type:INT.0
	int                              WarningThreshold;                // type:INT.0
	int                              KnockOutThreshold;               // type:INT.0
};

struct CInteractionActionIncrementDisputeCounter : _0x22B199F9
{
	uint                             _0xFBACD580;                     // type:UINT.0
};

struct CInteractionActionInterrogationConfront : _0x22B199F9
{
};

struct CInteractionActionInterrogationMoveAlong : _0x22B199F9
{
};

struct CInteractionActionInterrogationThreaten : _0x22B199F9
{
};

struct CInteractionActionIntimidated : _0x1619E486
{
	bool                             CreateParentFleeTask;            // type:BOOL.0
	enum _0x95842B4B                 _0xD54458C3;                     // type:ENUM.32BIT
	bool                             _0x6104350F;                     // type:BOOL.0
	bool                             _0xCE027A48;                     // type:BOOL.0
	bool                             _0x7BDE8631;                     // type:BOOL.0
	bool                             _0x384CA6D3;                     // type:BOOL.0
	bool                             _0x96A928C7;                     // type:BOOL.0
	bool                             _0x1ED9FCE8;                     // type:BOOL.0
	bool                             IsVehiclePassengerRobberyIntimidation; // type:BOOL.0
	bool                             DisableFleeMakeDecisionIntimidate; // type:BOOL.0
	bool                             _0xE03BBB83;                     // type:BOOL.0
	bool                             UseDefaultRobberyFlags;          // type:BOOL.0
	bool                             UseDefaultWitnessFlags;          // type:BOOL.0
};

struct CInteractionActionLeaveGroup : _0x22B199F9
{
};

struct CInteractionActionMotivation : _0x22B199F9
{
	enum _0x705A8B9B                 Motivation;                      // type:ENUM.32BIT
	float                            Set;                             // type:FLOAT.0
	float                            Add;                             // type:FLOAT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct CInteractionActionMulti : _0x22B199F9
{
	array<struct _0x22B199F9>        Actions;                         // type:ARRAY.ATARRAY
};

struct CInteractionActionNotifyAudioEscalation : _0x22B199F9
{
	uint                             Level;                           // type:UINT.0
};

struct CInteractionActionPoint : _0x1619E486
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CInteractionActionPointWeapon : _0x1619E486
{
	enum _0x08DBCEDC                 StyleMod;                        // type:ENUM.32BIT
	uint                             LingerModTimeMS;                 // type:UINT.0
	bool                             BlockCocking;                    // type:BOOL.0
	bool                             RegisterAsThreat;                // type:BOOL.0
};

struct CInteractionActionPoliceConfront : _0x1619E486
{
	bool                             AllowEvasiveAnim;                // type:BOOL.0
};

struct CInteractionActionReact : _0x1619E486
{
	string                           EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	enum _0xC2EFF62F                 RequestPriority;                 // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	float                            fReactionTimeMin;                // type:FLOAT.0
	float                            fReactionTimeMax;                // type:FLOAT.0
	float                            _0x246083EC;                     // type:FLOAT.0
	float                            fMountedReactHeadingThresholdMin; // type:FLOAT.0
	float                            fMountedReactHeadingThresholdMax; // type:FLOAT.0
	float                            fReactHeadingThreshold;          // type:FLOAT.0
	float                            fReactHeadingLowerBound;         // type:FLOAT.0
	float                            fReactHeadingUpperBound;         // type:FLOAT.0
	bool                             bReactForever;                   // type:BOOL.0
	bool                             bUseHeadingOffsetWhenFacingTarget; // type:BOOL.0
};

struct CInteractionActionRegisterHostileToLaw : _0x22B199F9
{
	bool                             Damaged;                         // type:BOOL.0
};

struct CInteractionActionRegisterInteractionPrompt : _0x22B199F9
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	bool                             LawPrompt;                       // type:BOOL.0
	bool                             _0x0AC5FE62;                     // type:BOOL.0
	bool                             IgnoreLosIfBlocked;              // type:BOOL.0
	bool                             _0x743AC4D8;                     // type:BOOL.0
	bool                             _0xBE0C7365;                     // type:BOOL.0
	bool                             AllowIloInCombat;                // type:BOOL.0
	bool                             IgnoreHeadingAndPitch;           // type:BOOL.0
	string                           PromptLabel;                     // type:STRING.ATNONFINALHASHSTRING
	string                           IFMVolumePreset;                 // type:STRING.ATNONFINALHASHSTRING
	float                            PromptDistance;                  // type:FLOAT.0
	float                            LockonDistance;                  // type:FLOAT.0
};

struct CInteractionActionRejectedDefuse : _0x22B199F9
{
};

struct CInteractionActionReleaseWitnessLeadership : _0x22B199F9
{
};

struct CInteractionActionRememberDisputeEscalated : _0x22B199F9
{
};

struct CInteractionActionRememberSpeech : _0x22B199F9
{
	struct _0x77CA3522               Audio;                           // type:STRUCT.STRUCTURE
};

struct CInteractionActionRemoveActiveInteractionActionEvents : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionActionRemoveOwner : _0x22B199F9
{
	enum _0x563FBCEA                 Owner;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Property;                        // type:ENUM.32BIT
};

struct CInteractionActionReportCrime : _0x22B199F9
{
	enum _0xB26911B2                 Action;                          // type:ENUM.32BIT
};

struct CInteractionActionRequestActionMode : _0x22B199F9
{
	enum _0x86A8EC4E                 ActionMode;                      // type:ENUM.32BIT
};

struct CInteractionActionRequestCombatStyleMod : _0x22B199F9
{
	enum _0x08DBCEDC                 StyleMod;                        // type:ENUM.32BIT
	uint                             ModTimeMS;                       // type:UINT.0
};

struct CInteractionActionRequestEmotionalLoco : _0x22B199F9
{
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	string                           EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	enum _0xC2EFF62F                 RequestPriority;                 // type:ENUM.32BIT
	int                              TimeToLiveMilliSeconds;          // type:INT.0
	bool                             bSetReactionWindow;              // type:BOOL.0
};

struct CInteractionActionRequestIntimidatedBackAway : _0x22B199F9
{
	float                            Distance;                        // type:FLOAT.0
};

struct CInteractionActionRequestedHelp : _0x22B199F9
{
};

struct CInteractionActionReset : _0x22B199F9
{
	bool                             ClearPendingAction;              // type:BOOL.0
};

struct CInteractionActionResetBountyResponseCooldown : _0x22B199F9
{
	string                           Cooldown;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionActionResetInteractiveConversationManager : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct CInteractionActionSay : _0x22B199F9
{
	struct _0xC6E5CDA3               Say;                             // type:STRUCT.STRUCTURE
};

struct CInteractionActionSendInteraction : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
	enum InteractionType             Type;                            // type:ENUM.32BIT
	string                           SpeechType;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             SetIndirectObjectEntity;         // type:BOOL.0
};

struct CInteractionActionSendInteractionToNearbyWitnessPeds : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
	enum InteractionType             Type;                            // type:ENUM.32BIT
	string                           SpeechType;                      // type:STRING.ATNONFINALHASHSTRING
	float                            Radius;                          // type:FLOAT.0
	uint                             MaxPedsToCheck;                  // type:UINT.0
	bool                             SetIndirectObjectEntity;         // type:BOOL.0
};

struct CInteractionActionSendInteractionToPedsInVehicle : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
	enum InteractionType             Type;                            // type:ENUM.32BIT
	string                           SpeechType;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x99135A99;                     // type:BOOL.0
	bool                             CheckPedIsInAppropriateSeat;     // type:BOOL.0
};

struct CInteractionActionSendRobberyAttemptedStatEvent : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionActionSetAgitatorOnMyMind : _0x22B199F9
{
	enum _0x4D40591B                 ReasonToSetAgitator;             // type:ENUM.32BIT
};

struct CInteractionActionSetAllowFleeDialogue : _0x22B199F9
{
	bool                             AllowFleeDialogue;               // type:BOOL.0
};

struct CInteractionActionSetArrestEscalated : _0x22B199F9
{
};

struct CInteractionActionSetArrestLastChance : _0x22B199F9
{
};

struct CInteractionActionSetArrestingPed : _0x22B199F9
{
};

struct CInteractionActionSetAttemptedDefuse : _0x22B199F9
{
};

struct CInteractionActionSetCampDisputeResponseLevel : _0x22B199F9
{
	enum _0x95F58E20                 ResponseLevel;                   // type:ENUM.32BIT
};

struct CInteractionActionSetDismissalTime : _0x22B199F9
{
};

struct CInteractionActionSetEscalateIncidentOnNextCrime : _0x22B199F9
{
};

struct CInteractionActionSetFleeDoesDelayFiringForMountedPeds : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             DontDelayFiringForMountedPeds;   // type:BOOL.0
};

struct CInteractionActionSetFleeDoesntStopForTargetWhenInVehicle : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0x21F517BB;                     // type:BOOL.0
};

struct CInteractionActionSetGreetedByPlayer : _0x22B199F9
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CInteractionActionSetGuardFinalWarning : _0x22B199F9
{
};

struct CInteractionActionSetGuardHighAlert : _0x22B199F9
{
	bool                             _0xB6629F3A;                     // type:BOOL.0
};

struct CInteractionActionSetGuardWarning : _0x22B199F9
{
};

struct CInteractionActionSetIndirectObjectEntityToCurrentLeader : _0x22B199F9
{
};

struct CInteractionActionSetInteractionActionFlags : _0x22B199F9
{
	bitset<enum _0x78CF518E>         InteractionActionFlags;          // type:BITSET.32BIT
	bool                             Value;                           // type:BOOL.0
};

struct CInteractionActionSetInteractionShouldBlockProcessingClosestDistance : _0x22B199F9
{
	bool                             BlockProcessing;                 // type:BOOL.0
	bool                             ResetExistingClosestDistanceValue; // type:BOOL.0
};

struct CInteractionActionSetLeader : _0x22B199F9
{
};

struct CInteractionActionSetLeaderIndirectObjectEntity : _0x22B199F9
{
};

struct CInteractionActionSetOverriddenFleeStyle : _0x22B199F9
{
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
	bool                             _0xC5C89F36;                     // type:BOOL.0
};

struct CInteractionActionSetPedConfigFlags : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum ePedConfigFlags>     ConfigFlags;                     // type:BITSET.64BIT
	bool                             Value;                           // type:BOOL.0
};

struct CInteractionActionSetPedHasGivenRobberyItem : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x147F9BD1;                     // type:ENUM.32BIT
};

struct CInteractionActionSetPedScriptConfigFlags : _0x22B199F9
{
	enum _0x563FBCEA                       Ped;                             // type:ENUM.32BIT
	bitset<enum ePedScriptConfigFlags>     ConfigFlags;                     // type:BITSET.32BIT
	bool                                   Value;                           // type:BOOL.0
};

struct CInteractionActionSetPlayerAmbientTaxi : _0x22B199F9
{
	enum _0x563FBCEA                 DriverPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	bool                             ClearAmbientTaxi;                // type:BOOL.0
};

struct CInteractionActionSetRobberyIntimidationFlags : _0x22B199F9
{
};

struct CInteractionActionSetRobberyMemory : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 SourcePed;                       // type:ENUM.32BIT
	enum _0x8C92AFD0                 MemoryType;                      // type:ENUM.32BIT
	bool                             ForgetMemory;                    // type:BOOL.0
	bool                             SetMemoryOnGroupLeaderToo;       // type:BOOL.0
};

struct CInteractionActionSetRobberyOfferItemThreatenType : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xE014C36B                 ThreatenType;                    // type:ENUM.32BIT
};

struct CInteractionActionSetSimpleMemory : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x8B2BD05B                 MemoryType;                      // type:ENUM.32BIT
};

struct CInteractionActionSetSimplePerPlayerMemory : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 SourcePed;                       // type:ENUM.32BIT
	enum _0x62A8CB86                 MemoryType;                      // type:ENUM.32BIT
};

struct CInteractionActionSetTemporaryMood : _0x22B199F9
{
	enum _0xFD372C5C                 Mood;                            // type:ENUM.32BIT
	int                              Minutes;                         // type:INT.0
};

struct CInteractionActionSetWaitForAgitatorToMount : _0x22B199F9
{
	bool                             _0x3C41D98E;                     // type:BOOL.0
};

struct CInteractionActionSetWaitForAgitatorToPickUpHat : _0x22B199F9
{
	bool                             _0x3C41D98E;                     // type:BOOL.0
};

struct CInteractionActionSetWitnessLeaderIndirectObjectEntity : _0x22B199F9
{
};

struct CInteractionActionSkipGreetChainWithPlayer : _0x22B199F9
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	uint                             SkipForTimeMS;                   // type:UINT.0
};

struct CInteractionActionSpectate : _0x1619E486
{
	float                            ApproachDistanceMin;             // type:FLOAT.0
	float                            ApproachDistanceMax;             // type:FLOAT.0
	float                            TargetChangeDistanceForRescan;   // type:FLOAT.0
};

struct CInteractionActionStopVehicle : _0x1619E486
{
};

struct CInteractionActionStopWitness : _0x22B199F9
{
};

struct CInteractionActionTaskSequence : _0x22B199F9
{
	array<struct _0x1619E486>        Tasks;                           // type:ARRAY.ATARRAY
};

struct CInteractionActionThreatResponseAnimal : _0x1619E486
{
	bool                             _0x78C7ED80;                     // type:BOOL.0
	bool                             FleeForever;                     // type:BOOL.0
};

struct CInteractionActionTriggerFleeDecisionMaker : _0x22B199F9
{
	uint                             _0xCD78EC70;                     // type:UINT.0
	bool                             _0x1ADA592D;                     // type:BOOL.0
	bool                             _0x35344E6D;                     // type:BOOL.0
};

struct CInteractionActionTriggerOnFootIntimidationEscalation : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             BlockEscalationToOnKnees;        // type:BOOL.0
	bool                             BlockEscalationBackAway;         // type:BOOL.0
};

struct CInteractionActionUnBlockGreets : _0x22B199F9
{
	enum _0x563FBCEA                 BlockerPed;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CInteractionActionUnregisterInteractionPrompt : _0x22B199F9
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	bool                             ResetIloInCombat;                // type:BOOL.0
};

struct CInteractionActionVehiclePullToRoadSide : _0x22B199F9
{
	bool                             PullToSide;                      // type:BOOL.0
};

struct CInteractionActionWarnSuspectToLeave : _0x22B199F9
{
};

struct CInteractionActionWitnessIdentifyCriminal : _0x22B199F9
{
};

struct CInteractionAudioRuleSet
{
	map<enum InteractionType, struct _0xC209962D>     RuleListMap;                     // type:MAP.ATBINARYMAP
};

struct CInteractionConditionAgitatorAudioStarted : CAICondition
{
	float                            Time;                            // type:FLOAT.0
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct CInteractionConditionAgitatorInteractingWithGroup : CAICondition
{
};

struct CInteractionConditionAgitatorInteractingWithLaw : CAICondition
{
};

struct CInteractionConditionAreInteractionActionFlagsSet : CAICondition
{
	bitset<enum _0x78CF518E>         InteractionActionFlags;          // type:BITSET.32BIT
};

struct CInteractionConditionAreIntimidatedBehaviourFlagsSet : CAICondition
{
	bitset<enum _0x9195CDD4>         BehaviourFlags;                  // type:BITSET.8BIT
};

struct CInteractionConditionAreIntimidatedRunningFlagsSet : CAICondition
{
	bitset<enum _0x214481D3>         RunningFlags;                    // type:BITSET.32BIT
};

struct CInteractionConditionAreRobberyItemModelsLoaded : CAICondition
{
};

struct CInteractionConditionAudioTimeout : CAICondition
{
	float                            Time;                            // type:FLOAT.0
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct CInteractionConditionCanOfferRobberyItem : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x147F9BD1;                     // type:ENUM.32BIT
};

struct CInteractionConditionConfrontApproachFailed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionConversationTopic : CAICondition
{
	string                           Topic;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionConversationVariation : CAICondition
{
	int                              Variation;                       // type:INT.0
};

struct CInteractionConditionDistanceToIndirectObjectEntity : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             IgnoreXY;                        // type:BOOL.0
	bool                             FlattenZ;                        // type:BOOL.0
};

struct CInteractionConditionDistanceToLeader : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             IgnoreXY;                        // type:BOOL.0
	bool                             FlattenZ;                        // type:BOOL.0
};

struct CInteractionConditionDoesLeaderHaveIndirectObject : CAICondition
{
	string                           Personality;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionGroupMemberCount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
	uint                             MinMembers;                      // type:UINT.0
	uint                             MaxMembers;                      // type:UINT.0
};

struct CInteractionConditionGunslingerEndPeacefully : CAICondition
{
};

struct CInteractionConditionGunslingerTriggerCombat : CAICondition
{
};

struct CInteractionConditionHasBeenHostileFor : CAICondition
{
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct CInteractionConditionHasDroppedOffPassenger : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionHasFailedToOfferItem : CAICondition
{
	int                              NumberOfAttempts;                // type:INT.0
};

struct CInteractionConditionHasIndirectObjectEntity : CAICondition
{
};

struct CInteractionConditionHasLeader : CAICondition
{
};

struct CInteractionConditionHasLeaderBeenFightingFor : CAICondition
{
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct CInteractionConditionHasNumberOfPassengersInVehicle : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              NumPedsMin;                      // type:INT.0
	int                              _0x46C35131;                     // type:INT.0
	bool                             IncludePlayers;                  // type:BOOL.0
};

struct CInteractionConditionHasOfferedSomethingWhileIntimidated : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionHasPendingAction : CAICondition
{
	string                           Action;                          // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionHasReceivedDefuseAttempt : CAICondition
{
	enum _0x563FBCEA                 PedDefused;                      // type:ENUM.32BIT
};

struct CInteractionConditionHasRejectedDefuse : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionHasRequestedHelp : CAICondition
{
};

struct CInteractionConditionHasSpareSeatInVehicleOrMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             ExcludeExteriorSeats;            // type:BOOL.0
	bool                             ExcludeFrontExteriorSeats;       // type:BOOL.0
	bool                             _0x74E01AEA;                     // type:BOOL.0
	bool                             _0x9521670B;                     // type:BOOL.0
};

struct CInteractionConditionHasStartedFacingAgitator : CAICondition
{
};

struct CInteractionConditionHasThingsToOffer : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionInsultPromptWillMelee : CAICondition
{
};

struct CInteractionConditionIntimidatorHolsteredWeapon : CAICondition
{
};

struct CInteractionConditionIsAgitatorEnteringVehicle : CAICondition
{
};

struct CInteractionConditionIsAgitatorFatallyInjured : CAICondition
{
};

struct CInteractionConditionIsAgitatorInOrEnteringMyTransport : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
	bool                             OnlyEntry;                       // type:BOOL.0
};

struct CInteractionConditionIsAgitatorLeadingOurMount : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct CInteractionConditionIsAgitatorMovingAway : CAICondition
{
	float                            Dot;                             // type:FLOAT.0
};

struct CInteractionConditionIsAgitatorNearerDriverThanShotgunner : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x147F9BD1;                     // type:ENUM.32BIT
};

struct CInteractionConditionIsAgitatorTalking : CAICondition
{
};

struct CInteractionConditionIsAgitatorWithinDistanceToLastCachedPosition : CAICondition
{
	float                            UpperBound;                      // type:FLOAT.0
	float                            LowerBound;                      // type:FLOAT.0
};

struct CInteractionConditionIsAgitatorWithinRangeOfOwner : CAICondition
{
	float                            Distance;                        // type:FLOAT.0
};

struct CInteractionConditionIsApproaching : CAICondition
{
};

struct CInteractionConditionIsArrestEscalated : CAICondition
{
};

struct CInteractionConditionIsArrestLastChance : CAICondition
{
};

struct CInteractionConditionIsBreakingOutOfGrapple : CAICondition
{
	enum _0x563FBCEA                 _0xB3E67849;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x28EE3756;                     // type:ENUM.32BIT
	bool                             _0x4C13D752;                     // type:BOOL.0
};

struct CInteractionConditionIsDoingGrappleStateTransition : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsFatallyInjured : CAICondition
{
};

struct CInteractionConditionIsFirstInteractionApplied : CAICondition
{
	enum InteractionType             InteractionType;                 // type:ENUM.32BIT
	string                           InteractionSpeechType;           // type:STRING.ATNONFINALHASHSTRING
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct CInteractionConditionIsFriendlyTalking : CAICondition
{
};

struct CInteractionConditionIsIgnorable : CAICondition
{
};

struct CInteractionConditionIsInAmbientTaxi : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionIsInFrontVehicleSeat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsInState : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           State;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionIsInteractionBlockingProcessingClosestDistance : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsInteractionType : CAICondition
{
	enum InteractionType             InteractionType;                 // type:ENUM.32BIT
	string                           InteractionSpeechType;           // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionIsLastInteractionApplied : CAICondition
{
	enum InteractionType             InteractionType;                 // type:ENUM.32BIT
	string                           InteractionSpeechType;           // type:STRING.ATNONFINALHASHSTRING
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct CInteractionConditionIsLastInteractionAppliedAMinorOffense : CAICondition
{
};

struct CInteractionConditionIsLastSpeechContextUsed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           SpeechContext;                   // type:STRING.ATNONFINALHASHSTRING
	array<string>                    SpeechContextList;               // type:ARRAY.ATARRAY
};

struct CInteractionConditionIsLeader : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsLeaderAgitated : CAICondition
{
};

struct CInteractionConditionIsLeaderDead : CAICondition
{
};

struct CInteractionConditionIsLeaderInState : CAICondition
{
	string                           State;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionIsLeaderOnFoot : CAICondition
{
};

struct CInteractionConditionIsLeaderRunningTask : CAICondition
{
	string                           TaskHash;                        // type:STRING.ATNONFINALHASHSTRING
	array<string>                    TaskList;                        // type:ARRAY.ATARRAY
	bool                             MustBeActive;                    // type:BOOL.0
};

struct CInteractionConditionIsLeaderTalking : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsLeaderTalkingPastDialoguePhase : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Phase;                           // type:FLOAT.0
};

struct CInteractionConditionIsLeaderUsingFleeStyle : CAICondition
{
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
};

struct CInteractionConditionIsLeaderUsingResponse : CAICondition
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionIsOfferingRobberyItem : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             TrueOnlyIfPedIsHoldingItem;      // type:BOOL.0
	bool                             CheckVehiclePassengers;          // type:BOOL.0
	bool                             ReturnTrueForAnyRobberyGrappleAction; // type:BOOL.0
};

struct CInteractionConditionIsOutsideClosestDistance : CAICondition
{
	float                            Distance;                        // type:FLOAT.0
};

struct CInteractionConditionIsOutsideDistance : CAICondition
{
	float                            Distance;                        // type:FLOAT.0
};

struct CInteractionConditionIsPedArmed : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsPedInShuffleSeat : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionIsPedInValidFleeStyleForJackConfrontInteraction : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsPedInValidFleeStyleForRobberyOrCalloutInteraction : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsPedInValidFleeStyleForShoutAfter : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsPedVehicleStagecoach : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsPedVehicleSupplyWagon : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsPlayerInsideTargetsVehicleFromRideRequest : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionIsPreviousInteractionApplied : CAICondition
{
	enum InteractionType             InteractionType;                 // type:ENUM.32BIT
	string                           InteractionSpeechType;           // type:STRING.ATNONFINALHASHSTRING
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct CInteractionConditionIsProvoked : CAICondition
{
	bool                             IgnoreHostility;                 // type:BOOL.0
};

struct CInteractionConditionIsReactingToTarget : CAICondition
{
	enum _0x563FBCEA                 _0x1EA4838E;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionIsRobbing : CAICondition
{
	enum _0x563FBCEA                 RobbingPed;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	bool                             IgnorePromptCheck;               // type:BOOL.0
	bool                             TrueIfInRobberyInteraction;      // type:BOOL.0
};

struct CInteractionConditionIsRunningDropOffPassengerTask : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionIsShowingActiveCalloutPromptsOutOfCalloutInteraction : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	bool                             CheckActivelyStopping;           // type:BOOL.0
};

struct CInteractionConditionIsShowingActiveRobberyPromptsOutOfRobbery : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionIsTalking : CAICondition
{
};

struct CInteractionConditionIsTalkingPastDialoguePhase : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Phase;                           // type:FLOAT.0
};

struct CInteractionConditionIsUsingResponse : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Response;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CInteractionConditionIsWithinClosestDistance : CAICondition
{
	float                            Distance;                        // type:FLOAT.0
};

struct CInteractionConditionIsWithinDistanceToOurStartingPosition : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            UpperBound;                      // type:FLOAT.0
	float                            LowerBound;                      // type:FLOAT.0
};

struct CInteractionConditionIsWithinDistanceToScenarioPoint : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            UpperBound;                      // type:FLOAT.0
	float                            LowerBound;                      // type:FLOAT.0
	bool                             _0x02345A8D;                     // type:BOOL.0
};

struct CInteractionConditionIsWithinInitialDistance : CAICondition
{
	float                            Distance;                        // type:FLOAT.0
};

struct CInteractionConditionLastMeleeLockonTime : CAICondition
{
	uint                             TimeRangeMS;                     // type:UINT.0
	bool                             _0x95DDA0BC;                     // type:BOOL.0
};

struct CInteractionConditionLastWeaponAimedAt : CAICondition
{
	bitset<enum _0xC0B6A160>         WeaponFlags;                     // type:BITSET.32BIT
};

struct CInteractionConditionLastWeaponAimedAtTime : CAICondition
{
	uint                             TimeRangeMS;                     // type:UINT.0
	bool                             _0x95DDA0BC;                     // type:BOOL.0
};

struct CInteractionConditionPedAudioStarted : CAICondition
{
	float                            Time;                            // type:FLOAT.0
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct CInteractionConditionPedIsGrappled : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Grappler;                        // type:ENUM.32BIT
	bool                             TrueOnlyIfTackled;               // type:BOOL.0
	bool                             TrueOnlyIfTackledAtStart;        // type:BOOL.0
};

struct CInteractionConditionPersCharWillRejectRideRequest : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionPlayerHasConfrontingPed : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionReactionAchievedInitialDesiredHeading : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionRobPromptWillGrapple : CAICondition
{
};

struct CInteractionConditionRobberyShouldAcceptOrRejectOffer : CAICondition
{
	enum _0x563FBCEA                 RobbingPed;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 VictimPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionShouldAllowDefusePromptLabel : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionShouldForgiveCriminalDueToProfile : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionShouldIntimidatedVehicleDriverTriggerRobberyFightBack : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionShouldLeaveDisputeDueToEventPriorities : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionShouldOfferItemDueToProfile : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	bool                             _0x465D4C77;                     // type:BOOL.0
	int                              _0xF8D57109;                     // type:INT.0
};

struct CInteractionConditionShouldTriggerOfferItemDialogue : CAICondition
{
};

struct CInteractionConditionShouldTriggerRobberyAgainDialogue : CAICondition
{
};

struct CInteractionConditionTimeout : CAICondition
{
	float                            Time;                            // type:FLOAT.0
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
	bool                             IgnoreTimeWaiting;               // type:BOOL.0
};

struct CInteractionConditionTryingToShove : CAICondition
{
};

struct CInteractionConditionWasAgitatorDisguised : CAICondition
{
};

struct CInteractionConditionWasCalloutDismissedWhileBlockingTarget : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
};

struct CInteractionConditionWasDefuseForcedInPreviousResponse : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionWasLeaderHit : CAICondition
{
};

struct CInteractionConditionWasUsingTerritorialScenario : CAICondition
{
};

struct CInteractionConditionWillBeKnockedOutOnNextHit : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CInteractionConditionWillOfferMoney : CAICondition
{
};

struct CInteractionData
{
	array<struct _0xA9926BD0, 69>     InteractionDataArray;            // type:ARRAY.ATFIXEDARRAY
};

struct CInteractionPersonalities
{
	map<string, struct _0x516296F4>     Personalities;                   // type:MAP.ATBINARYMAP
};

struct CInteractionRequestGrappleRobberyThreatenThrowAction : _0x22B199F9
{
};

struct CInteractionRequestGrappleThreatenAction : _0x22B199F9
{
};

struct CInteractionRequestRobberyGrappleTransition : _0x22B199F9
{
};

struct CInteractionResponses
{
	map<string, struct _0x7A8EE6B4>     Responses;                       // type:MAP.ATBINARYMAP
};

struct CInteractionScenarioExit : _0x22B199F9
{
	enum AmbientEventType            _0x4FA6BF06;                     // type:ENUM.32BIT
	enum EmotionalState              EmotionalState;                  // type:ENUM.32BIT
};

struct CInteractionScenarioNormalExit : _0x22B199F9
{
};

struct CInteractionScenarioReactionAnimation : _0x22B199F9
{
	enum _0x563FBCEA                 TargetPed;                       // type:ENUM.32BIT
	enum AmbientEventType            EventType;                       // type:ENUM.32BIT
	float                            Lifetime;                        // type:FLOAT.0
	float                            AnimationTime;                   // type:FLOAT.0
	float                            MinReactionRateOverride;         // type:FLOAT.0
	float                            MaxReactionRateOverride;         // type:FLOAT.0
	bool                             UpdateReactionTargetIfAlreadyReacting; // type:BOOL.0
	enum ActiveLookReactMode         ActiveLookReactMode;             // type:ENUM.32BIT
};

struct CInteractionSetPedIsWaitingForPlayerToEnterVehicle : _0x22B199F9
{
	bool                             IsWaiting;                       // type:BOOL.0
};

struct CInteractionSetReadyToBeIntimidated : _0x22B199F9
{
	bool                             Ready;                           // type:BOOL.0
};

struct CInteractionSetReadyToOfferItemDueToRobbery : _0x22B199F9
{
};

struct CInteractionSetShouldCheckForEscapeOpportunityFromIntimidation : _0x22B199F9
{
	bool                             ShouldCheck;                     // type:BOOL.0
};

struct CInteractionSetShouldDisableMeleeKnockoutsFromIntimidation : _0x22B199F9
{
	bool                             Disable;                         // type:BOOL.0
};

struct CInteractionSetShouldEscapeNowFromGrapple : _0x22B199F9
{
	bool                             MustBeActive;                    // type:BOOL.0
	bool                             KillParentFleeTaskOnGrappleExit; // type:BOOL.0
	bool                             QuitTaskOnInterruptTag;          // type:BOOL.0
};

struct CInteractionSetShouldEscapeNowFromIntimidation : _0x22B199F9
{
	bool                             MustBeActive;                    // type:BOOL.0
	bool                             ForceEscape;                     // type:BOOL.0
};

struct CInteractionSetShouldEscapeVehicleStaggeredFromIntimidation : _0x22B199F9
{
};

struct CInteractionSetShouldForceKnockoutOnNextHit : _0x22B199F9
{
	bool                             ShouldKnockOut;                  // type:BOOL.0
};

struct CInteractionSetShouldQuitGrappleOnBreakoutInterruptTag : _0x22B199F9
{
	bool                             MustBeActive;                    // type:BOOL.0
	bool                             QuitTaskOnInterruptTag;          // type:BOOL.0
};

struct CInteractionSetWaterSurvivalTime : _0x22B199F9
{
	float                            Time;                            // type:FLOAT.0
};

struct CInteractionTriggerLookAtAgitatorsWeapon : _0x22B199F9
{
	int                              DurationMinMS;                   // type:INT.0
	int                              DurationMaxMS;                   // type:INT.0
};

struct CInteractionTriggers
{
	map<string, struct _0x11441772>     Reactions;                       // type:MAP.ATBINARYMAP
	map<string, struct _0x665E3290>     Sets;                            // type:MAP.ATBINARYMAP
};

struct CInteriorBoundsFiles
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    Bounds;                          // type:ARRAY.ATARRAY
};

struct CInterrelationTest
{
	struct _0xC03E255D               RelativeRange;                   // type:STRUCT.STRUCTURE
	enum _0x1D4C6710                 TargetType;                      // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xEFEF55BB>         Attrs;                           // type:BITSET.32BIT
};

struct CInterrelationTestContainer
{
	map<string, struct CInterrelationTest>     Map;                             // type:MAP.ATBINARYMAP
};

struct CItemInfo
{
	array<string>                    Properties;                      // type:ARRAY.ATARRAY
	string                           Name;                            // type:STRING.ATFINALHASHSTRING
	string                           Model;                           // type:STRING.ATNONFINALHASHSTRING
	string                           SwapClipSetHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipSetHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipHash;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CItemInfoManager
{
	array<struct CItemInfo>          Infos;                           // type:ARRAY.ATARRAY
};

struct CItemInfoSoundsInterface
{
};

struct CItemInfoStatModifierInterface
{
};

struct CItemInfoUIDisplayInterface
{
};

struct CItemInteractionInfoManager
{
	map<string, struct CItemInteractionState>     InteractionStates;               // type:MAP.ATBINARYMAP
	map<string, struct _0xAFF0FC86>               InteractionConfigs;              // type:MAP.ATBINARYMAP
};

struct CItemInteractionState
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ScriptName;                      // type:STRING.ATFINALHASHSTRING
	struct CAICondition              FallbackCondition;               // type:STRUCT.POINTER
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           FacialClipSetId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleClipSetId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFD1DBC16;                     // type:STRING.ATNONFINALHASHSTRING
	string                           MpMaleClipSetId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           BaseClip;                        // type:STRING.ATNONFINALHASHSTRING
	string                           SweepClip;                       // type:STRING.ATNONFINALHASHSTRING
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	string                           CameraDataDictName;              // type:STRING.ATNONFINALHASHSTRING
	string                           CameraOverrideSettingsName;      // type:STRING.ATNONFINALHASHSTRING
	string                           CameraOverrideSettingsNameFirstPerson; // type:STRING.ATNONFINALHASHSTRING
	string                           CameraOverrideSettingsNameCrouched; // type:STRING.ATNONFINALHASHSTRING
	string                           CameraOverrideSettingsNameFirstPersonCrouched; // type:STRING.ATNONFINALHASHSTRING
	bool                             ShouldOverrideCameraFirstPersonPitchLimits; // type:BOOL.0
	vec2                             OverriddenCameraFirstPersonPitchLimits; // type:VECTOR2.0
	string                           InputContext;                    // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x216608CD>         Flags;                           // type:BITSET.32BIT
	enum _0x470242D4                 InteractionType;                 // type:ENUM.32BIT
	string                           BodyBlendTemplate;               // type:STRING.ATNONFINALHASHSTRING
	string                           BodyDampingTemplate;             // type:STRING.ATNONFINALHASHSTRING
	string                           TaskFilter;                      // type:STRING.ATNONFINALHASHSTRING
	string                           BodyAnimConstraintInfoStateSet;  // type:STRING.ATNONFINALHASHSTRING
	struct _0xB385BC70               AbortTransition;                 // type:STRUCT.STRUCTURE
	struct _0xB385BC70               ExitTransition;                  // type:STRUCT.STRUCTURE
	enum _0xBAB4018D                 ExitResult;                      // type:ENUM.32BIT
	string                           PromptGroupLabel;                // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x8693F24D>        Prompts;                         // type:ARRAY.ATARRAY
	array<struct _0xC062479E>        PropData;                        // type:ARRAY.ATARRAY
	float                            CapsuleRadius;                   // type:FLOAT.0
	float                            CapsuleOffset;                   // type:FLOAT.0
	float                            PlaybackRate;                    // type:FLOAT.0
	vec3                             CHTargetOffset;                  // type:VECTOR3.0
	float                            WaterHeightThresholdStanding;    // type:FLOAT.0
	float                            _0x0FB87DB1;                     // type:FLOAT.0
};

struct CItypDependencies
{
	string                           itypName;                        // type:STRING.ATNONFINALHASHSTRING
	bitset<enum manifestFlags>       manifestFlags;                   // type:BITSET.32BIT
	array<string>                    itypDepArray;                    // type:ARRAY.ATARRAY
};

struct CJunctionTemplate
{
	uint                              iFlags;                          // type:UINT.0
	int                               iNumJunctionNodes;               // type:INT.0
	int                               iNumEntrances;                   // type:INT.0
	int                               iNumPhases;                      // type:INT.0
	int                               iNumTrafficLightLocations;       // type:INT.0
	float                             fSearchDistance;                 // type:FLOAT.0
	float                             fPhaseOffset;                    // type:FLOAT.0
	vec3                              vJunctionMin;                    // type:VECTOR3.0
	vec3                              vJunctionMax;                    // type:VECTOR3.0
	array<vec3, 8>                    vJunctionNodePositions;          // type:ARRAY.ATRANGEARRAY
	array<struct _0x3F0D0F0A, 16>     Entrances;                       // type:ARRAY.ATRANGEARRAY
	array<struct _0x02441DD4, 16>     PhaseTimings;                    // type:ARRAY.ATRANGEARRAY
	array<struct _0x87E2B4DF, 8>      TrafficLightLocations;           // type:ARRAY.ATRANGEARRAY
	array<struct _0x44891E97>         _0xDDDC1179;                     // type:ARRAY.ATARRAY
};

struct CJunctionTemplateArray
{
	array<struct CJunctionTemplate, 150>         Entries;                         // type:ARRAY.ATFIXEDARRAY
	array<struct CAutoJunctionAdjustment, 8>     AutoJunctionAdjustments;         // type:ARRAY.ATFIXEDARRAY
};

struct CKitInfo : CItemInfo
{
	string                           PropId;                          // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
	struct CInspectionInfo           InspectionInfo;                  // type:STRUCT.STRUCTURE
};

struct CLODLight
{
	array<struct FloatXYZ>           direction;                       // type:ARRAY.ATARRAY
	array<float>                     falloff;                         // type:ARRAY.ATARRAY
	array<float>                     falloffExponent;                 // type:ARRAY.ATARRAY
	array<uint>                      timeAndStateFlags;               // type:ARRAY.ATARRAY
	array<uint>                      hash;                            // type:ARRAY.ATARRAY
	array<uchar>                     coneInnerAngle;                  // type:ARRAY.ATARRAY
	array<uchar>                     coneOuterAngleOrCapExt;          // type:ARRAY.ATARRAY
	array<uchar>                     coronaIntensity;                 // type:ARRAY.ATARRAY
	array<uint>                      _0xFFD167D6;                     // type:ARRAY.ATARRAY
};

struct CLadderMetadata
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	float                            RungSpacing;                     // type:FLOAT.0
	float                            Width;                           // type:FLOAT.0
	bool                             CanSlide;                        // type:BOOL.0
	bool                             CanMountBehind;                  // type:BOOL.0
};

struct CLadderMetadataManager
{
	array<struct CLadderMetadata>     LadderData;                      // type:ARRAY.ATARRAY
};

struct CLassoDataManager
{
	map<string, bitset<enum _0xF19CDAEF>>     LassoHogtieFlagSets;             // type:MAP.ATBINARYMAP
	map<string, string>                       ModelToLassoHogtieFlagsKey;      // type:MAP.ATBINARYMAP
	string                                    DefaultPlayerLassoFlagsSet;      // type:STRING.ATNONFINALHASHSTRING
	string                                    DefaultHumanLassoFlagsSet;       // type:STRING.ATNONFINALHASHSTRING
	string                                    DefaultHorseLassoFlagsSet;       // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0x330E0893>           LassoAttachments;                // type:MAP.ATBINARYMAP
	map<string, struct _0xAA0F4CE8>           EntityLassoAttachInfo;           // type:MAP.ATBINARYMAP
	string                                    DefaultHumanEnityLassoAttachInfo; // type:STRING.ATNONFINALHASHSTRING
	string                                    DefaultHorseEnityLassoAttachInfo; // type:STRING.ATNONFINALHASHSTRING
	map<string, string>                       ModelNameToEntityLassoAttachInfo; // type:MAP.ATBINARYMAP
	array<enum eAnimBoneTag>                  LassoWeaponLoopBoneTags;         // type:ARRAY.ATARRAY
};

struct CLasso__Tunables : CTuning
{
	int                              RopeUpdateOrder;                 // type:INT.0
	int                              RopeSolverIterationsCoil;        // type:INT.0
	int                              RopeSolverIterationsConstraintAndLoop; // type:INT.0
	float                            StretchWeightCoil;               // type:FLOAT.0
	float                            StretchWeightConstraintAndLoopDefault; // type:FLOAT.0
	float                            StretchWeightConstraintActive;   // type:FLOAT.0
	float                            CompressionWeightLoopClose;      // type:FLOAT.0
	float                            CompressionWeightConstraintInflation; // type:FLOAT.0
	float                            CompressionWeightLoopInflation;  // type:FLOAT.0
	float                            CompressionWeightCoilLoopsInflation; // type:FLOAT.0
	float                            CompressionWeightCoilLoopsInflationHolstered; // type:FLOAT.0
	float                            CompressionWeightCoilInterloop;  // type:FLOAT.0
	float                            CompressionWeightCoilStability;  // type:FLOAT.0
	float                            CustomEdgeLengthCoilInterloop;   // type:FLOAT.0
	float                            CustomEdgeLengthCoilStability;   // type:FLOAT.0
	float                            MaxBendAngleHandle;              // type:FLOAT.0
	float                            MaxBendAngleConstraintAndLoop;   // type:FLOAT.0
	float                            MaxBendAngleCoilLoops;           // type:FLOAT.0
	float                            GravityFactorCoil;               // type:FLOAT.0
	float                            GravityFactorConstraintAndLoop;  // type:FLOAT.0
	float                            DampingFactorDefault;            // type:FLOAT.0
	float                            DampingFactorUnattached;         // type:FLOAT.0
	float                            CoilHandleRadius;                // type:FLOAT.0
	float                            StretchFactorC;                  // type:FLOAT.0
	float                            StretchFactorD;                  // type:FLOAT.0
	float                            StretchFactorD2;                 // type:FLOAT.0
	float                            MaxHandVelocity;                 // type:FLOAT.0
	float                            ConstraintLengthSpeed;           // type:FLOAT.0
	float                            LoopDriveToAnimFactorFPIdleMin;  // type:FLOAT.0
	float                            LoopDriveToAnimFactorFPIdleMax;  // type:FLOAT.0
	float                            LoopDriveToAnimFactorTPIdleMin;  // type:FLOAT.0
	float                            LoopDriveToAnimFactorTPIdleMax;  // type:FLOAT.0
	float                            LoopDriveToAnimFactorFPNonIdleMin; // type:FLOAT.0
	float                            LoopDriveToAnimFactorFPNonIdleMax; // type:FLOAT.0
	float                            LoopDriveToAnimFactorTPNonIdleMin; // type:FLOAT.0
	float                            LoopDriveToAnimFactorTPNonIdleMax; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleFPIdleMin; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleFPIdleMax; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleTPIdleMin; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleTPIdleMax; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleFPNonIdleMin; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleFPNonIdleMax; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleTPNonIdleMin; // type:FLOAT.0
	float                            LoopDriveToAnimFactorOnMountOrVehicleTPNonIdleMax; // type:FLOAT.0
	float                            AttachmentMinSpeed;              // type:FLOAT.0
	float                            AttachmentRadiusSpeed;           // type:FLOAT.0
	uint                             _0xFA83612E;                     // type:UINT.0
};

struct CLawBehaviors
{
	map<string, struct _0x9A694844>     LawBehaviors;                    // type:MAP.ATBINARYMAP
};

struct CLayoutNode
{
	string                           Name;                            // type:STRING.ATSTRING
	vec3                             Translation;                     // type:VECTOR3.0
	vec3                             Rotation;                        // type:VECTOR3.0
	bool                             Purchasable;                     // type:BOOL.0
	array<struct CGroup>             GroupList;                       // type:ARRAY.ATARRAY
};

struct CLegIkSolver__Tunables : CTuning
{
	struct _0x5CFF0ACD               _0xFC8EFF6A;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               PelvisInterp;                    // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               PelvisInterpMoving;              // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x0796AC84;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x8D8BCF9D;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x8673A6D6;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x2C0AC5B0;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               PelvisInterpOnDynamic;           // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x2E38AEE7;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0xCEA35806;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0xE80BA20A;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               FootInterp;                      // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               FootInterpIntersecting;          // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               FootInterpMoving;                // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               FootInterpIntersectingMoving;    // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               FootInterpOnDynamic;             // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x8A39CF14;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x16AD1074;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x74EBF4A8;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               StairsPelvisInterp;              // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               StairsPelvisInterpMoving;        // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               StairsPelvisInterpCoverAim;      // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0xCA6B39B4;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               _0x7EB5C066;                     // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               StairsFootInterp;                // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               StairsFootInterpIntersecting;    // type:STRUCT.STRUCTURE
	struct _0x5CFF0ACD               StairsFootInterpCoverAim;        // type:STRUCT.STRUCTURE
	float                            UpStairsPelvisMaxDeltaZMoving;   // type:FLOAT.0
	float                            UpStairsPelvisMaxNegativeDeltaZMoving; // type:FLOAT.0
	float                            DownStairsPelvisMaxDeltaZMoving; // type:FLOAT.0
	float                            DownStairsPelvisMaxNegativeDeltaZMoving; // type:FLOAT.0
	float                            StairsPelvisMaxNegativeDeltaZCoverAim; // type:FLOAT.0
	float                            VelMagStairsSpringMin;           // type:FLOAT.0
	float                            VelMagStairsSpringMax;           // type:FLOAT.0
	float                            StairsSpringMultiplierMin;       // type:FLOAT.0
	float                            StairsSpringMultiplierMax;       // type:FLOAT.0
	float                            _0xC29A3467;                     // type:FLOAT.0
	float                            _0x11D9ED17;                     // type:FLOAT.0
	float                            _0x1F082E46;                     // type:FLOAT.0
	float                            _0xC75C680A;                     // type:FLOAT.0
	float                            _0xA8846A38;                     // type:FLOAT.0
	float                            _0x80834A6D;                     // type:FLOAT.0
	float                            _0xB220E64E;                     // type:FLOAT.0
	float                            _0x42479A9F;                     // type:FLOAT.0
	float                            _0xF5FE75BB;                     // type:FLOAT.0
	int                              _0xB84A884D;                     // type:INT.0
	float                            _0x3E5A2FE1;                     // type:FLOAT.0
	float                            _0x34CDCDA3;                     // type:FLOAT.0
	float                            _0x23353193;                     // type:FLOAT.0
	float                            _0x16CB00CE;                     // type:FLOAT.0
	float                            _0x829095F6;                     // type:FLOAT.0
	float                            HeadHeight;                      // type:FLOAT.0
	float                            _0x865E425A;                     // type:FLOAT.0
	float                            _0x4CC967A4;                     // type:FLOAT.0
	float                            _0x5762AD6B;                     // type:FLOAT.0
};

struct CLevelData
{
	array<struct sLevelData>         aLevelsData;                     // type:ARRAY.ATARRAY
};

struct CLightAttrDef
{
	array<float, 3>                  posn;                            // type:ARRAY.MEMBER
	array<uchar, 3>                  colour;                          // type:ARRAY.MEMBER
	uchar                            flashiness;                      // type:UCHAR.0
	float                            intensity;                       // type:FLOAT.0
	uint                             flags;                           // type:UINT.0
	short                            boneTag;                         // type:SHORT.0
	uchar                            lightType;                       // type:UCHAR.0
	uchar                            groupId;                         // type:UCHAR.0
	uint                             timeFlags;                       // type:UINT.0
	float                            falloff;                         // type:FLOAT.0
	float                            falloffExponent;                 // type:FLOAT.0
	array<float, 4>                  cullingPlane;                    // type:ARRAY.MEMBER
	array<float, 4>                  _0xF48DB3A6;                     // type:ARRAY.MEMBER
	uchar                            shadowBlur;                      // type:UCHAR.0
	uchar                            shadowOpacity;                   // type:UCHAR.0
	short                            padding2;                        // type:SHORT.0
	float                            roughnessMod;                    // type:FLOAT.0
	float                            volIntensity;                    // type:FLOAT.0
	float                            volSizeScale;                    // type:FLOAT.0
	array<uchar, 3>                  volOuterColour;                  // type:ARRAY.MEMBER
	uchar                            lightHash;                       // type:UCHAR.0
	float                            volOuterIntensity;               // type:FLOAT.0
	bool                             injectsIntoVoxels;               // type:BOOL.0
	float                            coronaSize;                      // type:FLOAT.0
	float                            volOuterExponent;                // type:FLOAT.0
	uchar                            lightFadeDistance;               // type:UCHAR.0
	uchar                            shadowFadeDistance;              // type:UCHAR.0
	uchar                            specularFadeDistance;            // type:UCHAR.0
	uchar                            volumetricFadeDistance;          // type:UCHAR.0
	float                            shadowNearClip;                  // type:FLOAT.0
	float16                          _0x4855CDE5;                     // type:FLOAT16.0
	float16                          _0x0DA3D86E;                     // type:FLOAT16.0
	float                            coronaIntensity;                 // type:FLOAT.0
	float                            coronaZBias;                     // type:FLOAT.0
	string                           _0x93C52D2C;                     // type:STRING.ATNONFINALHASHSTRING
	vec3                             _0x52A89335;                     // type:VECTOR3.0
	float                            emitterSize;                     // type:FLOAT.0
	float                            emitterIntensityMult;            // type:FLOAT.0
	float                            emitterTintDesaturation;         // type:FLOAT.0
	array<float, 3>                  direction;                       // type:ARRAY.MEMBER
	array<float, 3>                  tangent;                         // type:ARRAY.MEMBER
	float                            coneInnerAngle;                  // type:FLOAT.0
	float                            coneOuterAngle;                  // type:FLOAT.0
	float                            squareAspectRatio;               // type:FLOAT.0
	array<float, 3>                  extents;                         // type:ARRAY.MEMBER
	uint                             projectedTextureKey;             // type:UINT.0
	float                            SSAOStrength;                    // type:FLOAT.0
	uint                             _0x684C08C5;                     // type:UINT.0
	float                            falloffBias;                     // type:FLOAT.0
	float                            _0x3F4C1BB0;                     // type:FLOAT.0
	float                            _0x9C23D4E9;                     // type:FLOAT.0
	float                            wrapAmount;                      // type:FLOAT.0
	float                            nonDirectionality;               // type:FLOAT.0
	float                            _0x5B239A55;                     // type:FLOAT.0
	float                            _0xA968034C;                     // type:FLOAT.0
	uchar                            _0x5148E7B3;                     // type:UCHAR.0
	bool                             _0x83161CBE;                     // type:BOOL.0
	float                            _0xC11AF51B;                     // type:FLOAT.0
	float                            _0x53A339C3;                     // type:FLOAT.0
	float                            _0x0F06E05A;                     // type:FLOAT.0
	float                            _0x724AE3FF;                     // type:FLOAT.0
	float                            _0x73D8B6CB;                     // type:FLOAT.0
	float                            _0x2EBE653A;                     // type:FLOAT.0
	float                            _0x208D587D;                     // type:FLOAT.0
	float                            _0x2E0E4E3C;                     // type:FLOAT.0
	float                            _0xB4B05CF2;                     // type:FLOAT.0
	float                            _0x0963B563;                     // type:FLOAT.0
	float                            dynamicShadowFadeDistance;       // type:FLOAT.0
	uint                             _0x66657D69;                     // type:UINT.0
	float                            blendTime;                       // type:FLOAT.0
	float                            offset;                          // type:FLOAT.0
	vec3                             _0x30ECA388;                     // type:VECTOR3.0
	uint                             _0xCED22A4C;                     // type:UINT.0
};

struct CLoadOutItem
{
};

struct CLoadOutRandom : CLoadOutItem
{
	array<struct _0x5C8405F9>        Items;                           // type:ARRAY.ATARRAY
};

struct CLoadOutSatchelItem : CLoadOutItem
{
	string                           SatchelItemName;                 // type:STRING.ATNONFINALHASHSTRING
	uint                             Amount;                          // type:UINT.0
};

struct CLoadOutWeapon : CLoadOutItem
{
	string                           WeaponName;                      // type:STRING.ATNONFINALHASHSTRING
	uint                             Ammo;                            // type:UINT.0
	bitset<enum _0xFE899B54>         Flags;                           // type:BITSET.32BIT
	float                            WeaponDegradationMin;            // type:FLOAT.0
	float                            WeaponDegradationMax;            // type:FLOAT.0
	float                            PermanentDegradationMin;         // type:FLOAT.0
	float                            PermanentDegradationMax;         // type:FLOAT.0
	array<string>                    ComponentNames;                  // type:ARRAY.ATARRAY
};

struct CLoadOutWeaponFromCategory : CLoadOutItem
{
	string                           CategoryName;                    // type:STRING.ATNONFINALHASHSTRING
	float                            Weight;                          // type:FLOAT.0
	float                            Variance;                        // type:FLOAT.0
	uint                             Ammo;                            // type:UINT.0
	bitset<enum _0xD2213D72>         Flags;                           // type:BITSET.32BIT
	float                            WeaponDegradationMin;            // type:FLOAT.0
	float                            WeaponDegradationMax;            // type:FLOAT.0
	float                            PermanentDegradationMin;         // type:FLOAT.0
	float                            PermanentDegradationMax;         // type:FLOAT.0
	bool                             SortCategory;                    // type:BOOL.0
	bool                             ExcludeOutlawWeapons;            // type:BOOL.0
	bool                             IgnoreUnlocksForMP;              // type:BOOL.0
};

struct CLocationRouteGeneator
{
	array<struct _0xEBE01DA6>        Locations;                       // type:ARRAY.ATARRAY
};

struct CLookAtHistory__Tunables : CTuning
{
	float                            HistoryCosineThreshold;          // type:FLOAT.0
	uint                             MemoryDuration;                  // type:UINT.0
};

struct CLookSequencePresets
{
	map<string, struct _0x69B2A189>     Presets;                         // type:MAP.ATBINARYMAP
};

struct CLootConfigManagerData
{
	map<string, struct _0x0AEE7811>                  LootActionAIConditions;          // type:MAP.ATBINARYMAP
	map<string, struct _0xC6079AF0>                  LootComponentProbabilities;      // type:MAP.ATBINARYMAP
	map<string, struct _0xAF92FA28>                  LootLongActionScoringWeightTables; // type:MAP.ATBINARYMAP
	map<string, struct _0x77145C7D>                  LootQuickActionScoringWeightTables; // type:MAP.ATBINARYMAP
	map<string, struct _0xFC01364A>                  LootActionPromptTables;          // type:MAP.ATBINARYMAP
	map<string, struct _0x391B67CB>                  LootActionBlipSets;              // type:MAP.ATBINARYMAP
	map<string, struct _0x9CFCB135>                  LootLongAnimDataSets;            // type:MAP.ATBINARYMAP
	map<string, struct _0x4157F84A>                  LootQuickAnimDataSets;           // type:MAP.ATBINARYMAP
	map<string, struct _0xA135B60D>                  LootAnimScenes;                  // type:MAP.ATBINARYMAP
	map<string, struct _0x78503EAE>                  FixedEntryOffsets;               // type:MAP.ATBINARYMAP
	map<string, struct _0x40F3FB1E>                  LootOverlayData;                 // type:MAP.ATBINARYMAP
	map<string, struct _0xBB2A9B47>                  FallbackData;                    // type:MAP.ATBINARYMAP
	map<string, struct _0x444D4DE4>                  LootConfigs;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x710D1467>                  LootVehiclePromptData;           // type:MAP.ATBINARYMAP
	map<string, struct _0x5C97D4C9>                  LootVehicleAnimData;             // type:MAP.ATBINARYMAP
	map<string, struct _0xFD7CEDA2>                  LootVehicleItemCollections;      // type:MAP.ATBINARYMAP
	map<string, struct _0xDD0AC424>                  LootVehicleConfigs;              // type:MAP.ATBINARYMAP
	map<string, struct _0x154728B8>                  RandomLootabilityConditions;     // type:MAP.ATBINARYMAP
	map<string, struct _0x3C17998B>                  ConvexHullData;                  // type:MAP.ATBINARYMAP
	map<string, struct _0x78334E1A>                  BlendWeightProbes;               // type:MAP.ATBINARYMAP
	map<string, struct _0x0757FBC4>                  SlopeProbes;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xC645464E>                  LootOrbitCameraData;             // type:MAP.ATBINARYMAP
	map<string, struct _0x6794ECBE>                  MiniGameData;                    // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootPromptTableSelectors;        // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootBlipSetSelectors;            // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootLongAnimDataSelectors;       // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootLongAltAnimDataSelectors;    // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     HorseTransferAnimDataSelectors;  // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootLongCameraCutAnimDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootAliveComponentsAnimDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootAliveComponentsFallbackAnimDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootLongAltCameraCutAnimDataSelectors; // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootQuickAnimDataSelectors;      // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootOverlayDataSelectors;        // type:MAP.ATBINARYMAP
	map<string, struct _0xE23CBBDE>                  LootLongRollSelectors;           // type:MAP.ATBINARYMAP
	map<string, struct _0x154728B8>                  LootLongAnimRateSelectors;       // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     FallbackAnimsSelectors;          // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootableVehiclePromptSelectors;  // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootableVehicleAnimsSelectors;   // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootableVehicleItemsSelectors;   // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     RandomLootabilitySelectors;      // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     LootOrbitCameraSelectors;        // type:MAP.ATBINARYMAP
	map<string, struct CConditionalHashSelector>     ConditionalAnimSceneSelectors;   // type:MAP.ATBINARYMAP
	struct _0x33E2F023                               Constants;                       // type:STRUCT.STRUCTURE
};

struct CLootItemsDataManagerData
{
	struct _0xBFF8652A               AllAnimInfos;                    // type:STRUCT.STRUCTURE
	struct _0xBB490E27               AllAnimInfoSelectors;            // type:STRUCT.STRUCTURE
};

struct CLootMatrixDefMap
{
	map<string, struct _0xA5AEF5E0>     Entries;                         // type:MAP.ATBINARYMAP
};

struct CLootSoundsMapCollection
{
	array<struct _0xB4B3A2E1>        SoundMaps;                       // type:ARRAY.ATARRAY
};

struct CLootTableCollection
{
	map<string, struct _0x167DBDC9>     LootTables;                      // type:MAP.ATMAP
};

struct CLootTableRewardConditionsMap
{
	map<string, struct _0x963099B0>     RewardConditions;                // type:MAP.ATBINARYMAP
};

struct CLootVfxMapCollection
{
	array<struct _0x43256DA2>        VfxMaps;                         // type:ARRAY.ATARRAY
};

struct CLootingCustomModelDataCollection
{
	string                           CollectionId;                    // type:STRING.ATNONFINALHASHSTRING
	struct _0x26255952               EntryModelsData;                 // type:STRUCT.STRUCTURE
};

struct CMPApparelData
{
	map<string, int>                 MPApparelDataMale;               // type:MAP.ATMAP
	map<string, int>                 MPApparelDataFemale;             // type:MAP.ATMAP
};

struct CMPOutfits
{
	struct CMPOutfitsMap             MPOutfitsDataMale;               // type:STRUCT.STRUCTURE
	struct CMPOutfitsMap             MPOutfitsDataFemale;             // type:STRUCT.STRUCTURE
};

struct CMPOutfitsData
{
	array<int, 12>                   ComponentDrawables;              // type:ARRAY.ATFIXEDARRAY
	array<int, 12>                   ComponentTextures;               // type:ARRAY.ATFIXEDARRAY
	array<int, 9>                    PropIndices;                     // type:ARRAY.ATFIXEDARRAY
	array<int, 9>                    PropTextures;                    // type:ARRAY.ATFIXEDARRAY
	array<int, 3>                    TattooHashes;                    // type:ARRAY.ATFIXEDARRAY
};

struct CMPOutfitsMap
{
	array<struct CMPOutfitsData>     MPOutfitsData;                   // type:ARRAY.ATARRAY
};

struct CMapData : rage__fwMapData
{
	array<struct CTimeCycleModifier>     timeCycleModifiers;              // type:ARRAY.ATARRAY
	array<struct _0x3BC4AC19>            _0x8471928B;                     // type:ARRAY.ATARRAY
	array<struct _0x7BEF699E>            _0x4D4A0635;                     // type:ARRAY.ATARRAY
	array<struct CCarGen>                carGenerators;                   // type:ARRAY.ATARRAY
	struct CLODLight                     LODLightsSOA;                    // type:STRUCT.STRUCTURE
	struct CDistantLODLight              DistantLODLightsSOA;             // type:STRUCT.STRUCTURE
	struct CBlockDesc                    block;                           // type:STRUCT.STRUCTURE
};

struct CMapDataCullBoxFile
{
	array<struct _0x945C9CD3>        entries;                         // type:ARRAY.ATARRAY
};

struct CMapDataGroup
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    Bounds;                          // type:ARRAY.ATARRAY
	bitset<enum _0x471BCA5B>         Flags;                           // type:BITSET.32BIT
	array<string>                    WeatherTypes;                    // type:ARRAY.ATARRAY
	uint                             HoursOnOff;                      // type:UINT.0
};

struct CMapParentTxds
{
	array<struct CTxdRelationship>     txdRelationships;                // type:ARRAY.ATARRAY
};

struct CMapTypes : rage__fwMapTypes
{
	array<struct CCompositeEntityType>     compositeEntityTypes;            // type:ARRAY.ATARRAY
};

struct CMapZone
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x04F45418>        ZoneAreas;                       // type:ARRAY.ATARRAY
	struct rage__spdAABB             BoundBox;                        // type:STRUCT.STRUCTURE
	enum _0xAFE23FD3                 Type;                            // type:ENUM.32BIT
};

struct CMapZonesContainer
{
	array<struct CMapZone>           Zones;                           // type:ARRAY.ATARRAY
};

struct CMenuButton
{
	enum rage__InputType             ButtonInput;                     // type:ENUM.32BIT
	enum rage__InputGroup            ButtonInputGroup;                // type:ENUM.32BIT
	string                           hButtonHash;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x4A70420F;                     // type:BOOL.0
};

struct CMenuButtonList
{
	array<struct CMenuButton>        ButtonPrompts;                   // type:ARRAY.ATARRAY
	int                              WrappingPoint;                   // type:INT.0
};

struct CMiloInterior
{
	string                           Name;                            // type:STRING.ATSTRING
	string                           File;                            // type:STRING.ATSTRING
	array<struct CMiloRoom>          RoomList;                        // type:ARRAY.ATARRAY
};

struct CMiloRoom
{
	string                           Name;                            // type:STRING.ATSTRING
	array<struct CLayoutNode>        LayoutNodeList;                  // type:ARRAY.ATARRAY
};

struct CMiniMapSaveStructure : CBaseSaveObject
{
	array<struct CMiniMapSaveStructure__CPointOfInterestStruct>     PointsOfInterestList;            // type:ARRAY.ATARRAY
};

struct CMiniMapSaveStructure__CPointOfInterestStruct
{
	vec2                             vPos;                            // type:VECTOR2.0
	uint                             _0xC2397821;                     // type:UINT.0
};

struct CMinigameInfo : CItemInfo
{
};

struct CMission
{
	string                           MissionId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           Category;                        // type:STRING.ATNONFINALHASHSTRING
	string                           Description;                     // type:STRING.ATNONFINALHASHSTRING
	string                           TextureTxd;                      // type:STRING.ATNONFINALHASHSTRING
	string                           TextureName;                     // type:STRING.ATNONFINALHASHSTRING
	enum eMissionType                MissionType;                     // type:ENUM.32BIT
	bool                             IgnoreForProgressPercent;        // type:BOOL.0
};

struct CMissionCategory
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Description;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Description2;                    // type:STRING.ATNONFINALHASHSTRING
	string                           TextureName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           TextureTxd;                      // type:STRING.ATNONFINALHASHSTRING
	string                           MenuLink;                        // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA39A9BDD;                     // type:STRING.ATSTRING
};

struct CMissions
{
	uint                               Version;                         // type:UINT.0
	array<struct CMissionCategory>     CategoryList;                    // type:ARRAY.ATARRAY
	array<struct CMission>             Missions;                        // type:ARRAY.ATARRAY
};

struct CMloArchetypeDef : CBaseArchetypeDef
{
	uint                                    mloFlags;                        // type:UINT.0
	array<struct rage__fwEntityDef>         entities;                        // type:ARRAY.ATARRAY
	array<struct CMloRoomDef>               rooms;                           // type:ARRAY.ATARRAY
	array<struct CMloPortalDef>             portals;                         // type:ARRAY.ATARRAY
	array<struct CMloEntitySet>             entitySets;                      // type:ARRAY.ATARRAY
	array<struct CMloTimeCycleModifier>     timeCycleModifiers;              // type:ARRAY.ATARRAY
	array<struct _0x4EB04539>               _0x8471928B;                     // type:ARRAY.ATARRAY
	array<struct _0xFB36133A>               _0xEC8E962B;                     // type:ARRAY.ATARRAY
	struct _0xFB36133A                      _0x2AF2E200;                     // type:STRUCT.STRUCTURE
	bool                                    _0xA916F55B;                     // type:BOOL.0
};

struct CMloEntitySet
{
	string                              name;                            // type:STRING.ATNONFINALHASHSTRING
	array<uint>                         locations;                       // type:ARRAY.ATARRAY
	array<struct rage__fwEntityDef>     entities;                        // type:ARRAY.ATARRAY
};

struct CMloInstanceDef : CEntityDef
{
	enum _0x66FBE3E0                 groupId;                         // type:ENUM.32BIT
	uint                             floorId;                         // type:UINT.0
	array<string>                    defaultEntitySets;               // type:ARRAY.ATARRAY
	uint                             numExitPortals;                  // type:UINT.0
	uint                             MLOInstflags;                    // type:UINT.0
	float                            _0x15810E7F;                     // type:FLOAT.0
};

struct CMloPortalDef
{
	uint                             roomFrom;                        // type:UINT.0
	uint                             roomTo;                          // type:UINT.0
	uint                             flags;                           // type:UINT.0
	uint                             mirrorPriority;                  // type:UINT.0
	uint                             opacity;                         // type:UINT.0
	float                            _0x7C096C2E;                     // type:FLOAT.0
	float                            _0x91171666;                     // type:FLOAT.0
	float                            _0x96816DDF;                     // type:FLOAT.0
	float                            _0x0854FDEE;                     // type:FLOAT.0
	uint                             audioOcclusion;                  // type:UINT.0
	array<vec3>                      corners;                         // type:ARRAY.ATARRAY
	array<uint>                      attachedObjects;                 // type:ARRAY.ATARRAY
};

struct CMloRoomDef
{
	string                           name;                            // type:STRING.ATSTRING
	vec3                             bbMin;                           // type:VECTOR3.0
	vec3                             bbMax;                           // type:VECTOR3.0
	float                            blend;                           // type:FLOAT.0
	string                           timecycleName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           secondaryTimecycleName;          // type:STRING.ATNONFINALHASHSTRING
	uint                             flags;                           // type:UINT.0
	uint                             portalCount;                     // type:UINT.0
	int                              floorId;                         // type:INT.0
	int                              exteriorVisibiltyDepth;          // type:INT.0
	array<uint>                      attachedObjects;                 // type:ARRAY.ATARRAY
	array<struct _0x7BEF699E>        _0x4B496F93;                     // type:ARRAY.ATARRAY
};

struct CMloTimeCycleModifier
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	vec4                             sphere;                          // type:VECTOR4.0
	float                            percentage;                      // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	uint                             startHour;                       // type:UINT.0
	uint                             endHour;                         // type:UINT.0
};

struct CModelAgingMgr
{
	float                               HumidityPercent;                 // type:FLOAT.0
	float                               DryPercent;                      // type:FLOAT.0
	float                               ColdDegressC;                    // type:FLOAT.0
	float                               HotDegressC;                     // type:FLOAT.0
	ushort                              MaxDecompTimeHours;              // type:USHORT.0
	map<string, struct _0xFAEBEF3B>     ModelAgingData;                  // type:MAP.ATMAP
};

struct CMoneyInfo : CItemInfo
{
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
};

struct CMotionTaskDataManager
{
	array<struct CFlightTuningSet>       aFlightTuningData;               // type:ARRAY.ATARRAY
	array<struct CMotionTaskDataSet>     aMotionTaskData;                 // type:ARRAY.ATARRAY
};

struct CMotionTaskDataSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct sMotionTaskData           onFoot;                          // type:STRUCT.POINTER
	struct sMotionTaskData           inWater;                         // type:STRUCT.POINTER
	bool                             HasLowLodMotionTask;             // type:BOOL.0
	float                            MinRiverFlowForRapids;           // type:FLOAT.0
	float                            MinTimeDeepWater;                // type:FLOAT.0
	float                            MinTimeThinWater;                // type:FLOAT.0
	bool                             UseWaterDepthToDetectDeepWater;  // type:BOOL.0
	float                            MinDepthDeepWaterWhenSwimming;   // type:FLOAT.0
	float                            MinDepthDeepWaterWhenWalking;    // type:FLOAT.0
	float                            GroundOffsetForProcessProbes;    // type:FLOAT.0
	string                           FlightTuningName;                // type:STRING.ATNONFINALHASHSTRING
};

struct CMovieQualityVariation
{
	string                           MovieVariation_HDR;              // type:STRING.ATSTRING
	string                           MovieVariation_4K;               // type:STRING.ATSTRING
	string                           MovieVariation_4K_HDR;           // type:STRING.ATSTRING
};

struct CMovieQualityVariationMap
{
	map<string, struct CMovieQualityVariation>     map;                             // type:MAP.ATBINARYMAP
};

struct CMovieSubtitleContainer
{
	string                           TextBlockName;                   // type:STRING.ATSTRING
	array<struct _0x4E842C3B>        pCutsceneEventArgsList;          // type:ARRAY.ATARRAY
	array<struct _0x6E979DFA>        pCutsceneEventList;              // type:ARRAY.ATARRAY
};

struct CMultiTxdRelationship
{
	string                           parent;                          // type:STRING.ATSTRING
	array<string>                    children;                        // type:ARRAY.ATARRAY
};

struct CMultiplayerStatsSaveStructure : CBaseStatsSaveStructure
{
};

struct CMultiplyProvider : _0xEFAEA34C
{
	struct _0xEFAEA34C               First;                           // type:STRUCT.POINTER
	struct _0xEFAEA34C               Second;                          // type:STRUCT.POINTER
};

struct CNetworkData__Tunables : CTuning
{
	struct _0xF9607376               Init;                            // type:STRUCT.STRUCTURE
	struct _0x5685F6BF               Script;                          // type:STRUCT.STRUCTURE
};

struct CNetworkSpawnSearch__Tunables : CTuning
{
	struct _0x53806989               General;                         // type:STRUCT.STRUCTURE
};

struct CNmBlendOutBlendItem : CNmBlendOutItem
{
	float                            blendDuration;                   // type:FLOAT.0
	string                           clipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           clip;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             addToPointCloud;                 // type:BOOL.0
	bool                             tagSync;                         // type:BOOL.0
};

struct CNmBlendOutItem
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	enum _0x51C4A404                 type;                            // type:ENUM.32BIT
	string                           nextItemId;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CNmBlendOutLocoGetUpItem : CNmBlendOutItem
{
	string                           typeOfGetUp;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CNmBlendOutMotionStateItem : CNmBlendOutItem
{
	enum _0x92A659FE                 motionState;                     // type:ENUM.32BIT
	bool                             forceRestart;                    // type:BOOL.0
	bool                             forceActionMode;                 // type:BOOL.0
	float                            motionStartPhase;                // type:FLOAT.0
};

struct CNmBlendOutPoseItem : CNmBlendOutItem
{
	string                           clipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           clip;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             addToPointCloud;                 // type:BOOL.0
	bool                             no180Blend;                      // type:BOOL.0
	bool                             looping;                         // type:BOOL.0
	bool                             allowInstantBlendToAim;          // type:BOOL.0
	bool                             hasGrip;                         // type:BOOL.0
	float                            minPlaybackRate;                 // type:FLOAT.0
	float                            maxPlaybackRate;                 // type:FLOAT.0
	float                            earlyOutPhase;                   // type:FLOAT.0
	float                            armedAIEarlyOutPhase;            // type:FLOAT.0
	float                            movementBreakOutPhase;           // type:FLOAT.0
	float                            turnBreakOutPhase;               // type:FLOAT.0
	float                            playerAimOrFireBreakOutPhase;    // type:FLOAT.0
	float                            ragdollFrameBlendDuration;       // type:FLOAT.0
	float                            duration;                        // type:FLOAT.0
	float                            fullBlendHeadingInterpRate;      // type:FLOAT.0
	float                            zeroBlendHeadingInterpRate;      // type:FLOAT.0
	float                            dropDownPhase;                   // type:FLOAT.0
	float                            minBlendAngle;                   // type:FLOAT.0
	float                            maxBlendAngle;                   // type:FLOAT.0
};

struct CNmBlendOutReactionItem : CNmBlendOutItem
{
	string                           clipSet;                         // type:STRING.ATNONFINALHASHSTRING
	float                            _0x9FCC1C11;                     // type:FLOAT.0
};

struct CNmBlendOutSet
{
	bitset<enum _0x4E8E5163>          ControlFlags;                    // type:BITSET.32BIT
	array<struct CNmBlendOutItem>     items;                           // type:ARRAY.ATARRAY
	string                            fallbackSet;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CNmBlendOutSetManager
{
	map<string, struct CNmBlendOutSet>     sets;                            // type:MAP.ATBINARYMAP
};

struct CNmMessage
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CNmParameter>       Params;                          // type:ARRAY.ATARRAY
	bool                             ForceNewMessage;                 // type:BOOL.0
	bool                             TaskMessage;                     // type:BOOL.0
};

struct CNmParameter
{
};

struct CNmParameterBool : _0x09D8AA6B
{
	bool                             Value;                           // type:BOOL.0
};

struct CNmParameterFloat : _0x09D8AA6B
{
	float                            Value;                           // type:FLOAT.0
};

struct CNmParameterInt : _0x09D8AA6B
{
	int                              Value;                           // type:INT.0
};

struct CNmParameterRandomFloat : _0x09D8AA6B
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct CNmParameterRandomInt : _0x09D8AA6B
{
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
};

struct CNmParameterResetMessage : CNmParameter
{
};

struct CNmParameterString : _0x09D8AA6B
{
	string                           Value;                           // type:STRING.ATFINALHASHSTRING
};

struct CNmParameterVector : _0x09D8AA6B
{
	vec3                             Value;                           // type:VECTOR3.0
};

struct CNmTuningSet
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	int                              Priority;                        // type:INT.0
	bool                             Enabled;                         // type:BOOL.0
	array<struct CNmMessage>         Messages;                        // type:ARRAY.ATARRAY
};

struct CNodeAddress
{
	ushort                           Region;                          // type:USHORT.0
	ushort                           Index;                           // type:USHORT.0
};

struct COLLISIONPROBE : _0x499E1BE4
{
	string                           _0x07A4AE8F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x864EB8B8;                     // type:FLOAT.0
	bool                             _0xDF5077D4;                     // type:BOOL.0
	string                           _0x1AC2EB33;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x549E6E51;                     // type:FLOAT.0
};

struct COarDrivenBoatHandlingData : CBaseSubHandlingData
{
	float                            fForwardRowForce;                // type:FLOAT.0
	float                            fBackwardRowForce;               // type:FLOAT.0
	float                            fRowTurnTorque;                  // type:FLOAT.0
	float                            fIdleTurnTorque;                 // type:FLOAT.0
	float                            fSteerTorque;                    // type:FLOAT.0
	float                            fStrafeForce;                    // type:FLOAT.0
	float                            fIdleTurnMinorSteeringTorque;    // type:FLOAT.0
	float                            fLowEffortMinorSteeringTorque;   // type:FLOAT.0
	float                            fMedEffortMinorSteeringTorque;   // type:FLOAT.0
	float                            fHighEffortMinorSteeringTorque;  // type:FLOAT.0
	float                            fLowEffortExtraSteeringTorque;   // type:FLOAT.0
	float                            fMedEffortExtraSteeringTorque;   // type:FLOAT.0
	float                            fHighEffortExtraSteeringTorque;  // type:FLOAT.0
	float                            fLowEffortDragForce;             // type:FLOAT.0
	float                            fMedEffortDragForce;             // type:FLOAT.0
	float                            fHighEffortDragForce;            // type:FLOAT.0
	float                            fFlowForce;                      // type:FLOAT.0
	float                            fFlowTorque;                     // type:FLOAT.0
	float                            fPedMotionRollTorque;            // type:FLOAT.0
	float                            fPedMotionPitchTorque;           // type:FLOAT.0
	float                            fTurnRollTorque;                 // type:FLOAT.0
	float                            fLowEffortTurnRollMult;          // type:FLOAT.0
	float                            fMedEffortTurnRollMult;          // type:FLOAT.0
	float                            fHighEffortTurnRollMult;         // type:FLOAT.0
	float                            fTurnAssistanceStrengthTorque;   // type:FLOAT.0
	float                            fStraightenAngularAssistanceTorque; // type:FLOAT.0
	float                            fStraightenLinearAssistanceForce; // type:FLOAT.0
	float                            fRowTurnLateralAssistanceForce;  // type:FLOAT.0
	float                            fLowEffortRowTurnLateralAssistanceMult; // type:FLOAT.0
	float                            fMedEffortRowTurnLateralAssistanceMult; // type:FLOAT.0
	float                            fHighEffortRowTurnLateralAssistanceMult; // type:FLOAT.0
	float                            fHardTurnRowTurnLateralAssistanceMult; // type:FLOAT.0
	float                            fLowEffortRowingMult;            // type:FLOAT.0
	float                            fMedEffortRowingMult;            // type:FLOAT.0
	float                            fHighEffortRowingMult;           // type:FLOAT.0
	float                            fHighSpeedRowingMult;            // type:FLOAT.0
	float                            fLowEffortReverseMult;           // type:FLOAT.0
	float                            fMedEffortReverseMult;           // type:FLOAT.0
	float                            fHighEffortReverseMult;          // type:FLOAT.0
	float                            fLowEffortTurningMult;           // type:FLOAT.0
	float                            fMedEffortTurningMult;           // type:FLOAT.0
	float                            fHighEffortTurningMult;          // type:FLOAT.0
	float                            fHardTurnTurningMult;            // type:FLOAT.0
	float                            fSpeedConsideredIdle;            // type:FLOAT.0
	int                              nOarConfiguration;               // type:INT.0
	bool                             bSingleOarCanSwapSide;           // type:BOOL.0
};

struct CObjectExplosionConfigManager
{
	map<string, struct _0x1746B5A4>     ObjectConfigs;                   // type:MAP.ATBINARYMAP
};

struct CObjectExplosionData
{
	string                           BoneId;                          // type:STRING.ATSTRING
};

struct CPOVTuningInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            StickCenteredBodyLeanYSlowMin;   // type:FLOAT.0
	float                            StickCenteredBodyLeanYSlowMax;   // type:FLOAT.0
	float                            StickCenteredBodyLeanYFastMin;   // type:FLOAT.0
	float                            StickCenteredBodyLeanYFastMax;   // type:FLOAT.0
	float                            BodyLeanXDeltaFromCenterMinBikeLean; // type:FLOAT.0
	float                            BodyLeanXDeltaFromCenterMaxBikeLean; // type:FLOAT.0
	float                            MinForwardsPitchSlow;            // type:FLOAT.0
	float                            MaxForwardsPitchSlow;            // type:FLOAT.0
	float                            MinForwardsPitchFast;            // type:FLOAT.0
	float                            MaxForwardsPitchFast;            // type:FLOAT.0
};

struct CPackFileMetaData
{
	array<struct CMapDataGroup>            MapDataGroups;                   // type:ARRAY.ATARRAY
	array<struct CHDTxdAssetBinding>       HDTxdBindingArray;               // type:ARRAY.ATARRAY
	array<struct CImapDependency>          imapDependencies;                // type:ARRAY.ATARRAY
	array<struct CImapDependencies>        imapDependencies_2;              // type:ARRAY.ATARRAY
	array<struct CItypDependencies>        itypDependencies_2;              // type:ARRAY.ATARRAY
	array<struct CInteriorBoundsFiles>     Interiors;                       // type:ARRAY.ATARRAY
	array<struct _0x41CB1AE1>              _0xE4E2A5F7;                     // type:ARRAY.ATARRAY
	array<struct _0xC51A77D5>              _0x637C584A;                     // type:ARRAY.ATARRAY
	array<struct CTxdRelationship>         txdRelationships;                // type:ARRAY.ATARRAY
	array<struct fwStringMapping>          _0x7DDADF44;                     // type:ARRAY.ATARRAY
	map<string, struct _0xEBE47183>        _0x7F091F5A;                     // type:MAP.ATBINARYMAP
};

struct CPairedLootClipDataSetCollection
{
	map<string, struct _0x0DE512A7>     Collection;                      // type:MAP.ATBINARYMAP
	map<string, struct _0x8CD59F7B>     Grips;                           // type:MAP.ATBINARYMAP
};

struct CPassiveCardInfo : CItemInfo
{
	string                           SearchHash;                      // type:STRING.ATNONFINALHASHSTRING
	uint                             Level;                           // type:UINT.0
	uint                             Duration;                        // type:UINT.0
	string                           Ability;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CPathNode
{
	struct CNodeAddress              Address;                         // type:STRUCT.STRUCTURE
	string                           StreetName;                      // type:STRING.ATNONFINALHASHSTRING
	short                            StartIndexOfLinks;               // type:SHORT.0
	uchar                            NumLinks;                        // type:UCHAR.0
	int                              CoorsX;                          // type:INT.0
	int                              CoorsY;                          // type:INT.0
	short                            CoorsZ;                          // type:SHORT.0
	uchar                            Density;                         // type:UCHAR.0
	uchar                            DeadEndness;                     // type:UCHAR.0
	uchar                            Group;                           // type:UCHAR.0
	uchar                            Speed;                           // type:UCHAR.0
	enum eRoadClassification         RoadClass;                       // type:ENUM.32BIT
	bitset<enum ePathNodeFlags>      Flags;                           // type:BITSET.32BIT
};

struct CPathNodeLink
{
	struct CNodeAddress                 OtherNode;                       // type:STRUCT.STRUCTURE
	uchar                               Tilt;                            // type:UCHAR.0
	uchar                               TiltFalloff;                     // type:UCHAR.0
	uchar                               LanesFromOtherNode;              // type:UCHAR.0
	uchar                               LanesToOtherNode;                // type:UCHAR.0
	uchar                               Distance;                        // type:UCHAR.0
	float                               LaneWidth;                       // type:FLOAT.0
	float                               CentralReservationWidth;         // type:FLOAT.0
	float                               RacingLineOffset;                // type:FLOAT.0
	bitset<enum ePathNodeLinkFlags>     Flags;                           // type:BITSET.32BIT
};

struct CPathRegion
{
	array<struct CPathNode>                     Nodes;                           // type:ARRAY.ATARRAY
	array<struct CPathNodeLink>                 Links;                           // type:ARRAY.ATARRAY
	array<struct CPathVirtualJunction>          VirtualJunctions;                // type:ARRAY.ATARRAY
	array<uchar>                                HeightSamples;                   // type:ARRAY.ATARRAY
	map<uint, int>                              JunctionMap;                     // type:MAP.ATBINARYMAP
	array<struct CAssistedMovementNode>         AssistedMovementNodes;           // type:ARRAY.ATARRAY
	array<struct CAssistedMovementNodeLink>     AssistedMovementLinks;           // type:ARRAY.ATARRAY
};

struct CPathVirtualJunction
{
	short                            MaxZ;                            // type:SHORT.0
	int                              MinX;                            // type:INT.0
	int                              MinY;                            // type:INT.0
	short                            HeightBaseWorld;                 // type:SHORT.0
	ushort                           StartIndexOfHeightSamples;       // type:USHORT.0
	uchar                            XSamples;                        // type:UCHAR.0
	uchar                            YSamples;                        // type:UCHAR.0
};

struct CPathZoneData
{
	struct _0x4E4DB7FA               PathZones;                       // type:STRUCT.STRUCTURE
	struct _0xFD2DF0AD               PathZoneMappings;                // type:STRUCT.STRUCTURE
};

struct CPedAccuracyManager
{
	map<string, struct sPedAccuracyModifiers>     AccuracyModifiers;               // type:MAP.ATMAP
};

struct CPedBreathingTypes
{
	array<struct _0xC9F9E736>        BreatheSettings;                 // type:ARRAY.ATARRAY
};

struct CPedCapsuleInfoManager
{
	array<struct CBaseCapsuleInfo>     aPedCapsule;                     // type:ARRAY.ATARRAY
};

struct CPedClothCollision
{
	array<struct _0xE21F6188>        CollisionData;                   // type:ARRAY.ATARRAY
};

struct CPedComponentSetInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             HasDistraction;                  // type:BOOL.0
	bool                             HasFacial;                       // type:BOOL.0
	bool                             HasRagdollConstraints;           // type:BOOL.0
	bool                             HasInventory;                    // type:BOOL.0
	bool                             HasVfx;                          // type:BOOL.0
	bool                             HasSpeech;                       // type:BOOL.0
	bool                             HasPhone;                        // type:BOOL.0
	bool                             HasLookAt;                       // type:BOOL.0
	bool                             HasReins;                        // type:BOOL.0
	bool                             IsRidable;                       // type:BOOL.0
	array<struct _0x29B234D9>        EntityComponentsInfo;            // type:ARRAY.ATARRAY
};

struct CPedComponentSetManager
{
	array<struct CPedComponentSetInfo>     Infos;                           // type:ARRAY.ATARRAY
	struct void                            DefaultSet;                      // type:STRUCT.EXTERNAL_NAMED
	struct _0xC690E005                     EntityComponentCounts;           // type:STRUCT.STRUCTURE
};

struct CPedDamageInfo
{
	bool                                Enabled;                         // type:BOOL.0
	enum _0x9E8AE4E5                    SkinPenetrationLevel;            // type:ENUM.32BIT
	float                               WritheDurationSecondsMin;        // type:FLOAT.0
	float                               WritheDurationSecondsMax;        // type:FLOAT.0
	float                               WritheDamagerNearbyRadius;       // type:FLOAT.0
	float                               WritheDamagerNearbyBleedOutAccelerationModifier; // type:FLOAT.0
	float                               WritheDamagerNearbyBleedOutDurationTargetNearMinMP; // type:FLOAT.0
	float                               WritheDamagerNearbyBleedOutDurationTargetNearMaxMP; // type:FLOAT.0
	float                               WritheReactLookChance;           // type:FLOAT.0
	float                               WritheReactLookRadius;           // type:FLOAT.0
	float                               WritheReactLookDurationMin;      // type:FLOAT.0
	float                               WritheReactLookDurationMax;      // type:FLOAT.0
	float                               DeadEyeFatalRegionSizeModifier;  // type:FLOAT.0
	string                              BleedoutProfile;                 // type:STRING.ATNONFINALHASHSTRING
	string                              TranquilizerProfile;             // type:STRING.ATNONFINALHASHSTRING
	string                              PedDamageModifier;               // type:STRING.ATNONFINALHASHSTRING
	string                              DamageModifierWhenNoRegionHit;   // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0x0A137F8C>     FatalRegions;                    // type:MAP.ATBINARYMAP
	map<string, struct _0xAB79B6FA>     CriticalRegions;                 // type:MAP.ATBINARYMAP
	map<string, struct _0x277F8E80>     NormalRegions;                   // type:MAP.ATBINARYMAP
	map<string, struct _0x9C5BAEA5>     AimingRegions;                   // type:MAP.ATBINARYMAP
};

struct CPedDamageInfos
{
	string                                        GlobalDamageModifier;            // type:STRING.ATNONFINALHASHSTRING
	struct PlayerHorseWritheDurationOverrides     PlayerHorseWritheDurationOverrides; // type:STRUCT.STRUCTURE
	map<string, struct CPedDamageInfo>            PedDamageInfos;                  // type:MAP.ATBINARYMAP
	struct _0xDE13A900                            Bleedouts;                       // type:STRUCT.STRUCTURE
	struct _0x33AF3EB6                            Tranquilizers;                   // type:STRUCT.STRUCTURE
};

struct CPedDamageTargetBoneInfo
{
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
	float                            ChanceToHit;                     // type:FLOAT.0
};

struct CPedDamageTemplate
{
	string                                     Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CPedDamageTargetBoneInfo>     OnFootTargetBones;               // type:ARRAY.ATARRAY
	array<struct CPedDamageTargetBoneInfo>     MountedTargetBones;              // type:ARRAY.ATARRAY
	array<struct CPedDamageTargetBoneInfo>     InVehicleTargetBones;            // type:ARRAY.ATARRAY
	array<struct CPedDamageTargetBoneInfo>     InCoverCrouchTargetBones;        // type:ARRAY.ATARRAY
};

struct CPedDamageTemplateManager
{
	array<struct CPedDamageTemplate>     Templates;                       // type:ARRAY.ATARRAY
};

struct CPedDensityScoringConfigMap
{
	map<string, struct _0x4544092E>     PedDensityConfigs;               // type:MAP.ATMAP
};

struct CPedFormation_AICenteredLanes__Tunables : CTuning
{
	float                            fFirstRowExtraOffsetWithPlayer;  // type:FLOAT.0
};

struct CPedFormation_LineAbreast__Tunables : CTuning
{
	float                            fMinTimeToSwitchLargestCountSide; // type:FLOAT.0
	float                            fMinFactorSideAvailable;         // type:FLOAT.0
	float                            fMinDistanceToToSideOfLeader;    // type:FLOAT.0
	float                            fMinVerticalDistanceToLeader;    // type:FLOAT.0
};

struct CPedFormation_TwoByTwo__Tunables : CTuning
{
	float                            fMinOscillationAmplitude;        // type:FLOAT.0
	float                            fMaxOscillationAmplitude;        // type:FLOAT.0
	float                            _0xD8CA06A9;                     // type:FLOAT.0
	float                            fBaseRowDistanceShapeV;          // type:FLOAT.0
	float                            fMaxRowDistanceSupplementShapeV; // type:FLOAT.0
	float                            _0xC9CE7324;                     // type:FLOAT.0
	float                            fBaseRowDistanceLineAbreast;     // type:FLOAT.0
	float                            fMaxRowDistanceSupplementLineAbreast; // type:FLOAT.0
	float                            fMinLaneDistance;                // type:FLOAT.0
	float                            _0x2FBA79A8;                     // type:FLOAT.0
	float                            _0x021FB4DC;                     // type:FLOAT.0
	float                            fRowOffsetAtLane;                // type:FLOAT.0
	float                            fPercentageOfMembersToSwitchSide; // type:FLOAT.0
	float                            fFirstRowExtraOffsetOnRoads;     // type:FLOAT.0
	float                            _0xF8BE756F;                     // type:FLOAT.0
	float                            _0xC9A04788;                     // type:FLOAT.0
	int                              iMinOscillationPeriodMs;         // type:INT.0
	int                              iMaxOscillationPeriodMs;         // type:INT.0
	bool                             bShouldResetOscillation;         // type:BOOL.0
};

struct CPedFormation__Tunables : CTuning
{
	float                            fTimeAssignmentUnsafeToReassign; // type:FLOAT.0
};

struct CPedGestureSettings
{
	map<string, struct _0x1808B340>     Tracks;                          // type:MAP.ATBINARYMAP
	string                              Aiming1hClipSetId;               // type:STRING.ATNONFINALHASHSTRING
	string                              Aiming1hBodyBlendTemplateId;     // type:STRING.ATNONFINALHASHSTRING
	string                              Aiming2hClipSetId;               // type:STRING.ATNONFINALHASHSTRING
	string                              Aiming2hBodyBlendTemplateId;     // type:STRING.ATNONFINALHASHSTRING
	string                              AimingDualClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	string                              AimingDualBodyBlendTemplateId;   // type:STRING.ATNONFINALHASHSTRING
};

struct CPedGestureSettingsManager
{
	map<string, struct CPedGestureSettings>     Settings;                        // type:MAP.ATBINARYMAP
};

struct CPedIKSettingsInfoManager
{
	array<struct _0xFF88C76F>        aPedIKSettings;                  // type:ARRAY.ATARRAY
	struct void                      DefaultSet;                      // type:STRUCT.EXTERNAL_NAMED
};

struct CPedInventoryLoadOut
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CLoadOutItem>       Items;                           // type:ARRAY.ATARRAY
};

struct CPedInventoryLoadOutManager
{
	array<struct CPedInventoryLoadOut>     LoadOuts;                        // type:ARRAY.ATARRAY
};

struct CPedInventorySaveStructure : CBaseSaveObject
{
	struct _0x8D7888C0               playerInventory;                 // type:STRUCT.STRUCTURE
	struct _0x8D7888C0               backupInventory;                 // type:STRUCT.STRUCTURE
	uint                             dataVersion;                     // type:UINT.0
	bool                             usingBackupInventory;            // type:BOOL.0
};

struct CPedModelInfo__InitData
{
	string                                 Name;                            // type:STRING.CONST_STRING
	string                                 _0x93124EBD;                     // type:STRING.CONST_STRING
	string                                 PoseMatcherName;                 // type:STRING.CONST_STRING
	array<string>                          _0xED93B6E6;                     // type:ARRAY.ATARRAY
	string                                 Pedtype;                         // type:STRING.ATNONFINALHASHSTRING
	string                                 CreatureMetadataName;            // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x3207FDF6;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 ClipDictionaryName;              // type:STRING.ATNONFINALHASHSTRING
	string                                 BlendShapeFileName;              // type:STRING.ATNONFINALHASHSTRING
	string                                 ExpressionSetName;               // type:STRING.ATNONFINALHASHSTRING
	string                                 MovementClipSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                                 _0xD282B498;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 FullBodyDamageClipSet;           // type:STRING.ATNONFINALHASHSTRING
	string                                 AdditiveDamageClipSet;           // type:STRING.ATNONFINALHASHSTRING
	string                                 _0xF656E7CC;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x33EE71A3;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x7B02F627;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0xDF0E1FB5;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 DefaultVisemeClipSet;            // type:STRING.ATNONFINALHASHSTRING
	string                                 SidestepClipSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                                 FacialClipsetGroupName;          // type:STRING.ATNONFINALHASHSTRING
	string                                 GetupSetHash;                    // type:STRING.ATNONFINALHASHSTRING
	string                                 ScenarioCapabilities;            // type:STRING.ATSTRING
	string                                 DecisionMakerName;               // type:STRING.ATNONFINALHASHSTRING
	string                                 _0xC4E3A8E3;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 MotionTaskDataSetName;           // type:STRING.ATNONFINALHASHSTRING
	string                                 DefaultTaskDataSetName;          // type:STRING.ATNONFINALHASHSTRING
	string                                 PedCapsuleName;                  // type:STRING.ATNONFINALHASHSTRING
	string                                 PedLayoutName;                   // type:STRING.ATNONFINALHASHSTRING
	string                                 PedComponentSetName;             // type:STRING.ATNONFINALHASHSTRING
	string                                 PedIKSettingsName;               // type:STRING.ATNONFINALHASHSTRING
	string                                 TaskDataName;                    // type:STRING.ATNONFINALHASHSTRING
	string                                 RelationshipGroup;               // type:STRING.ATNONFINALHASHSTRING
	string                                 NavCapabilitiesName;             // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x8854D62B;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 PerceptionInfo;                  // type:STRING.ATNONFINALHASHSTRING
	string                                 DefaultBrawlingStyle;            // type:STRING.ATNONFINALHASHSTRING
	string                                 DefaultUnarmedWeapon;            // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x1003DA71;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x493CCA96;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 SpeciesName;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x72595C32;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 UndiscoveredName;                // type:STRING.ATNONFINALHASHSTRING
	enum _0xD2E63D65                       _0x9E63E6ED;                     // type:ENUM.32BIT
	string                                 _0x7BA672C7;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 PedVoiceGroup;                   // type:STRING.ATNONFINALHASHSTRING
	string                                 AnimalAudioObject;               // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x8C9CCCEB;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x7C337DA0;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x1E965A0D;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 Personality;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x20BCF02E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 DefaultWeaponLoadout;            // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x936A1503;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x44F4F2CA;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 HealthConfigHash;                // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x895861DA;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0xB2FE2EDF;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 CombatInfo;                      // type:STRING.ATNONFINALHASHSTRING
	string                                 VfxInfoName;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x3CF2AF47;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 AmbientClipsForFlee;             // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x2799400B;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x0CE51A59;                     // type:STRING.ATNONFINALHASHSTRING
	string                                 StatName;                        // type:STRING.ATNONFINALHASHSTRING
	enum _0x4B992707                       _0x4752713E;                     // type:ENUM.32BIT
	bool                                   _0x43D57FD3;                     // type:BOOL.0
	array<string>                          Drivers;                         // type:ARRAY.ATARRAY
	struct MetaPedQualityProbability       QualityProbability;              // type:STRUCT.POINTER
	bool                                   AmbulanceShouldRespondTo;        // type:BOOL.0
	bool                                   CanRideBikeWithNoHelmet;         // type:BOOL.0
	bool                                   CanSpawnInCar;                   // type:BOOL.0
	bool                                   bOnlyBulkyItemVariations;        // type:BOOL.0
	enum ePedRadioGenre                    Radio1;                          // type:ENUM.32BIT
	enum ePedRadioGenre                    Radio2;                          // type:ENUM.32BIT
	float                                  MinActivationImpulse;            // type:FLOAT.0
	float                                  Stubble;                         // type:FLOAT.0
	float                                  _0x0AB020BB;                     // type:FLOAT.0
	float                                  _0x6CB11C3A;                     // type:FLOAT.0
	float                                  HDDist;                          // type:FLOAT.0
	float                                  _0xC5691DF9;                     // type:FLOAT.0
	float                                  _0xC6AF94A8;                     // type:FLOAT.0
	bool                                   _0x5B0BE8DC;                     // type:BOOL.0
	enum _0x5066C50A                       _0xBBF6D3B6;                     // type:ENUM.32BIT
	float                                  Scale;                           // type:FLOAT.0
	float                                  CutsceneScale;                   // type:FLOAT.0
	float                                  ScaleRandomOffset;               // type:FLOAT.0
	float                                  KilledPerceptionRangeModifer;    // type:FLOAT.0
	bitset<enum eSexinessFlags>            Sexiness;                        // type:BITSET.32BIT
	bitset<enum _0xA82E2315>               _0x7F0093DA;                     // type:BITSET.32BIT
	enum _0xD4CFF347                       _0x9294E79C;                     // type:ENUM.32BIT
	enum _0xCCF05C2D                       _0x6899D915;                     // type:ENUM.32BIT
	uchar                                  MaxPassengersInCar;              // type:UCHAR.0
	bitset<enum eExternallyDrivenDOFs>     ExternallyDrivenDOFs;            // type:BITSET.8BIT
	enum SpecialAbilityType                AbilityType;                     // type:ENUM.32BIT
	enum SpecialAbilityType                _0x802D3948;                     // type:ENUM.32BIT
	string                                 SuperlodType;                    // type:STRING.ATNONFINALHASHSTRING
	enum eScenarioPopStreamingSlot         ScenarioPopStreamingSlot;        // type:ENUM.32BIT
	enum DefaultSpawnPreference            DefaultSpawningPreference;       // type:ENUM.32BIT
	enum _0x4FD6A0C0                       _0x9FD5E0A5;                     // type:ENUM.32BIT
	bool                                   _0x30C4B76F;                     // type:BOOL.0
	float                                  TrackerPathWidth;                // type:FLOAT.0
	array<float, 3>                        lodDistances;                    // type:ARRAY.MEMBER
	ushort                                 _0xF45D226F;                     // type:USHORT.0
	string                                 AttributeSet;                    // type:STRING.ATNONFINALHASHSTRING
	string                                 _0xC6D90BC4;                     // type:STRING.ATNONFINALHASHSTRING
	uchar                                  _0x120C7AC8;                     // type:UCHAR.0
	float                                  _0x187E18E5;                     // type:FLOAT.0
	float                                  _0x15FD61AA;                     // type:FLOAT.0
	float                                  _0x2FC486F7;                     // type:FLOAT.0
	bool                                   _0xCFFE931E;                     // type:BOOL.0
	bool                                   _0xA5229965;                     // type:BOOL.0
};

struct CPedModelInfo__InitDataList
{
	array<struct CPedModelInfo__InitData>     InitDatas;                       // type:ARRAY.ATARRAY
};

struct CPedModelInfo__PersonalityDataList
{
	array<struct _0x7B854238>        CriminalityTypes;                // type:ARRAY.ATARRAY
	array<struct _0x5D87B14B>        _0x80EDF792;                     // type:ARRAY.ATARRAY
	array<struct _0x98D69541>        _0xB38DF230;                     // type:ARRAY.ATARRAY
	array<struct _0x35FF3822>        BraveryTypes;                    // type:ARRAY.ATARRAY
	array<struct _0xF977FFB7>        PedPersonalities;                // type:ARRAY.ATARRAY
	string                           _0x20AE2083;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CPedMotivationInfoManager
{
	array<struct _0x39417DBD>           PedMotivationDefinitions;        // type:ARRAY.ATARRAY
	string                              DefaultFearProfileName;          // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x54F6A0FC>           aFearResponseProfiles;           // type:ARRAY.ATARRAY
	map<string, struct _0x26DAD862>     EventMotivationImpactProfiles;   // type:MAP.ATBINARYMAP
	map<string, struct _0x45D47235>     RobberyOfferItemChanceProfiles;  // type:MAP.ATBINARYMAP
	map<string, struct _0x45D47235>     ForgiveCriminalChanceProfiles;   // type:MAP.ATBINARYMAP
};

struct CPedNavCapabilityInfoManager
{
	array<struct _0x64C795D1>        aPedNavCapabilities;             // type:ARRAY.ATARRAY
};

struct CPedPerceptionInfoManager
{
	array<struct _0xA69C4A4C>        aPedPerceptionInfoData;          // type:ARRAY.ATARRAY
	array<struct _0xB76D0EC2>        aPedPerceptionModifierData;      // type:ARRAY.ATARRAY
};

struct CPedSpeedDataBlock
{
	array<struct _0x2E3159DB>        Data;                            // type:ARRAY.ATARRAY
};

struct CPedTargetEvaluator__Tunables : CTuning
{
	float                            DefaultTargetAngularLimitMelee;  // type:FLOAT.0
	float                            DefaultTargetAngularLimitMeleeLockOnNoStick; // type:FLOAT.0
	float                            _0x752815FC;                     // type:FLOAT.0
	float                            _0x64078CF2;                     // type:FLOAT.0
	float                            DefaultTargetDistanceWeightMelee; // type:FLOAT.0
	float                            _0x942A3813;                     // type:FLOAT.0
	float                            DefaultTargetDistanceWeightMeleeRunning; // type:FLOAT.0
	float                            _0x7C1C35F4;                     // type:FLOAT.0
	float                            DefaultTargetHeadingWeightMelee; // type:FLOAT.0
	float                            _0xD286F1A1;                     // type:FLOAT.0
	float                            DefaultTargetHeadingWeightMeleeRunning; // type:FLOAT.0
	float                            _0x75ADDB61;                     // type:FLOAT.0
	float                            DefaultTargetAngularLimitVehicleWeapon; // type:FLOAT.0
	float                            MeleeLockOnStickWeighting;       // type:FLOAT.0
	float                            MeleeLockOnCameraWeighting;      // type:FLOAT.0
	float                            MeleeLockOnCameraWeightingNoStick; // type:FLOAT.0
	float                            MeleeLockOnPedWeightingNoStick;  // type:FLOAT.0
	float                            PrioHarmless;                    // type:FLOAT.0
	float                            PrioNeutral;                     // type:FLOAT.0
	float                            PrioNeutralInjured;              // type:FLOAT.0
	float                            PrioIngangOrFriend;              // type:FLOAT.0
	float                            PrioPotentialThreat;             // type:FLOAT.0
	float                            _0x393F970E;                     // type:FLOAT.0
	float                            _0x0628870B;                     // type:FLOAT.0
	float                            _0x4A3C5E13;                     // type:FLOAT.0
	float                            _0xB79E3110;                     // type:FLOAT.0
	float                            _0xDF2EBC4D;                     // type:FLOAT.0
	float                            DownedThreatModifier;            // type:FLOAT.0
	float                            PrioPlayer2PlayerEveryone;       // type:FLOAT.0
	float                            PrioPlayer2PlayerStrangers;      // type:FLOAT.0
	float                            PrioPlayer2PlayerAttackers;      // type:FLOAT.0
	float                            PrioScriptedHighPriority;        // type:FLOAT.0
	float                            PrioMeleeDead;                   // type:FLOAT.0
	float                            PrioMeleeCombatThreat;           // type:FLOAT.0
	float                            PrioMeleeDownedCombatThreat;     // type:FLOAT.0
	float                            PrioMeleeInjured;                // type:FLOAT.0
	float                            _0xF865AF5D;                     // type:FLOAT.0
	float                            PrioMeleePotentialThreat;        // type:FLOAT.0
	float                            InCoverScoreModifier;            // type:FLOAT.0
	float                            ClosestPointToLineDist;          // type:FLOAT.0
	float                            ClosestPointToLineBonusModifier; // type:FLOAT.0
	float                            MeleeHeadingOverride;            // type:FLOAT.0
	float                            _0x056F3F64;                     // type:FLOAT.0
	float                            MeleeHeadingOverrideRunning;     // type:FLOAT.0
	float                            MeleeHeadingFalloffPowerRunning; // type:FLOAT.0
	float                            DefaultMeleeRange;               // type:FLOAT.0
	float                            _0xAF962350;                     // type:FLOAT.0
	float                            TargetDistanceWeightingMin;      // type:FLOAT.0
	float                            TargetDistanceWeightingMax;      // type:FLOAT.0
	float                            _0xAC28855A;                     // type:FLOAT.0
	float                            _0x25768100;                     // type:FLOAT.0
	float                            _0xDA8EF556;                     // type:FLOAT.0
	float                            _0x1A6B6738;                     // type:FLOAT.0
	float                            _0x91993938;                     // type:FLOAT.0
	float                            _0xD9E857DE;                     // type:FLOAT.0
	float                            TargetHeadingWeighting;          // type:FLOAT.0
	uint                             TargetDistanceMaxWeightingAimTime; // type:UINT.0
	float                            TargetDistanceFallOffMin;        // type:FLOAT.0
	float                            TargetDistanceFallOffMax;        // type:FLOAT.0
	float                            _0x475B2E17;                     // type:FLOAT.0
	float                            _0x35C293BA;                     // type:FLOAT.0
	float                            _0xE777F78D;                     // type:FLOAT.0
	float                            _0xEF7AEC8B;                     // type:FLOAT.0
	float                            _0xD91DBBCB;                     // type:FLOAT.0
	float                            _0xE0A9D4EB;                     // type:FLOAT.0
	float                            RejectLockonHeadingTheshold;     // type:FLOAT.0
	float                            HeadingScoreForCoverLockOnRejection; // type:FLOAT.0
	float                            _0x28927EBA;                     // type:FLOAT.0
	float                            _0xEC0FB998;                     // type:FLOAT.0
	float                            _0x1433529A;                     // type:FLOAT.0
	float                            _0x6E857F1C;                     // type:FLOAT.0
	float                            _0xA6560BCB;                     // type:FLOAT.0
	uint                             TimeForTakedownTargetAcquiry;    // type:UINT.0
	uint                             _0xD120F173;                     // type:UINT.0
	bool                             UseMeleeHeadingOverride;         // type:BOOL.0
	bool                             DebugTargetting;                 // type:BOOL.0
	bool                             _0x55B52B83;                     // type:BOOL.0
	bool                             UseNonNormalisedScoringForPlayer; // type:BOOL.0
	bool                             RejectLockIfBestTargetIsInCover; // type:BOOL.0
	float                            _0x61A2AA83;                     // type:FLOAT.0
	float                            _0x701AFB49;                     // type:FLOAT.0
	float                            _0xC82597B4;                     // type:FLOAT.0
	float                            _0xC9E8D593;                     // type:FLOAT.0
	float                            _0x82F27F26;                     // type:FLOAT.0
	float                            _0xAF42673D;                     // type:FLOAT.0
	float                            _0xB244C421;                     // type:FLOAT.0
	float                            _0x3D425FB3;                     // type:FLOAT.0
	float                            _0xBDE5A7CC;                     // type:FLOAT.0
};

struct CPeltInfo
{
	string                           ShortName;                       // type:STRING.ATNONFINALHASHSTRING
	enum _0x64DB4D65                 Size;                            // type:ENUM.8BIT
};

struct CPersPropScheduleList
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xCDD3005A>        Schedules;                       // type:ARRAY.ATARRAY
};

struct CPersistenceConstants
{
	ushort                           PersistenceDestroyedVehiclesCacheSize; // type:USHORT.0
	ushort                           PersistenceObjectsCacheSize;     // type:USHORT.0
	ushort                           PersistenceCorpsesCacheSizeSpawned; // type:USHORT.0
	ushort                           PersistenceCorpsesCacheSizeToSpawn; // type:USHORT.0
	uint                             PersistenceCorpsesSaveGameSizeBytes; // type:UINT.0
	ushort                           PersistenceScenariosCacheSizeSpawned; // type:USHORT.0
	ushort                           PersistenceScenariosCacheSizeToSpawn; // type:USHORT.0
	ushort                           PersistenceScenariosCacheSizeScriptRequested; // type:USHORT.0
	uint                             PersistenceScenariosSaveGameSizeBytes; // type:UINT.0
	uint                             PersistenceScenariosSaveGameSizeBytesMP; // type:UINT.0
	ushort                           NumHoursToRememberHumanCorpseInTown; // type:USHORT.0
	ushort                           NumHoursToRememberHumanCorpseOnRoad; // type:USHORT.0
	ushort                           NumHoursToRememberHumanCorpseCloseToRoad; // type:USHORT.0
	ushort                           NumHoursToRememberHumanCorpseBetweenTownAndWilderness; // type:USHORT.0
	ushort                           NumHoursToRememberHumanCorpseInWilderness; // type:USHORT.0
	ushort                           NumHoursToRememberAnimalCorpseInTown; // type:USHORT.0
	ushort                           NumHoursToRememberAnimalCorpseOnRoad; // type:USHORT.0
	ushort                           NumHoursToRememberAnimalCorpseCloseToRoad; // type:USHORT.0
	ushort                           NumHoursToRememberAnimalCorpseBetweenTownAndWilderness; // type:USHORT.0
	ushort                           NumHoursToRememberAnimalCorpseInWilderness; // type:USHORT.0
	ushort                           PedLeftVehicleTrackAfterTimeMinutes; // type:USHORT.0
	float                            fDistanceForCorpseSpawn;         // type:FLOAT.0
	float                            fDistanceForCorpseRemoval;       // type:FLOAT.0
	float                            fExtraDistanceForMovingCorpseRelease; // type:FLOAT.0
	float                            fMaxVelocityToConsiderCorpseStable; // type:FLOAT.0
	ushort                           NumHoursToRememberVehicleInTown; // type:USHORT.0
	ushort                           NumHoursToRememberVehicleOnRoad; // type:USHORT.0
	ushort                           NumHoursToRememberVehicleCloseToRoad; // type:USHORT.0
	ushort                           NumHoursToRememberVehicleBetweenTownAndWilderness; // type:USHORT.0
	ushort                           NumHoursToRememberVehicleInWilderness; // type:USHORT.0
	float                            fDistanceForVehicleSpawn;        // type:FLOAT.0
	float                            fDistanceForVehicleRemoval;      // type:FLOAT.0
	ushort                           NumHoursToRememberDoorLockPicked; // type:USHORT.0
	ushort                           NumHoursToRememberDoorKicked;    // type:USHORT.0
	ushort                           NumHoursToRememberDoorShot;      // type:USHORT.0
	ushort                           NumHoursToRememberDoorBlownOpen; // type:USHORT.0
	float                            fDistanceForObjectSpawn;         // type:FLOAT.0
	float                            fDistanceForObjectRemoval;       // type:FLOAT.0
	ushort                           NumHoursToRememberScenarioProp;  // type:USHORT.0
	ushort                           NumHoursToRememberScenarioPropMP; // type:USHORT.0
	ushort                           NumSecondsBetweenManualCacheSavesMP; // type:USHORT.0
	float                            fDistanceForScenarioPropSpawn;   // type:FLOAT.0
	float                            fDistanceForScenarioPropRemoval; // type:FLOAT.0
	float                            fDistanceForScenarioHideSpawn;   // type:FLOAT.0
	float                            fDistanceForScenarioHideRemoval; // type:FLOAT.0
	float                            fMinDistanceToClosestTrainTrackHuman; // type:FLOAT.0
	float                            fDistanceToClosestTownToConsiderWildernessHuman; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderOnRoadHuman; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderWildernessHuman; // type:FLOAT.0
	float                            fMinDistanceToClosestTrainTrackAnimal; // type:FLOAT.0
	float                            fDistanceToClosestTownToConsiderWildernessAnimal; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderOnRoadAnimal; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderWildernessAnimal; // type:FLOAT.0
	float                            fMinDistanceToClosestTrainTrackVehicle; // type:FLOAT.0
	float                            fDistanceToClosestTownToConsiderWildernessVehicle; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderOnRoadVehicle; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderWildernessVehicle; // type:FLOAT.0
	float                            fMinDistanceToClosestTrainTrackObject; // type:FLOAT.0
	float                            fDistanceToClosestTownToConsiderWildernessObject; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderOnRoadObject; // type:FLOAT.0
	float                            fDistanceToClosestRoadToConsiderWildernessObject; // type:FLOAT.0
	float                            fMaxSizeForMapDefFileToCauseDependency; // type:FLOAT.0
	float                            fMinZValueForMapDefFileToCauseDependency; // type:FLOAT.0
	float                            fAgingPeriodMultiplierForLegendaryAnimals; // type:FLOAT.0
	float                            fDistanceToConsiderLegendaryAnimalsAbandoned; // type:FLOAT.0
	int                              NumHoursToConsiderLendaryAnimalsAbandoned; // type:INT.0
	ushort                           _0xCE8F0194;                     // type:USHORT.0
	array<struct _0x34BD518D>        birdsAndFishTrackList;           // type:ARRAY.ATARRAY
	array<struct _0x7ACDBEC8>        criticalRansackModelNames;       // type:ARRAY.ATARRAY
};

struct CPersistentCharacterInfoManager
{
	struct _0x1CCA2C29               PerscharTuning;                  // type:STRUCT.STRUCTURE
	array<struct _0x44B0D705>        Volumes;                         // type:ARRAY.ATARRAY
	array<struct _0xF6F994E2>        Routes;                          // type:ARRAY.ATARRAY
	array<struct _0xAF950A72>        RevivedVfxs;                     // type:ARRAY.ATARRAY
	array<struct _0xF4C3FEF5>        ReviveTimes;                     // type:ARRAY.ATARRAY
	array<struct _0xC2B406F6>        PersistentCharacterGroups;       // type:ARRAY.ATARRAY
	array<struct _0x691F01D2>        PersistentCharacters;            // type:ARRAY.ATARRAY
	string                           SchedulesAssetsPath;             // type:STRING.ATSTRING
};

struct CPersonaEnumValuesMap
{
	map<string, uchar>               Map;                             // type:MAP.ATBINARYMAP
};

struct CPickupActionAudio : CPickupActionData
{
	string                           AudioRef;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CPickupActionData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CPickupActionGroup : CPickupActionData
{
	array<string, 10>                Actions;                         // type:ARRAY.ATFIXEDARRAY
};

struct CPickupActionPadShake : CPickupActionData
{
	float                            Intensity;                       // type:FLOAT.0
	int                              Duration;                        // type:INT.0
};

struct CPickupActionVfx : CPickupActionData
{
	string                           Vfx;                             // type:STRING.MEMBER
};

struct CPickupData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x28B8378B>         PickupFlags;                     // type:BITSET.32BIT
	float                            GlowRange;                       // type:FLOAT.0
	string                           HumanNameHash;                   // type:STRING.ATNONFINALHASHSTRING
	vec3                             AttachmentOffset;                // type:VECTOR3.0
	vec3                             AttachmentRotation;              // type:VECTOR3.0
	string                           Model;                           // type:STRING.ATNONFINALHASHSTRING
	float                            GenerationRange;                 // type:FLOAT.0
	float                            RegenerationTime;                // type:FLOAT.0
	float                            CollectionRadius;                // type:FLOAT.0
	float                            CollectionRadiusFirstPerson;     // type:FLOAT.0
	float                            Scale;                           // type:FLOAT.0
	string                           LoopingAudioRef;                 // type:STRING.ATNONFINALHASHSTRING
	float                            GlowRed;                         // type:FLOAT.0
	float                            GlowGreen;                       // type:FLOAT.0
	float                            GlowBlue;                        // type:FLOAT.0
	float                            GlowIntensity;                   // type:FLOAT.0
	float                            DarkGlowIntensity;               // type:FLOAT.0
	float                            MPGlowIntensity;                 // type:FLOAT.0
	float                            MPDarkGlowIntensity;             // type:FLOAT.0
	array<string, 10>                OnFootPickupActions;             // type:ARRAY.ATFIXEDARRAY
	array<string, 10>                InCarPickupActions;              // type:ARRAY.ATFIXEDARRAY
	array<string, 10>                OnShotPickupActions;             // type:ARRAY.ATFIXEDARRAY
	array<string, 10>                Rewards;                         // type:ARRAY.ATFIXEDARRAY
	enum eAnimBoneTag                AttachmentBone;                  // type:ENUM.32BIT
	enum eExplosionTag               ExplosionTag;                    // type:ENUM.32BIT
	string                           BreakApartModel;                 // type:STRING.ATNONFINALHASHSTRING
};

struct CPickupDataManager
{
	array<struct CPickupData>           pickupData;                      // type:ARRAY.ATARRAY
	array<struct CPickupActionData>     actionData;                      // type:ARRAY.ATARRAY
	array<struct CPickupRewardData>     rewardData;                      // type:ARRAY.ATARRAY
};

struct CPickupRewardAmmo : CPickupRewardData
{
	string                           AmmoRef;                         // type:STRING.ATNONFINALHASHSTRING
	int                              AmountMin;                       // type:INT.0
	int                              AmountMax;                       // type:INT.0
	string                           SatchelItem;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CPickupRewardArmour : CPickupRewardData
{
	int                              Armour;                          // type:INT.0
};

struct CPickupRewardBulletMP : CPickupRewardData
{
};

struct CPickupRewardData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CPickupRewardFireworkMP : CPickupRewardData
{
};

struct CPickupRewardGrenadeLauncherMP : CPickupRewardData
{
};

struct CPickupRewardHealth : CPickupRewardData
{
	int                              Health;                          // type:INT.0
};

struct CPickupRewardHealthVariable : CPickupRewardData
{
};

struct CPickupRewardMissileMP : CPickupRewardData
{
};

struct CPickupRewardMoneyFixed : CPickupRewardData
{
	int                              Money;                           // type:INT.0
};

struct CPickupRewardMoneyVariable : CPickupRewardData
{
};

struct CPickupRewardRobbedSatchelItem : CPickupRewardData
{
};

struct CPickupRewardSpecialAbility : CPickupRewardData
{
	float                            SpecialAbilityAmt;               // type:FLOAT.0
};

struct CPickupRewardVehicleFix : CPickupRewardData
{
};

struct CPickupRewardWeapon : CPickupRewardData
{
	string                           SatchelItem;                     // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponRef;                       // type:STRING.ATNONFINALHASHSTRING
	bool                             Equip;                           // type:BOOL.0
};

struct CPlantInfo
{
	string                           Tag;                             // type:STRING.ATNONFINALHASHSTRING
	uint                             Color;                           // type:UINT.1
	uint                             GroundColor;                     // type:UINT.1
	float16                          ScaleXY;                         // type:FLOAT16.0
	float16                          ScaleZ;                          // type:FLOAT16.0
	float16                          ScaleVariationXY;                // type:FLOAT16.0
	float16                          ScaleVariationZ;                 // type:FLOAT16.0
	float16                          ScaleRangeXYZ;                   // type:FLOAT16.0
	float16                          ScaleRangeZ;                     // type:FLOAT16.0
	float16                          MicroMovementsScaleH;            // type:FLOAT16.0
	float16                          MicroMovementsScaleV;            // type:FLOAT16.0
	float16                          MicroMovementsFreqH;             // type:FLOAT16.0
	float16                          MicroMovementsFreqV;             // type:FLOAT16.0
	float16                          WindBendScale;                   // type:FLOAT16.0
	float16                          WindBendVariation;               // type:FLOAT16.0
	float16                          CollisionRadius;                 // type:FLOAT16.0
	float16                          Density;                         // type:FLOAT16.0
	float16                          DensityRange;                    // type:FLOAT16.0
	uchar                            ModelId;                         // type:UCHAR.0
	uchar                            TextureId;                       // type:UCHAR.0
	bitset<enum _0x4A55CE69>         Flags;                           // type:BITSET.16BIT
	uchar                            Intensity;                       // type:UCHAR.0
	uchar                            IntensityVar;                    // type:UCHAR.0
};

struct CPlayerInfo__Tunables : CTuning
{
	struct _0xB0E844D3                                   EnemyCharging;                   // type:STRUCT.STRUCTURE
	struct _0xAA6E4C18                                   CombatLoitering;                 // type:STRUCT.STRUCTURE
	struct _0xC4998533                                   _0xF3A936B2;                     // type:STRUCT.STRUCTURE
	struct _0xF82D18CB                                   _0xBF49AFD3;                     // type:STRUCT.STRUCTURE
	struct _0xAE8211EF                                   Approaching;                     // type:STRUCT.STRUCTURE
	struct _0xE16366F7                                   _0x2F773F27;                     // type:STRUCT.STRUCTURE
	struct _0x10F2D5E9                                   _0x0A3B33AE;                     // type:STRUCT.STRUCTURE
	struct _0xEEA88CEA                                   _0x011C3ED9;                     // type:STRUCT.STRUCTURE
	struct _0xAF0CC4D6                                   _0xEBF079B7;                     // type:STRUCT.STRUCTURE
	struct _0x173720AE                                   _0xBE0D018B;                     // type:STRUCT.STRUCTURE
	struct _0xDD7D2950                                   _0xF4766793;                     // type:STRUCT.STRUCTURE
	struct _0xCC7B0EE2                                   _0x6521CAE2;                     // type:STRUCT.STRUCTURE
	array<struct _0x5C60A3D4, 3>                         _0xCE659E40;                     // type:ARRAY.ATFIXEDARRAY
	struct _0x86CED2F3                                   PostFX;                          // type:STRUCT.STRUCTURE
	float                                                MinVehicleCollisionDamageScale;  // type:FLOAT.0
	float                                                MaxVehicleCollisionDamageScale;  // type:FLOAT.0
	float                                                MaxAngleConsidered;              // type:FLOAT.0
	float                                                MinDotToConsiderVehicleValid;    // type:FLOAT.0
	float                                                MaxDistToConsiderVehicleValid;   // type:FLOAT.0
	float                                                SprintReplenishFinishedPercentage; // type:FLOAT.0
	float                                                _0xE059ECEB;                     // type:FLOAT.0
	float                                                SprintReplenishRateMultiplier;   // type:FLOAT.0
	float                                                SprintReplenishRateMultiplierBike; // type:FLOAT.0
	float                                                MaxWorldLimitsPlayerX;           // type:FLOAT.0
	float                                                MaxWorldLimitsPlayerY;           // type:FLOAT.0
	float                                                MinWorldLimitsPlayerX;           // type:FLOAT.0
	float                                                MinWorldLimitsPlayerY;           // type:FLOAT.0
	float                                                MaxTimeToTrespassWhileSwimmingBeforeDeath; // type:FLOAT.0
	float                                                MovementAwayWeighting;           // type:FLOAT.0
	float                                                DistanceWeighting;               // type:FLOAT.0
	float                                                HeadingWeighting;                // type:FLOAT.0
	float                                                CameraWeighting;                 // type:FLOAT.0
	float                                                DistanceWeightingNoStick;        // type:FLOAT.0
	float                                                HeadingWeightingNoStick;         // type:FLOAT.0
	float                                                OnFireWeightingMult;             // type:FLOAT.0
	float                                                BikeMaxRestoreDuration;          // type:FLOAT.0
	float                                                BikeMinRestoreDuration;          // type:FLOAT.0
	float                                                BicycleDepletionMinMult;         // type:FLOAT.0
	float                                                BicycleDepletionMidMult;         // type:FLOAT.0
	float                                                BicycleDepletionMaxMult;         // type:FLOAT.0
	float                                                BicycleMinDepletionLimit;        // type:FLOAT.0
	float                                                BicycleMidDepletionLimit;        // type:FLOAT.0
	float                                                BicycleMaxDepletionLimit;        // type:FLOAT.0
	uint                                                 TimeBetweenSwitchToClearTasks;   // type:UINT.0
	uint                                                 TimeBetweenShoutTargetPosition;  // type:UINT.0
	uint                                                 _0x1CC1BDBB;                     // type:UINT.0
	string                                               TrespassGuardModelName;          // type:STRING.ATNONFINALHASHSTRING
	bool                                                 GuardWorldExtents;               // type:BOOL.0
	array<struct CPlayerInfo__sSprintControlData, 9>     SprintControlData;               // type:ARRAY.ATFIXEDARRAY
	array<struct _0xB3A6BF23, 14>                        StaminaActionData;               // type:ARRAY.ATFIXEDARRAY
	array<struct CPlayerInfo__sPlayerStatInfo, 8>        PlayerStatInfos;                 // type:ARRAY.ATFIXEDARRAY
	struct _0x4540CF82                                   _0xC8335D76;                     // type:STRUCT.STRUCTURE
	float                                                _0xDB2473D0;                     // type:FLOAT.0
	float                                                _0x20BE8CF5;                     // type:FLOAT.0
	float                                                _0xF90C3D7D;                     // type:FLOAT.0
	float                                                _0xFC919C27;                     // type:FLOAT.0
	float                                                _0x7330EEDC;                     // type:FLOAT.0
	float                                                _0x2709F894;                     // type:FLOAT.0
	float                                                _0x5D5F7EDE;                     // type:FLOAT.0
	float                                                _0xC230E8C1;                     // type:FLOAT.0
	float                                                _0x33440F0F;                     // type:FLOAT.0
	float                                                _0x11CA1D82;                     // type:FLOAT.0
	float                                                _0xD5C83E9F;                     // type:FLOAT.0
	float                                                _0x69A6F7E3;                     // type:FLOAT.0
	bool                                                 _0x825B39B2;                     // type:BOOL.0
	float                                                _0x396C21CF;                     // type:FLOAT.0
	float                                                _0x4A0BF9B5;                     // type:FLOAT.0
	bool                                                 _0x78302871;                     // type:BOOL.0
	float                                                _0x8A64DEC5;                     // type:FLOAT.0
	uint                                                 _0x13DE5A7C;                     // type:UINT.0
	float                                                _0x7B571A62;                     // type:FLOAT.0
	float                                                _0x8EF91E0A;                     // type:FLOAT.0
	float                                                _0x882E5481;                     // type:FLOAT.0
	float                                                _0x8018456C;                     // type:FLOAT.0
	float                                                _0x3B43DA1D;                     // type:FLOAT.0
	float                                                _0x6F4DCD7B;                     // type:FLOAT.0
	float                                                _0xA1FCC887;                     // type:FLOAT.0
	float                                                _0x1EDA79CA;                     // type:FLOAT.0
	uint                                                 _0xFACEECA0;                     // type:UINT.0
	uint                                                 _0x08F804D7;                     // type:UINT.0
	float                                                _0x5026F898;                     // type:FLOAT.0
	float                                                _0xB856B3DE;                     // type:FLOAT.0
	float                                                _0x966FF0AD;                     // type:FLOAT.0
	float                                                _0x0B6A0F92;                     // type:FLOAT.0
	float                                                _0x4C583EC4;                     // type:FLOAT.0
	float                                                _0x22E2922A;                     // type:FLOAT.0
	float                                                _0x7AD72E5C;                     // type:FLOAT.0
	float                                                _0x5EAD82B7;                     // type:FLOAT.0
	float                                                _0x090D7BC8;                     // type:FLOAT.0
	float                                                _0x2F02D09E;                     // type:FLOAT.0
	float                                                _0x632E7B94;                     // type:FLOAT.0
	float                                                MinDotToTalk;                    // type:FLOAT.0
	float                                                _0x61C236C2;                     // type:FLOAT.0
	float                                                _0xDB7F765D;                     // type:FLOAT.0
	float                                                _0x82BADAB4;                     // type:FLOAT.0
	float                                                _0x8771CC78;                     // type:FLOAT.0
	uint                                                 _0xEC4FBEF3;                     // type:UINT.0
	uint                                                 _0x52F0B19D;                     // type:UINT.0
	uint                                                 _0x7EEBF429;                     // type:UINT.0
	uint                                                 _0x37ED8150;                     // type:UINT.0
	uint                                                 _0x832C66FD;                     // type:UINT.0
	uint                                                 _0x9940EBDC;                     // type:UINT.0
	uint                                                 _0x0CECC585;                     // type:UINT.0
	uint                                                 _0x1B10C843;                     // type:UINT.0
	uint                                                 _0xB9E49E99;                     // type:UINT.0
	uint                                                 _0x44D0CDE2;                     // type:UINT.0
	uint                                                 _0x7AA0E891;                     // type:UINT.0
	uint                                                 _0x5B1FD948;                     // type:UINT.0
	uint                                                 _0x095C9DA2;                     // type:UINT.0
	uint                                                 _0x5B61378E;                     // type:UINT.0
	bool                                                 _0x49F32F79;                     // type:BOOL.0
	uint                                                 _0x4B513753;                     // type:UINT.0
	uint                                                 _0x4435F56E;                     // type:UINT.0
	uint                                                 _0x9537A95F;                     // type:UINT.0
	uint                                                 _0x9BB15E61;                     // type:UINT.0
	uint                                                 _0xD1BB0DBF;                     // type:UINT.0
	uint                                                 _0xA02951B5;                     // type:UINT.0
	uint                                                 _0xFFFB3D97;                     // type:UINT.0
	uint                                                 _0x43DED8F2;                     // type:UINT.0
	uint                                                 _0x6C183685;                     // type:UINT.0
	uint                                                 _0x814AA0F7;                     // type:UINT.0
	uint                                                 _0x01A53755;                     // type:UINT.0
	uint                                                 _0xA8CB25C0;                     // type:UINT.0
	uint                                                 _0x9487D653;                     // type:UINT.0
	float                                                _0x502785E1;                     // type:FLOAT.0
	bool                                                 _0x88614493;                     // type:BOOL.0
};

struct CPlayerInfo__sPlayerStatInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            MinStaminaDuration;              // type:FLOAT.0
	float                            MaxStaminaDuration;              // type:FLOAT.0
	float                            MinHoldBreathDuration;           // type:FLOAT.0
	float                            MaxHoldBreathDuration;           // type:FLOAT.0
	float                            MinWheelieAbility;               // type:FLOAT.0
	float                            MaxWheelieAbility;               // type:FLOAT.0
	float                            MinPlaneControlAbility;          // type:FLOAT.0
	float                            MaxPlaneControlAbility;          // type:FLOAT.0
	float                            MinPlaneDamping;                 // type:FLOAT.0
	float                            MaxPlaneDamping;                 // type:FLOAT.0
	float                            MinHeliDamping;                  // type:FLOAT.0
	float                            MaxHeliDamping;                  // type:FLOAT.0
	float                            MinFallHeight;                   // type:FLOAT.0
	float                            MaxFallHeight;                   // type:FLOAT.0
	float                            MinDiveHeight;                   // type:FLOAT.0
	float                            MaxDiveHeight;                   // type:FLOAT.0
	float                            DiveRampPow;                     // type:FLOAT.0
	string                           _0xB5B9143B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE8DC5DD8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCB612901;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CPlayerInfo__sSprintControlData
{
	float                            TapAdd;                          // type:FLOAT.0
	float                            HoldSub;                         // type:FLOAT.0
	float                            ReleaseSub;                      // type:FLOAT.0
	float                            Threshhold;                      // type:FLOAT.0
	float                            MaxLimit;                        // type:FLOAT.0
	float                            ResultMult;                      // type:FLOAT.0
};

struct CPlayerPedSaveStructure : CBaseSaveObject
{
	uint                                                                  GamerIdHigh;                     // type:UINT.0
	uint                                                                  GamerIdLow;                      // type:UINT.0
	ushort                                                                CarDensityForCurrentZone;        // type:USHORT.0
	ushort                                                                nLastBustMessageNumber;          // type:USHORT.0
	uint                                                                  ModelHashKey;                    // type:UINT.0
	vec3                                                                  Position;                        // type:VECTOR3.0
	float                                                                 fHealth;                         // type:FLOAT.0
	int                                                                   _0xC5BB9C8C;                     // type:INT.0
	int                                                                   _0xD2C6A416;                     // type:INT.0
	float                                                                 _0x4802ABF7;                     // type:FLOAT.0
	float                                                                 _0x45B925E3;                     // type:FLOAT.0
	float                                                                 _0x9F8E2FA0;                     // type:FLOAT.0
	uint                                                                  nCurrentWeaponSlot;              // type:UINT.0
	map<string, struct CPlayerPedSaveStructure__SPedCompPropConvData>     ComponentVariations;             // type:MAP.ATBINARYMAP
	map<string, uchar>                                                    TextureVariations;               // type:MAP.ATBINARYMAP
	array<struct _0x5A051249>                                             _0x80F2B967;                     // type:ARRAY.ATARRAY
	int                                                                   _0x1AB99A0D;                     // type:INT.0
	array<struct _0x208A10C5, 4>                                          _0x1B02CAF4;                     // type:ARRAY.ATFIXEDARRAY
};

struct CPlayerPedSaveStructure__CPlayerDecorationStruct
{
	vec4                             UVCoords;                        // type:VECTOR4.0
	vec2                             Scale;                           // type:VECTOR2.0
	uint                             TxdHash;                         // type:UINT.0
	uint                             TxtHash;                         // type:UINT.0
	uchar                            Type;                            // type:UCHAR.0
	uchar                            Zone;                            // type:UCHAR.0
	uchar                            Alpha;                           // type:UCHAR.0
	uchar                            FixedFrame;                      // type:UCHAR.0
	float                            Age;                             // type:FLOAT.0
	uchar                            FlipUVFlags;                     // type:UCHAR.0
	uint                             SourceNameHash;                  // type:UINT.0
};

struct CPlayerPedSaveStructure__SPedCompPropConvData
{
	uint                             hash;                            // type:UINT.0
	uint                             data;                            // type:UINT.0
};

struct CPlayerPedTargeting__Tunables : CTuning
{
	float                                fTargetableDistance;             // type:FLOAT.0
	float                                fTargetThreatOverride;           // type:FLOAT.0
	float                                _0x99CBA017;                     // type:FLOAT.0
	float                                _0x2CB1C025;                     // type:FLOAT.0
	float                                _0x2505DDE9;                     // type:FLOAT.0
	bool                                 _0x90253F39;                     // type:BOOL.0
	float                                _0x3901CB79;                     // type:FLOAT.0
	float                                _0x56CF32FF;                     // type:FLOAT.0
	float                                MeleeLostLOSBreakTime;           // type:FLOAT.0
	float                                _0xEF4E4DB6;                     // type:FLOAT.0
	float                                _0x48D786AD;                     // type:FLOAT.0
	float                                _0x11F86F1A;                     // type:FLOAT.0
	float                                ArrestHardLockDistance;          // type:FLOAT.0
	float                                _0x422326C9;                     // type:FLOAT.0
	float                                _0x3BE5322C;                     // type:FLOAT.0
	float                                _0x6F68CB21;                     // type:FLOAT.0
	float                                _0xC33B035D;                     // type:FLOAT.0
	float                                _0x1B61264E;                     // type:FLOAT.0
	float                                _0xC2B43A0F;                     // type:FLOAT.0
	float                                _0xA864C6DB;                     // type:FLOAT.0
	float                                _0xBA74C93F;                     // type:FLOAT.0
	float                                _0xE5D0772D;                     // type:FLOAT.0
	float                                _0xBCCEDF89;                     // type:FLOAT.0
	uint                                 _0x1B7E0384;                     // type:UINT.0
	uint                                 TimeToAllowCachedStickInputForMelee; // type:UINT.0
	uint                                 _0xBE2A69F4;                     // type:UINT.0
	uint                                 _0x825C8B49;                     // type:UINT.0
	uint                                 _0x2FD17A4F;                     // type:UINT.0
	uint                                 _0x42CBDB69;                     // type:UINT.0
	bool                                 DoAynchronousProbesWhenFindingFreeAimAssistTarget; // type:BOOL.0
	bool                                 AllowDriverLockOnToAmbientPeds;  // type:BOOL.0
	bool                                 AllowDriverLockOnToAmbientPedsInSP; // type:BOOL.0
	bool                                 DisplayAimAssistIntersections;   // type:BOOL.0
	bool                                 _0x8545D895;                     // type:BOOL.0
	bool                                 DisplayAimAssistCurves;          // type:BOOL.0
	bool                                 _0x515D2D6B;                     // type:BOOL.0
	bool                                 DisplayLockOnDistRanges;         // type:BOOL.0
	bool                                 DisplayLockOnAngularRanges;      // type:BOOL.0
	bool                                 DisplaySoftLockDebug;            // type:BOOL.0
	bool                                 DebugLockOnTargets;              // type:BOOL.0
	bool                                 _0x5B710621;                     // type:BOOL.0
	bool                                 DisplayFreeAimTargetDebug;       // type:BOOL.0
	bool                                 UseRagdollTargetIfNoAssistTarget; // type:BOOL.0
	bool                                 UseReticuleSlowDownStrafeClamp;  // type:BOOL.0
	bool                                 _0x5D9935B4;                     // type:BOOL.0
	bool                                 _0x6A238B99;                     // type:BOOL.0
	bool                                 _0x7DB08F85;                     // type:BOOL.0
	bool                                 _0x98BA3B6D;                     // type:BOOL.0
	bool                                 _0x5200D2C9;                     // type:BOOL.0
	bool                                 _0x4CA24A96;                     // type:BOOL.0
	bool                                 _0x54469514;                     // type:BOOL.0
	float                                _0xAA3407DE;                     // type:FLOAT.0
	float                                _0x663C6D47;                     // type:FLOAT.0
	float                                _0x47CBB12D;                     // type:FLOAT.0
	float                                _0xAC808622;                     // type:FLOAT.0
	float                                _0xF4F17E9F;                     // type:FLOAT.0
	float                                _0x6E46F391;                     // type:FLOAT.0
	float                                _0x99ED8F8B;                     // type:FLOAT.0
	float                                _0x75CFAE23;                     // type:FLOAT.0
	float                                _0x36FC7A39;                     // type:FLOAT.0
	float                                _0xEA07E299;                     // type:FLOAT.0
	float                                _0x1D635155;                     // type:FLOAT.0
	float                                _0x97F87162;                     // type:FLOAT.0
	float                                _0x5BEEF560;                     // type:FLOAT.0
	float                                _0xD5106252;                     // type:FLOAT.0
	float                                _0xDA70D8F0;                     // type:FLOAT.0
	float                                _0xB113A854;                     // type:FLOAT.0
	float                                _0x1D5975EA;                     // type:FLOAT.0
	struct _0x1BB293EB                   _0x5EB59393;                     // type:STRUCT.STRUCTURE
	struct _0x1BB293EB                   _0x2479F1EF;                     // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     EasyTargettingDifficultyInfo;    // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     NormalTargettingDifficultyInfo;  // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     _0xA97B7B66;                     // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     _0x37A6478A;                     // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     _0x3EA988FF;                     // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     _0x6614FDC8;                     // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     _0xE0B1B59E;                     // type:STRUCT.STRUCTURE
	struct CTargettingDifficultyInfo     _0x5FA8302D;                     // type:STRUCT.STRUCTURE
};

struct CPlayerSpecialAbilityManager
{
	array<struct _0xF5E8F50C>        specialAbilities;                // type:ARRAY.ATARRAY
	struct _0x983F0276               _0x4051ED30;                     // type:STRUCT.STRUCTURE
	struct _0x0BA9FFBD               _0xBA443F8A;                     // type:STRUCT.STRUCTURE
	enum eFadeCurveType              fadeCurveType;                   // type:ENUM.32BIT
	float                            halfSigmoidConstant;             // type:FLOAT.0
	float                            sigmoidConstant;                 // type:FLOAT.0
	float                            fadeInTime;                      // type:FLOAT.0
	float                            fadeOutTime;                     // type:FLOAT.0
};

struct CPlayerSwitchEstablishingShotMetadata
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           OverriddenShotForFirstPersonOnFoot; // type:STRING.ATNONFINALHASHSTRING
	vec3                             Position;                        // type:VECTOR3.0
	vec3                             Orientation;                     // type:VECTOR3.0
	vec3                             CatchUpPosition;                 // type:VECTOR3.0
	vec3                             CatchUpOrientation;              // type:VECTOR3.0
	float                            Fov;                             // type:FLOAT.0
	float                            CatchUpFov;                      // type:FLOAT.0
	float                            _0xB14688C8;                     // type:FLOAT.0
	float                            _0x12102792;                     // type:FLOAT.0
	uint                             HoldDuration;                    // type:UINT.0
	uint                             InterpolateOutDuration;          // type:UINT.0
	bool                             _0xE5F1472D;                     // type:BOOL.0
	bool                             ShouldIntepolateToCatchUp;       // type:BOOL.0
	bool                             ShouldInhibitFirstPersonOnFoot;  // type:BOOL.0
};

struct CPlayerSwitchEstablishingShotMetadataStore
{
	array<struct CPlayerSwitchEstablishingShotMetadata>     ShotList;                        // type:ARRAY.ATARRAY
};

struct CPlayerSwitchInterface
{
	array<struct _0xD84BED2A, 4>     switchSettings;                  // type:ARRAY.MEMBER
};

struct CPoliceBoatDispatch__Tunables : CTuning
{
	float                            TimeBetweenSpawnAttempts;        // type:FLOAT.0
};

struct CPopGroupList
{
	array<struct CPopulationGroup>     pedGroups;                       // type:ARRAY.ATARRAY
	array<struct _0xE8850EF2>          vehGroups;                       // type:ARRAY.ATARRAY
	array<struct _0xCA042935>          _0x61348292;                     // type:ARRAY.ATARRAY
};

struct CPopZoneData
{
	map<string, vec4>                _0x685D1C7E;                     // type:MAP.ATBINARYMAP
	array<struct _0xC9F31B66>        _0x8A98CE5C;                     // type:ARRAY.ATARRAY
	array<struct _0x8277295E>        _0xBFB5A18E;                     // type:ARRAY.ATARRAY
	array<struct _0x43A66EF7>        _0xB6AF3D36;                     // type:ARRAY.ATARRAY
	array<struct _0x4AF8985C>        _0x048AFA02;                     // type:ARRAY.ATARRAY
	array<struct _0xAAD79D83>        _0x6F00E506;                     // type:ARRAY.ATARRAY
	array<struct _0x532765FF>        _0xABA06698;                     // type:ARRAY.ATARRAY
	array<struct _0x3F76DB61>        _0x96A3F892;                     // type:ARRAY.ATARRAY
	array<struct _0x45964312>        _0xC728B978;                     // type:ARRAY.ATARRAY
	array<struct _0xE7744814>        _0xF58D3131;                     // type:ARRAY.ATARRAY
	array<struct _0x59CADCC4>        _0x6B704F16;                     // type:ARRAY.ATARRAY
	array<struct _0x10ED8FD9>        _0x9ED98995;                     // type:ARRAY.ATARRAY
	array<struct _0x3C3BA0DB>        _0x4D4D62E2;                     // type:ARRAY.ATARRAY
	array<struct _0x1607545A>        _0x3EBC92AB;                     // type:ARRAY.ATARRAY
	array<struct _0x7DA685CB>        _0xF333EBBF;                     // type:ARRAY.ATARRAY
	array<struct _0xAF013D30>        _0xE1F5DC7C;                     // type:ARRAY.ATARRAY
	array<struct _0x3F072A48>        _0xCFBCE3C8;                     // type:ARRAY.ATARRAY
	array<struct _0x029FF69C>        _0x9DA03278;                     // type:ARRAY.ATARRAY
	array<struct _0x436D7D1C>        _0x5D5FFE41;                     // type:ARRAY.ATARRAY
	array<struct _0x8DF2CCCB>        _0x09BFF28F;                     // type:ARRAY.ATARRAY
	array<struct _0xFCB2D8A8>        _0x5AFDCBD5;                     // type:ARRAY.ATARRAY
};

struct CPopZoneSpawnerManager__Tunables : CTuning
{
	float                            PopZoneNearDistance;             // type:FLOAT.0
	float                            WeigthPriorityLow;               // type:FLOAT.0
	float                            WeigthPriorityMedium;            // type:FLOAT.0
	float                            WeigthPriorityHigh;              // type:FLOAT.0
	float                            WeigthPriorityVeryHigh;          // type:FLOAT.0
	float                            Flocks100m2DensityVeryLow;       // type:FLOAT.0
	float                            Flocks100m2DensityLow;           // type:FLOAT.0
	float                            Flocks100m2DensityMedium;        // type:FLOAT.0
	float                            Flocks100m2DensityHigh;          // type:FLOAT.0
	float                            Flocks100m2DensityVeryHigh;      // type:FLOAT.0
	enum _0x5AEAEEC8                 NoSpawnFlags;                    // type:ENUM.32BIT
	int                              NoSpawnAfterNumKills;            // type:INT.0
	float                            NoSpawnAfterNumSeconds;          // type:FLOAT.0
	float                            NoSpawnHowLongSeconds;           // type:FLOAT.0
	enum _0x5AEAEEC8                 NoSpawnAfterCombatFlags;         // type:ENUM.32BIT
	float                            NoSpawnAfterCombatSeconds;       // type:FLOAT.0
	float                            _0xAD8BBFDE;                     // type:FLOAT.0
	float                            _0xA8F295B7;                     // type:FLOAT.0
	string                           _0x9FABD647;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xB977594A;                     // type:UINT.0
	string                           DefaultSpawnRanges;              // type:STRING.ATNONFINALHASHSTRING
};

struct CPopulationGroup
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xE5A7D184>        models;                          // type:ARRAY.ATARRAY
	bitset<enum _0xF98BEBEE>         flags;                           // type:BITSET.32BIT
	string                           AIMemoryGroup;                   // type:STRING.ATNONFINALHASHSTRING
};

struct CPotentialCrimeWitness__Tunables : CTuning
{
	uint                             UpdateInterval;                  // type:UINT.0
	uint                             Lifetime;                        // type:UINT.0
	float                            BaseScore;                       // type:FLOAT.0
};

struct CPredatorScenarioArray
{
	string                                    ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
	float                                     defaultOffsetDistance;           // type:FLOAT.0
	uint                                      _0x316642C4;                     // type:UINT.0
	array<struct CPredatorScenarioLayout>     Scenarios;                       // type:ARRAY.ATARRAY
};

struct CPredatorScenarioLayout
{
	string                           Scenario;                        // type:STRING.ATNONFINALHASHSTRING
	float                            OffsetX;                         // type:FLOAT.0
	float                            OffsetY;                         // type:FLOAT.0
};

struct CProceduralInfo
{
	array<struct _0x7FC06F64>          procObjInfos;                    // type:ARRAY.ATARRAY
	array<struct CPlantInfo>           plantInfos;                      // type:ARRAY.ATARRAY
	array<struct _0xC74A6405, 255>     procTagTable;                    // type:ARRAY.MEMBER
};

struct CProfileStatDescription : CStatDescription
{
	string                           StatId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           GroupId;                         // type:STRING.ATNONFINALHASHSTRING
	string                           CategoryId;                      // type:STRING.ATNONFINALHASHSTRING
	uchar                            flushPriority;                   // type:UCHAR.0
};

struct CPropObjectInfo
{
	vec3V                            _0xDE7E7691;                     // type:VEC3V.0
	vec3V                            PropOriginRotation;              // type:VEC3V.0
	struct void                      Settings;                        // type:STRUCT.EXTERNAL_NAMED
};

struct CPropObjectInfoManager
{
	map<string, struct _0x3F3EFA4D>         Settings;                        // type:MAP.ATBINARYMAP
	map<string, struct CPropObjectInfo>     ObjectModelConfigs;              // type:MAP.ATBINARYMAP
	map<string, string>                     RansackPropLabels;               // type:MAP.ATBINARYMAP
};

struct CPropScenarioPointAttachments
{
	map<string, struct _0x89085001>     ScenarioPointMap;                // type:MAP.ATBINARYMAP
	map<string, array<uint64>>          ConditionalAnimMappings;         // type:MAP.ATBINARYMAP
};

struct CPropSetPlacement
{
	array<struct _0x3264F1EC>        PropPlacementOverrides;          // type:ARRAY.ATARRAY
};

struct CPropSetScenarioPoints
{
	map<string, struct _0x0D943E01>     PropSetMap;                      // type:MAP.ATBINARYMAP
	map<string, array<uint64>>          ConditionalAnimMappings;         // type:MAP.ATBINARYMAP
};

struct CPropertyInfo : CItemInfo
{
};

struct CProvisionInfo : CItemInfo
{
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
	struct CInspectionInfo           InspectionInfo;                  // type:STRUCT.STRUCTURE
	struct CPeltInfo                 PeltInfo;                        // type:STRUCT.STRUCTURE
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
	uint                             MaxNumOnLoot;                    // type:UINT.0
};

struct CPtFxAssetDependencyInfo
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x06B8E19B               _0x808BC012;                     // type:STRUCT.STRUCTURE
	bool                             _0x986DF524;                     // type:BOOL.0
};

struct CPtFxAssetInfoMgr
{
	array<struct CPtFxAssetDependencyInfo>     ptfxAssetDependencyInfos;        // type:ARRAY.ATARRAY
};

struct CQuadrupedCapsuleInfo : CBaseCapsuleInfo
{
	float                            Radius;                          // type:FLOAT.0
	float                            Length;                          // type:FLOAT.0
	float                            ZOffset;                         // type:FLOAT.0
	float                            YOffset;                         // type:FLOAT.0
	float                            ZExtension;                      // type:FLOAT.0
	float                            ProbeYOffsetFront;               // type:FLOAT.0
	float                            ProbeYOffsetRear;                // type:FLOAT.0
	float                            ProbeZOffset;                    // type:FLOAT.0
	float                            PropBlockerRadius;               // type:FLOAT.0
	float                            NeckBoundRadius;                 // type:FLOAT.0
	vec3                             NeckBoundStartOffset;            // type:VECTOR3.0
	vec3                             NeckBoundEndOffset;              // type:VECTOR3.0
	vec3                             LowHealthNeckBoundOffset;        // type:VECTOR3.0
	vec3                             AnimatedNeckBoundOffset;         // type:VECTOR3.0
	float                            TimeOffGroundBeforeRagdoll;      // type:FLOAT.0
	bool                             UseNeckBound;                    // type:BOOL.0
	bool                             UseAnimatedNeckBound;            // type:BOOL.0
	bool                             UseHorseMapCollision;            // type:BOOL.0
	bool                             UseCargoBound;                   // type:BOOL.0
	bool                             UsePlayerExtraBound;             // type:BOOL.0
};

struct CQuiverInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Model;                           // type:STRING.ATNONFINALHASHSTRING
	string                           Outfit;                          // type:STRING.ATNONFINALHASHSTRING
	string                           OutfitTag;                       // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                ArrowBone;                       // type:ENUM.32BIT
	uint                             QuiverCapacity;                  // type:UINT.0
	float                            ClusterRadiusMaxSide;            // type:FLOAT.0
	float                            ClusterRadiusMaxFore;            // type:FLOAT.0
	float                            ClusterRadiusMinSide;            // type:FLOAT.0
	float                            ClusterRadiusMinFore;            // type:FLOAT.0
	float                            ArrowWidthTilt;                  // type:FLOAT.0
	float                            ArrowLengthTilt;                 // type:FLOAT.0
	float                            ArrowSideOffset;                 // type:FLOAT.0
	float                            ArrowForeOffset;                 // type:FLOAT.0
	float                            ArrowDepthOffset;                // type:FLOAT.0
	float                            ArrowSideVariation;              // type:FLOAT.0
	float                            ArrowForeVariation;              // type:FLOAT.0
	float                            ArrowDepthVariation;             // type:FLOAT.0
	float                            ArrowForeRotation;               // type:FLOAT.0
	float                            ArrowSideRotation;               // type:FLOAT.0
	float                            ArrowTwistVariation;             // type:FLOAT.0
	float                            MovementLerpScale;               // type:FLOAT.0
	float                            MovementMinLerpTime;             // type:FLOAT.0
};

struct CRadioStationSaveStructure : CBaseSaveObject
{
	uchar                                                             NewsReportHistoryWriteIndex;     // type:UCHAR.0
	array<uint>                                                       NewsReportHistorySpace;          // type:ARRAY.ATARRAY
	uchar                                                             WeatherReportHistoryWriteIndex;  // type:UCHAR.0
	array<uint>                                                       WeatherReportHistorySpace;       // type:ARRAY.ATARRAY
	uchar                                                             GenericAdvertHistoryWriteIndex;  // type:UCHAR.0
	array<uint>                                                       GenericAdvertHistorySpace;       // type:ARRAY.ATARRAY
	array<uchar>                                                      NewsStoryState;                  // type:ARRAY.ATARRAY
	array<struct CRadioStationSaveStructure__CRadioStationStruct>     RadioStation;                    // type:ARRAY.ATARRAY
};

struct CRadioStationSaveStructure__CRadioStationStruct
{
	float                            ListenTimer;                     // type:FLOAT.0
	string                           RadioStationName;                // type:STRING.MEMBER
	uchar                            IdentsHistoryWriteIndex;         // type:UCHAR.0
	array<uint>                      IdentsHistorySpace;              // type:ARRAY.ATARRAY
	uchar                            MusicHistoryWriteIndex;          // type:UCHAR.0
	array<uint>                      MusicHistorySpace;               // type:ARRAY.ATARRAY
	uchar                            DjSoloHistoryWriteIndex;         // type:UCHAR.0
	array<uint>                      DjSoloHistorySpace;              // type:ARRAY.ATARRAY
	uchar                            DjSpeechHistoryWriteIndex;       // type:UCHAR.0
	array<uint>                      DjSpeechHistory;                 // type:ARRAY.ATARRAY
};

struct CRandomEventManager__Tunables : CTuning
{
	bool                             RenderDebug;                     // type:BOOL.0
	bool                             Enabled;                         // type:BOOL.0
	bool                             ForceCrime;                      // type:BOOL.0
	float                            EventInterval;                   // type:FLOAT.0
	float                            EventInitInterval;               // type:FLOAT.0
	array<struct _0x760E4E0B>        RandomEventType;                 // type:ARRAY.ATARRAY
	array<struct _0xA6598018>        RandomEventData;                 // type:ARRAY.ATARRAY
	bool                             SpawningChasesEnabled;           // type:BOOL.0
	int                              MaxNumberCopVehiclesInChase;     // type:INT.0
	int                              ProbSpawnHeli;                   // type:INT.0
	int                              MaxAmbientVehiclesToSpawnChase;  // type:INT.0
	int                              MinPlayerMoveDistanceToSpawnChase; // type:INT.0
	string                           HeliVehicleModelId;              // type:STRING.ATNONFINALHASHSTRING
	string                           HeliPedModelId;                  // type:STRING.ATNONFINALHASHSTRING
};

struct CRankedRewards : CRewards
{
};

struct CReferencedConditionsMap
{
	map<string, struct CAICondition>     Conditions;                      // type:MAP.ATMAP
};

struct CRelationshipManager__Tunables : CTuning
{
	string                           _0x5B616012;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             DisplayRemovedGroups;            // type:BOOL.0
};

struct CRewards : CBaseReward
{
	array<struct CBaseReward>        rewards;                         // type:ARRAY.ATARRAY
};

struct CRsRef
{
	string                           Name;                            // type:STRING.ATSTRING
	vec3                             Translation;                     // type:VECTOR3.0
	vec3                             Rotation;                        // type:VECTOR3.0
	struct CShopData                 ShopData;                        // type:STRUCT.STRUCTURE
	array<struct CLayoutNode>        LayoutNodeList;                  // type:ARRAY.ATARRAY
};

struct CRumbleCurve
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CRumblePoint>       Points;                          // type:ARRAY.ATARRAY
};

struct CRumbleCurves
{
	map<string, struct CRumbleCurve>     Curves;                          // type:MAP.ATBINARYMAP
};

struct CRumbleInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xBC3ED0F3               FireInitial;                     // type:STRUCT.STRUCTURE
	struct _0xBC3ED0F3               Fire;                            // type:STRUCT.STRUCTURE
	struct _0xBC3ED0F3               Cock;                            // type:STRUCT.STRUCTURE
	struct _0xBC3ED0F3               Reload;                          // type:STRUCT.STRUCTURE
};

struct CRumblePoint
{
	float                            Time;                            // type:FLOAT.0
	float                            Intensity;                       // type:FLOAT.0
};

struct CSaveChallengeBase
{
	string                           name;                            // type:STRING.ATNSHASHSTRING
};

struct CSaveCollectables : CBaseSaveObject
{
	uint                             dataVersion;                     // type:UINT.0
	struct _0x7EDF7A96               _0x8BE913E4;                     // type:STRUCT.STRUCTURE
};

struct CSaveDoors : CBaseSaveObject
{
	array<struct CSaveDoors__DoorState>     savedDoorStates;                 // type:ARRAY.ATARRAY
};

struct CSaveDoors__DoorState
{
	int                              doorEnumHash;                    // type:INT.0
	int                              doorState;                       // type:INT.0
};

struct CSaveGarages : CBaseSaveObject
{
	bool                                                      RespraysAreFree;                 // type:BOOL.0
	bool                                                      NoResprays;                      // type:BOOL.0
	array<struct CSaveGarages__CSavedVehiclesInSafeHouse>     SafeHouses;                      // type:ARRAY.ATARRAY
	array<struct CSaveGarages__CSaveGarage>                   SavedGarages;                    // type:ARRAY.ATARRAY
};

struct CSaveGarages__CSaveGarage
{
	uint                             NameHash;                        // type:UINT.0
	uchar                            Type;                            // type:UCHAR.0
	bool                             bLeaveCameraAlone;               // type:BOOL.0
	bool                             bSavingVehilclesEnabled;         // type:BOOL.0
};

struct CSaveGarages__CSavedVehicle
{
	struct CSaveGarages__CSavedVehicleVariationInstance     variation;                       // type:STRUCT.STRUCTURE
	float                                                   CoorX;                           // type:FLOAT.0
	float                                                   CoorY;                           // type:FLOAT.0
	float                                                   CoorZ;                           // type:FLOAT.0
	uint                                                    FlagsLocal;                      // type:UINT.0
	uint                                                    ModelHashKey;                    // type:UINT.0
	uint                                                    nDisableExtras;                  // type:UINT.0
	int                                                     LiveryId;                        // type:INT.0
	short                                                   HornSoundIndex;                  // type:SHORT.0
	short                                                   AudioEngineHealth;               // type:SHORT.0
	short                                                   AudioBodyHealth;                 // type:SHORT.0
	char                                                    _0x084DB6A8;                     // type:CHAR.0
	char                                                    iFrontY;                         // type:CHAR.0
	char                                                    _0xB6119215;                     // type:CHAR.0
	bool                                                    bUsed;                           // type:BOOL.0
	bool                                                    bInInterior;                     // type:BOOL.0
	bool                                                    bNotDamagedByBullets;            // type:BOOL.0
	bool                                                    bNotDamagedByFlames;             // type:BOOL.0
	bool                                                    bIgnoresExplosions;              // type:BOOL.0
	bool                                                    bNotDamagedByCollisions;         // type:BOOL.0
	bool                                                    bNotDamagedByMelee;              // type:BOOL.0
	bool                                                    bTyresDontBurst;                 // type:BOOL.0
	char                                                    LicensePlateTexIndex;            // type:CHAR.0
	array<uchar, 8>                                         LicencePlateText;                // type:ARRAY.MEMBER
};

struct CSaveGarages__CSavedVehicleVariationInstance
{
	map<string, uchar>               mods;                            // type:MAP.ATBINARYMAP
	array<bool, 2>                   modVariation;                    // type:ARRAY.MEMBER
	uchar                            color1;                          // type:UCHAR.0
	uchar                            color2;                          // type:UCHAR.0
	uchar                            color3;                          // type:UCHAR.0
	uchar                            color4;                          // type:UCHAR.0
	uchar                            smokeColR;                       // type:UCHAR.0
	uchar                            smokeColG;                       // type:UCHAR.0
	uchar                            smokeColB;                       // type:UCHAR.0
	uchar                            neonColR;                        // type:UCHAR.0
	uchar                            neonColG;                        // type:UCHAR.0
	uchar                            neonColB;                        // type:UCHAR.0
	uchar                            neonFlags;                       // type:UCHAR.0
	uchar                            windowTint;                      // type:UCHAR.0
	uchar                            wheelType;                       // type:UCHAR.0
	uchar                            _0x129E5ECE;                     // type:UCHAR.0
	uchar                            livery;                          // type:UCHAR.0
};

struct CSaveGarages__CSavedVehiclesInSafeHouse
{
	uint                                          NameHashOfGarage;                // type:UINT.0
	array<struct CSaveGarages__CSavedVehicle>     VehiclesSavedInThisSafeHouse;    // type:ARRAY.ATARRAY
};

struct CSaveMissions
{
	uint                             dataVersion;                     // type:UINT.0
	array<struct _0x03A83D72>        missions;                        // type:ARRAY.ATARRAY
};

struct CScatteringTransmittance__FogVolumeListData
{
	array<struct _0x81907918>        FogVolumeList;                   // type:ARRAY.ATARRAY
};

struct CScavengerDispatchManager__Tunables : CTuning
{
	float                            TimeBetweenAddingDispatches;     // type:FLOAT.0
	float                            DistanceThresholdFromOtherDispatches; // type:FLOAT.0
	uint                             NumberOfNearbyScavengersAllowed; // type:UINT.0
	float                            DistanceThresholdNearbyDispatches; // type:FLOAT.0
	float                            DistanceThresholdToAdd;          // type:FLOAT.0
	float                            DistanceThresholdToRemove;       // type:FLOAT.0
	float                            DistanceThresholdFromTown;       // type:FLOAT.0
	int                              MinimumAgeOfCorpse;              // type:INT.0
	float                            MaxSpawnRangeScaleFactor;        // type:FLOAT.0
	float                            ScavengerRemoveRangeMultiplier;  // type:FLOAT.0
	float                            AerialScavengerMinHeightDelta;   // type:FLOAT.0
	float                            AerialScavengerMaxHeightDelta;   // type:FLOAT.0
	float                            AerialScavengerMinCircleRadius;  // type:FLOAT.0
	float                            AerialScavengerMaxCircleRadius;  // type:FLOAT.0
	float                            ActiveDispatchCorpseScanDelay;   // type:FLOAT.0
	float                            CorpseFrictionOverride;          // type:FLOAT.0
	bool                             _0x31D566C5;                     // type:BOOL.0
};

struct CScavengerLayout
{
	string                                   ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                                   Clip;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CPredatorScenarioArray>     Predators;                       // type:ARRAY.ATARRAY
};

struct CScavengerLayouts
{
	map<string, struct CScavengerLayout>     Layouts;                         // type:MAP.ATBINARYMAP
};

struct CScenarioAction
{
};

struct CScenarioActionAnimalAlertedExit : _0xCAB953C8
{
};

struct CScenarioActionCombatExit : _0xCAB953C8
{
};

struct CScenarioActionConditionCanDoQuickBlendout : CAICondition
{
};

struct CScenarioActionConditionEvent : CAICondition
{
	enum eEventType                  EventType;                       // type:ENUM.32BIT
};

struct CScenarioActionConditionEventExitOverride : CAICondition
{
	enum _0x0153DD05                 ScenarioExitType;                // type:ENUM.32BIT
};

struct CScenarioActionConditionForceAction : CAICondition
{
	enum eScenarioActionType         ScenarioActionType;              // type:ENUM.32BIT
};

struct CScenarioActionConditionHasShockingReact : CAICondition
{
};

struct CScenarioActionConditionIsRagdollResponse : CAICondition
{
};

struct CScenarioActionConditionRequiresAbortForMelee : CAICondition
{
};

struct CScenarioActionConditionResponseTaskType : CAICondition
{
	string                           Response;                        // type:STRING.ATNONFINALHASHSTRING
};

struct CScenarioActionEmotionalExit : _0xCAB953C8
{
	bool                             SetEmotionalStateFromEvent;      // type:BOOL.0
};

struct CScenarioActionFlee : _0xCAB953C8
{
};

struct CScenarioActionHeadTrack : CScenarioAction
{
};

struct CScenarioActionImmediateExit : _0xCAB953C8
{
};

struct CScenarioActionImmediateExitNoCower : _0xCAB953C8
{
};

struct CScenarioActionMulti : CScenarioAction
{
	array<struct CScenarioAction>     Actions;                         // type:ARRAY.ATARRAY
};

struct CScenarioActionNormalExit : _0xCAB953C8
{
};

struct CScenarioActionQuickExit : _0xCAB953C8
{
};

struct CScenarioActionScriptExit : _0xCAB953C8
{
};

struct CScenarioActionShockReaction : CScenarioAction
{
};

struct CScenarioActionThreatResponseAnimalExit : _0xCAB953C8
{
};

struct CScenarioActionThreatResponseAnimalImmediateExit : _0xCAB953C8
{
};

struct CScenarioActionThreatResponseExit : _0xCAB953C8
{
};

struct CScenarioActionTrigger
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct CScenarioAction           Action;                          // type:STRUCT.POINTER
	float                            Probability;                     // type:FLOAT.0
	bool                             EarlyOut;                        // type:BOOL.0
};

struct CScenarioActionTriggerFleeDecisionMaker : CScenarioAction
{
	uint                             _0xCD78EC70;                     // type:UINT.0
	bool                             allowCover;                      // type:BOOL.0
	bool                             allowScenarios;                  // type:BOOL.0
};

struct CScenarioActionTriggers
{
	array<struct CScenarioActionTrigger>     Triggers;                        // type:ARRAY.ATARRAY
};

struct CScenarioChain
{
	uchar                            _0x44F1B77A;                     // type:UCHAR.0
	bitset<enum _0x5E7A536B>         Flags;                           // type:BITSET.8BIT
	array<ushort>                    EdgeIds;                         // type:ARRAY.ATARRAY
};

struct CScenarioChainingEdge
{
	ushort                                    NodeIndexFrom;                   // type:USHORT.0
	ushort                                    NodeIndexTo;                     // type:USHORT.0
	enum CScenarioChainingEdge__eAction       Action;                          // type:ENUM.8BIT
	enum CScenarioChainingEdge__eNavMode      NavMode;                         // type:ENUM.8BIT
	enum CScenarioChainingEdge__eNavSpeed     NavSpeed;                        // type:ENUM.8BIT
	char                                      _0x56E63D40;                     // type:CHAR.0
	short                                     _0x2000AE5F;                     // type:SHORT.0
	short                                     _0x89F8F8D9;                     // type:SHORT.0
	bitset<enum _0x89F96DC4>                  _0x0064CA6E;                     // type:BITSET.16BIT
	bitset<enum _0x344B8B8A>                  _0x6FADFBCD;                     // type:BITSET.16BIT
	uchar                                     _0x672BDBC9;                     // type:UCHAR.0
	uchar                                     _0x6D3A8F44;                     // type:UCHAR.0
	uchar                                     _0xE059F7C1;                     // type:UCHAR.0
	enum _0xA25BEDD2                          _0xF48963E2;                     // type:ENUM.8BIT
	char                                      _0xC71FEDD6;                     // type:CHAR.0
};

struct CScenarioChainingNode
{
	vec4V                            _0x7B54635E;                     // type:VEC4V.0
	string                           _0x9B1D60AB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x1844403F;                     // type:BOOL.0
	bool                             _0x4E017C07;                     // type:BOOL.0
	ushort                           _0x01E63F3E;                     // type:USHORT.0
	uchar                            _0x20E4F125;                     // type:UCHAR.0
	bitset<enum _0xAD4B0DA3>         Flags;                           // type:BITSET.8BIT
};

struct CScenarioCoupleInfo : CScenarioInfo
{
	vec3                             _0x2D32376C;                     // type:VECTOR3.0
	bool                             _0xBCA38937;                     // type:BOOL.0
};

struct CScenarioDeadPedInfo : CScenarioInfo
{
};

struct CScenarioEntityOverride
{
	vec3V                                     EntityPosition;                  // type:VEC3V.0
	string                                    EntityType;                      // type:STRING.ATNONFINALHASHSTRING
	uint64                                    Guid0;                           // type:UINT64.0
	uint64                                    Guid1;                           // type:UINT64.0
	array<struct CExtensionDefSpawnPoint>     ScenarioPoints;                  // type:ARRAY.ATARRAY
	bool                                      EntityMayNotAlwaysExist;         // type:BOOL.0
	bool                                      SpecificallyPreventArtPoints;    // type:BOOL.0
};

struct CScenarioFleeInfo : CScenarioInfo
{
	float                            SafeRadius;                      // type:FLOAT.0
	float                            SafeRadiusExterior;              // type:FLOAT.0
	bool                             LeaveIfUnsafe;                   // type:BOOL.0
	bool                             ConsiderPosition;                // type:BOOL.0
	bool                             ConsiderRoute;                   // type:BOOL.0
	bool                             ConsiderLineOfSightFromTarget;   // type:BOOL.0
	bool                             AlwaysSprint;                    // type:BOOL.0
};

struct CScenarioFlourishInfo : CScenarioInfo
{
	array<string>                    aClipSets;                       // type:ARRAY.ATARRAY
	string                           ActionBranchSet;                 // type:STRING.ATNONFINALHASHSTRING
	bool                             CheckForBrokenEntity;            // type:BOOL.0
};

struct CScenarioGroupInfo : CScenarioInfo
{
	array<struct _0x8F8E4271, 6>     Participants;                    // type:ARRAY.ATFIXEDARRAY
	bool                             IsSynchronized;                  // type:BOOL.0
	bool                             _0x61B33A70;                     // type:BOOL.0
};

struct CScenarioHazardInfo : CScenarioInfo
{
	struct _0x14229900               ThreatTask;                      // type:STRUCT.POINTER
	struct _0x14229900               _0x8BCF75D6;                     // type:STRUCT.POINTER
	float                            fSinkMinTime;                    // type:FLOAT.0
	float                            fSinkMaxTime;                    // type:FLOAT.0
	float                            _0xDD7642BC;                     // type:FLOAT.0
	float                            fUnalertedTimeSurfaceMin;        // type:FLOAT.0
	float                            fUnalertedTimeSurfaceMax;        // type:FLOAT.0
	float                            _0x6D2EA2D6;                     // type:FLOAT.0
	float                            MinVictimWaterDepth;             // type:FLOAT.0
	bool                             _0xC0BE2312;                     // type:BOOL.0
};

struct CScenarioInfo
{
	string                                 Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                 ScriptName;                      // type:STRING.ATFINALHASHSTRING
	struct CAICondition                    ScriptCondition;                 // type:STRUCT.POINTER
	string                                 PropName;                        // type:STRING.ATNONFINALHASHSTRING
	struct void                            Models;                          // type:STRUCT.EXTERNAL_NAMED
	struct void                            BlockedModels;                   // type:STRUCT.EXTERNAL_NAMED
	array<struct _0x9ABC08AD>              PlayerUseInfos;                  // type:ARRAY.ATARRAY
	struct _0x6C648116                     _0x25A3B6FC;                     // type:STRUCT.POINTER
	struct CScenarioRangedScriptInfo       RangedScriptInfo;                // type:STRUCT.POINTER
	float                                  SpawnProbability;                // type:FLOAT.0
	uint                                   SpawnInterval;                   // type:UINT.0
	float                                  SpawnHistoryRange;               // type:FLOAT.0
	uint                                   MaxNoInRange;                    // type:UINT.0
	uint                                   PropEndOfLifeTimeoutMS;          // type:UINT.0
	float                                  Range;                           // type:FLOAT.0
	float                                  MaximumUseRange;                 // type:FLOAT.0
	float                                  RadiusUnitsPerMeter;             // type:FLOAT.0
	vec3V                                  UseOffset;                       // type:VEC3V.0
	string                                 StationaryReactHash;             // type:STRING.ATNONFINALHASHSTRING
	string                                 _0xCEF277B7;                     // type:STRING.ATSTRING
	float                                  TimeTilPedLeaves;                // type:FLOAT.0
	float                                  ChanceOfRunningTowards;          // type:FLOAT.0
	struct CScenarioTransitionInfo         TransitionInfo;                  // type:STRUCT.POINTER
	bitset<enum _0x9138840C>               Flags;                           // type:BITSET.32BIT
	enum _0xE52A9E81                       ActivityType;                    // type:ENUM.32BIT
	bitset<enum eRagdollBlockingFlags>     RagdollBlockingFlags;            // type:BITSET.32BIT
	struct CAICondition                    Condition;                       // type:STRUCT.POINTER
	struct _0xE92FC01E                     ConditionalAnims;                // type:STRUCT.STRUCTURE
	string                                 SingleParticipantId;             // type:STRING.ATNONFINALHASHSTRING
	string                                 CameraNameHash;                  // type:STRING.ATNONFINALHASHSTRING
	float                                  IntroBlendInDuration;            // type:FLOAT.0
	float                                  OutroBlendInDuration;            // type:FLOAT.0
	float                                  OutroBlendOutDuration;           // type:FLOAT.0
	float                                  ImmediateExitBlendOutDuration;   // type:FLOAT.0
	float                                  PanicExitBlendInDuration;        // type:FLOAT.0
	float                                  ReassessGroundExitThreshold;     // type:FLOAT.0
	float                                  FallExitThreshold;               // type:FLOAT.0
	float                                  PositionXVarianceMin;            // type:FLOAT.0
	float                                  PositionXVarianceMax;            // type:FLOAT.0
	float                                  PositionYVarianceMin;            // type:FLOAT.0
	float                                  PositionYVarianceMax;            // type:FLOAT.0
	float                                  HeadingVarianceMinDegrees;       // type:FLOAT.0
	float                                  HeadingVarianceMaxDegrees;       // type:FLOAT.0
	float                                  BlockedByNearbyScenariosRange;   // type:FLOAT.0
	float                                  ExitProbeZOverride;              // type:FLOAT.0
	float                                  _0x24CED52E;                     // type:FLOAT.0
	float                                  ExitProbeCapsuleRadiusOverride;  // type:FLOAT.0
	float                                  EnterProbeCapsuleRadiusOverride; // type:FLOAT.0
	float                                  MaxDistanceMayAdjustPathSearchOnExit; // type:FLOAT.0
	float                                  TimeToHoldLSForExit;             // type:FLOAT.0
	float                                  vegVolumeRadius;                 // type:FLOAT.0
	bitset<enum _0xBBEFAE84>               vegVolumeType;                   // type:BITSET.32BIT
	bitset<enum _0x2CB1DFBB>               vegVolumeFlags;                  // type:BITSET.32BIT
	vec3V                                  vegVolumeOffset;                 // type:VEC3V.0
	float                                  GotoPositionDistanceBlendout;    // type:FLOAT.0
	float                                  GotoPositionHeadingBlendoutDegrees; // type:FLOAT.0
	bool                                   GotoPositionUseFlatBlendoutDistance; // type:BOOL.0
	float                                  EnterPoseFixupDistanceThreshold; // type:FLOAT.0
	float                                  EnterPoseFixupHeadingThresholdDegrees; // type:FLOAT.0
	enum eLookAtImportance                 eLookAtImportance;               // type:ENUM.32BIT
	enum eScenarioImportance               eScenarioImportance;             // type:ENUM.32BIT
	vec3                                   PedCapusleOffset;                // type:VECTOR3.0
	float                                  PedCapsuleRadiusOverride;        // type:FLOAT.0
	vec3                                   ExitProbeCapsuleStartOffset;     // type:VECTOR3.0
	vec3                                   _0x9D071484;                     // type:VECTOR3.0
	array<struct _0x0F8E6B8F>              PrespawnedProps;                 // type:ARRAY.ATARRAY
	uchar                                  iNumberOfDaysPersistent;         // type:UCHAR.0
	string                                 CategoryHash;                    // type:STRING.ATNONFINALHASHSTRING
	string                                 AnimVariationHash;               // type:STRING.ATNONFINALHASHSTRING
	enum _0xE02F3066                       DefaultMood;                     // type:ENUM.32BIT
	float                                  _0xB4174828;                     // type:FLOAT.0
	float                                  _0x3C448B66;                     // type:FLOAT.0
	float                                  _0x34A5443D;                     // type:FLOAT.0
	float                                  _0x517E4A48;                     // type:FLOAT.0
	float                                  _0x57C0272A;                     // type:FLOAT.0
	struct _0xC3C5F606                     _0x03C541A9;                     // type:STRUCT.POINTER
	array<string>                          SoundVariations;                 // type:ARRAY.ATARRAY
	bitset<enum _0xC0B6A160>               AllowWeaponFlags;                // type:BITSET.32BIT
	bitset<enum _0xC0B6A160>               DisallowWeaponFlags;             // type:BITSET.32BIT
	struct _0x7CAF8416                     CameraFramingInfo;               // type:STRUCT.STRUCTURE
	string                                 VfxAnimInfo;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CScenarioInfoFile
{
	array<struct CScenarioInfo>      Scenarios;                       // type:ARRAY.ATARRAY
};

struct CScenarioInfoManager
{
	array<string>                        ScenarioFileNames;               // type:ARRAY.ATARRAY
	array<string>                        ConditionalAnimsFileNames;       // type:ARRAY.ATARRAY
	array<struct CScenarioTypeGroup>     ScenarioTypeGroups;              // type:ARRAY.ATARRAY
	array<string>                        ScenarioCapabilities;            // type:ARRAY.ATARRAY
};

struct CScenarioJoggingInfo : CScenarioInfo
{
};

struct CScenarioLawSpawnInfo : CScenarioInfo
{
};

struct CScenarioLookAtInfo : CScenarioInfo
{
};

struct CScenarioMoveBetweenInfo : CScenarioInfo
{
	float                            _0xE430CC73;                     // type:FLOAT.0
};

struct CScenarioParkedVehicleInfo : CScenarioInfo
{
	enum _0xECBB2D92                 _0xECBB2D92;                     // type:ENUM.32BIT
};

struct CScenarioPlayAnimsInfo : CScenarioInfo
{
	vec3                             SeatedOffset;                    // type:VECTOR3.0
	vec3                             WIPAccessOffset;                 // type:VECTOR3.0
	enum eClothState                 eClothState;                     // type:ENUM.32BIT
	uint                             ClothPinFrames;                  // type:UINT.0
};

struct CScenarioPoint
{
	string                                      ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
	string                                      ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
	string                                      GroupName;                       // type:STRING.ATNONFINALHASHSTRING
	string                                      InteriorName;                    // type:STRING.ATNONFINALHASHSTRING
	string                                      RequiredIMap;                    // type:STRING.ATNONFINALHASHSTRING
	uchar                                       uGravityWellType;                // type:UCHAR.0
	uchar                                       iProbability;                    // type:UCHAR.0
	uchar                                       uAvailableInMpSp;                // type:UCHAR.0
	uchar                                       iTimeStartOverride;              // type:UCHAR.0
	uchar                                       iTimeEndOverride;                // type:UCHAR.0
	uchar                                       iRadius;                         // type:UCHAR.0
	uchar                                       iTimeTillPedLeaves;              // type:UCHAR.0
	uchar                                       iOnScreenTimeTillPedLeaves;      // type:UCHAR.0
	uchar                                       vehiclePassengerData;            // type:UCHAR.0
	uchar                                       Pitch;                           // type:UCHAR.0
	bitset<enum CScenarioPointFlags__Flags>     Flags;                           // type:BITSET.32BIT
	uint64                                      DisabledConditionalAnims;        // type:UINT64.0
	vec4V                                       vPositionAndDirection;           // type:VEC4V.0
};

struct CScenarioPointCluster
{
	array<struct _0x65514AC8>        Points;                          // type:ARRAY.ATARRAY
	struct rage__spdSphere           ClusterSphere;                   // type:STRUCT.STRUCTURE
	float                            _0x4151BB75;                     // type:FLOAT.0
	bool                             _0xBA87159C;                     // type:BOOL.0
	bool                             _0xE1FF789A;                     // type:BOOL.0
};

struct CScenarioPointContainer
{
	array<struct CScenarioPoint>     MyPoints;                        // type:ARRAY.ATARRAY
};

struct CScenarioPointGroup
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             EnabledByDefault;                // type:BOOL.0
	bool                             _0x622B5AB2;                     // type:BOOL.0
	bool                             _0x91CB651A;                     // type:BOOL.0
};

struct CScenarioPointManifest
{
	int                                       VersionNumber;                   // type:INT.0
	array<struct CScenarioPointRegionDef>     RegionDefs;                      // type:ARRAY.ATARRAY
	array<struct CScenarioPointGroup>         Groups;                          // type:ARRAY.ATARRAY
};

struct CScenarioPointRegion
{
	int                                                    VersionNumber;                   // type:INT.0
	string                                                 RegionName;                      // type:STRING.ATFINALHASHSTRING
	bitset<enum _0x0436DEA4>                               Flags;                           // type:BITSET.32BIT
	struct CScenarioPointContainer                         Points;                          // type:STRUCT.STRUCTURE
	map<string, array<struct CScenarioEntityOverride>>     _0xDCFAC098;                     // type:MAP.ATBINARYMAP
	struct _0xEFD56957                                     _0xDC4D2D41;                     // type:STRUCT.STRUCTURE
	struct rage__spdGrid2D                                 AccelGrid;                       // type:STRUCT.STRUCTURE
	array<ushort>                                          _0xE529D603;                     // type:ARRAY.ATARRAY
	array<struct CScenarioPointCluster>                    Clusters;                        // type:ARRAY.ATARRAY
	struct _0x8C1DBA38                                     _0x8D486A43;                     // type:STRUCT.STRUCTURE
	map<string, array<uint64>>                             ConditionalAnimMappings;         // type:MAP.ATBINARYMAP
};

struct CScenarioPointRegionDef
{
	string                           Name;                            // type:STRING.CONST_STRING
	struct rage__spdAABB             AABB;                            // type:STRUCT.STRUCTURE
};

struct CScenarioPropDataManager
{
	map<string, struct _0x16546AE9>     ScenarioPropTypeData;            // type:MAP.ATBINARYMAP
};

struct CScenarioPropSpawnInfo : CScenarioInfo
{
};

struct CScenarioRangedScriptInfo
{
	string                           ScriptName;                      // type:STRING.ATFINALHASHSTRING
	string                           StackSize;                       // type:STRING.ATNONFINALHASHSTRING
	float                            ScriptStartDistance;             // type:FLOAT.0
	float                            ScriptStopDistance;              // type:FLOAT.0
};

struct CScenarioRansackInfo : CScenarioPlayAnimsInfo
{
	array<struct _0x3266F536>        RansackInfos;                    // type:ARRAY.ATARRAY
	enum _0x53EFC92F                 RansackScenarioType;             // type:ENUM.32BIT
	string                           PromptGroupLabel;                // type:STRING.ATNONFINALHASHSTRING
};

struct CScenarioRansackPlayAnimsInfo : CScenarioPlayAnimsInfo
{
	struct _0x433422A5               RansackAnimInfo;                 // type:STRUCT.STRUCTURE
};

struct CScenarioRansackReachInfo : CScenarioPlayAnimsInfo
{
	struct _0xA34B0703               RansackReachInfo;                // type:STRUCT.STRUCTURE
	string                           ReturnScenario;                  // type:STRING.ATNONFINALHASHSTRING
};

struct CScenarioRiderInfo : CScenarioPlayAnimsInfo
{
	struct void                      MountModelSet;                   // type:STRUCT.EXTERNAL_NAMED
};

struct CScenarioSpawnedPropInfo__DofInitData
{
	string                           DofName;                         // type:STRING.ATNONFINALHASHSTRING
	float                            MinInitValue;                    // type:FLOAT.0
	float                            MaxInitValue;                    // type:FLOAT.0
};

struct CScenarioStuntInfo : CScenarioInfo
{
	enum _0x99F39ADB                 eType;                           // type:ENUM.32BIT
};

struct CScenarioTransitionInfo
{
	string                           TransitionToScenario;            // type:STRING.ATNONFINALHASHSTRING
	string                           TransitionToScenarioConditionalAnims; // type:STRING.ATNONFINALHASHSTRING
};

struct CScenarioTypeGroup
{
	string                                    Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CScenarioTypeGroupEntry>     Types;                           // type:ARRAY.ATARRAY
};

struct CScenarioTypeGroupEntry
{
	struct CScenarioInfo             _0x12C45E55;                     // type:STRUCT.POINTER
	string                           ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
	float                            ProbabilityWeight;               // type:FLOAT.0
};

struct CScenarioVehicleInfo : CScenarioInfo
{
	string                           ScenarioLayoutForPeds;           // type:STRING.ATNONFINALHASHSTRING
	enum _0xEE5256A0                 ScenarioLayoutOrigin;            // type:ENUM.32BIT
	struct void                      VehicleModelSet;                 // type:STRUCT.EXTERNAL_NAMED
	struct void                      VehicleTrailerModelSet;          // type:STRUCT.EXTERNAL_NAMED
	struct void                      _0xC7F97669;                     // type:STRUCT.EXTERNAL_NAMED
	float                            ProbabilityForDriver;            // type:FLOAT.0
	float                            ProbabilityForPassengers;        // type:FLOAT.0
	float                            ProbabilityForTrailer;           // type:FLOAT.0
	uchar                            MaxNumPassengers;                // type:UCHAR.0
	uchar                            MinNumPassengers;                // type:UCHAR.0
	bool                             SpawnDraftAnimals;               // type:BOOL.0
};

struct CScenarioVehicleParkInfo : CScenarioVehicleInfo
{
	enum _0xDA478F0C                 ParkType;                        // type:ENUM.8BIT
};

struct CScenarioWanderingInRadiusInfo : CScenarioInfo
{
	float                            _0xAD945FFD;                     // type:FLOAT.0
};

struct CScenarioWanderingInfo : CScenarioInfo
{
};

struct CScenarioWanderingRiderInfo : CScenarioInfo
{
	struct void                      MountModelSet;                   // type:STRUCT.EXTERNAL_NAMED
};

struct CScenarioWorldBrainInfo : CScenarioInfo
{
};

struct CSceneTerrainAnalyzerMgrDataInstance
{
	map<string, struct _0x77A65ED6>     TerrainAnalyzerData;             // type:MAP.ATBINARYMAP
	array<string>                       ProblematicModelNamesForSeamlessInteractions; // type:ARRAY.ATARRAY
	array<string>                       ProblematicModelNamesForSeamlessInteractionsIfNearby; // type:ARRAY.ATARRAY
};

struct CScenicViewManager
{
	array<struct _0x8AA02D84>        Volumes;                         // type:ARRAY.ATARRAY
	array<struct _0x9A5D323D>        ScenicViews;                     // type:ARRAY.ATARRAY
};

struct CScriptMetadata
{
	struct CMPOutfits                MPOutfits;                       // type:STRUCT.STRUCTURE
	struct CBaseElements             BaseElements;                    // type:STRUCT.STRUCTURE
	struct CMPApparelData            MPApparelData;                   // type:STRUCT.STRUCTURE
};

struct CScriptResourceExpectedMaximum
{
	string                           ResourceTypeName;                // type:STRING.ATHASHVALUE
	int                              ExpectedMaximum;                 // type:INT.0
};

struct CScriptReward : CBaseReward
{
	string                           rewardType;                      // type:STRING.ATNSHASHSTRING
};

struct CScriptStackSizeDataEntry
{
	string                           StackName;                       // type:STRING.ATNONFINALHASHSTRING
	int                              SizeOfStack;                     // type:INT.0
	int                              NumberOfStacksOfThisSize;        // type:INT.0
};

struct CSeaPlaneHandlingData : CBaseSubHandlingData
{
	short                            fLeftPontoonComponentId;         // type:SHORT.0
	short                            fRightPontoonComponentId;        // type:SHORT.0
	float                            fPontoonBuoyConst;               // type:FLOAT.0
	float                            fPontoonSampleSizeFront;         // type:FLOAT.0
	float                            fPontoonSampleSizeMiddle;        // type:FLOAT.0
	float                            fPontoonSampleSizeRear;          // type:FLOAT.0
	float                            fPontoonLengthFractionForSamples; // type:FLOAT.0
	float                            fPontoonDragCoefficient;         // type:FLOAT.0
	float                            fPontoonVerticalDampingCoefficientUp; // type:FLOAT.0
	float                            fPontoonVerticalDampingCoefficientDown; // type:FLOAT.0
	float                            fKeelSphereSize;                 // type:FLOAT.0
};

struct CSearchPointOfInterestRuleSet
{
	map<string, struct _0x93DD8863>     PointOfInterestDefinitions;      // type:MAP.ATBINARYMAP
	map<string, struct _0x36E8E31F>     SearchSituations;                // type:MAP.ATBINARYMAP
};

struct CSeatOverrideAnimInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           SeatOverrideClipSet;             // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x4D3567C7>         SeatOverrideAnimFlags;           // type:BITSET.32BIT
	string                           SeatOverrideConditionalAnimsGroup; // type:STRING.ATNONFINALHASHSTRING
};

struct CSeatOverrideInfo
{
	struct void                      SeatAnimInfo;                    // type:STRUCT.EXTERNAL_NAMED
	struct void                      SeatOverrideAnimInfo;            // type:STRUCT.EXTERNAL_NAMED
};

struct CSectionedReloadInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             IncludeFirstBulletInLoop;        // type:BOOL.0
	bool                             IncludeLastBulletInLoop;         // type:BOOL.0
	bool                             UseTimeIntervalPerBullet;        // type:BOOL.0
	bool                             UseChamberStateOnMotionLayer;    // type:BOOL.0
	bool                             UseQuickStartClip;               // type:BOOL.0
	bool                             TagDriveArmIK;                   // type:BOOL.0
	bool                             UseSweepOffsetIntro;             // type:BOOL.0
	bool                             SupportsOHReloadData;            // type:BOOL.0
	bool                             SupportsOHReloadDataCover;       // type:BOOL.0
	bool                             SupportsOHReloadDataOnHorseback; // type:BOOL.0
	uint                             MinBulletsBeforeInterrupt;       // type:UINT.0
	array<struct _0x099B7C97>        ReloadBlendInfos;                // type:ARRAY.ATARRAY
	struct _0xBB1F1FCF               GoodCondition;                   // type:STRUCT.STRUCTURE
	struct _0xBB1F1FCF               WornCondition;                   // type:STRUCT.STRUCTURE
	struct _0xBB1F1FCF               GoodConditionOH;                 // type:STRUCT.STRUCTURE
	struct _0xBB1F1FCF               WornConditionOH;                 // type:STRUCT.STRUCTURE
	array<struct _0xB5EE0546, 2>     BulletInfos;                     // type:ARRAY.ATFIXEDARRAY
	array<struct _0x55E37936>        ActionClipPairs;                 // type:ARRAY.ATARRAY
};

struct CServerAwardReward : CBaseReward
{
	string                           award;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CShopData
{
	string                           Name;                            // type:STRING.ATSTRING
	float                            Price;                           // type:FLOAT.0
	string                           Description;                     // type:STRING.ATSTRING
};

struct CSimpleVariablesSaveStructure : CBaseSaveObject
{
	bool                             bClosestSaveHouseDataIsValid;    // type:BOOL.0
	float                            fHeadingOfClosestSaveHouse;      // type:FLOAT.0
	vec3                             vCoordsOfClosestSaveHouse;       // type:VECTOR3.0
	bool                             bFadeInAfterLoad;                // type:BOOL.0
	bool                             bPlayerShouldSnapToGroundOnSpawn; // type:BOOL.0
	uint                             MillisecondsPerGameMinute;       // type:UINT.0
	uint                             LastClockTick;                   // type:UINT.0
	uint                             GameClockHour;                   // type:UINT.0
	uint                             GameClockMinute;                 // type:UINT.0
	uint                             GameClockSecond;                 // type:UINT.0
	uint                             GameClockDay;                    // type:UINT.0
	uint                             GameClockMonth;                  // type:UINT.0
	uint                             GameClockYear;                   // type:UINT.0
	uint                             moneyCheated;                    // type:UINT.0
	uchar                            PlayerFlags;                     // type:UCHAR.0
	uint                             TimeInMilliseconds;              // type:UINT.0
	uint                             FrameCounter;                    // type:UINT.0
	int                              OldWeatherType;                  // type:INT.0
	int                              NewWeatherType;                  // type:INT.0
	int                              ForcedWeatherType;               // type:INT.0
	float                            InterpolationValue;              // type:FLOAT.0
	int                              WeatherTypeInList;               // type:INT.0
	bool                             _0x2482910A;                     // type:BOOL.0
	enum _0xA39BE1FE                 MaximumWantedLevel;              // type:ENUM.32BIT
	int                              nMaximumWantedLevel;             // type:INT.0
	int                              NumberOfTimesPickupHelpTextDisplayed; // type:INT.0
	bool                             bHasDisplayedPlayerQuitEnterCarHelpText; // type:BOOL.0
	bool                             bIncludeLastStationOnSinglePlayerStat; // type:BOOL.0
	uint                             activationDataThing;             // type:UINT.0
	uint                             _0x0CCE030C;                     // type:UINT.0
	uint                             _0xDDA9B934;                     // type:UINT.0
};

struct CSituationalClipSetStreamer__Tunables : CTuning
{
	struct _0x25F06F8F               _0x1437EAC6;                     // type:STRUCT.STRUCTURE
};

struct CSlownessZoneManager
{
	array<struct _0x6A01653E>        aSlownessZone;                   // type:ARRAY.ATARRAY
};

struct CSnowGlints
{
	array<struct _0x6B1BE4D1, 2>     GlintData;                       // type:ARRAY.ATRANGEARRAY
};

struct CSnowTrackData
{
	array<struct _0x3B3C2665>        CommonDeepSurfaceParams;         // type:ARRAY.ATARRAY
	struct _0x210FB9DC               MudParams;                       // type:STRUCT.STRUCTURE
	array<struct _0xD6699E6D>        TrackTypeData;                   // type:ARRAY.ATARRAY
	string                           SnowNormalMapName;               // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x8BA21C1D>        AntlerOffsetData;                // type:ARRAY.ATARRAY
};

struct CSpecialCondition
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x76382FA4>         Filter;                          // type:BITSET.32BIT
	bitset<enum _0xB14D0891>         SpecialConditionAttrs;           // type:BITSET.32BIT
};

struct CSpecialConditionTest
{
	string                              Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CSpecialCondition>     apSpecialConditions;             // type:ARRAY.ATARRAY
};

struct CSpecialConditionTestContainer
{
	map<string, struct CSpecialConditionTest>     Map;                             // type:MAP.ATBINARYMAP
};

struct CSpeechContextMetaRuleList
{
	array<struct _0x81F1EAB6>        RuleArray;                       // type:ARRAY.ATARRAY
};

struct CSpeechContextRule
{
	array<struct CSpeechContextRule>     RuleArray;                       // type:ARRAY.ATARRAY
	array<struct CSpeechContextRule>     ElseRuleArray;                   // type:ARRAY.ATARRAY
	struct CAICondition                  Condition;                       // type:STRUCT.POINTER
	string                               ResponseContext;                 // type:STRING.ATPARTIALHASHVALUE
	bool                                 _0xE242C442;                     // type:BOOL.0
	int                                  Priority;                        // type:INT.0
	bool                                 OneShot;                         // type:BOOL.0
	bool                                 OneShotVariations;               // type:BOOL.0
	bool                                 UseLastChainVariation;           // type:BOOL.0
	bool                                 SaveChainVariation;              // type:BOOL.0
	bool                                 ClearChainVariation;             // type:BOOL.0
	bool                                 AllowRecentRepeat;               // type:BOOL.0
	bool                                 BypassTimingChecks;              // type:BOOL.0
};

struct CSpeechContextRuleDictionary
{
	map<string, struct CSpeechContextRuleSet>     RuleSetMap;                      // type:MAP.ATBINARYMAP
};

struct CSpeechContextRuleSet
{
	map<string, struct CSpeechContextRule>     RuleListMap;                     // type:MAP.ATBINARYMAP
	bool                                       HasNoOneShots;                   // type:BOOL.0
};

struct CSpeedVolumeDataLoader
{
	array<struct _0x0FF27871>        Volumes;                         // type:ARRAY.ATARRAY
};

struct CStatBaseGroup
{
	string                                 GroupName;                       // type:STRING.ATNSHASHSTRING
	array<struct CStatGroupLoaderData>     Stats;                           // type:ARRAY.ATARRAY
};

struct CStatDescription
{
	bitset<enum eStatsDescFlags>     DescriptionFlags;                // type:BITSET.32BIT
};

struct CStatGroup : CStatBaseGroup
{
	array<string>                    GroupItemSets;                   // type:ARRAY.ATARRAY
};

struct CStatGroupCombinationSetExclude : _0x613AA048
{
	struct _0x613AA048               InclusionSet;                    // type:STRUCT.POINTER
	struct _0x613AA048               ExclusionSet;                    // type:STRUCT.POINTER
};

struct CStatGroupCombinationSetIntersect : _0x613AA048
{
	array<struct _0x613AA048>        Sets;                            // type:ARRAY.ATARRAY
};

struct CStatGroupCombinationSetItem : _0x613AA048
{
	string                           GroupItemSetName;                // type:STRING.ATNONFINALHASHSTRING
};

struct CStatGroupItemSetAmmo : CStatGroupItemSetBase
{
};

struct CStatGroupItemSetAnimals : CStatGroupItemSetAnimalsBase
{
};

struct CStatGroupItemSetAnimalsBase : CStatGroupItemSetBase
{
	array<string>                    AnimalTypes;                     // type:ARRAY.ATARRAY
	array<string>                    ExcludePedStatList;              // type:ARRAY.ATARRAY
	array<string>                    ExcludeSpeciesList;              // type:ARRAY.ATARRAY
	bool                             AllowDomesticAnimals;            // type:BOOL.0
};

struct CStatGroupItemSetBase
{
};

struct CStatGroupItemSetCarriable : CStatGroupItemSetAnimalsBase
{
};

struct CStatGroupItemSetCollectable : CStatGroupItemSetAnimalsBase
{
};

struct CStatGroupItemSetCombination : CStatGroupItemSetBase
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x613AA048               CombinationSet;                  // type:STRUCT.POINTER
};

struct CStatGroupItemSetCompendiumItems : CStatGroupItemSetBase
{
	enum eCompendiumCategories       Category;                        // type:ENUM.32BIT
};

struct CStatGroupItemSetCompendiumSubcategoryItems : CStatGroupItemSetBase
{
	enum eCompendiumCategories       Category;                        // type:ENUM.32BIT
	array<string>                    Subcategories;                   // type:ARRAY.ATARRAY
};

struct CStatGroupItemSetCrimes : CStatGroupItemSetBase
{
};

struct CStatGroupItemSetInventory : CStatGroupItemSetBase
{
	array<string>                    ItemBuyCostTypes;                // type:ARRAY.ATARRAY
	array<string>                    ItemBuyCostNames;                // type:ARRAY.ATARRAY
	array<string>                    ItemTagTypes;                    // type:ARRAY.ATARRAY
	array<string>                    AddTagKeysOfTypes;               // type:ARRAY.ATARRAY
	string                           GroupName;                       // type:STRING.ATNONFINALHASHSTRING
	bool                             AddItemCategories;               // type:BOOL.0
	bool                             AddForEachGroupName;             // type:BOOL.0
};

struct CStatGroupItemSetManualItems : CStatGroupItemSetBase
{
	array<string>                    Values;                          // type:ARRAY.ATARRAY
};

struct CStatGroupItemSetPluckable : CStatGroupItemSetAnimalsBase
{
};

struct CStatGroupItemSetSkinnable : CStatGroupItemSetAnimalsBase
{
};

struct CStatGroupItemSetVehicleTypes : CStatGroupItemSetBase
{
};

struct CStatGroupItemSetVehicles : CStatGroupItemSetBase
{
	array<string>                    VehicleTypes;                    // type:ARRAY.ATARRAY
};

struct CStatGroupItemSetWeapons : CStatGroupItemSetBase
{
	array<enum eDamageType>          DamageTypes;                     // type:ARRAY.ATARRAY
};

struct CStatGroupLoaderData : CStatLoaderData
{
};

struct CStatLoaderData
{
	string                           Name;                            // type:STRING.ATNSHASHSTRING
	enum eStatType                   StatType;                        // type:ENUM.8BIT
	string                           GroupName;                       // type:STRING.ATNSHASHSTRING
	struct CStatDescription          Description;                     // type:STRUCT.POINTER
};

struct CStatMiscData
{
	map<string, struct CStatPedModel>     PedModels;                       // type:MAP.ATMAP
};

struct CStatPedModel
{
	map<string, struct CStatPedModelOutfit>     Outfits;                         // type:MAP.ATMAP
	enum _0x287128C1                            GameMode;                        // type:ENUM.32BIT
	bitset<enum _0x5A67EE51>                    Flags;                           // type:BITSET.32BIT
};

struct CStatPedModelOutfit
{
	string                           StatName;                        // type:STRING.ATNSHASHSTRING
	enum _0x287128C1                 GameMode;                        // type:ENUM.32BIT
};

struct CStatsDataFile
{
	int                               Version;                         // type:INT.0
	array<struct CStatLoaderData>     Stats;                           // type:ARRAY.ATARRAY
	array<struct CStatBaseGroup>      Groups;                          // type:ARRAY.ATARRAY
};

struct CStatsGroupItemSetsFile
{
	int                                            Version;                         // type:INT.0
	struct CStatMiscData                           MiscData;                        // type:STRUCT.STRUCTURE
	map<string, struct CStatGroupItemSetBase>      GroupItemSets;                   // type:MAP.ATMAP
	array<struct CStatGroupItemSetCombination>     CombinationItemSets;             // type:ARRAY.ATARRAY
};

struct CStatsSaveStructure : CBaseStatsSaveStructure
{
};

struct CStealVehicleCrime : CDefaultCrimeInfo
{
};

struct CStreamingRequestCommonSet
{
	array<string>                    Requests;                        // type:ARRAY.ATARRAY
};

struct CStreamingRequestFrame
{
	array<string>                    AddList;                         // type:ARRAY.ATARRAY
	array<string>                    RemoveList;                      // type:ARRAY.ATARRAY
	array<string>                    _0x3569B859;                     // type:ARRAY.ATARRAY
	vec3V                            CamPos;                          // type:VEC3V.0
	vec3V                            CamDir;                          // type:VEC3V.0
	vec3V                            PlayerPos;                       // type:VEC3V.0
	array<uchar>                     _0x690CB1A7;                     // type:ARRAY.ATARRAY
	uint                             Flags;                           // type:UINT.0
};

struct CStreamingRequestMasterList
{
	array<string>                    Files;                           // type:ARRAY.ATARRAY
};

struct CStreamingRequestRecord
{
	array<struct CStreamingRequestFrame>         Frames;                          // type:ARRAY.ATARRAY
	array<struct CStreamingRequestCommonSet>     CommonSets;                      // type:ARRAY.ATARRAY
	string                                       Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                                         _0x2D0A8523;                     // type:UINT.0
};

struct CStrikeBone
{
	float                            Radius;                          // type:FLOAT.0
	enum eAnimBoneTag                StrikeBoneTag;                   // type:ENUM.32BIT
	enum eAnimBoneTag                OffsetBoneSource;                // type:ENUM.32BIT
	float                            OffsetDistance;                  // type:FLOAT.0
};

struct CStrikeBoneSet
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CStrikeBone>        aStrikeBones;                    // type:ARRAY.ATARRAY
	struct CStrikeBone               PredictionBone;                  // type:STRUCT.POINTER
	bitset<enum _0x4AA7F470>         StrikeBoneSetAttrs;              // type:BITSET.32BIT
};

struct CStrikeBoneSetContainer
{
	map<string, struct CStrikeBoneSet>     Map;                             // type:MAP.ATBINARYMAP
};

struct CStuntJumpSaveStructure : CBaseSaveObject
{
	bool                             bActive;                         // type:BOOL.0
};

struct CSubmarineHandlingData : CBaseSubHandlingData
{
};

struct CTVPlaylistContainer
{
	array<struct _0x5B77FEDE>        Videos;                          // type:ARRAY.ATARRAY
	array<struct _0x9B1DA25A>        PlayListSlots;                   // type:ARRAY.ATARRAY
	array<struct _0x15947AEC>        Playlists;                       // type:ARRAY.ATARRAY
};

struct CTacticalAnalysisCoverPointSearch__Tunables : CTuning
{
	int                              ScoreCalculationsPerFrame;       // type:INT.0
	int                              _0xB7EBAFAE;                     // type:INT.0
	int                              _0x95D4DB23;                     // type:INT.0
	int                              _0x0FAD51E1;                     // type:INT.0
};

struct CTacticalAnalysisCoverPoints__Tunables : CTuning
{
	float                            MinDistanceMovedToStartSearch;   // type:FLOAT.0
	float                            MaxTimeBetweenSearches;          // type:FLOAT.0
	float                            _0x8D29132A;                     // type:FLOAT.0
	float                            MinDistanceForSearch;            // type:FLOAT.0
	float                            MaxDistanceForSearch;            // type:FLOAT.0
	float                            MinTimeBetweenLineOfSightTests;  // type:FLOAT.0
	float                            MinTimeBetweenAttemptsToFindNearby; // type:FLOAT.0
	float                            MinTimeBetweenStatusUpdates;     // type:FLOAT.0
	float                            RadiusForFindNearby;             // type:FLOAT.0
	int                              MaxNearbyToFindPerFrame;         // type:INT.0
};

struct CTacticalAnalysisDistributionBreachShootDoorPoints : _0x1924580C
{
};

struct CTacticalAnalysisDistributionBreacherPoints : _0x1924580C
{
};

struct CTacticalAnalysisDistributionCircle : _0x1924580C
{
	float                            MinDistanceToThreat;             // type:FLOAT.0
	float                            MaxDistanceToThreat;             // type:FLOAT.0
	float                            MaxDistanceToAllies;             // type:FLOAT.0
	float                            MinDistanceToOtherPoints;        // type:FLOAT.0
	float                            IdentificationRange;             // type:FLOAT.0
	float                            MaxSlopeAngleDegrees;            // type:FLOAT.0
	float                            Percent;                         // type:FLOAT.0
	bool                             RelativeToAllies;                // type:BOOL.0
	bool                             RelativeToLeader;                // type:BOOL.0
	bool                             RelativeToActualTargetPosition;  // type:BOOL.0
	bool                             ConsiderInteriors;               // type:BOOL.0
	bool                             ConsiderExteriors;               // type:BOOL.0
	bool                             ConsiderNavmesh;                 // type:BOOL.0
	bool                             _0xCB1E5593;                     // type:BOOL.0
	bool                             GenerateForAdvance;              // type:BOOL.0
	bitset<enum _0x498CBB3B>         CoverStatusFlags;                // type:BITSET.32BIT
};

struct CTacticalAnalysisDistributionCompanionAI : _0x1924580C
{
	float                            _0x51A774E2;                     // type:FLOAT.0
	float                            _0x16D0730F;                     // type:FLOAT.0
	float                            _0x7BED39D3;                     // type:FLOAT.0
	float                            Percent;                         // type:FLOAT.0
};

struct CTacticalAnalysisDistributionDefArea : _0x1924580C
{
	uint                             ExtraPoints;                     // type:UINT.0
};

struct CTacticalAnalysisDistributionDefault : _0x1924580C
{
	float                            NavmeshClearance;                // type:FLOAT.0
	float                            Percent;                         // type:FLOAT.0
};

struct CTacticalAnalysisDistributionMarkupPoints : _0x1924580C
{
	bitset<enum _0x55737B73>         FilterFlags;                     // type:BITSET.32BIT
	bitset<enum _0x55737B73>         MatchFlags;                      // type:BITSET.32BIT
};

struct CTacticalAnalysisDistributionMarkupVolumes : _0x1924580C
{
	bitset<enum _0x55737B73>         FilterFlags;                     // type:BITSET.32BIT
	bitset<enum _0x55737B73>         MatchFlags;                      // type:BITSET.32BIT
	float                            PointsPerSquareMeter;            // type:FLOAT.0
	float                            Percent;                         // type:FLOAT.0
	bool                             AllowNegativeModifiers;          // type:BOOL.0
};

struct CTacticalAnalysisDistributionPursuit : _0x1924580C
{
	float                            MaxDegreesFromPursuitDirection;  // type:FLOAT.0
	float                            _0x2C52AA91;                     // type:FLOAT.0
	float                            MaxDistanceToThreat;             // type:FLOAT.0
	float                            MinDistanceToThreat;             // type:FLOAT.0
	float                            OffsetToRoadNode;                // type:FLOAT.0
	float                            Percent;                         // type:FLOAT.0
	bool                             MustBeRoadNode;                  // type:BOOL.0
};

struct CTacticalAnalysisDistributionStore
{
	map<string, struct _0x1924580C>     Distributions;                   // type:MAP.ATMAP
};

struct CTacticalAnalysisDistributionSurroundInterior : _0x1924580C
{
	float                            MinDistanceToThreat;             // type:FLOAT.0
	float                            MaxDistanceToThreat;             // type:FLOAT.0
	float                            Percent;                         // type:FLOAT.0
	bool                             CoverMustProvideCover;           // type:BOOL.0
};

struct CTacticalAnalysisDistributionTarget : _0x1924580C
{
	bool                             OnlyWhenPositionUnknown;         // type:BOOL.0
};

struct CTacticalAnalysisDistributionVantage : _0x1924580C
{
	float                            MinDistanceToThreat;             // type:FLOAT.0
	float                            MaxDistanceToThreat;             // type:FLOAT.0
	float                            MaxDistanceToAllies;             // type:FLOAT.0
	float                            MinDistanceToOtherPoints;        // type:FLOAT.0
	float                            Percent;                         // type:FLOAT.0
	bool                             ConsiderInteriors;               // type:BOOL.0
	bool                             ConsiderExteriors;               // type:BOOL.0
};

struct CTacticalAnalysisNavMeshPoints__Tunables : CTuning
{
	float                            MinDistance;                     // type:FLOAT.0
	float                            _0xC581AA22;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
	float                            BufferDistance;                  // type:FLOAT.0
	float                            _0x7DA4DE01;                     // type:FLOAT.0
	float                            MinTimeBetweenAttemptsToFindNewPosition; // type:FLOAT.0
	float                            MinTimeBetweenLineOfSightTests;  // type:FLOAT.0
	float                            MinTimeBetweenAttemptsToFindNearby; // type:FLOAT.0
	float                            _0x7E01BCFA;                     // type:FLOAT.0
	float                            MaxSearchRadiusForNavMesh;       // type:FLOAT.0
	float                            RadiusForFindNearby;             // type:FLOAT.0
	float                            MinDistanceBetweenPositionsWithClearLineOfSight; // type:FLOAT.0
	float                            MinDistanceBetweenPositionsWithoutClearLineOfSightInExteriors; // type:FLOAT.0
	float                            MinDistanceBetweenPositionsWithoutClearLineOfSightInInteriors; // type:FLOAT.0
	float                            MaxXYDistanceForNewPosition;     // type:FLOAT.0
	int                              MaxNearbyToFindPerFrame;         // type:INT.0
	float                            _0x063018D7;                     // type:FLOAT.0
	float                            _0xD0300200;                     // type:FLOAT.0
};

struct CTacticalAnalysis__Tunables : CTuning
{
	struct _0x4E19900B               BadRoute;                        // type:STRUCT.STRUCTURE
	struct _0x4955A457               Rendering;                       // type:STRUCT.STRUCTURE
	float                            MaxSpeedToActivate;              // type:FLOAT.0
	float                            MinSpeedToDeactivate;            // type:FLOAT.0
	float                            _0x7AFD37A2;                     // type:FLOAT.0
	float                            _0xF468A46F;                     // type:FLOAT.0
	float                            MaxTimeWithNoReferences;         // type:FLOAT.0
	bool                             Enabled;                         // type:BOOL.0
};

struct CTargetingConditionTargetStatus : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	bool                             ClearLos;                        // type:BOOL.0
	bool                             _0x038045C3;                     // type:BOOL.0
	bool                             Noticing;                        // type:BOOL.0
	bool                             Noticed;                         // type:BOOL.0
};

struct CTargettingDifficultyInfo
{
	enum LockType                    LockType;                        // type:ENUM.32BIT
	bool                             _0xDF177227;                     // type:BOOL.0
	bool                             UseLockOnTargetSwitching;        // type:BOOL.0
	bool                             UseReticuleSlowDownForRunAndGun; // type:BOOL.0
	bool                             UseReticuleSlowDown;             // type:BOOL.0
	bool                             EnableBulletBending;             // type:BOOL.0
	bool                             AllowSoftLockFineAim;            // type:BOOL.0
	bool                             UseNewSlowDownCode;              // type:BOOL.0
	bool                             UseCapsuleTests;                 // type:BOOL.0
	bool                             UseDriveByAssistedAim;           // type:BOOL.0
	bool                             _0xDD04F631;                     // type:BOOL.0
	bool                             _0xFD84333E;                     // type:BOOL.0
	bool                             _0xE55E51DC;                     // type:BOOL.0
	float                            LockOnRangeModifier;             // type:FLOAT.0
	float                            _0x8CB258FE;                     // type:FLOAT.0
	float                            ReticuleSlowDownRadius;          // type:FLOAT.0
	float                            ReticuleSlowDownCapsuleRadius;   // type:FLOAT.0
	float                            ReticuleSlowDownCapsuleLength;   // type:FLOAT.0
	float                            NoReticuleLockOnRangeModifier;   // type:FLOAT.0
	float                            NoReticuleMaxLockOnRange;        // type:FLOAT.0
	float                            _0x6861A6E3;                     // type:FLOAT.0
	float                            _0x68DB7B5B;                     // type:FLOAT.0
	float                            _0xF44237CA;                     // type:FLOAT.0
	struct _0x00614357               _0x582EBFBC;                     // type:STRUCT.STRUCTURE
	struct _0x6F846C86               _0x25917DDF;                     // type:STRUCT.STRUCTURE
	struct _0x00614357               _0x5B6D9C00;                     // type:STRUCT.STRUCTURE
	struct _0x6F846C86               _0xB9EBCFBB;                     // type:STRUCT.STRUCTURE
	struct _0x00614357               _0x792B858C;                     // type:STRUCT.STRUCTURE
	struct _0x6F846C86               _0xEAB3A360;                     // type:STRUCT.STRUCTURE
	float                            MinVelocityForDriveByAssistedAim; // type:FLOAT.0
	float                            LockOnDistanceRejectionModifier; // type:FLOAT.0
	float                            _0x9048E3FE;                     // type:FLOAT.0
	float                            FineAimVerticalMovement;         // type:FLOAT.0
	float                            FineAimDownwardsVerticalMovement; // type:FLOAT.0
	float                            FineAimSidewaysScale;            // type:FLOAT.0
	float                            MinSoftLockBreakTime;            // type:FLOAT.0
	float                            MinSoftLockBreakTimeCloseRange;  // type:FLOAT.0
	float                            MinSoftLockBreakAtMaxXStickTime; // type:FLOAT.0
	float                            SoftLockBreakDistanceMin;        // type:FLOAT.0
	float                            SoftLockBreakDistanceMax;        // type:FLOAT.0
	float                            MinFineAimTime;                  // type:FLOAT.0
	float                            MinFineAimTimeHoldingStick;      // type:FLOAT.0
	float                            MinNoReticuleAimTime;            // type:FLOAT.0
	float                            _0xDE0FD641;                     // type:FLOAT.0
	float                            _0x32E8C08E;                     // type:FLOAT.0
	float                            _0xE4B70C70;                     // type:FLOAT.0
	float                            _0x18088E5E;                     // type:FLOAT.0
	float                            _0x9DF251A0;                     // type:FLOAT.0
	float                            _0xF531F71A;                     // type:FLOAT.0
	float                            _0x7C58ACE1;                     // type:FLOAT.0
	float                            _0x1371FA1D;                     // type:FLOAT.0
	float                            _0xFE8CE469;                     // type:FLOAT.0
	float                            _0xEEC44CD0;                     // type:FLOAT.0
	float                            _0x03DED71A;                     // type:FLOAT.0
	float                            _0x22F62FD4;                     // type:FLOAT.0
	float                            _0xD93F5D0F;                     // type:FLOAT.0
	float                            AimAssistCapsuleMaxLength;       // type:FLOAT.0
	float                            _0xBF716F5A;                     // type:FLOAT.0
	float                            _0xB3E1841A;                     // type:FLOAT.0
	float                            _0x418D6077;                     // type:FLOAT.0
	float                            _0xDB3D7A7D;                     // type:FLOAT.0
	float                            SoftLockFineAimBreakXYValue;     // type:FLOAT.0
	float                            SoftLockFineAimBreakZValue;      // type:FLOAT.0
	float                            SoftLockFineAimXYAbsoluteValue;  // type:FLOAT.0
	float                            SoftLockFineAimXYAbsoluteValueClose; // type:FLOAT.0
	float                            _0xB8A17369;                     // type:FLOAT.0
	float                            _0x50A1B7BC;                     // type:FLOAT.0
	float                            _0x912A914E;                     // type:FLOAT.0
	float                            _0x88B263A9;                     // type:FLOAT.0
	float                            SoftLockBreakValue;              // type:FLOAT.0
	float                            SoftLockTime;                    // type:FLOAT.0
	float                            SoftLockTimeToAcquireTarget;     // type:FLOAT.0
	float                            _0x812BE944;                     // type:FLOAT.0
	float                            _0x0B775969;                     // type:FLOAT.0
	float                            _0xADAF02EE;                     // type:FLOAT.0
	float                            FineAimHorSpeedMin;              // type:FLOAT.0
	float                            FineAimHorSpeedMax;              // type:FLOAT.0
	float                            FineAimVerSpeed;                 // type:FLOAT.0
	float                            FineAimSpeedMultiplier;          // type:FLOAT.0
	float                            FineAimHorWeightSpeedMultiplier; // type:FLOAT.0
	float                            FineAimHorSpeedPower;            // type:FLOAT.0
	float                            FineAimSpeedMultiplierClose;     // type:FLOAT.0
	float                            FineAimSpeedMultiplierCloseDistMin; // type:FLOAT.0
	float                            FineAimSpeedMultiplierCloseDistMax; // type:FLOAT.0
	float                            _0xEBDEEE3C;                     // type:FLOAT.0
	float                            _0xE27A2345;                     // type:FLOAT.0
	float                            _0xCAE0E5C7;                     // type:FLOAT.0
	float                            _0xDDD454AB;                     // type:FLOAT.0
	uint                             LockOnSwitchTimeExtensionBreakLock; // type:UINT.0
	uint                             LockOnSwitchTimeExtensionKillTarget; // type:UINT.0
	uint                             _0x7A25F4C0;                     // type:UINT.0
	uint                             _0x19B70DD7;                     // type:UINT.0
	uint                             _0x050B730E;                     // type:UINT.0
	bool                             _0x3B93B84F;                     // type:BOOL.0
	float                            _0xEE7D2D67;                     // type:FLOAT.0
	float                            _0x5C061915;                     // type:FLOAT.0
	float                            _0x9B903951;                     // type:FLOAT.0
	float                            _0xD3F4C663;                     // type:FLOAT.0
	bool                             _0x6D332FB7;                     // type:BOOL.0
	uint                             _0x395133A2;                     // type:UINT.0
	bool                             _0xA3256A21;                     // type:BOOL.0
	bool                             _0xBD0BAE79;                     // type:BOOL.0
};

struct CTaskAdvance__Tunables : CTuning
{
	float                            TimeToWaitAtPosition;            // type:FLOAT.0
	float                            TimeBetweenPointUpdates;         // type:FLOAT.0
	float                            TimeBetweenSeekChecksAtTacticalPoint; // type:FLOAT.0
};

struct CTaskAlertedAnimal__Tunables : CTuning
{
	float                            fHeadingToleranceForWarningLocoDegrees; // type:FLOAT.0
	float                            fPctgLookatFromHeadingTolerance; // type:FLOAT.0
	float                            fMinTimeFacingHorse;             // type:FLOAT.0
	float                            fMaxTimeFacingHorse;             // type:FLOAT.0
	float                            fMinTimeFacingTargetForWarning;  // type:FLOAT.0
	float                            fMaxTimeFacingTargetForWarning;  // type:FLOAT.0
	float                            fMinTimeFacingTargetForFlocking; // type:FLOAT.0
	float                            fMaxTimeFacingTargetForFlocking; // type:FLOAT.0
	float                            fMinTimeFacingDeadBody;          // type:FLOAT.0
	float                            fMaxTimeFacingDeadBody;          // type:FLOAT.0
	float                            fMinTimeFlocking;                // type:FLOAT.0
	float                            fMaxTimeFlocking;                // type:FLOAT.0
	float                            fMinTimeInWarning;               // type:FLOAT.0
	float                            fMaxTimeInWarning;               // type:FLOAT.0
	float                            fMinTimeInThreaten;              // type:FLOAT.0
	float                            fMaxTimeInThreaten;              // type:FLOAT.0
	float                            fHeadingDiffForWarning;          // type:FLOAT.0
	float                            fMinTimeBeforeInitialIdle;       // type:FLOAT.0
	float                            fMaxTimeBeforeInitialIdle;       // type:FLOAT.0
	uint                             uWarningOutroTime;               // type:UINT.0
	uint                             uAlertedToThreatenRunDelay;      // type:UINT.0
	float                            fTimeBeforeClearingAlerted;      // type:FLOAT.0
	float                            fMinDistanceWalkAway;            // type:FLOAT.0
};

struct CTaskAnimalBeingTamed__Tunables : CTuning
{
	float                            fMinTurnThreshold;               // type:FLOAT.0
	float                            fMaxTurnThreshold;               // type:FLOAT.0
	float                            fHeadingThreshold;               // type:FLOAT.0
	float                            fRunningStartDistance;           // type:FLOAT.0
	float                            fTamingEndDistance;              // type:FLOAT.0
	uint                             uExtraTamingAttemptsMax;         // type:UINT.0
	float                            fAgitaitionRate;                 // type:FLOAT.0
	float                            fAgitationToRemoveWhenCalmed;    // type:FLOAT.0
	float                            fAgitationRemovalRateSec;        // type:FLOAT.0
	float                            fMinAgitation;                   // type:FLOAT.0
	float                            fRetreatStopAgitationThreshold;  // type:FLOAT.0
	float                            fAgitationVeryHighThreshold;     // type:FLOAT.0
	float                            fAgitationCalmedThreshold;       // type:FLOAT.0
	float                            fRumbleDistance;                 // type:FLOAT.0
	float                            fIntenseRumbleDistance;          // type:FLOAT.0
	uint                             uNotLockedOnRetreatTime;         // type:UINT.0
	float                            fReatreatFromRunningTargetThreshold; // type:FLOAT.0
	float                            fRetreatFromRunningMedianFleeRange; // type:FLOAT.0
	float                            fKickAgitationThreshold;         // type:FLOAT.0
	float                            fKickDistanceThreshold;          // type:FLOAT.0
	float                            fRetreatFromKickMedianFleeRange; // type:FLOAT.0
	uint                             uMinTimeBetweenKicks;            // type:UINT.0
	float                            fSpookedMinTameRadius;           // type:FLOAT.0
	float                            fSpookedAgitationThreshold;      // type:FLOAT.0
	float                            fSpookedDistanceStart;           // type:FLOAT.0
	float                            fSpookedDistanceSubtractMax;     // type:FLOAT.0
	float                            fSpookedAgitationMultiplier;     // type:FLOAT.0
	float                            fSpookedBufferAgitationMultiplier; // type:FLOAT.0
	uint                             uSpookedInitialReactionTime;     // type:UINT.0
	float                            fSpookedInitialReactionStrengthMultiplier; // type:FLOAT.0
	uint                             uSpookedIntenseReactionTime;     // type:UINT.0
	float                            fSpookedIntenseReactionStrengthMultiplier; // type:FLOAT.0
	uint                             uSpookedCoolOffReactionTime;     // type:UINT.0
	float                            fSpookedCoolOffReactionStrengthMultiplier; // type:FLOAT.0
	float                            fMountableAgitationLimit;        // type:FLOAT.0
	uint                             uPlayerStumbleDelay;             // type:UINT.0
	float                            fMountableRearUpDistance;        // type:FLOAT.0
	float                            fMountableAgitationStart;        // type:FLOAT.0
	uint                             uMountableReactionTime;          // type:UINT.0
};

struct CTaskAnimatedHitByExplosion__Tunables : CTuning
{
	float                            InitialRagdollDelay;             // type:FLOAT.0
	bool                             AllowPitchAndRoll;               // type:BOOL.0
};

struct CTaskArrestPed__Tunables : CTuning
{
	float                            AimDistance;                     // type:FLOAT.0
	float                            ArrestDistance;                  // type:FLOAT.0
	float                            _0xD1B03268;                     // type:FLOAT.0
	float                            _0x8F73DC32;                     // type:FLOAT.0
	float                            _0xAE60797D;                     // type:FLOAT.0
	float                            ArrestInVehicleDistance;         // type:FLOAT.0
	float                            _0x8E633BB4;                     // type:FLOAT.0
	float                            MoveToDistanceInVehicle;         // type:FLOAT.0
	float                            _0xB3C7BA87;                     // type:FLOAT.0
	float                            _0x1E9B876D;                     // type:FLOAT.0
	float                            TargetDistanceFromVehicleEntry;  // type:FLOAT.0
	float                            _0x12361E62;                     // type:FLOAT.0
	float                            _0xC38C6893;                     // type:FLOAT.0
	float                            _0x499D8934;                     // type:FLOAT.0
	float                            _0xB5F3FFDF;                     // type:FLOAT.0
	float                            _0xD241DCBF;                     // type:FLOAT.0
	float                            _0xD4E0097C;                     // type:FLOAT.0
	float                            _0x7296A52C;                     // type:FLOAT.0
	float                            _0xDF69FB38;                     // type:FLOAT.0
	float                            _0xC9EFAB09;                     // type:FLOAT.0
	float                            _0x9092941E;                     // type:FLOAT.0
	float                            _0xBC48FF4F;                     // type:FLOAT.0
	float                            _0x612B074B;                     // type:FLOAT.0
	float                            _0x2A77D562;                     // type:FLOAT.0
	float                            _0xC653E92E;                     // type:FLOAT.0
	float                            _0xAE0B44F7;                     // type:FLOAT.0
	uint                             RegainComet;                     // type:UINT.0
	uint                             _0x61DD6208;                     // type:UINT.0
	uint                             _0xBAB909A2;                     // type:UINT.0
	uint                             _0x67962C7A;                     // type:UINT.0
	uint                             _0x87E783A8;                     // type:UINT.0
	uint                             _0xE07B0D0C;                     // type:UINT.0
	uint                             _0xCE3302E1;                     // type:UINT.0
	uint                             _0x99A66CDF;                     // type:UINT.0
	int                              _0x7585EB49;                     // type:INT.0
};

struct CTaskBark__Tunables : CTuning
{
	float                            HeadingStartFacingTolerance;     // type:FLOAT.0
	float                            HeadingStopFacingTolerance;      // type:FLOAT.0
	string                           BarkScenario;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CTaskBirdLocomotion__Tunables : CTuning
{
	uint                             MinWaitTimeBetweenTakeOffsMS;    // type:UINT.0
	uint                             MaxWaitTimeBetweenTakeOffsMS;    // type:UINT.0
	float                            MinTakeOffRate;                  // type:FLOAT.0
	float                            MaxTakeOffRate;                  // type:FLOAT.0
	float                            _0xDECD76B6;                     // type:FLOAT.0
	float                            _0xA4755BB6;                     // type:FLOAT.0
	float                            _0xE0B89CFC;                     // type:FLOAT.0
	float                            _0xCA394631;                     // type:FLOAT.0
	float                            _0xBE212622;                     // type:FLOAT.0
	uint                             _0x39DD13D5;                     // type:UINT.0
	float                            _0x38366D3B;                     // type:FLOAT.0
	float                            _0xD96BE8BE;                     // type:FLOAT.0
	float                            _0x52BE015C;                     // type:FLOAT.0
	uint                             _0x45B5E780;                     // type:UINT.0
	float                            _0xA7A70C91;                     // type:FLOAT.0
	float                            _0x012497C0;                     // type:FLOAT.0
	float                            _0x7770FD4F;                     // type:FLOAT.0
	float                            _0x246E232B;                     // type:FLOAT.0
	float                            _0xD81B9387;                     // type:FLOAT.0
	float                            _0x9305135A;                     // type:FLOAT.0
	float                            _0xBA33A3AB;                     // type:FLOAT.0
	float                            _0xBFDBE1FC;                     // type:FLOAT.0
	float                            _0xB7EA2419;                     // type:FLOAT.0
	float                            _0xB3055399;                     // type:FLOAT.0
	float                            _0xDF8CF54E;                     // type:FLOAT.0
	float                            _0xEADAE26E;                     // type:FLOAT.0
	float                            _0x86C249BA;                     // type:FLOAT.0
	float                            _0x227CD12A;                     // type:FLOAT.0
	float                            _0x73C5B3C2;                     // type:FLOAT.0
	float                            _0xF7A3D944;                     // type:FLOAT.0
	float                            _0x64D39CAF;                     // type:FLOAT.0
	float                            _0xED2B4774;                     // type:FLOAT.0
	string                           _0x38B8F2C5;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x832E21FB;                     // type:FLOAT.0
	float                            _0x29AC3B5E;                     // type:FLOAT.0
};

struct CTaskBoatChase__Tunables : CTuning
{
	float                            IdealDistanceForPursue;          // type:FLOAT.0
};

struct CTaskBoatCombat__Tunables : CTuning
{
	struct _0x16EA414C               Rendering;                       // type:STRUCT.STRUCTURE
	float                            MinSpeedForChase;                // type:FLOAT.0
	float                            TimeToLookAheadForCollision;     // type:FLOAT.0
	float                            DepthForLandProbe;               // type:FLOAT.0
	float                            TimeToWait;                      // type:FLOAT.0
};

struct CTaskBoatStrafe__Tunables : CTuning
{
	float                            AdditionalDistanceForApproach;   // type:FLOAT.0
	float                            AdditionalDistanceForStrafe;     // type:FLOAT.0
	float                            CruiseSpeedForStrafe;            // type:FLOAT.0
	float                            RotationLookAhead;               // type:FLOAT.0
	float                            MaxAdjustmentLookAhead;          // type:FLOAT.0
};

struct CTaskCallPolice__Tunables : CTuning
{
	float                            MinTimeMovingAwayToGiveToWitness; // type:FLOAT.0
	float                            MinTimeSinceTalkingEndedToMakeCall; // type:FLOAT.0
	float                            MinTimeSinceTargetTalkingEndedToMakeCall; // type:FLOAT.0
	float                            MinTimeTargetHasBeenTalkingToMakeCall; // type:FLOAT.0
	float                            MinTimeSinceTalkingEndedToSayContextForCall; // type:FLOAT.0
	float                            MinTimeSpentInEarLoopToSayContextForCall; // type:FLOAT.0
	float                            MinTimeToSpendInEarLoopToPutDownPhone; // type:FLOAT.0
	float                            MaxTimeToSpendInEarLoopToPutDownPhone; // type:FLOAT.0
};

struct CTaskCarReactToVehicleCollision__Tunables : CTuning
{
	struct _0xEA7B17C0               SlowDown;                        // type:STRUCT.STRUCTURE
	float                            MaxDamageToIgnore;               // type:FLOAT.0
};

struct CTaskCarrionBird__Tunables : CTuning
{
	float                            AdditionalBufferForCirclingStart; // type:FLOAT.0
	float                            MinTimeUntilLanding;             // type:FLOAT.0
	float                            MaxTimeUntilLanding;             // type:FLOAT.0
	float                            AdditionalTimeUntilCirclingBail; // type:FLOAT.0
	float                            _0xE1452355;                     // type:FLOAT.0
	float                            _0x53049D41;                     // type:FLOAT.0
	float                            _0x614339BE;                     // type:FLOAT.0
	float                            _0x0314FD5F;                     // type:FLOAT.0
	float                            MinCorpseLandJitter;             // type:FLOAT.0
	float                            MaxCorpseLandJitter;             // type:FLOAT.0
	float                            ChanceToLand;                    // type:FLOAT.0
	float                            MinSpeedOverride;                // type:FLOAT.0
	float                            MaxSpeedOverride;                // type:FLOAT.0
	float                            MinTimeToEat;                    // type:FLOAT.0
	float                            MaxTimeToEat;                    // type:FLOAT.0
	float                            ScenarioFallbackRadius;          // type:FLOAT.0
	int                              SearchRadiusForObstructions;     // type:INT.0
	bool                             UseAmbientScannerToLand;         // type:BOOL.0
};

struct CTaskChat__Tunables : CTuning
{
	float                            HeadingToleranceDegrees;         // type:FLOAT.0
	float                            MaxWaitTime;                     // type:FLOAT.0
};

struct CTaskCloseVehicleDoorFromInside__Tunables : CTuning
{
	bool                             EnableCloseDoorHandIk;           // type:BOOL.0
	float                            DefaultCloseDoorStartPhase;      // type:FLOAT.0
	float                            DefaultCloseDoorEndPhase;        // type:FLOAT.0
	float                            DefaultCloseDoorStartIkPhase;    // type:FLOAT.0
	float                            DefaultCloseDoorEndIkPhase;      // type:FLOAT.0
	float                            MinBlendWeightToUseFarClipEvents; // type:FLOAT.0
	float                            CloseDoorForceMultiplier;        // type:FLOAT.0
	float                            VehicleSpeedToAbortCloseDoor;    // type:FLOAT.0
	float                            PedTestXOffset;                  // type:FLOAT.0
	float                            PedTestYOffset;                  // type:FLOAT.0
	float                            PedTestZStartOffset;             // type:FLOAT.0
	float                            PedTestZOffset;                  // type:FLOAT.0
	float                            PedTestRadius;                   // type:FLOAT.0
	float                            MinOpenDoorRatioToUseArmIk;      // type:FLOAT.0
};

struct CTaskCombatAdditionalTask__Tunables : CTuning
{
	int                              iBulletEventResponseLengthMs;    // type:INT.0
	float                            fChanceOfDynamicRun;             // type:FLOAT.0
	float                            fMaxDynamicStrafeDistance;       // type:FLOAT.0
	float                            fMinTimeInState;                 // type:FLOAT.0
	float                            fMoveBlendRatioLerpTime;         // type:FLOAT.0
	float                            fMinDistanceToClearCorner;       // type:FLOAT.0
	float                            fMaxDistanceFromCorner;          // type:FLOAT.0
	float                            fMaxLeavingCornerDistance;       // type:FLOAT.0
	float                            _0xCA7B8156;                     // type:FLOAT.0
	float                            _0x5295094F;                     // type:FLOAT.0
	float                            _0x0269F229;                     // type:FLOAT.0
	float                            _0x3A038149;                     // type:FLOAT.0
	float                            fBlockedLosAimTime;              // type:FLOAT.0
	float                            fStartAimingDistance;            // type:FLOAT.0
	float                            fStopAimingDistance;             // type:FLOAT.0
	float                            fMinOtherPedDistanceDiff;        // type:FLOAT.0
	float                            fMinTimeBetweenRunDirectlyChecks; // type:FLOAT.0
	float                            fMaxTimeStrafing;                // type:FLOAT.0
	float                            fMinTimeRunning;                 // type:FLOAT.0
	float                            fForceStrafeDistance;            // type:FLOAT.0
	float                            _0xBBC195FE;                     // type:FLOAT.0
	float                            _0x56CB0C85;                     // type:FLOAT.0
	float                            _0x474FFD40;                     // type:FLOAT.0
	float                            _0x3816799F;                     // type:FLOAT.0
	float                            _0x135AFC7B;                     // type:FLOAT.0
	float                            _0xCBF57E00;                     // type:FLOAT.0
	float                            _0x2EAB1921;                     // type:FLOAT.0
	float                            _0x144674D4;                     // type:FLOAT.0
	float                            _0xAB9506F5;                     // type:FLOAT.0
	float                            _0xA5B02704;                     // type:FLOAT.0
	float                            _0xC5A0E416;                     // type:FLOAT.0
	float                            _0x95D764ED;                     // type:FLOAT.0
	float                            _0xC45589DC;                     // type:FLOAT.0
	float                            _0x9CE02969;                     // type:FLOAT.0
	float                            _0x1C7C6339;                     // type:FLOAT.0
	float                            _0xF724974A;                     // type:FLOAT.0
	float                            _0xD4304C47;                     // type:FLOAT.0
	float                            _0x76AE5995;                     // type:FLOAT.0
	float                            _0x34D841BD;                     // type:FLOAT.0
	float                            _0x471C6EFC;                     // type:FLOAT.0
	float                            _0x253F9285;                     // type:FLOAT.0
	float                            _0x15C6E736;                     // type:FLOAT.0
	int                              _0x57E7C6CF;                     // type:INT.0
	bool                             _0xA68FF103;                     // type:BOOL.0
};

struct CTaskCombatAnimalCharge__Tunables : CTuning
{
	float                            fDistanceToSwitchToTackle;       // type:FLOAT.0
	float                            fDistanceForTargetUpdate;        // type:FLOAT.0
	float                            fMinDistanceToPedFortargetUpdate; // type:FLOAT.0
	float                            fTimeForEveryTargetUpdate;       // type:FLOAT.0
	float                            fTurnToFaceTargetThreshold;      // type:FLOAT.0
	float                            _0xCDDFC657;                     // type:FLOAT.0
	float                            _0x947137F4;                     // type:FLOAT.0
	float                            _0x0DDC3088;                     // type:FLOAT.0
	float                            _0x0244C16E;                     // type:FLOAT.0
	float                            _0x16AEBCC2;                     // type:FLOAT.0
};

struct CTaskCombatFlank__Tunables : CTuning
{
	float                            fInfluenceSphereInnerWeight;     // type:FLOAT.0
	float                            fInfluenceSphereOuterWeight;     // type:FLOAT.0
	float                            fInfluenceSphereRequestRadius;   // type:FLOAT.0
	float                            fInfluenceSphereCheckRouteRadius; // type:FLOAT.0
	float                            fSmallInfluenceSphereRadius;     // type:FLOAT.0
	float                            fDistanceBetweenInfluenceSpheres; // type:FLOAT.0
	float                            fAbsoluteMinDistanceToTarget;    // type:FLOAT.0
	float                            fCoverPointScoreMultiplier;      // type:FLOAT.0
};

struct CTaskCombat__Tunables : CTuning
{
	struct _0xF708B22C               BuddyShot;                       // type:STRUCT.STRUCTURE
	struct _0x1B1FBF0C               LackOfHostility;                 // type:STRUCT.STRUCTURE
	struct _0x6C695F2B               EnemyAccuracyScaling;            // type:STRUCT.STRUCTURE
	struct _0xDEB9EDC2               ChargeTuning;                    // type:STRUCT.STRUCTURE
	struct _0x5B384A44               ThrowSmokeGrenadeTuning;         // type:STRUCT.STRUCTURE
	struct _0x02880EE3               _0x103F99E3;                     // type:STRUCT.STRUCTURE
	struct _0x4A04EE7F               _0x4FA60A7F;                     // type:STRUCT.STRUCTURE
	struct _0xFBA0F562               _0xB8FBCD2B;                     // type:STRUCT.STRUCTURE
	struct _0x19D11B83               _0x6ED56B46;                     // type:STRUCT.STRUCTURE
	struct _0x5AAA5D3D               _0xAF8966D5;                     // type:STRUCT.STRUCTURE
	struct _0x32DAB33A               _0xEFA7EAAE;                     // type:STRUCT.STRUCTURE
	struct _0xD07C5A07               _0x6E58F6F0;                     // type:STRUCT.STRUCTURE
	struct _0x91A198F8               _0xF43A80D4;                     // type:STRUCT.STRUCTURE
	float                            MaxDistToCoverZ;                 // type:FLOAT.0
	float                            MaxDistToCoverXY;                // type:FLOAT.0
	float                            _0x41BD4C05;                     // type:FLOAT.0
	float                            fAmbientAnimsMinDistToTargetSq;  // type:FLOAT.0
	float                            _0xF53FAE5B;                     // type:FLOAT.0
	float                            fAmbientAnimsMaxDistToTargetSq;  // type:FLOAT.0
	float                            fGoToDefAreaTimeOut;             // type:FLOAT.0
	float                            fFireContinuouslyDistMin;        // type:FLOAT.0
	float                            fFireContinuouslyDistMax;        // type:FLOAT.0
	float                            _0xD5330FA9;                     // type:FLOAT.0
	float                            fLostTargetTime;                 // type:FLOAT.0
	float                            fMinTimeAfterAimPoseForStateChange; // type:FLOAT.0
	float                            fMaxAttemptMoveToCoverDelay;     // type:FLOAT.0
	float                            fMinAttemptMoveToCoverDelay;     // type:FLOAT.0
	float                            fMaxAttemptMoveToCoverDelayGlobal; // type:FLOAT.0
	float                            fMinAttemptMoveToCoverDelayGlobal; // type:FLOAT.0
	float                            _0xB8FFD8BF;                     // type:FLOAT.0
	float                            _0xA418DCAA;                     // type:FLOAT.0
	float                            fMinDistanceForAltCover;         // type:FLOAT.0
	float                            fMinTimeStandingAtCover;         // type:FLOAT.0
	float                            fMinTimeBetweenFrustratedPeds;   // type:FLOAT.0
	float                            fMaxTimeBetweenFrustratedPeds;   // type:FLOAT.0
	float                            fTargetTooCloseDistance;         // type:FLOAT.0
	float                            fTimeBetweenJackingAttempts;     // type:FLOAT.0
	float                            fTimeBetweenCoverSearchesMin;    // type:FLOAT.0
	float                            fTimeBetweenCoverSearchesMax;    // type:FLOAT.0
	float                            fTimeBetweenAltCoverSearches;    // type:FLOAT.0
	float                            _0x0604639A;                     // type:FLOAT.0
	float                            fShoutTargetPositionInterval;    // type:FLOAT.0
	float                            _0xE04CFAA2;                     // type:FLOAT.0
	float                            fShoutBlockingLosInterval;       // type:FLOAT.0
	float                            fTimeBetweenDragsMin;            // type:FLOAT.0
	float                            _0xC1281F3D;                     // type:FLOAT.0
	float                            fTimeBetweenSecondaryTargetUsesMin; // type:FLOAT.0
	float                            fTimeBetweenSecondaryTargetUsesMax; // type:FLOAT.0
	float                            fTimeToUseSecondaryTargetMin;    // type:FLOAT.0
	float                            fTimeToUseSecondaryTargetMax;    // type:FLOAT.0
	float                            fTimeBetweenCombatDirectorUpdates; // type:FLOAT.0
	uint                             _0x8833FD20;                     // type:UINT.0
	float                            fTimeBetweenPassiveAnimsMin;     // type:FLOAT.0
	float                            fTimeBetweenPassiveAnimsMax;     // type:FLOAT.0
	float                            fTimeBetweenQuickGlancesMin;     // type:FLOAT.0
	float                            fTimeBetweenQuickGlancesMax;     // type:FLOAT.0
	float                            fTimeBetweenGestureAnimsMin;     // type:FLOAT.0
	float                            fTimeBetweenGestureAnimsMax;     // type:FLOAT.0
	float                            fTimeBetweenFailedGestureMin;    // type:FLOAT.0
	float                            fTimeBetweenFailedGestureMax;    // type:FLOAT.0
	float                            fTimeBetweenGesturesMinGlobal;   // type:FLOAT.0
	float                            fTimeBetweenGesturesMaxGlobal;   // type:FLOAT.0
	float                            fTimeSinceLastAimedAtForGesture; // type:FLOAT.0
	float                            fMinTimeBeforeReactToExplosion;  // type:FLOAT.0
	float                            fMaxTimeBeforeReactToExplosion;  // type:FLOAT.0
	float                            TargetInfluenceSphereRadius;     // type:FLOAT.0
	float                            _0x81A6CB43;                     // type:FLOAT.0
	float                            TargetMinDistanceToRoute;        // type:FLOAT.0
	float                            TargetMinDistanceToAwayFacingNavLink; // type:FLOAT.0
	float                            fMaxWaitForCoverExitTime;        // type:FLOAT.0
	float                            fMaxDstanceToMoveAwayFromAlly;   // type:FLOAT.0
	float                            fTimeBetweenAllyProximityChecks; // type:FLOAT.0
	float                            fMinDistanceFromPrimaryTarget;   // type:FLOAT.0
	float                            fMaxAngleBetweenTargets;         // type:FLOAT.0
	float                            MaxDistanceFromPedToHelpPed;     // type:FLOAT.0
	float                            MaxDotToTargetToHelpPed;         // type:FLOAT.0
	float                            MaxHeadingDifferenceForQuickGlanceInSameDirection; // type:FLOAT.0
	float                            MinTimeBetweenQuickGlancesInSameDirection; // type:FLOAT.0
	float                            MaxSpeedToStartJackingVehicle;   // type:FLOAT.0
	float                            MaxSpeedToContinueJackingVehicle; // type:FLOAT.0
	float                            TargetJackRadius;                // type:FLOAT.0
	float                            SafetyProportionInDefensiveAreaMin; // type:FLOAT.0
	float                            SafetyProportionInDefensiveAreaMax; // type:FLOAT.0
	float                            MaxMoveToDefensiveAreaAngleVariation; // type:FLOAT.0
	uint                             SafeTimeBeforeLeavingCover;      // type:UINT.0
	uint                             WaitTimeForJackingSlowedVehicle; // type:UINT.0
	float                            MaxInjuredTargetTimerVariation;  // type:FLOAT.0
	float                            FireTimeAfterStaticMovementAbort; // type:FLOAT.0
	float                            MinMovingToCoverTimeToStop;      // type:FLOAT.0
	float                            MinDistanceToCoverToStop;        // type:FLOAT.0
	float                            FireTimeAfterStoppingMoveToCover; // type:FLOAT.0
	float                            ApproachingTargetVehicleHoldFireDistance; // type:FLOAT.0
	float                            MinDefensiveAreaRadiusForWillAdvance; // type:FLOAT.0
	float                            MinForceFiringStateTime;         // type:FLOAT.0
	float                            MaxForceFiringStateTime;         // type:FLOAT.0
	float                            MinDistanceForAimIntro;          // type:FLOAT.0
	float                            _0xBA8FD82C;                     // type:FLOAT.0
	float                            _0xFE7B0AB3;                     // type:FLOAT.0
	float                            AmbientAnimLengthBuffer;         // type:FLOAT.0
	float                            _0xA609726E;                     // type:FLOAT.0
	uint                             TimeBetweenArmedMeleeAttemptsInMs; // type:UINT.0
	uint                             _0xEE6C19B1;                     // type:UINT.0
	bool                             AllowMovingArmedMeleeAttack;     // type:BOOL.0
	float                            TimeToHoldFireAfterJack;         // type:FLOAT.0
	uint                             MinTimeBetweenMeleeJackAttempts; // type:UINT.0
	uint                             MinTimeBetweenMeleeJackAttemptsOnNetworkClone; // type:UINT.0
	float                            MaxTimeToHoldFireAtTaskInitialization; // type:FLOAT.0
	uint                             MaxTimeToRejectRespawnedTarget;  // type:UINT.0
	uint                             _0xD3F139DA;                     // type:UINT.0
	float                            MinDistanceForLawToFleeFromCombat; // type:FLOAT.0
	float                            MaxDistanceForLawToReturnToCombatFromFlee; // type:FLOAT.0
	float                            _0x9E3D2DC5;                     // type:FLOAT.0
	float                            _0x06471986;                     // type:FLOAT.0
	uint                             _0xE7CFC70E;                     // type:UINT.0
	uint                             _0xF459FFE9;                     // type:UINT.0
	uint                             _0x2CB1F1FD;                     // type:UINT.0
	float                            _0xF8C47747;                     // type:FLOAT.0
	float                            _0xD50CE3F9;                     // type:FLOAT.0
	uint                             _0x3EA3EC3E;                     // type:UINT.0
	float                            _0xF4B14140;                     // type:FLOAT.0
	float                            _0x73F46FBA;                     // type:FLOAT.0
	float                            _0x8B55C770;                     // type:FLOAT.0
	int                              _0x25E1D241;                     // type:INT.0
	float                            _0x82850EA9;                     // type:FLOAT.0
	uint                             _0xACBC6DB8;                     // type:UINT.0
	float                            _0x592B8CC3;                     // type:FLOAT.0
	float                            _0xD8F322FE;                     // type:FLOAT.0
	float                            _0xDC5D158C;                     // type:FLOAT.0
	uint                             _0x5EA87739;                     // type:UINT.0
	uint                             _0x03B1E2D4;                     // type:UINT.0
	float                            _0x0AC80968;                     // type:FLOAT.0
	float                            _0x965E0D3D;                     // type:FLOAT.0
	float                            _0xD0E38C78;                     // type:FLOAT.0
	float                            _0x39C7BA24;                     // type:FLOAT.0
	float                            _0x149DDE5A;                     // type:FLOAT.0
	float                            _0xCCA35663;                     // type:FLOAT.0
	float                            _0xED04D791;                     // type:FLOAT.0
	float                            _0x51775560;                     // type:FLOAT.0
	float                            _0xE519E6D7;                     // type:FLOAT.0
	bool                             _0x9EBF1CE8;                     // type:BOOL.0
	bool                             _0x3F4302BB;                     // type:BOOL.0
	float                            _0xDA949CB6;                     // type:FLOAT.0
	float                            _0xAA493F8A;                     // type:FLOAT.0
	float                            _0x4FEC5FF3;                     // type:FLOAT.0
	float                            _0xB6A97043;                     // type:FLOAT.0
	float                            _0x4F67EAB0;                     // type:FLOAT.0
	float                            _0xF118CA3A;                     // type:FLOAT.0
	uint                             _0xC127F7C9;                     // type:UINT.0
	float                            _0x06DAF702;                     // type:FLOAT.0
	float                            _0x2915C987;                     // type:FLOAT.0
	float                            _0x09203AFA;                     // type:FLOAT.0
	uint                             _0x1D2D0F63;                     // type:UINT.0
	uint                             _0x1D63603D;                     // type:UINT.0
	float                            _0xA33593DC;                     // type:FLOAT.0
	float                            _0x3F6E15CB;                     // type:FLOAT.0
	float                            _0xCC6A5596;                     // type:FLOAT.0
	float                            _0x4CCA65C9;                     // type:FLOAT.0
	float                            _0x3A4FD5F1;                     // type:FLOAT.0
	float                            _0x345888E2;                     // type:FLOAT.0
	uint                             _0x430F79A5;                     // type:UINT.0
	uchar                            _0xAD4DDEB8;                     // type:UCHAR.0
	float                            _0xBD1A15C5;                     // type:FLOAT.0
	float                            _0x3256B034;                     // type:FLOAT.0
	float                            _0xF5E07862;                     // type:FLOAT.0
	float                            _0xA714AC89;                     // type:FLOAT.0
	float                            _0xEE5FFB56;                     // type:FLOAT.0
	float                            _0xEAB18420;                     // type:FLOAT.0
	float                            _0x00CAC183;                     // type:FLOAT.0
	float                            _0x21F5C42B;                     // type:FLOAT.0
	float                            _0xA78313EA;                     // type:FLOAT.0
	uint                             _0xA3C45919;                     // type:UINT.0
	float                            _0x524C8B6E;                     // type:FLOAT.0
	float                            _0x3B25BA40;                     // type:FLOAT.0
	uint                             _0x3E22CE90;                     // type:UINT.0
};

struct CTaskConfront__Tunables : CTuning
{
	float                            _0x8044A329;                     // type:FLOAT.0
	float                            _0xCD06D4F2;                     // type:FLOAT.0
	float                            _0x118488A0;                     // type:FLOAT.0
	float                            _0x232B537F;                     // type:FLOAT.0
	float                            _0x9249DB52;                     // type:FLOAT.0
	float                            MinDistanceToMove;               // type:FLOAT.0
	float                            _0x17D0DAF7;                     // type:FLOAT.0
	float                            _0x1351A5DF;                     // type:FLOAT.0
	float                            _0x3F6A161B;                     // type:FLOAT.0
	float                            _0x866FAEFA;                     // type:FLOAT.0
	float                            _0x2BC8542E;                     // type:FLOAT.0
	float                            _0x6A8C5F86;                     // type:FLOAT.0
	float                            _0x073933D5;                     // type:FLOAT.0
	float                            _0x7E75E28A;                     // type:FLOAT.0
	float                            _0xC296CD05;                     // type:FLOAT.0
	float                            _0xD141C791;                     // type:FLOAT.0
	float                            _0xBF69295F;                     // type:FLOAT.0
	float                            _0x629C15F5;                     // type:FLOAT.0
	float                            _0x01F766EF;                     // type:FLOAT.0
	float                            _0x3A333F4E;                     // type:FLOAT.0
	float                            _0x6447BF9B;                     // type:FLOAT.0
	uint                             _0xABB51471;                     // type:UINT.0
};

struct CTaskConversationHelper__Tunables : CTuning
{
	float                            fMinSecondsDelayBetweenPhoneLines; // type:FLOAT.0
	float                            fMaxSecondsDelayBetweenPhoneLines; // type:FLOAT.0
	float                            fMinSecondsDelayBetweenChatLines; // type:FLOAT.0
	float                            fMaxSecondsDelayBetweenChatLines; // type:FLOAT.0
	float                            fMinDistanceSquaredToPlayerForAudio; // type:FLOAT.0
	float                            fChanceOfConversationRant;       // type:FLOAT.0
	float                            fChanceOfArgumentChallenge;      // type:FLOAT.0
	float                            fChanceOfArgumentChallengeBeingAccepted; // type:FLOAT.0
	uint                             uTimeInMSUntilNewWeirdPedComment; // type:UINT.0
	uint                             uMaxTimeInMSToPlayRingTone;      // type:UINT.0
	uchar                            uTimeToWaitAfterNewSayFailureInSeconds; // type:UCHAR.0
	uchar                            uTicksUntilHangoutConversationCheck; // type:UCHAR.0
};

struct CTaskCoupleScenario__Tunables : CTuning
{
	float                            ResumeDistSq;                    // type:FLOAT.0
	float                            StopDistSq;                      // type:FLOAT.0
	float                            TargetDistance;                  // type:FLOAT.0
};

struct CTaskCover__Tunables : CTuning
{
	struct _0x86433D70               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct CTaskCuriousAnimal__Tunables : CTuning
{
	uint                             MinTimeBetweenCuriousAttractionsGlobal; // type:UINT.0
	uint                             MinTimeBetweenCuriousAttractionsPerSpecies; // type:UINT.0
	float                            TimeToApproachBeforeMeandering;  // type:FLOAT.0
	float                            TimeToMeander;                   // type:FLOAT.0
	float                            MinTimeToObserve;                // type:FLOAT.0
	float                            MaxTimeToObserve;                // type:FLOAT.0
	float                            CuriousDangerRadius;             // type:FLOAT.0
	float                            StillTargetAttractionThreshold;  // type:FLOAT.0
};

struct CTaskDamageElectric__Tunables : CTuning
{
	float                            FallsOutofVehicleVelocity;       // type:FLOAT.0
};

struct CTaskDataInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xDC2EAEC9, 2>     RagdollInfo;                     // type:ARRAY.MEMBER
	string                           TaskWanderConditionalAnimsGroup; // type:STRING.ATNONFINALHASHSTRING
	float                            ScenarioAttractionDistance;      // type:FLOAT.0
	float                            ExtendedScenarioAttractionDistance; // type:FLOAT.0
	float                            SurfaceSwimmingDepthOffset;      // type:FLOAT.0
	float                            UnalertedMinTimeResting;         // type:FLOAT.0
	float                            UnalertedRandomTimeResting;      // type:FLOAT.0
	float                            UnalertedMinTimeBetweenRests;    // type:FLOAT.0
	float                            UnalertedRandomTimeBetweenRests; // type:FLOAT.0
	bitset<enum _0x982F0A37>         Flags;                           // type:BITSET.32BIT
	float                            CapsuleRadiusForAvoidance;       // type:FLOAT.0
	struct _0xB8EDA7BD               FleeStyleSets;                   // type:STRUCT.STRUCTURE
};

struct CTaskDataInfoManager
{
	array<struct CTaskDataInfo>      aTaskData;                       // type:ARRAY.ATARRAY
	struct void                      DefaultSet;                      // type:STRUCT.EXTERNAL_NAMED
};

struct CTaskDogConfront__Tunables : CTuning
{
	float                            IdealFollowThreatDistance;       // type:FLOAT.0
	float                            RetreatDistance;                 // type:FLOAT.0
	float                            IdealFollowOwnerDistance;        // type:FLOAT.0
	float                            StartFollowOwnerDistance;        // type:FLOAT.0
	float                            MinDistToStopOwnerFollow;        // type:FLOAT.0
	float                            ConfrontThreatDistance;          // type:FLOAT.0
	float                            MinThreatDistanceToOwner;        // type:FLOAT.0
};

struct CTaskDyingDead__Tunables : CTuning
{
	float                            VehicleForwardInitialScale;      // type:FLOAT.0
	float                            VehicleForwardScale;             // type:FLOAT.0
	float                            TimeToApplyPushFromVehicleForce; // type:FLOAT.0
	float                            ForceToApply;                    // type:FLOAT.0
	float                            MinFallingSpeedForAnimatedDyingFall; // type:FLOAT.0
	float                            SphereTestRadiusForDeadWaterSettle; // type:FLOAT.0
	float                            RagdollAbortPoseDistanceThreshold; // type:FLOAT.0
	float                            RagdollAbortPoseMaxVelocity;     // type:FLOAT.0
	float                            _0x01E21597;                     // type:FLOAT.0
	uint                             _0x8DCA9694;                     // type:UINT.0
	uint                             TimeToThrowWeaponMS;             // type:UINT.0
	uint                             TimeToThrowWeaponPlayerMS;       // type:UINT.0
	uint                             _0x55F587DE;                     // type:UINT.0
	uint                             _0xF41C0B20;                     // type:UINT.0
};

struct CTaskEat__CEatConfig
{
	string                           PredatorModelName;               // type:STRING.ATNONFINALHASHSTRING
	string                           PreyModelName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           LootConfig;                      // type:STRING.ATNONFINALHASHSTRING
};

struct CTaskEat__Tunables : CTuning
{
	array<struct CTaskEat__CEatConfig>     EatConfigs;                      // type:ARRAY.ATARRAY
	float                                  ScenarioFallbackRadius;          // type:FLOAT.0
	float                                  ScenarioFallbackRadiusFish;      // type:FLOAT.0
	float                                  WaitRadius;                      // type:FLOAT.0
	float                                  DefaultTimeToEat;                // type:FLOAT.0
	float                                  CloseAnimalRepositionThreshold;  // type:FLOAT.0
	float                                  TimeToEatAlphaMin;               // type:FLOAT.0
	float                                  TimeToEatAlphaMax;               // type:FLOAT.0
	float                                  TimeToEatBetaMin;                // type:FLOAT.0
	float                                  TimeToEatBetaMax;                // type:FLOAT.0
	float                                  TimeToEatOmegaMin;               // type:FLOAT.0
	float                                  TimeToEatOmegaMax;               // type:FLOAT.0
	float                                  DelayUntilOmegaEatsMin;          // type:FLOAT.0
	float                                  DelayUntilOmegaEatsMax;          // type:FLOAT.0
	float                                  MinTimeToFallbackSink;           // type:FLOAT.0
	float                                  MaxTimeToFallbackSink;           // type:FLOAT.0
	float                                  TimeUntilHungry;                 // type:FLOAT.0
	float                                  BaitEatingDistance;              // type:FLOAT.0
	float                                  BaitObserveDistance;             // type:FLOAT.0
	float                                  BaitObserveMinTime;              // type:FLOAT.0
	float                                  BaitObserveMaxTime;              // type:FLOAT.0
	float                                  _0xEF45EC6E;                     // type:FLOAT.0
};

struct CTaskFall__Tunables : CTuning
{
	float                            ImmediateHighFallSpeedPlayer;    // type:FLOAT.0
	float                            ImmediateHighFallSpeedAi;        // type:FLOAT.0
	float                            HighFallProbeLength;             // type:FLOAT.0
	float                            _0xBE17550A;                     // type:FLOAT.0
	float                            _0x64FA7678;                     // type:FLOAT.0
	float                            ContinuousGapHighFallTime;       // type:FLOAT.0
	float                            _0xE51F34C1;                     // type:FLOAT.0
	float                            _0xBE970DA1;                     // type:FLOAT.0
	float                            _0x17596BB7;                     // type:FLOAT.0
	float                            _0x94BF79D6;                     // type:FLOAT.0
	float                            InAirHeadingRate;                // type:FLOAT.0
	float                            InAirMovementRate;               // type:FLOAT.0
	float                            _0xBB07D394;                     // type:FLOAT.0
	float                            _0xBB8E8EDD;                     // type:FLOAT.0
	float                            InAirMovementApproachRate;       // type:FLOAT.0
	float                            LandHeadingModifier;             // type:FLOAT.0
	float                            StandingLandHeadingModifier;     // type:FLOAT.0
	float                            FallLandThreshold;               // type:FLOAT.0
	float                            _0x303C1A6D;                     // type:FLOAT.0
	float                            ReenterFallLandThreshold;        // type:FLOAT.0
	float                            PadShakeMinIntensity;            // type:FLOAT.0
	float                            PadShakeMaxIntensity;            // type:FLOAT.0
	float                            PadShakeMinHeight;               // type:FLOAT.0
	float                            PadShakeMaxHeight;               // type:FLOAT.0
	uint                             PadShakeMinDuration;             // type:UINT.0
	uint                             PadShakeMaxDuration;             // type:UINT.0
	float                            VaultFallTestAngle;              // type:FLOAT.0
	float                            JumpFallTestAngle;               // type:FLOAT.0
	float                            FallTestAngleBlendOutTime;       // type:FLOAT.0
	float                            DiveControlMaxFallDistance;      // type:FLOAT.0
	float                            DiveControlExtraDistanceForDiveFromVehicle; // type:FLOAT.0
	float                            DiveControlExtraDistanceBlendOutSpeed; // type:FLOAT.0
	float                            DiveWaterOffsetToHitFullyInControlWeight; // type:FLOAT.0
	float                            LandRollHeightFromJump;          // type:FLOAT.0
	float                            LandRollHeightFromVault;         // type:FLOAT.0
	float                            LandRollHeight;                  // type:FLOAT.0
	float                            _0xFC181EE7;                     // type:FLOAT.0
	float                            _0x99DBAB0D;                     // type:FLOAT.0
	float                            _0xE2EEC5FA;                     // type:FLOAT.0
	float                            _0xA57F19F2;                     // type:FLOAT.0
	float                            _0xF0992B22;                     // type:FLOAT.0
	float                            _0x4705F60D;                     // type:FLOAT.0
	float                            _0x4A2ACDDD;                     // type:FLOAT.0
	float                            _0x8AC6091D;                     // type:FLOAT.0
	float                            _0x9C50A711;                     // type:FLOAT.0
};

struct CTaskFishLocomotion__Tunables : CTuning
{
	float                            StartTurnThresholdDegrees;       // type:FLOAT.0
	float                            StopTurnThresholdDegrees;        // type:FLOAT.0
	float                            MinTurnApproachRate;             // type:FLOAT.0
	float                            IdealTurnApproachRate;           // type:FLOAT.0
	float                            _0x0B594642;                     // type:FLOAT.0
	float                            TurnAcceleration;                // type:FLOAT.0
	float                            _0x794CCBAE;                     // type:FLOAT.0
	float                            AssistanceAngle;                 // type:FLOAT.0
	float                            ExtraHeadingRate;                // type:FLOAT.0
	float                            _0x29E123BB;                     // type:FLOAT.0
	float                            FishOutOfWaterDelay;             // type:FLOAT.0
	float                            _0x4A50AFC1;                     // type:FLOAT.0
	float                            PitchAcceleration;               // type:FLOAT.0
	float                            _0xA073FF5D;                     // type:FLOAT.0
	float                            _0x4A089725;                     // type:FLOAT.0
	float                            _0xAF917FD0;                     // type:FLOAT.0
	float                            _0xC7B141E1;                     // type:FLOAT.0
	float                            SurfaceProbeHead;                // type:FLOAT.0
	float                            SurfaceProbeTail;                // type:FLOAT.0
	float                            SurfacePitchLerpRate;            // type:FLOAT.0
	float                            SurfaceHeightFallingLerpRate;    // type:FLOAT.0
	float                            SurfaceHeightRisingLerpRate;     // type:FLOAT.0
	float                            SurfaceHeightFollowingTriggerRange; // type:FLOAT.0
	float                            _0x8B2B807F;                     // type:FLOAT.0
	float                            _0x1D099C84;                     // type:FLOAT.0
	float                            _0x72C04E66;                     // type:FLOAT.0
	string                           _0x38B8F2C5;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x7649FB18;                     // type:FLOAT.0
};

struct CTaskFleeAnimal__Tunables : CTuning
{
	float                            RearUpDelayMin;                  // type:FLOAT.0
	float                            RearUpDelayMax;                  // type:FLOAT.0
	float                            RearUpProbabilityClose;          // type:FLOAT.0
	float                            RearUpProbabilityFar;            // type:FLOAT.0
	float                            RearUpDistanceClose;             // type:FLOAT.0
	float                            RearUpDistanceFar;               // type:FLOAT.0
	float                            WildRearUpProbabilityPedClose;   // type:FLOAT.0
	float                            WildRearUpDistancePedClose;      // type:FLOAT.0
	float                            PathOutOfFlockingMinDuration;    // type:FLOAT.0
	float                            DirectionChangeForwardOffset;    // type:FLOAT.0
	float                            fStopFlockingAfterTimeStill;     // type:FLOAT.0
	float                            FlightReactProjectDistance;      // type:FLOAT.0
};

struct CTaskFlyToPoint__Tunables : CTuning
{
	float                            _0x003294CC;                     // type:FLOAT.0
	float                            _0x220DF966;                     // type:FLOAT.0
	float                            _0x4F277B0D;                     // type:FLOAT.0
	float                            _0xD07966B7;                     // type:FLOAT.0
	float                            _0x41989BB7;                     // type:FLOAT.0
	float                            _0x27D1D9B4;                     // type:FLOAT.0
	float                            _0xCF855F9A;                     // type:FLOAT.0
	float                            _0x8C6711C4;                     // type:FLOAT.0
	float                            _0x293B0643;                     // type:FLOAT.0
	float                            _0x7810CB61;                     // type:FLOAT.0
	float                            _0x854FE78A;                     // type:FLOAT.0
	float                            HeightMapDelta;                  // type:FLOAT.0
	float                            HeightMapLookAheadDist;          // type:FLOAT.0
	float                            InitialTerrainAvoidanceAngleD;   // type:FLOAT.0
	float                            ProgressiveTerrainAvoidanceAngleD; // type:FLOAT.0
	float                            TimeBetweenIncreasingAvoidanceAngle; // type:FLOAT.0
	float                            _0xB7D32602;                     // type:FLOAT.0
	float                            _0x8CBD9F6D;                     // type:FLOAT.0
	float                            _0xEE3386F3;                     // type:FLOAT.0
	uint                             _0x81F5832F;                     // type:UINT.0
};

struct CTaskFlyingWander__Tunables : CTuning
{
	float                            RangeOffset;                     // type:FLOAT.0
	float                            TargetRadius;                    // type:FLOAT.0
	float                            _0xAD654DBC;                     // type:FLOAT.0
	float                            _0xD13C6BF3;                     // type:FLOAT.0
	float                            _0x7DB616E7;                     // type:FLOAT.0
	float                            _0x6EF632E6;                     // type:FLOAT.0
	float                            _0x7640AEF7;                     // type:FLOAT.0
};

struct CTaskGetUp__Tunables : CTuning
{
	float                            _0xA63B7F79;                     // type:FLOAT.0
	float                            fMinTimeInGetUpToAllowCover;     // type:FLOAT.0
	bool                             AllowNonPlayerHighFallAbort;     // type:BOOL.0
	bool                             AllowOffScreenHighFallAbort;     // type:BOOL.0
	int                              FallTimeBeforeHighFallAbort;     // type:INT.0
	float                            MinFallSpeedForHighFallAbort;    // type:FLOAT.0
	float                            _0x33AD1415;                     // type:FLOAT.0
	float                            PlayerMoverFixupMaxExtraHeadingChange; // type:FLOAT.0
	float                            AiMoverFixupMaxExtraHeadingChange; // type:FLOAT.0
	uint                             StartClipWaitTimePlayer;         // type:UINT.0
	uint                             StartClipWaitTime;               // type:UINT.0
	uint                             StuckWaitTime;                   // type:UINT.0
	uint                             StuckWaitTimeMp;                 // type:UINT.0
};

struct CTaskGoToScenario__Tunables : CTuning
{
	float                            ClosePointDistanceSquared;       // type:FLOAT.0
	float                            ClosePointCounterMax;            // type:FLOAT.0
	float                            _0xFC976A89;                     // type:FLOAT.0
	float                            HeadingDiffStartBlendDegrees;    // type:FLOAT.0
	float                            PositionDiffStartBlend;          // type:FLOAT.0
	float                            ExactStopTargetRadius;           // type:FLOAT.0
	float                            _0x88E33FAE;                     // type:FLOAT.0
	float                            _0xEC4D11AA;                     // type:FLOAT.0
	float                            PreferNearWaterSurfaceArrivalRadius; // type:FLOAT.0
	float                            TimeBetweenBrokenPointChecks;    // type:FLOAT.0
	float                            _0x0645036B;                     // type:FLOAT.0
	float                            _0xE30CEEAE;                     // type:FLOAT.0
	float                            _0xE412156A;                     // type:FLOAT.0
	float                            _0x2F25D8C6;                     // type:FLOAT.0
	float                            _0x920ED773;                     // type:FLOAT.0
	float                            _0x2C4C1037;                     // type:FLOAT.0
	bool                             _0x5C501804;                     // type:BOOL.0
};

struct CTaskGrabCarcass__CGrabConfig
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	float                            MinDepth;                        // type:FLOAT.0
	float                            MaxDepth;                        // type:FLOAT.0
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Clip;                            // type:STRING.ATNONFINALHASHSTRING
	float                            ApproachRadius;                  // type:FLOAT.0
	bool                             IsWaterGrab;                     // type:BOOL.0
};

struct CTaskGrabCarcass__Tunables : CTuning
{
	float                                           DeepGrabWaterThreshold;          // type:FLOAT.0
	float                                           _0x9FAB7005;                     // type:FLOAT.0
	float                                           _0x8EA20E88;                     // type:FLOAT.0
	float                                           _0x48621B86;                     // type:FLOAT.0
	float                                           _0xFE8E1404;                     // type:FLOAT.0
	array<struct CTaskGrabCarcass__CGrabConfig>     GrabConfigs;                     // type:ARRAY.ATARRAY
};

struct CTaskGrowlAndFlee__Tunables : CTuning
{
	float                            FleeMBR;                         // type:FLOAT.0
};

struct CTaskGun__Tunables : CTuning
{
	int                              iMinLookAtTime;                  // type:INT.0
	int                              iMaxLookAtTime;                  // type:INT.0
	float                            fMinTimeBetweenLookAt;           // type:FLOAT.0
	float                            fMaxTimeBetweenLookAt;           // type:FLOAT.0
	float                            TimeForEyeIk;                    // type:FLOAT.0
	float                            MinTimeBetweenEyeIkProcesses;    // type:FLOAT.0
	float                            MinDotToPointGunAtPositionWhenUnableToTurn; // type:FLOAT.0
	string                           AssistedAimCamera;               // type:STRING.ATNONFINALHASHSTRING
	string                           RunAndGunAimCamera;              // type:STRING.ATNONFINALHASHSTRING
	uint                             AssistedAimInterpolateInDuration; // type:UINT.0
	uint                             RunAndGunInterpolateInDuration;  // type:UINT.0
	uint                             _0x05F29A44;                     // type:UINT.0
	float                            _0x30C09D6B;                     // type:FLOAT.0
	float                            _0x5B02A971;                     // type:FLOAT.0
	float                            TimeForRunAndGunOutroDelays;     // type:FLOAT.0
	float                            AssistedAimOutroTime;            // type:FLOAT.0
	float                            RunAndGunOutroTime;              // type:FLOAT.0
	float                            _0xDD65C109;                     // type:FLOAT.0
	float                            AimOutroTime;                    // type:FLOAT.0
	float                            _0xDD35C014;                     // type:FLOAT.0
	float                            _0x70FD1A8D;                     // type:FLOAT.0
	float                            AimingOnStickExitCooldown;       // type:FLOAT.0
	float                            AimOutroMinTaskTimeWhenRunPressed; // type:FLOAT.0
	float                            AimOutroTimeIfAimingOnStick;     // type:FLOAT.0
	float                            _0x4A88CA4A;                     // type:FLOAT.0
	uint                             _0x8988FE57;                     // type:UINT.0
	float                            _0x8A01E1BE;                     // type:FLOAT.0
	float                            _0xA1048F12;                     // type:FLOAT.0
	float                            _0x2938C42F;                     // type:FLOAT.0
	float                            _0x15202107;                     // type:FLOAT.0
	float                            _0x16035863;                     // type:FLOAT.0
	float                            _0x68886AB5;                     // type:FLOAT.0
	float                            _0xE8B5D8A5;                     // type:FLOAT.0
	float                            _0x98C642B2;                     // type:FLOAT.0
	float                            _0x5DBA66C2;                     // type:FLOAT.0
	float                            _0x4DA196D2;                     // type:FLOAT.0
	float                            _0x07B95211;                     // type:FLOAT.0
	float                            _0xFACD5FB0;                     // type:FLOAT.0
	float                            _0xAFD90342;                     // type:FLOAT.0
	float                            _0xAAA30DFA;                     // type:FLOAT.0
	float                            _0xEFF0C22A;                     // type:FLOAT.0
	bool                             _0x9BD31EF3;                     // type:BOOL.0
	bool                             _0x04F2A2B7;                     // type:BOOL.0
	float                            _0x377CEC78;                     // type:FLOAT.0
	float                            _0x766BDA55;                     // type:FLOAT.0
	float                            _0x8AD84CD4;                     // type:FLOAT.0
};

struct CTaskHeliChase__Tunables : CTuning
{
	struct _0x53DD4F50               DriftX;                          // type:STRUCT.STRUCTURE
	struct _0x53DD4F50               DriftY;                          // type:STRUCT.STRUCTURE
	struct _0x53DD4F50               DriftZ;                          // type:STRUCT.STRUCTURE
	int                              MinHeightAboveTerrain;           // type:INT.0
	float                            SlowDownDistanceMin;             // type:FLOAT.0
	float                            SlowDownDistanceMax;             // type:FLOAT.0
	float                            CruiseSpeed;                     // type:FLOAT.0
	float                            MaxDistanceForOrientation;       // type:FLOAT.0
	float                            NearDistanceForOrientation;      // type:FLOAT.0
};

struct CTaskHeliCombat__Tunables : CTuning
{
	struct _0x394620FE               Chase;                           // type:STRUCT.STRUCTURE
};

struct CTaskHeliOrderResponse__Tunables : CTuning
{
	float                            _0xE8CBB39F;                     // type:FLOAT.0
	float                            _0x0888299D;                     // type:FLOAT.0
	float                            _0x1D37866C;                     // type:FLOAT.0
	float                            _0xAC6DCBFE;                     // type:FLOAT.0
	float                            _0xD7B3B5FA;                     // type:FLOAT.0
	float                            _0xD3EAB776;                     // type:FLOAT.0
};

struct CTaskHelicopterStrafe__Tunables : CTuning
{
	int                              FlightHeightAboveTarget;         // type:INT.0
	int                              MinHeightAboveTerrain;           // type:INT.0
	float                            TargetDirectionMinDot;           // type:FLOAT.0
	float                            TargetOffset;                    // type:FLOAT.0
	float                            TargetMinSpeedToIgnore;          // type:FLOAT.0
	float                            TargetMaxSpeedToStrafe;          // type:FLOAT.0
	float                            TimeToAvoidTargetAfterDamaged;   // type:FLOAT.0
	float                            AvoidOffsetXY;                   // type:FLOAT.0
	float                            AvoidOffsetZ;                    // type:FLOAT.0
	float                            MinDotToBeConsideredInFront;     // type:FLOAT.0
	float                            BehindRotateAngleLookAhead;      // type:FLOAT.0
	float                            SearchRotateAngleLookAhead;      // type:FLOAT.0
	float                            CircleRotateAngleLookAhead;      // type:FLOAT.0
	float                            BehindTargetAngle;               // type:FLOAT.0
	float                            TargetOffsetFilter;              // type:FLOAT.0
	float                            MinTimeBetweenStrafeDirectionChanges; // type:FLOAT.0
};

struct CTaskHerdAnimals__Tunables : CTuning
{
};

struct CTaskInVehicleBasic__Tunables : CTuning
{
	float                            fSecondsInAirBeforePassengerComment; // type:FLOAT.0
};

struct CTaskIntimidate__Tunables : CTuning
{
	float                            MaxTime;                         // type:FLOAT.0
};

struct CTaskInvestigate__Tunables : CTuning
{
	int                              iTimeToStandAtSearchPoint;       // type:INT.0
	float                            fMinDistanceToUseVehicle;        // type:FLOAT.0
	float                            fMinDistanceSavingToUseVehicle;  // type:FLOAT.0
	float                            fTimeToStandAtPerimeter;         // type:FLOAT.0
	float                            fNewPositionThreshold;           // type:FLOAT.0
};

struct CTaskJump__Tunables : CTuning
{
	float                            MinSuperJumpInitialVelocity;     // type:FLOAT.0
	float                            MaxSuperJumpInitialVelocity;     // type:FLOAT.0
	float                            HighJumpMinAngleForVelScale;     // type:FLOAT.0
	float                            HighJumpMaxAngleForVelScale;     // type:FLOAT.0
	float                            HighJumpMinVelScale;             // type:FLOAT.0
	float                            HighJumpMaxVelScale;             // type:FLOAT.0
	bool                             DisableJumpOnSteepStairs;        // type:BOOL.0
	float                            MaxStairsJumpAngle;              // type:FLOAT.0
	bool                             bEnableJumpCollisions;           // type:BOOL.0
	bool                             bEnableJumpCollisionsMp;         // type:BOOL.0
	bool                             bBlockJumpCollisionAgainstRagdollBlocked; // type:BOOL.0
	float                            PredictiveProbeZOffset;          // type:FLOAT.0
	float                            PredictiveBraceStartDelay;       // type:FLOAT.0
	float                            PredictiveBraceProbeLength;      // type:FLOAT.0
	float                            PredictiveBraceBlendInDuration;  // type:FLOAT.0
	float                            PredictiveBraceBlendOutDuration; // type:FLOAT.0
	float                            PredictiveBraceMaxUpDotSlope;    // type:FLOAT.0
	float                            PredictiveRagdollIntersectionDot; // type:FLOAT.0
	float                            PredictiveRagdollStartDelay;     // type:FLOAT.0
	float                            PredictiveRagdollProbeLength;    // type:FLOAT.0
	float                            PredictiveRagdollProbeRadius;    // type:FLOAT.0
	float                            PredictiveRagdollRequiredVelocityMag; // type:FLOAT.0
	array<struct _0x3C23505C>        _0xB3F9FDCB;                     // type:ARRAY.ATARRAY
};

struct CTaskMeleeActionResult__Tunables : CTuning
{
	float                            ForceRunDelayTime;               // type:FLOAT.0
	float                            _0x162D50CD;                     // type:FLOAT.0
	float                            _0x01581235;                     // type:FLOAT.0
	float                            _0xEA4B1019;                     // type:FLOAT.0
	float                            _0x6E26B764;                     // type:FLOAT.0
	bool                             _0x7DD5BB25;                     // type:BOOL.0
	bool                             _0x0C361B95;                     // type:BOOL.0
	uint                             _0xD2245727;                     // type:UINT.0
};

struct CTaskMotionAiming__Tunables : CTuning
{
	float                            PitchChangeRate;                 // type:FLOAT.0
	float                            PitchChangeRateAcceleration;     // type:FLOAT.0
	bool                             DoPostCameraClipUpdateForPlayer; // type:BOOL.0
	bool                             _0xD0D9D48E;                     // type:BOOL.0
};

struct CTaskMotionInAutomobile__Tunables : CTuning
{
	bool                             TestLowLodIdle;                  // type:BOOL.0
	float                            _0xD94AE0BC;                     // type:FLOAT.0
	float                            _0x884E6605;                     // type:FLOAT.0
	float                            MinTimeInHornState;              // type:FLOAT.0
	float                            MaxVelocityForSitIdles;          // type:FLOAT.0
	float                            MaxSteeringAngleForSitIdles;     // type:FLOAT.0
	uint                             MinCentredSteeringAngleTimeForSitIdles; // type:UINT.0
	float                            LeanSidewaysAngleSmoothingRateMin; // type:FLOAT.0
	float                            LeanSidewaysAngleSmoothingRateMax; // type:FLOAT.0
	float                            LeanSidewaysAngleSmoothingAcc;   // type:FLOAT.0
	float                            LeanSidewaysAngleMinAccAngle;    // type:FLOAT.0
	float                            LeanSidewaysAngleMaxAccAngle;    // type:FLOAT.0
	float                            LeftRightStickInputSmoothingRate; // type:FLOAT.0
	float                            LeftRightStickInputMin;          // type:FLOAT.0
	float                            LeanForwardsAngleSmoothingRate;  // type:FLOAT.0
	float                            UpDownStickInputSmoothingRate;   // type:FLOAT.0
	float                            UpDownStickInputMin;             // type:FLOAT.0
	float                            ZAccForLowImpact;                // type:FLOAT.0
	float                            ZAccForMedImpact;                // type:FLOAT.0
	float                            ZAccForHighImpact;               // type:FLOAT.0
	bool                             UseLegIkOnBikes;                 // type:BOOL.0
	float                            LargeVerticalAccelerationDelta;  // type:FLOAT.0
	int                              NumFramesToPersistLargeVerticalAcceleration; // type:INT.0
	string                           LowLodIdleClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	float                            SeatDisplacementSmoothingRateDriver; // type:FLOAT.0
	float                            SeatDisplacementSmoothingRatePassenger; // type:FLOAT.0
	float                            StartEngineForce;                // type:FLOAT.0
	float                            MinForwardsPitchSlope;           // type:FLOAT.0
	float                            MaxForwardsPitchSlope;           // type:FLOAT.0
	float                            MinForwardsPitchSlopeBalance;    // type:FLOAT.0
	float                            MaxForwardsPitchSlopeBalance;    // type:FLOAT.0
	float                            TimeInWheelieToEnforceMinPitch;  // type:FLOAT.0
	float                            MinForwardsPitchWheelieBalance;  // type:FLOAT.0
	float                            MaxForwardsPitchWheelieBalance;  // type:FLOAT.0
	float                            MinForwardsPitchWheelieBegin;    // type:FLOAT.0
	float                            SlowFastSpeedThreshold;          // type:FLOAT.0
	float                            MinForwardsPitchSlowSpeed;       // type:FLOAT.0
	float                            MaxForwardsPitchSlowSpeed;       // type:FLOAT.0
	float                            MinForwardsPitchFastSpeed;       // type:FLOAT.0
	float                            MaxForwardsPitchFastSpeed;       // type:FLOAT.0
	float                            SlowApproachRate;                // type:FLOAT.0
	float                            FastApproachRate;                // type:FLOAT.0
	float                            WheelieApproachRate;             // type:FLOAT.0
	float                            NewLeanSteerApproachRate;        // type:FLOAT.0
	float                            MinTimeBetweenCloseDoorAttempts; // type:FLOAT.0
	float                            ShuntDamageMultiplierAI;         // type:FLOAT.0
	float                            ShuntDamageMultiplierPlayer;     // type:FLOAT.0
	float                            MinDamageTakenToApplyDamageAI;   // type:FLOAT.0
	float                            MinDamageTakenToApplyDamagePlayer; // type:FLOAT.0
	float                            MinTimeInTaskToCheckForDamage;   // type:FLOAT.0
	float                            MinDamageToCheckForRandomDeath;  // type:FLOAT.0
	float                            MaxDamageToCheckForRandomDeath;  // type:FLOAT.0
	float                            MinHeavyCrashDeathChance;        // type:FLOAT.0
	float                            MaxHeavyCrashDeathChance;        // type:FLOAT.0
	uint                             SteeringDeadZoneCentreTimeMS;    // type:UINT.0
	uint                             SteeringDeadZoneTimeMS;          // type:UINT.0
	float                            SteeringDeadZone;                // type:FLOAT.0
	float                            SteeringChangeToStartProcessMoveSignals; // type:FLOAT.0
	float                            SteeringChangeToStopProcessMoveSignals; // type:FLOAT.0
	float                            SeatBlendLinSpeed;               // type:FLOAT.0
	float                            SeatBlendAngSpeed;               // type:FLOAT.0
	float                            HoldLegOutVelocity;              // type:FLOAT.0
	float                            MinVelStillStart;                // type:FLOAT.0
	float                            MinVelStillStop;                 // type:FLOAT.0
	float                            ForcedLegUpVelocity;             // type:FLOAT.0
	float                            BurnOutBlendInTol;               // type:FLOAT.0
	float                            BurnOutBlendInSpeed;             // type:FLOAT.0
	float                            BurnOutBlendOutSpeed;            // type:FLOAT.0
	float                            BikeInAirDriveToStandUpTimeMin;  // type:FLOAT.0
	float                            BikeInAirDriveToStandUpTimeMax;  // type:FLOAT.0
	float                            MinSpeedToBlendInDriveFastFacial; // type:FLOAT.0
	float                            MinDisplacementScale;            // type:FLOAT.0
	float                            DisplacementScaleApproachRateIn; // type:FLOAT.0
	float                            DisplacementScaleApproachRateOut; // type:FLOAT.0
	float                            _0x262F6640;                     // type:FLOAT.0
	float                            _0x1A912A03;                     // type:FLOAT.0
	float                            _0x774D8EF3;                     // type:FLOAT.0
	float                            _0x4D399073;                     // type:FLOAT.0
	float                            _0x2521C040;                     // type:FLOAT.0
	float                            _0x78F15148;                     // type:FLOAT.0
	float                            _0xAC9AB4E1;                     // type:FLOAT.0
	float                            _0xD6D59D70;                     // type:FLOAT.0
	float                            _0x81AA68CE;                     // type:FLOAT.0
	float                            _0x14A132FE;                     // type:FLOAT.0
	float                            _0xBA27D242;                     // type:FLOAT.0
	float                            _0xBE5EBB6D;                     // type:FLOAT.0
	float                            _0x69912046;                     // type:FLOAT.0
	float                            _0x41DA8D82;                     // type:FLOAT.0
	uint                             _0x857DE7A4;                     // type:UINT.0
	uint                             _0x0078854E;                     // type:UINT.0
	uint                             _0x0360EFBF;                     // type:UINT.0
	string                           StartEngineClipId;               // type:STRING.ATNONFINALHASHSTRING
	string                           _0x82E30EE0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           HotwireClipId;                   // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5063071B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ChangeStationClipId;             // type:STRING.ATNONFINALHASHSTRING
	string                           StillToSitClipId;                // type:STRING.ATNONFINALHASHSTRING
	string                           SitToStillClipId;                // type:STRING.ATNONFINALHASHSTRING
	string                           BurnOutClipId;                   // type:STRING.ATNONFINALHASHSTRING
	string                           _0x727F26D4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           BikeHornClipId;                  // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEF77C35F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6B25AB0A;                     // type:FLOAT.0
	float                            _0x9E75EFBB;                     // type:FLOAT.0
	float                            _0xCF1FB25C;                     // type:FLOAT.0
	float                            _0xB6811771;                     // type:FLOAT.0
	float                            _0xA1B9708F;                     // type:FLOAT.0
	float                            _0x79DAED14;                     // type:FLOAT.0
	float                            _0x14657890;                     // type:FLOAT.0
};

struct CTaskMotionInCover__Tunables : CTuning
{
	struct TaskMotionInCoverTunables          TuningValues;                    // type:STRUCT.STRUCTURE
	struct TaskMotionMeleeInCoverTunables     _0x46EA77BA;                     // type:STRUCT.STRUCTURE
};

struct CTaskMotionInTurret__Tunables : CTuning
{
	float                            _0xF3F98924;                     // type:FLOAT.0
	float                            _0xF4855F55;                     // type:FLOAT.0
	float                            _0x97700E6C;                     // type:FLOAT.0
	float                            _0xD1609D0B;                     // type:FLOAT.0
	float                            _0x0A35754D;                     // type:FLOAT.0
	float                            _0x7B9B6D54;                     // type:FLOAT.0
	float                            _0x49A6E928;                     // type:FLOAT.0
	float                            _0xA32A0456;                     // type:FLOAT.0
	float                            _0x3D38AEE8;                     // type:FLOAT.0
	float                            _0x82295127;                     // type:FLOAT.0
	float                            _0xB9A51429;                     // type:FLOAT.0
	float                            _0x38442414;                     // type:FLOAT.0
	float                            _0x985A9ADD;                     // type:FLOAT.0
	float                            _0x6BFED476;                     // type:FLOAT.0
	float                            _0x0CE9A73B;                     // type:FLOAT.0
	float                            _0x5708C862;                     // type:FLOAT.0
	float                            _0xB8AA913B;                     // type:FLOAT.0
	float                            _0x3C5359FE;                     // type:FLOAT.0
	float                            _0x7350853F;                     // type:FLOAT.0
	float                            _0xB1CA375B;                     // type:FLOAT.0
	float                            _0x9C6C1D29;                     // type:FLOAT.0
	float                            _0x4EF7C1F5;                     // type:FLOAT.0
	float                            _0x3F091F53;                     // type:FLOAT.0
	float                            _0x5C352C62;                     // type:FLOAT.0
	float                            _0xB6D68A00;                     // type:FLOAT.0
	float                            _0x65C9A4B5;                     // type:FLOAT.0
	float                            _0x8EC5B5E8;                     // type:FLOAT.0
	float                            _0x3F276330;                     // type:FLOAT.0
	float                            _0xB6903E44;                     // type:FLOAT.0
	float                            _0xAFD0551E;                     // type:FLOAT.0
	float                            _0x2A115A60;                     // type:FLOAT.0
	float                            _0x1B5E41AC;                     // type:FLOAT.0
	float                            _0x6B25AB0A;                     // type:FLOAT.0
	string                           _0x575DAAFA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x443A377D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2F218FDB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB2A92422;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x800CFC85;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1540D25C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9904E973;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB5581319;                     // type:STRING.ATNONFINALHASHSTRING
	string                           TurnLeftSlowClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                           TurnLeftFastClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                           _0x47E59E0C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDD50B30A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x92D3EF3E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE6ED0936;                     // type:STRING.ATNONFINALHASHSTRING
	string                           TurnRightSlowClipId;             // type:STRING.ATNONFINALHASHSTRING
	string                           TurnRightFastClipId;             // type:STRING.ATNONFINALHASHSTRING
	string                           _0x601312CF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x189EFCB8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x42692DF7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1FA7E2E7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7BD54C3D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC3718F8F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF0B9C42F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5CE8ABF3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF04D9CF6;                     // type:STRING.ATNONFINALHASHSTRING
};

struct CTaskMotionInVehicle__Tunables : CTuning
{
	bool                             DisableCloseDoor;                // type:BOOL.0
	bool                             DisableDoorHandleArmIk;          // type:BOOL.0
	bool                             DisableBikeHandleArmIk;          // type:BOOL.0
	float                            _0xC5106E95;                     // type:FLOAT.0
	float                            MinSpeedForVehicleToBeConsideredStillSqr; // type:FLOAT.0
	float                            VelocityDeltaThrownOut;          // type:FLOAT.0
	float                            VelocityDeltaThrownOutPlayerSP;  // type:FLOAT.0
	float                            VelocityDeltaThrownOutPlayerMP;  // type:FLOAT.0
	float                            MinRateForInVehicleAnims;        // type:FLOAT.0
	float                            MaxRateForInVehicleAnims;        // type:FLOAT.0
	float                            HeavyBrakeYAcceleration;         // type:FLOAT.0
	float                            MinRatioForClosingDoor;          // type:FLOAT.0
	float                            InAirZAccelTrigger;              // type:FLOAT.0
	float                            InAirProbeDistance;              // type:FLOAT.0
	float                            InAirProbeForwardOffset;         // type:FLOAT.0
	float                            MinPitchDefault;                 // type:FLOAT.0
	float                            MaxPitchDefault;                 // type:FLOAT.0
	float                            MinPitchInAir;                   // type:FLOAT.0
	float                            MaxPitchInAir;                   // type:FLOAT.0
	float                            DefaultPitchSmoothingRate;       // type:FLOAT.0
	float                            BikePitchSmoothingRate;          // type:FLOAT.0
	float                            BikePitchSmoothingPassengerRate; // type:FLOAT.0
	float                            WheelieAccelerateControlThreshold; // type:FLOAT.0
	float                            WheelieMaxSpeedThreshold;        // type:FLOAT.0
	float                            WheelieUpDownControlThreshold;   // type:FLOAT.0
	float                            WheelieDesiredLeanAngleTol;      // type:FLOAT.0
	float                            StillAccTol;                     // type:FLOAT.0
	float                            StillPitchAngleTol;              // type:FLOAT.0
	float                            AccelerationSmoothing;           // type:FLOAT.0
	float                            AccelerationSmoothingBike;       // type:FLOAT.0
	float                            AccelerationScaleBike;           // type:FLOAT.0
	float                            MinTimeInCurrentStateForStill;   // type:FLOAT.0
	float                            AccelerationToStartLeaning;      // type:FLOAT.0
	float                            ZAccelerationToStartLeaning;     // type:FLOAT.0
	float                            MaxAccelerationForLean;          // type:FLOAT.0
	float                            MaxXYAccelerationForLeanBike;    // type:FLOAT.0
	float                            MaxZAccelerationForLeanBike;     // type:FLOAT.0
	float                            StillDelayTime;                  // type:FLOAT.0
	float                            ShuntAccelerateMag;              // type:FLOAT.0
	float                            ShuntAccelerateMagBike;          // type:FLOAT.0
	float                            MinTimeInShuntStateBeforeRestart; // type:FLOAT.0
	float                            MaxAbsThrottleForCloseDoor;      // type:FLOAT.0
	float                            MaxVehSpeedToConsiderClosingDoor; // type:FLOAT.0
	float                            MaxDoorSpeedToConsiderClosingDoor; // type:FLOAT.0
	float                            MinVehVelocityToGoThroughWindscreen; // type:FLOAT.0
	float                            MinVehVelocityToGoThroughWindscreenMP; // type:FLOAT.0
	float                            MaxZComponentForCollisionNormal; // type:FLOAT.0
	float                            MaxTimeStreamInVehicleClipSetBeforeStartingEngine; // type:FLOAT.0
	float                            _0x4C7389F5;                     // type:FLOAT.0
	uint                             _0x23B9B1DF;                     // type:UINT.0
	string                           _0x8A0CD0E7;                     // type:STRING.ATNONFINALHASHSTRING
	vec2V                            _0x63512BD7;                     // type:VEC2V.0
	vec3V                            _0xF2E939C7;                     // type:VEC3V.0
	vec3V                            _0x203EAB5A;                     // type:VEC3V.0
	vec3V                            _0x2694D797;                     // type:VEC3V.0
	string                           _0xDF82DE21;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xC10C0DE5;                     // type:BOOL.0
};

struct CTaskMotionSwimming__Tunables : CTuning
{
	int                              MinStruggleTime;                 // type:INT.0
	int                              MaxStruggleTime;                 // type:INT.0
	array<struct _0xFDD6CA83>        ScubaGearVariations;             // type:ARRAY.ATARRAY
	array<struct fCargoFuel>         ScubaMaskProps;                  // type:ARRAY.ATARRAY
};

struct CTaskMotionTennis__Tunables : CTuning
{
	float                            StrafeDirectionLerpRateMinAI;    // type:FLOAT.0
	float                            StrafeDirectionLerpRateMaxAI;    // type:FLOAT.0
	float                            StrafeDirectionLerpRateMinPlayer; // type:FLOAT.0
	float                            StrafeDirectionLerpRateMaxPlayer; // type:FLOAT.0
};

struct CTaskMoveCombatMounted__Tunables : CTuning
{
	struct _0x0E98123A               _0x05EBAAA4;                     // type:STRUCT.STRUCTURE
	float                            _0x762B2FAA;                     // type:FLOAT.0
	float                            _0x2A14224B;                     // type:FLOAT.0
	float                            _0xDB2E0D6F;                     // type:FLOAT.0
	float                            _0x6985928A;                     // type:FLOAT.0
	float                            _0x436ECF4F;                     // type:FLOAT.0
	float                            _0x7C17CF52;                     // type:FLOAT.0
	float                            _0xF90DCD27;                     // type:FLOAT.0
	float                            _0xA71714C0;                     // type:FLOAT.0
	float                            _0x6E8E326E;                     // type:FLOAT.0
	float                            _0xFAF181D0;                     // type:FLOAT.0
	float                            _0xEC97FE83;                     // type:FLOAT.0
	float                            _0x5F5D4ABA;                     // type:FLOAT.0
	float                            _0x8EA13ABA;                     // type:FLOAT.0
	float                            _0xA85199E7;                     // type:FLOAT.0
	float                            _0x08A1F3B7;                     // type:FLOAT.0
	float                            _0x3DFD67AF;                     // type:FLOAT.0
	float                            _0x41CF765E;                     // type:FLOAT.0
	float                            _0x5C032BC5;                     // type:FLOAT.0
	float                            _0xA7D4B680;                     // type:FLOAT.0
	float                            _0x447CD94B;                     // type:FLOAT.0
	float                            _0x55241572;                     // type:FLOAT.0
	float                            _0x26007CF0;                     // type:FLOAT.0
	float                            _0x1CF268AA;                     // type:FLOAT.0
	float                            _0x1ADA3FDC;                     // type:FLOAT.0
	float                            _0x50FBCB29;                     // type:FLOAT.0
	float                            _0xD02F225F;                     // type:FLOAT.0
	float                            _0xC709A433;                     // type:FLOAT.0
	float                            _0x5D187423;                     // type:FLOAT.0
	float                            _0xE18129C3;                     // type:FLOAT.0
	float                            _0xD8DE3712;                     // type:FLOAT.0
	float                            _0x3914E494;                     // type:FLOAT.0
	float                            _0xEC44A058;                     // type:FLOAT.0
	float                            _0xA8411A22;                     // type:FLOAT.0
	float                            _0xE50000E8;                     // type:FLOAT.0
	float                            _0x29FD985E;                     // type:FLOAT.0
	float                            _0x91740EB1;                     // type:FLOAT.0
	float                            _0xE24112AD;                     // type:FLOAT.0
	float                            _0x51D5BC19;                     // type:FLOAT.0
	float                            _0xBA2A5070;                     // type:FLOAT.0
	float                            _0x854B41BD;                     // type:FLOAT.0
	float                            _0x66A57CAC;                     // type:FLOAT.0
	float                            _0x10585CF5;                     // type:FLOAT.0
	float                            _0x26AF50B5;                     // type:FLOAT.0
	float                            _0xF07F02C8;                     // type:FLOAT.0
	float                            _0x54DC51D6;                     // type:FLOAT.0
	float                            _0x95ABD171;                     // type:FLOAT.0
	float                            _0xD2F7F27F;                     // type:FLOAT.0
	float                            _0x7CD5B536;                     // type:FLOAT.0
	float                            _0x3C7DCA6C;                     // type:FLOAT.0
	float                            _0x5E1A051B;                     // type:FLOAT.0
	float                            _0x7C0D7883;                     // type:FLOAT.0
	float                            _0x8D0D6FDF;                     // type:FLOAT.0
	float                            _0x8ACCEA05;                     // type:FLOAT.0
	float                            _0xC39E4005;                     // type:FLOAT.0
	float                            _0xD7852C10;                     // type:FLOAT.0
	float                            _0x57863A99;                     // type:FLOAT.0
	float                            _0xCA8C6B0F;                     // type:FLOAT.0
	float                            _0x852BF21D;                     // type:FLOAT.0
	float                            _0xF6F3C33B;                     // type:FLOAT.0
	float                            _0xD76B9346;                     // type:FLOAT.0
	float                            _0x26F4CC5C;                     // type:FLOAT.0
	float                            _0x0E3D5535;                     // type:FLOAT.0
	float                            _0x80A6D205;                     // type:FLOAT.0
	float                            _0xE30D90DB;                     // type:FLOAT.0
	float                            _0xED0D3900;                     // type:FLOAT.0
	float                            _0x0F188989;                     // type:FLOAT.0
	float                            _0xE062092B;                     // type:FLOAT.0
	float                            _0x73697081;                     // type:FLOAT.0
	float                            _0xBB11F6A2;                     // type:FLOAT.0
	float                            _0x812B5B8F;                     // type:FLOAT.0
	float                            _0x0B2EC647;                     // type:FLOAT.0
	float                            _0xBE38B439;                     // type:FLOAT.0
	float                            _0xCFD1CD70;                     // type:FLOAT.0
	float                            _0x2139842A;                     // type:FLOAT.0
	float                            _0xEF2015CA;                     // type:FLOAT.0
	float                            _0xE97B7635;                     // type:FLOAT.0
	float                            _0x860423E8;                     // type:FLOAT.0
	float                            _0xFBC5DA42;                     // type:FLOAT.0
	float                            _0x465DE8B7;                     // type:FLOAT.0
	float                            _0x9201B69C;                     // type:FLOAT.0
	float                            _0x6D0AD984;                     // type:FLOAT.0
	float                            _0xAB0B93CF;                     // type:FLOAT.0
	float                            _0xA3D0E9B3;                     // type:FLOAT.0
	float                            _0xB6DC15C1;                     // type:FLOAT.0
	float                            _0x94021942;                     // type:FLOAT.0
	float                            _0x4678E427;                     // type:FLOAT.0
	float                            _0x37A3B58C;                     // type:FLOAT.0
	float                            _0x61179DDD;                     // type:FLOAT.0
	uint                             _0x96309142;                     // type:UINT.0
	uint                             _0x8980673C;                     // type:UINT.0
	uint                             _0x17796887;                     // type:UINT.0
	uint                             _0xB6A0AAFF;                     // type:UINT.0
	uint                             _0x90F0B9C3;                     // type:UINT.0
	uint                             _0xA67F9947;                     // type:UINT.0
	uint                             _0x0A01C50A;                     // type:UINT.0
	uint                             _0xACFB8801;                     // type:UINT.0
	uint                             _0x602B5EFB;                     // type:UINT.0
};

struct CTaskMoveCrossRoadAtTrafficLights__Tunables : CTuning
{
	bool                             bTrafficLightPositioning;        // type:BOOL.0
	array<struct _0x267307F7>        WaitingOffsets;                  // type:ARRAY.ATARRAY
	uint                             iMaxPedsAtTrafficLights;         // type:UINT.0
	float                            fMinDistanceBetweenPeds;         // type:FLOAT.0
	float                            fDecideToRunChance;              // type:FLOAT.0
	float                            fPlayerObstructionCheckRadius;   // type:FLOAT.0
	float                            fPlayerObstructionRadius;        // type:FLOAT.0
	bool                             bDebugRender;                    // type:BOOL.0
};

struct CTaskMoveFollowNavMesh__Tunables : CTuning
{
	uchar                            uRepeatedAttemptsBeforeTeleportToLeader; // type:UCHAR.0
	bool                             _0x1B00771E;                     // type:BOOL.0
	float                            _0x466B42A3;                     // type:FLOAT.0
	float                            ProbeRadius;                     // type:FLOAT.0
	float                            _0x81365720;                     // type:FLOAT.0
	float                            _0xA3824B22;                     // type:FLOAT.0
};

struct CTaskMoveToTacticalPoint__Tunables : CTuning
{
	struct _0xE12857D5               Scoring;                         // type:STRUCT.STRUCTURE
	float                            TimeUntilRelease;                // type:FLOAT.0
	float                            _0xF8EF38EB;                     // type:FLOAT.0
	float                            MaxDistanceToConsiderCloseToPositionToMoveTo; // type:FLOAT.0
	float                            TimeBetweenInfluenceSphereChecks; // type:FLOAT.0
	float                            _0x7BBB24CF;                     // type:FLOAT.0
	float                            _0x393A7E14;                     // type:FLOAT.0
	uint                             _0x3105BAE3;                     // type:UINT.0
};

struct CTaskMoveWithinAttackWindow__Tunables : CTuning
{
	float                            fMaxAngleOffset;                 // type:FLOAT.0
	float                            fMinAlliesForMaxAngleOffset;     // type:FLOAT.0
	float                            fMaxAllyDistance;                // type:FLOAT.0
	float                            fMaxRandomAdditionalOffset;      // type:FLOAT.0
	float                            fMaxRouteDistanceModifier;       // type:FLOAT.0
	float                            fMinTimeToWait;                  // type:FLOAT.0
	float                            fMaxTimeToWait;                  // type:FLOAT.0
	float                            _0xAD072566;                     // type:FLOAT.0
	float                            _0xD9870EB9;                     // type:FLOAT.0
	float                            _0x0B7177A5;                     // type:FLOAT.0
	float                            _0x06F73E1D;                     // type:FLOAT.0
	float                            _0xC5CEA9F4;                     // type:FLOAT.0
	float                            _0xD7396ED9;                     // type:FLOAT.0
	uint                             _0x92C1AC85;                     // type:UINT.0
};

struct CTaskNMBalance__Tunables : CTuning
{
	enum eAnimBoneTag                _0x94590EEE;                     // type:ENUM.32BIT
	struct _0x2D51D72B               InitialBumpForce;                // type:STRUCT.STRUCTURE
	vec3                             InitialBumpOffset;               // type:VECTOR3.0
	bool                             ScaleStayUprightWithVel;         // type:BOOL.0
	float                            StayUprightAtMaxVel;             // type:FLOAT.0
	float                            MaxVel;                          // type:FLOAT.0
	float                            StayUprightAtMinVel;             // type:FLOAT.0
	float                            MinVel;                          // type:FLOAT.0
	float                            lookAtVelProbIfNoBumpTarget;     // type:FLOAT.0
	float                            fMaxTargetDistToUpdateFlinch;    // type:FLOAT.0
	float                            fMaxTargetDistToUpdateFlinchOnGround; // type:FLOAT.0
	float                            fFlinchTargetZOffset;            // type:FLOAT.0
	float                            fFlinchTargetZOffsetOnGround;    // type:FLOAT.0
	float                            fMinForwardVectorToFlinch;       // type:FLOAT.0
	float                            fMinForwardVectorToFlinchOnGround; // type:FLOAT.0
	float                            fHeadLookZOffset;                // type:FLOAT.0
	float                            fHeadLookZOffsetOnGround;        // type:FLOAT.0
	int                              MaxSteps;                        // type:INT.0
	int                              timeToCatchfallMS;               // type:INT.0
	struct CNmTuningSet              StartWeak;                       // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StartAggressive;                 // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StartDefault;                    // type:STRUCT.STRUCTURE
	struct CNmTuningSet              BumpedByPed;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnStairs;                        // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnSteepSlope;                    // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnMovingGround;                  // type:STRUCT.STRUCTURE
	struct CNmTuningSet              LostBalanceAndGrabbing;          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Teeter;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              FallOffAMovingCar;               // type:STRUCT.STRUCTURE
	struct CNmTuningSet              RollingFall;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              CatchFall;                       // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailed;                 // type:STRUCT.STRUCTURE
	int                              NotBeingPushedDelayMS;           // type:INT.0
	int                              NotBeingPushedOnGroundDelayMS;   // type:INT.0
	int                              BeingPushedOnGroundTooLongMS;    // type:INT.0
	struct CNmTuningSet              OnBeingPushed;                   // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBeingPushedOnGround;           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnNotBeingPushed;                // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBeingPushedOnGroundTooLong;    // type:STRUCT.STRUCTURE
	struct _0xDF771251               PushedThresholdOnGround;         // type:STRUCT.STRUCTURE
};

struct CTaskNMBehaviour__Tunables : CTuning
{
	bool                                EnableRagdollPooling;            // type:BOOL.0
	int                                 MaxGameplayNmAgents;             // type:INT.0
	int                                 MaxRageRagdolls;                 // type:INT.0
	bool                                ReserveLocalPlayerNmAgent;       // type:BOOL.0
	bool                                _0x6311D36C;                     // type:BOOL.0
	bool                                EnableRagdollPoolingMp;          // type:BOOL.0
	int                                 MaxGameplayNmAgentsMp;           // type:INT.0
	int                                 MaxRageRagdollsMp;               // type:INT.0
	bool                                ReserveLocalPlayerNmAgentMp;     // type:BOOL.0
	bool                                _0xC647D18F;                     // type:BOOL.0
	bool                                BlockOffscreenShotReactions;     // type:BOOL.0
	bool                                UsePreEmptiveEdgeActivation;     // type:BOOL.0
	bool                                UsePreEmptiveEdgeActivationMp;   // type:BOOL.0
	bool                                UseBalanceForEdgeActivation;     // type:BOOL.0
	float                               PreEmptiveEdgeActivationMaxVel;  // type:FLOAT.0
	float                               PreEmptiveEdgeActivationMaxHeadingDiff; // type:FLOAT.0
	float                               PreEmptiveEdgeActivationMinDotVel; // type:FLOAT.0
	float                               PreEmptiveEdgeActivationMaxDistance; // type:FLOAT.0
	float                               _0x493CB17F;                     // type:FLOAT.0
	float                               _0xBC49C630;                     // type:FLOAT.0
	float                               _0x738A412B;                     // type:FLOAT.0
	struct _0xED316BE5                  StandardBlendOutThresholds;      // type:STRUCT.STRUCTURE
	struct _0xED316BE5                  _0x18AB9E0D;                     // type:STRUCT.STRUCTURE
	struct _0xED316BE5                  _0x44CA3636;                     // type:STRUCT.STRUCTURE
	array<struct _0xF553D153>           CamAttachPositionWeights;        // type:ARRAY.ATARRAY
	struct _0xA22C51AC                  SpActivationModifiers;           // type:STRUCT.STRUCTURE
	struct _0xA22C51AC                  MpActivationModifiers;           // type:STRUCT.STRUCTURE
	float                               PlayerBumpedByCloneCarActivationModifier; // type:FLOAT.0
	float                               ClonePlayerBumpedByCarActivationModifier; // type:FLOAT.0
	float                               _0xA3AC819F;                     // type:FLOAT.0
	float                               _0x7A1F741A;                     // type:FLOAT.0
	float                               _0x546CC067;                     // type:FLOAT.0
	float                               _0x435124CC;                     // type:FLOAT.0
	float                               _0x73C8FB6F;                     // type:FLOAT.0
	float                               _0xD5A5F505;                     // type:FLOAT.0
	float                               _0x11A751A1;                     // type:FLOAT.0
	float                               _0x262868A9;                     // type:FLOAT.0
	float                               MaxVehicleCapsulePushTimeForRagdollActivation; // type:FLOAT.0
	float                               MaxVehicleCapsulePushTimeForPlayerRagdollActivation; // type:FLOAT.0
	float                               VehicleMinSpeedForContinuousPushActivation; // type:FLOAT.0
	float                               MinContactDepthForContinuousPushActivation; // type:FLOAT.0
	float                               DurationRampDownCapsulePushedByVehicle; // type:FLOAT.0
	float                               VehicleMinSpeedForAiActivation;  // type:FLOAT.0
	float                               VehicleMinSpeedForStationaryAiActivation; // type:FLOAT.0
	float                               VehicleMinSpeedForPlayerActivation; // type:FLOAT.0
	float                               VehicleMinSpeedForStationaryPlayerActivation; // type:FLOAT.0
	float                               VehicleMinSpeedForWarningActivation; // type:FLOAT.0
	float                               _0x029ABFB3;                     // type:FLOAT.0
	float                               VehicleFallingSpeedWeight;       // type:FLOAT.0
	float                               VehicleActivationForceMultiplierDefault; // type:FLOAT.0
	float                               VehicleActivationForceMultiplierBicycle; // type:FLOAT.0
	float                               VehicleActivationForceMultiplierBike; // type:FLOAT.0
	float                               VehicleActivationForceMultiplierBoat; // type:FLOAT.0
	float                               VehicleActivationForceMultiplierPlane; // type:FLOAT.0
	float                               VehicleActivationForceMultiplierQuadBike; // type:FLOAT.0
	float                               VehicleActivationForceMultiplierHeli; // type:FLOAT.0
	float                               VehicleActivationForceMultiplierTrain; // type:FLOAT.0
	float                               _0xADB1F6B0;                     // type:FLOAT.0
	bool                                ExcludePedBumpAngleFromPushCalculation; // type:BOOL.0
	float                               PedActivationForceMultiplier;    // type:FLOAT.0
	float                               ObjectMinSpeedForActivation;     // type:FLOAT.0
	float                               ObjectActivationForceMultiplier; // type:FLOAT.0
	float                               MaxPlayerCapsulePushTimeForRagdollActivation; // type:FLOAT.0
	float                               _0xB01CEF0A;                     // type:FLOAT.0
	float                               PlayerCapsuleMinSpeedForContinuousPushActivation; // type:FLOAT.0
	float                               _0xA4E11FBF;                     // type:FLOAT.0
	float                               StuckOnVehicleMaxTime;           // type:FLOAT.0
	struct _0xED316BE5                  StuckOnVehicleBlendOutThresholds; // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 TeeterControl;                   // type:STRUCT.STRUCTURE
	float                               _0x6D83AF18;                     // type:FLOAT.0
	float                               _0x08E85939;                     // type:FLOAT.0
	struct CNmTuningSet                 _0xF9B84D90;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 _0x9A28897A;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 ForceFall;                       // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 _0x348224FE;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 _0x9F8B5024;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 _0x6596C618;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 _0xE7596F1B;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet                 _0xD7D1D674;                     // type:STRUCT.STRUCTURE
	float                               _0xA1773F89;                     // type:FLOAT.0
	struct _0x00E10AF1                  _0x892A6DB9;                     // type:STRUCT.STRUCTURE
	struct _0x00E10AF1                  _0x32CD9588;                     // type:STRUCT.STRUCTURE
	struct _0x00E10AF1                  _0x7F1620E1;                     // type:STRUCT.STRUCTURE
	struct _0x0FEA1FB7                  RagdollUnderWheelTuning;         // type:STRUCT.STRUCTURE
	struct _0x99ABC726                  KickOnGroundTuning;              // type:STRUCT.STRUCTURE
	struct _0x3DFE3442                  CapsuleVehicleHitTuning;         // type:STRUCT.STRUCTURE
	map<string, struct _0x00E10AF1>     Tuning;                          // type:MAP.ATBINARYMAP
};

struct CTaskNMBrace__Tunables : CTuning
{
	struct _0x8416DCAB               VehicleOverrides;                // type:STRUCT.STRUCTURE
	struct _0x4B895669               InverseMassScales;               // type:STRUCT.STRUCTURE
	struct _0x0E373713               AngularVelocityLimits;           // type:STRUCT.STRUCTURE
	array<struct _0xA76D1305, 5>     _0x140B7981;                     // type:ARRAY.MEMBER
	struct _0xE374330A               ChestForce;                      // type:STRUCT.STRUCTURE
	struct _0xE374330A               FeetLiftForce;                   // type:STRUCT.STRUCTURE
	struct _0xE374330A               RootLiftForce;                   // type:STRUCT.STRUCTURE
	struct _0xE374330A               FlipForce;                       // type:STRUCT.STRUCTURE
	struct _0xE374330A               CapsuleHitForce;                 // type:STRUCT.STRUCTURE
	struct _0xE374330A               SideSwipeForce;                  // type:STRUCT.STRUCTURE
	bool                             ForceUnderVehicle;               // type:BOOL.0
	bool                             ForceOverVehicle;                // type:BOOL.0
	float                            ChestForcePitch;                 // type:FLOAT.0
	bool                             AllowWarningActivations;         // type:BOOL.0
	float                            LowVelocityReactionThreshold;    // type:FLOAT.0
	float                            _0x7D5EF2E4;                     // type:FLOAT.0
	float                            _0x673DDE22;                     // type:FLOAT.0
	float                            FallingSpeedForHighFall;         // type:FLOAT.0
	float                            VehicleCollisionElasticityMult;  // type:FLOAT.0
	float                            VehicleCollisionFrictionMult;    // type:FLOAT.0
	float                            _0x598FCC19;                     // type:FLOAT.0
	float                            _0x2542E901;                     // type:FLOAT.0
	float                            _0x2A2B4C20;                     // type:FLOAT.0
	int                              _0x51B34502;                     // type:INT.0
	int                              _0x340F751A;                     // type:INT.0
	int                              _0xDF05DF78;                     // type:INT.0
	int                              _0xFCA5C6D5;                     // type:INT.0
	int                              _0xCA30A8DA;                     // type:INT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnStairs;                        // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Weak;                            // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailed;                 // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailedStairs;           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              HighVelocity;                    // type:STRUCT.STRUCTURE
	float                            StuckUnderVehicleMaxUpright;     // type:FLOAT.0
	struct _0x62504236               StuckOnVehicle;                  // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Dead;                            // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x8B1D09EE;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x13ABFD08;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xCD2A1222;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x36E6978E;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x88AFC486;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x257D396E;                     // type:STRUCT.STRUCTURE
	struct _0xED316BE5               HighVelocityBlendOut;            // type:STRUCT.STRUCTURE
	struct _0xED316BE5               _0xB00E362E;                     // type:STRUCT.STRUCTURE
};

struct CTaskNMBuoyancy__Tunables : CTuning
{
	struct CNmTuningSet              _0x8AA394A7;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xA2320A53;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xCD695E0B;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x22510B65;                     // type:STRUCT.STRUCTURE
};

struct CTaskNMControl__Tunables : CTuning
{
	struct _0x101A7B94               _0x54113396;                     // type:STRUCT.STRUCTURE
};

struct CTaskNMElectrocute__Tunables : CTuning
{
	enum eAnimBoneTag                _0xA18B73A6;                     // type:ENUM.32BIT
	struct _0x2D51D72B               InitialForce;                    // type:STRUCT.STRUCTURE
	vec3                             InitialForceOffset;              // type:VECTOR3.0
	float                            FallingSpeedForHighFall;         // type:FLOAT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Walking;                         // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Running;                         // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Sprinting;                       // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailed;                 // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnCatchFallSuccess;              // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnElectrocuteFinished;           // type:STRUCT.STRUCTURE
};

struct CTaskNMExplosion__Tunables : CTuning
{
	int                              MinStunnedTime;                  // type:INT.0
	int                              MaxStunnedTime;                  // type:INT.0
	float                            _0x2FB07184;                     // type:FLOAT.0
	bool                             AllowPlayerStunned;              // type:BOOL.0
	bool                             UseRelaxBehaviour;               // type:BOOL.0
	float                            RollUpHeightThreshold;           // type:FLOAT.0
	float                            CatchFallHeightThresholdRollUp;  // type:FLOAT.0
	float                            CatchFallHeightThresholdWindmill; // type:FLOAT.0
	float                            CatchFallHeightThresholdClipPose; // type:FLOAT.0
	uint                             TimeToStartCatchFall;            // type:UINT.0
	uint                             TimeToStartCatchFallPlayer;      // type:UINT.0
	float                            _0x85B2BEE5;                     // type:FLOAT.0
	bool                             DoCatchFallRelax;                // type:BOOL.0
	float                            CatchFallRelaxHeight;            // type:FLOAT.0
	int                              MinTimeForInitialState;          // type:INT.0
	int                              MaxTimeForInitialState;          // type:INT.0
	bool                             ForceRollUp;                     // type:BOOL.0
	bool                             ForceWindmill;                   // type:BOOL.0
	struct CNmTuningSet              StartWindmill;                   // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StartCatchFall;                  // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StartRollDownStairs;             // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct _0xD0121EEB               Explosion;                       // type:STRUCT.STRUCTURE
};

struct CTaskNMFlinch__Tunables : CTuning
{
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              WaterCannon;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Armoured;                        // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnStairs;                        // type:STRUCT.STRUCTURE
	struct CNmTuningSet              BoundAnkles;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              FatallyInjured;                  // type:STRUCT.STRUCTURE
	struct CNmTuningSet              PlayerDeath;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              HoldingTwoHandedWeapon;          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              HoldingSingleHandedWeapon;       // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailed;                 // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailedStairs;           // type:STRUCT.STRUCTURE
	struct _0x7B684AFD               WeaponSets;                      // type:STRUCT.STRUCTURE
	int                              MinLeanInDirectionTime;          // type:INT.0
	int                              MaxLeanInDirectionTime;          // type:INT.0
};

struct CTaskNMHighFall__Tunables : CTuning
{
	struct _0x2D51D72B               PitchInDirectionForce;           // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                _0xB6DD87C1;                     // type:ENUM.32BIT
	struct _0x2D51D72B               StuntJumpPitchInDirectionForce;  // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                _0x93826290;                     // type:ENUM.32BIT
	int                              HighFallTimeToBlockInjuredOnGround; // type:INT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xCD695E0B;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              InAir;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Vault;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              FromCarHit;                      // type:STRUCT.STRUCTURE
	struct CNmTuningSet              SlopeSlide;                      // type:STRUCT.STRUCTURE
	struct CNmTuningSet              TeeterEdge;                      // type:STRUCT.STRUCTURE
	struct CNmTuningSet              SprintExhausted;                 // type:STRUCT.STRUCTURE
	struct CNmTuningSet              JumpCollision;                   // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StuntJump;                       // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailedSprintExhausted;  // type:STRUCT.STRUCTURE
	bool                             DisableStartMessageForSprintExhausted; // type:BOOL.0
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x6B968275;                     // type:STRUCT.STRUCTURE
	struct _0xED316BE5               BlendOut;                        // type:STRUCT.STRUCTURE
	struct _0xED316BE5               QuickBlendOut;                   // type:STRUCT.STRUCTURE
	float                            MaxHealthLossForQuickGetup;      // type:FLOAT.0
	float                            MpMaxHealthLossForQuickGetup;    // type:FLOAT.0
	bool                             UseRemainingMinTimeForGroundWrithe; // type:BOOL.0
	int                              MinTimeRemainingForGroundWrithe; // type:INT.0
	int                              MinTimeElapsedForGroundWrithe;   // type:INT.0
	struct CNmTuningSet              HighHighFallStart;               // type:STRUCT.STRUCTURE
	struct CNmTuningSet              SuperHighFallStart;              // type:STRUCT.STRUCTURE
	struct CNmTuningSet              HighHighFallEnd;                 // type:STRUCT.STRUCTURE
	uint                             _0x285C04FC;                     // type:UINT.0
	uchar                            AirResistanceOption;             // type:UCHAR.0
	float                            DistanceZThresholdForHighHighFall; // type:FLOAT.0
	float                            VelocityZThresholdForHighHighFall; // type:FLOAT.0
	float                            VelocityZThresholdForSuperHighFall; // type:FLOAT.0
	array<float, 21>                 RagdollComponentAirResistanceForce; // type:ARRAY.ATRANGEARRAY
	array<float, 20>                 RagdollComponentAirResistanceMinStiffness; // type:ARRAY.ATRANGEARRAY
};

struct CTaskNMInjuredOnGround__Tunables : CTuning
{
	float                            fDoInjuredOnGroundChance;        // type:FLOAT.0
	float                            fFallingSpeedThreshold;          // type:FLOAT.0
	float                            _0xC86873A6;                     // type:FLOAT.0
	float                            _0xD6F2DA04;                     // type:FLOAT.0
	int                              iRandomDurationMin;              // type:INT.0
	int                              iRandomDurationMax;              // type:INT.0
	int                              _0xF65CC41E;                     // type:INT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
};

struct CTaskNMJumpRollFromRoadVehicle__Tunables : CTuning
{
	float                            GravityScale;                    // type:FLOAT.0
	float                            StartForceDownHeight;            // type:FLOAT.0
	float                            _0xDD48C552;                     // type:FLOAT.0
	float                            _0xCCE1B78B;                     // type:FLOAT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct _0x7B684AFD               EntryPointSets;                  // type:STRUCT.STRUCTURE
	struct _0xED316BE5               BlendOut;                        // type:STRUCT.STRUCTURE
	struct _0xED316BE5               QuickBlendOut;                   // type:STRUCT.STRUCTURE
};

struct CTaskNMOnFire__Tunables : CTuning
{
	struct _0x00E10AF1               Biped;                           // type:STRUCT.STRUCTURE
	struct _0x00E10AF1               Quadruped;                       // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Weak;                            // type:STRUCT.STRUCTURE
};

struct CTaskNMRiverRapids__Tunables : CTuning
{
	float                            fMinRiverFlowForRapids;          // type:FLOAT.0
	float                            _0x25A99767;                     // type:FLOAT.0
	float                            fMinRiverGroundClearanceForRapids; // type:FLOAT.0
	float                            _0x073E2838;                     // type:FLOAT.0
	float                            _0xF8BE4AC0;                     // type:FLOAT.0
	float                            _0xA176B778;                     // type:FLOAT.0
	float                            _0x3988B028;                     // type:FLOAT.0
	float                            _0x3C798446;                     // type:FLOAT.0
	bool                             bHorizontalRighting;             // type:BOOL.0
	float                            fHorizontalRightingStrength;     // type:FLOAT.0
	float                            fHorizontalRightingTime;         // type:FLOAT.0
	bool                             bVerticalRighting;               // type:BOOL.0
	float                            fVerticalRightingStrength;       // type:FLOAT.0
	float                            fVerticalRightingTime;           // type:FLOAT.0
	float                            _0x4609A7DD;                     // type:FLOAT.0
	array<float, 21>                 _0x3A9F47A9;                     // type:ARRAY.ATRANGEARRAY
	array<float, 23>                 _0x86EC9D85;                     // type:ARRAY.ATRANGEARRAY
	struct _0x8CC6DD1A               BodyWrithe;                      // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x8AA394A7;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xE74CE978;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xCD695E0B;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x6B968275;                     // type:STRUCT.STRUCTURE
};

struct CTaskNMShot__Tunables : CTuning
{
	int                              MinimumShotReactionTimePlayerMS; // type:INT.0
	int                              MinimumShotReactionTimeAIMS;     // type:INT.0
	uint                             _0x01BA033B;                     // type:UINT.0
	uint                             _0x2C8C0AA1;                     // type:UINT.0
	uint                             _0x5C6223BC;                     // type:UINT.0
	uint                             _0x51171872;                     // type:UINT.0
	float                            _0x21EACE22;                     // type:FLOAT.0
	bool                             bEnableDebugDraw;                // type:BOOL.0
	float                            fImpactConeAngleFront;           // type:FLOAT.0
	float                            fImpactConeAngleBack;            // type:FLOAT.0
	enum eAnimBoneTag                _0x3D6C6BF4;                     // type:ENUM.32BIT
	int                              iShotMinTimeBeforeGunThreaten;   // type:INT.0
	int                              iShotMaxTimeBeforeGunThreaten;   // type:INT.0
	int                              iShotMinTimeBetweenFireGun;      // type:INT.0
	int                              iShotMaxTimeBetweenFireGun;      // type:INT.0
	int                              BlendOutDelayStanding;           // type:INT.0
	int                              BlendOutDelayBalanceFailed;      // type:INT.0
	float                            fShotBlindFireProbability;       // type:FLOAT.0
	float                            fMinFinisherShotgunTotalImpulseNormal; // type:FLOAT.0
	float                            fMinFinisherShotgunTotalImpulseBraced; // type:FLOAT.0
	float                            fFinisherShotgunBonusArmedSpeedModifier; // type:FLOAT.0
	float                            _0x6EF73322;                     // type:FLOAT.0
	float                            _0xE376EAA0;                     // type:FLOAT.0
	float                            _0x1903FB0B;                     // type:FLOAT.0
	float                            _0xD87CFBFA;                     // type:FLOAT.0
	float                            _0x7C88857E;                     // type:FLOAT.0
	bool                             ScaleSnapWithSpineOrientation;   // type:BOOL.0
	float                            MinSnap;                         // type:FLOAT.0
	bool                             _0x2FAE03C1;                     // type:BOOL.0
	bool                             _0x512656FF;                     // type:BOOL.0
	struct _0x8BA18FD2               ShotAgainstWall;                 // type:STRUCT.STRUCTURE
	struct _0x234676E3               _0x157E9674;                     // type:STRUCT.STRUCTURE
	float                            BCRExclusionZone;                // type:FLOAT.0
	struct _0x0C766FD5               Impulses;                        // type:STRUCT.STRUCTURE
	struct _0x9DC65250               _0x5F2E69AE;                     // type:STRUCT.STRUCTURE
	struct _0x3B6C8B1B               HitRandomisation;                // type:STRUCT.STRUCTURE
	struct _0x3B6C8B1B               HitRandomisationAutomatic;       // type:STRUCT.STRUCTURE
	struct _0x3BB87028               StayUpright;                     // type:STRUCT.STRUCTURE
	struct _0x801B14B0               ArmShot;                         // type:STRUCT.STRUCTURE
	float                            FallingSpeedForHighFall;         // type:FLOAT.0
	float                            _0xCB141190;                     // type:FLOAT.0
	bool                             ReduceDownedTimeByPerformanceTime; // type:BOOL.0
	int                              MinimumDownedTime;               // type:INT.0
	float                            ChanceOfFallToKneesOnCollapse;   // type:FLOAT.0
	float                            ChanceOfFallToKneesAfterLastStand; // type:FLOAT.0
	float                            ChanceForGutShotKnockdown;       // type:FLOAT.0
	float                            LastStandMaxTotalTime;           // type:FLOAT.0
	float                            LastStandMaxArmouredTotalTime;   // type:FLOAT.0
	int                              RapidHitCount;                   // type:INT.0
	int                              ArmouredRapidHitCount;           // type:INT.0
	int                              _0x0EEEC5A3;                     // type:INT.0
	int                              _0xA4D51055;                     // type:INT.0
	int                              _0xF21DF706;                     // type:INT.0
	bool                             AllowArmouredLegShot;            // type:BOOL.0
	bool                             AllowArmouredKnockdown;          // type:BOOL.0
	bool                             DisableReachForWoundOnHeadShot;  // type:BOOL.0
	int                              DisableReachForWoundOnHeadShotMinDelay; // type:INT.0
	int                              DisableReachForWoundOnHeadShotMaxDelay; // type:INT.0
	bool                             DisableReachForWoundOnNeckShot;  // type:BOOL.0
	int                              DisableReachForWoundOnNeckShotMinDelay; // type:INT.0
	int                              DisableReachForWoundOnNeckShotMaxDelay; // type:INT.0
	struct _0x7B684AFD               ParamSets;                       // type:STRUCT.STRUCTURE
	struct _0xED316BE5               BlendOutThreshold;               // type:STRUCT.STRUCTURE
	struct _0xED316BE5               _0xC89BE3AB;                     // type:STRUCT.STRUCTURE
	struct _0xDF771251               SubmergedBlendOutThreshold;      // type:STRUCT.STRUCTURE
};

struct CTaskNMThroughWindscreen__Tunables : CTuning
{
	float                            GravityScale;                    // type:FLOAT.0
	float                            StartForceDownHeight;            // type:FLOAT.0
	float                            KnockOffBikeForwardMinComponent; // type:FLOAT.0
	float                            KnockOffBikeForwardMaxComponent; // type:FLOAT.0
	float                            KnockOffBikeUpMinComponent;      // type:FLOAT.0
	float                            KnockOffBikeUpMaxComponent;      // type:FLOAT.0
	float                            KnockOffBikePitchMinComponent;   // type:FLOAT.0
	float                            KnockOffBikePitchMaxComponent;   // type:FLOAT.0
	float                            KnockOffBikeMinSpeed;            // type:FLOAT.0
	float                            KnockOffBikeMaxSpeed;            // type:FLOAT.0
	float                            KnockOffBikeMinUpright;          // type:FLOAT.0
	float                            KnockOffBikeMaxUpright;          // type:FLOAT.0
	float                            KnockOffBikeEjectMaxImpactDepth; // type:FLOAT.0
	float                            KnockOffBikeEjectImpactFriction; // type:FLOAT.0
	float                            _0x6414A5C8;                     // type:FLOAT.0
	float                            _0x5339CABB;                     // type:FLOAT.0
	int                              ClearVehicleTimeMS;              // type:INT.0
	struct _0x4B895669               DefaultInverseMassScales;        // type:STRUCT.STRUCTURE
	struct _0x4B895669               BicycleInverseMassScales;        // type:STRUCT.STRUCTURE
	struct _0x4B895669               BikeInverseMassScales;           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
};

struct CTaskOpenVehicleDoorFromOutside__Tunables : CTuning
{
	bool                             EnableOpenDoorHandIk;            // type:BOOL.0
	float                            DefaultOpenDoorStartPhase;       // type:FLOAT.0
	float                            DefaultOpenDoorEndPhase;         // type:FLOAT.0
	float                            DefaultOpenDoorStartIkPhase;     // type:FLOAT.0
	float                            DefaultOpenDoorEndIkPhase;       // type:FLOAT.0
	float                            MinBlendWeightToUseHighClipEvents; // type:FLOAT.0
	float                            DefaultOpenDoorRate;             // type:FLOAT.0
	float                            MinHandleHeightDiffVan;          // type:FLOAT.0
	float                            MaxHandleHeightDiffVan;          // type:FLOAT.0
	float                            MaxHandleHeightDiff;             // type:FLOAT.0
	string                           DefaultOpenDoorClipId;           // type:STRING.ATNONFINALHASHSTRING
	string                           HighOpenDoorClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                           CombatOpenDoorClipId;            // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultTryLockedDoorClipId;      // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultForcedEntryClipId;        // type:STRING.ATNONFINALHASHSTRING
};

struct CTaskPlaneChase__Tunables : CTuning
{
};

struct CTaskPlayerOnFoot__Tunables : CTuning
{
	struct _0x30503071               ParachutePack;                   // type:STRUCT.STRUCTURE
	struct _0xFD7A877C               ScubaGear;                       // type:STRUCT.STRUCTURE
	struct _0xA51BC359               _0x39FF1E76;                     // type:STRUCT.STRUCTURE
	struct _0x8F6B4E58               Facing;                          // type:STRUCT.STRUCTURE
	struct _0x8BEC3296               RunAndGun;                       // type:STRUCT.STRUCTURE
	struct _0x16350796               _0x540BF408;                     // type:STRUCT.STRUCTURE
	struct _0xFAE9F5BC               _0x608B5C48;                     // type:STRUCT.STRUCTURE
	struct _0x8AA74EAE               _0xE324C5C7;                     // type:STRUCT.STRUCTURE
	struct _0xF2C76E68               _0xECDC1D8E;                     // type:STRUCT.STRUCTURE
	bool                             EvaluateThreatFromCoverPoints;   // type:BOOL.0
	bool                             _0xC5DBFC77;                     // type:BOOL.0
	bool                             _0x6596F853;                     // type:BOOL.0
	float                            ArrestDistance;                  // type:FLOAT.0
	float                            ArrestDot;                       // type:FLOAT.0
	float                            MaxEncumberedClimbHeight;        // type:FLOAT.0
	float                            MaxTrainClimbHeight;             // type:FLOAT.0
	float                            TakeCustodyDistance;             // type:FLOAT.0
	float                            UncuffDistance;                  // type:FLOAT.0
	float                            TimeBetweenPlayerEvents;         // type:FLOAT.0
	float                            DistanceBetweenAiPedsCoverAndPlayersCover; // type:FLOAT.0
	float                            MaxDistanceAiPedFromTheirCoverToAbortPlayerEnterCover; // type:FLOAT.0
	float                            SmallCapsuleCoverPenalty;        // type:FLOAT.0
	float                            SmallCapsuleCoverRadius;         // type:FLOAT.0
	float                            PriorityCoverWeight;             // type:FLOAT.0
	float                            EdgeCoverWeight;                 // type:FLOAT.0
	float                            DistToCoverWeightThreat;         // type:FLOAT.0
	float                            DistToCoverWeight;               // type:FLOAT.0
	float                            DistToCoverWeightNoStickBonus;   // type:FLOAT.0
	float                            VeryCloseToCoverDist;            // type:FLOAT.0
	float                            VeryCloseToCoverWeight;          // type:FLOAT.0
	float                            DesiredDirToCoverWeight;         // type:FLOAT.0
	float                            DesiredDirToCoverAimingWeight;   // type:FLOAT.0
	float                            ThreatDirWeight;                 // type:FLOAT.0
	float                            ThreatEngageDirWeight;           // type:FLOAT.0
	float                            CoverDirToCameraWeightMin;       // type:FLOAT.0
	float                            CoverDirToCameraWeightMax;       // type:FLOAT.0
	float                            CoverDirToCameraWeightMaxAimGun; // type:FLOAT.0
	float                            CoverDirToCameraWeightMaxScaleDist; // type:FLOAT.0
	float                            DesiredDirToCoverMinDot;         // type:FLOAT.0
	float                            CameraDirToCoverMinDot;          // type:FLOAT.0
	float                            StaticLosTest1Offset;            // type:FLOAT.0
	float                            StaticLosTest2Offset;            // type:FLOAT.0
	float                            CollisionLosHeightOffset;        // type:FLOAT.0
	float                            VeryCloseIgnoreDesAndCamToleranceDist; // type:FLOAT.0
	float                            VeryCloseIgnoreDesAndCamToleranceDistAimGun; // type:FLOAT.0
	float                            DeadZoneStickNorm;               // type:FLOAT.0
	float                            SearchThreatMaxDot;              // type:FLOAT.0
	string                           _0xC6649D17;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x48D55B25;                     // type:BOOL.0
	bool                             _0x43E1439E;                     // type:BOOL.0
	float                            _0x1CF0BF87;                     // type:FLOAT.0
	float                            _0xE6404EAD;                     // type:FLOAT.0
	float                            _0x80A5A3C1;                     // type:FLOAT.0
	float                            _0x62A37E2D;                     // type:FLOAT.0
	float                            _0x8FE2FB29;                     // type:FLOAT.0
	float                            _0x205C7448;                     // type:FLOAT.0
	float                            _0xAE7B04CB;                     // type:FLOAT.0
	float                            _0xB420CE94;                     // type:FLOAT.0
	float                            _0xBA1347BB;                     // type:FLOAT.0
	float                            _0xEF039B0A;                     // type:FLOAT.0
	float                            _0x9812588A;                     // type:FLOAT.0
	float                            _0xA5C9A8C3;                     // type:FLOAT.0
	float                            _0xBF01FB4C;                     // type:FLOAT.0
	float                            _0xD51B54BB;                     // type:FLOAT.0
	float                            _0x5AD1749F;                     // type:FLOAT.0
	uint                             _0xDDA689F5;                     // type:UINT.0
	uint                             _0xEC7DBA20;                     // type:UINT.0
	uint                             _0x5293E41C;                     // type:UINT.0
	uint                             _0x2A05C214;                     // type:UINT.0
	uint                             _0x2281D665;                     // type:UINT.0
	uint                             _0x29C844E6;                     // type:UINT.0
	uint                             _0xBCFBC977;                     // type:UINT.0
	bool                             _0x0F03871D;                     // type:BOOL.0
	bool                             _0x22172A1E;                     // type:BOOL.0
	bool                             _0x1337E834;                     // type:BOOL.0
	float                            _0xAB555C72;                     // type:FLOAT.0
	float                            _0x9213EBB8;                     // type:FLOAT.0
	enum AmbientEventType            _0x8F954738;                     // type:ENUM.32BIT
	enum AmbientEventType            _0xDE265BFB;                     // type:ENUM.32BIT
	enum AmbientEventType            _0x4E519F95;                     // type:ENUM.32BIT
	enum AmbientEventType            _0x8A307B6C;                     // type:ENUM.32BIT
	enum AmbientEventType            _0x22E81F7F;                     // type:ENUM.32BIT
	string                           _0xAFA28D08;                     // type:STRING.ATSTRING
	string                           _0x64AB5D49;                     // type:STRING.ATSTRING
	bool                             UseThreatWeighting;              // type:BOOL.0
	bool                             _0x75E6C7FB;                     // type:BOOL.0
};

struct CTaskPoliceOrderResponse__Tunables : CTuning
{
	struct _0xD9187C8E               Approach;                        // type:STRUCT.STRUCTURE
	float                            MaxTimeToWait;                   // type:FLOAT.0
	float                            MaxSpeedForVehicleMovingSlowly;  // type:FLOAT.0
	float                            MinSpeedForVehicleMovingQuickly; // type:FLOAT.0
	float                            TimeBeforeOvertakeToMatchSpeedWhenPulledOver; // type:FLOAT.0
	float                            TimeBeforeOvertakeToMatchSpeedWhenCruising; // type:FLOAT.0
	float                            CheatPowerIncreaseForMatchSpeed; // type:FLOAT.0
	float                            _0x1F6E0529;                     // type:FLOAT.0
	float                            _0x51B76C77;                     // type:FLOAT.0
	float                            _0xC5068861;                     // type:FLOAT.0
	float                            _0x655DED98;                     // type:FLOAT.0
	float                            _0x8103DDB0;                     // type:FLOAT.0
	float                            _0xB5A59DC9;                     // type:FLOAT.0
	uint                             _0xE1FE4530;                     // type:UINT.0
	bool                             _0x9F472E28;                     // type:BOOL.0
	bool                             _0x3FB1185B;                     // type:BOOL.0
};

struct CTaskPursueCriminal__Tunables : CTuning
{
	float                            MinDistanceToFindVehicle;        // type:FLOAT.0
	float                            MaxDistanceToFindVehicle;        // type:FLOAT.0
	float                            MaxHeightDifference;             // type:FLOAT.0
	float                            DotProductFacing;                // type:FLOAT.0
	float                            DotProductBehind;                // type:FLOAT.0
	int                              DistanceToFollowVehicleBeforeFlee; // type:INT.0
	float                            DistanceToSignalVehiclePursuitToCriminal; // type:FLOAT.0
	int                              TimeToSignalVehiclePursuitToCriminalMin; // type:INT.0
	int                              TimeToSignalVehiclePursuitToCriminalMax; // type:INT.0
	bool                             DrawDebug;                       // type:BOOL.0
	bool                             AllowPursuePlayer;               // type:BOOL.0
	float                            CriminalVehicleMinStartSpeed;    // type:FLOAT.0
};

struct CTaskRageRagdoll__Tunables : CTuning
{
	struct _0xD9679997               _0x38F14384;                     // type:STRUCT.STRUCTURE
	struct _0xD9679997               _0x44A50FB6;                     // type:STRUCT.STRUCTURE
	struct _0xA1D4BCF5               RageRagdollImpulseTuning;        // type:STRUCT.STRUCTURE
	struct _0xD6B30565               _0xA947ADCA;                     // type:STRUCT.STRUCTURE
	struct _0xD6B30565               _0x92E3A535;                     // type:STRUCT.STRUCTURE
	struct _0x2EBAA9ED               _0x593E13F2;                     // type:STRUCT.STRUCTURE
	bool                             _0x17CCBDEC;                     // type:BOOL.0
};

struct CTaskReactAimWeapon__Tunables : CTuning
{
	struct _0xC6408A81               Professional;                    // type:STRUCT.STRUCTURE
	struct _0xC6408A81               NotProfessional;                 // type:STRUCT.STRUCTURE
	float                            Rate;                            // type:FLOAT.0
	float                            MaxRateVariance;                 // type:FLOAT.0
	bool                             _0x74B7CFF0;                     // type:BOOL.0
	struct _0x66A383CA               _0xF8C5A82D;                     // type:STRUCT.STRUCTURE
	struct _0x66A383CA               _0x7E35B8FE;                     // type:STRUCT.STRUCTURE
	struct _0x66A383CA               _0xC348DD43;                     // type:STRUCT.STRUCTURE
	struct _0x66A383CA               _0xD68EEA84;                     // type:STRUCT.STRUCTURE
};

struct CTaskReactInDirection__Tunables : CTuning
{
};

struct CTaskReactToBeingAskedToLeaveVehicle__Tunables : CTuning
{
	float                            MaxTimeToWatchVehicle;           // type:FLOAT.0
	float                            MaxDistanceToWatchVehicle;       // type:FLOAT.0
};

struct CTaskReactToBuddyShot__Tunables : CTuning
{
};

struct CTaskReactToExplosion__Tunables : CTuning
{
	float                            MaxShellShockedDistance;         // type:FLOAT.0
	float                            MaxFlinchDistance;               // type:FLOAT.0
	float                            MaxLookAtDistance;               // type:FLOAT.0
};

struct CTaskReactToImminentExplosion__Tunables : CTuning
{
	float                            MaxEscapeDistance;               // type:FLOAT.0
	float                            MaxFlinchDistance;               // type:FLOAT.0
	float                            _0x78F31C40;                     // type:FLOAT.0
	float                            _0xB72FC626;                     // type:FLOAT.0
	uint                             _0x8E74C55B;                     // type:UINT.0
	uint                             _0xA5E44A83;                     // type:UINT.0
};

struct CTaskReactToPursuit__Tunables : CTuning
{
	int                              MinTimeToFleeInVehicle;          // type:INT.0
	int                              MaxTimeToFleeInVehicle;          // type:INT.0
	float                            FleeSpeedInVehicle;              // type:FLOAT.0
};

struct CTaskRideTrain__Tunables : CTuning
{
	float                            MinDelayForGetOff;               // type:FLOAT.0
	float                            MaxDelayForGetOff;               // type:FLOAT.0
	float                            fMaxWaitSeconds;                 // type:FLOAT.0
};

struct CTaskSearchBase__Tunables : CTuning
{
	struct _0x4299C888               Default;                         // type:STRUCT.STRUCTURE
	float                            MaxPositionVariance;             // type:FLOAT.0
	float                            MaxDirectionVariance;            // type:FLOAT.0
};

struct CTaskSearchForUnknownThreat__Tunables : CTuning
{
	int                              iMinTimeBeforeSearchingForNewHidingPlace; // type:INT.0
	int                              iMaxTimeBeforeSearchingForNewHidingPlace; // type:INT.0
};

struct CTaskSearchInAutomobile__Tunables : CTuning
{
	float                            FleeOffset;                      // type:FLOAT.0
	float                            CruiseSpeed;                     // type:FLOAT.0
};

struct CTaskSearchInBoat__Tunables : CTuning
{
};

struct CTaskSearchInHeli__Tunables : CTuning
{
	float                            FleeOffset;                      // type:FLOAT.0
	float                            CruiseSpeed;                     // type:FLOAT.0
	int                              MinHeightAboveTerrain;           // type:INT.0
};

struct CTaskSearchOnFoot__Tunables : CTuning
{
	float                            FleeOffset;                      // type:FLOAT.0
	float                            TargetRadius;                    // type:FLOAT.0
	float                            CompletionRadius;                // type:FLOAT.0
	float                            SlowDownDistance;                // type:FLOAT.0
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct CTaskSearch__Tunables : CTuning
{
	float                            TimeToStare;                     // type:FLOAT.0
	float                            MoveBlendRatio;                  // type:FLOAT.0
	float                            TargetReached;                   // type:FLOAT.0
	float                            CruiseSpeed;                     // type:FLOAT.0
};

struct CTaskSharkCircle__Tunables : CTuning
{
	float                            AdvanceDistanceSquared;          // type:FLOAT.0
	float                            MoveRateOverride;                // type:FLOAT.0
	float                            _0x17EFAF2F;                     // type:FLOAT.0
};

struct CTaskShootOutTire__Tunables : CTuning
{
	float                            MinTimeoutToAcquireLineOfSight;  // type:FLOAT.0
	float                            MaxTimeoutToAcquireLineOfSight;  // type:FLOAT.0
	float                            TimeBetweenLineOfSightChecks;    // type:FLOAT.0
	float                            MinTimeToWaitForShot;            // type:FLOAT.0
	float                            MaxTimeToWaitForShot;            // type:FLOAT.0
	int                              MaxWaitForShotFailures;          // type:INT.0
	float                            MinSpeedToApplyReaction;         // type:FLOAT.0
};

struct CTaskShove__Tunables : CTuning
{
	struct _0x31F3B2CC               Rendering;                       // type:STRUCT.STRUCTURE
	float                            MaxDistance;                     // type:FLOAT.0
	float                            MinDot;                          // type:FLOAT.0
	float                            RadiusForContact;                // type:FLOAT.0
};

struct CTaskShoved__Tunables : CTuning
{
};

struct CTaskSquadFlock__Tunables : CTuning
{
	float                            fUnalertedStartTimeStill;        // type:FLOAT.0
	float                            fUnalertedStartMinTimeFlocking;  // type:FLOAT.0
	float                            fUnalertedStopFlockStrength;     // type:FLOAT.0
};

struct CTaskStandGuard__Tunables : CTuning
{
	int                              MinStandWaitTimeMS;              // type:INT.0
	int                              MaxStandWaitTimeMS;              // type:INT.0
	int                              MinDefendPointWaitTimeMS;        // type:INT.0
	int                              MaxDefendPointWaitTimeMS;        // type:INT.0
	float                            MinNavmeshPatrolRadiusFactor;    // type:FLOAT.0
	float                            MaxNavmeshPatrolRadiusFactor;    // type:FLOAT.0
	float                            RouteRadiusFactor;               // type:FLOAT.0
};

struct CTaskStealVehicle__Tunables : CTuning
{
	float                            MaxDistanceToFindVehicle;        // type:FLOAT.0
	float                            MaxDistanceToPursueVehicle;      // type:FLOAT.0
	float                            DistanceToRunToVehicle;          // type:FLOAT.0
	bool                             CanStealPlayersVehicle;          // type:BOOL.0
	bool                             CanStealCarsAtLights;            // type:BOOL.0
	bool                             CanStealParkedCars;              // type:BOOL.0
	bool                             CanStealStationaryCars;          // type:BOOL.0
};

struct CTaskSwapWeapon__Tunables : CTuning
{
	float                            _0xF9C984F5;                     // type:FLOAT.0
	float                            _0x5B4D743C;                     // type:FLOAT.0
	float                            OnFootBlendInDuration;           // type:FLOAT.0
	float                            _0x38CE564A;                     // type:FLOAT.0
	float                            _0xD7E35121;                     // type:FLOAT.0
	float                            _0xE0CF8410;                     // type:FLOAT.0
	float                            LowCoverBlendInDuration;         // type:FLOAT.0
	float                            _0xBB99D45E;                     // type:FLOAT.0
	float                            _0x265A9174;                     // type:FLOAT.0
	float                            _0xE33F0FAC;                     // type:FLOAT.0
	float                            _0x3FDB51C6;                     // type:FLOAT.0
	float                            _0x957FFCA0;                     // type:FLOAT.0
	float                            HighCoverBlendInDuration;        // type:FLOAT.0
	float                            _0xDFB4137C;                     // type:FLOAT.0
	float                            _0xFA5FBDE7;                     // type:FLOAT.0
	float                            _0x4C34BDFF;                     // type:FLOAT.0
	float                            _0x7198FB00;                     // type:FLOAT.0
	float                            _0x93F3328C;                     // type:FLOAT.0
	float                            ActionBlendInDuration;           // type:FLOAT.0
	float                            _0x59374450;                     // type:FLOAT.0
	float                            _0xA66A7E44;                     // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	float                            _0x96545B6B;                     // type:FLOAT.0
	float                            _0xEAEF42BC;                     // type:FLOAT.0
	float                            _0xB979CF11;                     // type:FLOAT.0
	float                            _0xA4C835F2;                     // type:FLOAT.0
	float                            _0x69E5FAF7;                     // type:FLOAT.0
	float                            _0x7D4B6B51;                     // type:FLOAT.0
	float                            _0x4594CFF1;                     // type:FLOAT.0
	float                            _0x789C6CC8;                     // type:FLOAT.0
	float                            _0x7F580692;                     // type:FLOAT.0
	float                            _0x30B3366D;                     // type:FLOAT.0
	bool                             DebugSwapInstantly;              // type:BOOL.0
	bool                             SkipHolsterWeapon;               // type:BOOL.0
	bool                             _0xC80C9BD3;                     // type:BOOL.0
	uint                             _0x50F4594D;                     // type:UINT.0
	map<string, float>               _0xACA127BC;                     // type:MAP.ATBINARYMAP
};

struct CTaskSwatOrderResponse__Tunables : CTuning
{
	float                            HashOrdering;                    // type:FLOAT.0
	float                            _0x28BA767D;                     // type:FLOAT.0
};

struct CTaskSwimmingWander__Tunables : CTuning
{
	float                            SurfaceSkimmerDepth;             // type:FLOAT.0
	float                            NormalPreferredDepth;            // type:FLOAT.0
	float                            AvoidanceSteerAngleDegrees;      // type:FLOAT.0
	float                            _0x15F4D05E;                     // type:FLOAT.0
	float                            _0x3A926752;                     // type:FLOAT.0
	float                            _0x324A0C87;                     // type:FLOAT.0
	float                            _0x131F6BD5;                     // type:FLOAT.0
};

struct CTaskTakeOffPedVariation__Tunables : CTuning
{
};

struct CTaskTargetUnreachableInExterior__Tunables : CTuning
{
	float                            RangePercentage;                 // type:FLOAT.0
	float                            MaxDistanceFromNavMesh;          // type:FLOAT.0
	float                            TargetRadius;                    // type:FLOAT.0
	float                            MoveBlendRatio;                  // type:FLOAT.0
	float                            CompletionRadius;                // type:FLOAT.0
	float                            MinTimeToWait;                   // type:FLOAT.0
	float                            MaxTimeToWait;                   // type:FLOAT.0
};

struct CTaskTargetUnreachableInInterior__Tunables : CTuning
{
	float                            fDirectionTestProbeLength;       // type:FLOAT.0
};

struct CTaskTargetUnreachable__Tunables : CTuning
{
	float                            fTimeBetweenRouteSearches;       // type:FLOAT.0
};

struct CTaskThreatResponseAnimal__Tunables : CTuning
{
	float                            fBroadcastThreatRateSeconds;     // type:FLOAT.0
	float                            fBroadCastThreatMaxTimeSeconds;  // type:FLOAT.0
	float                            fDelayAfterFleeNotReactToOtherAnimalsFleeing; // type:FLOAT.0
	float                            fEvasionDistanceThreshold;       // type:FLOAT.0
	float                            fEvasionTimeThreshold;           // type:FLOAT.0
	float                            fEvasionTimeThresholdNPCAnimals; // type:FLOAT.0
	uint                             uEvasionNoDamageTimeThresholdMS; // type:UINT.0
	float                            fEvasionTargetSlowSpeedTimeThreshold; // type:FLOAT.0
	float                            fVictoryDelayThreshold;          // type:FLOAT.0
	string                           HowlScenario;                    // type:STRING.ATNONFINALHASHSTRING
	float                            TimeToHowl;                      // type:FLOAT.0
	float                            fStragglerPlayerBoostThreshold;  // type:FLOAT.0
	float                            fAlertedToFleeMinDelay;          // type:FLOAT.0
	float                            fAlertedToFleeMaxDelay;          // type:FLOAT.0
	float                            fTargetingSwitchDelay;           // type:FLOAT.0
	float                            _0xFC9B85C2;                     // type:FLOAT.0
	vec2V                            FormationOffsetWhenSeekingOwnersHelp; // type:VEC2V.0
	float                            DistanceToSlowDownWhenSeekingOwner; // type:FLOAT.0
	float                            DistanceToStarTimerToStickAroundOwner; // type:FLOAT.0
	float                            DefaultTimeToStickToOwnerInSecs; // type:FLOAT.0
	float                            TimeToStickToOwnerWhenBeingDefendedInSecs; // type:FLOAT.0
};

struct CTaskTrainBase__Tunables : CTuning
{
	float                            TargetRadius;                    // type:FLOAT.0
	float                            CompletionRadius;                // type:FLOAT.0
	float                            SlowDownDistance;                // type:FLOAT.0
};

struct CTaskTryToGrabVehicleDoor__Tunables : CTuning
{
	uint                             MinGrabTime;                     // type:UINT.0
	uint                             MaxGrabTime;                     // type:UINT.0
	float                            MaxHandToHandleDistance;         // type:FLOAT.0
};

struct CTaskUnalertedAnimalUseScenario__Tunables : CTuning
{
	float                            fDistanceInGroupArea;            // type:FLOAT.0
	float                            fTargetRadiusGoToScenarioPosition; // type:FLOAT.0
	float                            RandomSpreadMax;                 // type:FLOAT.0
	float                            fCanMoveInScenarioDistance;      // type:FLOAT.0
};

struct CTaskUnalertedAnimalWander__Tunables : CTuning
{
	float                            fWanderTargetRadius;             // type:FLOAT.0
	float                            fWanderTargetRadiusForSmallAnimals; // type:FLOAT.0
	float                            fMaxSlopeDegrees;                // type:FLOAT.0
	float                            fExtraNavmeshCheckDistance;      // type:FLOAT.0
};

struct CTaskUnalertedAnimal__Tunables : CTuning
{
	struct _0xCEFFAD73               GetToTheSideOfTheRoadTuning;     // type:STRUCT.STRUCTURE
	float                            fDefaultStateMinTime;            // type:FLOAT.0
	float                            fDefaultStateMaxTime;            // type:FLOAT.0
	float                            fMaxDistanceRepeatScannerSearch; // type:FLOAT.0
	float                            fGetOutOfAvoidanceVolumeInitialDelay; // type:FLOAT.0
	uint                             uMaxTimeSinceLastGunshotToCreateAvoidanceVolume; // type:UINT.0
	float                            fMbrGetOutOfWater;               // type:FLOAT.0
	float                            TakeOffForwardGoal;              // type:FLOAT.0
	float                            TakeOffVerticalGoal;             // type:FLOAT.0
	float                            fEarWanderMinTimeChange;         // type:FLOAT.0
	float                            fEarWanderMaxTimeChange;         // type:FLOAT.0
	float                            fStayInPlaceIfRiderThisClose;    // type:FLOAT.0
	float                            fStayInPlaceIfRiderMovingTowardsMeDistance; // type:FLOAT.0
	float                            fStayInPlaceIfRiderMovingTowardsMeDegrees; // type:FLOAT.0
	float                            ChanceOfHappyAnimal;             // type:FLOAT.0
	float                            ChanceOfSubmissiveAnimal;        // type:FLOAT.0
	uint                             MinTimeIgnoreAttractorsAfterPathFailed; // type:UINT.0
	float                            fMinMigrationStopDistance;       // type:FLOAT.0
	float                            fMaxMigrationStopDistance;       // type:FLOAT.0
	float                            BlockPlayerFaceThreshold;        // type:FLOAT.0
	float                            fMinTimeFacingLookAtTarget;      // type:FLOAT.0
	float                            PercentageToCentreOfRoadToMoveToTheSides; // type:FLOAT.0
	float                            PercentageFromCentreOfRoadToStop; // type:FLOAT.0
	float                            StopRadiusWhenMovingToSideOfRoad; // type:FLOAT.0
	float                            SpeedToMoveToTheSideOfTheRoad;   // type:FLOAT.0
	float                            TimeInIdleStateToConsiderMovingToSideOfTheRoadInSecs; // type:FLOAT.0
	float                            AdditionalRoadDistanceTrainTracks; // type:FLOAT.0
	uint                             MinTimeIgnoreGroupAfterPathFailed; // type:UINT.0
	float                            fStopFlockMigratingAfterTimeStill; // type:FLOAT.0
	float                            fDistanceFromHorseToAvoidGettingOutOfTheRoad; // type:FLOAT.0
	float                            fMinRequiredTimeInStateToGetOutOfTheWayWithOwnerCloseByInSecs; // type:FLOAT.0
	float                            NonHorseGoBackToOwnerDistance;   // type:FLOAT.0
	float                            fFishNavMeshProbeDistance;       // type:FLOAT.0
	float                            fFishNavMeshRayCheckRadius;      // type:FLOAT.0
	float                            fFishMinDistFromObstruction;     // type:FLOAT.0
	string                           FishLargeModelSet;               // type:STRING.ATNONFINALHASHSTRING
	float                            fFishMinDepthLarge;              // type:FLOAT.0
	string                           FishMediumModelSet;              // type:STRING.ATNONFINALHASHSTRING
	float                            fFishMinDepthMedium;             // type:FLOAT.0
	float                            fFishMinDepthSmall;              // type:FLOAT.0
	float                            fWalkToGroupPositionDistanceThreshold; // type:FLOAT.0
	float                            fMaxTimeToStayOutsidePen;        // type:FLOAT.0
	uint                             uMinTimeIgnorePenAfterPathFailed; // type:UINT.0
};

struct CTaskUnalerted__Tunables : CTuning
{
	float                            ScenarioDelayAfterFailureMin;    // type:FLOAT.0
	float                            ScenarioDelayAfterFailureMax;    // type:FLOAT.0
	float                            ScenarioDelayAfterFailureWhenStationary; // type:FLOAT.0
	float                            ScenarioDelayAfterNotAbleToSearch; // type:FLOAT.0
	float                            _0xD47095AC;                     // type:FLOAT.0
	float                            ScenarioDelayAfterSuccessMin;    // type:FLOAT.0
	float                            ScenarioDelayAfterSuccessMax;    // type:FLOAT.0
	float                            ScenarioDelayInitialMin;         // type:FLOAT.0
	float                            ScenarioDelayInitialMax;         // type:FLOAT.0
	float                            TimeBeforeDriverAnimCheck;       // type:FLOAT.0
	float                            TimeBetweenSearchesForNextScenarioInChain; // type:FLOAT.0
	float                            _0xC48DEBA9;                     // type:FLOAT.0
	float                            _0x619A2B3D;                     // type:FLOAT.0
	float                            _0x7E74F3D3;                     // type:FLOAT.0
	float                            TimeMinBeforeLastPoint;          // type:FLOAT.0
	float                            TimeMinBeforeLastPointType;      // type:FLOAT.0
	float                            PavementFloodFillSearchRadius;   // type:FLOAT.0
	float                            WaitTimeAfterFailedVehExit;      // type:FLOAT.0
	float                            MaxDistanceToReturnToLastUsedVehicle; // type:FLOAT.0
	float                            _0x29CB6268;                     // type:FLOAT.0
	float                            _0x90EE7342;                     // type:FLOAT.0
	float                            _0x194DBCE5;                     // type:FLOAT.0
	float                            _0xCB136EA6;                     // type:FLOAT.0
	float                            _0xB0831D68;                     // type:FLOAT.0
	float                            _0x8E2AD185;                     // type:FLOAT.0
	float                            _0xF5888B75;                     // type:FLOAT.0
	float                            _0x81826D64;                     // type:FLOAT.0
	float                            _0x588B63A5;                     // type:FLOAT.0
	float                            _0x0E8FF93E;                     // type:FLOAT.0
	float                            _0xDCB5467C;                     // type:FLOAT.0
	float                            _0xA407350F;                     // type:FLOAT.0
	float                            _0xED59204F;                     // type:FLOAT.0
	float                            TargetRadius;                    // type:FLOAT.0
	float                            SlowDownDistance;                // type:FLOAT.0
	float                            _0xBED32517;                     // type:FLOAT.0
	float                            _0x14AAB94B;                     // type:FLOAT.0
	float                            _0x035B6CCB;                     // type:FLOAT.0
	array<string>                    _0x11407499;                     // type:ARRAY.ATARRAY
};

struct CTaskUseScenario__Tunables : CTuning
{
	float                            AdvanceUseTimeRandomMaxProportion; // type:FLOAT.0
	float                            BreakAttachmentMoveSpeedThreshold; // type:FLOAT.0
	float                            BreakAttachmentOrientationThreshold; // type:FLOAT.0
	float                            ExitAttachmentMoveSpeedThreshold; // type:FLOAT.0
	float                            RouteLengthThresholdForFinalApproach; // type:FLOAT.0
	float                            ZThresholdForApproachOffset;     // type:FLOAT.0
	float                            DetachExitDefaultPhaseThreshold; // type:FLOAT.0
	float                            FastExitDefaultPhaseThreshold;   // type:FLOAT.0
	float                            RouteLengthThresholdForApproachOffset; // type:FLOAT.0
	float                            ExtraFleeDistance;               // type:FLOAT.0
	float                            MinRateToPlayCowerReaction;      // type:FLOAT.0
	float                            MaxRateToPlayCowerReaction;      // type:FLOAT.0
	float                            MinDifferenceBetweenCowerReactionRates; // type:FLOAT.0
	float                            ReactAndFleeBlendOutPhase;       // type:FLOAT.0
	float                            RegularExitDefaultPhaseThreshold; // type:FLOAT.0
	float                            TimeOfDayRandomnessHours;        // type:FLOAT.0
	float                            TimeToLeaveMinBetweenAnybody;    // type:FLOAT.0
	float                            TimeToLeaveRandomAmount;         // type:FLOAT.0
	float                            TimeToLeaveRandomFraction;       // type:FLOAT.0
	float                            PavementFloodFillSearchRadius;   // type:FLOAT.0
	float                            DelayBetweenPavementFloodFillSearches; // type:FLOAT.0
	float                            FleeMBRMin;                      // type:FLOAT.0
	float                            FleeMBRMax;                      // type:FLOAT.0
	float                            _0x8108E7E9;                     // type:FLOAT.0
	float                            _0x474DE32A;                     // type:FLOAT.0
	float                            _0xA20296E8;                     // type:FLOAT.0
	float                            _0xD0277323;                     // type:FLOAT.0
	float                            _0x6DD2858F;                     // type:FLOAT.0
	float                            MinPathLengthForValidExit;       // type:FLOAT.0
	float                            _0xAB6E7A66;                     // type:FLOAT.0
	float                            MaxDistanceNavmeshMayAdjustPath; // type:FLOAT.0
	float                            _0x2B4653F7;                     // type:FLOAT.0
	float                            SkipGotoXYDist;                  // type:FLOAT.0
	float                            SkipGotoZDist;                   // type:FLOAT.0
	float                            SkipGotoHeadingDeltaDegrees;     // type:FLOAT.0
	float                            _0xD663CAA6;                     // type:FLOAT.0
	float                            _0x2ACECE0A;                     // type:FLOAT.0
	float                            _0xBDF83077;                     // type:FLOAT.0
	float                            _0xA5804FE4;                     // type:FLOAT.0
	float                            _0xE79354E8;                     // type:FLOAT.0
	float                            _0xAD2DB3EF;                     // type:FLOAT.0
	float                            _0xB93E9503;                     // type:FLOAT.0
	float                            _0xC3C5AFA1;                     // type:FLOAT.0
	int                              MinExtraMoney;                   // type:INT.0
	int                              MaxExtraMoney;                   // type:INT.0
	char                             UpdatesBeforeShiftingBounds;     // type:CHAR.0
	bool                             UseMTH;                          // type:BOOL.0
	bool                             _0xA8B1B648;                     // type:BOOL.0
	bool                             _0xBBA937CE;                     // type:BOOL.0
	float                            _0xE9F66921;                     // type:FLOAT.0
	bool                             _0x3F6FE8B8;                     // type:BOOL.0
	bool                             _0xCD9AE15E;                     // type:BOOL.0
	struct _0x06B9EA6A               _0xFA3CF6F3;                     // type:STRUCT.STRUCTURE
	struct _0xAAE20F40               _0xF36833F0;                     // type:STRUCT.STRUCTURE
	float                            _0x05343F14;                     // type:FLOAT.0
	float                            _0x590EA584;                     // type:FLOAT.0
	float                            _0xC030B3D6;                     // type:FLOAT.0
	float                            _0xD437C39A;                     // type:FLOAT.0
	float                            _0x0BAAA1F0;                     // type:FLOAT.0
	float                            _0xB22D52B1;                     // type:FLOAT.0
	float                            _0x16C7A2A8;                     // type:FLOAT.0
	bool                             _0x318EE671;                     // type:BOOL.0
	float                            _0xBAFFD158;                     // type:FLOAT.0
	float                            _0xEAB27BA3;                     // type:FLOAT.0
	float                            _0xCCB58B4B;                     // type:FLOAT.0
	float                            _0xEACEB203;                     // type:FLOAT.0
	float                            _0xF6ED2B6F;                     // type:FLOAT.0
	float                            _0x3C1A15F6;                     // type:FLOAT.0
	float                            _0x590FDC67;                     // type:FLOAT.0
};

struct CTaskUseVehicleScenario__Tunables : CTuning
{
	float                            BringVehicleToHaltDistance;      // type:FLOAT.0
	float                            IdleTimeRandomFactor;            // type:FLOAT.0
	float                            SlowDownDist;                    // type:FLOAT.0
	float                            SlowDownSpeed;                   // type:FLOAT.0
	float                            SwitchToStraightLineDist;        // type:FLOAT.0
	float                            TargetArriveDist;                // type:FLOAT.0
	float                            decollete;                       // type:FLOAT.0
	float                            HeliTargetArriveDist;            // type:FLOAT.0
	float                            BoatTargetArriveDist;            // type:FLOAT.0
	float                            PlaneTargetArriveDistTaxiOnGround; // type:FLOAT.0
	float                            PlaneDrivingSubtaskArrivalDist;  // type:FLOAT.0
	float                            BoatMaxAvoidanceAngle;           // type:FLOAT.0
	ushort                           MaxSearchDistance;               // type:USHORT.0
};

struct CTaskVariedAimPose__AimPoseData
{
	array<struct _0xEB119925>        AimPoses;                        // type:ARRAY.ATARRAY
};

struct CTaskVariedAimPose__Tunables : CTuning
{
	float                            MinTimeBeforeCanChooseNewPose;   // type:FLOAT.0
	float                            _0x7F7C2DE4;                     // type:FLOAT.0
	float                            AvoidNearbyPedHorizontal;        // type:FLOAT.0
	float                            AvoidNearbyPedVertical;          // type:FLOAT.0
	float                            AvoidNearbyPedDotThreshold;      // type:FLOAT.0
	float                            TargetRadius;                    // type:FLOAT.0
	float                            MinTimeBetweenReactions;         // type:FLOAT.0
	float                            MinAnimOffsetMagnitude;          // type:FLOAT.0
	float                            _0x1E3F91AE;                     // type:FLOAT.0
	float                            _0xF42D90DC;                     // type:FLOAT.0
	float                            Rate;                            // type:FLOAT.0
	float                            MaxDistanceToCareAboutBlockingLineOfSight; // type:FLOAT.0
	float                            MaxDistanceToUseUrgentTransitions; // type:FLOAT.0
	float                            _0x95F36DAD;                     // type:FLOAT.0
	float                            _0x06FD751C;                     // type:FLOAT.0
	float                            _0x627C708D;                     // type:FLOAT.0
	float                            _0xE25D7B9B;                     // type:FLOAT.0
	float                            _0xF2241376;                     // type:FLOAT.0
	float                            _0x6288A399;                     // type:FLOAT.0
	float                            _0xEB817546;                     // type:FLOAT.0
	float                            _0x12E61F09;                     // type:FLOAT.0
	float                            _0x5FB5DBA6;                     // type:FLOAT.0
	float                            _0xA13F3553;                     // type:FLOAT.0
	float                            _0xD81F0A12;                     // type:FLOAT.0
	float                            _0x9486C215;                     // type:FLOAT.0
	float                            _0xF78D4F3B;                     // type:FLOAT.0
	float                            _0x18C4510A;                     // type:FLOAT.0
	float                            _0x0C64FF03;                     // type:FLOAT.0
	float                            _0xEC156BF8;                     // type:FLOAT.0
	float                            _0x9C9A7BB3;                     // type:FLOAT.0
	float                            _0xD1068300;                     // type:FLOAT.0
	float                            _0x69E95EB3;                     // type:FLOAT.0
	float                            _0x428A07FC;                     // type:FLOAT.0
	uint                             _0x51B6FE02;                     // type:UINT.0
	uint                             _0xB025B381;                     // type:UINT.0
	uint                             _0xD863AB22;                     // type:UINT.0
	int                              MaxClipsToCheckPerFrame;         // type:INT.0
	bool                             DebugDraw;                       // type:BOOL.0
	float                            _0x9777172A;                     // type:FLOAT.0
};

struct CTaskVault__Tunables : CTuning
{
	struct _0x73897708               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct CTaskVehicleApproach__Tunables : CTuning
{
	float                            MaxDistanceAroundClosestRoadNode; // type:FLOAT.0
};

struct CTaskVehicleBlockBackAndForth__Tunables : CTuning
{
	float                            ThrottleMultiplier;              // type:FLOAT.0
};

struct CTaskVehicleBlockBrakeInFront__Tunables : CTuning
{
	float                            TimeAheadForGetInPosition;       // type:FLOAT.0
	float                            MinOffsetForGetInPosition;       // type:FLOAT.0
	float                            TimeAheadForBrake;               // type:FLOAT.0
	float                            TimeAheadForBrakeOnWideRoads;    // type:FLOAT.0
	float                            MaxTimeForBrake;                 // type:FLOAT.0
	float                            FutureDistanceForMinSteerAngle;  // type:FLOAT.0
	float                            FutureDistanceForMaxSteerAngle;  // type:FLOAT.0
	float                            MaxSpeedToUseHandBrake;          // type:FLOAT.0
	float                            MinDotToClampCruiseSpeed;        // type:FLOAT.0
	float                            MaxDistanceToClampCruiseSpeed;   // type:FLOAT.0
	float                            MaxCruiseSpeedWhenClamped;       // type:FLOAT.0
};

struct CTaskVehicleBlockCruiseInFront__Tunables : CTuning
{
	struct _0xED8B4AA3               Probes;                          // type:STRUCT.STRUCTURE
	struct _0x3B8F8535               Rendering;                       // type:STRUCT.STRUCTURE
	float                            StraightLineDistance;            // type:FLOAT.0
	float                            TimeToLookAhead;                 // type:FLOAT.0
	float                            MinDistanceToLookAhead;          // type:FLOAT.0
	float                            MinDotForSlowdown;               // type:FLOAT.0
	float                            MinDistanceForSlowdown;          // type:FLOAT.0
	float                            MaxDistanceForSlowdown;          // type:FLOAT.0
	float                            CruiseSpeedMultiplierForMinSlowdown; // type:FLOAT.0
	float                            CruiseSpeedMultiplierForMaxSlowdown; // type:FLOAT.0
	float                            IdealDistance;                   // type:FLOAT.0
	float                            MinDistanceToAdjustSpeed;        // type:FLOAT.0
	float                            MaxDistanceToAdjustSpeed;        // type:FLOAT.0
	float                            MinCruiseSpeedMultiplier;        // type:FLOAT.0
	float                            MaxCruiseSpeedMultiplier;        // type:FLOAT.0
};

struct CTaskVehicleBlock__Tunables : CTuning
{
	float                            DistanceToCapSpeed;              // type:FLOAT.0
	float                            DistanceToStartCappingSpeed;     // type:FLOAT.0
	float                            AdditionalSpeedCap;              // type:FLOAT.0
	float                            MaxDistanceFromTargetToForceStraightLineMode; // type:FLOAT.0
	float                            TimeToLookAhead;                 // type:FLOAT.0
	float                            MinDistanceToLookAhead;          // type:FLOAT.0
	float                            MinDotTargetMovingTowardsUsToStartBackAndForth; // type:FLOAT.0
	float                            MinDotTargetMovingTowardsOurSideToStartBackAndForth; // type:FLOAT.0
	float                            MinDotTargetMovingTowardsUsToContinueBackAndForth; // type:FLOAT.0
	float                            MinDotTargetMovingTowardsUsToStartBrakeInFront; // type:FLOAT.0
	float                            MinDotMovingTowardsTargetToStartBrakeInFront; // type:FLOAT.0
	float                            MinDotTargetMovingTowardsUsToContinueBrakeInFront; // type:FLOAT.0
	float                            MinDotMovingTowardsTargetToContinueBrakeInFront; // type:FLOAT.0
	float                            MinDotTargetMovingTowardsUsToStartCruiseInFront; // type:FLOAT.0
	float                            MinDotMovingAwayFromTargetToStartCruiseInFront; // type:FLOAT.0
	float                            MinDotTargetMovingTowardsUsToContinueCruiseInFront; // type:FLOAT.0
};

struct CTaskVehicleChase__Tunables : CTuning
{
	struct _0x26F13B0B               CloseDistance;                   // type:STRUCT.STRUCTURE
	struct _0x02B19E98               Block;                           // type:STRUCT.STRUCTURE
	struct _0xB03A99BF               Pursue;                          // type:STRUCT.STRUCTURE
	struct _0x1FCCFCC1               Ram;                             // type:STRUCT.STRUCTURE
	struct _0x8DD69A98               SpinOut;                         // type:STRUCT.STRUCTURE
	struct _0xC53D46D7               PullAlongside;                   // type:STRUCT.STRUCTURE
	struct _0x7C1B142D               AggressiveMove;                  // type:STRUCT.STRUCTURE
	struct _0xC3BDE86A               Cheat;                           // type:STRUCT.STRUCTURE
	float                            MaxDotForHandBrake;              // type:FLOAT.0
	float                            TimeBetweenCarChaseShockingEvents; // type:FLOAT.0
	float                            DistanceForCarChaseShockingEvents; // type:FLOAT.0
};

struct CTaskVehicleCombat__Tunables : CTuning
{
	float                            MinTimeBetweenShootOutTiresGlobal; // type:FLOAT.0
	float                            MaxTimeBetweenShootOutTiresGlobal; // type:FLOAT.0
	float                            MinTimeInCombatToShootOutTires;  // type:FLOAT.0
	float                            MaxTimeInCombatToShootOutTires;  // type:FLOAT.0
	float                            ChancesToApplyReactionWhenShootingOutTire; // type:FLOAT.0
	float                            MinTimeToPrepareWeapon;          // type:FLOAT.0
	float                            MaxTimeToPrepareWeapon;          // type:FLOAT.0
	uint                             _0x66E9EF14;                     // type:UINT.0
	float                            _0x5EC7E37D;                     // type:FLOAT.0
};

struct CTaskVehicleCruiseBoat__Tunables : CTuning
{
	float                            fDistToPickNewPoint;             // type:FLOAT.0
	float                            fDistSearch;                     // type:FLOAT.0
	float                            RouteLookAheadDistance;          // type:FLOAT.0
	float                            _0x1FB8446D;                     // type:FLOAT.0
};

struct CTaskVehicleDeadDriver__Tunables : CTuning
{
	float                            SwerveTime;                      // type:FLOAT.0
	enum _0x34F327B9                 SteerAngleControl;               // type:ENUM.32BIT
	float                            MinSteerAngle;                   // type:FLOAT.0
	float                            MaxSteerAngle;                   // type:FLOAT.0
	enum _0x7A85C224                 ThrottleControl;                 // type:ENUM.32BIT
	float                            MinThrottle;                     // type:FLOAT.0
	float                            MaxThrottle;                     // type:FLOAT.0
	enum _0xC91BB44A                 BrakeControl;                    // type:ENUM.32BIT
	float                            MinBrake;                        // type:FLOAT.0
	float                            MaxBrake;                        // type:FLOAT.0
	enum _0xEE7E5096                 HandBrakeControl;                // type:ENUM.32BIT
};

struct CTaskVehicleFSM__Tunables : CTuning
{
	bool                             AllowEntryToMPWarpInSeats;       // type:BOOL.0
	bool                             ForceStreamingFailure;           // type:BOOL.0
	float                            PushAngleDotTolerance;           // type:FLOAT.0
	float                            TowardsDoorPushAngleDotTolerance; // type:FLOAT.0
	float                            DeadZoneAnyInputDirection;       // type:FLOAT.0
	float                            DisallowGroundProbeVelocity;     // type:FLOAT.0
	float                            MinPedSpeedToActivateRagdoll;    // type:FLOAT.0
	float                            MinPhysSpeedToActivateRagdoll;   // type:FLOAT.0
	float                            MaxHoverHeightDistToWarpIntoHeli; // type:FLOAT.0
	float                            MinTimeToConsiderPedGoingToDoorPriority; // type:FLOAT.0
	float                            MaxTimeToConsiderPedGoingToDoorPriority; // type:FLOAT.0
	float                            MaxDistToConsiderPedGoingToDoorPriority; // type:FLOAT.0
	float                            _0x6D6254D1;                     // type:FLOAT.0
	float                            _0x75106852;                     // type:FLOAT.0
	float                            _0xFDD4FA6A;                     // type:FLOAT.0
	float                            _0xB38E1DD6;                     // type:FLOAT.0
	float                            _0x981DB067;                     // type:FLOAT.0
	float                            _0xB4E07D17;                     // type:FLOAT.0
	uint                             TimeToConsiderEnterInputValid;   // type:UINT.0
	bool                             _0x254EDC71;                     // type:BOOL.0
};

struct CTaskVehicleFleeBoat__Tunables : CTuning
{
	float                            FleeDistance;                    // type:FLOAT.0
};

struct CTaskVehicleFlee__Tunables : CTuning
{
	float                            ChancesForSwerve;                // type:FLOAT.0
	float                            MinSpeedForSwerve;               // type:FLOAT.0
	float                            MinTimeToSwerve;                 // type:FLOAT.0
	float                            MaxTimeToSwerve;                 // type:FLOAT.0
	float                            ChancesForHesitate;              // type:FLOAT.0
	float                            MaxSpeedForHesitate;             // type:FLOAT.0
	float                            MinTimeToHesitate;               // type:FLOAT.0
	float                            MaxTimeToHesitate;               // type:FLOAT.0
	float                            _0x1441D169;                     // type:FLOAT.0
	float                            _0xF1F7605E;                     // type:FLOAT.0
	float                            _0x035948D6;                     // type:FLOAT.0
	float                            _0xDCC9AEAF;                     // type:FLOAT.0
	float                            _0x0E54F717;                     // type:FLOAT.0
	float                            _0xC4F50DDE;                     // type:FLOAT.0
	float                            _0x97BF1D53;                     // type:FLOAT.0
	float                            _0x3BEA942A;                     // type:FLOAT.0
	float                            _0x12574C4A;                     // type:FLOAT.0
	float                            _0xB62892C7;                     // type:FLOAT.0
	float                            _0x47057586;                     // type:FLOAT.0
	float                            _0xAA44716E;                     // type:FLOAT.0
	float                            _0x16FAD7A9;                     // type:FLOAT.0
	int                              _0x9287EFF3;                     // type:INT.0
};

struct CTaskVehicleGoToHelicopter__Tunables : CTuning
{
	float                            slowDistance;                    // type:FLOAT.0
	float                            maxCruiseSpeed;                  // type:FLOAT.0
	float                            maxPitchRoll;                    // type:FLOAT.0
	float                            maxThrottle;                     // type:FLOAT.0
	float                            leanKp;                          // type:FLOAT.0
	float                            leanKi;                          // type:FLOAT.0
	float                            leanKd;                          // type:FLOAT.0
	float                            yawKp;                           // type:FLOAT.0
	float                            yawKi;                           // type:FLOAT.0
	float                            yawKd;                           // type:FLOAT.0
	float                            throttleKp;                      // type:FLOAT.0
	float                            throttleKi;                      // type:FLOAT.0
	float                            throttleKd;                      // type:FLOAT.0
	float                            whiskerForwardTestDistance;      // type:FLOAT.0
	float                            whiskerForwardSpeedScale;        // type:FLOAT.0
	float                            whiskerLateralTestDistance;      // type:FLOAT.0
	float                            whiskerVerticalTestDistance;     // type:FLOAT.0
	float                            whiskerTestAngle;                // type:FLOAT.0
	float                            avoidHeadingChangeSpeed;         // type:FLOAT.0
	float                            avoidHeadingJump;                // type:FLOAT.0
	float                            avoidPitchChangeSpeed;           // type:FLOAT.0
	float                            avoidPitchJump;                  // type:FLOAT.0
	float                            avoidLockDuration;               // type:FLOAT.0
	float                            _0x91356BD6;                     // type:FLOAT.0
	float                            _0x55BE0840;                     // type:FLOAT.0
	float                            _0x1A82BBC0;                     // type:FLOAT.0
	float                            _0xD7F61078;                     // type:FLOAT.0
	float                            _0xB35FD976;                     // type:FLOAT.0
	int                              numHeightmapFutureSamples;       // type:INT.0
	float                            futureHeightmapSampleTime;       // type:FLOAT.0
	float                            DistanceXYToUseHeightMapAvoidance; // type:FLOAT.0
	float                            TimesliceMinDistToTarget;        // type:FLOAT.0
	uint                             TimesliceTimeAfterAvoidanceMs;   // type:UINT.0
};

struct CTaskVehicleGoToPlane__Tunables : CTuning
{
	int                              numFutureSamples;                // type:INT.0
	float                            futureSampleTime;                // type:FLOAT.0
	float                            maxDesiredAngleYawDegrees;       // type:FLOAT.0
	float                            maxDesiredAnglePitchDegrees;     // type:FLOAT.0
	float                            maxDesiredAngleRollDegrees;      // type:FLOAT.0
	float                            angleToTargetDegreesToNotUseMinRadius; // type:FLOAT.0
	float                            minMinDistanceForRollComputation; // type:FLOAT.0
	float                            maxMinDistanceForRollComputation; // type:FLOAT.0
	float                            maxYaw;                          // type:FLOAT.0
	float                            maxPitch;                        // type:FLOAT.0
	float                            maxRoll;                         // type:FLOAT.0
	float                            maxThrottle;                     // type:FLOAT.0
	float                            yawKp;                           // type:FLOAT.0
	float                            yawKi;                           // type:FLOAT.0
	float                            yawKd;                           // type:FLOAT.0
	float                            pitchKp;                         // type:FLOAT.0
	float                            pitchKi;                         // type:FLOAT.0
	float                            pitchKd;                         // type:FLOAT.0
	float                            rollKp;                          // type:FLOAT.0
	float                            rollKi;                          // type:FLOAT.0
	float                            rollKd;                          // type:FLOAT.0
	float                            throttleKp;                      // type:FLOAT.0
	float                            throttleKi;                      // type:FLOAT.0
	float                            throttleKd;                      // type:FLOAT.0
};

struct CTaskVehicleLandPlane__Tunables : CTuning
{
	float                            SlowDownDistance;                // type:FLOAT.0
	float                            TimeOnGroundToDrive;             // type:FLOAT.0
	float                            HeightToStartLanding;            // type:FLOAT.0
	float                            LandSlopeNoseUpMin;              // type:FLOAT.0
	float                            LandSlopeNoseUpMax;              // type:FLOAT.0
};

struct CTaskVehiclePersuit__Tunables : CTuning
{
	struct _0x8E354B7F               ApproachTarget;                  // type:STRUCT.STRUCTURE
	float                            ObstructionProbeAngleA;          // type:FLOAT.0
	float                            ObstructionProbeAngleB;          // type:FLOAT.0
	float                            ObstructionProbeAngleC;          // type:FLOAT.0
	float                            IdealDistanceOnBikeAndTargetUnarmed; // type:FLOAT.0
	float                            IdealDistanceOnBikeAndTargetArmed; // type:FLOAT.0
	float                            IdealDistanceInVehicleAndTargetUnarmed; // type:FLOAT.0
	float                            IdealDistanceInVehicleAndTargetArmed; // type:FLOAT.0
	float                            IdealDistanceShotAt;             // type:FLOAT.0
	float                            IdealDistanceCouldLeaveCar;      // type:FLOAT.0
	float                            DistanceToStopMultiplier;        // type:FLOAT.0
	float                            DistanceToStopMassIdeal;         // type:FLOAT.0
	float                            DistanceToStopMassWeight;        // type:FLOAT.0
	float                            MinDriverTimeToLeaveVehicle;     // type:FLOAT.0
	float                            MaxDriverTimeToLeaveVehicle;     // type:FLOAT.0
	float                            MinPassengerTimeToLeaveVehicle;  // type:FLOAT.0
	float                            MaxPassengerTimeToLeaveVehicle;  // type:FLOAT.0
	float                            MaxSpeedForEarlyCombatExit;      // type:FLOAT.0
	float                            MinSpeedToJumpOutOfVehicle;      // type:FLOAT.0
	float                            MinTimeBoatOutOfWaterForExit;    // type:FLOAT.0
	float                            AvoidanceMarginForOtherLawEnforcementVehicles; // type:FLOAT.0
	float                            MinTimeToWaitForOtherPedToExit;  // type:FLOAT.0
	float                            MinDelayExitTime;                // type:FLOAT.0
	float                            MaxDelayExitTime;                // type:FLOAT.0
	float                            _0x563D2FFB;                     // type:FLOAT.0
	float                            PreventShufflingExtraRange;      // type:FLOAT.0
	float                            MaxTimeWaitForExitBeforeWarp;    // type:FLOAT.0
	float                            MinTargetStandingOnTrainSpeed;   // type:FLOAT.0
	float                            _0x038D9663;                     // type:FLOAT.0
	float                            _0x2366E76D;                     // type:FLOAT.0
	float                            _0xCBC97276;                     // type:FLOAT.0
	float                            _0x20E61B3C;                     // type:FLOAT.0
	int                              DistanceToFollowInCar;           // type:INT.0
	float                            _0x5C08838B;                     // type:FLOAT.0
};

struct CTaskVehiclePlaneChase__Tunables : CTuning
{
	float                            MinSpeed;                        // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct CTaskVehiclePullAlongside__Tunables : CTuning
{
	float                            TimeToLookAhead;                 // type:FLOAT.0
	float                            MinDistanceToLookAhead;          // type:FLOAT.0
	float                            OverlapSpeedMultiplier;          // type:FLOAT.0
	float                            MaxSpeedDifference;              // type:FLOAT.0
	float                            _0xE9FCDECF;                     // type:FLOAT.0
};

struct CTaskVehiclePursue__Tunables : CTuning
{
	struct _0x0284F2DD               DriftX;                          // type:STRUCT.STRUCTURE
	struct _0x0284F2DD               DriftY;                          // type:STRUCT.STRUCTURE
	float                            TimeToLookBehind;                // type:FLOAT.0
	float                            MinDistanceToLookBehind;         // type:FLOAT.0
	float                            SpeedDifferenceForMinDistanceToStartMatchingSpeed; // type:FLOAT.0
	float                            SpeedDifferenceForMaxDistanceToStartMatchingSpeed; // type:FLOAT.0
	float                            MinDistanceToStartMatchingSpeed; // type:FLOAT.0
	float                            MaxDistanceToStartMatchingSpeed; // type:FLOAT.0
	float                            CruiseSpeedMultiplierForBackOff; // type:FLOAT.0
	float                            DotToClampSpeedToMinimum;        // type:FLOAT.0
	float                            DotToClampSpeedToMaximum;        // type:FLOAT.0
	float                            SpeedForMinimumDot;              // type:FLOAT.0
	float                            TimeBetweenLineOfSightChecks;    // type:FLOAT.0
	float                            DistanceForStraightLineModeAlways; // type:FLOAT.0
	float                            DistanceForStraightLineModeIfLos; // type:FLOAT.0
	float                            _0xF9E55DB2;                     // type:FLOAT.0
	float                            _0x6BE06CD4;                     // type:FLOAT.0
};

struct CTaskVehicleRam__Tunables : CTuning
{
	float                            BackOffTimer;                    // type:FLOAT.0
	float                            MinBackOffDistance;              // type:FLOAT.0
	float                            MaxBackOffDistance;              // type:FLOAT.0
	float                            CruiseSpeedMultiplierForMinBackOffDistance; // type:FLOAT.0
	float                            CruiseSpeedMultiplierForMaxBackOffDistance; // type:FLOAT.0
};

struct CTaskVehicleShotTire__Tunables : CTuning
{
	float                            MaxTimeInSwerve;                 // type:FLOAT.0
	float                            MinSpeedInSwerve;                // type:FLOAT.0
	float                            MinSpeedToApplyTorque;           // type:FLOAT.0
	float                            MaxDotToApplyTorque;             // type:FLOAT.0
	float                            TorqueMultiplier;                // type:FLOAT.0
};

struct CTaskVehicleSpinOut__Tunables : CTuning
{
	float                            TimeToLookAhead;                 // type:FLOAT.0
	float                            MinDistanceToLookAhead;          // type:FLOAT.0
	float                            BumperOverlapForMaxSpeed;        // type:FLOAT.0
	float                            BumperOverlapForMinSpeed;        // type:FLOAT.0
	float                            CatchUpSpeed;                    // type:FLOAT.0
	float                            BumperOverlapToBeInPosition;     // type:FLOAT.0
	float                            MaxSidePaddingForTurn;           // type:FLOAT.0
	float                            TurnTime;                        // type:FLOAT.0
	float                            InvMassScale;                    // type:FLOAT.0
};

struct CTaskWanderInArea__Tunables : CTuning
{
	float                            MinWaitTime;                     // type:FLOAT.0
	float                            MaxWaitTime;                     // type:FLOAT.0
};

struct CTaskWander__Tunables : CTuning
{
	uint                             uNumPedsToTransitionToRainPerPeriod; // type:UINT.0
	float                            fSecondsInRainTransitionPeriod;  // type:FLOAT.0
};

struct CTaskWanderingScenario__Tunables : CTuning
{
	float                            MaxTimeWaitingForBlockingArea;   // type:FLOAT.0
	float                            SwitchToNextPointDistWalking;    // type:FLOAT.0
	float                            SwitchToNextPointDistJogging;    // type:FLOAT.0
	float                            PreferNearWaterSurfaceArrivalRadius; // type:FLOAT.0
	uint                             TimeBetweenBlockingAreaChecksMS; // type:UINT.0
};

struct CTauntInfo : CItemInfo
{
	string                           AnimationDictionary;             // type:STRING.ATFINALHASHSTRING
	string                           AnimationName;                   // type:STRING.ATFINALHASHSTRING
};

struct CTerrainAwareFormation__Tunables : CTuning
{
	int                              iMinPercentageOfProblematicMembersToFallBack; // type:INT.0
	float                            fTimeFollowingInLineAtNarrowPassages; // type:FLOAT.0
	float                            fCutoffDistForNodeSearch;        // type:FLOAT.0
	float                            fMinDistanceBetweenNodes;        // type:FLOAT.0
	float                            fForwardProjectionInSeconds;     // type:FLOAT.0
	float                            fDistBeforeMovingToNextNode;     // type:FLOAT.0
	float                            fMaxHeadingAdjustDegStartStrict; // type:FLOAT.0
	float                            fMaxHeadingAdjustDegStopStrict;  // type:FLOAT.0
	float                            fMaxDistSqFromRoadStrict;        // type:FLOAT.0
	float                            fMaxHeadingAdjustDegStartLoose;  // type:FLOAT.0
	float                            fMaxHeadingAdjustDegStopLoose;   // type:FLOAT.0
	float                            fMaxDistSqFromRoadLoose;         // type:FLOAT.0
	float                            fTimeBeforeRestart;              // type:FLOAT.0
	float                            fFollowRoadStartDelayStrict;     // type:FLOAT.0
	float                            fFollowRoadStartDelayLoose;      // type:FLOAT.0
	float                            fFollowRoadStopDelayLoose;       // type:FLOAT.0
	float                            fMinPositiveToNegativeRequiredHistoryRatio; // type:FLOAT.0
	float                            fLeaderDistanceThresholdToEnterRestingMode; // type:FLOAT.0
	float                            fLeaderVelocityThresholdToEnterRestingMode; // type:FLOAT.0
	float                            fMinRowDistance;                 // type:FLOAT.0
	float                            fMaxRowDistanceSupplement;       // type:FLOAT.0
	float                            fDistanceFromOriginToLeaveRestingModePlayer; // type:FLOAT.0
	float                            fDistanceFromOriginToLeaveRestingModeAI; // type:FLOAT.0
	float                            fLeaderVelocityThresholdToLeaveRestingMode; // type:FLOAT.0
	float                            fMinDistanceBetweenGuestAndLeaderInFPSMode; // type:FLOAT.0
	float                            _0x64E3B141;                     // type:FLOAT.0
	float                            fHeadingDiffToStartJoiningRoadMinStrict; // type:FLOAT.0
	float                            fHeadingDiffToStartJoiningRoadMaxStrict; // type:FLOAT.0
	float                            fHeadingDiffToStartJoiningRoadMinLoose; // type:FLOAT.0
	float                            fHeadingDiffToStartJoiningRoadMaxLoose; // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStartJoiningRoadMin; // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStartJoiningRoadMax; // type:FLOAT.0
	float                            fHeadingDiffToStopJoiningRoadMinStrict; // type:FLOAT.0
	float                            fHeadingDiffToStopJoiningRoadMaxStrict; // type:FLOAT.0
	float                            fHeadingDiffToStopJoiningRoadMinLoose; // type:FLOAT.0
	float                            fHeadingDiffToStopJoiningRoadMaxLoose; // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStopJoiningRoadMinStrict; // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStopJoiningRoadMaxStrict; // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStopJoiningRoadMinLoose; // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStopJoiningRoadMaxLoose; // type:FLOAT.0
	float                            _0xC6D3C691;                     // type:FLOAT.0
	float                            _0xD75C34CD;                     // type:FLOAT.0
	float                            _0x3E2F28EF;                     // type:FLOAT.0
	float                            _0x04C082F0;                     // type:FLOAT.0
	float                            _0x7BE71709;                     // type:FLOAT.0
	float                            _0x7F4CE964;                     // type:FLOAT.0
	float                            _0x6C725C19;                     // type:FLOAT.0
	float                            fMaxTimeInMovementStartedMode;   // type:FLOAT.0
	float                            fMinimumRouteTurnRadius;         // type:FLOAT.0
	float                            fRouteCurvatureLookaheadTimeSeconds; // type:FLOAT.0
	bool                             bIgnoreSwitchedOffNodes;         // type:BOOL.0
	bool                             bUseWaterNodes;                  // type:BOOL.0
	bool                             bUseOnlyHighwayNodes;            // type:BOOL.0
	bool                             bSearchUpFromPosition;           // type:BOOL.0
};

struct CTimeArchetypeDef : CBaseArchetypeDef
{
	uint                             timeFlags;                       // type:UINT.0
};

struct CTimeCycleModifier
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3                             minExtents;                      // type:VECTOR3.0
	vec3                             maxExtents;                      // type:VECTOR3.0
	float                            percentage;                      // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	uint                             startHour;                       // type:UINT.0
	uint                             endHour;                         // type:UINT.0
	matrix34V                        transform;                       // type:MAT34V.0
};

struct CTrafficSpeeds__Tunables : CTuning
{
	struct _0xBFB97F23               HorseSpeeds;                     // type:STRUCT.STRUCTURE
	struct _0xBFB97F23               HorseTownSpeeds;                 // type:STRUCT.STRUCTURE
	struct _0xBFB97F23               PedSpeeds;                       // type:STRUCT.STRUCTURE
	struct _0xBFB97F23               DraftVehicleSpeeds;              // type:STRUCT.STRUCTURE
	array<struct _0xBFB97F23>        TemplateSpeeds;                  // type:ARRAY.ATARRAY
	float                            fDefaultMoveBlendRatioForHorses; // type:FLOAT.0
	float                            fDefaultMoveBlendRatioForPeds;   // type:FLOAT.0
	float                            fDefaultSpeedForDraftVehicles;   // type:FLOAT.0
};

struct CTrailerHandlingData : CBaseSubHandlingData
{
};

struct CTrainHandlingData : CBaseSubHandlingData
{
	float                            fVerticalOffset;                 // type:FLOAT.0
	array<enum eDoorId>              doorsControlledByScript;         // type:ARRAY.ATARRAY
};

struct CTransportAnalyseEntryExitHelper__Tunables : CTuning
{
	struct _0xE0F2B143               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct CTransportAnimData
{
	string                                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition                              Condition;                       // type:STRUCT.POINTER
	string                                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x5CE4CCA4>                        ClipSetVarIds;                   // type:ARRAY.ATARRAY
	string                                           NetworkDefId;                    // type:STRING.ATNONFINALHASHSTRING
	string                                           FilterId;                        // type:STRING.ATNONFINALHASHSTRING
	float                                            IntroAnimRateVariance;           // type:FLOAT.0
	float                                            LoopAnimRateVariance;            // type:FLOAT.0
	enum _0xC6AB2DAA                                 MinCurrentGait;                  // type:ENUM.32BIT
	enum _0xC6AB2DAA                                 MaxCurrentGait;                  // type:ENUM.32BIT
	string                                           BodyBlendTemplate;               // type:STRING.ATNONFINALHASHSTRING
	enum _0x1C4A1E19                                 Priority;                        // type:ENUM.32BIT
	array<string>                                    FlagValues;                      // type:ARRAY.ATARRAY
	enum _0x341B00C5                                 AnimType;                        // type:ENUM.32BIT
	array<struct _0xCD19E20D>                        RandomClips;                     // type:ARRAY.ATARRAY
	array<struct _0x5867C8DD>                        Clips;                           // type:ARRAY.ATARRAY
	array<struct Loco__GameDrivenFloatReference>     FloatReferences;                 // type:ARRAY.ATARRAY
	array<struct _0x3AB88B1D>                        _0x3A34995A;                     // type:ARRAY.ATARRAY
	array<struct _0x0FC8022E>                        BlackboardHashValues;            // type:ARRAY.ATARRAY
	array<struct _0x73FA5646>                        BlackboardBoolValues;            // type:ARRAY.ATARRAY
	array<struct _0xCC7762ED>                        BlackboardIdsPassedToNetwork;    // type:ARRAY.ATARRAY
	float                                            BlendIn;                         // type:FLOAT.0
	float                                            BlendOut;                        // type:FLOAT.0
	float                                            DelayMin;                        // type:FLOAT.0
	float                                            DelayMax;                        // type:FLOAT.0
};

struct CTransportAnimLayers
{
	struct CAICondition                                  Condition;                       // type:STRUCT.POINTER
	map<enum _0x00478706, struct CTransportAnimType>     TransportAnimLayers;             // type:MAP.ATBINARYMAP
};

struct CTransportAnimLayersSeatType
{
	array<struct Loco__UpperBodyFidgetTimer>     FidgetTimers;                    // type:ARRAY.ATARRAY
	array<struct CTransportAnimLayers>           TransportAnimLayerGroups;        // type:ARRAY.ATARRAY
};

struct CTransportAnimType
{
	array<struct CTransportAnimData>     TransportAnimTypes;              // type:ARRAY.ATARRAY
};

struct CTransportAnimationLayersManager
{
	map<string, struct CTransportAnimLayersSeatType>     TransportAnimationLayerInfos;    // type:MAP.ATBINARYMAP
};

struct CTransportAnimations
{
	map<string, struct _0x1BD0EE1C>     Archetypes;                      // type:MAP.ATBINARYMAP
};

struct CTransportNetworkController_Base : _0x95FE09E6
{
};

struct CTransportNetworkController_BodyLean : _0x95FE09E6
{
	float                            BodyLeanXSpringDampingRatio;     // type:FLOAT.0
	float                            BodyLeanXSpringConstant;         // type:FLOAT.0
	float                            BodyLeanYSpringDampingRatio;     // type:FLOAT.0
	float                            BodyLeanYSpringConstant;         // type:FLOAT.0
	float                            BodyLeanDeadZone;                // type:FLOAT.0
	float                            BodyLeanYDeadZone;               // type:FLOAT.0
	float                            BodyLeanApproachRateMin;         // type:FLOAT.0
	float                            BodyLeanApproachRateMax;         // type:FLOAT.0
	float                            AngularStrengthModulatorMin;     // type:FLOAT.0
	float                            AngularStrengthModulatorMax;     // type:FLOAT.0
	float                            AngularStrengthModulator;        // type:FLOAT.0
	float                            LeanYAccelStrengthModulator;     // type:FLOAT.0
	float                            LeanXAccelStrengthModulator;     // type:FLOAT.0
	float                            MaxSurfaceIncline;               // type:FLOAT.0
	float                            _0x17E29405;                     // type:FLOAT.0
	float                            _0x98E226C1;                     // type:FLOAT.0
	float                            _0xFE17FA6F;                     // type:FLOAT.0
	bool                             InverseBodyLeanY;                // type:BOOL.0
	bool                             InverseBodyLeanX;                // type:BOOL.0
	bool                             InverseBodyLeanRoll;             // type:BOOL.0
	bool                             SwitchLeanXYDirections;          // type:BOOL.0
};

struct CTransportNetworkController_DraftBase : CTransportNetworkController_Base
{
};

struct CTransportNetworkController_DraftSpeed : _0x95FE09E6
{
	float                            _0xEC5D3E05;                     // type:FLOAT.0
	float                            _0x45CBE173;                     // type:FLOAT.0
	float                            _0x560228BE;                     // type:FLOAT.0
	uint                             _0x276C7ACF;                     // type:UINT.0
	bool                             _0xF55FD9BF;                     // type:BOOL.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
};

struct CTransportNetworkController_DraftSteering : _0x95FE09E6
{
	float                            MinSteerRate;                    // type:FLOAT.0
	float                            SteerRate;                       // type:FLOAT.0
	float                            SteerLimit;                      // type:FLOAT.0
	float                            _0xED6E8BF0;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
};

struct CTransportNetworkController_DraftWhipping : _0x95FE09E6
{
	uint                             _0x39EF7CEC;                     // type:UINT.0
	float                            MinWhipTime;                     // type:FLOAT.0
	float                            MaxWhipTime;                     // type:FLOAT.0
	float                            _0x618BD2EB;                     // type:FLOAT.0
	float                            _0xCE5608ED;                     // type:FLOAT.0
	float                            MinPanicWhipTime;                // type:FLOAT.0
	float                            MaxPanicWhipTime;                // type:FLOAT.0
	float                            _0x36858564;                     // type:FLOAT.0
	float                            _0xE75A2FFD;                     // type:FLOAT.0
};

struct CTransportNetworkController_HighIntensity : _0x95FE09E6
{
	float                            HighIntensitySprintIntentionThreshold; // type:FLOAT.0
	float                            MaintainHighIntensityDuration;   // type:FLOAT.0
	float                            SprintIntentionBrakeHoldDecreaseRate; // type:FLOAT.0
	float                            SprintIntentionHoldIncreaseRate; // type:FLOAT.0
	float                            SprintIntentionLimit;            // type:FLOAT.0
	float                            SprintIntentionDegradeRate;      // type:FLOAT.0
	float                            SprintIntentionTapIncrease;      // type:FLOAT.0
	float                            SprintIntentionTapIncreaseRate;  // type:FLOAT.0
	uint                             _0x1BADCD49;                     // type:UINT.0
	uint                             _0xE998A506;                     // type:UINT.0
	uint                             _0x52043EC3;                     // type:UINT.0
	uint                             TimeToHoldBrakeButtonDown;       // type:UINT.0
};

struct CTransportNetworkController_PassengerAnimal : _0x95FE09E6
{
	float                            MinDelayToSleepTime;             // type:FLOAT.0
	float                            MaxDelayToSleepTime;             // type:FLOAT.0
	string                           IdleEmotionState;                // type:STRING.ATNONFINALHASHSTRING
	string                           SleepEmotionState;               // type:STRING.ATNONFINALHASHSTRING
	string                           SleepToIdleEmotionState;         // type:STRING.ATNONFINALHASHSTRING
	string                           IdleToSleepEmotionState;         // type:STRING.ATNONFINALHASHSTRING
};

struct CTransportNetworkController_TargetPedAimContextFromCurrentSeat : _0x95FE09E6
{
};

struct CTransportNetworkController_ToggleLantern : _0x95FE09E6
{
};

struct CTransportNetworkController_VehicleSteering : _0x95FE09E6
{
	string                           BoneName;                        // type:STRING.ATSTRING
	string                           RotationAxis;                    // type:STRING.ATNONFINALHASHSTRING
	float                            RotationMax;                     // type:FLOAT.0
	float                            RotationMin;                     // type:FLOAT.0
	float                            NoiseAmplitude;                  // type:FLOAT.0
	float                            _0xF25C3984;                     // type:FLOAT.0
};

struct CTransportNodeClipSets
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xFFEB72E0>        ClipSets;                        // type:ARRAY.ATARRAY
};

struct CTunableObjectManager
{
	map<string, struct _0x1C3053EC>     TunableObjects;                  // type:MAP.ATBINARYMAP
};

struct CTuning
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CTuningFile
{
	array<struct CTuning>            Tunables;                        // type:ARRAY.ATARRAY
};

struct CTxdRelationship
{
	string                           parent;                          // type:STRING.ATSTRING
	string                           child;                           // type:STRING.ATSTRING
};

struct CUnlockReward : CBaseReward
{
	string                           unlock;                          // type:STRING.ATNSHASHSTRING
};

struct CUpgradesInfo : CItemInfo
{
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
	struct CInspectionInfo           InspectionInfo;                  // type:STRUCT.STRUCTURE
};

struct CUpperBodyAnimInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           NetworkDefId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           BaseClipId;                      // type:STRING.ATNONFINALHASHSTRING
	float                            SweepHeadingMax;                 // type:FLOAT.0
	float                            SweepHeadingMin;                 // type:FLOAT.0
	array<struct _0x8254EAFD>        ClipIds;                         // type:ARRAY.ATARRAY
	array<struct _0xCC7762ED>        BlackboardIds;                   // type:ARRAY.ATARRAY
	bitset<enum _0x52D71115>         Flags;                           // type:BITSET.32BIT
	enum _0x49A9637B                 Priority;                        // type:ENUM.32BIT
	enum _0x54738068                 MoveNetworkType;                 // type:ENUM.32BIT
	enum _0x9E5CBA78                 BlendInType;                     // type:ENUM.32BIT
	enum _0x9E5CBA78                 BlendOutType;                    // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
};

struct CVehGenMarkUpSpheres
{
	array<struct _0x31D64A3D, 32>     Spheres;                         // type:ARRAY.ATFIXEDARRAY
};

struct CVehicleClipRequestHelper__Tunables : CTuning
{
	float                            MinDistanceToScanForNearbyVehicle; // type:FLOAT.0
	float                            MaxDistanceToScanForNearbyVehicle; // type:FLOAT.0
	float                            MinDistUpdateFrequency;          // type:FLOAT.0
	float                            MaxDistUpdateFrequency;          // type:FLOAT.0
	float                            MinDistPercentageToScaleScanArc; // type:FLOAT.0
	float                            MinDistScanArc;                  // type:FLOAT.0
	float                            MaxDistScanArc;                  // type:FLOAT.0
	bool                             DisableVehicleDependencies;      // type:BOOL.0
	bool                             DisableStreamedVehicleAnimRequestHelper; // type:BOOL.0
	bool                             EnableStreamedEntryAnims;        // type:BOOL.0
	bool                             EnableStreamedInVehicleAnims;    // type:BOOL.0
	bool                             EnableStreamedEntryVariationAnims; // type:BOOL.0
	bool                             StreamConnectedSeatAnims;        // type:BOOL.0
	bool                             StreamInVehicleAndEntryAnimsTogether; // type:BOOL.0
	bool                             StreamEntryAndInVehicleAnimsTogether; // type:BOOL.0
};

struct CVehicleConditionEntryPointHasOpenableDoor : CAICondition
{
};

struct CVehicleConditionRoofState : CAICondition
{
	bitset<enum _0xFA5B2E49>         RoofState;                       // type:BITSET.32BIT
};

struct CVehicleCoverBoundOffsetInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            ExtraSideOffset;                 // type:FLOAT.0
	float                            ExtraForwardOffset;              // type:FLOAT.0
	float                            ExtraBackwardOffset;             // type:FLOAT.0
	float                            ExtraZOffset;                    // type:FLOAT.0
	array<struct _0xFFE8E531>        CoverBoundInfos;                 // type:ARRAY.ATARRAY
};

struct CVehicleDriveByAnimInfo
{
	string                                        Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xC8A3B509                            DriveByAimClipSetPair;           // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x7859561A;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x7300565E;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0xE2F6E5F4;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x0BCB0661;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            DriveByHandSwapClipSetPair;      // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            DriveByAimFlipClipSetPair;       // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            DriveByLeftHandAimClipSetPair;   // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x09B0F435;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x3AF6F449;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x625E1849;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x75F2E16A;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            DriveByLeftHandSwapClipSetPair;  // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                            _0x8A5483BB;                     // type:STRUCT.STRUCTURE
	array<struct _0x2BCDB232>                     DriveByAiIntroClipSets;          // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                     DriveByAiAimingClipSets;         // type:ARRAY.ATARRAY
	array<struct _0x493BA4E9>                     DriveByAiFireVariationClipSetCollection; // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                     DriveByAiChamberClipSets;        // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                     DriveByAiTransitionClipSets;     // type:ARRAY.ATARRAY
	struct _0x10985556                            AimingVariationClipSets;         // type:STRUCT.STRUCTURE
	struct _0x10985556                            TransitionVariationClipSets;     // type:STRUCT.STRUCTURE
	struct _0x10985556                            ChamberVariationClipSets;        // type:STRUCT.STRUCTURE
	struct _0x10985556                            ReleaseVariationClipSets;        // type:STRUCT.STRUCTURE
	array<struct _0x2BCDB232>                     FlipVariationClipSets;           // type:ARRAY.ATARRAY
	array<struct _0x37EDA489>                     VariationAdditiveSetups;         // type:ARRAY.ATARRAY
	string                                        AimBaseBoneOffsetsMale;          // type:STRING.ATNONFINALHASHSTRING
	string                                        AimBaseBoneOffsetsFemale;        // type:STRING.ATNONFINALHASHSTRING
	string                                        FirstPersonTorsoSpaceSet;        // type:STRING.ATNONFINALHASHSTRING
	string                                        FirstPersonDriveByClipSet;       // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB6BD37A1>                     AltFirstPersonDriveByClipSets;   // type:ARRAY.ATARRAY
	string                                        RestrictedDriveByClipSet;        // type:STRING.ATNONFINALHASHSTRING
	float                                         LeftHandAimingRequiredYawMin;    // type:FLOAT.0
	float                                         LeftHandAimingRequiredYawMax;    // type:FLOAT.0
	float                                         LeftHandAimingOscillationOffset; // type:FLOAT.0
	enum _0xE62BC9A9                              Network;                         // type:ENUM.32BIT
	struct void                                   WeaponGroup;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                                   DriveByNetworkInfo;              // type:STRUCT.EXTERNAL_NAMED
	struct void                                   DriveByNetworkDefs;              // type:STRUCT.EXTERNAL_NAMED
	array<struct CVehicleDriveBySweepContext>     DriveBySweepContexts;            // type:ARRAY.ATARRAY
	enum _0x46E5C2FD                              VehicleMotionAimingType;         // type:ENUM.32BIT
	bool                                          EnableFirstPersonSweepContexts;  // type:BOOL.0
	bool                                          MPOnly;                          // type:BOOL.0
	bool                                          DisableForPlayerInSP;            // type:BOOL.0
	bool                                          UsesHandSwapping;                // type:BOOL.0
};

struct CVehicleDriveByInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            MinAimSweepHeadingAngleDegs;     // type:FLOAT.0
	float                            MaxAimSweepHeadingAngleDegs;     // type:FLOAT.0
	float                            FirstPersonMinAimSweepHeadingAngleDegs; // type:FLOAT.0
	float                            FirstPersonMaxAimSweepHeadingAngleDegs; // type:FLOAT.0
	float                            FirstPersonUnarmedMinAimSweepHeadingAngleDegs; // type:FLOAT.0
	float                            FirstPersonUnarmedMaxAimSweepHeadingAngleDegs; // type:FLOAT.0
	float                            MinRestrictedAimSweepHeadingAngleDegs; // type:FLOAT.0
	float                            MaxRestrictedAimSweepHeadingAngleDegs; // type:FLOAT.0
	float                            MinSmashWindowAngleDegs;         // type:FLOAT.0
	float                            MaxSmashWindowAngleDegs;         // type:FLOAT.0
	float                            MinSmashWindowAngleFirstPersonDegs; // type:FLOAT.0
	float                            MaxSmashWindowAngleFirstPersonDegs; // type:FLOAT.0
	float                            MaxSpeedParam;                   // type:FLOAT.0
	float                            MaxLongitudinalLeanBlendWeightDelta; // type:FLOAT.0
	float                            MaxLateralLeanBlendWeightDelta;  // type:FLOAT.0
	float                            ApproachSpeedToWithinMaxBlendDelta; // type:FLOAT.0
	float                            SpineAdditiveBlendInDelay;       // type:FLOAT.0
	float                            SpineAdditiveBlendInDurationStill; // type:FLOAT.0
	float                            SpineAdditiveBlendInDuration;    // type:FLOAT.0
	float                            SpineAdditiveBlendOutDelay;      // type:FLOAT.0
	float                            SpineAdditiveBlendOutDuration;   // type:FLOAT.0
	float                            MinUnarmedDrivebyYawIfWindowRolledUp; // type:FLOAT.0
	float                            MaxUnarmedDrivebyYawIfWindowRolledUp; // type:FLOAT.0
	float                            YawOffset;                       // type:FLOAT.0
	float                            MinForceBlockedHeadingAngleDot;  // type:FLOAT.0
	float                            MaxForceBlockedHeadingAngleDot;  // type:FLOAT.0
	array<struct void>               DriveByAnimInfos;                // type:ARRAY.ATARRAY
	bitset<enum _0x7A3BED50>         DriveByFlags;                    // type:BITSET.32BIT
};

struct CVehicleDriveByNetworkDefs
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           NetworkIntroDefId;               // type:STRING.ATNONFINALHASHSTRING
	string                           NetworkAimingDefId;              // type:STRING.ATNONFINALHASHSTRING
	string                           NetworkOutroDefId;               // type:STRING.ATNONFINALHASHSTRING
};

struct CVehicleDriveByNetworkInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x06F1A5FF>        IntroNetworkClipsArray;          // type:ARRAY.ATARRAY
	array<struct _0x06F1A5FF>        IntroSeatShufflingNetworkClipsArray; // type:ARRAY.ATARRAY
	array<struct _0x06F1A5FF>        AimingNetworkClipsArray;         // type:ARRAY.ATARRAY
	array<struct _0x06F1A5FF>        OutroNetworkClipsArray;          // type:ARRAY.ATARRAY
	float                            AimingFrontToBackAngleMin;       // type:FLOAT.0
	float                            AimingFrontToBackAngleMax;       // type:FLOAT.0
	float                            AimingBackToFrontAngleMin;       // type:FLOAT.0
	float                            AimingBackToFrontAngleMax;       // type:FLOAT.0
};

struct CVehicleDriveBySweepAnimInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xC8A3B509               IntroClipSetPair;                // type:STRUCT.STRUCTURE
	struct _0xC8A3B509               OutroClipSetPair;                // type:STRUCT.STRUCTURE
	struct _0xC8A3B509               AimClipSetPair;                  // type:STRUCT.STRUCTURE
	struct _0xC8A3B509               AimHighClipSetPair;              // type:STRUCT.STRUCTURE
	array<struct _0x0E239174>        TransitionClipSetPairs;          // type:ARRAY.ATARRAY
};

struct CVehicleDriveBySweepContext
{
	enum _0x893174C8                                             SweepContext;                    // type:ENUM.32BIT
	array<struct CVehicleDriveBySweepSetup>                      DriveBySweepSetups;              // type:ARRAY.ATARRAY
	array<struct CVehicleDriveBySweepSetupContextTransition>     DriveBySweepContextTransitions;  // type:ARRAY.ATARRAY
};

struct CVehicleDriveBySweepProfile
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            MinAngle;                        // type:FLOAT.0
	float                            MaxAngle;                        // type:FLOAT.0
	float                            MinAngleFPS;                     // type:FLOAT.0
	float                            MaxAngleFPS;                     // type:FLOAT.0
	float                            MinAngleStickyRegion;            // type:FLOAT.0
	float                            MaxAngleStickyRegion;            // type:FLOAT.0
	float                            MinCoverageAngle;                // type:FLOAT.0
	float                            MaxCoverageAngle;                // type:FLOAT.0
	bool                             ClampCameraOnMinTransition;      // type:BOOL.0
	bool                             ClampCameraOnMaxTransition;      // type:BOOL.0
};

struct CVehicleDriveBySweepSetup
{
	struct void                      SweepProfile;                    // type:STRUCT.EXTERNAL_NAMED
	struct void                      SweepAnimInfo;                   // type:STRUCT.EXTERNAL_NAMED
	struct void                      SweepAnimInfoFemale;             // type:STRUCT.EXTERNAL_NAMED
	string                           MinAngleTransitionIndex;         // type:STRING.ATNONFINALHASHSTRING
	string                           MaxAngleTransitionIndex;         // type:STRING.ATNONFINALHASHSTRING
	string                           MinAngleFPSTransitionIndex;      // type:STRING.ATNONFINALHASHSTRING
	string                           MaxAngleFPSTransitionIndex;      // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x13E67A31>         Flags;                           // type:BITSET.32BIT
};

struct CVehicleDriveBySweepSetupContextTransition
{
	enum _0x893174C8                 TargetContext;                   // type:ENUM.32BIT
	float                            MinCoverageAngle;                // type:FLOAT.0
	float                            MaxCoverageAngle;                // type:FLOAT.0
	bitset<enum _0x13E67A31>         SourceFlags;                     // type:BITSET.32BIT
	bitset<enum _0x13E67A31>         DestinationFlags;                // type:BITSET.32BIT
	struct _0xC8A3B509               TransitionClipSetPair;           // type:STRUCT.STRUCTURE
	struct _0xC8A3B509               TransitionHighClipSetPair;       // type:STRUCT.STRUCTURE
	struct _0xC8A3B509               TransitionClipSetPairFemale;     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509               _0xB3579D0B;                     // type:STRUCT.STRUCTURE
};

struct CVehicleEntryPointAnimInfo
{
	struct void                      CommonClipSets;                  // type:STRUCT.EXTERNAL_NAMED
	struct void                      EntryClipSets;                   // type:STRUCT.EXTERNAL_NAMED
	struct void                      ExitClipSets;                    // type:STRUCT.EXTERNAL_NAMED
	string                           ArchetypeSubKey;                 // type:STRING.ATNONFINALHASHSTRING
	vec3                             EntryTranslation;                // type:VECTOR3.0
	vec3                             OriginOffsetForEntryExit;        // type:VECTOR3.0
	vec3                             OriginOffsetForAlternateSeat;    // type:VECTOR3.0
	vec3                             InSeatToOnBoardPointOffsetForEntryExit; // type:VECTOR3.0
	vec3                             TransitionToExitSeatOriginOffsetForEntryExit; // type:VECTOR3.0
	array<string>                    VehicleModelsToApplyOriginOffset; // type:ARRAY.ATARRAY
	float                            EntryHeadingChange;              // type:FLOAT.0
	float                            EntryAccessibleHeadingLimit;     // type:FLOAT.0
	float                            EntryOutsideAccessibleHeadingRadius; // type:FLOAT.0
	float                            EntryWidth;                      // type:FLOAT.0
	float                            _0x5782E6BC;                     // type:FLOAT.0
	float                            EntryTriggerRadius;              // type:FLOAT.0
	float                            EntryTriggerAngleDotThreshold;   // type:FLOAT.0
	vec2                             OpenDoorTranslation;             // type:VECTOR2.0
	float                            OpenDoorHeadingChange;           // type:FLOAT.0
	float                            ExtraZForMPPlaneWarp;            // type:FLOAT.0
	bitset<enum _0x650B6F9A>         EntryPointFlags;                 // type:BITSET.32BIT
	struct void                      EntryAnimVariations;             // type:STRUCT.EXTERNAL_NAMED
	string                           NMJumpFromVehicleTuningSet;      // type:STRING.ATNONFINALHASHSTRING
	struct void                      EntryZoneSet;                    // type:STRUCT.EXTERNAL_NAMED
	float                            ExitBlendInDuration;             // type:FLOAT.0
	float                            SlowEntryBlendInDuration;        // type:FLOAT.0
	float                            _0x6771F7C7;                     // type:FLOAT.0
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CVehicleEntryPointInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           DoorBoneName;                    // type:STRING.ATSTRING
	string                           SecondDoorBoneName;              // type:STRING.ATSTRING
	string                           DoorHandleBoneName;              // type:STRING.ATSTRING
	enum _0x8CFC2EE4                 WindowId;                        // type:ENUM.32BIT
	enum _0xB53CD812                 VehicleSide;                     // type:ENUM.32BIT
	struct void                      OriginSeatForAlignMTH;           // type:STRUCT.EXTERNAL_NAMED
	array<struct _0x102DB114>        AccessableSeatLinkInfos;         // type:ARRAY.ATARRAY
	struct void                      VehicleExtraPointsInfo;          // type:STRUCT.EXTERNAL_NAMED
	bitset<enum _0x9380894B>         Flags;                           // type:BITSET.32BIT
	array<enum _0xB53CD812>          BlockJackReactionSides;          // type:ARRAY.ATARRAY
	enum _0xD0600B57                 BreakoutTestPoint;               // type:ENUM.32BIT
	enum _0x0CA15AA9                 EntryType;                       // type:ENUM.32BIT
	string                           EntryLink;                       // type:STRING.ATNONFINALHASHSTRING
	struct void                      OccludingSeat;                   // type:STRUCT.EXTERNAL_NAMED
};

struct CVehicleExplosionInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x92D611F5, 3>     VehicleExplosionLODs;            // type:ARRAY.MEMBER
	array<struct _0x504D9C14>        ExplosionData;                   // type:ARRAY.ATARRAY
	float                            AdditionalPartVelocityMinAngle;  // type:FLOAT.0
	float                            AdditionalPartVelocityMaxAngle;  // type:FLOAT.0
	float                            AdditionalPartVelocityMinMagnitude; // type:FLOAT.0
	float                            AdditionalPartVelocityMaxMagnitude; // type:FLOAT.0
};

struct CVehicleExplosionLayoutInfo
{
	string                                         Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CExtensionDefExplosionEffect>     Explosions;                      // type:ARRAY.ATARRAY
};

struct CVehicleExtraPointsInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB9FC5D5A>        ExtraVehiclePoints;              // type:ARRAY.ATARRAY
};

struct CVehicleKit
{
	string                               kitName;                         // type:STRING.ATNONFINALHASHSTRING
	enum eModKitType                     kitType;                         // type:ENUM.32BIT
	array<struct CVehicleModVisible>     visibleMods;                     // type:ARRAY.ATARRAY
	array<struct CVehicleModLink>        linkMods;                        // type:ARRAY.ATARRAY
	array<struct CVehicleModStat>        statMods;                        // type:ARRAY.ATARRAY
	array<struct _0x197CC214>            slotNames;                       // type:ARRAY.ATARRAY
	array<string>                        liveryNames;                     // type:ARRAY.ATARRAY
};

struct CVehicleLadderLayoutInfo
{
	string                                Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CExtensionDefLadder>     Ladders;                         // type:ARRAY.ATARRAY
};

struct CVehicleLayoutInfo
{
	bool                             CanBeDrivenFromBothFrontSeats;   // type:BOOL.0
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ArchetypeKey;                    // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x4C04EC43>        Seats;                           // type:ARRAY.ATARRAY
	array<struct _0x7A28F0AE>        EntryPoints;                     // type:ARRAY.ATARRAY
	bitset<enum _0x47EC62D1>         LayoutFlags;                     // type:BITSET.64BIT
	struct void                      BicycleInfo;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                      AnimRateSet;                     // type:STRUCT.EXTERNAL_NAMED
	enum _0x1C45F7FA                 MoveNetworkType;                 // type:ENUM.32BIT
	string                           HandsUpClipSetId;                // type:STRING.ATNONFINALHASHSTRING
	vec3                             SteeringWheelOffset;             // type:VECTOR3.0
	float                            MaxXAcceleration;                // type:FLOAT.0
	float                            BodyLeanXApproachSpeed;          // type:FLOAT.0
	float                            BodyLeanXSmallDelta;             // type:FLOAT.0
	float                            LookBackApproachSpeedScale;      // type:FLOAT.0
};

struct CVehicleMetadataMgr
{
	array<struct GameplayHelpers__CEntryZoneAnimData>        EntryZoneAnims;                  // type:ARRAY.ATARRAY
	array<struct GameplayHelpers__CEntryZoneTriggerData>     EntryZoneTriggers;               // type:ARRAY.ATARRAY
	array<struct CEntryZone>                                 EntryZones;                      // type:ARRAY.ATARRAY
	array<struct CEntryZoneSet>                              EntryZoneSets;                   // type:ARRAY.ATARRAY
	array<struct CAnimRateSet>                               AnimRateSets;                    // type:ARRAY.ATARRAY
	array<struct CTransportNodeClipSets>                     TransportNodeClipSets;           // type:ARRAY.ATARRAY
	array<struct CVehicleCoverBoundOffsetInfo>               VehicleCoverBoundOffsetInfos;    // type:ARRAY.ATARRAY
	array<struct CBicycleInfo>                               BicycleInfos;                    // type:ARRAY.ATARRAY
	array<struct CPOVTuningInfo>                             POVTuningInfos;                  // type:ARRAY.ATARRAY
	array<struct CEntryAnimVariations>                       EntryAnimVariations;             // type:ARRAY.ATARRAY
	array<struct CVehicleExtraPointsInfo>                    VehicleExtraPointsInfos;         // type:ARRAY.ATARRAY
	array<struct CVehicleLayoutInfo>                         VehicleLayoutInfos;              // type:ARRAY.ATARRAY
	array<struct CVehicleSeatInfo>                           VehicleSeatInfos;                // type:ARRAY.ATARRAY
	array<struct CVehicleSeatAnimInfo>                       VehicleSeatAnimInfos;            // type:ARRAY.ATARRAY
	array<struct CVehicleWeaponTransitionData>               VehicleWeaponTransitionAnimData; // type:ARRAY.ATARRAY
	array<struct CVehicleWeaponAnimInfo>                     VehicleWeaponAnimInfos;          // type:ARRAY.ATARRAY
	array<struct CDrivebyWeaponGroup>                        DrivebyWeaponGroups;             // type:ARRAY.ATARRAY
	array<struct CVehicleDriveByNetworkInfo>                 VehicleDriveByNetworkInfos;      // type:ARRAY.ATARRAY
	array<struct CVehicleDriveByNetworkDefs>                 VehicleDriveByNetworkDefs;       // type:ARRAY.ATARRAY
	array<struct CVehicleDriveBySweepProfile>                VehicleDriveBySweepProfiles;     // type:ARRAY.ATARRAY
	array<struct CVehicleDriveBySweepAnimInfo>               VehicleDriveBySweepAnimInfos;    // type:ARRAY.ATARRAY
	array<struct CVehicleDriveByAnimInfo>                    VehicleDriveByAnimInfos;         // type:ARRAY.ATARRAY
	array<struct CVehicleDriveByInfo>                        VehicleDriveByInfos;             // type:ARRAY.ATARRAY
	array<struct CVehicleEntryPointInfo>                     VehicleEntryPointInfos;          // type:ARRAY.ATARRAY
	array<struct CVehicleEntryPointAnimInfo>                 VehicleEntryPointAnimInfos;      // type:ARRAY.ATARRAY
	array<struct CVehicleExplosionInfo>                      VehicleExplosionInfos;           // type:ARRAY.ATARRAY
	array<struct CVehicleScenarioLayoutInfo>                 VehicleScenarioLayoutInfos;      // type:ARRAY.ATARRAY
	array<struct CSeatOverrideAnimInfo>                      SeatOverrideAnimInfos;           // type:ARRAY.ATARRAY
	array<struct CInVehicleOverrideInfo>                     InVehicleOverrideInfos;          // type:ARRAY.ATARRAY
	array<struct CEntryPointOverrideInfo>                    EntryPointOverrideInfos;         // type:ARRAY.ATARRAY
	array<struct CFirstPersonDriveByLookAroundData>          FirstPersonDriveByLookAroundData; // type:ARRAY.ATARRAY
	array<struct CVehicleLadderLayoutInfo>                   VehicleLadderLayoutInfos;        // type:ARRAY.ATARRAY
	array<struct CVehicleParticleEffectLayoutInfo>           VehicleParticleEffectLayoutInfos; // type:ARRAY.ATARRAY
	array<struct CVehicleExplosionLayoutInfo>                VehicleExplosionLayoutInfos;     // type:ARRAY.ATARRAY
	array<struct CVehicleSeatUpperBodyAnimInfo>              VehicleSeatUpperBodyAnimInfos;   // type:ARRAY.ATARRAY
};

struct CVehicleMetallicSetting
{
	float                            specInt;                         // type:FLOAT.0
	float                            specFalloff;                     // type:FLOAT.0
	float                            specFresnel;                     // type:FLOAT.0
};

struct CVehicleModColor
{
	string                           name;                            // type:STRING.CONST_STRING
	uchar                            col;                             // type:UCHAR.0
	uchar                            spec;                            // type:UCHAR.0
};

struct CVehicleModColors
{
	array<struct CVehicleModColor>          metallic;                        // type:ARRAY.ATARRAY
	array<struct CVehicleModColor>          classic;                         // type:ARRAY.ATARRAY
	array<struct CVehicleModColor>          matte;                           // type:ARRAY.ATARRAY
	array<struct CVehicleModColor>          metals;                          // type:ARRAY.ATARRAY
	array<struct CVehicleModColor>          chrome;                          // type:ARRAY.ATARRAY
	struct CVehicleModPearlescentColors     pearlescent;                     // type:STRUCT.STRUCTURE
};

struct CVehicleModLink
{
	string                           modelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0x202A9664;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xD8B78C18                 bone;                            // type:ENUM.32BIT
	bool                             turnOffExtra;                    // type:BOOL.0
};

struct CVehicleModPearlescentColors
{
	array<struct CVehicleModColor>     baseCols;                        // type:ARRAY.ATARRAY
	array<struct CVehicleModColor>     specCols;                        // type:ARRAY.ATARRAY
};

struct CVehicleModStat
{
	string                           identifier;                      // type:STRING.ATNONFINALHASHSTRING
	enum eVehicleModType             type;                            // type:ENUM.32BIT
	uint                             modifier;                        // type:UINT.0
	float                            audioApply;                      // type:FLOAT.0
	uchar                            weight;                          // type:UCHAR.0
};

struct CVehicleModVisible
{
	string                           modelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0x202A9664;                     // type:STRING.ATNONFINALHASHSTRING
	string                           modShopLabel;                    // type:STRING.CONST_STRING
	array<string>                    linkedModels;                    // type:ARRAY.ATARRAY
	enum eVehicleModType             type;                            // type:ENUM.32BIT
	enum _0xD8B78C18                 bone;                            // type:ENUM.32BIT
	enum _0xD8B78C18                 collisionBone;                   // type:ENUM.32BIT
	array<enum _0xD8B78C18>          turnOffBones;                    // type:ARRAY.ATARRAY
	enum eVehicleModCameraPos        cameraPos;                       // type:ENUM.32BIT
	float                            audioApply;                      // type:FLOAT.0
	uchar                            weight;                          // type:UCHAR.0
	bool                             turnOffExtra;                    // type:BOOL.0
	bool                             disableBonnetCamera;             // type:BOOL.0
	bool                             allowBonnetSlide;                // type:BOOL.0
};

struct CVehicleModelColor
{
	uint                             color;                           // type:UINT.1
	enum _0x157C285E                 metallicID;                      // type:ENUM.8BIT
	enum _0x2070C98C                 audioColor;                      // type:ENUM.8BIT
	enum _0x7B21D8F4                 audioPrefix;                     // type:ENUM.8BIT
	uint                             audioColorHash;                  // type:UINT.0
	uint                             audioPrefixHash;                 // type:UINT.0
	string                           colorName;                       // type:STRING.POINTER
};

struct CVehicleModelInfoVarGlobal
{
	array<struct _0x90037E35>                 _0xC2FD2BA9;                     // type:ARRAY.ATARRAY
	array<struct _0x7363C501>                 _0x274D639D;                     // type:ARRAY.ATARRAY
	array<struct CVehicleModelColor>          Colors;                          // type:ARRAY.ATARRAY
	array<struct CVehicleMetallicSetting>     MetallicSettings;                // type:ARRAY.ATARRAY
	array<struct CVehicleWindowColor>         WindowColors;                    // type:ARRAY.ATARRAY
	array<struct vehicleLightSettings>        Lights;                          // type:ARRAY.ATARRAY
	array<struct sirenSettings>               Sirens;                          // type:ARRAY.ATARRAY
	array<struct CVehicleKit>                 Kits;                            // type:ARRAY.ATARRAY
	array<array<struct CVehicleWheel>, 9>     Wheels;                          // type:ARRAY.MEMBER
	struct _0xB6862DFA                        GlobalVariationData;             // type:STRUCT.STRUCTURE
	struct _0x1BC567F2                        VehiclePlates;                   // type:STRUCT.STRUCTURE
};

struct CVehicleModelInfoVariation
{
	array<struct _0x18EAFEA9>        variationData;                   // type:ARRAY.ATARRAY
};

struct CVehicleModelInfo__CVehicleOverrideRagdollThreshold
{
	int                              MinComponent;                    // type:INT.0
	int                              MaxComponent;                    // type:INT.0
	float                            ThresholdMult;                   // type:FLOAT.0
};

struct CVehicleModelInfo__InitDataList
{
	array<struct _0x8250CB03>          InitDatas;                       // type:ARRAY.ATARRAY
	string                             residentTxd;                     // type:STRING.ATSTRING
	array<string>                      residentAnims;                   // type:ARRAY.ATARRAY
	array<struct CTxdRelationship>     txdRelationships;                // type:ARRAY.ATARRAY
};

struct CVehicleParticleEffectLayoutInfo
{
	string                                        Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CExtensionDefParticleEffect>     ParticleEffects;                 // type:ARRAY.ATARRAY
};

struct CVehiclePoint
{
	vec4                             vPositionAndHeading;             // type:VECTOR4.0
	char                             iTargetPoint;                    // type:CHAR.0
	uchar                            iType;                           // type:UCHAR.0
};

struct CVehiclePoints
{
	string                                  DefinitionName;                  // type:STRING.CONST_STRING
	ushort                                  Flags;                           // type:USHORT.0
	uchar                                   iNumBoardingPoints;              // type:UCHAR.0
	array<struct CVehiclePoint>             Points;                          // type:ARRAY.ATARRAY
	array<struct CVehiclePointsPropDef>     Props;                           // type:ARRAY.ATARRAY
	string                                  ModelName;                       // type:STRING.CONST_STRING
	string                                  AuthoredMeshName;                // type:STRING.CONST_STRING
	float                                   fNavMaxHeightChange;             // type:FLOAT.0
	float                                   fNavMinZDist;                    // type:FLOAT.0
	float                                   fNavOverrideAgentRadius;         // type:FLOAT.0
	float                                   fNavOverrideAgentHeight;         // type:FLOAT.0
	float                                   fNavOverrideRecastCellSize;      // type:FLOAT.0
	float                                   fMinPatchAreaBeforeCulling;      // type:FLOAT.0
};

struct CVehiclePointsMeta
{
	array<string>                    VehiclePointFiles;               // type:ARRAY.ATARRAY
};

struct CVehiclePointsPropDef
{
	string                           PropName;                        // type:STRING.CONST_STRING
	vec3                             Offset;                          // type:VECTOR3.0
	vec3                             Eulers;                          // type:VECTOR3.0
};

struct CVehiclePopulationTuning
{
	float                            fMultiplayerRandomVehicleDensityMultiplier; // type:FLOAT.0
	float                            fMultiplayerParkedVehicleDensityMultiplier; // type:FLOAT.0
	float                            fMaxVehicleSpacingAboveFurthestDefaultValue; // type:FLOAT.0
	float                            fDivisorForVehicleSpacingPastFurthestDefaultValue; // type:FLOAT.0
	float                            fMinRandomDensityVarianceMultiplier; // type:FLOAT.0
	float                            fMaxRandomDensityVarianceMultiplier; // type:FLOAT.0
	bool                             bRejectAllVehiclesMovingAway;    // type:BOOL.0
	bool                             bAlsoRejectIfStationary;         // type:BOOL.0
	bool                             bDisableVehiclesInMP;            // type:BOOL.0
};

struct CVehicleScenarioLayoutInfo
{
	string                                    Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CExtensionDefSpawnPoint>     ScenarioPoints;                  // type:ARRAY.ATARRAY
};

struct CVehicleScenarioManager__AttractorTuning__Tunables : CTuning
{
	float                            ForwardDirectionThresholdCosSquared; // type:FLOAT.0
	float                            MaxDistToPathDefault;            // type:FLOAT.0
	float                            MaxDistToVehicle;                // type:FLOAT.0
	float                            MinDistToVehicle;                // type:FLOAT.0
	int                              NumToUpdatePerFrame;             // type:INT.0
	uint                             TimeAfterAttractionMs;           // type:UINT.0
	uint                             TimeAfterChainTestFailedMs;      // type:UINT.0
	uint                             TimeAfterFailedConditionsMs;     // type:UINT.0
	uint                             TimeAfterNoBoundsMs;             // type:UINT.0
	ushort                           MinPassengersForAttraction;      // type:USHORT.0
	ushort                           MaxPassengersForAttraction;      // type:USHORT.0
};

struct CVehicleSeatAnimInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           ArchetypeSubKey;                 // type:STRING.ATNONFINALHASHSTRING
	struct void                      DriveByInfo;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                      InsideClipSets;                  // type:STRUCT.EXTERNAL_NAMED
	string                           PanicClipSet;                    // type:STRING.ATNONFINALHASHSTRING
	string                           AgitatedClipSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                           DuckedClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           UnwellClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           LowLODIdleAnim;                  // type:STRING.ATNONFINALHASHSTRING
	string                           SeatAmbientContext;              // type:STRING.ATNONFINALHASHSTRING
	enum _0x3F33AEDD                 InVehicleMoveNetwork;            // type:ENUM.32BIT
	bitset<enum _0x9E68FA23>         SeatAnimFlags;                   // type:BITSET.64BIT
	float                            SteeringSmoothing;               // type:FLOAT.0
	string                           ExitToAimInfoName;               // type:STRING.ATNONFINALHASHSTRING
	string                           MaleGestureClipSetId;            // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleGestureClipSetId;          // type:STRING.ATNONFINALHASHSTRING
	float                            FPSMinSteeringRateOverride;      // type:FLOAT.0
	float                            FPSMaxSteeringRateOverride;      // type:FLOAT.0
	vec3                             SeatCollisionBoundsOffset;       // type:VECTOR3.0
	vec3                             SeatPositionOffset;              // type:VECTOR3.0
	float                            SeatHeadingOffset;               // type:FLOAT.0
	float                            RootOffsetMax;                   // type:FLOAT.0
	struct void                      UpperBodyAnimInfo;               // type:STRUCT.EXTERNAL_NAMED
	struct void                      VehicleWeaponAnimInfo;           // type:STRUCT.EXTERNAL_NAMED
	string                           WeaponHoldAnimInfo;              // type:STRING.ATNONFINALHASHSTRING
	string                           EmotionAnimInfo;                 // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                FootIKTargetBoneTag;             // type:ENUM.32BIT
	vec3                             _0x0041A9A9;                     // type:VECTOR3.0
	vec3                             _0x0E5313DC;                     // type:VECTOR3.0
};

struct CVehicleSeatCameraOverrides
{
	string                           cameraDictionary;                // type:STRING.ATNONFINALHASHSTRING
	string                           cameraName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           passengerCameraDictionary;       // type:STRING.ATNONFINALHASHSTRING
	string                           passengerCameraName;             // type:STRING.ATNONFINALHASHSTRING
	string                           aimCameraDictionary;             // type:STRING.ATNONFINALHASHSTRING
	string                           aimCameraName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           firstPersonCameraDictionary;     // type:STRING.ATNONFINALHASHSTRING
	string                           firstPersonCameraName;           // type:STRING.ATNONFINALHASHSTRING
	int                              useFirstPersonAlternateLimitsForOccupiedSeat; // type:INT.0
	float                            firstPersonClampedCameraMinLimit; // type:FLOAT.0
	float                            firstPersonClampedCameraMaxLimit; // type:FLOAT.0
	float                            firstPersonAlternateClampedCameraMinLimit; // type:FLOAT.0
	float                            firstPersonAlternateClampedCameraMaxLimit; // type:FLOAT.0
	float                            firstPersonClampedCameraMinPitchLimit; // type:FLOAT.0
	float                            firstPersonClampedCameraMaxPitchLimit; // type:FLOAT.0
	float                            firstPersonAlternateClampedCameraMinPitchLimit; // type:FLOAT.0
	float                            firstPersonAlternateClampedCameraMaxPitchLimit; // type:FLOAT.0
};

struct CVehicleSeatInfo
{
	string                                 Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                 SeatBoneName;                    // type:STRING.ATSTRING
	string                                 DoorBoneName;                    // type:STRING.ATSTRING
	array<struct _0x3DDEF649>              ShuffleLinkInfos;                // type:ARRAY.ATARRAY
	array<string>                          VehicleExcludeHidingWeaponOnBack; // type:ARRAY.ATARRAY
	array<string>                          AimContextInterestedSeatList;    // type:ARRAY.ATARRAY
	string                                 RearSeatLink;                    // type:STRING.ATNONFINALHASHSTRING
	enum _0xB44A8258                       DefaultCarTask;                  // type:ENUM.32BIT
	bitset<enum _0x96AFDEA5>               SeatFlags;                       // type:BITSET.64BIT
	bitset<enum _0x470242D4>               InteractionFlags;                // type:BITSET.64BIT
	float                                  HairScale;                       // type:FLOAT.0
	struct CVehicleSeatCameraOverrides     CameraOverrides;                 // type:STRUCT.POINTER
};

struct CVehicleSeatUpperBodyAnimInfo
{
	string                               Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CUpperBodyAnimInfo>     AnimInfos;                       // type:ARRAY.ATARRAY
};

struct CVehicleWeaponAnimInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x443EDE20>         Flags;                           // type:BITSET.64BIT
	enum _0xBC53ADB7                 OnVehicleWeaponMoveNetwork;      // type:ENUM.32BIT
	string                           SeatBoneOverrideName;            // type:STRING.ATSTRING
	string                           MagazineModelName;               // type:STRING.ATNONFINALHASHSTRING
	string                           MagazineModelNameMP;             // type:STRING.ATNONFINALHASHSTRING
	string                           FiringSolverTemplate;            // type:STRING.ATNONFINALHASHSTRING
	string                           FiringFilter;                    // type:STRING.ATNONFINALHASHSTRING
	string                           Clipset;                         // type:STRING.ATNONFINALHASHSTRING
	string                           EnterPromptNameOverride;         // type:STRING.ATNONFINALHASHSTRING
	string                           ExitPromptNameOverride;          // type:STRING.ATNONFINALHASHSTRING
	string                           FirePromptNameOverride;          // type:STRING.ATNONFINALHASHSTRING
	string                           ReloadPromptNameOverride;        // type:STRING.ATNONFINALHASHSTRING
	string                           PromptGroupName;                 // type:STRING.ATNONFINALHASHSTRING
	struct void                      TransitionData;                  // type:STRUCT.EXTERNAL_NAMED
	vec3V                            JackOffsetPosition;              // type:VEC3V.0
	struct _0xBF2BD132               PitchWeightKF;                   // type:STRUCT.STRUCTURE
	float                            SweepLimitOverride;              // type:FLOAT.0
	float                            SweepMaxThreshold;               // type:FLOAT.0
	float                            SweepMinThreshold;               // type:FLOAT.0
	float                            PitchMinOverride;                // type:FLOAT.0
	float                            PitchMaxOverride;                // type:FLOAT.0
	float                            YawVelocityMulitplier;           // type:FLOAT.0
	float                            SeatAngleOffset;                 // type:FLOAT.0
	float                            AngularThreshold;                // type:FLOAT.0
	float                            AiAngularThreshold;              // type:FLOAT.0
	float                            TargetFireRate;                  // type:FLOAT.0
	float                            _0x5F436103;                     // type:FLOAT.0
	float                            _0x1161DD5C;                     // type:FLOAT.0
	float                            YawSpringConstant;               // type:FLOAT.0
	float                            YawSpringDampingRatio;           // type:FLOAT.0
	float                            TurretAlignDuration;             // type:FLOAT.0
};

struct CVehicleWeaponHandlingData : CBaseSubHandlingData
{
	array<string, 4>                 uWeaponHash;                     // type:ARRAY.MEMBER
	array<int, 4>                    WeaponSeats;                     // type:ARRAY.MEMBER
	array<float, 3>                  fTurretSpeed;                    // type:ARRAY.MEMBER
	array<float, 3>                  fTurretPitchMin;                 // type:ARRAY.MEMBER
	array<float, 3>                  fTurretPitchMax;                 // type:ARRAY.MEMBER
	array<float, 3>                  fTurretCamPitchMin;              // type:ARRAY.MEMBER
	array<float, 3>                  fTurretCamPitchMax;              // type:ARRAY.MEMBER
	array<float, 3>                  fBulletVelocityForGravity;       // type:ARRAY.MEMBER
	array<float, 3>                  fTurretPitchForwardMin;          // type:ARRAY.MEMBER
	float                            fUvAnimationMult;                // type:FLOAT.0
	float                            fMiscGadgetVar;                  // type:FLOAT.0
	float                            fWheelImpactOffset;              // type:FLOAT.0
};

struct CVehicleWeaponInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            KickbackAmplitude;               // type:FLOAT.0
	float                            KickbackImpulse;                 // type:FLOAT.0
	float                            KickbackOverrideTiming;          // type:FLOAT.0
};

struct CVehicleWeaponNodeDefinition
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3V                            Position;                        // type:VEC3V.0
	float                            TriggerRadius;                   // type:FLOAT.0
};

struct CVehicleWeaponTransition
{
	string                                           Node;                            // type:STRING.ATNONFINALHASHSTRING
	string                                           TargetNode;                      // type:STRING.ATNONFINALHASHSTRING
	struct CVehicleWeaponTransitionDataClipGroup     ClipGroup;                       // type:STRUCT.STRUCTURE
};

struct CVehicleWeaponTransitionData
{
	string                                         Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                                          TriggerRadius;                   // type:FLOAT.0
	float                                          TriggerModifier;                 // type:FLOAT.0
	float                                          VelocityModifier;                // type:FLOAT.0
	array<struct CVehicleWeaponNodeDefinition>     Nodes;                           // type:ARRAY.ATARRAY
	array<struct CVehicleWeaponTransition>         Transitions;                     // type:ARRAY.ATARRAY
};

struct CVehicleWeaponTransitionDataClipGroup
{
	string                           Up;                              // type:STRING.ATNONFINALHASHSTRING
	string                           Mid;                             // type:STRING.ATNONFINALHASHSTRING
	string                           Down;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CVehicleWheel
{
	string                           wheelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           wheelVariation;                  // type:STRING.ATNONFINALHASHSTRING
	string                           modShopLabel;                    // type:STRING.CONST_STRING
	float                            rimRadius;                       // type:FLOAT.0
	bool                             rear;                            // type:BOOL.0
};

struct CVehicleWindowColor
{
	uint                             color;                           // type:UINT.1
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CVfxInteriorInfo
{
	string                           _0x4FF9194E;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6B9326E5;                     // type:FLOAT.0
	float                            _0x44C2C61B;                     // type:FLOAT.0
	float                            _0x8F924B5E;                     // type:FLOAT.0
	float                            _0x3037E30E;                     // type:FLOAT.0
	float                            _0x6F483560;                     // type:FLOAT.0
	float                            _0xF7D569D1;                     // type:FLOAT.0
	float                            _0x3A3D2F64;                     // type:FLOAT.0
	bool                             dustPtFxEnabled;                 // type:BOOL.0
	string                           _0xF1C6FF2A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            dustPtFxEvo;                     // type:FLOAT.0
	bool                             _0x6789544D;                     // type:BOOL.0
};

struct CVfxInteriorInfoMgr
{
	map<string, struct CVfxInteriorSetup>     vfxInteriorSetups;               // type:MAP.ATBINARYMAP
	map<string, struct CVfxInteriorInfo>      vfxInteriorInfos;                // type:MAP.ATBINARYMAP
};

struct CVfxInteriorSetup
{
	string                                interiorInfoName;                // type:STRING.ATNONFINALHASHSTRING
	map<string, struct CVfxRoomSetup>     vfxRoomSetups;                   // type:MAP.ATBINARYMAP
};

struct CVfxPedInfo
{
	enum _0xF254BCAD                 pedType;                         // type:ENUM.32BIT
	string                           _0xB5D334EA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA670A3FC;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x0DD205EF>        _0x117EB4AA;                     // type:ARRAY.ATARRAY
	array<struct _0x7180E947>        _0xEEBEA037;                     // type:ARRAY.ATARRAY
	string                           _0xE7F739E9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x13CD4591;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x738EBB27;                     // type:FLOAT.0
	float                            _0xE48A5133;                     // type:FLOAT.0
	bool                             _0x7DA6FB75;                     // type:BOOL.0
	float                            _0xD9F6D8A3;                     // type:FLOAT.0
	float                            _0xAA0B62AA;                     // type:FLOAT.0
	float                            _0x3011F5EE;                     // type:FLOAT.0
	float                            _0x75BED180;                     // type:FLOAT.0
	float                            _0xF13BBE9C;                     // type:FLOAT.0
	float                            _0xE38B9FF5;                     // type:FLOAT.0
	float                            _0x356C4C85;                     // type:FLOAT.0
	bool                             _0x2B651735;                     // type:BOOL.0
	float                            _0x619735C2;                     // type:FLOAT.0
	bool                             _0x9398BE20;                     // type:BOOL.0
	float                            _0x8BD54CD6;                     // type:FLOAT.0
	float                            _0x946DF42A;                     // type:FLOAT.0
	float                            _0x7EA6FD1B;                     // type:FLOAT.0
	float                            _0x5234839C;                     // type:FLOAT.0
	bool                             _0x4FDF324B;                     // type:BOOL.0
	float                            _0x46AC7BBB;                     // type:FLOAT.0
	bool                             _0xB6D4D3D3;                     // type:BOOL.0
	float                            _0x0FF742E7;                     // type:FLOAT.0
	string                           _0x4CF32F16;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA78AD59D;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xA475D5BF;                     // type:FLOAT.0
	float                            _0x4C21C692;                     // type:FLOAT.0
	float                            _0x5ABA3739;                     // type:FLOAT.0
	bool                             _0x1CB5722F;                     // type:BOOL.0
	float                            _0xA184B242;                     // type:FLOAT.0
	float                            _0x92C85A5D;                     // type:FLOAT.0
	float                            _0x28CC7D87;                     // type:FLOAT.0
	float                            _0x06590C02;                     // type:FLOAT.0
	float                            _0xE28ABB22;                     // type:FLOAT.0
	float                            _0x769B2F12;                     // type:FLOAT.0
	float                            _0xECF625C6;                     // type:FLOAT.0
	float                            _0x346A7FB1;                     // type:FLOAT.0
	float                            _0x2457849C;                     // type:FLOAT.0
	float                            _0x684828EE;                     // type:FLOAT.0
	float                            _0x88055C84;                     // type:FLOAT.0
	float                            _0xFC03B180;                     // type:FLOAT.0
	float                            _0xDFDA6F56;                     // type:FLOAT.0
	float                            _0xEEE6ED1A;                     // type:FLOAT.0
	float                            _0xBDE1B95D;                     // type:FLOAT.0
	bool                             _0xDC43AF2A;                     // type:BOOL.0
	float                            _0x74867B8C;                     // type:FLOAT.0
	float                            _0x4BE3A3EB;                     // type:FLOAT.0
	bool                             _0x5852E080;                     // type:BOOL.0
	float                            _0x481F3029;                     // type:FLOAT.0
	bool                             _0xC74AA0ED;                     // type:BOOL.0
	float                            _0x11E4974D;                     // type:FLOAT.0
	float                            _0x8533F9A3;                     // type:FLOAT.0
	bool                             _0x9DD88385;                     // type:BOOL.0
	float                            _0x8279F7A8;                     // type:FLOAT.0
	float                            _0x5BA56867;                     // type:FLOAT.0
	float                            _0x7D927407;                     // type:FLOAT.0
	float                            _0x2511BDBE;                     // type:FLOAT.0
	float                            _0x73E1883A;                     // type:FLOAT.0
	float                            _0x2008BE53;                     // type:FLOAT.0
	float                            _0xE6BB9D17;                     // type:FLOAT.0
	uint                             _0x9B9CD562;                     // type:UINT.0
	uint                             _0xDAC90093;                     // type:UINT.0
	string                           _0x4F3A1E7E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x77544AA2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x097B16CB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF55B5953;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x66DD94A8;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xFC924EA4;                     // type:BOOL.0
	bool                             _0x62A45566;                     // type:BOOL.0
	float                            _0xB0976023;                     // type:FLOAT.0
	float                            _0xB8327673;                     // type:FLOAT.0
	float                            _0xBBC7FBA3;                     // type:FLOAT.0
	float                            _0xDD034705;                     // type:FLOAT.0
	float                            _0x318666F5;                     // type:FLOAT.0
	float                            _0x6A246184;                     // type:FLOAT.0
	bool                             _0x52270476;                     // type:BOOL.0
	string                           _0x888A7410;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6F2AF4FC;                     // type:FLOAT.0
	enum eAnimBoneTag                _0x5FE0CCCF;                     // type:ENUM.32BIT
	string                           _0xE7C113F8;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x89BF7720;                     // type:FLOAT.0
	array<struct _0x4B80AC69>        _0x776B5A1A;                     // type:ARRAY.ATARRAY
	array<struct _0x1CE459CF>        _0x0D56F3BA;                     // type:ARRAY.ATARRAY
	bool                             _0x6505E8AC;                     // type:BOOL.0
	float                            _0xD524D910;                     // type:FLOAT.0
	string                           _0xADE16C21;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xC4681AB7;                     // type:BOOL.0
	float                            _0x1BF564FA;                     // type:FLOAT.0
	string                           _0x8FC064AD;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xF23501B1;                     // type:BOOL.0
	array<struct _0x6BE7D583>        _0x52354E4D;                     // type:ARRAY.ATARRAY
	float                            _0x775CA38C;                     // type:FLOAT.0
	float                            _0x2AC10156;                     // type:FLOAT.0
	bool                             _0x24294430;                     // type:BOOL.0
	float                            _0x88A87948;                     // type:FLOAT.0
	string                           _0xA6A3266E;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0xDFC20241;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x3CDABA39;                     // type:ENUM.32BIT
	bool                             _0x6A9E79D7;                     // type:BOOL.0
	float                            _0x447FA000;                     // type:FLOAT.0
	string                           _0x8EF73CB4;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0x5BA83EF0;                     // type:ENUM.32BIT
	float                            _0x4481E5E9;                     // type:FLOAT.0
	float                            _0xF763D4F2;                     // type:FLOAT.0
	float                            _0x89FEA0B6;                     // type:FLOAT.0
	float                            _0x42012B40;                     // type:FLOAT.0
	float                            _0x3086B5DF;                     // type:FLOAT.0
	string                           _0xBBC40EE1;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3F127AC9;                     // type:FLOAT.0
	enum eAnimBoneTag                _0x13F41C01;                     // type:ENUM.32BIT
	float                            _0xEBB80DB3;                     // type:FLOAT.0
	float                            _0xC6B4CCB9;                     // type:FLOAT.0
	bool                             _0x9A84B96B;                     // type:BOOL.0
	float                            _0xF1A99383;                     // type:FLOAT.0
	string                           _0xD8EEAD89;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0xC9AF5D19;                     // type:ENUM.32BIT
	vec3                             _0x73657794;                     // type:VECTOR3.0
	float                            _0x6DBCE406;                     // type:FLOAT.0
	float                            _0x34D06956;                     // type:FLOAT.0
	float                            _0x3EEE7604;                     // type:FLOAT.0
	float                            _0xADA6B70B;                     // type:FLOAT.0
	float                            _0xED0D6A32;                     // type:FLOAT.0
	float                            _0xBAF08F0C;                     // type:FLOAT.0
	float                            _0xF97EC56C;                     // type:FLOAT.0
	float                            _0x21339DC9;                     // type:FLOAT.0
	bool                             _0x8144A698;                     // type:BOOL.0
	float                            _0xA2551E1F;                     // type:FLOAT.0
	string                           _0x2040A2BC;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x8D0E25BF;                     // type:FLOAT.0
	float                            _0x0B9C2B4D;                     // type:FLOAT.0
	float                            _0x3EB9382D;                     // type:FLOAT.0
	float                            _0xA56032E5;                     // type:FLOAT.0
	bool                             _0x19B73FBF;                     // type:BOOL.0
	float                            _0x9A7A1749;                     // type:FLOAT.0
	string                           _0xC793B660;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xEBFE1C83;                     // type:FLOAT.0
	float                            _0xA8298BEB;                     // type:FLOAT.0
	float                            _0xEE27CE08;                     // type:FLOAT.0
	float                            _0xC7DDC9F3;                     // type:FLOAT.0
	bool                             _0x1898111E;                     // type:BOOL.0
	float                            _0x70A6F44A;                     // type:FLOAT.0
	bool                             _0xECC1B145;                     // type:BOOL.0
	float                            _0x01CD1657;                     // type:FLOAT.0
	string                           _0x594F6ED2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x405EB74C;                     // type:FLOAT.0
	float                            _0xFBC72E02;                     // type:FLOAT.0
	string                           _0x90436D8A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x1265E335;                     // type:FLOAT.0
	float                            _0x49EF492B;                     // type:FLOAT.0
	float                            _0x2EF39B8B;                     // type:FLOAT.0
	float                            _0x9976D594;                     // type:FLOAT.0
	float                            _0xFEC889D5;                     // type:FLOAT.0
	bool                             _0x35BFD139;                     // type:BOOL.0
	float                            _0x00A03C7E;                     // type:FLOAT.0
	string                           _0xA08E8C08;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xF63B37C0;                     // type:FLOAT.0
	float                            _0x4F1CA9C6;                     // type:FLOAT.0
	string                           _0x1700B872;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x165511D8;                     // type:FLOAT.0
	float                            _0x4F94453C;                     // type:FLOAT.0
	float                            _0xFDCE29D5;                     // type:FLOAT.0
	string                           _0xE8F65A93;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xEFA93AC9;                     // type:FLOAT.0
	float                            _0x5A84B9CA;                     // type:FLOAT.0
	string                           _0x15309E61;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xEFB260BE;                     // type:FLOAT.0
	float                            _0x801E64FC;                     // type:FLOAT.0
	string                           _0x4467FD45;                     // type:STRING.ATNONFINALHASHSTRING
	float                            splashTrailPtFxSpeedEvoMin;      // type:FLOAT.0
	float                            splashTrailPtFxSpeedEvoMax;      // type:FLOAT.0
	float                            _0xF42A961A;                     // type:FLOAT.0
	float                            _0x18C9D61C;                     // type:FLOAT.0
	string                           _0xD6446D46;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xDDF2C6C2;                     // type:FLOAT.0
	string                           _0x53A1A657;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xAEAE6A2B;                     // type:FLOAT.0
	float                            _0xF6934F87;                     // type:FLOAT.0
	float                            _0x2E13229E;                     // type:FLOAT.0
	string                           _0xA712E907;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x4868FE1A;                     // type:FLOAT.0
	float                            _0x08D5475E;                     // type:FLOAT.0
	float                            _0xC63E9512;                     // type:FLOAT.0
	bool                             _0xC472D2E1;                     // type:BOOL.0
	string                           _0xCF78FBFD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5DB5948E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA036D0DA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9AC08C91;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x69FCEE7E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0D08E105;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xA218A2CF;                     // type:FLOAT.0
	float                            _0x1B6F45EE;                     // type:FLOAT.0
	float                            _0xFBAEFDC2;                     // type:FLOAT.0
	bool                             _0x837A086B;                     // type:BOOL.0
	float                            _0x979F1FD3;                     // type:FLOAT.0
	string                           _0x7F5E3255;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0x2465C2C8;                     // type:ENUM.32BIT
	bool                             _0x8A64DB65;                     // type:BOOL.0
	float                            _0xCF8FEF68;                     // type:FLOAT.0
	string                           _0x94736264;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0xEDE5A245;                     // type:ENUM.32BIT
	bool                             _0xD897163E;                     // type:BOOL.0
	array<struct _0xDA63D205>        _0x6039F76B;                     // type:ARRAY.ATARRAY
	bool                             _0x80A4494A;                     // type:BOOL.0
	float                            _0xA6F789DE;                     // type:FLOAT.0
	string                           _0x0C100B56;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x3F6CE918>        _0x120E3F7C;                     // type:ARRAY.ATARRAY
};

struct CVfxPedInfoMgr
{
	map<string, struct _0xC12D8605>     _0x541E0F36;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xDF3EAEDA>     _0x61BE3C05;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x4D731F7D>     _0x0B5D9356;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xE4AEE827>     _0x17D0A45C;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x90989C26>     _0x339E530D;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x6BF1AFA3>     _0x24ECC763;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x5CF3DE90>     _0x6681C613;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x83C16C3B>     _0x7D97A621;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xF9A480D0>     _0x91402E16;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xA5818652>     _0xEB69515D;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xE2BC554A>     _0x7D833078;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x400303FC>     _0x27FA0EDF;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x8433B49A>     _0x09A288A8;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x204F06B0>     _0x3BA747AF;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xE2A72CB5>     _0x8AA2CAF3;                     // type:MAP.ATBINARYMAP
	map<string, struct CVfxPedInfo>     vfxPedInfos;                     // type:MAP.ATBINARYMAP
};

struct CVfxRegionInfo
{
	array<struct _0xD211A0E9>        _0xD35AB4A9;                     // type:ARRAY.ATARRAY
};

struct CVfxRegionInfoMgr
{
	map<string, struct CVfxRegionInfo>     vfxRegionInfos;                  // type:MAP.ATBINARYMAP
};

struct CVfxRoomSetup
{
	string                           interiorInfoName;                // type:STRING.ATNONFINALHASHSTRING
};

struct CVfxVehicleInfo
{
	string                           _0xA670A3FC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB5D334EA;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xDEC06799>        _0x776B5A1A;                     // type:ARRAY.ATARRAY
	array<struct _0x3A06DD1B>        _0xB7471B49;                     // type:ARRAY.ATARRAY
	struct _0x329BA7FC               _0x8F181B1B;                     // type:STRUCT.STRUCTURE
	struct _0x329BA7FC               _0x11B3E4C2;                     // type:STRUCT.STRUCTURE
	struct _0x329BA7FC               _0x202329F1;                     // type:STRUCT.STRUCTURE
	struct _0x329BA7FC               _0x85DC9A16;                     // type:STRUCT.STRUCTURE
	struct _0x329BA7FC               _0x7E913577;                     // type:STRUCT.STRUCTURE
	struct _0x329BA7FC               _0x7787C409;                     // type:STRUCT.STRUCTURE
	float                            mtlBangPtFxVehicleEvo;           // type:FLOAT.0
	float                            mtlBangPtFxVehicleScale;         // type:FLOAT.0
	float                            mtlScrapePtFxVehicleEvo;         // type:FLOAT.0
	float                            mtlScrapePtFxVehicleScale;       // type:FLOAT.0
	bool                             exhaustPtFxEnabled;              // type:BOOL.0
	string                           _0x13C3C797;                     // type:STRING.ATNONFINALHASHSTRING
	float                            exhaustPtFxCutOffSpeed;          // type:FLOAT.0
	float                            exhaustPtFxRange;                // type:FLOAT.0
	float                            exhaustPtFxScale;                // type:FLOAT.0
	float                            exhaustPtFxSpeedEvoMin;          // type:FLOAT.0
	float                            exhaustPtFxSpeedEvoMax;          // type:FLOAT.0
	float                            exhaustPtFxTempEvoMin;           // type:FLOAT.0
	float                            exhaustPtFxTempEvoMax;           // type:FLOAT.0
	bool                             exhaustPtFxThrottleEvoOnGearChange; // type:BOOL.0
	bool                             engineStartupPtFxEnabled;        // type:BOOL.0
	string                           _0xEBE3E963;                     // type:STRING.ATNONFINALHASHSTRING
	float                            engineStartupPtFxRange;          // type:FLOAT.0
	bool                             misfirePtFxEnabled;              // type:BOOL.0
	string                           _0xB5AE4664;                     // type:STRING.ATNONFINALHASHSTRING
	float                            misfirePtFxRange;                // type:FLOAT.0
	bool                             backfirePtFxEnabled;             // type:BOOL.0
	string                           _0x5F769468;                     // type:STRING.ATNONFINALHASHSTRING
	float                            backfirePtFxRange;               // type:FLOAT.0
	bool                             engineDamagePtFxEnabled;         // type:BOOL.0
	bool                             engineDamagePtFxHasPanel;        // type:BOOL.0
	bool                             engineDamagePtFxHasRotorEvo;     // type:BOOL.0
	string                           engineDamagePtFxNoPanelName;     // type:STRING.ATNONFINALHASHSTRING
	string                           engineDamagePtFxPanelOpenName;   // type:STRING.ATNONFINALHASHSTRING
	string                           engineDamagePtFxPanelShutName;   // type:STRING.ATNONFINALHASHSTRING
	float                            engineDamagePtFxRange;           // type:FLOAT.0
	float                            engineDamagePtFxSpeedEvoMin;     // type:FLOAT.0
	float                            engineDamagePtFxSpeedEvoMax;     // type:FLOAT.0
	bool                             overturnedSmokePtFxEnabled;      // type:BOOL.0
	string                           _0xB6437745;                     // type:STRING.ATNONFINALHASHSTRING
	float                            overturnedSmokePtFxRange;        // type:FLOAT.0
	float                            overturnedSmokePtFxAngleThresh;  // type:FLOAT.0
	float                            overturnedSmokePtFxSpeedThresh;  // type:FLOAT.0
	float                            overturnedSmokePtFxEngineHealthThresh; // type:FLOAT.0
	bool                             leakPtFxEnabled;                 // type:BOOL.0
	string                           leakPtFxOilName;                 // type:STRING.ATNONFINALHASHSTRING
	string                           leakPtFxPetrolName;              // type:STRING.ATNONFINALHASHSTRING
	float                            leakPtFxRange;                   // type:FLOAT.0
	float                            leakPtFxSpeedEvoMin;             // type:FLOAT.0
	float                            leakPtFxSpeedEvoMax;             // type:FLOAT.0
	string                           _0xF2C5BC88;                     // type:STRING.ATNONFINALHASHSTRING
	float                            wheelGenericRangeMult;           // type:FLOAT.0
	bool                             wheelSkidmarkRearOnly;           // type:BOOL.0
	float                            wheelSkidmarkSlipMult;           // type:FLOAT.0
	float                            wheelSkidmarkPressureMult;       // type:FLOAT.0
	float                            _0xCE87D4DF;                     // type:FLOAT.0
	float                            _0xD27201F4;                     // type:FLOAT.0
	float                            _0xCC7CC660;                     // type:FLOAT.0
	float                            wheelBurnoutPtFxTempMult;        // type:FLOAT.0
	float                            _0x3EAFE1FC;                     // type:FLOAT.0
	float                            wheelLowLodPtFxScale;            // type:FLOAT.0
	string                           _0x0EB590A6;                     // type:STRING.ATNONFINALHASHSTRING
	float                            wheelPuncturePtFxRange;          // type:FLOAT.0
	string                           _0x631B87D7;                     // type:STRING.ATNONFINALHASHSTRING
	float                            wheelBurstPtFxRange;             // type:FLOAT.0
	string                           _0x5A44E80D;                     // type:STRING.ATNONFINALHASHSTRING
	float                            wheelFirePtFxRange;              // type:FLOAT.0
	float                            wheelFirePtFxSpeedEvoMin;        // type:FLOAT.0
	float                            wheelFirePtFxSpeedEvoMax;        // type:FLOAT.0
	bool                             wreckedFirePtFxEnabled;          // type:BOOL.0
	string                           _0x94A9A2A8;                     // type:STRING.ATNONFINALHASHSTRING
	float                            wreckedFirePtFxDurationMin;      // type:FLOAT.0
	float                            wreckedFirePtFxDurationMax;      // type:FLOAT.0
	float                            wreckedFirePtFxRadius;           // type:FLOAT.0
	bool                             wreckedFire2PtFxEnabled;         // type:BOOL.0
	string                           _0xA6B63DF2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            wreckedFire2PtFxDurationMin;     // type:FLOAT.0
	float                            wreckedFire2PtFxDurationMax;     // type:FLOAT.0
	float                            wreckedFire2PtFxRadius;          // type:FLOAT.0
	bool                             _0xC3CCED11;                     // type:BOOL.0
	vec3                             _0x4AAC7FC0;                     // type:VECTOR3.0
	bool                             wreckedFire3PtFxEnabled;         // type:BOOL.0
	string                           _0x811D8A47;                     // type:STRING.ATNONFINALHASHSTRING
	float                            wreckedFire3PtFxDurationMin;     // type:FLOAT.0
	float                            wreckedFire3PtFxDurationMax;     // type:FLOAT.0
	float                            wreckedFire3PtFxRadius;          // type:FLOAT.0
	bool                             _0x7A2CC02D;                     // type:BOOL.0
	vec3                             _0x7DFF2936;                     // type:VECTOR3.0
	string                           _0x62D02DB3;                     // type:STRING.ATNONFINALHASHSTRING
	float                            petrolTankFirePtFxRange;         // type:FLOAT.0
	float                            petrolTankFirePtFxSpeedEvoMin;   // type:FLOAT.0
	float                            petrolTankFirePtFxSpeedEvoMax;   // type:FLOAT.0
	float                            petrolTankFirePtFxRadius;        // type:FLOAT.0
	bool                             boatEntryPtFxEnabled;            // type:BOOL.0
	float                            boatEntryPtFxRange;              // type:FLOAT.0
	string                           _0xAB1CFCFC;                     // type:STRING.ATNONFINALHASHSTRING
	float                            boatEntryPtFxSpeedEvoMin;        // type:FLOAT.0
	float                            boatEntryPtFxSpeedEvoMax;        // type:FLOAT.0
	float                            boatEntryPtFxScale;              // type:FLOAT.0
	bool                             boatExitPtFxEnabled;             // type:BOOL.0
	float                            boatExitPtFxRange;               // type:FLOAT.0
	string                           _0x6B7BC333;                     // type:STRING.ATNONFINALHASHSTRING
	float                            boatExitPtFxSpeedEvoMin;         // type:FLOAT.0
	float                            boatExitPtFxSpeedEvoMax;         // type:FLOAT.0
	float                            boatExitPtFxScale;               // type:FLOAT.0
	bool                             boatBowPtFxEnabled;              // type:BOOL.0
	float                            boatBowPtFxRange;                // type:FLOAT.0
	string                           boatBowPtFxForwardName;          // type:STRING.ATNONFINALHASHSTRING
	string                           boatBowPtFxReverseName;          // type:STRING.ATNONFINALHASHSTRING
	string                           boatBowPtFxForwardMountedName;   // type:STRING.ATNONFINALHASHSTRING
	vec3                             boatBowPtFxForwardMountedOffset; // type:VECTOR3.0
	float                            boatBowPtFxSpeedEvoMin;          // type:FLOAT.0
	float                            boatBowPtFxSpeedEvoMax;          // type:FLOAT.0
	float                            _0xC64106EA;                     // type:FLOAT.0
	float                            _0x9D0BBCA8;                     // type:FLOAT.0
	float                            boatBowPtFxScale;                // type:FLOAT.0
	float                            boatBowPtFxReverseOffset;        // type:FLOAT.0
	bool                             boatWashPtFxEnabled;             // type:BOOL.0
	float                            boatWashPtFxRange;               // type:FLOAT.0
	string                           _0x3A93A31B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            boatWashPtFxSpeedEvoMin;         // type:FLOAT.0
	float                            boatWashPtFxSpeedEvoMax;         // type:FLOAT.0
	float                            boatWashPtFxScale;               // type:FLOAT.0
	bool                             boatPropellerPtFxEnabled;        // type:BOOL.0
	float                            boatPropellerPtFxRange;          // type:FLOAT.0
	string                           _0x4AE580A2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            boatPropellerPtFxForwardSpeedEvoMin; // type:FLOAT.0
	float                            boatPropellerPtFxForwardSpeedEvoMax; // type:FLOAT.0
	float                            boatPropellerPtFxBackwardSpeedEvoMin; // type:FLOAT.0
	float                            boatPropellerPtFxBackwardSpeedEvoMax; // type:FLOAT.0
	float                            boatPropellerPtFxDepthEvoMin;    // type:FLOAT.0
	float                            boatPropellerPtFxDepthEvoMax;    // type:FLOAT.0
	float                            boatPropellerPtFxScale;          // type:FLOAT.0
	bool                             _0xEBBB6CE6;                     // type:BOOL.0
	float                            _0x0AE373EC;                     // type:FLOAT.0
	string                           _0xB2C9B465;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xA7F30EFE;                     // type:FLOAT.0
	float                            _0x8EC7D2E8;                     // type:FLOAT.0
	float                            _0xEE10BD81;                     // type:FLOAT.0
	float                            _0x44AE8388;                     // type:FLOAT.0
	bool                             _0x55150AC9;                     // type:BOOL.0
	float                            _0xB903E8A5;                     // type:FLOAT.0
	string                           _0xC4FC8954;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xB90223BF;                     // type:BOOL.0
	float                            _0x894B4D5A;                     // type:FLOAT.0
	string                           _0x45F46BE3;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xF91C3E2E;                     // type:BOOL.0
	float                            _0x63093B74;                     // type:FLOAT.0
	float                            _0x3D0BC264;                     // type:FLOAT.0
	string                           _0x640A54B9;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x7BF9E415;                     // type:FLOAT.0
	float                            _0x48E174E9;                     // type:FLOAT.0
	float                            _0xC53EC2BA;                     // type:FLOAT.0
	bool                             boatLowLodWakePtFxEnabled;       // type:BOOL.0
	float                            boatLowLodWakePtFxRangeMin;      // type:FLOAT.0
	float                            boatLowLodWakePtFxRangeMax;      // type:FLOAT.0
	string                           _0x19E588B1;                     // type:STRING.ATNONFINALHASHSTRING
	float                            boatLowLodWakePtFxSpeedEvoMin;   // type:FLOAT.0
	float                            boatLowLodWakePtFxSpeedEvoMax;   // type:FLOAT.0
	float                            boatLowLodWakePtFxScale;         // type:FLOAT.0
	bool                             planeAfterburnerPtFxEnabled;     // type:BOOL.0
	string                           _0x63473617;                     // type:STRING.ATNONFINALHASHSTRING
	float                            planeAfterburnerPtFxRange;       // type:FLOAT.0
	float                            planeAfterburnerPtFxScale;       // type:FLOAT.0
	bool                             planeWingTipPtFxEnabled;         // type:BOOL.0
	string                           _0xC1EC73EB;                     // type:STRING.ATNONFINALHASHSTRING
	float                            planeWingTipPtFxRange;           // type:FLOAT.0
	float                            planeWingTipPtFxSpeedEvoMin;     // type:FLOAT.0
	float                            planeWingTipPtFxSpeedEvoMax;     // type:FLOAT.0
	bool                             planeDamageFirePtFxEnabled;      // type:BOOL.0
	string                           _0xBA4F883F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            planeDamageFirePtFxRange;        // type:FLOAT.0
	float                            planeDamageFirePtFxSpeedEvoMin;  // type:FLOAT.0
	float                            planeDamageFirePtFxSpeedEvoMax;  // type:FLOAT.0
	bool                             _0xED5B2E2B;                     // type:BOOL.0
	string                           _0xC583EF10;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4CA8BF2E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB759F1C9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xED10CDBE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x149E0336;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2502B563;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6E5177B2;                     // type:FLOAT.0
	vec3                             _0xF09E5027;                     // type:VECTOR3.0
	vec3                             _0xCCDFBB9D;                     // type:VECTOR3.0
	bool                             _0xFA74AAD3;                     // type:BOOL.0
	float                            _0x208995DF;                     // type:FLOAT.0
	float                            _0x177A9E41;                     // type:FLOAT.0
	float                            _0x8AC2495A;                     // type:FLOAT.0
	float                            _0x2DD99886;                     // type:FLOAT.0
	bool                             aircraftSectionDamageSmokePtFxEnabled; // type:BOOL.0
	string                           _0x123EE72D;                     // type:STRING.ATNONFINALHASHSTRING
	float                            aircraftSectionDamageSmokePtFxRange; // type:FLOAT.0
	float                            aircraftSectionDamageSmokePtFxSpeedEvoMin; // type:FLOAT.0
	float                            aircraftSectionDamageSmokePtFxSpeedEvoMax; // type:FLOAT.0
	bool                             aircraftDownwashPtFxEnabled;     // type:BOOL.0
	string                           _0xFDD521A3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3F6EBC95;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4A9E78EF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC86CA0FE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEEDC79A9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1786873A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            aircraftDownwashPtFxRange;       // type:FLOAT.0
	float                            aircraftDownwashPtFxDist;        // type:FLOAT.0
	float                            aircraftDownwashPtFxSpeedEvoMin; // type:FLOAT.0
	float                            aircraftDownwashPtFxSpeedEvoMax; // type:FLOAT.0
	bool                             _0x37DB9C5F;                     // type:BOOL.0
	string                           _0x8FF31A44;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x4D658B82;                     // type:FLOAT.0
	float                            _0xA2396770;                     // type:FLOAT.0
	float                            _0xA43AD0C3;                     // type:FLOAT.0
	bool                             _0xCE322105;                     // type:BOOL.0
	string                           _0x29915CCB;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x4BC5EEFB;                     // type:FLOAT.0
	float                            _0x12D53433;                     // type:FLOAT.0
	float                            _0x2419CE90;                     // type:FLOAT.0
	bool                             _0x96F3E88F;                     // type:BOOL.0
	string                           _0x95EFBAD2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x1C2F8D72;                     // type:FLOAT.0
	float                            _0xED3FB3EB;                     // type:FLOAT.0
	float                            _0x16D1C803;                     // type:FLOAT.0
	bool                             _0x25A9C31D;                     // type:BOOL.0
	string                           _0x6F9C06C4;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x1B875673;                     // type:FLOAT.0
	float                            _0xCABFECE3;                     // type:FLOAT.0
	float                            _0xB7CB4F72;                     // type:FLOAT.0
	bool                             _0x110607CA;                     // type:BOOL.0
	string                           _0x734DE155;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC9E6161C;                     // type:FLOAT.0
	float                            _0x08404260;                     // type:FLOAT.0
	float                            _0x95F7C301;                     // type:FLOAT.0
	bool                             splashInPtFxEnabled;             // type:BOOL.0
	float                            splashInPtFxRange;               // type:FLOAT.0
	string                           _0x1700B872;                     // type:STRING.ATNONFINALHASHSTRING
	float                            splashInPtFxSizeEvoMax;          // type:FLOAT.0
	float                            splashInPtFxSpeedDownwardThresh; // type:FLOAT.0
	float                            splashInPtFxSpeedLateralEvoMin;  // type:FLOAT.0
	float                            splashInPtFxSpeedLateralEvoMax;  // type:FLOAT.0
	float                            splashInPtFxSpeedDownwardEvoMin; // type:FLOAT.0
	float                            splashInPtFxSpeedDownwardEvoMax; // type:FLOAT.0
	bool                             splashOutPtFxEnabled;            // type:BOOL.0
	float                            splashOutPtFxRange;              // type:FLOAT.0
	string                           _0xE8F65A93;                     // type:STRING.ATNONFINALHASHSTRING
	float                            splashOutPtFxSizeEvoMax;         // type:FLOAT.0
	float                            splashOutPtFxSpeedLateralEvoMin; // type:FLOAT.0
	float                            splashOutPtFxSpeedLateralEvoMax; // type:FLOAT.0
	float                            splashOutPtFxSpeedUpwardEvoMin;  // type:FLOAT.0
	float                            splashOutPtFxSpeedUpwardEvoMax;  // type:FLOAT.0
	bool                             splashWadePtFxEnabled;           // type:BOOL.0
	float                            splashWadePtFxRange;             // type:FLOAT.0
	string                           _0x15309E61;                     // type:STRING.ATNONFINALHASHSTRING
	float                            splashWadePtFxSizeEvoMax;        // type:FLOAT.0
	float                            splashWadePtFxSpeedVehicleEvoMin; // type:FLOAT.0
	float                            splashWadePtFxSpeedVehicleEvoMax; // type:FLOAT.0
	float                            splashWadePtFxSpeedRiverEvoMin;  // type:FLOAT.0
	float                            splashWadePtFxSpeedRiverEvoMax;  // type:FLOAT.0
	bool                             splashTrailPtFxEnabled;          // type:BOOL.0
	float                            splashTrailPtFxRange;            // type:FLOAT.0
	string                           _0x4467FD45;                     // type:STRING.ATNONFINALHASHSTRING
	float                            splashTrailPtFxSizeEvoMax;       // type:FLOAT.0
	float                            splashTrailPtFxSpeedEvoMin;      // type:FLOAT.0
	float                            splashTrailPtFxSpeedEvoMax;      // type:FLOAT.0
	float                            _0xD3FF8ACE;                     // type:FLOAT.0
	string                           _0xFAA8A927;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xAA0F290A;                     // type:FLOAT.0
	float                            _0xC782B931;                     // type:FLOAT.0
	float                            _0x2C04CA14;                     // type:FLOAT.0
	float                            _0x005DCE57;                     // type:FLOAT.0
};

struct CVfxVehicleInfoMgr
{
	map<string, struct CVfxVehicleInfo>     vfxVehicleInfos;                 // type:MAP.ATBINARYMAP
};

struct CVfxWeaponInfoMgr
{
	map<enum eWeaponEffectGroup, string>     _0x858EFD98;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x6AB32B9C>          _0x684D9F19;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x64BDB519>          _0xFAFD3124;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x121091E4>          _0x14E6273A;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xCCF2FC18>          _0x19DAB038;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x31DC6E2A>          _0x82D5F9A3;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x5DB68CCC>          _0x93DC8711;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x7330C05C>          _0x4F960753;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x734EA69F>          _0x105F68BA;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x1D80DCFA>          _0x704E6D90;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xD7B2BE4A>          _0x8E39B506;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x0D6168A9>          _0xE1BCA161;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x888C5C46>          _0x5EC1F2F0;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xE0E6C4D1>          _0xBFE8F8E9;                     // type:MAP.ATBINARYMAP
};

struct CWantedConditionCriminalOutfitMatches : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	bool                             _0x1745D910;                     // type:BOOL.0
};

struct CWantedConditionCurrentRegion : CAICondition
{
	string                           Region;                          // type:STRING.ATNONFINALHASHSTRING
};

struct CWantedConditionHasBountyIncidentOrder : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             MustNotBeLowSeverity;            // type:BOOL.0
};

struct CWantedConditionHasCheckedOutPotentialSuspect : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CWantedConditionInterrogationFinished : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CWantedConditionInterrogationPastMoveAlong : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CWantedConditionInterrogationStarted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct CWantedConditionIsACleanUpIncident : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct CWantedConditionNumberRecentAssaultsCommitted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinAssaults;                     // type:INT.0
	int                              _0xD4F021AA;                     // type:INT.0
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionNumberRecentMurdersCommitted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinMurders;                      // type:INT.0
	int                              _0xABF974D5;                     // type:INT.0
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionNumberRecentTheftsCommitted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinThefts;                       // type:INT.0
	int                              _0x3FE06A60;                     // type:INT.0
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionPassivelyWanted : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Observer;                        // type:ENUM.32BIT
};

struct CWantedConditionSuspectAccused : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Suspect;                         // type:ENUM.32BIT
	bool                             SpecificSuspect;                 // type:BOOL.0
};

struct CWantedConditionSuspectIdentifiedByAnimal : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Suspect;                         // type:ENUM.32BIT
	bool                             SpecificSuspect;                 // type:BOOL.0
};

struct CWantedConditionSuspectWarnedToLeave : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Suspect;                         // type:ENUM.32BIT
	bool                             SpecificSuspect;                 // type:BOOL.0
};

struct CWantedConditionTimeSinceArrested : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionTimeSinceCommittedCrime : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
	bool                             ConsiderLowSeverity;             // type:BOOL.0
	bool                             ConsiderHighSeverity;            // type:BOOL.0
};

struct CWantedConditionTimeSinceCommittedMurder : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionTimeSinceCommittedTheft : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionTimeSincePaidOffBounty : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionTimeSinceTurnedInBounty : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionUnsolvedCrimes : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              MinCrimes;                       // type:INT.0
	int                              _0xEDF9BEB2;                     // type:INT.0
	int                              MinDays;                         // type:INT.0
	int                              MaxDays;                         // type:INT.0
};

struct CWantedConditionWantedMultiplierZero : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct CWantedHelicopterDispatch__Tunables : CTuning
{
	float                            TimeBetweenSpawnAttempts;        // type:FLOAT.0
	uint                             MinSpawnTimeForPoliceHeliAfterDestroyed; // type:UINT.0
};

struct CWantedIncident__Tunables : CTuning
{
	struct _0x5EF21CD9               UnreachableTarget;               // type:STRUCT.STRUCTURE
	struct _0xD284298E               MultiPlayer;                     // type:STRUCT.STRUCTURE
};

struct CWanted__Tunables : CTuning
{
	struct _0xEBD8F95A                        Crimes;                          // type:STRUCT.STRUCTURE
	struct CWanted__Tunables__WantedLevel     WantedClean;                     // type:STRUCT.STRUCTURE
	struct CWanted__Tunables__WantedLevel     WantedLevel1;                    // type:STRUCT.STRUCTURE
	struct CWanted__Tunables__WantedLevel     WantedLevel2;                    // type:STRUCT.STRUCTURE
	struct CWanted__Tunables__WantedLevel     WantedLevel3;                    // type:STRUCT.STRUCTURE
	struct CWanted__Tunables__WantedLevel     WantedLevel4;                    // type:STRUCT.STRUCTURE
	struct CWanted__Tunables__WantedLevel     WantedLevel5;                    // type:STRUCT.STRUCTURE
	struct _0xA0122ECB                        Difficulty;                      // type:STRUCT.STRUCTURE
	struct _0xFD088411                        Timers;                          // type:STRUCT.STRUCTURE
	struct _0x77F3653E                        Blips;                           // type:STRUCT.STRUCTURE
	struct _0xCCBD5C73                        Disturbance;                     // type:STRUCT.STRUCTURE
	struct _0xAD041E85                        Loitering;                       // type:STRUCT.STRUCTURE
	struct _0x5FA0834D                        _0x88445147;                     // type:STRUCT.STRUCTURE
	struct _0x5FA0834D                        _0x5CD119A9;                     // type:STRUCT.STRUCTURE
	uint                                      MaxTimeTargetVehicleMoving;      // type:UINT.0
	uint                                      DefaultAmnestyTime;              // type:UINT.0
	uint                                      DefaultHiddenEvasionTimeReduction; // type:UINT.0
	uint                                      InitialAreaTimeoutWhenSeen;      // type:UINT.0
	uint                                      InitialAreaTimeoutWhenCrimeReported; // type:UINT.0
	float                                     _0x0E4EC6E4;                     // type:FLOAT.0
	uint                                      _0x32AE5F0A;                     // type:UINT.0
	uint                                      _0xF01DFC1D;                     // type:UINT.0
	float                                     _0xAF48A77C;                     // type:FLOAT.0
	float                                     _0xE5DC97EC;                     // type:FLOAT.0
	float                                     _0xEB2F8699;                     // type:FLOAT.0
	float                                     _0x654BDAF3;                     // type:FLOAT.0
	float                                     _0x0A7218D4;                     // type:FLOAT.0
	float                                     _0x022F140A;                     // type:FLOAT.0
	float                                     _0xDD84C88E;                     // type:FLOAT.0
	float                                     _0xA3E13CD8;                     // type:FLOAT.0
	uint                                      _0x01F6E128;                     // type:UINT.0
	uint                                      _0xF51A61C3;                     // type:UINT.0
	uint                                      _0x1E587086;                     // type:UINT.0
	uint                                      _0xC61A0272;                     // type:UINT.0
	bool                                      _0x1B26CA84;                     // type:BOOL.0
	bool                                      _0x959EB821;                     // type:BOOL.0
	bool                                      _0xAD2C0324;                     // type:BOOL.0
	bool                                      _0x355045A5;                     // type:BOOL.0
	bool                                      _0x7A2C3A52;                     // type:BOOL.0
	bool                                      _0xD1829EB6;                     // type:BOOL.0
	bool                                      _0x3EC4BDA0;                     // type:BOOL.0
};

struct CWanted__Tunables__WantedLevel
{
	struct _0xDA2DA33A               Difficulty;                      // type:STRUCT.STRUCTURE
};

struct CWeaponAccuracyInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            AccuracySpread;                  // type:FLOAT.0
	float                            HipFireAccuracySpread;           // type:FLOAT.0
	float                            AccurateModeAccuracyModifier;    // type:FLOAT.0
	float                            RunAndGunAccuracyModifier;       // type:FLOAT.0
	float                            RunAndGunAccuracyMinOverride;    // type:FLOAT.0
	float                            RunAndGunAccuracyMaxModifier;    // type:FLOAT.0
	float                            RecoilAccuracyMin;               // type:FLOAT.0
	float                            RecoilAccuracyMax;               // type:FLOAT.0
	float                            RecoilErrorTime;                 // type:FLOAT.0
	float                            RecoilRecoveryRate;              // type:FLOAT.0
	float                            RecoilPenalty;                   // type:FLOAT.0
	float                            RecoilAccuracyToAllowHeadShotAI; // type:FLOAT.0
	float                            RecoilAccuracyToAllowHeadShotPlayer; // type:FLOAT.0
	float                            DistractionDecayModifier;        // type:FLOAT.0
	float                            AccuracyFalloffRangeStart;       // type:FLOAT.0
	float                            AccuracyFalloffRangeEnd;         // type:FLOAT.0
	float                            AccuracyFalloffMin;              // type:FLOAT.0
	float                            FiringDistractionTime;           // type:FLOAT.0
};

struct CWeaponActionHashToIndexMappings
{
	map<string, enum WeaponActionCameraConstraintWeight>       FPCameraConstraintIndices;       // type:MAP.ATBINARYMAP
	map<string, enum WeaponActionFirstPersonCameraOffset>      FPCameraOffsetIndices;           // type:MAP.ATBINARYMAP
	map<string, enum WeaponActionRangeSetVariation>            RangeSetIndices;                 // type:MAP.ATBINARYMAP
	map<string, enum WeaponActionClipSetVariation>             ClipSetIndices;                  // type:MAP.ATBINARYMAP
	map<string, enum WeaponActionAdditiveTemplate>             AdditiveTemplateIndices;         // type:MAP.ATBINARYMAP
	map<string, enum WeaponActionFirstPersonTorsoSpaceSet>     FPTorsoSpaceSetIndices;          // type:MAP.ATBINARYMAP
	map<string, enum eReloadActionTypes>                       ReloadActionTypes;               // type:MAP.ATBINARYMAP
	map<string, enum _0xC55F64AC>                              DrivebyTransitionTypeIndices;    // type:MAP.ATBINARYMAP
	map<string, enum WeaponActionAimIkBaseBoneOffsetSet>       AimIkBaseBoneOffsetSetIndices;   // type:MAP.ATBINARYMAP
	map<string, enum WeaponActionBodyBlendVariationSetup>      BodyBlendVariationSetupIndices;  // type:MAP.ATBINARYMAP
};

struct CWeaponActionResult
{
	bitset<enum _0xA7DA38FF>         WeaponType;                      // type:BITSET.32BIT
	string                           ActionResult;                    // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponActionResultList
{
	string                           BrawlingStyleOverride;           // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xA7DA38FF>         WeaponType;                      // type:BITSET.32BIT
	bool                             Invert;                          // type:BOOL.0
	bool                             TargetIntimidated;               // type:BOOL.0
	bool                             Female;                          // type:BOOL.0
	array<string>                    aActionResults;                  // type:ARRAY.ATARRAY
};

struct CWeaponAdditiveWeight
{
	float                            AimingBreathingAdditiveWeight;   // type:FLOAT.0
	float                            FiringBreathingAdditiveWeight;   // type:FLOAT.0
	float                            StealthAimingBreathingAdditiveWeight; // type:FLOAT.0
	float                            StealthFiringBreathingAdditiveWeight; // type:FLOAT.0
	float                            AimingLeanAdditiveWeight;        // type:FLOAT.0
	float                            FiringLeanAdditiveWeight;        // type:FLOAT.0
	float                            StealthAimingLeanAdditiveWeight; // type:FLOAT.0
	float                            StealthFiringLeanAdditiveWeight; // type:FLOAT.0
};

struct CWeaponAimOffsets
{
	vec3                             AimOffsetMin;                    // type:VECTOR3.0
	vec3                             AimOffsetMax;                    // type:VECTOR3.0
	vec2                             TorsoAimOffset;                  // type:VECTOR2.0
	vec2                             TorsoCrouchedAimOffset;          // type:VECTOR2.0
	float                            AimProbeLengthMin;               // type:FLOAT.0
	float                            AimProbeLengthMax;               // type:FLOAT.0
	vec3                             AimOffsetMinFPSIdle;             // type:VECTOR3.0
	vec3                             AimOffsetMedFPSIdle;             // type:VECTOR3.0
	vec3                             AimOffsetMaxFPSIdle;             // type:VECTOR3.0
	vec3                             AimOffsetMinFPSLT;               // type:VECTOR3.0
	vec3                             AimOffsetMaxFPSLT;               // type:VECTOR3.0
	vec3                             AimOffsetMinFPSRNG;              // type:VECTOR3.0
	vec3                             AimOffsetMaxFPSRNG;              // type:VECTOR3.0
	vec3                             AimOffsetMinFPSScope;            // type:VECTOR3.0
	vec3                             AimOffsetMaxFPSScope;            // type:VECTOR3.0
	vec3                             AimOffsetEndPosMinFPSIdle;       // type:VECTOR3.0
	vec3                             AimOffsetEndPosMedFPSIdle;       // type:VECTOR3.0
	vec3                             AimOffsetEndPosMaxFPSIdle;       // type:VECTOR3.0
	vec3                             AimOffsetEndPosMinFPSLT;         // type:VECTOR3.0
	vec3                             AimOffsetEndPosMedFPSLT;         // type:VECTOR3.0
	vec3                             AimOffsetEndPosMaxFPSLT;         // type:VECTOR3.0
	float                            AimProbeRadiusOverrideFPSIdle;   // type:FLOAT.0
	float                            AimProbeRadiusOverrideFPSIdleStealth; // type:FLOAT.0
	float                            AimProbeRadiusOverrideFPSLT;     // type:FLOAT.0
	float                            AimProbeRadiusOverrideFPSRNG;    // type:FLOAT.0
	float                            AimProbeRadiusOverrideFPSScope;  // type:FLOAT.0
};

struct CWeaponAnimations
{
	string                                                   GenericFallback;                 // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xE365DC6B>                                ClipSetVariationTagRules;        // type:ARRAY.ATARRAY
	array<struct _0x5CADC64F>                                IntroVariationRangeSets;         // type:ARRAY.ATARRAY
	array<struct _0x0468324F>                                BodyAdditiveTemplates;           // type:ARRAY.ATARRAY
	array<struct _0x0468324F>                                MPBodyAdditiveTemplates;         // type:ARRAY.ATARRAY
	array<struct _0x0468324F>                                MountedBodyAdditiveTemplates;    // type:ARRAY.ATARRAY
	array<struct _0x0468324F>                                AiMountedBodyAdditiveTemplates;  // type:ARRAY.ATARRAY
	array<struct _0x2BACE241>                                FPSCameraConstraintWeights;      // type:ARRAY.ATARRAY
	array<struct _0x2BACE241>                                FPSMountCameraConstraintWeights; // type:ARRAY.ATARRAY
	array<struct _0xE85AABF2>                                FirstPersonTorsoSpaceSets;       // type:ARRAY.ATARRAY
	array<struct _0xEDAD3D2C>                                FPSCameraOffsets;                // type:ARRAY.ATARRAY
	array<struct _0xEDAD3D2C>                                FPSCameraOffsetsFemale;          // type:ARRAY.ATARRAY
	array<struct _0x0C819B3E>                                FPSCameraOffsetBlendTimes;       // type:ARRAY.ATARRAY
	array<struct _0x85AFA7F3>                                AimIkBaseBoneOffsetSetsMale;     // type:ARRAY.ATARRAY
	array<struct _0x85AFA7F3>                                AimIkBaseBoneOffsetSetsFemale;   // type:ARRAY.ATARRAY
	array<struct _0x37EDA489>                                VariationAdditiveSetups;         // type:ARRAY.ATARRAY
	array<string>                                            FPSFidgetClipsetHashes;          // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                ArmVariationClipSets;            // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                ArmVariationClipSetsFemale;      // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                ReloadArmVariationClipSets;      // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                ReloadArmVariationClipSetsFemale; // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                AimingVariationClipSets;         // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                ReleaseVariationClipSets;        // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                ChamberVariationClipSets;        // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                TransitionVariationClipSets;     // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                OutroVariationClipSets;          // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>                                DiveVariationClipSets;           // type:ARRAY.ATARRAY
	struct _0xC8A3B509                                       NormalPairSet;                   // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       CrouchPairSet;                   // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       SwapPairSet;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       CrouchSwapPairSet;               // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       ShoulderSwapPairSet;             // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       GesturalSwapPairSet;             // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       GesturalOffhandShoulderSwapPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       GesturalShoulderSwapPairSet;     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       GesturalOffhandBackSwapPairSet;  // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       OffhandBackSwapPairSet;          // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       ShortGesturalShoulderSwapPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       ShortGesturalBackSwapPairSet;    // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       OffhandShoulderSwapPairSet;      // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       OffhandArmpitSwapPairSet;        // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       ShoulderRifleDirectSwapPairSet;  // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       BackRifleDirectSwapPairSet;      // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       OffhandShoulderRifleDirectSwapPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       OffhandBackRifleDirectSwapPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponBackDiscardPairSet;        // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponIdleDiscardPairSet;        // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponShoulderDiscardPairSet;    // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponOffhandDiscardPairSet;     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponCrouchBackDiscardPairSet;  // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponCrouchIdleDiscardPairSet;  // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponCrouchShoulderDiscardPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponCrouchOffhandDiscardPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponIdleShoulderDiscardPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponOffhandShoulderDiscardPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponCrouchOffhandShoulderDiscardPairSet; // type:STRUCT.STRUCTURE
	struct _0xC8A3B509                                       WeaponCrouchIdleShoulderDiscardPairSet; // type:STRUCT.STRUCTURE
	struct void                                              StrafeAnimationSet;              // type:STRUCT.EXTERNAL_NAMED
	struct void                                              WeaponSwapData;                  // type:STRUCT.EXTERNAL_NAMED
	struct HitReactHelpers__ClipsetHitReactConditionNode     HitReactionClipSetTree;          // type:STRUCT.POINTER
	struct void                                              NormalSweepProfile;              // type:STRUCT.EXTERNAL_NAMED
	struct void                                              HipSweepProfile;                 // type:STRUCT.EXTERNAL_NAMED
	struct void                                              CrouchSweepProfile;              // type:STRUCT.EXTERNAL_NAMED
	struct void                                              CoverSweepProfile;               // type:STRUCT.EXTERNAL_NAMED
	struct _0x01C660B4                                       WeaponBlockingTest;              // type:STRUCT.SIMPLE_POINTER
	string                                                   RideWeaponClipSetHash;           // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideWeaponDualClipSetHash;       // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideWeaponLanternClipSetHash;    // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideFemaleWeaponClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideFemaleWeaponDualClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0xBAA8B3C9;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   RidePassengerWeaponClipSetHash;  // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x8DC9CA81;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x01A82BB5;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x8A5ED039;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0xBB690C23;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x5CBA1C5B;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideWeaponCombatClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x84CCE102;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x0EBCAAF8;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideFemaleWeaponCombatClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x13A3E021;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideFemaleWeaponCombatLanternClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   MotionClipSetHash;               // type:STRING.ATNONFINALHASHSTRING
	string                                                   WeaponClipSetStreamedHash;       // type:STRING.ATNONFINALHASHSTRING
	string                                                   WeaponHighReloadClipSetStreamedHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   WeaponCrouchReloadClipSetStreamedHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   NormalLocoClipSetHashW;          // type:STRING.ATNONFINALHASHSTRING
	string                                                   ActionLocoClipSetHashW;          // type:STRING.ATNONFINALHASHSTRING
	string                                                   CrouchActionLocoClipSetHashW;    // type:STRING.ATNONFINALHASHSTRING
	string                                                   HorsebackLocoClipSetHashW;       // type:STRING.ATNONFINALHASHSTRING
	string                                                   LeftForendWeaponClipSetStreamedHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AlternateAimingStandingClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   FiringVariationsStandingClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   HipFiringVariationsClipSetHash;  // type:STRING.ATNONFINALHASHSTRING
	string                                                   ShellShockedClipSetHash;         // type:STRING.ATNONFINALHASHSTRING
	string                                                   JumpUpperbodyClipSetHash;        // type:STRING.ATNONFINALHASHSTRING
	string                                                   FallUpperbodyClipSetHash;        // type:STRING.ATNONFINALHASHSTRING
	string                                                   VaultUpperbodyClipSetHash;       // type:STRING.ATNONFINALHASHSTRING
	string                                                   DropdownUpperbodyClipSetHash;    // type:STRING.ATNONFINALHASHSTRING
	string                                                   DoorUpperbodyClipSetHash;        // type:STRING.ATNONFINALHASHSTRING
	string                                                   EmoteUpperbodyClipSetHash;       // type:STRING.ATNONFINALHASHSTRING
	string                                                   HipWeaponClipSetStreamedHash;    // type:STRING.ATNONFINALHASHSTRING
	string                                                   ActionWeaponClipSetStreamedHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   LeftOffhandWeaponClipSetHash;    // type:STRING.ATNONFINALHASHSTRING
	string                                                   RightOffhandWeaponClipSetHash;   // type:STRING.ATNONFINALHASHSTRING
	string                                                   PistolRightSwapClipSetHash;      // type:STRING.ATNONFINALHASHSTRING
	string                                                   PistolLeftSwapClipSetHash;       // type:STRING.ATNONFINALHASHSTRING
	string                                                   DualPistolSwapClipSetHash;       // type:STRING.ATNONFINALHASHSTRING
	string                                                   DualPistolRightSwapClipSetHash;  // type:STRING.ATNONFINALHASHSTRING
	string                                                   PistolRightRelaxSwapClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   DualPistolLeftSwapClipSetHash;   // type:STRING.ATNONFINALHASHSTRING
	string                                                   PistolRightTwirlClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   MeleeOnMountCoreClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   MeleePrimaryHandClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   MeleeOffhandClipSetHash;         // type:STRING.ATNONFINALHASHSTRING
	string                                                   WeaponAimingSwapClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   HorseMountedSwapClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   HorseMountedAlternateSwapClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   GestureBeckonOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   GestureOverThereOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   GestureHaltOverrideClipSetHash;  // type:STRING.ATNONFINALHASHSTRING
	string                                                   GestureGlancesOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroHolsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroUnholsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroSniperHolsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroSniperUnholsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroSurprisedHolsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroSurprisedUnholsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroActionHolsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroActionUnholsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroActionSniperHolsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroActionSniperUnholsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroActionSurprisedHolsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIntroActionSurprisedUnholsteredOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimTurnClipSetHash;              // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimTurnSniperClipSetHash;        // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimTurnSurprisedClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   BulletFlinchOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   BuddyShotOverrideClipSetHash;    // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0xA1B828F5;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                   MovementOverrideClipSetHash;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   GestureGlancesMountedRideAndFireOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   GestureGlancesMountedRideAndFireMovingOverrideClipSetHash; // type:STRING.ATNONFINALHASHSTRING
	string                                                   MotionFilterHash;                // type:STRING.ATNONFINALHASHSTRING
	string                                                   SwapWeaponFilterHash;            // type:STRING.ATNONFINALHASHSTRING
	string                                                   SwapWeaponInLowCoverFilterHash;  // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimPoseOverrideHash;             // type:STRING.ATNONFINALHASHSTRING
	string                                                   AimIkBaseBone;                   // type:STRING.ATNONFINALHASHSTRING
	string                                                   FiringVariationStandingBodyBlendTemplate; // type:STRING.ATNONFINALHASHSTRING
	string                                                   _0x9BD83996;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xF003E9E4                                       NMPoseData;                      // type:STRUCT.STRUCTURE
	struct _0x43D57772                                       MultiplayerTunings;              // type:STRUCT.STRUCTURE
	float                                                    AnimFireRateModifier;            // type:FLOAT.0
	float                                                    AnimBlindFireRateModifier;       // type:FLOAT.0
	bool                                                     AimingDownTheBarrel;             // type:BOOL.0
	bool                                                     UseLeftHandIKAllowTags;          // type:BOOL.0
	bool                                                     BlockLeftHandIKWhileAiming;      // type:BOOL.0
	string                                                   RideWeaponBodyBlendTemplate;     // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideWeaponDualBodyBlendTemplate; // type:STRING.ATNONFINALHASHSTRING
	string                                                   RideWeaponLanternBodyBlendTemplate; // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponAnimationsSet
{
	array<string>                             FallbackChain;                   // type:ARRAY.ATARRAY
	bool                                      UseAsPoseFallbackRoot;           // type:BOOL.0
	map<string, struct CWeaponAnimations>     WeaponAnimations;                // type:MAP.ATBINARYMAP
};

struct CWeaponAnimationsSets
{
	map<string, array<string>>                   SetLists;                        // type:MAP.ATBINARYMAP
	array<struct _0xF0B5A4A3>                    Transitions;                     // type:ARRAY.ATARRAY
	array<struct _0xE0550FED>                    WeaponsToDualLookupMapping;      // type:ARRAY.ATARRAY
	map<string, struct CWeaponAnimationsSet>     WeaponAnimationsSets;            // type:MAP.ATBINARYMAP
	map<string, struct _0x43874087>              WeaponAnimationsSetGroups;       // type:MAP.ATBINARYMAP
	struct _0x9633B518                           WeaponSwapAnimationData;         // type:STRUCT.STRUCTURE
};

struct CWeaponBoneId
{
};

struct CWeaponBulletBending
{
	float                            BulletBendingNearRadius;         // type:FLOAT.0
	float                            BulletBendingFarRadius;          // type:FLOAT.0
	float                            BulletBendingZoomedRadius;       // type:FLOAT.0
	float                            FirstPersonBulletBendingNearRadius; // type:FLOAT.0
	float                            FirstPersonBulletBendingFarRadius; // type:FLOAT.0
	float                            FirstPersonBulletBendingZoomedRadius; // type:FLOAT.0
};

struct CWeaponCamera
{
	string                           CameraDictionaryHash;            // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultCameraHash;               // type:STRING.ATNONFINALHASHSTRING
	string                           InteractionLockonCameraHash;     // type:STRING.ATNONFINALHASHSTRING
	string                           AimCameraHash;                   // type:STRING.ATNONFINALHASHSTRING
	string                           FireCameraHash;                  // type:STRING.ATNONFINALHASHSTRING
	string                           HorseCameraHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           CoverCameraHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           CoverReadyToFireCameraHash;      // type:STRING.ATNONFINALHASHSTRING
	string                           CoverHipFireCameraHash;          // type:STRING.ATNONFINALHASHSTRING
	string                           RunAndGunCameraHash;             // type:STRING.ATNONFINALHASHSTRING
	string                           CinematicShootingCameraHash;     // type:STRING.ATNONFINALHASHSTRING
	string                           GrappleCameraHash;               // type:STRING.ATNONFINALHASHSTRING
	float                            CameraFov;                       // type:FLOAT.0
	float                            FirstPersonAimFovMin;            // type:FLOAT.0
	float                            FirstPersonAimFovMax;            // type:FLOAT.0
	float                            FirstPersonDofSubjectMagnificationPowerFactorNear; // type:FLOAT.0
	float                            FirstPersonDofMaxNearInFocusDistance; // type:FLOAT.0
	float                            FirstPersonDofMaxNearInFocusDistanceBlendLevel; // type:FLOAT.0
	float                            ZoomFactorForAccurateMode;       // type:FLOAT.0
	string                           RecoilShakeHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           RecoilShakeHashFirstPerson;      // type:STRING.ATNONFINALHASHSTRING
	string                           AccuracyOffsetShakeHash;         // type:STRING.ATNONFINALHASHSTRING
	uint                             MinTimeBetweenRecoilShakes;      // type:UINT.0
	float                            RecoilShakeAmplitude;            // type:FLOAT.0
	float                            RecoilShakeAmplitudeFirstPerson; // type:FLOAT.0
	float                            ExplosionShakeAmplitude;         // type:FLOAT.0
};

struct CWeaponCockingInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             NumBarrels;                      // type:UINT.0
	struct _0x4F9319D3               GoodCondition;                   // type:STRUCT.STRUCTURE
	struct _0x4F9319D3               WornCondition;                   // type:STRUCT.STRUCTURE
};

struct CWeaponComponentClipInfo : CWeaponComponentInfo
{
	int                              ClipSize;                        // type:INT.0
	struct void                      ReloadData;                      // type:STRUCT.EXTERNAL_NAMED
};

struct CWeaponComponentClothStrapInfo : CWeaponComponentInfo
{
};

struct CWeaponComponentData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponComponentDecorationInfo : CWeaponComponentInfo
{
	enum _0xB2E5191A                 Section;                         // type:ENUM.32BIT
	enum _0xBFEE7A0A                 Type;                            // type:ENUM.32BIT
	struct CWeaponDecorationData     Data;                            // type:STRUCT.POINTER
};

struct CWeaponComponentFishingLineInfo : CWeaponComponentInfo
{
	string                           DefaultHookModel;                // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBobberModel;              // type:STRING.ATNONFINALHASHSTRING
	float                            FishingLineLength;               // type:FLOAT.0
	float                            InitialRodToBobberRopeLength;    // type:FLOAT.0
	float                            InitialBobberToHookRopeLength;   // type:FLOAT.0
	bool                             BobberHookCollisionEnabled;      // type:BOOL.0
	bool                             AllowCreateAssetsWhileHolstering; // type:BOOL.0
	bool                             WaitToCreateLineAssets;          // type:BOOL.0
	bool                             UnholsterCleanupImmediately;     // type:BOOL.0
	bool                             ForceLineToTargetSlack;          // type:BOOL.0
	bool                             AdjustLineToTargetSlack;         // type:BOOL.0
	bool                             RopeConstraintEnableSoftPushes;  // type:BOOL.0
	float                            RopeConstraintHardPushDepth;     // type:FLOAT.0
	float                            RopeConstraintSoftPushClamp;     // type:FLOAT.0
	int                              NumRodToBobberRopeSegments;      // type:INT.0
	int                              NumBobberToHookRopeSegments;     // type:INT.0
	int                              NumRopeSimIterations;            // type:INT.0
	int                              PrimaryRopeType;                 // type:INT.0
	int                              SecondaryRopeType;               // type:INT.0
	float                            FishingLineWeight;               // type:FLOAT.0
	float                            UnwindRateChange;                // type:FLOAT.0
	float                            StretchStiffness;                // type:FLOAT.0
	float                            CompressionStiffness;            // type:FLOAT.0
	float                            LineChangeRate;                  // type:FLOAT.0
	bool                             HookLineForIdle;                 // type:BOOL.0
	vec3V                            IdleHookLineAttachOffset;        // type:VEC3V.0
	vec3V                            IdleHookLineAttachRotation;      // type:VEC3V.0
};

struct CWeaponComponentFlashLightInfo : CWeaponComponentInfo
{
	float                            MainLightIntensity;              // type:FLOAT.0
	uint                             MainLightColor;                  // type:UINT.1
	float                            MainLightRange;                  // type:FLOAT.0
	float                            MainLightFalloffExponent;        // type:FLOAT.0
	float                            MainLightInnerAngle;             // type:FLOAT.0
	float                            MainLightOuterAngle;             // type:FLOAT.0
	float                            MainLightCoronaIntensity;        // type:FLOAT.0
	float                            MainLightCoronaSize;             // type:FLOAT.0
	float                            MainLightVolumeIntensity;        // type:FLOAT.0
	float                            MainLightVolumeSize;             // type:FLOAT.0
	float                            MainLightVolumeExponent;         // type:FLOAT.0
	uint                             MainLightVolumeOuterColor;       // type:UINT.1
	float                            MainLightShadowFadeDistance;     // type:FLOAT.0
	float                            MainLightSpecularFadeDistance;   // type:FLOAT.0
	float                            SecondaryLightIntensity;         // type:FLOAT.0
	uint                             SecondaryLightColor;             // type:UINT.1
	float                            SecondaryLightRange;             // type:FLOAT.0
	float                            SecondaryLightFalloffExponent;   // type:FLOAT.0
	float                            SecondaryLightInnerAngle;        // type:FLOAT.0
	float                            SecondaryLightOuterAngle;        // type:FLOAT.0
	float                            SecondaryLightVolumeIntensity;   // type:FLOAT.0
	float                            SecondaryLightVolumeSize;        // type:FLOAT.0
	float                            SecondaryLightVolumeExponent;    // type:FLOAT.0
	uint                             SecondaryLightVolumeOuterColor;  // type:UINT.1
	float                            SecondaryLightFadeDistance;      // type:FLOAT.0
	float                            fTargetDistalongAimCamera;       // type:FLOAT.0
	struct CWeaponBoneId             FlashLightBone;                  // type:STRUCT.STRUCTURE
	struct CWeaponBoneId             FlashLightBoneBulbOn;            // type:STRUCT.STRUCTURE
	struct CWeaponBoneId             FlashLightBoneBulbOff;           // type:STRUCT.STRUCTURE
};

struct CWeaponComponentInfo : CItemInfo
{
	string                           UnlockHash;                      // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponBoneId             AttachBone;                      // type:STRUCT.STRUCTURE
	bool                             CreateObject;                    // type:BOOL.0
	int                              Score;                           // type:INT.0
	float                            AccuracyModifier;                // type:FLOAT.0
	float                            CameraFovModifier;               // type:FLOAT.0
	float                            DamageModifier;                  // type:FLOAT.0
	float                            DegradationModifier;             // type:FLOAT.0
	float                            FallOffDamageModifier;           // type:FLOAT.0
	float                            FallOffRangeModifier;            // type:FLOAT.0
	float                            FireRateModifier;                // type:FLOAT.0
	float                            RangeModifier;                   // type:FLOAT.0
	float                            VfxOpacityModifier;              // type:FLOAT.0
	bool                             bShownOnWheel;                   // type:BOOL.0
	vec3V                            VfxOffset;                       // type:VEC3V.0
	array<struct _0x0CFCBFD3>        SnapWeaponComponentBones;        // type:ARRAY.ATARRAY
};

struct CWeaponComponentInfoBlob
{
	array<struct CWeaponComponentData>               Data;                            // type:ARRAY.ATARRAY
	array<struct CWeaponComponentInfo>               Infos;                           // type:ARRAY.ATARRAY
	array<struct CWeaponEngravingDesignData, 40>     Engravings;                      // type:ARRAY.ATFIXEDARRAY
	string                                           InfoBlobName;                    // type:STRING.ATSTRING
};

struct CWeaponComponentPoint
{
	string                            AttachBone;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x2FE6FC32, 10>     Components;                      // type:ARRAY.ATFIXEDARRAY
};

struct CWeaponComponentReloadData : CWeaponComponentData
{
	string                           PedIdleReloadClipId;             // type:STRING.ATNONFINALHASHSTRING
	string                           PedIdleReloadEmptyClipId;        // type:STRING.ATNONFINALHASHSTRING
	string                           PedAimReloadClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                           PedAimReloadEmptyClipId;         // type:STRING.ATNONFINALHASHSTRING
	string                           PedLowLeftCoverReloadClipId;     // type:STRING.ATNONFINALHASHSTRING
	string                           PedLowRightCoverReloadClipId;    // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponIdleReloadClipId;          // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponIdleReloadEmptyClipId;     // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponAimReloadClipId;           // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponAimReloadEmptyClipId;      // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponLowLeftCoverReloadClipId;  // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponLowRightCoverReloadClipId; // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponComponentReloadLoopedData : CWeaponComponentData
{
	array<struct CWeaponComponentReloadData, 3>     Sections;                        // type:ARRAY.MEMBER
};

struct CWeaponComponentScopeInfo : CWeaponComponentInfo
{
	string                           CameraDictionaryHash;            // type:STRING.ATNONFINALHASHSTRING
	string                           CameraHash;                      // type:STRING.ATNONFINALHASHSTRING
	float                            StudyRange;                      // type:FLOAT.0
	float                            RecoilShakeAmplitude;            // type:FLOAT.0
	float                            ExtraZoomFactorForAccurateMode;  // type:FLOAT.0
	string                           ReticuleHash;                    // type:STRING.ATNONFINALHASHSTRING
	string                           LookingGlassModel;               // type:STRING.ATNONFINALHASHSTRING
	float                            LookingGlassFOV;                 // type:FLOAT.0
	float                            LookingGlassZOffset;             // type:FLOAT.0
	float                            LookingGlassZRotation;           // type:FLOAT.0
	float                            LookingGlassScale;               // type:FLOAT.0
	uint                             LookingGlassBacklightColor;      // type:UINT.1
	float                            LookingGlassBacklightIntensityMin; // type:FLOAT.0
	float                            LookingGlassBacklightIntensityMax; // type:FLOAT.0
	vec3V                            LookingGlassBacklightPositionOffset; // type:VEC3V.0
	float                            LookingGlassHighlightAngleNear;  // type:FLOAT.0
	float                            LookingGlassHighlightAngleFar;   // type:FLOAT.0
	string                           LookingGlassAnimatedPostFXStack; // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponComponentShoulderStrapInfo : CWeaponComponentInfo
{
};

struct CWeaponComponentStrapInfo : CWeaponComponentInfo
{
};

struct CWeaponComponentSuppressorInfo : CWeaponComponentInfo
{
	struct CWeaponBoneId             MuzzleBone;                      // type:STRUCT.STRUCTURE
	string                           FlashFx;                         // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponDamageFallOffInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x5272B5BD>        Distances;                       // type:ARRAY.ATARRAY
};

struct CWeaponDamageModeInfo
{
	string                                AmmoInfo;                        // type:STRING.ATNONFINALHASHSTRING
	string                                Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                                  _0x1F5DA5F4;                     // type:UINT.0
	float                                 Damage;                          // type:FLOAT.0
	enum eDamageType                      DamageType;                      // type:ENUM.32BIT
	float                                 Penetration;                     // type:FLOAT.0
	struct CWeaponExplosionInfo           Explosion;                       // type:STRUCT.STRUCTURE
	string                                AccuracyInfo;                    // type:STRING.ATNONFINALHASHSTRING
	string                                DamageFallOffInfo;               // type:STRING.ATNONFINALHASHSTRING
	float                                 MeleeExecutionDismemberment;     // type:FLOAT.0
	array<struct sDismembermentRange>     DismembermentRanges;             // type:ARRAY.ATARRAY
	float                                 ImpulseMultiplier;               // type:FLOAT.0
	string                                NmShotTuningSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                                RecoilShakeHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                                RecoilShakeHashFirstPerson;      // type:STRING.ATNONFINALHASHSTRING
	float                                 RecoilShakeAmplitude;            // type:FLOAT.0
	float                                 RecoilShakeAmplitudeFirstPerson; // type:FLOAT.0
	float                                 PlayerDamagedByPlayerModifier;   // type:FLOAT.0
};

struct CWeaponDamageModifiers
{
	float                            HeadShotDamageModifierAI;        // type:FLOAT.0
	float                            HeadShotDamageModifierPlayer;    // type:FLOAT.0
	float                            NonRegionLimbDamageModifier;     // type:FLOAT.0
	float                            LightlyArmouredDamageModifier;   // type:FLOAT.0
	float                            HeadOnCloseRangePedModifier;     // type:FLOAT.0
	float                            _0x1806425C;                     // type:FLOAT.0
	float                            CriticalHitChanceModifier;       // type:FLOAT.0
	float                            VehicleDamageModifier;           // type:FLOAT.0
	float                            PlayerDamagedByPlayerModifier;   // type:FLOAT.0
	float                            PlayerDamagedByAIModifier;       // type:FLOAT.0
	float                            AIDamagedByPlayerModifier;       // type:FLOAT.0
};

struct CWeaponDamageTime
{
	float                            DamageTime;                      // type:FLOAT.0
	float                            DamageTimeInVehicle;             // type:FLOAT.0
	float                            DamageTimeInVehicleHeadShot;     // type:FLOAT.0
};

struct CWeaponDecorationData
{
};

struct CWeaponDecorationDataInt : CWeaponDecorationData
{
	int                              Value;                           // type:INT.0
};

struct CWeaponDecorationDataString : CWeaponDecorationData
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponDegradationInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	int                              DegradeOnTotalShots;             // type:INT.0
	float                            DegradeOnDurationWet;            // type:FLOAT.0
	float                            DegradeOnDurationDirty;          // type:FLOAT.0
	int                              TotalShotsForSootAndRustBuildup; // type:INT.0
	float                            DurationWetForRustBuildup;       // type:FLOAT.0
	float                            DurationDirtyForDirtBuildup;     // type:FLOAT.0
	float                            PermanentDegradationThreshold;   // type:FLOAT.0
};

struct CWeaponDualWieldAccuracyMod
{
	float                            PairedWithPistolAccuracyModifier; // type:FLOAT.0
	float                            PairedWithRevolverAccuracyModifier; // type:FLOAT.0
	float                            PairedWithShotgunAccuracyModifier; // type:FLOAT.0
};

struct CWeaponEmoteInfo : CEmoteInfo
{
	enum eWeaponAttachPoint          PrimaryHolsterAttachPoint;       // type:ENUM.32BIT
	bool                             HolsterSecondary;                // type:BOOL.0
	struct CAICondition              ValidityCondition;               // type:STRUCT.POINTER
};

struct CWeaponEngravingDesignData : CWeaponComponentData
{
	string                                       TextureHash;                     // type:STRING.ATNONFINALHASHSTRING
	string                                       _0xE95675C9;                     // type:STRING.ATNONFINALHASHSTRING
	enum WeaponEngravingChannel                  DefaultChannel;                  // type:ENUM.32BIT
	map<string, enum WeaponEngravingChannel>     WeaponsChannels;                 // type:MAP.ATMAP
};

struct CWeaponExplosionInfo
{
	enum eExplosionTag               Default;                         // type:ENUM.32BIT
	enum eExplosionTag               HitCar;                          // type:ENUM.32BIT
	enum eExplosionTag               HitTruck;                        // type:ENUM.32BIT
	enum eExplosionTag               HitBike;                         // type:ENUM.32BIT
	enum eExplosionTag               HitBoat;                         // type:ENUM.32BIT
	enum eExplosionTag               HitPlane;                        // type:ENUM.32BIT
};

struct CWeaponFamiliarityInfo
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            ReloadRateModifier;              // type:FLOAT.0
	float                            ReticuleSwaySettleModifier;      // type:FLOAT.0
	float                            RecoilShakeAmplitudeModifier;    // type:FLOAT.0
	float                            StaminaDrainModifier;            // type:FLOAT.0
};

struct CWeaponFiringPatternAliases
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x6C641953>        Aliases;                         // type:ARRAY.ATARRAY
};

struct CWeaponForce
{
	float                                          Force;                           // type:FLOAT.0
	float                                          ForceHitPed;                     // type:FLOAT.0
	float                                          ForceHitVehicle;                 // type:FLOAT.0
	float                                          ForceHitFlyingHeli;              // type:FLOAT.0
	array<struct CWeaponsHitBoneForceOverride>     OverrideForces;                  // type:ARRAY.ATARRAY
	float                                          ForceMaxStrengthMult;            // type:FLOAT.0
	float                                          ForceFalloffRangeStart;          // type:FLOAT.0
	float                                          ForceFalloffRangeEnd;            // type:FLOAT.0
	float                                          ForceFalloffMin;                 // type:FLOAT.0
	float                                          ProjectileForce;                 // type:FLOAT.0
};

struct CWeaponHeadShotDistance
{
	float                            MinHeadShotDistanceAI;           // type:FLOAT.0
	float                            MaxHeadShotDistanceAI;           // type:FLOAT.0
	float                            MinHeadShotDistancePlayer;       // type:FLOAT.0
	float                            MaxHeadShotDistancePlayer;       // type:FLOAT.0
	float                            MaxHeadShotDistanceToPlayerWithScope; // type:FLOAT.0
};

struct CWeaponHoldingAnims
{
	map<string, struct CWeaponHoldingSeatAnim>     SeatAnimations;                  // type:MAP.ATBINARYMAP
	struct CWeaponHoldingSeatAnim                  ShuffleSeatAnimations;           // type:STRUCT.STRUCTURE
	struct CWeaponHoldingSeatAnim                  ShuffleSeatAimingAnimations;     // type:STRUCT.STRUCTURE
};

struct CWeaponHoldingOverride
{
	string                           WeaponHoldingHash;               // type:STRING.ATNONFINALHASHSTRING
	string                           _0x37C8B8D0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponHoldingDualHash;           // type:STRING.ATNONFINALHASHSTRING
	string                           _0x04F02151;                     // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponHoldingBodyBlendTemplateDualHash; // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleWeaponHoldingHash;         // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleWeaponHoldingDualHash;     // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponHoldingSeatAnim
{
	string                                         OneHandedWeaponHoldingHash;      // type:STRING.ATNONFINALHASHSTRING
	string                                         TwoHandedWeaponHoldingHash;      // type:STRING.ATNONFINALHASHSTRING
	string                                         ThrowWeaponHoldingHash;          // type:STRING.ATNONFINALHASHSTRING
	string                                         OneHandedCombatWeaponHoldingHash; // type:STRING.ATNONFINALHASHSTRING
	string                                         TwoHandedCombatWeaponHoldingHash; // type:STRING.ATNONFINALHASHSTRING
	string                                         ThrowCombatWeaponHoldingHash;    // type:STRING.ATNONFINALHASHSTRING
	string                                         DualWieldCombatWeaponHoldingHash; // type:STRING.ATNONFINALHASHSTRING
	string                                         _0x6C2BB17C;                     // type:STRING.ATNONFINALHASHSTRING
	string                                         _0x1B7779F3;                     // type:STRING.ATNONFINALHASHSTRING
	string                                         _0xF0E6AD7A;                     // type:STRING.ATNONFINALHASHSTRING
	string                                         _0x9FE25C4C;                     // type:STRING.ATNONFINALHASHSTRING
	string                                         OneHandedWeaponHoldingBodyBlendTemplateHash; // type:STRING.ATNONFINALHASHSTRING
	string                                         TwoHandedWeaponHoldingBodyBlendTemplateHash; // type:STRING.ATNONFINALHASHSTRING
	string                                         DualWieldWeaponHoldingBodyBlendTemplateHash; // type:STRING.ATNONFINALHASHSTRING
	string                                         ThrowWeaponHoldingBodyBlendTemplateHash; // type:STRING.ATNONFINALHASHSTRING
	map<string, struct CWeaponHoldingOverride>     WeaponAnimationOverrides;        // type:MAP.ATBINARYMAP
};

struct CWeaponIkOffset
{
	vec3                             LeftHandIkOffset;                // type:VECTOR3.0
	float                            IkRecoilDisplacement;            // type:FLOAT.0
	float                            IkRecoilDisplacementScope;       // type:FLOAT.0
	float                            IkRecoilDisplacementScaleBackward; // type:FLOAT.0
	float                            IkRecoilDisplacementScaleVertical; // type:FLOAT.0
	float                            UpperArmTranslationBias;         // type:FLOAT.0
};

struct CWeaponInfo : CWeaponInfoBase
{
	enum eFireType                              FireType;                        // type:ENUM.32BIT
	string                                      Group;                           // type:STRING.ATNONFINALHASHSTRING
	enum _0x8ECA83BA                            WeaponType;                      // type:ENUM.32BIT
	enum _0xFB8561BD                            SwapWeaponType;                  // type:ENUM.32BIT
	int                                         Score;                           // type:INT.0
	int                                         _0x9A862BD2;                     // type:INT.0
	string                                      AnimationLookupHash;             // type:STRING.ATNONFINALHASHSTRING
	array<struct CWeaponDamageModeInfo>         DamageModes;                     // type:ARRAY.ATARRAY
	string                                      AimingInfo;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xDE99E9ED>                   _0x6D43951C;                     // type:ARRAY.ATARRAY
	array<string>                               _0x16FED869;                     // type:ARRAY.ATARRAY
	string                                      AccuracyInfo;                    // type:STRING.ATNONFINALHASHSTRING
	string                                      DamageFallOffInfo;               // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponHeadShotDistance              WeaponHeadShotDistance;          // type:STRUCT.STRUCTURE
	struct CWeaponDamageModifiers               WeaponDamageModifiers;           // type:STRUCT.STRUCTURE
	struct CWeaponDamageTime                    WeaponDamageTime;                // type:STRUCT.STRUCTURE
	struct CWeaponForce                         WeaponForce;                     // type:STRUCT.STRUCTURE
	float                                       MeleeExecutionDismemberment;     // type:FLOAT.0
	array<struct sDismembermentRange>           DismembermentRanges;             // type:ARRAY.ATARRAY
	string                                      DismembermentSetting;            // type:STRING.ATNONFINALHASHSTRING
	float                                       _0x78BB5B90;                     // type:FLOAT.0
	float                                       FragImpulse;                     // type:FLOAT.0
	float                                       VerticalLaunchAdjustment;        // type:FLOAT.0
	float                                       LaunchPitchCorrectionMax;        // type:FLOAT.0
	float                                       DropForwardVelocity;             // type:FLOAT.0
	float                                       Speed;                           // type:FLOAT.0
	float                                       MaxDrawingMBR;                   // type:FLOAT.0
	float                                       BatchSpread;                     // type:FLOAT.0
	struct CWeaponReload                        WeaponReload;                    // type:STRUCT.STRUCTURE
	string                                      CockingInfo;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      _0x20D873DC;                     // type:STRING.ATNONFINALHASHSTRING
	string                                      IkRecoilInfo;                    // type:STRING.ATNONFINALHASHSTRING
	string                                      QuiverInfo;                      // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponTimeBetweenShots              WeaponTimeBetweenShots;          // type:STRUCT.STRUCTURE
	struct CWeaponBulletBending                 WeaponBulletBending;             // type:STRUCT.STRUCTURE
	struct _0xFDDBB1D6                          Vfx;                             // type:STRUCT.STRUCTURE
	struct _0x5FDAD4BE                          WindDisturbance;                 // type:STRUCT.STRUCTURE
	string                                      DegradationInfo;                 // type:STRING.ATNONFINALHASHSTRING
	string                                      FamiliarityInfo;                 // type:STRING.ATNONFINALHASHSTRING
	string                                      RumbleInfo;                      // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponRanges                        WeaponRanges;                    // type:STRUCT.STRUCTURE
	float                                       BulletDirectionOffsetInDegrees;  // type:FLOAT.0
	float                                       _0xC824F688;                     // type:FLOAT.0
	bool                                        IsSpecialWeapon;                 // type:BOOL.0
	bool                                        IsOutlawWeapon;                  // type:BOOL.0
	string                                      UnlockWeaponHash;                // type:STRING.ATNONFINALHASHSTRING
	string                                      BrokenWeaponHash;                // type:STRING.ATNONFINALHASHSTRING
	string                                      VehicleWeaponHash;               // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponCamera                        WeaponCamera;                    // type:STRUCT.STRUCTURE
	string                                      CoverTypeHash;                   // type:STRING.ATNONFINALHASHSTRING
	string                                      _0x239BF1C9;                     // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponReticule                      WeaponReticule;                  // type:STRUCT.STRUCTURE
	struct CWeaponAimOffsets                    WeaponAimOffsets;                // type:STRUCT.STRUCTURE
	struct CWeaponIkOffset                      WeaponIkOffset;                  // type:STRUCT.STRUCTURE
	string                                      PickupHash;                      // type:STRING.ATNONFINALHASHSTRING
	string                                      MPPickupHash;                    // type:STRING.ATNONFINALHASHSTRING
	string                                      PermanentDegradationHumanName;   // type:STRING.ATFINALHASHSTRING
	string                                      MovementModeConditionalIdle;     // type:STRING.ATNONFINALHASHSTRING
	string                                      StatName;                        // type:STRING.ATNONFINALHASHSTRING
	string                                      SkillStatName;                   // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponNM                            WeaponNM;                        // type:STRUCT.STRUCTURE
	string                                      PrimaryHandBlackboardString;     // type:STRING.ATNONFINALHASHSTRING
	string                                      SupportingHandBlackboardString;  // type:STRING.ATNONFINALHASHSTRING
	string                                      SecondaryHandBlackboardString;   // type:STRING.ATNONFINALHASHSTRING
	array<struct CWeaponComponentPoint, 10>     AttachPoints;                    // type:ARRAY.ATFIXEDARRAY
	enum eAnimBoneTag                           FireProbeBone;                   // type:ENUM.32BIT
	bitset<enum _0xC0B6A160>                    WeaponFlags;                     // type:BITSET.32BIT
	enum _0x15FD84AE                            DefaultAIAttackMode;             // type:ENUM.32BIT
	bitset<enum _0x15FD84AE>                    AIAttackModes;                   // type:BITSET.32BIT
	string                                      TintSpecValues;                  // type:STRING.ATNONFINALHASHSTRING
	string                                      FiringPatternAliases;            // type:STRING.ATNONFINALHASHSTRING
	string                                      ReloadUpperBodyFixupExpressionData; // type:STRING.ATNONFINALHASHSTRING
	struct CWeaponAdditiveWeight                WeaponAdditiveWeight;            // type:STRUCT.STRUCTURE
	float                                       DistanceFromTargetToSlideToDefaultLockOnBoneMin; // type:FLOAT.0
	float                                       DistanceFromTargetToSlideToDefaultLockOnBoneMax; // type:FLOAT.0
	float                                       ExpandPedCapsuleRadius;          // type:FLOAT.0
	vec2V                                       MeleeAnimPlaybackRate;           // type:VEC2V.0
	string                                      AudioCollisionHash;              // type:STRING.ATNONFINALHASHSTRING
	enum eWeaponAttachPoint                     HolsterAttachPoint;              // type:ENUM.32BIT
	enum eWeaponAttachPoint                     AlternateHolsterAttachPoint;     // type:ENUM.32BIT
	enum eWeaponAttachPoint                     MutuallyExclusiveHolsterAttachPoint; // type:ENUM.32BIT
	enum eWeaponAttachPoint                     MutuallyExclusiveAlternateHolsterAttachPoint; // type:ENUM.32BIT
	enum eWeaponAttachPoint                     ArmpitAttachPoint;               // type:ENUM.32BIT
	enum eWeaponAttachPoint                     TemporaryAttachPoint;            // type:ENUM.32BIT
	float                                       ShortArmHolsterDOF;              // type:FLOAT.0
	struct CWeaponDualWieldAccuracyMod          WeaponDualWieldAccuracyMod;      // type:STRUCT.STRUCTURE
	float                                       LightRadiusMult;                 // type:FLOAT.0
	float                                       LightRadiusMultLerpTime;         // type:FLOAT.0
	float                                       VehicleAttackAngle;              // type:FLOAT.0
	char                                        MaxDeadeyeTaggedTargets;         // type:CHAR.0
	float                                       TorsoIKAngleLimit;               // type:FLOAT.0
	float                                       MeleeRightFistTargetHealthDamageScaler; // type:FLOAT.0
	float                                       AirborneAircraftLockOnMultiplier; // type:FLOAT.0
	map<string, map<uint, uint>>                CamoDiffuseTexIdxs;              // type:MAP.ATBINARYMAP
	enum eWeaponCaliber                         Caliber;                         // type:ENUM.32BIT
	string                                      VertData;                        // type:STRING.ATNONFINALHASHSTRING
	float                                       MotivationImpactMultiplier;      // type:FLOAT.0
	string                                      LookingGlassDefaultScopeInfo;    // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponInfoBase : CItemInfo
{
	string                           Audio;                           // type:STRING.ATNONFINALHASHSTRING
	string                           Slot;                            // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponInfoBlob
{
	struct _0xBD899112                                    SlotNavigateOrder;               // type:STRUCT.STRUCTURE
	array<struct CWeaponTintSpecValues>                   TintSpecValues;                  // type:ARRAY.ATARRAY
	array<struct CWeaponFiringPatternAliases>             FiringPatternAliases;            // type:ARRAY.ATARRAY
	array<struct CWeaponUpperBodyFixupExpressionData>     UpperBodyFixupExpressionData;    // type:ARRAY.ATARRAY
	array<struct CAimingInfo>                             AimingInfos;                     // type:ARRAY.ATARRAY
	array<struct CWeaponAccuracyInfo>                     AccuracyInfos;                   // type:ARRAY.ATARRAY
	array<struct CWeaponDamageFallOffInfo>                DamageFallOffInfos;              // type:ARRAY.ATARRAY
	array<struct CSectionedReloadInfo>                    SectionedReloadInfos;            // type:ARRAY.ATARRAY
	array<struct CWeaponCockingInfo>                      CockingInfos;                    // type:ARRAY.ATARRAY
	array<struct _0x64F8ED5E>                             _0xD8713A57;                     // type:ARRAY.ATARRAY
	array<struct CIkRecoilInfo>                           IkRecoilInfos;                   // type:ARRAY.ATARRAY
	array<struct CQuiverInfo>                             QuiverInfos;                     // type:ARRAY.ATARRAY
	array<struct CWeaponDegradationInfo>                  DegradationInfos;                // type:ARRAY.ATARRAY
	array<struct CWeaponFamiliarityInfo>                  FamiliarityInfos;                // type:ARRAY.ATARRAY
	array<struct CRumbleInfo>                             RumbleInfos;                     // type:ARRAY.ATARRAY
	array<struct CWeaponVertData>                         VertDataInfos;                   // type:ARRAY.ATARRAY
	array<struct sWeaponInfoList, 4>                      Infos;                           // type:ARRAY.MEMBER
	array<struct CVehicleWeaponInfo>                      VehicleWeaponInfos;              // type:ARRAY.ATARRAY
	string                                                Name;                            // type:STRING.CONST_STRING
	string                                                RawData;                         // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x3284E2C4, 29>                         AttachPointInfos;                // type:ARRAY.ATFIXEDARRAY
	array<struct CWeaponsHitBoneForceOverride>            OverrideForcesModifier;          // type:ARRAY.ATARRAY
};

struct CWeaponItemInfo : CItemInfo
{
	string                           WeaponName;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xEEDF4FCB>        SoundsArray;                     // type:ARRAY.ATARRAY
	struct _0xD09D26E6               UIDisplayInfo;                   // type:STRUCT.STRUCTURE
	struct CInspectionInfo           InspectionInfo;                  // type:STRUCT.STRUCTURE
};

struct CWeaponModelInfo__InitDataList
{
	array<struct _0xD9626B2D>        InitDatas;                       // type:ARRAY.ATARRAY
};

struct CWeaponNM
{
	int                              KnockdownCount;                  // type:INT.0
	float                            KillshotImpulseScale;            // type:FLOAT.0
	string                           NmShotTuningSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                           NmHeadShotTuningSet;             // type:STRING.ATNONFINALHASHSTRING
	string                           NmNeckShotTuningSet;             // type:STRING.ATNONFINALHASHSTRING
	string                           NmChestShotTuningSet;            // type:STRING.ATNONFINALHASHSTRING
	string                           NmBackShotTuningSet;             // type:STRING.ATNONFINALHASHSTRING
	string                           NmArmShotTuningSet;              // type:STRING.ATNONFINALHASHSTRING
	string                           NmLegShotTuningSet;              // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponRanges
{
	float                            LockOnRange;                     // type:FLOAT.0
	float                            LockOnRangeInVehicle;            // type:FLOAT.0
	float                            IdleLockOnRangeModifier;         // type:FLOAT.0
	float                            SoftLockDurationOverride;        // type:FLOAT.0
	float                            WeaponRange;                     // type:FLOAT.0
	float                            WeaponRangeInVehicle;            // type:FLOAT.0
	float                            MeleeWeaponRangeMin;             // type:FLOAT.0
	float                            MeleeWeaponRangeMax;             // type:FLOAT.0
	float                            MeleeWeaponRangeMaxRun;          // type:FLOAT.0
	float                            MeleeWeaponRangeMinToRun;        // type:FLOAT.0
	float                            DesiredRange;                    // type:FLOAT.0
	float                            ProjectileRangeMin;              // type:FLOAT.0
	float                            ProjectileRangeMax;              // type:FLOAT.0
	float                            AiSoundRange;                    // type:FLOAT.0
	float                            AiPotentialBlastEventRange;      // type:FLOAT.0
};

struct CWeaponReload
{
	float                            ReloadTime;                      // type:FLOAT.0
	float                            VehicleReloadTime;               // type:FLOAT.0
	float                            AnimReloadRate;                  // type:FLOAT.0
	string                           SectionedReloadInfo;             // type:STRING.ATNONFINALHASHSTRING
	string                           SectionedReloadInfoDual;         // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponReticule
{
	vec2                             ReticuleHudPosition;             // type:VECTOR2.0
	string                           ReticuleStyleHash;               // type:STRING.ATNONFINALHASHSTRING
	string                           FirstPersonReticuleStyleHash;    // type:STRING.ATNONFINALHASHSTRING
	float                            ReticleSwaySettleDuration;       // type:FLOAT.0
	float                            ReticleSwayPostSettleRestartTime; // type:FLOAT.0
	float                            ReticleSwayAmplitudeModifierNear; // type:FLOAT.0
	float                            ReticleSwayAmplitudeModifierFar; // type:FLOAT.0
	float                            ReticleSwayRangeNear;            // type:FLOAT.0
	float                            ReticleSwayRangeFar;             // type:FLOAT.0
};

struct CWeaponSwapData : CWeaponComponentData
{
	string                           PedHolsterClipId;                // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterStealthClipId;         // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterCrouchClipId;          // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterCoverClipId;           // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterDiscardClipId;         // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterDiscardClipLeftId;     // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterStealthDiscardClipId;  // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterCrouchDiscardClipId;   // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolsterClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolsterStealthClipId;       // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolsterCrouchClipId;        // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolsterLeftCoverClipId;     // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolsterRightCoverClipId;    // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolster0HClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolster0HClipId;            // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterWeaponClipId;          // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolsterWeaponClipId;        // type:STRING.ATNONFINALHASHSTRING
	string                           PedHolsterWeaponStrapClipId;     // type:STRING.ATNONFINALHASHSTRING
	string                           PedUnHolsterWeaponStrapClipId;   // type:STRING.ATNONFINALHASHSTRING
};

struct CWeaponTimeBetweenShots
{
	float                            TimeBetweenShotsMin;             // type:FLOAT.0
	float                            TimeBetweenShotsMax;             // type:FLOAT.0
	float                            TimeLeftBetweenShotsWhereShouldFireIsCached; // type:FLOAT.0
	float                            SpinUpTime;                      // type:FLOAT.0
	float                            SpinTime;                        // type:FLOAT.0
	float                            SpinDownTime;                    // type:FLOAT.0
	float                            AlternateWaitTime;               // type:FLOAT.0
};

struct CWeaponTintSpecValues
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xFB6D3014>        Tints;                           // type:ARRAY.ATARRAY
};

struct CWeaponUpperBodyFixupExpressionData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x624BEF4F, 4>     Data;                            // type:ARRAY.MEMBER
};

struct CWeaponVertData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            damageMax;                       // type:FLOAT.0
	float                            damageCurve;                     // type:FLOAT.0
	float                            damage;                          // type:FLOAT.0
	float                            dirt;                            // type:FLOAT.0
	float                            soot;                            // type:FLOAT.0
	array<enum _0x6C20E79D>          _0x79F75B13;                     // type:ARRAY.ATARRAY
	array<enum _0xC5AC46C3>          _0x47EF6926;                     // type:ARRAY.ATARRAY
	array<struct _0xD1E51183>        components;                      // type:ARRAY.ATARRAY
};

struct CWeaponsHitBoneForceOverride
{
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
	float                            ForceFront;                      // type:FLOAT.0
	float                            ForceBack;                       // type:FLOAT.0
};

struct CWeatherGraphXMLContents
{
	array<struct _0xAECBB61C>        nodes;                           // type:ARRAY.ATARRAY
};

struct CWeatherRegionListXMLContents
{
	array<struct _0xDB671D3F>        regions;                         // type:ARRAY.ATARRAY
};

struct CWeatherRegionTemperatureInfoCollection
{
	array<struct _0xAB2E6B10>        regionInfo;                      // type:ARRAY.ATARRAY
};

struct CWeatherTemperature
{
	array<float, 24>                 TemperatureSamples;              // type:ARRAY.ATFIXEDARRAY
	array<struct _0x6115BB07, 1>     Seasons;                         // type:ARRAY.ATFIXEDARRAY
	struct _0x884FE22B               AltitudeRange;                   // type:STRUCT.STRUCTURE
	struct _0x63AF4C5E               HeatSourceConfig;                // type:STRUCT.STRUCTURE
};

struct CWheelHandlingData : CBaseSubHandlingData
{
	float                            susKFrontBelow;                  // type:FLOAT.0
	float                            dampFrontBelow;                  // type:FLOAT.0
	float                            susKFrontAbove;                  // type:FLOAT.0
	float                            dampFrontAbove;                  // type:FLOAT.0
	float                            susKRearBelow;                   // type:FLOAT.0
	float                            dampRearBelow;                   // type:FLOAT.0
	float                            susKRearAbove;                   // type:FLOAT.0
	float                            dampRearAbove;                   // type:FLOAT.0
	float                            stabilityOffsetFront;            // type:FLOAT.0
	float                            stabilityOffsetRear;             // type:FLOAT.0
	float                            brakeFricFront;                  // type:FLOAT.0
	float                            brakeFricRear;                   // type:FLOAT.0
	float                            latFricFront;                    // type:FLOAT.0
	float                            latFricRear;                     // type:FLOAT.0
	float                            fricClampMin;                    // type:FLOAT.0
	float                            fricClampMax;                    // type:FLOAT.0
	float                            fricClampExp;                    // type:FLOAT.0
};

struct CWildlifeManager__Tunables : CTuning
{
	float                            BirdSpawnXYRangeMin;             // type:FLOAT.0
	float                            BirdSpawnXYRangeMax;             // type:FLOAT.0
	float                            IncreasedAerialSpawningFactor;   // type:FLOAT.0
	float                            MinDistanceToSearchForGroundWildlifePoints; // type:FLOAT.0
	float                            MaxDistanceToSearchForGroundWildlifePoints; // type:FLOAT.0
	float                            GroundMaterialProbeDepth;        // type:FLOAT.0
	float                            GroundMaterialProbeOffset;       // type:FLOAT.0
	float                            GroundMaterialSpawnCoordNormalZTolerance; // type:FLOAT.0
	float                            IncreasedGroundWildlifeSpawningFactor; // type:FLOAT.0
	float                            MaxDistanceToSearchForAquaticPoints; // type:FLOAT.0
	float                            TimeBetweenWaterHeightMapChecks; // type:FLOAT.0
	float                            WaterProbeDepth;                 // type:FLOAT.0
	float                            WaterProbeOffset;                // type:FLOAT.0
	float                            _0x4DFFEB6A;                     // type:FLOAT.0
	float                            IncreasedAquaticSpawningFactor;  // type:FLOAT.0
	float                            _0xBE5356D8;                     // type:FLOAT.0
	float                            _0x55EAEB7B;                     // type:FLOAT.0
	string                           SharkModelName;                  // type:STRING.ATNONFINALHASHSTRING
	float                            DeepWaterThreshold;              // type:FLOAT.0
	float                            PlayerSwimTimeThreshold;         // type:FLOAT.0
	uint                             MinTimeBetweenSharkDispatches;   // type:UINT.0
	float                            SharkAddRangeInViewMin;          // type:FLOAT.0
	float                            _0xD9C760B8;                     // type:FLOAT.0
	float                            _0x499DA253;                     // type:FLOAT.0
	float                            _0x1A06244A;                     // type:FLOAT.0
	float                            _0xA06887F6;                     // type:FLOAT.0
	float                            _0xE5307A34;                     // type:FLOAT.0
	bool                             _0xD239BF4A;                     // type:BOOL.0
	bool                             _0xB2E77CBF;                     // type:BOOL.0
	bool                             _0xBA9A09BB;                     // type:BOOL.0
	bool                             _0x3D045C76;                     // type:BOOL.0
	array<struct _0x9FA1145B>        AmbientScannerParameters;        // type:ARRAY.ATARRAY
	array<struct _0x9FA1145B>        _0x2CBC1A81;                     // type:ARRAY.ATARRAY
	bool                             _0x0EE5ED65;                     // type:BOOL.0
};

struct CWitnessInformations
{
	map<string, struct _0x4F8F3D71>     Personalities;                   // type:MAP.ATBINARYMAP
	map<string, struct _0x1D20B659>     ScoringData;                     // type:MAP.ATBINARYMAP
};

struct CZonedAssets
{
	array<struct _0xBAEBA90E>        assets;                          // type:ARRAY.ATARRAY
};

struct Card
{
	enum CardRank                    rank;                            // type:ENUM.32BIT
	enum CardSuit                    suit;                            // type:ENUM.32BIT
};

struct CargenPriorityAreas
{
	array<struct _0x3766210E>        areas;                           // type:ARRAY.ATARRAY
};

struct CatalogItem
{
	string                                 key;                             // type:STRING.ATNONFINALHASHSTRING
	string                                 category;                        // type:STRING.ATNONFINALHASHSTRING
	string                                 group;                           // type:STRING.ATNONFINALHASHSTRING
	string                                 _0x093520C7;                     // type:STRING.ATNONFINALHASHSTRING
	bitset<enum ItemDatabaseItemFlags>     flags;                           // type:BITSET.32BIT
	string                                 model;                           // type:STRING.ATNONFINALHASHSTRING
	string                                 priorityaccess;                  // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemDatabaseTags>         tags;                            // type:ARRAY.ATARRAY
	array<struct ItemAcquireCosts>         acquirecosts;                    // type:ARRAY.ATARRAY
	array<struct ItemSellPrices>           sellprices;                      // type:ARRAY.ATARRAY
	struct ItemSatchelInspection           satchel;                         // type:STRUCT.STRUCTURE
	struct ItemUiInspection                ui;                              // type:STRUCT.STRUCTURE
	array<struct ItemMultiplicity>         multiplicity;                    // type:ARRAY.ATARRAY
	array<struct ItemEffectsId>            effectids;                       // type:ARRAY.ATARRAY
	struct _0x323B8B4A                     _0x92DD3D51;                     // type:STRUCT.STRUCTURE
};

struct Challenges
{
	array<struct StatsChallengeBase>     challenges;                      // type:ARRAY.ATARRAY
};

struct CharacterRange
{
	uint                             min;                             // type:UINT.0
	uint                             max;                             // type:UINT.0
};

struct ClipUserData
{
	array<string>                    _0xB3969E42;                     // type:ARRAY.ATARRAY
};

struct ColorData
{
	map<string, uint>                Colors;                          // type:MAP.ATBINARYMAP
	map<string, string>              ShortCodes;                      // type:MAP.ATBINARYMAP
	bitset<enum _0x00000000>         ExportsToAS;                     // type:BITSET.ATBITSET
};

struct Combat__DistanceBasedSpeedController : _0xBD9AB8DE
{
	array<struct _0xB849E6EF>        Speeds;                          // type:ARRAY.ATARRAY
};

struct Combat__FixedSpeedController : _0xBD9AB8DE
{
	struct CAISpeed                  Speed;                           // type:STRUCT.STRUCTURE
};

struct ConditionalEmoteAnimInfo : _0x5ECFF4EF
{
	array<struct CAICondition>       Conditions;                      // type:ARRAY.ATARRAY
};

struct ConstellationData
{
	array<struct _0xBC413444>        stars;                           // type:ARRAY.ATARRAY
};

struct ConstrainedMovementOnVehicleMetadataManager
{
	map<string, struct _0xB4A4BBFA>     Volumes;                         // type:MAP.ATBINARYMAP
};

struct ConstrainedMovement__ArcData : _0xB4A4BBFA
{
	struct _0x36F5144A               Angle;                           // type:STRUCT.STRUCTURE
	struct _0x36F5144A               Near;                            // type:STRUCT.STRUCTURE
	struct _0x36F5144A               Far;                             // type:STRUCT.STRUCTURE
};

struct ConstrainedMovement__BoxData : _0xB4A4BBFA
{
	struct _0x36F5144A               Edge;                            // type:STRUCT.STRUCTURE
	vec3                             Scale;                           // type:VECTOR3.0
};

struct CoverStreamingTunables
{
	struct LoadingAreaTunables       LoadingAreaTunables;             // type:STRUCT.STRUCTURE
	struct _0xCCE019D4               MaxAreaSizePerTypeTunables;      // type:STRUCT.STRUCTURE
};

struct CreditGroup
{
	vec2                             Coordinates;                     // type:VECTOR2.0
	string                           ExitAnimation;                   // type:STRING.ATNONFINALHASHSTRING
	float                            Duration;                        // type:FLOAT.0
	array<struct CreditLine>         CreditData;                      // type:ARRAY.ATARRAY
};

struct CreditGroupBinding
{
	array<struct CreditLineBinding>     CreditData;                      // type:ARRAY.ATARRAY
};

struct CreditGroupCluster
{
	int                              GroupStragger;                   // type:INT.0
	float                            StartTime;                       // type:FLOAT.0
	struct CreditGroup               CreditGroup0;                    // type:STRUCT.STRUCTURE
	struct CreditGroup               CreditGroup1;                    // type:STRUCT.STRUCTURE
};

struct CreditLine
{
	string                           TypeAlias;                       // type:STRING.ATNONFINALHASHSTRING
	string                           TextStyle;                       // type:STRING.ATNONFINALHASHSTRING
	string                           StringData;                      // type:STRING.ATSTRING
	string                           StringData2;                     // type:STRING.ATSTRING
	string                           StringData3;                     // type:STRING.ATSTRING
};

struct CreditLineBinding : _0x39DE799A
{
	string                           TypeAlias;                       // type:STRING.ATNONFINALHASHSTRING
	struct _0xE0CC4C41               TextStyle;                       // type:STRUCT.STRUCTURE
	struct _0x51B38E82               StringData;                      // type:STRUCT.STRUCTURE
	struct _0x51B38E82               StringData2;                     // type:STRUCT.STRUCTURE
	struct _0x51B38E82               StringData3;                     // type:STRUCT.STRUCTURE
	struct _0x6D03A7A6               Context;                         // type:STRUCT.STRUCTURE
};

struct CreditsData
{
	array<struct CreditGroupCluster>     CreditSequence;                  // type:ARRAY.ATARRAY
};

struct CurrencyValueConversion : _0xAB76836B
{
	bool                             ForceDollarFormat;               // type:BOOL.0
};

struct CursorLibrary
{
	array<struct _0x6A008202>        Cursors;                         // type:ARRAY.ATARRAY
	enum _0x373B4446                 InitialCursor;                   // type:ENUM.32BIT
};

struct DamageRegionShapes__CylinderData : _0xF5A13AF4
{
	float                            Radius;                          // type:FLOAT.0
	float                            Length;                          // type:FLOAT.0
};

struct DamageRegionShapes__EllipsoidData : _0xF5A13AF4
{
	float                            Length;                          // type:FLOAT.0
	float                            Width;                           // type:FLOAT.0
	float                            Depth;                           // type:FLOAT.0
};

struct DamageRegionShapes__SphereData : _0xF5A13AF4
{
	float                            Radius;                          // type:FLOAT.0
};

struct DetailFoam_Tunables
{
	float                             FoamyTextureSizeInWorld;         // type:FLOAT.0
	float                             uvScaleFor2ndFoamyTextureRead;   // type:FLOAT.0
	float                             FoamyTextureToneMapLowAtCreation; // type:FLOAT.0
	float                             FoamyTextureToneMapHighAtCreation; // type:FLOAT.0
	float                             FoamyTextureToneMapLowAtDissolve; // type:FLOAT.0
	float                             FoamyTextureToneMapHighAtDissolve; // type:FLOAT.0
	float                             FoamThickness;                   // type:FLOAT.0
	float                             NormalOffsetScale;               // type:FLOAT.0
	float                             FoamDecayRate;                   // type:FLOAT.0
	float                             SigmaForGaussianBlur;            // type:FLOAT.0
	array<struct _0x42543A36, 12>     ProductionProfiles;              // type:ARRAY.ATFIXEDARRAY
	float                             RiverFlowScale_Creation;         // type:FLOAT.0
	float                             RiverFlowScale_Propagation;      // type:FLOAT.0
	float                             RiverFlowScale_TextureScroll;    // type:FLOAT.0
	float                             IntensityCurveAdjust;            // type:FLOAT.0
};

struct Dialogue
{
	bool                             _0x72496E38;                     // type:BOOL.0
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDF1478DF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x7C208B54>        Conversations;                   // type:ARRAY.ATARRAY
};

struct DictionaryMemGroupMetadata
{
	string                           MemoryGroup;                     // type:STRING.ATNONFINALHASHSTRING
};

struct DictionaryMemGroupMetadataSet
{
	map<string, struct DictionaryMemGroupMetadata>     MemoryGroupMetadatas;            // type:MAP.ATBINARYMAP
};

struct DictionaryMetadata
{
	uchar                            BudgetFlags;                     // type:UCHAR.0
};

struct DictionaryMetadataSet
{
	map<string, struct DictionaryMetadata>     Metadatas;                       // type:MAP.ATBINARYMAP
};

struct DistanceValueConverter : MeasurementValueConverterBase
{
};

struct Domino
{
	int                              pipsTop;                         // type:INT.0
	int                              pipsBottom;                      // type:INT.0
};

struct DominoPlacement
{
	int                              handIndex;                       // type:INT.0
	struct DominoesBoardPos          pos;                             // type:STRUCT.STRUCTURE
	enum CompassDirection            orientation;                     // type:ENUM.32BIT
};

struct DominoesBoard
{
	int                               endPipsSum;                      // type:INT.0
	int                               iNumDominoes;                    // type:INT.0
	array<struct BoardDomino, 28>     dominoes;                        // type:ARRAY.ATFIXEDARRAY
};

struct DominoesBoardPos
{
	int                              x;                               // type:INT.0
	int                              y;                               // type:INT.0
};

struct DominoesGameData
{
	int                                     currSeat;                        // type:INT.0
	int                                     handIndex;                       // type:INT.0
	int                                     buyInEndPosix;                   // type:INT.0
	int                                     turnEndPosix;                    // type:INT.0
	int                                     winnerSeat;                      // type:INT.0
	int                                     pot;                             // type:INT.0
	struct DominoesBoard                    board;                           // type:STRUCT.STRUCTURE
	array<struct DominoesPlayerData, 4>     playerData;                      // type:ARRAY.ATFIXEDARRAY
};

struct DominoesGameSettings : MinigameSettings
{
	enum DominoesGameType            gameType;                        // type:ENUM.32BIT
	int                              boardLength;                     // type:INT.0
	int                              boardWidth;                      // type:INT.0
	int                              buyIn;                           // type:INT.0
	int                              buyInTimeoutSec;                 // type:INT.0
	int                              turnTimeoutSec;                  // type:INT.0
	bool                             canJoinInProgress;               // type:BOOL.0
	array<int, 3>                    initHandSizes;                   // type:ARRAY.ATRANGEARRAY
	array<int, 3>                    winningPoints;                   // type:ARRAY.ATRANGEARRAY
};

struct DominoesHand
{
	int                              iNumDominoes;                    // type:INT.0
	array<struct Domino, 19>         dominoes;                        // type:ARRAY.ATFIXEDARRAY
};

struct DominoesPlayerData
{
	int                              seat;                            // type:INT.0
	int                              buyIn;                           // type:INT.0
	int                              points;                          // type:INT.0
	int                              handCount;                       // type:INT.0
	struct DominoesHand              hand;                            // type:STRUCT.STRUCTURE
};

struct DragTouchGesture : _0x5589CE6B
{
	enum _0x0C5416DA                 VisibleProperty;                 // type:ENUM.32BIT
};

struct EmoteClipVariationInfo
{
	string                           VariationName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           VariationLabel;                  // type:STRING.ATNONFINALHASHSTRING
	string                           ClipName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           TransitionToVariationClipName;   // type:STRING.ATNONFINALHASHSTRING
	string                           TransitionFromVariationClipName; // type:STRING.ATNONFINALHASHSTRING
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
};

struct EnvironmentalWaterDisturbManager
{
	array<struct _0xB9FB25D3>        Disturbers;                      // type:ARRAY.ATARRAY
};

struct ExecutionCondition
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             condition;                       // type:BOOL.0
};

struct ExecutionConditions
{
	array<struct ExecutionCondition>     activeChangesetConditions;       // type:ARRAY.ATARRAY
	string                               genericConditions;               // type:STRING.ATFINALHASHSTRING
};

struct FRSSAOSettings
{
	float                            HybridNormalMinDistance;         // type:FLOAT.0
	float                            HybridNormalMaxDistance;         // type:FLOAT.0
	float                            DepthBiasScale;                  // type:FLOAT.0
	float                            DepthBiasDistance;               // type:FLOAT.0
	float                            ReflectionOcclusionSSAOStrength; // type:FLOAT.0
	float                            SampleWidth;                     // type:FLOAT.0
	float                            ReflectionOcclusionBias;         // type:FLOAT.0
	float                            _0x3A8C7157;                     // type:FLOAT.0
	float                            _0x86AD6819;                     // type:FLOAT.0
};

struct FastTravelData
{
	array<struct _0xDF1CE1D0>        scenes;                          // type:ARRAY.ATARRAY
	array<struct _0x99C4A91E>        instancedScenes;                 // type:ARRAY.ATARRAY
	array<struct _0x7E946B14>        introScenes;                     // type:ARRAY.ATARRAY
	array<struct _0xAF629DAA>        outroScenes;                     // type:ARRAY.ATARRAY
	array<struct _0x94F33EB5>        destinations;                    // type:ARRAY.ATARRAY
};

struct FeedMessageTemplate
{
	string                           TemplateName;                    // type:STRING.ATNONFINALHASHSTRING
	string                           EnterAnimation;                  // type:STRING.ATNONFINALHASHSTRING
	string                           ExitAnimation;                   // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x72E4314A>        Properties;                      // type:ARRAY.ATARRAY
};

struct FiveFingerFilletGameData
{
	int                                             buyInTimeoutPosix;               // type:INT.0
	int                                             turnTimeoutPosix;                // type:INT.0
	int                                             curSeat;                         // type:INT.0
	int                                             winnerSeat;                      // type:INT.0
	int                                             pot;                             // type:INT.0
	array<struct FiveFingerFilletPlayerData, 2>     playerData;                      // type:ARRAY.ATFIXEDARRAY
};

struct FiveFingerFilletGameSettings : MinigameSettings
{
	enum FiveFingerFilletGameType     gameType;                        // type:ENUM.32BIT
	int                               difficulty;                      // type:INT.0
	int                               numLaps;                         // type:INT.0
	int                               numRounds;                       // type:INT.0
	int                               numLives;                        // type:INT.0
	int                               buyIn;                           // type:INT.0
	int                               buyInTimeoutSec;                 // type:INT.0
	int                               turnTimeoutSec;                  // type:INT.0
	int                               actionTimeLimitMs;               // type:INT.0
	int                               turnTimeLimitSec;                // type:INT.0
};

struct FiveFingerFilletPlayerAction
{
	enum FiveFingerFilletAction      action;                          // type:ENUM.32BIT
	int                              timeMs;                          // type:INT.0
};

struct FiveFingerFilletPlayerData
{
	int                              seat;                            // type:INT.0
	int                              buyIn;                           // type:INT.0
	int                              numRoundsWon;                    // type:INT.0
	int                              numLivesLost;                    // type:INT.0
	int                              numLapsCompleted;                // type:INT.0
	int                              completeTimeMs;                  // type:INT.0
};

struct Flee__Decision__LevelData
{
	map<string, struct _0x5323C588>     WitnessRegionInfo;               // type:MAP.ATBINARYMAP
	struct _0xC6F9C7A2                  RoadEscape;                      // type:STRUCT.STRUCTURE
	struct _0x7E503831                  PenEscapeData;                   // type:STRUCT.STRUCTURE
	struct _0xD691046B                  Interiors;                       // type:STRUCT.STRUCTURE
};

struct FloatXYZ
{
	float                            x;                               // type:FLOAT.0
	float                            y;                               // type:FLOAT.0
	float                            z;                               // type:FLOAT.0
};

struct FormattedStringValueConversionFloat : FormattedStringValueConversionFloatBase
{
};

struct FormattedStringValueConversionFloatBase : _0xAB76836B
{
	string                           TextLabel;                       // type:STRING.ATNONFINALHASHSTRING
};

struct FormattedStringValueConversionString : FormattedStringValueConversionStringBase
{
};

struct FormattedStringValueConversionStringBase : _0xAB76836B
{
	string                           TextLabel;                       // type:STRING.ATNONFINALHASHSTRING
};

struct FormattedStringValueConversionUnsigned : FormattedStringValueConversionUnsignedBase
{
};

struct FormattedStringValueConversionUnsignedBase : _0xAB76836B
{
	string                           TextLabel;                       // type:STRING.ATNONFINALHASHSTRING
};

struct FullBodyLoopedEmoteAnimInfo : _0xAD112116
{
	map<string, struct ActionSet>     AlternateActionSetMap;           // type:MAP.ATMAP
};

struct FullSequence : _0x8EDEB4E3
{
	array<struct _0x21B85929>        Steps;                           // type:ARRAY.ATARRAY
};

struct FullTouchSequence : _0x8EDEB4E3
{
	array<struct _0x0573C43B>        Steps;                           // type:ARRAY.ATARRAY
};

struct GREET_ABIGAIL_RESPONSE_POSTWNT2_CONV1 : CTuning
{
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	int                              _0xEB1016C1;                     // type:INT.0
	float                            _0xCC2F6685;                     // type:FLOAT.0
	float                            _0x77FFC2B2;                     // type:FLOAT.0
	float                            _0x3D2631AF;                     // type:FLOAT.0
	float                            _0x6A3FEDCC;                     // type:FLOAT.0
	float                            _0xCF485448;                     // type:FLOAT.0
	float                            _0x51DB6EB8;                     // type:FLOAT.0
	float                            _0xCEF6FE71;                     // type:FLOAT.0
	float                            _0x0EDB68D1;                     // type:FLOAT.0
	float                            _0x9A78470A;                     // type:FLOAT.0
	float                            _0xF536D1B7;                     // type:FLOAT.0
	float                            _0xE08A04D8;                     // type:FLOAT.0
	float                            _0x692E5DF7;                     // type:FLOAT.0
};

struct GameplayHelpers__CEntryZoneAnimData
{
	string                            Name;                            // type:STRING.ATNONFINALHASHSTRING
	map<enum _0x13950371, string>     EntryZoneClipSets;               // type:MAP.ATBINARYMAP
	enum _0xC6AB2DAA                  ForcePreferredGait;              // type:ENUM.32BIT
	enum _0x1D0E2A5B                  ForcePreferredAngle;             // type:ENUM.32BIT
	enum _0xB07D3C7B                  ApplicableGaitTypes;             // type:ENUM.32BIT
	array<string>                     ExcludedMotionTypes;             // type:ARRAY.ATARRAY
	array<string>                     ExclusivelyAllowedMotionTypes;   // type:ARRAY.ATARRAY
};

struct GameplayHelpers__CEntryZoneTriggerData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	vec2V                            XYOffset;                        // type:VEC2V.0
	float                            InnerRadius;                     // type:FLOAT.0
	float                            ArcRadius;                       // type:FLOAT.0
	float                            TamingArcRadius;                 // type:FLOAT.0
	float                            Direction;                       // type:FLOAT.0
	float                            HalfAngle;                       // type:FLOAT.0
};

struct GameplayHelpers__ClipsetLeafNode : _0x17D63CD1
{
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct GlobalOutfits
{
	array<struct MetaPedOutfit>      outfits;                         // type:ARRAY.ATARRAY
};

struct Goals
{
	array<string>                    availableContexts;               // type:ARRAY.ATARRAY
	array<string>                    missionContexts;                 // type:ARRAY.ATARRAY
	struct _0xEE236B4D               versionReAwards;                 // type:STRUCT.STRUCTURE
	array<struct StatsGoal>          goals;                           // type:ARRAY.ATARRAY
};

struct GridAtlasInfo : _0x834F097F
{
	string                           globalFallbackTextureName;       // type:STRING.ATNONFINALHASHSTRING
	bool                             useGlobalFallback;               // type:BOOL.0
	bool                             hasOwnGlobalFallback;            // type:BOOL.0
	bool                             flipTextureYAxis;                // type:BOOL.0
};

struct GridSector
{
	uint                             SectorStartX;                    // type:UINT.0
	uint                             SectorStartY;                    // type:UINT.0
	uint                             SectorSpanX;                     // type:UINT.0
	uint                             SectorSpanY;                     // type:UINT.0
};

struct GridSectorOverride
{
	string                           sectorName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           sectorOverrideGlobalFallbackName; // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF8A59FA2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           suffix;                          // type:STRING.ATSTRING
	array<struct GridSector>         sectors;                         // type:ARRAY.ATARRAY
};

struct HBAOSettings
{
	float                            HBAORelativeStrength;            // type:FLOAT.0
	float                            CPRelativeStrength;              // type:FLOAT.0
	float                            HBAORadius0;                     // type:FLOAT.0
	float                            HBAORadius1;                     // type:FLOAT.0
	float                            HBAOBlendDistance;               // type:FLOAT.0
	float                            CPRadius;                        // type:FLOAT.0
	float                            MaxPixels;                       // type:FLOAT.0
	float                            CutoffPixels;                    // type:FLOAT.0
	float                            FoliageStrength;                 // type:FLOAT.0
	float                            HBAOFalloffExponent;             // type:FLOAT.0
	float                            CPStrengthClose;                 // type:FLOAT.0
	float                            CPBlendDistanceMin;              // type:FLOAT.0
	float                            CPBlendDistanceMax;              // type:FLOAT.0
};

struct Hand
{
	array<struct Card, 11>           cards;                           // type:ARRAY.ATFIXEDARRAY
	int                              iNumCards;                       // type:INT.0
};

struct HitReactHelpers__ClipsetHitReactConditionNode : _0x810637E9
{
	enum _0x2A7DF65F                 ConditionTestType;               // type:ENUM.32BIT
};

struct InteractionTransitionData
{
	string                           TransitionInteractionType;       // type:STRING.ATNONFINALHASHSTRING
	string                           ChildTransitionClipId;           // type:STRING.ATNONFINALHASHSTRING
};

struct InteractiveFocusModeOptionsPresets
{
	map<string, struct _0xB4A4BBFA>     Presets;                         // type:MAP.ATBINARYMAP
};

struct InteriorGroups
{
	array<struct _0x2A60605A>        InteriorGroupInfos;              // type:ARRAY.ATARRAY
};

struct ItemAcquireCosts
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	int                              quantity;                        // type:INT.0
	string                           costtype;                        // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemCostDef>        items;                           // type:ARRAY.ATARRAY
	array<struct ItemUnlocksDef>     unlocks;                         // type:ARRAY.ATARRAY
};

struct ItemCostDef
{
	string                           item;                            // type:STRING.ATNONFINALHASHSTRING
	int                              quantity;                        // type:INT.0
};

struct ItemDatabaseAward
{
	string                            key;                             // type:STRING.ATNONFINALHASHSTRING
	int                               maxclaims;                       // type:INT.0
	bool                              ignoresmodifiers;                // type:BOOL.0
	bool                              debugonly;                       // type:BOOL.0
	struct ItemDatabaseAwardItems     awarditems;                      // type:STRUCT.STRUCTURE
};

struct ItemDatabaseAwardDef
{
	int                                       version;                         // type:INT.0
	map<string, struct ItemDatabaseAward>     awards;                          // type:MAP.ATBINARYMAP
	map<string, struct _0x5369F04B>           modifiers;                       // type:MAP.ATBINARYMAP
};

struct ItemDatabaseAwardItem
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           path;                            // type:STRING.ATNONFINALHASHSTRING
	int                              qty;                             // type:INT.0
};

struct ItemDatabaseAwardItems
{
	int                                       experience;                      // type:INT.0
	array<struct ItemDatabaseAwardItem>       items;                           // type:ARRAY.ATARRAY
	array<struct ItemDatabaseAwardUnlock>     unlocks;                         // type:ARRAY.ATARRAY
};

struct ItemDatabaseAwardUnlock
{
	string                                        key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemDatabaseAwardUnlockFlag>     flags;                           // type:ARRAY.ATARRAY
};

struct ItemDatabaseAwardUnlockFlag
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	bool                             value;                           // type:BOOL.0
};

struct ItemDatabaseBundle
{
	string                               key;                             // type:STRING.ATNONFINALHASHSTRING
	string                               slotid;                          // type:STRING.ATNONFINALHASHSTRING
	bool                                 equipped;                        // type:BOOL.0
	int                                  quantity;                        // type:INT.0
	array<struct ItemDatabaseBundle>     items;                           // type:ARRAY.ATARRAY
};

struct ItemDatabaseBundles
{
	string                               key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemDatabaseTags>       tags;                            // type:ARRAY.ATARRAY
	array<struct ItemAcquireCosts>       acquirecosts;                    // type:ARRAY.ATARRAY
	struct ItemUiInspection              ui;                              // type:STRUCT.STRUCTURE
	array<struct ItemDatabaseBundle>     items;                           // type:ARRAY.ATARRAY
	array<struct _0xE48F08AC>            unlocks;                         // type:ARRAY.ATARRAY
	array<string>                        _0x1A119766;                     // type:ARRAY.ATARRAY
};

struct ItemDatabaseBuyAward
{
	string                             key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemAcquireCosts>     acquirecosts;                    // type:ARRAY.ATARRAY
	struct ItemUiInspection            ui;                              // type:STRUCT.STRUCTURE
};

struct ItemDatabaseCatalog
{
	string                              type;                            // type:STRING.ATNONFINALHASHSTRING
	int                                 version;                         // type:INT.0
	map<string, struct CatalogItem>     items;                           // type:MAP.ATBINARYMAP
};

struct ItemDatabaseCatalogLayout
{
	string                                   shopid;                          // type:STRING.ATNONFINALHASHSTRING
	string                                   shoptype;                        // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemDatabaseMenuLayout>     menus;                           // type:ARRAY.ATARRAY
	array<struct ItemDatabasePageLayout>     pages;                           // type:ARRAY.ATARRAY
};

struct ItemDatabaseCategory
{
	string                                  key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xDC63F335>               layouts;                         // type:ARRAY.ATARRAY
	array<struct ItemDatabaseHasSlotId>     hasslots;                        // type:ARRAY.ATARRAY
	array<struct ItemDatabaseFitSlotId>     fitsslots;                       // type:ARRAY.ATARRAY
};

struct ItemDatabaseEffectsId
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	int                              value;                           // type:INT.0
	float                            percent;                         // type:FLOAT.0
	int                              time;                            // type:INT.0
	int                              timeunits;                       // type:INT.0
	string                           durationcategory;                // type:STRING.ATNONFINALHASHSTRING
};

struct ItemDatabaseFitSlotId
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
};

struct ItemDatabaseGroupComponents
{
	map<string, struct ItemDatabaseHorseItemComponent>     horses;                          // type:MAP.ATBINARYMAP
};

struct ItemDatabaseHasSlotId
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	int                              cardinality;                     // type:INT.0
	int                              maxdup;                          // type:INT.0
};

struct ItemDatabaseHorseItemComponent : ItemDatabaseItemComponent
{
	string                           breed;                           // type:STRING.ATNONFINALHASHSTRING
	string                           class;                           // type:STRING.ATNONFINALHASHSTRING
	string                           coat;                            // type:STRING.ATNONFINALHASHSTRING
	string                           handling;                        // type:STRING.ATNONFINALHASHSTRING
};

struct ItemDatabaseIntrinsicItems
{
	string                                       key;                             // type:STRING.ATNONFINALHASHSTRING
	string                                       slotid;                          // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemDatabaseIntrinsicItems>     items;                           // type:ARRAY.ATARRAY
};

struct ItemDatabaseItemComponent
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
};

struct ItemDatabaseItemIds
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           linkshopid;                      // type:STRING.ATNONFINALHASHSTRING
	string                           linkmenuid;                      // type:STRING.ATNONFINALHASHSTRING
};

struct ItemDatabaseItemPath
{
	string                           item;                            // type:STRING.ATNONFINALHASHSTRING
	string                           slotid;                          // type:STRING.ATNONFINALHASHSTRING
};

struct ItemDatabaseItemPathSets
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	array<string>                    paths;                           // type:ARRAY.ATARRAY
};

struct ItemDatabaseItemPaths
{
	string                                 key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemDatabaseItemPath>     path;                            // type:ARRAY.ATARRAY
};

struct ItemDatabaseItemPriceModifiers
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	array<string>                    modifiers;                       // type:ARRAY.ATARRAY
};

struct ItemDatabaseManifest
{
	array<struct ItemManifest>       manifest;                        // type:ARRAY.ATARRAY
};

struct ItemDatabaseMenuLayout
{
	string                                       key;                             // type:STRING.ATNONFINALHASHSTRING
	string                                       menutype;                        // type:STRING.ATNONFINALHASHSTRING
	string                                       menudesc;                        // type:STRING.ATNONFINALHASHSTRING
	bool                                         hidden;                          // type:BOOL.0
	bitset<enum ItemDatabaseMenuLayoutFlags>     flags;                           // type:BITSET.32BIT
	array<struct ItemDatabasePageId>             pages;                           // type:ARRAY.ATARRAY
	array<struct ItemDatabaseMenuLayout>         menus;                           // type:ARRAY.ATARRAY
};

struct ItemDatabasePageId
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
};

struct ItemDatabasePageLayout
{
	string                                       key;                             // type:STRING.ATNONFINALHASHSTRING
	string                                       layout;                          // type:STRING.ATNONFINALHASHSTRING
	bitset<enum ItemDatabasePageLayoutFlags>     flags;                           // type:BITSET.32BIT
	array<struct ItemDatabaseItemIds>            items;                           // type:ARRAY.ATARRAY
};

struct ItemDatabaseParser : _0x68BFBC75
{
	int64                                                  pscversion;                      // type:INT64.0
	int64                                                  _0xCF0B6AEB;                     // type:INT64.0
	array<struct ItemDatabaseCategory>                     itemcategories;                  // type:ARRAY.ATARRAY
	array<struct ItemDatabaseCatalogLayout>                cataloglayout;                   // type:ARRAY.ATARRAY
	array<struct ItemDatabaseShopInventory>                shopsinventories;                // type:ARRAY.ATARRAY
	map<string, struct ItemDatabaseBundles>                bundles;                         // type:MAP.ATBINARYMAP
	map<string, struct _0x045A96B5>                        _0xA14EADD4;                     // type:MAP.ATBINARYMAP
	array<struct ItemDatabaseIntrinsicItems>               intrinsicitems;                  // type:ARRAY.ATARRAY
	array<struct ItemDatabaseEffectsId>                    effectsids;                      // type:ARRAY.ATARRAY
	struct ItemDatabaseCatalog                             catalog;                         // type:STRUCT.STRUCTURE
	map<string, struct ItemDatabaseBuyAward>               awards;                          // type:MAP.ATBINARYMAP
	array<struct ItemDatabasePriceModifiers>               pricemodifiers;                  // type:ARRAY.ATARRAY
	map<string, struct ItemDatabaseItemPriceModifiers>     itempricemodifiers;              // type:MAP.ATBINARYMAP
	map<string, struct ItemDatabaseItemPriceModifiers>     _0x3A4CA292;                     // type:MAP.ATBINARYMAP
	map<string, struct ItemDatabaseItemPriceModifiers>     _0x83866ADB;                     // type:MAP.ATBINARYMAP
	map<string, struct ItemDatabaseItemPaths>              itempaths;                       // type:MAP.ATBINARYMAP
	map<string, struct ItemDatabaseItemPathSets>           itempathsets;                    // type:MAP.ATBINARYMAP
	struct ItemDatabaseGroupComponents                     itemcomponents;                  // type:STRUCT.STRUCTURE
};

struct ItemDatabasePriceModifiers
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           stampid;                         // type:STRING.ATNONFINALHASHSTRING
	array<string>                    modifieditems;                   // type:ARRAY.ATARRAY
	array<string>                    modifiedprices;                  // type:ARRAY.ATARRAY
	array<struct ItemModifiers>      modifiers;                       // type:ARRAY.ATARRAY
};

struct ItemDatabaseShopInventory
{
	string                               type;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct ShopInventoryItems>     items;                           // type:ARRAY.ATARRAY
};

struct ItemDatabaseTags
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           type;                            // type:STRING.ATNONFINALHASHSTRING
};

struct ItemEffectsId
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
};

struct ItemLocalizationUiInspection
{
	string                           type;                            // type:STRING.ATFINALHASHSTRING
	array<string>                    values;                          // type:ARRAY.ATARRAY
};

struct ItemManifest
{
	string                           type;                            // type:STRING.ATNONFINALHASHSTRING
	string                           uri;                             // type:STRING.ATFINALHASHSTRING
};

struct ItemModifiers
{
	string                           item;                            // type:STRING.ATNONFINALHASHSTRING
	float                            rate;                            // type:FLOAT.0
};

struct ItemMultiplicity
{
	int64                            quantity;                        // type:INT64.0
	string                           slotid;                          // type:STRING.ATNONFINALHASHSTRING
};

struct ItemRequirements
{
	string                           type;                            // type:STRING.ATNONFINALHASHSTRING
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	int                              state;                           // type:INT.0
	bool                             lock;                            // type:BOOL.0
};

struct ItemSatchelInspection
{
	enum SatchelItemSize             size;                            // type:ENUM.32BIT
};

struct ItemSellPrices
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	int                              quantity;                        // type:INT.0
	string                           costtype;                        // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemCostDef>        items;                           // type:ARRAY.ATARRAY
	array<struct ItemUnlocksDef>     unlocks;                         // type:ARRAY.ATARRAY
};

struct ItemTextureUiInspection
{
	string                           id;                              // type:STRING.ATFINALHASHSTRING
	string                           dict;                            // type:STRING.ATFINALHASHSTRING
	string                           type;                            // type:STRING.ATNONFINALHASHSTRING
};

struct ItemUiInspection
{
	string                                         key;                             // type:STRING.ATNONFINALHASHSTRING
	string                                         description;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemLocalizationUiInspection>     localization;                    // type:ARRAY.ATARRAY
	array<struct ItemTextureUiInspection>          textures;                        // type:ARRAY.ATARRAY
};

struct ItemUnlocksDef
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
};

struct Journal
{
	uint                                       Version;                         // type:UINT.0
	map<string, struct JournalEntry>           Entries;                         // type:MAP.ATBINARYMAP
	map<string, struct JournalEntry>           GrimeEntries;                    // type:MAP.ATBINARYMAP
	array<string>                              PrewrittenEntries;               // type:ARRAY.ATARRAY
	map<string, struct JournalEntryLayout>     EntryLayouts;                    // type:MAP.ATBINARYMAP
};

struct JournalEntry
{
	string                           LocText;                         // type:STRING.ATNSHASHSTRING
	string                           Category;                        // type:STRING.ATNSHASHSTRING
	string                           ExclusiveGroup;                  // type:STRING.ATNSHASHSTRING
	enum _0xBE6DCC47                 Size;                            // type:ENUM.32BIT
	string                           Layout;                          // type:STRING.ATSTRING
	string                           LayoutName;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x3769D6BC>        Textures;                        // type:ARRAY.ATARRAY
};

struct JournalEntryLayout
{
	array<struct _0x56CFE59D>        TextureDatas;                    // type:ARRAY.ATARRAY
};

struct LUTColorblindessVariation
{
	string                           ProtanopiaName;                  // type:STRING.ATNONFINALHASHSTRING
	string                           DeuteranopiaName;                // type:STRING.ATNONFINALHASHSTRING
	string                           TritanopiaName;                  // type:STRING.ATNONFINALHASHSTRING
};

struct LUTColorblindnessVariationMap
{
	map<string, struct LUTColorblindessVariation>     Map;                             // type:MAP.ATBINARYMAP
};

struct LandingPageVideos
{
	map<string, struct _0xB6029A68>     landingPageVideosByDistrict;     // type:MAP.ATMAP
	map<string, struct _0x5AD1191D>     _0x17C2ABED;                     // type:MAP.ATMAP
};

struct LightAnimationPresets
{
	array<struct _0xDE49C47F>        presetIndices;                   // type:ARRAY.ATARRAY
	array<struct _0x8F1BF76B>        presets;                         // type:ARRAY.ATARRAY
	float                            gustMax;                         // type:FLOAT.0
	float                            gustInfluence;                   // type:FLOAT.0
};

struct LoadingAreaTunables
{
	float                            fMinVelocityToOnlyLoadDynamicVehPoints; // type:FLOAT.0
};

struct LocalizedTextValueConversion : _0xAB76836B
{
};

struct Location
{
	vec3V                            position;                        // type:VEC3V.0
	float                            heading;                         // type:FLOAT.0
	string                           outroscene;                      // type:STRING.ATNONFINALHASHSTRING
};

struct Loco__GameDrivenFloatReference
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           GameValueName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           _0x73B1D4E4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            LerpRate;                        // type:FLOAT.0
	bool                             Normalised;                      // type:BOOL.0
	float                            _0x02AA2D69;                     // type:FLOAT.0
	float                            _0x29295462;                     // type:FLOAT.0
	bool                             Absolute;                        // type:BOOL.0
	bool                             _0xC720A887;                     // type:BOOL.0
};

struct Loco__UpperBodyFidgetTimer
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct MainWaterTune
{
	uint                             WaterColor;                      // type:UINT.1
	float                            RippleSpeed;                     // type:FLOAT.0
	float                            FogPierceIntensity;              // type:FLOAT.0
	float                            WaterCycleDepth;                 // type:FLOAT.0
	float                            WaterCycleFade;                  // type:FLOAT.0
	float                            WaterLightningDepth;             // type:FLOAT.0
	float                            WaterLightningFade;              // type:FLOAT.0
	float                            DeepWaterModDepth;               // type:FLOAT.0
	float                            DeepWaterModFade;                // type:FLOAT.0
	float                            GodRaysLerpStart;                // type:FLOAT.0
	float                            GodRaysLerpEnd;                  // type:FLOAT.0
	float                            DisturbFoamScale;                // type:FLOAT.0
	vec2                             FogMin;                          // type:VECTOR2.0
	vec2                             FogMax;                          // type:VECTOR2.0
	float                            RainFadeMin;                     // type:FLOAT.0
	float                            RainFadeMax;                     // type:FLOAT.0
	float                            OceanFoam_DepthFadeRange;        // type:FLOAT.0
	float                            WaterClipViewDistance;           // type:FLOAT.0
	uint                             WaterClipFogColor;               // type:UINT.1
	float                            WaterClipFogBrightness;          // type:FLOAT.0
	float                            WaterClipCameraCausticStrength;  // type:FLOAT.0
	float                            WaterClipCausticStrength;        // type:FLOAT.0
};

struct MapAreaData
{
	array<vec2>                      VisibleArea;                     // type:ARRAY.ATARRAY
	array<vec2>                      Padding;                         // type:ARRAY.ATARRAY
};

struct MapCameraControllerData
{
	map<string, struct MapAreaData>     MapLocations;                    // type:MAP.ATBINARYMAP
};

struct MapControllerData
{
	struct SMapZoomData                         ZoomData;                        // type:STRUCT.STRUCTURE
	struct _0x35FFDDEE                          Styles;                          // type:STRUCT.STRUCTURE
	map<string, struct _0x861A2DEA>             BlipFilters;                     // type:MAP.ATBINARYMAP
	map<string, struct SMapLegendFilters>       LegendFilters;                   // type:MAP.ATBINARYMAP
	map<string, struct SMapLocation>            MapLocations;                    // type:MAP.ATBINARYMAP
	map<string, struct SRegion>                 WantedRegions;                   // type:MAP.ATBINARYMAP
	map<enum eRadarMode, struct SRadarData>     RadarModesData;                  // type:MAP.ATBINARYMAP
	int                                         DpadZoomOutTime;                 // type:INT.0
	float                                       fExteriorFootZoom;               // type:FLOAT.0
	float                                       fExteriorFootZoomRunning;        // type:FLOAT.0
	float                                       fExteriorFootZoomWanted;         // type:FLOAT.0
	float                                       fExteriorFootZoomWantedRunning;  // type:FLOAT.0
	float                                       fInteriorFootZoom;               // type:FLOAT.0
	float                                       fParachutingZoom;                // type:FLOAT.0
	float                                       fVehicleStaticZoom;              // type:FLOAT.0
	float                                       fVehicleStaticWantedZoom;        // type:FLOAT.0
	float                                       fVehicleMovingZoom;              // type:FLOAT.0
	float                                       fVehicleMovingWantedZoom;        // type:FLOAT.0
	float                                       fVehicleSpeedZoomScalar;         // type:FLOAT.0
	float                                       fRangeZoomedScalarStandard;      // type:FLOAT.0
	float                                       fRangeZoomedScalarPlane;         // type:FLOAT.0
};

struct MappingData
{
	map<string, struct _0x3E56B865>     Actions;                         // type:MAP.ATMAP
	map<string, string>                 IdenticalMappings;               // type:MAP.ATMAP
	map<string, string>                 IdenticalSourceAdaptorMappings;  // type:MAP.ATMAP
	map<string, struct _0x8EDEB4E3>     NamedSequences;                  // type:MAP.ATMAP
	uint                                RequiredNamedSequenceCount;      // type:UINT.0
};

struct MappingSettings
{
	array<string>                    HistorySupport;                  // type:ARRAY.ATARRAY
	array<struct _0x77FE2ED2>        Contexts;                        // type:ARRAY.ATARRAY
	string                           StartupContext;                  // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x75DB3CAB>        ActionGroups;                    // type:ARRAY.ATARRAY
};

struct MaterialDataList
{
	array<struct _0xA95E2621>        materials;                       // type:ARRAY.ATARRAY
};

struct MeasurementValueConverterBase : _0xAB76836B
{
	bool                             UseShortSuffix;                  // type:BOOL.0
};

struct MetaPed
{
	array<struct MetaPedOutfit>      outfits;                         // type:ARRAY.ATARRAY
	string                           voiceGroup;                      // type:STRING.ATNONFINALHASHSTRING
	string                           pulverizeVfx;                    // type:STRING.ATNONFINALHASHSTRING
	string                           goreType;                        // type:STRING.ATNONFINALHASHSTRING
	enum eMetaPedType                type;                            // type:ENUM.32BIT
	ushort                           version;                         // type:USHORT.0
	bool                             allowRandomExpressions;          // type:BOOL.0
};

struct MetaPedAnimExpression
{
	string                           expName;                         // type:STRING.ATNONFINALHASHSTRING
	float                            expVal;                          // type:FLOAT.0
};

struct MetaPedAnmData
{
	string                           owner;                           // type:STRING.ATNONFINALHASHSTRING
	string                           wrinkleMask;                     // type:STRING.ATNONFINALHASHSTRING
};

struct MetaPedAsset
{
	int64                                     slodMask;                        // type:INT64.0
	int64                                     slodMask1;                       // type:INT64.0
	int64                                     slodMask2;                       // type:INT64.0
	string                                    guid;                            // type:STRING.ATNONFINALHASHSTRING
	string                                    guidHd;                          // type:STRING.ATNONFINALHASHSTRING
	array<string>                             propertyTags;                    // type:ARRAY.ATARRAY
	array<string>                             matchTags;                       // type:ARRAY.ATARRAY
	array<struct MetaPedAssetRestriction>     restrictions;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAnimExpression>       expressions;                     // type:ARRAY.ATARRAY
	string                                    expressionSet;                   // type:STRING.ATNONFINALHASHSTRING
	float                                     lodThresh0;                      // type:FLOAT.0
	float                                     lodThresh1;                      // type:FLOAT.0
	uint                                      slodColor;                       // type:UINT.1
	uchar                                     slodLayer;                       // type:UCHAR.0
	uchar                                     shaderId;                        // type:UCHAR.0
	bool                                      useTintPalette;                  // type:BOOL.0
};

struct MetaPedAssetBundleData
{
	map<string, struct _0x984EAD3E>     collisionData;                   // type:MAP.ATBINARYMAP
	array<struct _0x6D9B1145>           bundles;                         // type:ARRAY.ATARRAY
};

struct MetaPedAssetList
{
	array<struct MetaPedAsset>          drawableMale;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          drawableFemale;                  // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          drawableTeen;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          drawableAnimal;                  // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          albedoMale;                      // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          albedoFemale;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          albedoTeen;                      // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          albedoAnimal;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          normalMale;                      // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          normalFemale;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          normalTeen;                      // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          normalAnimal;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          materialMale;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          materialFemale;                  // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          materialTeen;                    // type:ARRAY.ATARRAY
	array<struct MetaPedAsset>          materialAnimal;                  // type:ARRAY.ATARRAY
	array<struct MetaPedTintPreset>     tints;                           // type:ARRAY.ATARRAY
};

struct MetaPedAssetRestriction
{
	string                           remove;                          // type:STRING.ATNONFINALHASHSTRING
	string                           add;                             // type:STRING.ATNONFINALHASHSTRING
	bool                             matchParent;                     // type:BOOL.0
	bool                             matchReplaced;                   // type:BOOL.0
	uchar                            probability;                     // type:UCHAR.0
};

struct MetaPedCategoryAsset
{
	string                           category;                        // type:STRING.ATNONFINALHASHSTRING
	string                           drawable;                        // type:STRING.ATNONFINALHASHSTRING
	string                           albedo;                          // type:STRING.ATNONFINALHASHSTRING
	string                           normal;                          // type:STRING.ATNONFINALHASHSTRING
	string                           material;                        // type:STRING.ATNONFINALHASHSTRING
};

struct MetaPedCategoryTags
{
	array<string>                    maleTags;                        // type:ARRAY.ATARRAY
	array<string>                    debugMaleTags;                   // type:ARRAY.ATARRAY
	array<string>                    femaleTags;                      // type:ARRAY.ATARRAY
	array<string>                    debugFemaleTags;                 // type:ARRAY.ATARRAY
	array<string>                    teenTags;                        // type:ARRAY.ATARRAY
	array<string>                    debugTeenTags;                   // type:ARRAY.ATARRAY
	array<string>                    animalTags;                      // type:ARRAY.ATARRAY
	array<string>                    debugAnimalTags;                 // type:ARRAY.ATARRAY
};

struct MetaPedDefAsset
{
	array<string>                    propertyTags;                    // type:ARRAY.ATARRAY
	array<string>                    matchTags;                       // type:ARRAY.ATARRAY
	array<string>                    filterTags;                      // type:ARRAY.ATARRAY
	array<string>                    tintTags;                        // type:ARRAY.ATARRAY
	string                           palette;                         // type:STRING.ATNONFINALHASHSTRING
	uchar                            tint0;                           // type:UCHAR.0
	uchar                            tint1;                           // type:UCHAR.0
	uchar                            tint2;                           // type:UCHAR.0
	uchar                            probability;                     // type:UCHAR.0
	bool                             linkTextures;                    // type:BOOL.0
};

struct MetaPedDefExplicitAsset
{
	string                           drawable;                        // type:STRING.ATNONFINALHASHSTRING
	string                           albedo;                          // type:STRING.ATNONFINALHASHSTRING
	string                           normal;                          // type:STRING.ATNONFINALHASHSTRING
	string                           material;                        // type:STRING.ATNONFINALHASHSTRING
	string                           palette;                         // type:STRING.ATNONFINALHASHSTRING
	uchar                            tint0;                           // type:UCHAR.0
	uchar                            tint1;                           // type:UCHAR.0
	uchar                            tint2;                           // type:UCHAR.0
	uchar                            probability;                     // type:UCHAR.0
};

struct MetaPedExpression
{
	ushort                           id;                              // type:USHORT.0
	float                            value;                           // type:FLOAT.0
};

struct MetaPedExpressions
{
	array<ushort>                    expressionIds;                   // type:ARRAY.ATARRAY
	array<struct _0x4DD0DE0D>        randomExpressions;               // type:ARRAY.ATARRAY
};

struct MetaPedFirstPersonData
{
	string                           fpAlt;                           // type:STRING.ATNONFINALHASHSTRING
	string                           onTransitionFx;                  // type:STRING.ATNONFINALHASHSTRING
	string                           onEquipFx;                       // type:STRING.ATNONFINALHASHSTRING
	uchar                            priority;                        // type:UCHAR.0
};

struct MetaPedGoreData
{
	map<string, struct _0xCC940891>     pedTemplates;                    // type:MAP.ATBINARYMAP
};

struct MetaPedLight
{
	matrix34V                        localLightTransform;             // type:MAT34V.0
	vec4                             color;                           // type:VECTOR4.0
	vec4                             volumeColor;                     // type:VECTOR4.0
	vec4                             lightMixerMult;                  // type:VECTOR4.0
	vec4                             lightMixerBlend;                 // type:VECTOR4.0
	vec3                             emitterOffsetPos;                // type:VECTOR3.0
	float                            lightMixerIntensityRangeMin;     // type:FLOAT.0
	float                            lightMixerIntensityRangeMax;     // type:FLOAT.0
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           texture;                         // type:STRING.ATNONFINALHASHSTRING
	string                           emitterHashName;                 // type:STRING.ATNONFINALHASHSTRING
	float                            emitterSize;                     // type:FLOAT.0
	float                            emitterIntensityMult;            // type:FLOAT.0
	float                            emitterTintDesaturation;         // type:FLOAT.0
	float                            intensity;                       // type:FLOAT.0
	float                            radius;                          // type:FLOAT.0
	float                            falloffExponent;                 // type:FLOAT.0
	float                            falloffBias;                     // type:FLOAT.0
	float                            falloffHardRadius;               // type:FLOAT.0
	float                            falloffSoftRadius;               // type:FLOAT.0
	float                            innerConeAngle;                  // type:FLOAT.0
	float                            outerConeAngle;                  // type:FLOAT.0
	float                            volumeIntensity;                 // type:FLOAT.0
	float                            volumeSize;                      // type:FLOAT.0
	float                            volumeExponent;                  // type:FLOAT.0
	float                            coronaSize;                      // type:FLOAT.0
	float                            coronaIntensity;                 // type:FLOAT.0
	float                            coronaDepthBias;                 // type:FLOAT.0
	float                            wrapAmount;                      // type:FLOAT.0
	float                            roughnessMod;                    // type:FLOAT.0
	float                            nonDirectionality;               // type:FLOAT.0
	float                            SSAOStrength;                    // type:FLOAT.0
	float                            shadowNearClip;                  // type:FLOAT.0
	float                            shadowBlur;                      // type:FLOAT.0
	float                            shadowOpacity;                   // type:FLOAT.0
	float                            squareAspectRatio;               // type:FLOAT.0
	uint                             flags;                           // type:UINT.0
	uint                             extraflags;                      // type:UINT.0
	enum eAnimBoneTag                bone;                            // type:ENUM.16BIT
	enum eMetaPedLightType           pedLightType;                    // type:ENUM.8BIT
	uchar                            pedLightFlashiness;              // type:UCHAR.0
	uchar                            fadeDistance;                    // type:UCHAR.0
	uchar                            shadowFadeDistance;              // type:UCHAR.0
	uchar                            dynamicShadowFadeDistance;       // type:UCHAR.0
	uchar                            specularFadeDistance;            // type:UCHAR.0
	uchar                            volumetricFadeDistance;          // type:UCHAR.0
	bool                             useInFirstPerson;                // type:BOOL.0
	bool                             useInThirdPerson;                // type:BOOL.0
	bool                             useInMultiplayer;                // type:BOOL.0
	bool                             bLocalPlayerOnly;                // type:BOOL.0
	bool                             bNotLocalPlayerOnly;             // type:BOOL.0
	bool                             injectsIntoVoxels;               // type:BOOL.0
};

struct MetaPedLights
{
	array<struct MetaPedLight>          lights;                          // type:ARRAY.ATARRAY
	map<string, struct _0x0C9FE068>     assetLights;                     // type:MAP.ATBINARYMAP
};

struct MetaPedLiveEditAsset
{
	string                                    category;                        // type:STRING.ATNONFINALHASHSTRING
	string                                    drawable;                        // type:STRING.ATNONFINALHASHSTRING
	string                                    albedo;                          // type:STRING.ATNONFINALHASHSTRING
	string                                    albedoHd;                        // type:STRING.ATNONFINALHASHSTRING
	string                                    normal;                          // type:STRING.ATNONFINALHASHSTRING
	string                                    normalHd;                        // type:STRING.ATNONFINALHASHSTRING
	string                                    material;                        // type:STRING.ATNONFINALHASHSTRING
	string                                    materialHd;                      // type:STRING.ATNONFINALHASHSTRING
	string                                    palette;                         // type:STRING.ATNONFINALHASHSTRING
	string                                    inheritFromGuid;                 // type:STRING.ATNONFINALHASHSTRING
	float                                     lodThresh0;                      // type:FLOAT.0
	float                                     lodThresh1;                      // type:FLOAT.0
	uint                                      slodColor;                       // type:UINT.1
	int64                                     slodMask;                        // type:INT64.0
	int64                                     slodMask1;                       // type:INT64.0
	int64                                     slodMask2;                       // type:INT64.0
	uchar                                     slodLayer;                       // type:UCHAR.0
	uchar                                     shaderId;                        // type:UCHAR.0
	uchar                                     tint0;                           // type:UCHAR.0
	uchar                                     tint1;                           // type:UCHAR.0
	uchar                                     tint2;                           // type:UCHAR.0
	array<struct MetaPedAnimExpression>       expressions;                     // type:ARRAY.ATARRAY
	array<struct MetaPedAssetRestriction>     restrictions;                    // type:ARRAY.ATARRAY
};

struct MetaPedLiveEditAssetList
{
	bool                                   flushPed;                        // type:BOOL.0
	bool                                   allowDuplicateCategories;        // type:BOOL.0
	array<struct MetaPedLiveEditAsset>     assets;                          // type:ARRAY.ATARRAY
};

struct MetaPedLiveEditResponse
{
	bool                             success;                         // type:BOOL.0
	bool                             allAssetsLoaded;                 // type:BOOL.0
	string                           message;                         // type:STRING.ATSTRING
	array<string>                    missingAssets;                   // type:ARRAY.ATARRAY
};

struct MetaPedLiveEditSpawnRequest
{
	string                           pedName;                         // type:STRING.ATNONFINALHASHSTRING
	string                           outfitName;                      // type:STRING.ATNONFINALHASHSTRING
	uint                             outfitIndex;                     // type:UINT.0
	bool                             spawnAsPlayer;                   // type:BOOL.0
};

struct MetaPedOutfit
{
	string                                    name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                    ethnicity;                       // type:STRING.ATNONFINALHASHSTRING
	string                                    slodDwd;                         // type:STRING.ATNONFINALHASHSTRING
	string                                    voiceGroup;                      // type:STRING.ATNONFINALHASHSTRING
	string                                    damagePack;                      // type:STRING.ATNONFINALHASHSTRING
	string                                    goreType;                        // type:STRING.ATNONFINALHASHSTRING
	float                                     scale;                           // type:FLOAT.0
	float                                     cutsceneScale;                   // type:FLOAT.0
	float                                     scaleRandomOffset;               // type:FLOAT.0
	float                                     coatShine;                       // type:FLOAT.0
	float                                     coatShineBase;                   // type:FLOAT.0
	float                                     coatShineMin;                    // type:FLOAT.0
	float                                     coatShineMax;                    // type:FLOAT.0
	float                                     eyeRedness;                      // type:FLOAT.0
	enum eAnimBoneTag                         removeLimbBone;                  // type:ENUM.16BIT
	bool                                      fullOutfit;                      // type:BOOL.0
	bool                                      priorityLoad;                    // type:BOOL.0
	bool                                      preStream;                       // type:BOOL.0
	array<struct MetaPedDefAsset>             assets;                          // type:ARRAY.ATARRAY
	array<struct MetaPedDefExplicitAsset>     explicitAssets;                  // type:ARRAY.ATARRAY
	array<struct MetaPedExpression>           expressions;                     // type:ARRAY.ATARRAY
	array<struct MetaPedSubOutfit>            subOutfits;                      // type:ARRAY.ATARRAY
	array<struct MetaPedOutfitVariation>      variations;                      // type:ARRAY.ATARRAY
	array<string>                             tags;                            // type:ARRAY.ATARRAY
	array<struct _0xD6AAF11E>                 _0x645032CC;                     // type:ARRAY.ATARRAY
};

struct MetaPedOutfitHandle
{
	ushort                           outfitIndex;                     // type:USHORT.0
	ushort                           subOutfitIndex;                  // type:USHORT.0
	ushort                           variationIndex;                  // type:USHORT.0
	enum eOutfitType                 outfitType;                      // type:ENUM.8BIT
};

struct MetaPedOutfitVariation
{
	array<struct _0xBB99C743>           assets;                          // type:ARRAY.ATARRAY
	array<struct MetaPedExpression>     expressions;                     // type:ARRAY.ATARRAY
};

struct MetaPedOverlayData
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            consoleScale;                    // type:FLOAT.0
	float                            uCoord0;                         // type:FLOAT.0
	float                            vCoord0;                         // type:FLOAT.0
	float                            uCoord1;                         // type:FLOAT.0
	float                            vCoord1;                         // type:FLOAT.0
	uchar                            numItemsX;                       // type:UCHAR.0
	uchar                            numItemsY;                       // type:UCHAR.0
};

struct MetaPedQualityProbability
{
	float                            lowProbability;                  // type:FLOAT.0
	float                            medProbability;                  // type:FLOAT.0
	float                            highProbability;                 // type:FLOAT.0
};

struct MetaPedSettings
{
	struct MetaPedCategoryTags                        categoryTags;                    // type:STRUCT.STRUCTURE
	struct MetaPedExpressions                         expressions;                     // type:STRUCT.STRUCTURE
	struct MetaPedGoreData                            gore;                            // type:STRUCT.STRUCTURE
	struct MetaPedTintData                            tints;                           // type:STRUCT.STRUCTURE
	struct MetaPedLights                              lights;                          // type:STRUCT.STRUCTURE
	struct MetaPedAssetBundleData                     assetBundles;                    // type:STRUCT.STRUCTURE
	array<string>                                     weaponAttachTags;                // type:ARRAY.ATARRAY
	array<string>                                     persistentAssetTags;             // type:ARRAY.ATARRAY
	array<array<string>, 22>                          customTagTypes;                  // type:ARRAY.MEMBER
	array<struct MetaPedOverlayData>                  overlayData;                     // type:ARRAY.ATARRAY
	array<struct GlobalOutfits, 4>                    globalOutfitData;                // type:ARRAY.MEMBER
	map<string, struct MetaPedCategoryAsset>          propConversions;                 // type:MAP.ATBINARYMAP
	map<string, struct MetaPedSkinToPropDataSet>      skinTextureSets;                 // type:MAP.ATBINARYMAP
	map<string, struct MetaPedFirstPersonData>        firstPersonAlts;                 // type:MAP.ATBINARYMAP
	map<string, string>                               anms;                            // type:MAP.ATBINARYMAP
	map<string, struct MetaPedAnmData>                anmMappings;                     // type:MAP.ATBINARYMAP
	map<string, string>                               componentDecals;                 // type:MAP.ATBINARYMAP
	map<string, string>                               discoverableNames;               // type:MAP.ATBINARYMAP
	map<string, string>                               undiscoveredNames;               // type:MAP.ATBINARYMAP
	map<string, string>                               _0x30E8968D;                     // type:MAP.ATBINARYMAP
	map<string, string>                               _0x0D283282;                     // type:MAP.ATBINARYMAP
	map<string, uint>                                 _0x2481E04F;                     // type:MAP.ATBINARYMAP
	map<string, string>                               _0x1165357B;                     // type:MAP.ATBINARYMAP
	map<string, struct MetaPedQualityProbability>     qualityProbability;              // type:MAP.ATBINARYMAP
	map<uint, string>                                 _0x30BED903;                     // type:MAP.ATBINARYMAP
	map<string, uint>                                 _0x78476477;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x747EB8EF>                   _0x8EBDC741;                     // type:MAP.ATBINARYMAP
};

struct MetaPedShopItem
{
	string                                    label;                           // type:STRING.CONST_STRING
	string                                    name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                    templateName;                    // type:STRING.ATNONFINALHASHSTRING
	string                                    shopCategory;                    // type:STRING.ATNONFINALHASHSTRING
	string                                    swatchTexture;                   // type:STRING.ATNONFINALHASHSTRING
	string                                    swatchPalette;                   // type:STRING.ATNONFINALHASHSTRING
	uchar                                     swatchTint0;                     // type:UCHAR.0
	uchar                                     swatchTint1;                     // type:UCHAR.0
	uchar                                     swatchTint2;                     // type:UCHAR.0
	array<struct MetaPedDefExplicitAsset>     assets;                          // type:ARRAY.ATARRAY
	array<struct _0xBF657BEB>                 states;                          // type:ARRAY.ATARRAY
	array<struct _0x1188BEB4>                 onAddTriggers;                   // type:ARRAY.ATARRAY
	array<struct _0x1188BEB4>                 onRemoveTriggers;                // type:ARRAY.ATARRAY
};

struct MetaPedShopItemList
{
	array<struct MetaPedShopItem>     shopItemMaleSp;                  // type:ARRAY.ATARRAY
	array<struct MetaPedShopItem>     shopItemMaleMp;                  // type:ARRAY.ATARRAY
	array<struct MetaPedShopItem>     shopItemFemaleSp;                // type:ARRAY.ATARRAY
	array<struct MetaPedShopItem>     shopItemFemaleMp;                // type:ARRAY.ATARRAY
	array<struct MetaPedShopItem>     shopItemAnimalSp;                // type:ARRAY.ATARRAY
	array<struct MetaPedShopItem>     shopItemAnimalMp;                // type:ARRAY.ATARRAY
};

struct MetaPedSkinToPropData
{
	short                            tint0;                           // type:SHORT.0
	short                            tint1;                           // type:SHORT.0
	short                            tint2;                           // type:SHORT.0
	short                            tintOverrideIndex;               // type:SHORT.0
	string                           pedoutfit;                       // type:STRING.ATNONFINALHASHSTRING
	string                           propalbedo;                      // type:STRING.ATNONFINALHASHSTRING
	string                           propnormal;                      // type:STRING.ATNONFINALHASHSTRING
	string                           propmaterial;                    // type:STRING.ATNONFINALHASHSTRING
};

struct MetaPedSkinToPropDataSet
{
	array<struct MetaPedSkinToPropData>     textures;                        // type:ARRAY.ATARRAY
};

struct MetaPedSubOutfit
{
	string                                    name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                                      fullOutfit;                      // type:BOOL.0
	array<struct MetaPedDefAsset>             assets;                          // type:ARRAY.ATARRAY
	array<struct MetaPedDefExplicitAsset>     explicitAssets;                  // type:ARRAY.ATARRAY
};

struct MetaPedTintData
{
	array<string>                     palettes;                        // type:ARRAY.ATARRAY
	array<struct TintPaletteSlod>     paletteSlods;                    // type:ARRAY.ATARRAY
};

struct MetaPedTintPreset
{
	string                           guid;                            // type:STRING.ATNONFINALHASHSTRING
	string                           palette;                         // type:STRING.ATNONFINALHASHSTRING
	uchar                            tint0;                           // type:UCHAR.0
	uchar                            tint1;                           // type:UCHAR.0
	uchar                            tint2;                           // type:UCHAR.0
	array<string>                    filterTags;                      // type:ARRAY.ATARRAY
};

struct MinigameChatMessage
{
	int                               fromSeat;                        // type:INT.0
	enum MinigameChatMessageStyle     messageStyle;                    // type:ENUM.32BIT
	int                               messageId;                       // type:INT.0
};

struct MinigamePlayerId
{
	int                              acctId;                          // type:INT.0
	int                              platId;                          // type:INT.0
};

struct MinigameSettings
{
	int                              discrim;                         // type:INT.0
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	string                           chipItemId;                      // type:STRING.ATNONFINALHASHSTRING
};

struct MinigameTableId
{
	string                           id;                              // type:STRING.ATSTRING
};

struct MissionCreatorAssetData
{
	int                              memory;                          // type:INT.0
};

struct MissionMetadataCollection
{
	array<struct _0xB76F0E85>        dataArray;                       // type:ARRAY.ATARRAY
};

struct MountManifest
{
	array<struct MountManifestData>       Mounts;                          // type:ARRAY.ATARRAY
	array<struct OnDemandContentData>     OnDemandContent;                 // type:ARRAY.ATARRAY
	uint                                  TargetRpfCacheSigHash;           // type:UINT.0
	uint                                  RpfCacheSigHash;                 // type:UINT.0
	string                                RpfCacheFilePath;                // type:STRING.ATSTRING
};

struct MountManifestData
{
	string                           Path;                            // type:STRING.ATSTRING
	string                           MountPoint;                      // type:STRING.ATSTRING
	string                           ContentTag;                      // type:STRING.ATSTRING
	int                              ChunkId;                         // type:INT.0
	bool                             IsCrcMount;                      // type:BOOL.0
	bool                             IsOnDemand;                      // type:BOOL.0
	bool                             IsHdOnly;                        // type:BOOL.0
};

struct MovieMeshInfo
{
	string                           ModelName;                       // type:STRING.CONST_STRING
	string                           TextureName;                     // type:STRING.CONST_STRING
	vec3                             TransformA;                      // type:VECTOR3.0
	vec3                             TransformB;                      // type:VECTOR3.0
	vec3                             TransformC;                      // type:VECTOR3.0
	vec3                             TransformD;                      // type:VECTOR3.0
};

struct MovieMeshInfoList
{
	array<struct MovieMeshInfo>      Data;                            // type:ARRAY.ATARRAY
	array<vec4>                      BoundingSpheres;                 // type:ARRAY.ATARRAY
	string                           InteriorName;                    // type:STRING.CONST_STRING
	vec3                             InteriorPosition;                // type:VECTOR3.0
	vec3                             InteriorMaxPosition;             // type:VECTOR3.0
	bool                             UseInterior;                     // type:BOOL.0
};

struct OccludeModel
{
	vec3V                            bmin;                            // type:VEC3V.0
	vec3V                            bmax;                            // type:VEC3V.0
	uint                             dataSize;                        // type:UINT.0
	array<uchar, 32>                 verts;                           // type:ARRAY.POINTER_WITH_COUNT
	ushort                           numVertsInBytes;                 // type:USHORT.0
	ushort                           numTris;                         // type:USHORT.0
	uint                             flags;                           // type:UINT.0
};

struct OnDemandContentData
{
	string                           ContentTag;                      // type:STRING.ATSTRING
	string                           ContentNameLabel;                // type:STRING.ATNONFINALHASHSTRING
	string                           ContentDescriptorLabel;          // type:STRING.ATNONFINALHASHSTRING
};

struct OptionalBlendout
{
	float                            blendout;                        // type:FLOAT.0
};

struct OptionalBlendoutSet
{
	string                           blendOutSetId;                   // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x3978B2CF>         flags;                           // type:BITSET.8BIT
};

struct OptionalMotionState
{
	enum _0x92A659FE                 idleState;                       // type:ENUM.32BIT
	enum _0x92A659FE                 walkState;                       // type:ENUM.32BIT
	enum _0x92A659FE                 runState;                        // type:ENUM.32BIT
};

struct OptionalScenario
{
	string                           scenarioId;                      // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x33B3B4E8>         flags;                           // type:BITSET.8BIT
};

struct PauseMenuPostFXManager
{
	float                            FadeInCheckTreshold;             // type:FLOAT.0
	float                            FadeOutCheckTreshold;            // type:FLOAT.0
};

struct PedEnvAccumulationManager
{
	struct _0xC153E0EB               SnowAccumulationKeyFrames;       // type:STRUCT.STRUCTURE
	float                            fMinSnowMeltTemp;                // type:FLOAT.0
	float                            fMaxSnowMeltTemp;                // type:FLOAT.0
	float                            fMaxSnowMeltRate;                // type:FLOAT.0
	float                            fMeltEvaporationRate;            // type:FLOAT.0
};

struct PedShotManager
{
	array<struct _0x3F7381EC>        scenePresets;                    // type:ARRAY.ATARRAY
	array<struct _0xBA567DB9, 4>     lightRigs;                       // type:ARRAY.ATFIXEDARRAY
	array<struct _0xE57D3394, 4>     cameras;                         // type:ARRAY.ATFIXEDARRAY
	struct _0x6DC458FB               postFXData;                      // type:STRUCT.STRUCTURE
};

struct PedVariationSaveData
{
	array<string>                       drawables;                       // type:ARRAY.ATARRAY
	array<string>                       albedo;                          // type:ARRAY.ATARRAY
	array<string>                       normal;                          // type:ARRAY.ATARRAY
	array<string>                       material;                        // type:ARRAY.ATARRAY
	array<uint64>                       tints;                           // type:ARRAY.ATARRAY
	array<bool>                         hidden;                          // type:ARRAY.ATARRAY
	array<struct MetaPedExpression>     expressions;                     // type:ARRAY.ATARRAY
	struct MetaPedOutfitHandle          outfitHandle;                    // type:STRUCT.STRUCTURE
	enum eMetaPedType                   type;                            // type:ENUM.32BIT
};

struct PedVariationSavedAssets
{
	array<struct MetaPedDefExplicitAsset>     explicitAssets;                  // type:ARRAY.ATARRAY
	array<bool>                               hidden;                          // type:ARRAY.ATARRAY
	array<struct MetaPedExpression>           expressions;                     // type:ARRAY.ATARRAY
	struct MetaPedOutfitHandle                outfitHandle;                    // type:STRUCT.STRUCTURE
	enum eMetaPedType                         type;                            // type:ENUM.32BIT
};

struct PinchTouchGesture : _0x5589CE6B
{
	enum _0xD47EB738                 VisibleProperty;                 // type:ENUM.32BIT
};

struct PivotPositionTables
{
	array<struct _0xEB9EA3E3>        tables;                          // type:ARRAY.ATARRAY
};

struct PlateProbabilities
{
	array<struct _0x37F22DD2>        Probabilities;                   // type:ARRAY.ATARRAY
};

struct PlayerHorseWritheDurationOverrides
{
	float                            WritheDurationBondLevel0;        // type:FLOAT.0
	float                            WritheDurationBondLevel1;        // type:FLOAT.0
	float                            WritheDurationBondLevel2;        // type:FLOAT.0
	float                            WritheDurationBondLevel3;        // type:FLOAT.0
	float                            WritheDurationBondLevel4;        // type:FLOAT.0
	float                            WritheDurationBondLevel0_MP;     // type:FLOAT.0
	float                            WritheDurationBondLevel1_MP;     // type:FLOAT.0
	float                            WritheDurationBondLevel2_MP;     // type:FLOAT.0
	float                            WritheDurationBondLevel3_MP;     // type:FLOAT.0
	float                            WritheDurationBondLevel4_MP;     // type:FLOAT.0
};

struct PlayerNameValueConversion : _0xAB76836B
{
};

struct PokerBestHand : Hand
{
	enum PokerHandRank               rank;                            // type:ENUM.32BIT
};

struct PokerGameData
{
	int                                      _0x260CE939;                     // type:INT.0
	enum PokerGameDataUpdateReason           reason;                          // type:ENUM.32BIT
	enum PokerRoundType                      roundType;                       // type:ENUM.32BIT
	int                                      buttonSeat;                      // type:INT.0
	int                                      smallBlindSeat;                  // type:INT.0
	int                                      bigBlindSeat;                    // type:INT.0
	int                                      currSeat;                        // type:INT.0
	int                                      roundCallAmt;                    // type:INT.0
	int                                      roundMinRaiseAmt;                // type:INT.0
	int                                      smallBlindAmt;                   // type:INT.0
	int                                      bigBlindAmt;                     // type:INT.0
	int                                      gameStartPosix;                  // type:INT.0
	int                                      gameClearPosix;                  // type:INT.0
	int                                      roundStartPosix;                 // type:INT.0
	int                                      turnEndPosix;                    // type:INT.0
	int                                      iNumPots;                        // type:INT.0
	struct Hand                              communityCards;                  // type:STRUCT.STRUCTURE
	array<struct PokerPot, 6>                pots;                            // type:ARRAY.ATFIXEDARRAY
	array<struct PokerPlayerGameData, 6>     playerData;                      // type:ARRAY.ATFIXEDARRAY
};

struct PokerGameSettings : MinigameSettings
{
	enum PokerGameType               gameType;                        // type:ENUM.32BIT
	int                              gameStartSec;                    // type:INT.0
	int                              gameClearBaseSec;                // type:INT.0
	int                              _0xC85A69C0;                     // type:INT.0
	int                              roundStartBaseSec;               // type:INT.0
	int                              _0x264E0B01;                     // type:INT.0
	int                              buyInTimeoutSec;                 // type:INT.0
	int                              turnTimeoutSec;                  // type:INT.0
	float                            rakePercentage;                  // type:FLOAT.0
	int                              buyInMin;                        // type:INT.0
	int                              buyInMax;                        // type:INT.0
	int                              smallBlind;                      // type:INT.0
	int                              bigBlind;                        // type:INT.0
	int                              maxChipsInPot;                   // type:INT.0
	int                              incrBlindHands;                  // type:INT.0
	int                              iNumIncreaseBlindAmounts;        // type:INT.0
	array<int, 20>                   incrBlindAmts;                   // type:ARRAY.ATFIXEDARRAY
};

struct PokerPlayerGameData
{
	int                              seat;                            // type:INT.0
	int                              buyInEndPosix;                   // type:INT.0
	int                              bank;                            // type:INT.0
	int                              chipsInPot;                      // type:INT.0
	int                              currBet;                         // type:INT.0
	bool                             canRaise;                        // type:BOOL.0
	enum PokerHoleCardsState         holeCardsState;                  // type:ENUM.32BIT
	struct Hand                      holeCards;                       // type:STRUCT.STRUCTURE
	struct PokerBestHand             pokerHand;                       // type:STRUCT.STRUCTURE
};

struct PokerPot
{
	int                              amount;                          // type:INT.0
	int                              rake;                            // type:INT.0
	int                              iNumContributingSeats;           // type:INT.0
	int                              iNumWinningSeats;                // type:INT.0
	array<int, 6>                    contribSeats;                    // type:ARRAY.ATFIXEDARRAY
	array<int, 6>                    winningSeats;                    // type:ARRAY.ATFIXEDARRAY
};

struct PoseBreakoutArchetypes
{
	map<string, struct _0x0D8E3DDB>     mArchetypes;                     // type:MAP.ATBINARYMAP
};

struct PromptInternal__PromptTunables
{
	enum _0x0100F80E                    AdvancedModePressedTimedEasing;  // type:ENUM.32BIT
	enum _0x0100F80E                    AdvancedModeHoldEasing;          // type:ENUM.32BIT
	enum _0x0100F80E                    AdvancedModeHoldAutoFillEasing;  // type:ENUM.32BIT
	enum _0x0100F80E                    AdvancedModeMashEasing;          // type:ENUM.32BIT
	enum _0x0100F80E                    AdvancedModeMashWithResistanceEasing; // type:ENUM.32BIT
	enum _0x0100F80E                    AdvancedModeMashAutoFillEasing;  // type:ENUM.32BIT
	uint                                StandardResolveTimeLimit;        // type:UINT.0
	float                               MashPressGrowthPerSecond;        // type:FLOAT.0
	float                               MashWarningAmount;               // type:FLOAT.0
	uint                                UrgentPulseDuration;             // type:UINT.0
	uint                                UrgentPulseCount;                // type:UINT.0
	uint                                UrgentPulseWaitDuration;         // type:UINT.0
	uint                                FadeInDuration;                  // type:UINT.0
	uint                                FadeOutDuration;                 // type:UINT.0
	enum _0x0100F80E                    FadeInEasing;                    // type:ENUM.32BIT
	enum _0x0100F80E                    FadeOutUnselectedEasing;         // type:ENUM.32BIT
	enum _0x0100F80E                    FadeOutSelectedEasing;           // type:ENUM.32BIT
	uint                                FadeCacheKeepFrameCount;         // type:UINT.0
	float                               MaxHoldDecayDuration;            // type:FLOAT.0
	uint                                BeatPulseDuration;               // type:UINT.0
	bool                                BeatHighlightRedOnMissPress;     // type:BOOL.0
	uint                                MashAccessibilityLowNumPresses;  // type:UINT.0
	uint                                MashAccessibilityMediumNumPresses; // type:UINT.0
	uint                                MashAccessibilityHighNumPresses; // type:UINT.0
	float                               MashAccessibilityPressPerSec;    // type:FLOAT.0
	bool                                MashAccessibilityFlashHoldMode;  // type:BOOL.0
	bool                                MashAccessibilityShowGutterForHoldMode; // type:BOOL.0
	bool                                TargetPromptAlwaysRedWhenHigh;   // type:BOOL.0
	bool                                TargetPromptRedWhenDecayingTooLow; // type:BOOL.0
	uint                                PagedGroupsRegisterDelayMin;     // type:UINT.0
	uint                                PagedGroupsRegisterDelayMax;     // type:UINT.0
	bool                                UseFallbackGroupWhenPageDelayActive; // type:BOOL.0
	bool                                PageConflictingGroupsByDefault;  // type:BOOL.0
	map<string, struct _0xAB1832C6>     HoldModeSettings;                // type:MAP.ATMAP
	struct _0xAB1832C6                  HoldDefaultSettings;             // type:STRUCT.STRUCTURE
};

struct RegionTintMap
{
	array<struct _0x962E63F6>        RegionTintMaps;                  // type:ARRAY.ATARRAY
};

struct RelGroupParser
{
	array<struct _0xEA953A27>        RelationshipGroups;              // type:ARRAY.ATARRAY
};

struct RequirementGroups
{
	int                                count;                           // type:INT.0
	array<struct ItemRequirements>     requirements;                    // type:ARRAY.ATARRAY
};

struct RumbleProfileList
{
	array<struct _0x9C651567>        rumbleProfiles;                  // type:ARRAY.ATARRAY
};

struct SCombatStyles
{
	array<struct _0x1B04D0F4>        Styles;                          // type:ARRAY.ATARRAY
	array<struct _0x2C1BBB1F>        Mods;                            // type:ARRAY.ATARRAY
	array<struct _0x343826DC>        AimLogicControllers;             // type:ARRAY.ATARRAY
	array<struct _0xBD9AB8DE>        SpeedControllers;                // type:ARRAY.ATARRAY
};

struct SContentUnlocks
{
	array<string>                    listOfUnlocks;                   // type:ARRAY.ATARRAY
};

struct SDialogueCharacters
{
	map<string, struct _0x051F2D1A>     characterInfo;                   // type:MAP.ATBINARYMAP
};

struct SEventContextDefinition
{
	enum eEventType                  event;                           // type:ENUM.32BIT
	enum _0x85792E04                 motivationImpact;                // type:ENUM.32BIT
	float                            radiusToSetEntityOnMyMind;       // type:FLOAT.0
	enum _0x4D40591B                 entityOnMyMindReason;            // type:ENUM.32BIT
	enum _0x44D77E81                 threatLevel;                     // type:ENUM.32BIT
	bool                             targetEntityIsPotentialThreat;   // type:BOOL.0
	bool                             applyMotivationImpact;           // type:BOOL.0
	bool                             applyMotivationImpactToTargetPed; // type:BOOL.0
	bool                             crime;                           // type:BOOL.0
	bool                             suspicious;                      // type:BOOL.0
	string                           lookIntensityLimits;             // type:STRING.ATNONFINALHASHSTRING
};

struct SExtraFolderMount
{
	struct _0x39D72BDA               devicePathResolver;              // type:STRUCT.STRUCTURE
	string                           path;                            // type:STRING.ATSTRING
	string                           mountAs;                         // type:STRING.ATSTRING
};

struct SExtraFolderMountData
{
	array<struct SExtraFolderMount>     FolderMounts;                    // type:ARRAY.ATARRAY
};

struct SExtraTitleUpdateData
{
	array<struct SExtraTitleUpdateMount>     Mounts;                          // type:ARRAY.ATARRAY
};

struct SExtraTitleUpdateMount
{
	string                           dlcName;                         // type:STRING.ATNONFINALHASHSTRING
	array<struct SMountMapping>      mappings;                        // type:ARRAY.ATARRAY
};

struct SF_String : _0xDB03A162
{
};

struct SFleeStyle
{
	array<struct _0xB539C562>              Transitions;                     // type:ARRAY.ATARRAY
	string                                 EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	float                                  SpeedNear;                       // type:FLOAT.0
	float                                  SpeedBase;                       // type:FLOAT.0
	float                                  SpeedFar;                        // type:FLOAT.0
	float                                  DistNear;                        // type:FLOAT.0
	float                                  DistBaseNear;                    // type:FLOAT.0
	float                                  DistBaseFar;                     // type:FLOAT.0
	float                                  DistFar;                         // type:FLOAT.0
	float                                  SpeedVariation;                  // type:FLOAT.0
	float                                  DistBeforeAllowingNearSpeed;     // type:FLOAT.0
	struct _0x0BB7937C                     IdealGait;                       // type:STRUCT.STRUCTURE
	float                                  TireDistMin;                     // type:FLOAT.0
	float                                  TireDistMax;                     // type:FLOAT.0
	float                                  TireFalloff;                     // type:FLOAT.0
	float                                  TireSpeed;                       // type:FLOAT.0
	float                                  MinWitnessSpeedNear;             // type:FLOAT.0
	float                                  MinWitnessSpeedFar;              // type:FLOAT.0
	float                                  BendAngle;                       // type:FLOAT.0
	string                                 StateCowerEmotionalPreset;       // type:STRING.ATNONFINALHASHSTRING
	string                                 StateCowerEmotionalPresetIntense; // type:STRING.ATNONFINALHASHSTRING
	struct SFleeStyle__RiderSpeeds         RiderSpeedsData;                 // type:STRUCT.POINTER
	struct SFleeStyle__Interior            Interior;                        // type:STRUCT.POINTER
	struct SFleeStyle__Dialogue            Dialogue;                        // type:STRUCT.POINTER
	struct SFleeStyle__Props               Props;                           // type:STRUCT.POINTER
	struct SFleeStyle__Vehicle             Vehicle;                         // type:STRUCT.POINTER
	struct SFleeStyle__Penned              Penned;                          // type:STRUCT.POINTER
	struct SFleeStyle__Bend                Bend;                            // type:STRUCT.POINTER
	struct SFleeStyle__Navigation          Navigation;                      // type:STRUCT.POINTER
	struct SFleeStyle__SetSimpleMemory     SetMemory;                       // type:STRUCT.POINTER
	bitset<enum _0x8E414F18>               Flags;                           // type:BITSET.32BIT
};

struct SFleeStyleManager
{
	array<struct _0x6D27D36F>                    Sets;                            // type:ARRAY.ATARRAY
	map<enum eEventType, struct _0xC9885F5A>     EventResponses;                  // type:MAP.ATMAP
};

struct SFleeStyle__Bend
{
	array<struct _0x1064E799>        Data;                            // type:ARRAY.ATARRAY
};

struct SFleeStyle__Dialogue
{
	string                           Start;                           // type:STRING.CONST_STRING
	string                           Repeat;                          // type:STRING.CONST_STRING
	string                           Chased;                          // type:STRING.CONST_STRING
	string                           LeaveHideSpotUnsafe;             // type:STRING.CONST_STRING
	string                           LeaveHideSpotBullet;             // type:STRING.CONST_STRING
	string                           LeaveHideSpotAngle;              // type:STRING.CONST_STRING
	float                            InitialDelayMaxTime;             // type:FLOAT.0
	float                            MinRepeatTime;                   // type:FLOAT.0
	float                            MaxRepeatTime;                   // type:FLOAT.0
	float                            ConcurrencyHandleTime;           // type:FLOAT.0
	uint                             MaxConcurrentPerZone;            // type:UINT.0
	uint                             MaxConcurrentTotal;              // type:UINT.0
};

struct SFleeStyle__Interior
{
	string                           EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	string                           EmotionalPresetThreatOutside;    // type:STRING.ATNONFINALHASHSTRING
	float                            BaseSpeedMin;                    // type:FLOAT.0
	float                            BaseSpeedMax;                    // type:FLOAT.0
	float                            ExitSpeedMin;                    // type:FLOAT.0
	float                            ExitSpeedMax;                    // type:FLOAT.0
	float                            ExitSpeedDistance;               // type:FLOAT.0
	enum _0x94484AAC                 Gait;                            // type:ENUM.32BIT
	float                            QuitForNonPlayerExteriorTargetMin; // type:FLOAT.0
	float                            QuitForNonPlayerExteriorTargetMax; // type:FLOAT.0
};

struct SFleeStyle__Navigation
{
	float                            PenaltyMultiplier_Water;         // type:FLOAT.0
	float                            MainInfluenceSphereInnerWeight;  // type:FLOAT.0
	float                            MainInfluenceSphereOuterWeight;  // type:FLOAT.0
	float                            InfluenceSphereInnerWeight;      // type:FLOAT.0
	float                            InfluenceSphereOuterWeight;      // type:FLOAT.0
};

struct SFleeStyle__Penned
{
	struct CAISpeed                  Speed;                           // type:STRUCT.STRUCTURE
};

struct SFleeStyle__Props
{
	float                            SmallDropLocoTimeMin;            // type:FLOAT.0
	float                            SmallDropLocoTimeMax;            // type:FLOAT.0
	float                            BigDropLocoTimeMin;              // type:FLOAT.0
	float                            BigDropLocoTimeMax;              // type:FLOAT.0
};

struct SFleeStyle__RiderSpeeds
{
	float                            X0_YVal;                         // type:FLOAT.0
	float                            XMax_YVal;                       // type:FLOAT.0
	float                            XMax;                            // type:FLOAT.0
	float                            YDeltaMax_Dist;                  // type:FLOAT.0
	float                            YDeltaMax_Speed;                 // type:FLOAT.0
};

struct SFleeStyle__SetSimpleMemory
{
	enum _0x8B2BD05B                 Type;                            // type:ENUM.32BIT
};

struct SFleeStyle__Vehicle
{
	struct _0x08393FFC               Train;                           // type:STRUCT.STRUCTURE
	struct _0x08393FFC               Trolley;                         // type:STRUCT.STRUCTURE
	struct _0x08393FFC               Boat;                            // type:STRUCT.STRUCTURE
	struct _0x08393FFC               Other;                           // type:STRUCT.STRUCTURE
	float                            AllowShortcutsDistance;          // type:FLOAT.0
	bool                             UseRacingLines;                  // type:BOOL.0
};

struct SInteriorOrderData
{
	int                              startFrom;                       // type:INT.0
	uint                             changeSet;                       // type:UINT.0
	array<string>                    proxies;                         // type:ARRAY.ATARRAY
};

struct SMandatoryPacksData
{
	array<struct _0x6A8C6DE0>        Packs;                           // type:ARRAY.ATARRAY
};

struct SMapContext
{
	float                            FootFastMovementZoom;            // type:FLOAT.0
	float                            FootSlowMovementZoom;            // type:FLOAT.0
	float                            RideFastMovementZoom;            // type:FLOAT.0
	float                            RideSlowMovementZoom;            // type:FLOAT.0
	float                            InteriorZoom;                    // type:FLOAT.0
	float                            WantedZoom;                      // type:FLOAT.0
};

struct SMapLegendFilters
{
	array<string>                    Filters;                         // type:ARRAY.ATARRAY
};

struct SMapLocation
{
	string                           MiniName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           PauseName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           MultiName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct SMapZoom
{
	float                            Zoom;                            // type:FLOAT.0
};

struct SMapZoomData
{
	map<string, struct SMapZoom>        FixedZooms;                      // type:MAP.ATBINARYMAP
	map<string, struct SMapContext>     ZoomContexts;                    // type:MAP.ATBINARYMAP
	map<string, struct SMapZoom>        Multipliers;                     // type:MAP.ATBINARYMAP
	float                               FootSlowFastThreshold;           // type:FLOAT.0
	float                               RideSlowFastThreshold;           // type:FLOAT.0
};

struct SMountMapping
{
	enum _0xD5108E28                 DeviceType;                      // type:ENUM.32BIT
	string                           PathToMap;                       // type:STRING.ATSTRING
};

struct SRadarData
{
	float                            DefaultZoom;                     // type:FLOAT.0
	float                            BlipsScale;                      // type:FLOAT.0
	bool                             TilesEnabled;                    // type:BOOL.0
	bool                             GPSArrowMode;                    // type:BOOL.0
	enum eRadarMode                  RevealedRadarMode;               // type:ENUM.32BIT
};

struct SRegion
{
	vec2V                            vWorldPos;                       // type:VEC2V.0
	string                           Linkage;                         // type:STRING.ATNONFINALHASHSTRING
};

struct SSetupData
{
	string                           deviceName;                      // type:STRING.ATSTRING
	string                           datFile;                         // type:STRING.ATSTRING
	string                           timeStamp;                       // type:STRING.ATSTRING
	string                           nameHash;                        // type:STRING.ATFINALHASHSTRING
	array<string>                    contentChangeSets;               // type:ARRAY.ATARRAY
	array<struct _0xE531D75E>        contentChangeSetGroups;          // type:ARRAY.ATARRAY
	string                           startupScript;                   // type:STRING.ATFINALHASHSTRING
	int                              scriptCallstackSize;             // type:INT.0
	enum _0xF17634D8                 type;                            // type:ENUM.32BIT
	int                              order;                           // type:INT.0
	int                              minorOrder;                      // type:INT.0
	string                           dependencyPackHash;              // type:STRING.ATNONFINALHASHSTRING
	string                           requiredVersion;                 // type:STRING.ATSTRING
	int                              subPackCount;                    // type:INT.0
};

struct STConvexHullVolumeContainer
{
	array<struct _0x01485814>        arHulls;                         // type:ARRAY.ATARRAY
};

struct SUnlockInfo
{
	string                           Hash;                            // type:STRING.ATNSHASHSTRING
	uchar                            _0x9E308B29;                     // type:UCHAR.0
};

struct SaveChallengeGoal
{
	struct SaveChallengeGoalParamBase     _0xB7440B46;                     // type:STRUCT.POINTER
	string                                name;                            // type:STRING.ATNSHASHSTRING
	uchar                                 _0xA2ED08CB;                     // type:UCHAR.0
	bool                                  isComplete;                      // type:BOOL.0
};

struct SaveChallengeGoalParamBase
{
};

struct SavegameInventoryItem
{
	int64                            Guid;                            // type:INT64.0
	int64                            ParentGuid;                      // type:INT64.0
	string                           ItemId;                          // type:STRING.ATNONFINALHASHSTRING
	uint                             SlotId;                          // type:UINT.0
	bool                             Equipped;                        // type:BOOL.0
	int64                            Quantity;                        // type:INT64.0
};

struct ScriptedGlowList
{
	array<struct _0x0078A0ED>        data;                            // type:ARRAY.ATARRAY
};

struct SeatInfo
{
	int                              seatIdx;                         // type:INT.0
	struct MinigamePlayerId          pid;                             // type:STRUCT.STRUCTURE
};

struct ShopInventoryItems
{
	string                              item;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct RequirementGroups>     requirementgroups;               // type:ARRAY.ATARRAY
};

struct Simple : _0x8EDEB4E3
{
	struct _0x13B76A25               State;                           // type:STRUCT.STRUCTURE
};

struct SlideData
{
	string                           TextureName;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             OnscreenDuration;                // type:UINT.0
	vec2V                            Position;                        // type:VEC2V.0
	float                            Radius;                          // type:FLOAT.0
	array<string>                    Tags;                            // type:ARRAY.ATARRAY
	string                           DistrictHash;                    // type:STRING.ATNONFINALHASHSTRING
};

struct SlideshowData
{
	array<struct SlideData>          Slides;                          // type:ARRAY.ATARRAY
	string                           TextureDataPath;                 // type:STRING.ATSTRING
};

struct SocialClubFeedAccountSettingsWrapperState : _0x8A0DC979
{
};

struct SocialClubFeedAggregatedNetworkResourcesCheckState : _0x8A0DC979
{
};

struct SocialClubFeedAlertResponseState : _0x8A0DC979
{
};

struct SocialClubFeedAlertStateDecorator : _0x5C1CB98F
{
};

struct SocialClubFeedFilterWrapperState : _0x8A0DC979
{
	enum eSocialClubFeedRegistrationTypes     FilterType;                      // type:ENUM.32BIT
};

struct SocialClubFeedPageRegistrationWrapperState : _0x8A0DC979
{
	enum eSocialClubFeedRegistrationTypes     FeedType;                        // type:ENUM.32BIT
};

struct SocialClubFeedPendingStateDecorator : _0x5C1CB98F
{
	bool                             Activator;                       // type:BOOL.0
};

struct SocialClubFeedRegistrationWrapperState : _0x8A0DC979
{
};

struct SocialClubFeedSettingsWrapperState : _0x8A0DC979
{
};

struct SoftBoundTuningList
{
	array<struct _0xA381BF68>        softBoundTunings;                // type:ARRAY.ATARRAY
};

struct SpinnerTypeBoolDictionaryConversion : _0xAB76836B
{
	bool                             ApplyDefault;                    // type:BOOL.0
	bool                             Default;                         // type:BOOL.0
	map<enum _0x4E6D3643, bool>      Dictionary;                      // type:MAP.ATMAP
};

struct SpinnerTypeHashStringDictionaryConversion : _0xAB76836B
{
	bool                              ApplyDefault;                    // type:BOOL.0
	string                            Default;                         // type:STRING.ATNONFINALHASHSTRING
	map<enum _0x4E6D3643, string>     Dictionary;                      // type:MAP.ATMAP
};

struct StatId
{
	string                           BaseId;                          // type:STRING.ATNSHASHSTRING
	string                           PermutationId;                   // type:STRING.ATNSHASHSTRING
};

struct StateChallengeAwardStrand : _0x8A0DC979
{
	string                           Strand;                          // type:STRING.ATNSHASHSTRING
};

struct StateChallengeAwardStrandSelection : _0x8A0DC979
{
	string                           _0xE9619C33;                     // type:STRING.ATNONFINALHASHSTRING
};

struct StateChallengeGoals : _0x8A0DC979
{
	string                           Challenge;                       // type:STRING.ATNSHASHSTRING
};

struct StateChallengeSelection : _0x8A0DC979
{
	string                           _0xE9619C33;                     // type:STRING.ATNONFINALHASHSTRING
};

struct StateCollectableCategorySelection : _0x8A0DC979
{
};

struct StateCollectableSubcategorySelection : StateCollectableCategorySelection
{
	string                           Category;                        // type:STRING.ATNONFINALHASHSTRING
};

struct StateCollectables : _0x8A0DC979
{
	string                           CategoryHash;                    // type:STRING.ATNONFINALHASHSTRING
	string                           SubcategoryHash;                 // type:STRING.ATNONFINALHASHSTRING
};

struct StateCompendiumCategory : _0x8A0DC979
{
	enum eCompendiumCategories       Category;                        // type:ENUM.32BIT
	uint                             PageSize;                        // type:UINT.0
};

struct StateCompendiumCategorySelection : _0x8A0DC979
{
};

struct StateEventHandlerScript : StateStreamedScriptBase
{
	string                           Channel;                         // type:STRING.ATNONFINALHASHSTRING
};

struct StateGoogleAnalyticsDecorator : _0x3BAEC979
{
};

struct StateMissionCategorySelection : _0x8A0DC979
{
};

struct StateMissions : _0x8A0DC979
{
	array<string>                    CategoryList;                    // type:ARRAY.ATARRAY
	string                           Title;                           // type:STRING.ATNONFINALHASHSTRING
};

struct StatePopulateLog : _0x8A0DC979
{
	bool                             PinnedEntriesOnly;               // type:BOOL.0
	bool                             IncludeLockedEntries;            // type:BOOL.0
};

struct StatePopulateLogDetails : _0x8A0DC979
{
};

struct StateProgressSelection : _0x8A0DC979
{
};

struct StateRegisterLog : _0x8A0DC979
{
};

struct StateSocialClubCloseSystemBrowser : _0x8A0DC979
{
};

struct StateSocialClubFeedCheckTuneables : _0x8A0DC979
{
	enum eSocialClubFeedTuneables     Tuneable;                        // type:ENUM.32BIT
};

struct StateSocialClubFeedNotificationDecorator : _0x5C1CB98F
{
};

struct StateSocialClubFeedUnderageConnectionCheck : _0x8A0DC979
{
};

struct StateSocialClubFeedViewLegals : StateSocialClubOpenBrowserWithoutAuthorization
{
	enum eSocialClubFeedSettingsLegalDocuments     Document;                        // type:ENUM.32BIT
};

struct StateSocialClubFeedViewPrivacy : _0x8A0DC979
{
};

struct StateSocialClubOpenBrowserWithoutAuthorization : _0x8A0DC979
{
};

struct StateSocialClubViewContentOnSocialClubOnline : StateSocialClubOpenBrowserWithoutAuthorization
{
};

struct StateSocialClubViewFeedOnSocialClubOnline : StateSocialClubOpenBrowserWithoutAuthorization
{
};

struct StateSocialClubViewWallOnSocialClubOnline : StateSocialClubOpenBrowserWithoutAuthorization
{
};

struct StateStreamedScriptBase : _0x8A0DC979
{
	string                           ScriptPath;                      // type:STRING.ATNONFINALHASHSTRING
	string                           StackSizeID;                     // type:STRING.ATHASHVALUE
};

struct StateStreamedScriptTransitory : StateStreamedScriptBase
{
};

struct StateSystemMessage : _0x8A0DC979
{
	array<enum eStateSystemMessage>     Messages;                        // type:ARRAY.ATARRAY
};

struct StateUIObjectSceneBase : _0x8A0DC979
{
};

struct StateUIObjectSceneBindingModule
{
	array<struct uiSceneBindingHelperBase>     OnEnterBindings;                 // type:ARRAY.ATARRAY
	array<struct uiSceneBindingHelperBase>     OnFocusedBindings;               // type:ARRAY.ATARRAY
};

struct StateUIObjectSceneCycledModule
{
	string                           CycledSceneId;                   // type:STRING.ATNONFINALHASHSTRING
};

struct StateUIObjectSceneHostBase : StateUIObjectSimpleSceneHostBase
{
	struct StateUIObjectSceneBindingModule        BindingModule;                   // type:STRUCT.SIMPLE_POINTER
	struct StateUIObjectSceneCycledModule         CycledModule;                    // type:STRUCT.SIMPLE_POINTER
	struct StateUIObjectSceneTransitionModule     TransitionModule;                // type:STRUCT.STRUCTURE
	string                                        EnterAnimation;                  // type:STRING.ATNONFINALHASHSTRING
	string                                        ExitAnimation;                   // type:STRING.ATNONFINALHASHSTRING
	string                                        FocusGainedAnimation;            // type:STRING.ATNONFINALHASHSTRING
	string                                        FocusLostAnimation;              // type:STRING.ATNONFINALHASHSTRING
	string                                        SuspendedAnimation;              // type:STRING.ATNONFINALHASHSTRING
	string                                        ResumedAnimation;                // type:STRING.ATNONFINALHASHSTRING
	bool                                          HideSceneOnFocusLost;            // type:BOOL.0
	bool                                          AlwaysFocus;                     // type:BOOL.0
	bool                                          GCOnRemove;                      // type:BOOL.0
	bool                                          RestartInputsOnFocusLoss;        // type:BOOL.0
	bool                                          RestartInputsOnRemove;           // type:BOOL.0
	bool                                          ResetSceneFocusOnFocusLost;      // type:BOOL.0
};

struct StateUIObjectSceneTransitionModule
{
	bool                             TryToHideOnSuspended;            // type:BOOL.0
	bool                             PlayFocusGainedAnimationOnEnter; // type:BOOL.0
	bool                             PlayFocusLostAnimationOnExit;    // type:BOOL.0
};

struct StateUIObjectSimpleSceneHostBase : StateUIObjectSceneBase
{
	string                           ParentPath;                      // type:STRING.CONST_STRING
	bool                             HideSceneOnAttachment;           // type:BOOL.0
};

struct StateUIObjectStreamedSceneHost : StateUIObjectSceneHostBase
{
	string                           SceneName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct StateUIObjectSynchronousSceneHost : StateUIObjectSceneHostBase
{
	string                           Path;                            // type:STRING.CONST_STRING
};

struct StateUnlocks : _0x8A0DC979
{
	array<string>                    CategoryList;                    // type:ARRAY.ATARRAY
};

struct StaticVegModifiers
{
	array<struct _0xD6D4AD86>        Spheres;                         // type:ARRAY.ATARRAY
};

struct StatsChallengeAchievement : StatsChallengeUnordered
{
};

struct StatsChallengeAwards : StatsChallengeUnordered
{
};

struct StatsChallengeBase
{
	string                           name;                            // type:STRING.ATNSHASHSTRING
	struct StatsChallengeUIInfo      uiInfo;                          // type:STRUCT.POINTER
};

struct StatsChallengeCalendar : StatsChallengeUnordered
{
	array<struct _0xEB67595A>        CalenderDates;                   // type:ARRAY.ATARRAY
};

struct StatsChallengeCompetitive : StatsChallengeUnordered
{
};

struct StatsChallengeDaily : _0xE7CBDA9F
{
};

struct StatsChallengeDailyRoleBountyHunter : _0xCF886463
{
};

struct StatsChallengeDailyRoleBountyHunterUIInfo : _0x9B03B63C
{
};

struct StatsChallengeDailyRoleCollector : _0xCF886463
{
};

struct StatsChallengeDailyRoleCollectorUIInfo : _0x9B03B63C
{
};

struct StatsChallengeDailyRoleMoonshiner : _0xCF886463
{
};

struct StatsChallengeDailyRoleMoonshinerUIInfo : _0x9B03B63C
{
};

struct StatsChallengeDailyRoleTrader : _0xCF886463
{
};

struct StatsChallengeDailyRoleTraderUIInfo : _0x9B03B63C
{
};

struct StatsChallengeDailySaleswomanLocations : _0xE7CBDA9F
{
};

struct StatsChallengeDailyUIInfo : _0xB74C7BC6
{
	struct StatsChallengeStreakUIInfo     StreakData;                      // type:STRUCT.POINTER
	struct _0x48EA7C70                    LogInfo;                         // type:STRUCT.STRUCTURE
};

struct StatsChallengeDeed : StatsChallengeUnordered
{
};

struct StatsChallengeLinear : StatsChallengeBase
{
	array<struct StatsChallengeLinearRank>     ranks;                           // type:ARRAY.ATARRAY
};

struct StatsChallengeLinearRank
{
	array<string>                             goalHashes;                      // type:ARRAY.ATARRAY
	struct CBaseReward                        reward;                          // type:STRUCT.POINTER
	struct StatsChallengeLinearRankUIInfo     uiInfo;                          // type:STRUCT.STRUCTURE
	int                                       feedPostSubtype;                 // type:INT.0
};

struct StatsChallengeLinearRankUIInfo
{
	string                           challengeNameLabel;              // type:STRING.ATNONFINALHASHSTRING
	string                           rankDescLabel;                   // type:STRING.ATNONFINALHASHSTRING
	string                           menuAwardLabel;                  // type:STRING.ATNONFINALHASHSTRING
	string                           menuGoalConsolidationLabel;      // type:STRING.ATNONFINALHASHSTRING
	string                           menuAwardTextureDictionary;      // type:STRING.ATNONFINALHASHSTRING
	string                           menuAwardTexture;                // type:STRING.ATNONFINALHASHSTRING
	string                           toastRankCompleteDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           toastRankCompleteDescriptionLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           textureDictionary;               // type:STRING.ATNONFINALHASHSTRING
	string                           texture;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             isConsolidated;                  // type:BOOL.0
};

struct StatsChallengeLinearUIInfo : StatsChallengeUIInfo
{
};

struct StatsChallengeMPAwardUIInfo : StatsChallengeUIInfo
{
};

struct StatsChallengeMPPlayingStyleUIInfo : StatsChallengeUIInfo
{
};

struct StatsChallengeMission : StatsChallengeUnordered
{
};

struct StatsChallengePlayingStyle : StatsChallengeBase
{
	array<struct _0x7425DAD5>        Tiers;                           // type:ARRAY.ATARRAY
};

struct StatsChallengeSPMissionUIInfo : StatsChallengeUIInfo
{
};

struct StatsChallengeStreakUIInfo
{
	struct _0xB286EFA8               Awards;                          // type:STRUCT.STRUCTURE
	struct _0xEE002626               NewDayToast;                     // type:STRUCT.STRUCTURE
	struct _0xAC6B5263               StreakCompleteToast;             // type:STRUCT.STRUCTURE
	struct _0x48EA7C70               LogInfo;                         // type:STRUCT.STRUCTURE
};

struct StatsChallengeUIInfo
{
	string                           challengeNameLabel;              // type:STRING.ATNONFINALHASHSTRING
	string                           challengeDescLabel;              // type:STRING.ATNONFINALHASHSTRING
	string                           challengeToastTitleLabel;        // type:STRING.ATNONFINALHASHSTRING
	string                           textureDictionary;               // type:STRING.ATNONFINALHASHSTRING
	string                           texture;                         // type:STRING.ATNONFINALHASHSTRING
	string                           menuLink;                        // type:STRING.ATNONFINALHASHSTRING
	string                           toolTip;                         // type:STRING.ATNONFINALHASHSTRING
	string                           roleName;                        // type:STRING.ATNONFINALHASHSTRING
	enum eUILogEntryType             entryType;                       // type:ENUM.32BIT
	string                           appId;                           // type:STRING.ATNSHASHSTRING
	string                           entryPointId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           promptText;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             displayInLog;                    // type:BOOL.0
	bool                             displayInChallengeMenu;          // type:BOOL.0
	bool                             displayGoalOnCompletion;         // type:BOOL.0
	struct _0xB76FCD44               onProgressToastSound;            // type:STRUCT.STRUCTURE
	struct _0xB76FCD44               onCompleteToastSound;            // type:STRUCT.STRUCTURE
};

struct StatsChallengeUnordered : StatsChallengeBase
{
	array<string>                    goalHashes;                      // type:ARRAY.ATARRAY
	array<struct _0x2488B8F9>        ranks;                           // type:ARRAY.ATARRAY
};

struct StatsChallengeWeeklyCollectable : _0xE7CBDA9F
{
};

struct StatsChallengeWeeklyCollectableUIInfo : _0xB74C7BC6
{
};

struct StatsGoal : StatsGoalParamBaseContainer
{
	string                           name;                            // type:STRING.ATNSHASHSTRING
	struct StatsGoalUIInfo           uiInfo;                          // type:STRUCT.POINTER
	struct CBaseReward               reward;                          // type:STRUCT.POINTER
};

struct StatsGoalDailySaleswomanLocation : StatsGoal
{
};

struct StatsGoalHelpMessage
{
	array<string>                    labels;                          // type:ARRAY.ATARRAY
};

struct StatsGoalMPAchievementUIInfo : StatsGoalUIInfo
{
};

struct StatsGoalMPAwardMultiLevelSingularFirstLevelUIInfo : StatsGoalMPAwardMultiLevelUIInfo
{
	string                           toastFirstLevelDescriptionLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           pinnedFirstLevelDescriptionLabel; // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalMPAwardMultiLevelUIInfo : StatsGoalMPAwardUIInfo
{
};

struct StatsGoalMPAwardUIInfo : StatsGoalUIInfo
{
	string                           pauseMenuDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuDescriptionLabel;       // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuLevelDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuLevelDescriptionLabel;  // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuTexture;                // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuTextureTxd;             // type:STRING.ATNONFINALHASHSTRING
	string                           _0x665E4BF0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF6BCCED7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           toastDescriptionLabel;           // type:STRING.ATNONFINALHASHSTRING
	string                           toastOnProgressDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           toastOnCompletionDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           toastTexture;                    // type:STRING.ATNONFINALHASHSTRING
	string                           toastTextureTxd;                 // type:STRING.ATNONFINALHASHSTRING
	string                           pinnedDescriptionFormatLabel;    // type:STRING.ATNONFINALHASHSTRING
	string                           pinnedDescriptionLabel;          // type:STRING.ATNONFINALHASHSTRING
	string                           pinnedTexture;                   // type:STRING.ATNONFINALHASHSTRING
	string                           pinnedTextureTxd;                // type:STRING.ATNONFINALHASHSTRING
	enum _0x0C21CCC9                 displayType;                     // type:ENUM.32BIT
};

struct StatsGoalMPCompetitiveUIInfo : StatsGoalUIInfo
{
};

struct StatsGoalMPDailyRoleBountyHunterUIInfo : _0x8DB560C0
{
};

struct StatsGoalMPDailyRoleCollectorUIInfo : _0x8DB560C0
{
};

struct StatsGoalMPDailyRoleMoonshinerUIInfo : _0x8DB560C0
{
};

struct StatsGoalMPDailyRoleTraderUIInfo : _0x8DB560C0
{
};

struct StatsGoalMPDailyUIInfo : _0x7B341543
{
};

struct StatsGoalMPPlayingStyleUIInfo : StatsGoalUIInfo
{
	string                           leaderboardDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           leaderboardDescriptionLabel;     // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalMPWeeklyCollectableUIInfo : _0x7B341543
{
	string                           pauseMenuTitle;                  // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuDescription;            // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuTexture;                // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuTextureTxd;             // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalParamAIConditional : StatsGoalParamBaseContainer
{
	struct CAICondition              condition;                       // type:STRUCT.POINTER
};

struct StatsGoalParamAccuracy : StatsGoalParamBinding
{
	float                            desiredGoal;                     // type:FLOAT.0
	struct StatsGoalParamBase        numeratorParam;                  // type:STRUCT.POINTER
	struct StatsGoalParamBase        denominatorParam;                // type:STRUCT.POINTER
};

struct StatsGoalParamAchievement : StatsGoalParamBaseContainer
{
	bool                             preventUpdateEvents;             // type:BOOL.0
};

struct StatsGoalParamBase
{
};

struct StatsGoalParamBaseContainer : StatsGoalParamBase
{
	struct StatsGoalParamBase        scoreParam;                      // type:STRUCT.POINTER
};

struct StatsGoalParamBaseMulti : StatsGoalParamBaseSumMulti
{
	struct StatsGoalScoreSourceBase     scoreSource;                     // type:STRUCT.POINTER
};

struct StatsGoalParamBaseScore : StatsGoalParamBase
{
	enum eStatsGoalProgressComparer     compareType;                     // type:ENUM.32BIT
};

struct StatsGoalParamBaseSum : StatsGoalParamBaseScore
{
};

struct StatsGoalParamBaseSumMulti : StatsGoalParamBaseSum
{
	array<struct StatsGoalParamBase>     scoreParams;                     // type:ARRAY.ATARRAY
	string                               rankupAward;                     // type:STRING.ATNONFINALHASHSTRING
	string                               rankItem;                        // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalParamBestPlayerWins : StatsGoalParamBaseContainer
{
	bool                             canOnlyParticipateIfHasProgress; // type:BOOL.0
};

struct StatsGoalParamBinding : StatsGoalParamBaseContainer
{
	struct StatsGoalParamBase        bindParam;                       // type:STRUCT.POINTER
	enum _0xCF62AB23                 behavior;                        // type:ENUM.32BIT
};

struct StatsGoalParamBoolScore : StatsGoalParamScore
{
};

struct StatsGoalParamCheckOnMissionSuccess : StatsGoalParamBaseContainer
{
	bool                             checkForSuccessEarly;            // type:BOOL.0
	bool                             alwaysCheckForFailure;           // type:BOOL.0
	bool                             failOnCheckpointRetries;         // type:BOOL.0
	string                           contextToStartFailureOnCheckpointRetries; // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalParamFloatDecreasingScore : StatsGoalParamInfiniteScore
{
};

struct StatsGoalParamFloatGroupSum : StatsGoalParamGroupSum
{
	struct StatsGoalScoreSourceGroupBase     groupSource;                     // type:STRUCT.POINTER
	struct StatsGoalParamBase                templateParam;                   // type:STRUCT.POINTER
	float                                    desiredGoal;                     // type:FLOAT.0
};

struct StatsGoalParamFloatInfiniteScore : StatsGoalParamInfiniteScore
{
};

struct StatsGoalParamFloatMulti : StatsGoalParamBaseMulti
{
	array<float>                     desiredGoals;                    // type:ARRAY.ATARRAY
};

struct StatsGoalParamFloatScore : StatsGoalParamScore
{
	bool                             allowPartialProgression;         // type:BOOL.0
	bool                             allowOverflowProgression;        // type:BOOL.0
	float                            desiredGoal;                     // type:FLOAT.0
};

struct StatsGoalParamFloatSum : StatsGoalParamSum
{
	array<struct StatsGoalParamBase>     scoreParams;                     // type:ARRAY.ATARRAY
	float                                desiredGoal;                     // type:FLOAT.0
};

struct StatsGoalParamFloatSumMulti : StatsGoalParamBaseSumMulti
{
	array<float>                     desiredGoals;                    // type:ARRAY.ATARRAY
};

struct StatsGoalParamGroupSum : StatsGoalParamSum
{
};

struct StatsGoalParamInfiniteScore : StatsGoalParamBaseScore
{
	struct StatsGoalScoreSourceBase     scoreSource;                     // type:STRUCT.POINTER
};

struct StatsGoalParamIntDecreasingScore : StatsGoalParamInfiniteScore
{
};

struct StatsGoalParamIntGroupSum : StatsGoalParamGroupSum
{
	struct StatsGoalScoreSourceGroupBase     groupSource;                     // type:STRUCT.POINTER
	struct StatsGoalParamBase                templateParam;                   // type:STRUCT.POINTER
	uint                                     desiredGoal;                     // type:UINT.0
};

struct StatsGoalParamIntInfiniteScore : StatsGoalParamInfiniteScore
{
};

struct StatsGoalParamIntMulti : StatsGoalParamBaseMulti
{
	array<uint>                      desiredGoals;                    // type:ARRAY.ATARRAY
};

struct StatsGoalParamIntScore : StatsGoalParamScore
{
	bool                             allowPartialProgression;         // type:BOOL.0
	bool                             allowOverflowProgression;        // type:BOOL.0
	uint                             desiredGoal;                     // type:UINT.0
};

struct StatsGoalParamIntSum : StatsGoalParamSum
{
	array<struct StatsGoalParamBase>     scoreParams;                     // type:ARRAY.ATARRAY
	uint                                 desiredGoal;                     // type:UINT.0
};

struct StatsGoalParamIntSumMulti : StatsGoalParamBaseSumMulti
{
	array<uint>                      desiredGoals;                    // type:ARRAY.ATARRAY
};

struct StatsGoalParamMissionGroupSum : StatsGoalParamSum
{
	uint                             desiredGoal;                     // type:UINT.0
	string                           category;                        // type:STRING.ATNONFINALHASHSTRING
	enum eMissionRating              minCompletionRating;             // type:ENUM.32BIT
};

struct StatsGoalParamMissionRatingScore : StatsGoalParamIntScore
{
	string                           missionName;                     // type:STRING.ATNONFINALHASHSTRING
	enum eMissionRating              minCompletionRating;             // type:ENUM.32BIT
};

struct StatsGoalParamPenalty : StatsGoalParamBaseContainer
{
	struct StatsGoalParamBase        penaltyParam;                    // type:STRUCT.POINTER
};

struct StatsGoalParamPrestigable : StatsGoalParamBaseContainer
{
	array<string>                    prestigeAwards;                  // type:ARRAY.ATARRAY
};

struct StatsGoalParamResetable : StatsGoalParamBaseContainer
{
	struct StatsGoalParamBase        resetParam;                      // type:STRUCT.POINTER
	uint                             blockResetDelay;                 // type:UINT.0
	bool                             blockResetsOnScoreUpdate;        // type:BOOL.0
	bool                             blockResetsOnScoreComplete;      // type:BOOL.0
};

struct StatsGoalParamScore : StatsGoalParamInfiniteScore
{
};

struct StatsGoalParamSum : StatsGoalParamBaseSum
{
	bool                             completeAllParamsInsteadOfGoal;  // type:BOOL.0
	bool                             isInfiniteScore;                 // type:BOOL.0
};

struct StatsGoalParamUnlock : StatsGoalParamBaseContainer
{
	string                           unlockName;                      // type:STRING.ATNSHASHSTRING
};

struct StatsGoalPointToPoint : StatsGoal
{
	struct CAICondition              startLocation;                   // type:STRUCT.POINTER
	struct CAICondition              finishLocation;                  // type:STRUCT.POINTER
	struct CAICondition              condition;                       // type:STRUCT.POINTER
	struct StatsGoalParamBase        failParam;                       // type:STRUCT.POINTER
	uint                             durationSeconds;                 // type:UINT.0
};

struct StatsGoalSPAchievementUIInfo : StatsGoalUIInfo
{
};

struct StatsGoalSPLinearUIInfo : StatsGoalUIInfo
{
	string                           pauseMenuDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           pauseMenuDescriptionLabel;       // type:STRING.ATNONFINALHASHSTRING
	string                           toastDescriptionLabel;           // type:STRING.ATNONFINALHASHSTRING
	string                           toastOnProgressDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           toastOnCompletionDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           logDescriptionFormatLabel;       // type:STRING.ATNONFINALHASHSTRING
	string                           logDescriptionLabel;             // type:STRING.ATNONFINALHASHSTRING
	enum _0x0C21CCC9                 displayType;                     // type:ENUM.32BIT
	bool                             toastOnFirstProgress;            // type:BOOL.0
};

struct StatsGoalSPMissionUIInfo : StatsGoalUIInfo
{
	string                           pauseMenuDescriptionLabel;       // type:STRING.ATNONFINALHASHSTRING
	string                           logDescriptionFormatLabel;       // type:STRING.ATNONFINALHASHSTRING
	string                           logDescriptionLabel;             // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalScoreSourceBase
{
};

struct StatsGoalScoreSourceCollectable : StatsGoalScoreSourceBase
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	bool                             ignorePreviouslyFound;           // type:BOOL.0
};

struct StatsGoalScoreSourceCollectableCategory : StatsGoalScoreSourceBase
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	enum _0x8D0D3A9B                 reason;                          // type:ENUM.32BIT
};

struct StatsGoalScoreSourceCompendium : StatsGoalScoreSourceBase
{
	string                               id;                              // type:STRING.ATNSHASHSTRING
	enum eCompendiumGoalUpdateReason     reason;                          // type:ENUM.32BIT
};

struct StatsGoalScoreSourceGroupBase
{
};

struct StatsGoalScoreSourceGroupCollectable : StatsGoalScoreSourceGroupBase
{
	string                           category;                        // type:STRING.ATNONFINALHASHSTRING
	string                           subcategory;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             ignorePreviouslyFound;           // type:BOOL.0
};

struct StatsGoalScoreSourceGroupCollectableList : StatsGoalScoreSourceGroupBase
{
	array<string>                    items;                           // type:ARRAY.ATARRAY
	bool                             ignorePreviouslyFound;           // type:BOOL.0
};

struct StatsGoalScoreSourceGroupCompendium : StatsGoalScoreSourceGroupBase
{
	enum eCompendiumGoalUpdateReason     reason;                          // type:ENUM.32BIT
};

struct StatsGoalScoreSourceGroupInventoryTag : StatsGoalScoreSourceGroupBase
{
	string                           itemTag;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             keepProgressOnItemLoss;          // type:BOOL.0
};

struct StatsGoalScoreSourceGroupMission : StatsGoalScoreSourceGroupBase
{
	string                           category;                        // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalScoreSourceGroupStat : StatsGoalScoreSourceGroupBase
{
	string                           statName;                        // type:STRING.ATNSHASHSTRING
	string                           groupName;                       // type:STRING.ATNSHASHSTRING
};

struct StatsGoalScoreSourceGroupStatFromItemSet : StatsGoalScoreSourceGroupBase
{
	string                           statName;                        // type:STRING.ATNSHASHSTRING
	string                           itemSetName;                     // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalScoreSourceGroupUnlock : StatsGoalScoreSourceGroupBase
{
	string                           group;                           // type:STRING.ATNSHASHSTRING
};

struct StatsGoalScoreSourceInventory : StatsGoalScoreSourceBase
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	bool                             keepProgressOnItemLoss;          // type:BOOL.0
};

struct StatsGoalScoreSourceMission : StatsGoalScoreSourceBase
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalScoreSourceScript : StatsGoalScoreSourceBase
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalScoreSourceScriptFloat : StatsGoalScoreSourceScript
{
};

struct StatsGoalScoreSourceStat : StatsGoalScoreSourceBase
{
	struct StatId                    statId;                          // type:STRUCT.STRUCTURE
};

struct StatsGoalScoreSourceUnlock : StatsGoalScoreSourceBase
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct StatsGoalUIInfo
{
};

struct StrafeAnimations__DataManager
{
	array<struct StrafeAnimations__StateData>     States;                          // type:ARRAY.ATARRAY
	array<struct _0x5809C405>                     TransitionTables;                // type:ARRAY.ATARRAY
	array<struct _0x17FD8D8C>                     StateSets;                       // type:ARRAY.ATARRAY
	array<struct _0xBBF8EB1C>                     Sets;                            // type:ARRAY.ATARRAY
};

struct StrafeAnimations__MovingIntroStateData : StrafeAnimations__StateData
{
	struct _0x3479C47A               TransitionToStrafeBounds;        // type:STRUCT.STRUCTURE
	struct _0x3479C47A               TransitionFromStrafeBounds;      // type:STRUCT.STRUCTURE
	float                            WalkAnimRateOverride;            // type:FLOAT.0
	float                            RunAnimRateOverride;             // type:FLOAT.0
};

struct StrafeAnimations__MovingStateData : StrafeAnimations__StateData
{
	struct _0xA9BDFC99               MoveSpeeds;                      // type:STRUCT.SIMPLE_POINTER
	struct _0xA9BDFC99               MoveSpeedsInInteriors;           // type:STRUCT.SIMPLE_POINTER
	struct _0xA9BDFC99               _0x68FC4FB9;                     // type:STRUCT.SIMPLE_POINTER
	struct _0xA9BDFC99               _0xADBB1BBE;                     // type:STRUCT.SIMPLE_POINTER
	struct _0xA9BDFC99               MoveSpeedsInCarryMode;           // type:STRUCT.SIMPLE_POINTER
	struct _0xCCA64EF0               MoveSpeedsClips;                 // type:STRUCT.SIMPLE_POINTER
	struct _0x3A886547               MoveSpeedsModifiers;             // type:STRUCT.STRUCTURE
};

struct StrafeAnimations__SimpleSet : _0xBBF8EB1C
{
	struct void                      StateSet;                        // type:STRUCT.EXTERNAL_NAMED
};

struct StrafeAnimations__StartMovingStateData : StrafeAnimations__StateData
{
	bool                             _0x1475EDA2;                     // type:BOOL.0
	bool                             UseInitialDirectionForInterruptions; // type:BOOL.0
	bool                             ForceEarlyOutForMovementFromStart; // type:BOOL.0
};

struct StrafeAnimations__StateData
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Network;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xD0B14299, 4>     AdditionalClipSets;              // type:ARRAY.ATFIXEDARRAY
	array<struct _0xF2B9A8F6, 3>     MotionSets;                      // type:ARRAY.ATFIXEDARRAY
	array<struct _0x8096CB69>        Flags;                           // type:ARRAY.ATARRAY
};

struct StrafeAnimations__TestSet : _0xBBF8EB1C
{
	struct void                      DefaultSet;                      // type:STRUCT.EXTERNAL_NAMED
	array<struct void>               TestSets;                        // type:ARRAY.ATARRAY
};

struct StrafeAnimations__VariationsSet : _0xBBF8EB1C
{
	struct void                      Fallback;                        // type:STRUCT.EXTERNAL_NAMED
	struct void                      Normal;                          // type:STRUCT.EXTERNAL_NAMED
	struct void                      NormalHip;                       // type:STRUCT.EXTERNAL_NAMED
	struct void                      NormalOffset;                    // type:STRUCT.EXTERNAL_NAMED
	struct void                      NormalHipOffset;                 // type:STRUCT.EXTERNAL_NAMED
	struct void                      Crouched;                        // type:STRUCT.EXTERNAL_NAMED
	struct void                      CrouchedHip;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                      UnderFire;                       // type:STRUCT.EXTERNAL_NAMED
	struct void                      Pulling;                         // type:STRUCT.EXTERNAL_NAMED
	struct void                      LeftHanded;                      // type:STRUCT.EXTERNAL_NAMED
	struct void                      Attached;                        // type:STRUCT.EXTERNAL_NAMED
};

struct Tactical__ProfileData
{
	struct _0x06747F7A                  DefaultSearchProfile;            // type:STRUCT.STRUCTURE
	struct _0x06747F7A                  DefaultMountedSearchProfile;     // type:STRUCT.STRUCTURE
	struct _0x5023C058                  DefaultUsageProfile;             // type:STRUCT.STRUCTURE
	struct _0x5023C058                  DefaultMountedUsageProfile;      // type:STRUCT.STRUCTURE
	map<string, struct _0x06747F7A>     SearchProfiles;                  // type:MAP.ATMAP
	map<string, struct _0x5023C058>     UsageProfiles;                   // type:MAP.ATMAP
};

struct TapTouchGesture : _0x5589CE6B
{
	enum _0x75713ED6                 VisibleProperty;                 // type:ENUM.32BIT
	uint                             NumTaps;                         // type:UINT.0
};

struct TaskInCoverTunables
{
	bool                             _0xA9E19C79;                     // type:BOOL.0
	float                            _0x3912C66C;                     // type:FLOAT.0
	float                            _0x7C3CE657;                     // type:FLOAT.0
	float                            MovementClipRate;                // type:FLOAT.0
	float                            TurnClipRate;                    // type:FLOAT.0
	float                            MaxInputForIdleExit;             // type:FLOAT.0
	float                            InputYAxisCornerExitValue;       // type:FLOAT.0
	float                            _0x0256D649;                     // type:FLOAT.0
	float                            ControlDebugXPos;                // type:FLOAT.0
	float                            ControlDebugYPos;                // type:FLOAT.0
	float                            ControlDebugRadius;              // type:FLOAT.0
	float                            ControlDebugBeginAngle;          // type:FLOAT.2
	float                            ControlDebugEndAngle;            // type:FLOAT.2
	float                            _0x6C9E2E87;                     // type:FLOAT.0
	float                            MinStickInputToMoveInCover;      // type:FLOAT.0
	bool                             _0xCD141A0F;                     // type:BOOL.0
	float                            _0xE0E4C0FD;                     // type:FLOAT.0
	float                            MinStickInputXAxisToTurnInCover; // type:FLOAT.0
	float                            InputYAxisQuitValue;             // type:FLOAT.0
	float                            _0xD1352DA7;                     // type:FLOAT.0
	float                            _0x9FEACAF4;                     // type:FLOAT.0
	float                            _0x9F7B41AE;                     // type:FLOAT.0
	float                            _0xF5957D33;                     // type:FLOAT.0
	float                            StartExtendedProbeTime;          // type:FLOAT.0
	float                            MinTimeToSpendInTask;            // type:FLOAT.0
	float                            DesiredDistanceToCover;          // type:FLOAT.0
	float                            _0x3C45B34D;                     // type:FLOAT.0
	float                            _0x291F2310;                     // type:FLOAT.0
	float                            DesiredDistanceToCoverToRequestStep; // type:FLOAT.0
	float                            MinMovingProbeOffset;            // type:FLOAT.0
	float                            MaxMovingProbeOffset;            // type:FLOAT.0
	float                            MinTurnProbeOffset;              // type:FLOAT.0
	float                            MaxTurnProbeOffset;              // type:FLOAT.0
	float                            DefaultProbeOffset;              // type:FLOAT.0
	float                            MinStoppingEdgeCheckProbeOffset; // type:FLOAT.0
	float                            MaxStoppingEdgeCheckProbeOffset; // type:FLOAT.0
	float                            MinStoppingProbeOffset;          // type:FLOAT.0
	float                            MaxStoppingProbeOffset;          // type:FLOAT.0
	float                            HeadingChangeRate;               // type:FLOAT.0
	float                            InCoverMovementSpeedEnterCover;  // type:FLOAT.0
	float                            InCoverMovementSpeed;            // type:FLOAT.0
	float                            SteppingMovementSpeed;           // type:FLOAT.0
	bool                             ComeBackInWhenAimDirectChangeInHighCover; // type:BOOL.0
	float                            AlternateControlStickInputThreshold; // type:FLOAT.0
	float                            PinnedDownPeekChance;            // type:FLOAT.0
	float                            MinTimeBeforeAllowingAutoPeek;   // type:FLOAT.0
	bool                             EnableAimDirectlyIntros;         // type:BOOL.0
	float                            PedDirToPedCoverCosAngleTol;     // type:FLOAT.0
	float                            CamToPedDirCosAngleTol;          // type:FLOAT.0
	float                            CamToCoverDirCosAngleTol;        // type:FLOAT.0
	float                            MinDistanceToTargetForPeek;      // type:FLOAT.0
	float                            TimeBetweenPeeksWithoutLOS;      // type:FLOAT.0
	int                              RecreateWeaponTime;              // type:INT.0
	string                           WeaponClipSetId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           _0x86C7C56E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x50E8DB4E;                     // type:STRING.ATNONFINALHASHSTRING
	float                            BlindFireHighCoverMinPitchLimit; // type:FLOAT.0
	float                            BlindFireHighCoverMaxPitchLimit; // type:FLOAT.0
	bool                             EnableLeftHandIkInCover;         // type:BOOL.0
	float                            MaxReactToFireDelay;             // type:FLOAT.0
	float                            MinTimeUntilReturnToIdleFromAimAfterAimedAt; // type:FLOAT.0
	float                            MaxTimeUntilReturnToIdleFromAimAfterAimedAt; // type:FLOAT.0
	float                            MinTimeUntilReturnToIdleFromAimDefault; // type:FLOAT.0
	float                            MaxTimeUntilReturnToIdleFromAimDefault; // type:FLOAT.0
	float                            GlobalLateralTorsoOffsetInLeftCover; // type:FLOAT.0
	float                            _0xDAA6B790;                     // type:FLOAT.0
	float                            WeaponLongBlockingOffsetInLeftCover; // type:FLOAT.0
	float                            WeaponBlockingOffsetInLeftCover; // type:FLOAT.0
	float                            WeaponBlockingOffsetInRightCover; // type:FLOAT.0
	float                            _0x4867DDE9;                     // type:FLOAT.0
	float                            WeaponBlockingLengthOffset;      // type:FLOAT.0
	string                           CoverStepClipSetId;              // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x6565691F;                     // type:BOOL.0
	bool                             _0xBEA2701F;                     // type:BOOL.0
	float                            AmountPinnedDownByDamage;        // type:FLOAT.0
	float                            AmountPinnedDownByBullet;        // type:FLOAT.0
	float                            AmountPinnedDownByWitnessKill;   // type:FLOAT.0
	float                            PinnedDownByBulletRange;         // type:FLOAT.0
	float                            _0x7679A70D;                     // type:FLOAT.0
	float                            PinnedDownDecreaseAmountPerSecond; // type:FLOAT.0
	array<float, 3>                  _0xED1DCBF0;                     // type:ARRAY.ATARRAY
	array<int, 3>                    _0x5E767A24;                     // type:ARRAY.ATARRAY
	array<struct _0xD4670C5D, 3>     _0xAFE909C1;                     // type:ARRAY.ATARRAY
	array<struct _0x49548C66, 3>     _0x1B09BDE9;                     // type:ARRAY.ATARRAY
	int                              _0x7B25E170;                     // type:INT.0
	int                              _0xDBF656B3;                     // type:INT.0
	float                            AimIntroTaskBlendOutDuration;    // type:FLOAT.0
	float                            TimeBetweenBurstsMaxRandomPercent; // type:FLOAT.0
	uint                             AimOutroDelayTime;               // type:UINT.0
	uint                             _0xB3240E62;                     // type:UINT.0
	uint                             _0xD27D79B4;                     // type:UINT.0
	uint                             _0x657CEC3F;                     // type:UINT.0
	uint                             _0x7D51290E;                     // type:UINT.0
	float                            _0x90912AB9;                     // type:FLOAT.0
	float                            _0x1FC469CD;                     // type:FLOAT.0
	float                            _0x674891A6;                     // type:FLOAT.0
	bool                             _0x1CE232FE;                     // type:BOOL.0
	float                            _0x1455E6FA;                     // type:FLOAT.0
	float                            _0x68FEE56F;                     // type:FLOAT.0
	float                            _0x68781DD9;                     // type:FLOAT.0
	float                            _0xAB1BEFB5;                     // type:FLOAT.0
	bool                             _0x075ADF32;                     // type:BOOL.0
	bool                             _0xB6FCD490;                     // type:BOOL.0
	float                            _0x3F144293;                     // type:FLOAT.0
	float                            _0x8EECE77B;                     // type:FLOAT.0
	float                            _0x1E8B3E5E;                     // type:FLOAT.0
	float                            _0x2D200CED;                     // type:FLOAT.0
	float                            _0xCA506F81;                     // type:FLOAT.0
	float                            _0xD82FE06F;                     // type:FLOAT.0
	float                            _0xF1091DF8;                     // type:FLOAT.0
	float                            _0xF8B73B7F;                     // type:FLOAT.0
	float                            _0xB0CD0A9F;                     // type:FLOAT.0
	float                            _0xE2246614;                     // type:FLOAT.0
	float                            _0x0556AE31;                     // type:FLOAT.0
	float                            _0xCC10F870;                     // type:FLOAT.0
	float                            _0x1373EA95;                     // type:FLOAT.0
	bool                             _0x220EE0E5;                     // type:BOOL.0
	enum eStreamingPriority          _0xB356AC60;                     // type:ENUM.32BIT
	enum eStreamingPriority          _0xF02B9BB3;                     // type:ENUM.32BIT
	enum eStreamingPriority          _0x811890E2;                     // type:ENUM.32BIT
	enum eStreamingPriority          _0xFC4C94FA;                     // type:ENUM.32BIT
	enum eStreamingPriority          _0xC55CBA03;                     // type:ENUM.32BIT
	enum eStreamingPriority          _0xC5D03EDE;                     // type:ENUM.32BIT
	float                            _0x8A80F5B4;                     // type:FLOAT.0
	float                            _0x1D802A9C;                     // type:FLOAT.0
	int                              _0x9B28886E;                     // type:INT.0
	int                              _0x8B2F6890;                     // type:INT.0
	float                            _0x05D11853;                     // type:FLOAT.0
	float                            _0x4057555D;                     // type:FLOAT.0
	float                            _0x0C79E087;                     // type:FLOAT.0
	float                            _0xA75798E3;                     // type:FLOAT.0
	float                            _0xE4FEB1DF;                     // type:FLOAT.0
	float                            _0x131A26E1;                     // type:FLOAT.0
	float                            _0x7EFD340B;                     // type:FLOAT.0
	int                              _0x755E8515;                     // type:INT.0
	float                            _0x88BED621;                     // type:FLOAT.0
	float                            _0xBF3909AC;                     // type:FLOAT.0
	float                            _0xA360025E;                     // type:FLOAT.0
	float                            _0xC90890A5;                     // type:FLOAT.0
	float                            _0x31D1B710;                     // type:FLOAT.0
	uint                             _0xCD830AE1;                     // type:UINT.0
	bool                             _0x544B7686;                     // type:BOOL.0
	float                            _0x41E73BEF;                     // type:FLOAT.0
	struct _0xEA1D8F76               _0x9D477F71;                     // type:STRUCT.STRUCTURE
	struct _0xEA1D8F76               _0x85E2809C;                     // type:STRUCT.STRUCTURE
	float                            _0x65DAEEEC;                     // type:FLOAT.0
	float                            _0x9B86B496;                     // type:FLOAT.0
	float                            _0x3BCD9C1A;                     // type:FLOAT.0
};

struct TaskMotionInCoverTunables
{
	bool                                _0x260D8BDC;                     // type:BOOL.0
	bool                                _0x2F49C688;                     // type:BOOL.0
	bool                                _0x5FD932CF;                     // type:BOOL.0
	bool                                _0x16D2D7CF;                     // type:BOOL.0
	bool                                _0x19D5DE5D;                     // type:BOOL.0
	bool                                _0xACEF9AD3;                     // type:BOOL.0
	bool                                _0x9BFC9106;                     // type:BOOL.0
	float                               _0x0ED9CDC0;                     // type:FLOAT.0
	float                               _0x8E62951B;                     // type:FLOAT.0
	float                               _0x44B87FAF;                     // type:FLOAT.0
	bool                                _0x4202966A;                     // type:BOOL.0
	bool                                _0x076984EE;                     // type:BOOL.0
	bool                                _0x76200FAB;                     // type:BOOL.0
	float                               _0x4328CD5E;                     // type:FLOAT.0
	float                               _0x8EA6CD64;                     // type:FLOAT.0
	struct _0x069802B9                  _0xCAFA01E6;                     // type:STRUCT.STRUCTURE
	float                               _0xF1710101;                     // type:FLOAT.0
	float                               _0x9AD48F9B;                     // type:FLOAT.0
	float                               _0xB33D430F;                     // type:FLOAT.0
	float                               _0x5409F253;                     // type:FLOAT.0
	float                               _0xD169016F;                     // type:FLOAT.0
	float                               _0x475C7B2A;                     // type:FLOAT.0
	float                               _0xD5A99E59;                     // type:FLOAT.0
	float                               _0xA0BB0397;                     // type:FLOAT.0
	float                               _0xEBB70D29;                     // type:FLOAT.0
	float                               _0x03857455;                     // type:FLOAT.0
	float                               _0xFF715906;                     // type:FLOAT.0
	float                               _0xB909CE10;                     // type:FLOAT.0
	bool                                _0x49599652;                     // type:BOOL.0
	bool                                _0x7438B788;                     // type:BOOL.0
	float                               _0x80DB7C78;                     // type:FLOAT.0
	float                               _0xBDDCDEDC;                     // type:FLOAT.0
	float                               _0x34E63F3E;                     // type:FLOAT.0
	float                               _0x65CDAAA8;                     // type:FLOAT.0
	float                               _0x3ECFD6E6;                     // type:FLOAT.0
	float                               _0x10EC9BF7;                     // type:FLOAT.0
	float                               _0xE864EBE0;                     // type:FLOAT.0
	float                               _0x3C1D6C65;                     // type:FLOAT.2
	float                               _0x47249CBA;                     // type:FLOAT.2
	uint                                MinTimeForCornerMove;            // type:UINT.0
	float                               DefaultSettleBlendDuration;      // type:FLOAT.0
	float                               HeightChangeSettleBlendDuration; // type:FLOAT.0
	float                               MaxRotationalSpeedScale;         // type:FLOAT.0
	float                               MaxRotationalSpeed;              // type:FLOAT.0
	float                               MinStickInputToEnableMoveAroundCorner; // type:FLOAT.0
	float                               MaxStoppingDuration;             // type:FLOAT.0
	float                               MinStoppingDist;                 // type:FLOAT.0
	float                               MinTimeToScale;                  // type:FLOAT.0
	float                               EdgeLowCoverMoveTime;            // type:FLOAT.0
	float                               HeadingReachedTolerance;         // type:FLOAT.0
	float                               BlendToIdleTime;                 // type:FLOAT.0
	float                               InsideCornerStopDistance;        // type:FLOAT.0
	float                               CoverHeadingCloseEnough;         // type:FLOAT.0
	float                               CoverPositionCloseEnough;        // type:FLOAT.0
	float                               DefaultStillToTurnBlendDuration; // type:FLOAT.0
	float                               MinEdgeDistanceForStoppingAnim;  // type:FLOAT.0
	float                               _0x31FC8B3F;                     // type:FLOAT.0
	float                               _0x5CA0732F;                     // type:FLOAT.0
	float                               _0x96C724AE;                     // type:FLOAT.0
	float                               _0x3BB7DD5E;                     // type:FLOAT.0
	float                               _0xB872649F;                     // type:FLOAT.0
	float                               _0xDC593F1B;                     // type:FLOAT.0
	float                               _0x2E96CA71;                     // type:FLOAT.0
	float                               _0x4AF1D9B9;                     // type:FLOAT.0
	uint                                _0x27C30212;                     // type:UINT.0
	float                               _0x7D3B81AF;                     // type:FLOAT.0
	struct _0xE3B7812A                  _0x59194435;                     // type:STRUCT.STRUCTURE
	struct _0xE3B7812A                  _0x3B830373;                     // type:STRUCT.STRUCTURE
	struct _0xE3B7812A                  _0x02D5629C;                     // type:STRUCT.STRUCTURE
	struct _0xE3B7812A                  _0xB1D682B2;                     // type:STRUCT.STRUCTURE
	float                               _0xE2CC1354;                     // type:FLOAT.0
	float                               _0xD16BD327;                     // type:FLOAT.0
	float                               _0x1722598D;                     // type:FLOAT.0
	float                               _0x690F7216;                     // type:FLOAT.0
	bool                                _0xC45201C4;                     // type:BOOL.0
	float                               _0xACEBF84F;                     // type:FLOAT.0
	bool                                _0x3C72379C;                     // type:BOOL.0
	float                               _0xBCD2AE4A;                     // type:FLOAT.0
	string                              CoreAIMotionClipSetId;           // type:STRING.ATNONFINALHASHSTRING
	string                              _0x89E4849A;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x504EF8BD;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x00CA0329;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x72C6C7CB;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xF606FF04;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x33197403;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xE47A5759;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x787E327C;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x2AC1A362;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x5C6B80A3;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x8DFAE5E6;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x26971CA1;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x658A9AEA;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x63E7FEA3;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x9F3F2287;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xEE10260B;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xDD747A61;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xFA1EE867;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x7405831E;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x281C9590;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x15093F5B;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xEEB1C09C;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x7468B27B;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x4560B03D;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x446F42A8;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xCEEA4E21;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x2889B668;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x19E13650;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xD7A5CD1B;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x973B7C99;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xDAC8C7ED;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xF852C556;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x4DCA5F49;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x28F2C09A;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x29A0B32D;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x3B8178C3;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xCB0574D5;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xB47F080F;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xBD23BDCE;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xC8D5DF2C;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x6FD64DED;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x0F8E3722;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x49758E1E;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xC4F0A86B;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xD8E24A87;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x24C42113;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                _0x083422C1;                     // type:BOOL.0
	bool                                _0x2DCD067C;                     // type:BOOL.0
	bool                                _0xB8354BD0;                     // type:BOOL.0
	string                              _0x866F7469;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xE8EE0C05;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x26702209;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x5077AC72;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xAB9B5492;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x9A8AEAD0;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x9A425C1D;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x544DC4F6;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x3B0590FA;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x00D3DF59;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x5CE97516;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x73507A4B;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x6F090E7F;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x93DCE55A;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x09BC2FD6;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x2DCC136D;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xF6E4DBF4;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x353987F2;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x96D83327;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xDCB671A4;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x8F884AF6;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                _0x3F4A186E;                     // type:BOOL.0
	string                              _0xA5AFE58E;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x04B92275;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xD701DC58;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xF3296CF2;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x9C3861AF;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x0CCED6D7;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0x7535FFBE>     _0x4A28AF7D;                     // type:MAP.ATBINARYMAP
	struct _0x17041063                  _0x2BEB7B05;                     // type:STRUCT.STRUCTURE
	bool                                _0xFC32E3F3;                     // type:BOOL.0
};

struct TaskMotionMeleeInCoverTunables
{
	struct _0xCFA09DD3               _0xA949338E;                     // type:STRUCT.STRUCTURE
};

struct TemperatureValueConverter : MeasurementValueConverterBase
{
};

struct TempoEmoteData
{
	float                            SourceBPM;                       // type:FLOAT.0
	float                            MinScale;                        // type:FLOAT.0
	float                            MaxScale;                        // type:FLOAT.0
};

struct TextSettings
{
	float                            fYOffset;                        // type:FLOAT.0
	float                            fXOffset;                        // type:FLOAT.0
	float                            fScalar;                         // type:FLOAT.0
};

struct TextSubstitutions
{
	map<string, struct _0x5A8A1445>     Substitutions;                   // type:MAP.ATMAP
};

struct TextureGridInfo : _0x834F097F
{
	string                           lowDetailFallBack;               // type:STRING.ATNONFINALHASHSTRING
	string                           highDetailFallBack;              // type:STRING.ATNONFINALHASHSTRING
};

struct TimeWeatherDataCollection
{
	array<struct _0x18C7C82F>        dataArray;                       // type:ARRAY.ATARRAY
};

struct TintPaletteSlod
{
	string                           palette;                         // type:STRING.ATNONFINALHASHSTRING
	array<uint>                      colors;                          // type:ARRAY.ATARRAY
};

struct TranquilizerProfile
{
	struct _0xB934FC25               Default;                         // type:STRUCT.STRUCTURE
};

struct UIBehavior
{
	string                           Name;                            // type:STRING.ATNSHASHSTRING
	bool                             DataBindingEnabled;              // type:BOOL.0
	bool                             StartEnabled;                    // type:BOOL.0
};

struct UIBehaviorSet
{
	array<struct UIBehavior>         Behaviors;                       // type:ARRAY.ATARRAY
};

struct UICanvas : _0x0C22B755
{
};

struct UICircle : UIShape
{
};

struct UIContainer : UIObjectWithChildren
{
	bool                               _0x09C7E355;                     // type:BOOL.0
	array<struct UIInstancingItem>     Instancing;                      // type:ARRAY.ATARRAY
};

struct UIGrid : _0x45D858EB
{
};

struct UIHudScreen : UIMovieView
{
};

struct UIIcon : uiObjectBase
{
	string                           IconToken;                       // type:STRING.ATFINALHASHSTRING
	uint64                           UniqueId;                        // type:UINT64.0
	bool                             Gutter;                          // type:BOOL.0
	bool                             ForceVerticalGutterSpace;        // type:BOOL.0
	bool                             ForceHorizontalGutterSpace;      // type:BOOL.0
	float                            MaxIconHeight;                   // type:FLOAT.0
	bool                             ShrinkToFit;                     // type:BOOL.0
};

struct UIImage : uiObjectBase
{
	string                           TextureDictionary;               // type:STRING.ATNSHASHSTRING
	string                           Texture;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             HoldTextureReferences;           // type:BOOL.0
	float                            SliceX;                          // type:FLOAT.0
	float                            SliceY;                          // type:FLOAT.0
	float                            SliceWidth;                      // type:FLOAT.0
	float                            SliceHeight;                     // type:FLOAT.0
};

struct UIInstancingItem
{
	string                           Point;                           // type:STRING.ATNSHASHSTRING
	int                              PosX;                            // type:INT.0
	int                              PosY;                            // type:INT.0
	int                              RowSpan;                         // type:INT.0
	int                              ColSpan;                         // type:INT.0
};

struct UILayer : UIContainer
{
	array<struct _0x8C354D49>        Resources;                       // type:ARRAY.ATARRAY
	array<struct _0x8C354D49>        OrderedResources;                // type:ARRAY.ATARRAY
};

struct UIMapView : UIObjectWithChildren
{
	struct _0x4A7AD954               ImagePath;                       // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               GutterPath;                      // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               DistanceTextPath;                // type:STRUCT.STRUCTURE
	string                           MaskTextureDictionary;           // type:STRING.ATNSHASHSTRING
	string                           MaskTexture;                     // type:STRING.ATNONFINALHASHSTRING
	string                           MapData;                         // type:STRING.ATNONFINALHASHSTRING
	string                           TypeKey;                         // type:STRING.ATNONFINALHASHSTRING
	string                           FullScreenOverlayTextureDictionary; // type:STRING.ATNSHASHSTRING
	string                           FullScreenOverlayTexture;        // type:STRING.ATNONFINALHASHSTRING
	float                            FullScreenOverlayAlpha;          // type:FLOAT.0
	string                           FilterId;                        // type:STRING.ATHASHVALUE
	float                            BackgroundAlpha;                 // type:FLOAT.0
	float                            BlipSizeRatio;                   // type:FLOAT.0
	float                            BlipSizeRatioHD;                 // type:FLOAT.0
	bitset<enum _0x03EAAA3D>         MapFlags;                        // type:BITSET.8BIT
	int                              RadarMode;                       // type:INT.0
	float                            MapRotation;                     // type:FLOAT.0
	bool                             UsesCurrentLocation;             // type:BOOL.0
};

struct UIMapViewNavigable : UIMapView
{
	float                            InitialZoom;                     // type:FLOAT.0
	float                            LeftMargin;                      // type:FLOAT.0
	float                            RightMargin;                     // type:FLOAT.0
	float                            TopMargin;                       // type:FLOAT.0
	float                            BottomMargin;                    // type:FLOAT.0
	enum _0x4314208E                 PanSpeedEase;                    // type:ENUM.32BIT
	float                            PanSpeedMax;                     // type:FLOAT.0
	float                            PanEaseTime;                     // type:FLOAT.0
	float                            ZoomMin;                         // type:FLOAT.0
	float                            ZoomMax;                         // type:FLOAT.0
	float                            ZoomInRateAtMin;                 // type:FLOAT.0
	float                            ZoomInRateAtMax;                 // type:FLOAT.0
	enum _0x4314208E                 ZoomInEase;                      // type:ENUM.32BIT
	float                            ZoomOutRateAtMin;                // type:FLOAT.0
	float                            ZoomOutRateAtMax;                // type:FLOAT.0
	enum _0x4314208E                 ZoomOutEase;                     // type:ENUM.32BIT
};

struct UIMeter : uiObjectBase
{
	float                            Minimum;                         // type:FLOAT.0
	float                            Maximum;                         // type:FLOAT.0
	float                            _0x4C464D63;                     // type:FLOAT.0
	float                            Value;                           // type:FLOAT.0
	float                            StrokeThickness;                 // type:FLOAT.0
	float                            TargetValue;                     // type:FLOAT.0
	float                            changeDeltaSpeed;                // type:FLOAT.0
	int                              changeDeltaDelay;                // type:INT.0
	string                           FillColor;                       // type:STRING.ATNONFINALHASHSTRING
	string                           TrackColor;                      // type:STRING.ATNONFINALHASHSTRING
	string                           StrokeColor;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ChangeDeltaColor;                // type:STRING.ATNONFINALHASHSTRING
	string                           DeltaGainColor;                  // type:STRING.ATNONFINALHASHSTRING
	string                           DeltaLossColor;                  // type:STRING.ATNONFINALHASHSTRING
	bool                             EnableTrack;                     // type:BOOL.0
};

struct UIMovieView : UILayer
{
	string                           MovieFileName;                   // type:STRING.ATSTRING
	bool                             TopDraw;                         // type:BOOL.0
	bool                             UsePausableTimer;                // type:BOOL.0
	bool                             LetterboxConstrained;            // type:BOOL.0
};

struct UIObject : uiObjectBase
{
};

struct UIObjectSceneFileDependencyResource : _0xAF24E56C
{
};

struct UIObjectSceneStreamingDependencyResource : _0xFECF2F24
{
};

struct UIObjectStyleProperty : _0x05C33D80
{
	string                           Color;                           // type:STRING.ATFINALHASHSTRING
	char                             Alpha;                           // type:CHAR.0
};

struct UIObjectWithChildren : uiObjectBase
{
	array<struct uiObjectBase>       Children;                        // type:ARRAY.ATARRAY
};

struct UIPanel : _0xFBCC548D
{
};

struct UIPromptDataConstants
{
	float                            _0xB933C960;                     // type:FLOAT.0
	float                            _0x81C0BAA1;                     // type:FLOAT.0
	string                           _0xA2F1BCD1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x44D9CED6;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x33E3C25D;                     // type:FLOAT.0
	float                            _0xAAA26266;                     // type:FLOAT.0
	float                            _0x8D439518;                     // type:FLOAT.0
	float                            _0x1B37ABA1;                     // type:FLOAT.0
};

struct UIPromptSimple
{
	bool                                Visible;                         // type:BOOL.0
	enum rage__InputType                InputType;                       // type:ENUM.32BIT
	enum rage__InputGroup               InputGroup;                      // type:ENUM.32BIT
	string                              Text;                            // type:STRING.ATNONFINALHASHSTRING
	float                               FixedWeight;                     // type:FLOAT.0
	bitset<enum eUIPromptAttribute>     Attributes;                      // type:BITSET.32BIT
	enum eUIPromptActionTrigger         ActionTrigger;                   // type:ENUM.32BIT
};

struct UIRadialGrid : _0xFCAE8080
{
};

struct UIRectangle : UIShape
{
};

struct UIScalingViewbox : UIViewbox
{
};

struct UIScrollViewer : _0x58FD29A7
{
	bool                             EnableMasking;                   // type:BOOL.0
	int                              ScrollBoundryBegin;              // type:INT.0
	int                              ScrollBoundryEnd;                // type:INT.0
	float                            AutoScrollPagePercent;           // type:FLOAT.0
	struct _0x4A7AD954               MaskObjectPath;                  // type:STRUCT.STRUCTURE
	string                           AnimationName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct UIShape : UIObjectWithChildren
{
	string                           StrokeColor;                     // type:STRING.ATNONFINALHASHSTRING
	float                            StrokeThickness;                 // type:FLOAT.0
};

struct UIStackPanel : _0xE55B66F7
{
	enum VirtualizingStackPanelTypes     VirtualizationType;              // type:ENUM.32BIT
};

struct UIStretchPanel : _0x70F30674
{
};

struct UITemplate
{
	string                                  Id;                              // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0x42522A47>         PropertyKeys;                    // type:MAP.ATBINARYMAP
	map<string, struct _0x4A7AD954>         InsertionPoints;                 // type:MAP.ATBINARYMAP
	struct uiObjectScopedBindingContext     BindingContext;                  // type:STRUCT.STRUCTURE
};

struct UITemplateDependencyResource : _0xAF24E56C
{
	struct UITemplate                Template;                        // type:STRUCT.STRUCTURE
};

struct UITemplateInstancingItem : UIInstancingItem
{
	string                                      NameOverride;                    // type:STRING.CONST_STRING
	string                                      Type;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x72E4314A>                   Properties;                      // type:ARRAY.ATARRAY
	array<struct uiInstancingMemberWrapper>     Bindings;                        // type:ARRAY.ATARRAY
	array<struct UIBehavior>                    Behaviors;                       // type:ARRAY.ATARRAY
	array<struct UIInstancingItem>              Insertion;                       // type:ARRAY.ATARRAY
	map<string, array<struct UIBehavior>>       InsertionBehaviors;              // type:MAP.ATBINARYMAP
};

struct UITemplateInstancingItemTargeted : _0x31F4CD9B
{
};

struct UITemplateStreamingDependencyResource : _0xFECF2F24
{
	struct UITemplate                Template;                        // type:STRUCT.STRUCTURE
};

struct UIText : UIObject
{
	struct uiFilterSet               FilterSet;                       // type:STRUCT.SIMPLE_POINTER
	string                           RawText;                         // type:STRING.POINTER
	string                           Text;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Font;                            // type:STRING.ATFINALHASHSTRING
	enum _0xD8F08236                 HAlign;                          // type:ENUM.32BIT
	enum _0x89310AF6                 VAlign;                          // type:ENUM.32BIT
	enum _0xF341A70D                 ParagraphStyle;                  // type:ENUM.32BIT
	enum _0x963897FF                 AutoSize;                        // type:ENUM.32BIT
	ushort                           FontSize;                        // type:USHORT.0
	uchar                            Outline;                         // type:UCHAR.0
	char                             LetterSpacing;                   // type:CHAR.0
	char                             LineSpacing;                     // type:CHAR.0
	bool                             IsRichText;                      // type:BOOL.0
	bool                             EnableEllipsis;                  // type:BOOL.0
	bool                             EnableLineCropping;              // type:BOOL.0
};

struct UITextStyleProperty : _0x05C33D80
{
	struct uiFilterSet               FilterSet;                       // type:STRUCT.SIMPLE_POINTER
	string                           Font;                            // type:STRING.ATFINALHASHSTRING
	enum _0xD8F08236                 HAlign;                          // type:ENUM.32BIT
	enum _0x89310AF6                 VAlign;                          // type:ENUM.32BIT
	uchar                            Outline;                         // type:UCHAR.0
	ushort                           FontSize;                        // type:USHORT.0
	char                             LineSpacing;                     // type:CHAR.0
	char                             LetterSpacing;                   // type:CHAR.0
	enum _0xF341A70D                 ParagraphStyle;                  // type:ENUM.32BIT
	enum _0x963897FF                 AutoSize;                        // type:ENUM.32BIT
};

struct UITiledImage : UIObject
{
	string                           TextureDictionary;               // type:STRING.ATNSHASHSTRING
	string                           TopLeftTexture;                  // type:STRING.ATNONFINALHASHSTRING
	string                           TopRightTexture;                 // type:STRING.ATNONFINALHASHSTRING
	string                           BottomLeftTexture;               // type:STRING.ATNONFINALHASHSTRING
	string                           BottomRightTexture;              // type:STRING.ATNONFINALHASHSTRING
	string                           RightTexture;                    // type:STRING.ATNONFINALHASHSTRING
	string                           LeftTexture;                     // type:STRING.ATNONFINALHASHSTRING
	string                           TopTexture;                      // type:STRING.ATNONFINALHASHSTRING
	string                           BottomTexture;                   // type:STRING.ATNONFINALHASHSTRING
	string                           CenterTexture;                   // type:STRING.ATNONFINALHASHSTRING
};

struct UITunables__Tunables : CTuning
{
	struct TextSettings              BlipsInText;                     // type:STRUCT.STRUCTURE
	struct TextSettings              ButtonsInText;                   // type:STRUCT.STRUCTURE
	struct TextSettings              IconsInDebugText;                // type:STRUCT.STRUCTURE
};

struct UIViewbox : _0x779794D8
{
};

struct UIWrapPanel : _0xBC87B2C5
{
	bool                             Virtualizing;                    // type:BOOL.0
};

struct UnapprovedCameraLists
{
	array<string>                    _0x0985EA47;                     // type:ARRAY.ATARRAY
};

struct VehicleFragImpulseFunction
{
	array<struct VehicleFragImpulseRange>     Ranges;                          // type:ARRAY.ATARRAY
};

struct VehicleFragImpulseRange
{
	float                            OutputMin;                       // type:FLOAT.0
	float                            OutputMax;                       // type:FLOAT.0
	float                            InputThreshold;                  // type:FLOAT.0
};

struct VfxLightningSettings
{
	int                              lightningOccurranceChance;       // type:INT.0
	float                            lightningShakeIntensity;         // type:FLOAT.0
	struct _0xA93F9D9B               lightningTimeCycleMods;          // type:STRUCT.STRUCTURE
	struct _0x9865E151               CloudBurstSettings;              // type:STRUCT.STRUCTURE
	struct _0x2411A3AB               StrikeSettings;                  // type:STRUCT.STRUCTURE
};

struct WaterData
{
	struct _0xED162196               _0x671C311C;                     // type:STRUCT.STRUCTURE
	array<struct _0x73C700A6>        WaterQuads;                      // type:ARRAY.ATARRAY
	array<struct _0x235B6093>        CalmingQuads;                    // type:ARRAY.ATARRAY
	array<struct _0xCB1B742F>        WaveQuads;                       // type:ARRAY.ATARRAY
	array<struct _0x33B14BF6>        _0xD6ACB936;                     // type:ARRAY.ATARRAY
};

struct WaypointControllerData
{
	string                           StandardWaypointStyle;           // type:STRING.ATNONFINALHASHSTRING
	string                           PosseWaypointStyle;              // type:STRING.ATNONFINALHASHSTRING
	string                           PointOfInterestStyle;            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    PointOfInterestLocations;        // type:ARRAY.ATARRAY
};

struct WeaponCopyConverter : _0xAB76836B
{
};

struct WeatherRemapTable
{
	array<struct _0xE558F5F2>        sets;                            // type:ARRAY.ATARRAY
};

struct WeightValueConversion : MeasurementValueConverterBase
{
};

struct _0x0009123A
{
	struct _0x5E913669               MotionSets;                      // type:STRUCT.STRUCTURE
	string                           _0x46415A64;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x59329FB3;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x71D83B37;                     // type:ARRAY.ATARRAY
	struct _0x08D8308B               _0xBE26149C;                     // type:STRUCT.POINTER
	struct _0x08D8308B               _0x3985D489;                     // type:STRUCT.POINTER
	struct _0x08D8308B               _0xC927AFB9;                     // type:STRUCT.POINTER
	struct _0xBF2BD132               _0x8321AA1D;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0xCD75F50F;                     // type:STRUCT.STRUCTURE
	float                            _0xD8465318;                     // type:FLOAT.0
	float                            _0x6601EBFC;                     // type:FLOAT.0
	float                            _0x55EF89FB;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x99F93E1D;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x656B378E;                     // type:STRUCT.STRUCTURE
	vec3                             _0x391E94FA;                     // type:VECTOR3.0
	struct _0xBF2BD132               _0xFE8EF9F4;                     // type:STRUCT.STRUCTURE
	vec3                             _0xA528AB2C;                     // type:VECTOR3.0
	struct _0xBF2BD132               _0xAF2A328F;                     // type:STRUCT.STRUCTURE
	vec3                             _0x227B73DB;                     // type:VECTOR3.0
	float                            _0x4F38B018;                     // type:FLOAT.0
	float                            _0xF70D6F4C;                     // type:FLOAT.0
	float                            _0x9FE99361;                     // type:FLOAT.0
	float                            _0x772A4FAA;                     // type:FLOAT.0
};

struct _0x000ABD42 : _0x810637E9
{
	enum _0xF44747D4                 ConditionTestType;               // type:ENUM.32BIT
};

struct _0x0026E5C0
{
	array<struct _0x0026E5C0>        Variations;                      // type:ARRAY.ATARRAY
	bitset<enum _0x89D9B8BD>         Tags;                            // type:BITSET.32BIT
	string                           Crime;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x002B40A1
{
	array<struct _0xC1439F1D>        Edges;                           // type:ARRAY.ATARRAY
	string                           ClothName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x002C4E1A : CNmParameter
{
	bool                             Start;                           // type:BOOL.0
};

struct _0x002F69AD
{
	bool                             _0xCB5B8687;                     // type:BOOL.0
	float                            _0x8A1B6947;                     // type:FLOAT.0
	float                            _0xF006ECCA;                     // type:FLOAT.0
	float                            _0xCFC785CB;                     // type:FLOAT.0
	float                            _0xB1315A6C;                     // type:FLOAT.0
	float                            _0xA38990A8;                     // type:FLOAT.0
	float                            _0x831DA7C0;                     // type:FLOAT.0
	float                            ScreenRatioForMinFootRoom;       // type:FLOAT.0
	float                            ScreenRatioForMaxFootRoom;       // type:FLOAT.0
	float                            ScreenRatioForMinFootRoomInTightSpace; // type:FLOAT.0
	float                            ScreenRatioForMaxFootRoomInTightSpace; // type:FLOAT.0
	float                            _0xED9ABE30;                     // type:FLOAT.0
	float                            _0xD1AA043A;                     // type:FLOAT.0
	float                            CameraRelativeVerticalOffset;    // type:FLOAT.0
	float                            _0x610EAF99;                     // type:FLOAT.0
	float                            _0x7BC67CF0;                     // type:FLOAT.0
	float                            _0xEA44BF01;                     // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
	bool                             _0x8FF4310A;                     // type:BOOL.0
	bool                             _0xF35C703F;                     // type:BOOL.0
};

struct _0x00390246 : _0xFECF2F24
{
};

struct _0x00392DE2
{
	uint                             _0x6EEE9457;                     // type:UINT.0
	uint                             _0xDE86A19C;                     // type:UINT.0
	uint                             _0x22F164CF;                     // type:UINT.0
	uint                             _0x4DB99C22;                     // type:UINT.0
	float                            _0x2AD99222;                     // type:FLOAT.0
};

struct _0x0041542F
{
	array<struct _0xED5FEF0D>        Zones;                           // type:ARRAY.ATARRAY
};

struct _0x0058C067
{
	bool                             _0xE696C32A;                     // type:BOOL.0
	bool                             _0xBA20D36D;                     // type:BOOL.0
	bool                             _0x6CE34426;                     // type:BOOL.0
	int                              _0xADF7BBEF;                     // type:INT.0
	bool                             _0xDB169F96;                     // type:BOOL.0
	bool                             _0xB7751400;                     // type:BOOL.0
};

struct _0x00614357
{
	float                            _0x31090734;                     // type:FLOAT.0
	float                            _0x19389269;                     // type:FLOAT.0
	float                            _0xF9661EC6;                     // type:FLOAT.0
	float                            _0xA6616FC2;                     // type:FLOAT.0
	float                            WideTargetAngularLimit;          // type:FLOAT.0
	float                            CycleTargetAngularLimit;         // type:FLOAT.0
	float                            CycleTargetAngularLimitMelee;    // type:FLOAT.0
	float                            _0xDE89AAC0;                     // type:FLOAT.0
	float                            _0xD3D40E5E;                     // type:FLOAT.0
	float                            _0xAD4FBA52;                     // type:FLOAT.0
	float                            _0xDF616220;                     // type:FLOAT.0
	float                            _0x0CDCC622;                     // type:FLOAT.0
	float                            _0x8A858209;                     // type:FLOAT.0
	float                            _0x518FD858;                     // type:FLOAT.0
	float                            _0x88DE23EF;                     // type:FLOAT.0
	float                            _0x596462A9;                     // type:FLOAT.0
	float                            _0xFCCE5AA1;                     // type:FLOAT.0
};

struct _0x0073AE9E : _0x3F8365DA
{
};

struct _0x0078A0ED
{
	uint                             color;                           // type:UINT.1
	float                            intensity;                       // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
};

struct _0x00811432 : CAICondition
{
	string                           Archetype;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0082334E
{
	uchar                            _0xD30E5863;                     // type:UCHAR.0
	uchar                            _0xD8515037;                     // type:UCHAR.0
	uchar                            _0x200E5190;                     // type:UCHAR.0
	uchar                            _0x972C44C3;                     // type:UCHAR.0
	uchar                            _0xC415DDE5;                     // type:UCHAR.0
	uchar                            _0xF31E904C;                     // type:UCHAR.0
	array<struct _0xFCB109FF>        _0xE509A044;                     // type:ARRAY.ATARRAY
	array<string>                    _0x61348292;                     // type:ARRAY.ATARRAY
};

struct _0x00826114 : _0xCEEEEBD6
{
	float                            _0x2A427594;                     // type:FLOAT.0
	float                            _0x43E5FFBA;                     // type:FLOAT.0
	bool                             _0x88475410;                     // type:BOOL.0
};

struct _0x0095F643 : _0xCDF97B9D
{
};

struct _0x009F356B
{
	map<string, struct _0xBF37328A>     _0x16837EEB;                     // type:MAP.ATBINARYMAP
};

struct _0x00A633EC : CTuning
{
	int                              _0x5691045F;                     // type:INT.0
	int                              _0x829C16DC;                     // type:INT.0
};

struct _0x00B81051 : _0x7535FFBE
{
	string                           NetworkId;                       // type:STRING.ATNONFINALHASHSTRING
	struct _0x607F15BC               _0x6BF167BE;                     // type:STRUCT.STRUCTURE
	bool                             _0x51E8EA6B;                     // type:BOOL.0
	bitset<enum _0xB4310725>         Fullbody;                        // type:BITSET.32BIT
	bool                             _0x88F63BB2;                     // type:BOOL.0
	array<struct _0x9BE88B89>        Clips;                           // type:ARRAY.ATARRAY
	array<struct _0xF318D152, 4>     _0x815401F4;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x00C81DD6 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x00D84D55
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct CAICondition              ActiveCondition;                 // type:STRUCT.POINTER
	array<struct _0xCFFCBFD4>        Pattern;                         // type:ARRAY.ATARRAY
	int                              _0xCA62C60E;                     // type:INT.0
};

struct _0x00D9C43E
{
	int                              _0x7308B0E8;                     // type:INT.0
	struct _0x4AD37C0A               _0x7D9CD75B;                     // type:STRUCT.POINTER
};

struct _0x00DBAA4A
{
	float                            _0xF8B68E4D;                     // type:FLOAT.0
	float                            _0xED636EA7;                     // type:FLOAT.0
	float                            _0xA7D141EB;                     // type:FLOAT.0
	float                            _0xA8475AA0;                     // type:FLOAT.0
	float                            _0xF96F4FC3;                     // type:FLOAT.0
	float                            _0xB5E73B19;                     // type:FLOAT.0
	float                            _0x2A562CB3;                     // type:FLOAT.0
	float                            _0xD7BF9605;                     // type:FLOAT.0
	float                            _0x80FD2B94;                     // type:FLOAT.0
	bool                             _0x35B7A2BD;                     // type:BOOL.0
	bool                             _0x968FCE77;                     // type:BOOL.0
	bool                             _0x67543924;                     // type:BOOL.0
	bool                             _0x8C9CFF44;                     // type:BOOL.0
};

struct _0x00DE4E3E
{
	float                            ValueForMin;                     // type:FLOAT.0
	float                            ValueForMax;                     // type:FLOAT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0x00E10AF1
{
	int                              iMinTime;                        // type:INT.0
	int                              iMaxTime;                        // type:INT.0
	float                            fRagdollScore;                   // type:FLOAT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailure;                // type:STRUCT.STRUCTURE
	struct _0xDF771251               BlendOutThreshold;               // type:STRUCT.STRUCTURE
};

struct _0x00E2058D
{
	float                            _0xDD6B6CE5;                     // type:FLOAT.0
	float                            _0xE57A3CA3;                     // type:FLOAT.0
	struct _0x9C07C204               col;                             // type:STRUCT.STRUCTURE
	uchar                            colA;                            // type:UCHAR.0
	string                           _0x6042ADFB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFBB9F310;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB1A712DB>        _0x06C03B4C;                     // type:ARRAY.ATARRAY
	struct _0xBF2BD132               _0x4556BBD5;                     // type:STRUCT.STRUCTURE
};

struct _0x00EAD092 : _0xBC5F7FDF
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x00F76674 : _0x2F7DA38D
{
};

struct _0x00FE98FF
{
	string                           _0x0F8C4E00;                     // type:STRING.ATNONFINALHASHSTRING
	matrix34V                        _0xE0FBD7E9;                     // type:MAT34V.0
};

struct _0x010A3A6A
{
	string                           BackupContent;                   // type:STRING.ATSTRING
	string                           ReadAs;                          // type:STRING.ATSTRING
};

struct _0x0137F773 : _0x9C7793A8
{
};

struct _0x01393259
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	ushort                           parentIndex;                     // type:USHORT.0
	ushort                           childIndex;                      // type:USHORT.0
	ushort                           siblingIndex;                    // type:USHORT.0
	ushort                           previousSiblingIndex;            // type:USHORT.0
	ushort                           attributeStart;                  // type:USHORT.0
	uchar                            attributeCount;                  // type:UCHAR.0
	bool                             isEnabled;                       // type:BOOL.0
};

struct _0x01485814
{
	array<vec3V>                     arPoints;                        // type:ARRAY.ATARRAY
	vec3V                            v3Center;                        // type:VEC3V.0
	float                            fMinZ;                           // type:FLOAT.0
	float                            fMaxZ;                           // type:FLOAT.0
	float                            fRadius;                         // type:FLOAT.0
	uchar                            uModifierType;                   // type:UCHAR.0
	uint                             uHullGroupSP;                    // type:UINT.0
	uint                             uHullGroupMP;                    // type:UINT.0
};

struct _0x0162A4D4 : _0x0F5161EB
{
	struct _0x0F5161EB               _0x9E823D63;                     // type:STRUCT.POINTER
	struct _0x0F5161EB               _0xABDBD816;                     // type:STRUCT.POINTER
};

struct _0x01686E3A
{
	vec3                             Offset;                          // type:VECTOR3.0
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
};

struct _0x016AF558
{
	string                           _0x18F928A0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x92436AB7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           FilterSet;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x017527BD
{
	float                            min;                             // type:FLOAT.0
	float                            max;                             // type:FLOAT.0
	float                            average;                         // type:FLOAT.0
	float                            std;                             // type:FLOAT.0
};

struct _0x017D45E5 : _0x23232399
{
};

struct _0x0181FF7C
{
	float                            _0xF036FB15;                     // type:FLOAT.0
	float                            _0x815A01E3;                     // type:FLOAT.0
	float                            _0xED05C919;                     // type:FLOAT.0
	float                            _0x2F5D6699;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xFF8FF68C;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xB7767D32;                     // type:ENUM.32BIT
};

struct _0x01843326
{
};

struct _0x018B2D1B : _0xDC10377E
{
	struct _0x92BDDB6F               _0x36DC8AD1;                     // type:STRUCT.STRUCTURE
	vec2                             _0xC4EE9375;                     // type:VECTOR2.0
	vec2                             _0x484024A0;                     // type:VECTOR2.0
	float                            _0x8710B6E1;                     // type:FLOAT.0
	float                            _0xCB3DF302;                     // type:FLOAT.0
	float                            _0x828F0A86;                     // type:FLOAT.0
	float                            _0xDCE5E0D3;                     // type:FLOAT.0
	float                            _0xA2425D33;                     // type:FLOAT.0
	float                            _0x9078FF7B;                     // type:FLOAT.0
	float                            _0xC285E749;                     // type:FLOAT.0
	float                            _0xADFF309B;                     // type:FLOAT.0
	float                            _0xE3A621F0;                     // type:FLOAT.0
	float                            _0x72040C85;                     // type:FLOAT.0
	float                            _0x161B1AA4;                     // type:FLOAT.0
	float                            _0x2EE3624E;                     // type:FLOAT.0
	float                            _0x5AF37E7D;                     // type:FLOAT.0
	float                            _0x993AE821;                     // type:FLOAT.0
	float                            _0xDAB2FB98;                     // type:FLOAT.0
	float                            MinPitchLimit;                   // type:FLOAT.0
	float                            MaxPitchLimit;                   // type:FLOAT.0
	float                            _0xC7A636EA;                     // type:FLOAT.0
	float                            _0x6E611F5D;                     // type:FLOAT.0
	float                            _0xCBD76535;                     // type:FLOAT.0
	float                            _0x2A06D229;                     // type:FLOAT.0
	float                            _0xE6BDF49C;                     // type:FLOAT.0
	float                            _0x83E15BA5;                     // type:FLOAT.0
	float                            _0x897BB60D;                     // type:FLOAT.0
	float                            _0x4A6B3341;                     // type:FLOAT.0
	float                            _0x9C21A88B;                     // type:FLOAT.0
	float                            _0xDD75369D;                     // type:FLOAT.0
	float                            _0x1AF41734;                     // type:FLOAT.0
	float                            _0x73A254C1;                     // type:FLOAT.0
	float                            _0x7AA44D92;                     // type:FLOAT.0
	float                            _0x40169BEB;                     // type:FLOAT.0
	float                            _0xF253B3C0;                     // type:FLOAT.0
	float                            _0xB37BC759;                     // type:FLOAT.0
	float                            _0x01119E3A;                     // type:FLOAT.0
	float                            _0x1D820B09;                     // type:FLOAT.0
	float                            _0x9CA773D9;                     // type:FLOAT.0
	uint                             _0xA38DA911;                     // type:UINT.0
	uint                             _0x9228EBFE;                     // type:UINT.0
	enum _0x0100F80E                 _0x3C70205E;                     // type:ENUM.32BIT
	string                           _0x6DAEC1E0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2CEA9172;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x018D8624
{
	enum eAnimBoneTag                Tag;                             // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0x01C57A62
{
	string                           MapType;                         // type:STRING.ATNONFINALHASHSTRING
	string                           RangeKey;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x01C660B4
{
	struct _0x09F08CB2               WeaponBlockingTestNormalFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestNormalHipFireFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestNormalIronSightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestCrouchFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestCrouchHipFireFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestCrouchIronSightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByFrontFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByFrontBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByFrontBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByBackLeftFixedOffsetRange_LeftHand; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByBackRightFixedOffsetRange_LeftHand; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByRearFrontLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByRearFrontRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByRearBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByRearBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByRearExteriorFrontFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByRearExteriorBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByRearExteriorBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByInteriorFrontLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByInteriorFrontRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByInteriorExteriorLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByInteriorExteriorLeftFixedOffsetRange_LeftHand; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByInteriorExteriorRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByInteriorExteriorRightFixedOffsetRange_LeftHand; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByExteriorFrontFrontFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByExteriorFrontBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByExteriorFrontBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByExteriorFrontFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByExteriorBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestDriveByExteriorBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestMountFrontFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestMountBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestMountBackLeftFixedOffsetRange_LeftHand; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestMountBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestMountBackRightFixedOffsetRange_LeftHand; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestCanoeFrontLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestCanoeFrontRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestCanoeBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestCanoeBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestBoatFrontLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestBoatFrontRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestBoatBackLeftFixedOffsetRange; // type:STRUCT.STRUCTURE
	struct _0x09F08CB2               WeaponBlockingTestBoatBackRightFixedOffsetRange; // type:STRUCT.STRUCTURE
	vec3V                            WeaponBlockingTestLeanForwardData; // type:VEC3V.0
};

struct _0x01E5527C
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0xC5356448;                     // type:FLOAT.0
	float                            _0x1443DE3D;                     // type:FLOAT.0
	float                            _0xFC5FC216;                     // type:FLOAT.0
	float                            _0x99C6E7C0;                     // type:FLOAT.0
	float                            _0xFCFDC3AD;                     // type:FLOAT.0
	float                            _0xB0C8D3B9;                     // type:FLOAT.0
	float                            _0xDEE7571B;                     // type:FLOAT.0
};

struct _0x01E6DBE8 : _0x4A7E9558
{
	string                           RouteName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x01EDA845
{
	string                           sName;                           // type:STRING.ATFINALHASHSTRING
	ushort                           iRows;                           // type:USHORT.0
	ushort                           iCols;                           // type:USHORT.0
	uint                             uTotalTiles;                     // type:UINT.0
	float                            fTileWidth;                      // type:FLOAT.0
	float                            fTileHeight;                     // type:FLOAT.0
	bool                             bUseOffsetTaps;                  // type:BOOL.0
};

struct _0x0200B851
{
	float                            _0x2251595B;                     // type:FLOAT.0
	float                            _0x3225BCEF;                     // type:FLOAT.0
	float                            _0x4149D923;                     // type:FLOAT.0
};

struct _0x020C69CB : _0xDC6D47C7
{
	struct _0x89164127               Compute;                         // type:STRUCT.POINTER
};

struct _0x02150C4F
{
	float                            _0x03C7C402;                     // type:FLOAT.0
	float                            _0xC401F5F2;                     // type:FLOAT.0
	float                            _0x8345736E;                     // type:FLOAT.0
	float                            _0xE092D0FB;                     // type:FLOAT.0
};

struct _0x02244FEA
{
	string                           id;                              // type:STRING.ATNSHASHSTRING
	uint                             _0xF77D88F7;                     // type:UINT.0
	uint64                           startTime;                       // type:UINT64.0
	uint64                           endTime;                         // type:UINT64.0
	array<struct _0x654A72FA>        goals;                           // type:ARRAY.ATARRAY
};

struct _0x023B7A6F : _0xF70F21F5
{
	struct _0x7438E446               _0xDA3E6D0E;                     // type:STRUCT.STRUCTURE
	struct _0xED16C5B0               _0x284CAC61;                     // type:STRUCT.STRUCTURE
	int                              _0xEF5C7EAF;                     // type:INT.0
};

struct _0x02441DD4
{
	float                            fStartTime;                      // type:FLOAT.0
	float                            fDuration;                       // type:FLOAT.0
};

struct _0x02506AC9 : CAICondition
{
	uchar                            Min;                             // type:UCHAR.0
};

struct _0x02541031 : _0x9BAA3031
{
	array<struct UITemplateInstancingItemTargeted>     Instancing;                      // type:ARRAY.ATARRAY
};

struct _0x02695822 : _0x6072C7BA
{
	string                           Path;                            // type:STRING.ATSTRING
};

struct _0x026B0B35
{
	array<struct _0x6750A20B>        Thresholds;                      // type:ARRAY.ATARRAY
};

struct _0x026E4B20 : _0x0F5161EB
{
	string                           EventName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0284F2DD
{
	float                            MinValueForCorrection;           // type:FLOAT.0
	float                            MaxValueForCorrection;           // type:FLOAT.0
	float                            MinRate;                         // type:FLOAT.0
	float                            MaxRate;                         // type:FLOAT.0
};

struct _0x02880EE3
{
	int                              _0x19647E41;                     // type:INT.0
	int                              _0x5D8910AF;                     // type:INT.0
	float                            _0x500CD2DC;                     // type:FLOAT.0
	float                            _0x2433ECD7;                     // type:FLOAT.0
	float                            _0xEEEC3E33;                     // type:FLOAT.0
	float                            _0x299207CA;                     // type:FLOAT.0
	float                            _0xC32D23E1;                     // type:FLOAT.0
	float                            _0xCF43E284;                     // type:FLOAT.0
	int                              _0xE48C0A45;                     // type:INT.0
	float                            _0x4BBB33DF;                     // type:FLOAT.0
	float                            _0xD69AAC0E;                     // type:FLOAT.0
	float                            _0xA4FBC54F;                     // type:FLOAT.0
	int                              _0x851B84AE;                     // type:INT.0
};

struct _0x02953222 : _0x8A0DC979
{
	enum _0x5B754EBB                 Context;                         // type:ENUM.32BIT
};

struct _0x029A4C1D
{
	string                                        key;                             // type:STRING.ATNONFINALHASHSTRING
	enum eCollectableUniqueFindAndTurnInState     state;                           // type:ENUM.32BIT
};

struct _0x029FF69C
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
};

struct _0x02B19E98
{
	float                            MaxDotToStartFromAnalyze;        // type:FLOAT.0
	float                            MaxDotToContinueFromAnalyze;     // type:FLOAT.0
	float                            MinTargetSpeedToStartFromPursue; // type:FLOAT.0
	float                            MinTargetSpeedToContinueFromPursue; // type:FLOAT.0
};

struct _0x02EE09EA : _0x5EC12A8F
{
};

struct _0x02FEFAEA : CTuning
{
	float                            _0xCC94F072;                     // type:FLOAT.0
	float                            _0x38E9AA97;                     // type:FLOAT.0
};

struct _0x02FF006C
{
	enum _0x6BCA108F                 EaseType;                        // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x93EBE9D3;                     // type:ENUM.32BIT
	float                            _0xAB49B50C;                     // type:FLOAT.0
	float                            _0x18FEC063;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x8089889D;                     // type:FLOAT.0
	uint                             _0xC0BB8518;                     // type:UINT.0
};

struct _0x032DA011 : _0xAA28D7FA
{
	bitset<enum _0x72A5559C>            Options;                         // type:BITSET.32BIT
	float                               _0xB585AE3E;                     // type:FLOAT.2
	vec2                                _0x5D74C73E;                     // type:VECTOR2.0
	vec2                                _0xFFBCDA35;                     // type:VECTOR2.0
	map<string, struct _0xAD66FEC1>     Transitions;                     // type:MAP.ATBINARYMAP
	string                              _0xC27479D9;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xD78C43E8;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x24990CA9;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x93EFCF2E;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x5C27E028;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x2A9B9E2A;                     // type:STRING.ATNONFINALHASHSTRING
	float                               _0x45DAF760;                     // type:FLOAT.0
	float                               _0x01BAF122;                     // type:FLOAT.0
	float                               _0x312C612C;                     // type:FLOAT.0
	float                               _0x2CA88AE7;                     // type:FLOAT.0
	float                               _0x7E7B3741;                     // type:FLOAT.0
	float                               _0xA09E8C6B;                     // type:FLOAT.0
	float                               _0x0ECAB036;                     // type:FLOAT.0
	float                               _0x543E555B;                     // type:FLOAT.0
	float                               _0x31F59131;                     // type:FLOAT.0
};

struct _0x03357797
{
	map<string, struct _0x274D7A77>               _0x339CD980;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xF0C4DF63>               _0x785D3205;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, struct _0xB0B11D26>     _0xE2FF58C2;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, struct _0x4AAAE2C4>     _0x9DDD12C3;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, struct _0x40659780>     _0x6002BB90;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x51786423>               _0xDBE8203A;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, struct _0x7DE5268B>     _0x9B518972;                     // type:MAP.ATBINARYMAP
	struct _0xC4AB34F0                            _0xBA5518E2;                     // type:STRUCT.STRUCTURE
};

struct _0x0349DCE2 : _0xB88D6BEE
{
	string                           TriggerInterval;                 // type:STRING.ATNONFINALHASHSTRING
};

struct _0x03571633 : _0x6002A167
{
};

struct _0x03810EA5
{
	int                              iMinTimeBetweenUpdatesMs;        // type:INT.0
	float                            fSurfaceTestBelowHeight;         // type:FLOAT.0
	float                            fSurfaceTestBelowHeightScript;   // type:FLOAT.0
	float                            fSurfaceTestAboveHeight;         // type:FLOAT.0
	float                            fSurfaceTestCapsuleRadius;       // type:FLOAT.0
	float                            fSurfaceTestHeightTolerance;     // type:FLOAT.0
	float                            fVehicleSurfaceTestHeightTolerance; // type:FLOAT.0
	float                            fCoverTestStartProbeHeight;      // type:FLOAT.0
	float                            fCoverTestLowHeight;             // type:FLOAT.0
	float                            fCoverTestHighHeight;            // type:FLOAT.0
	float                            fCoverTestCapsuleRadius;         // type:FLOAT.0
	float                            fVantageTestHeight;              // type:FLOAT.0
	float                            fVantageTestCapsuleRadius;       // type:FLOAT.0
	float                            _0xE6CC41BD;                     // type:FLOAT.0
	float                            fSweptSegmentVantageTestHeight;  // type:FLOAT.0
	float                            _0x5D49DA59;                     // type:FLOAT.0
	float                            fMinSegmentGapToAimFromHigh;     // type:FLOAT.0
	float                            _0x22822C67;                     // type:FLOAT.0
	float                            _0x831DDD99;                     // type:FLOAT.0
	float                            fMinDistanceToPlayerForScriptedPoints; // type:FLOAT.0
	bool                             _0x41A25FA6;                     // type:BOOL.0
	bool                             _0x1DAAD160;                     // type:BOOL.0
};

struct _0x03856E3C
{
	float                            ptFxProbability;                 // type:FLOAT.0
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0xB3AABF84;                     // type:ENUM.32BIT
	vec3                             _0xA0F64103;                     // type:VECTOR3.0
	vec3                             _0x44379C4A;                     // type:VECTOR3.0
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0xE1D889E5;                     // type:FLOAT.0
	string                           _0xD3E02B29;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x03916DEA
{
	vec3                             Offset;                          // type:VECTOR3.0
	float                            _0xCCB6BFE8;                     // type:FLOAT.0
	uint                             BlendInTime;                     // type:UINT.0
	uint                             BlendOutTime;                    // type:UINT.0
};

struct _0x03991655 : _0x2F7DA38D
{
	enum _0x765B84FF                 actionType;                      // type:ENUM.32BIT
};

struct _0x03A83D72
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	enum eMissionRating              rating;                          // type:ENUM.32BIT
	uint                             timestamp;                       // type:UINT.0
};

struct _0x03AFFA1E
{
	bitset<enum _0x05DA4244>         Flags;                           // type:BITSET.32BIT
	enum _0xB58106CE                 _0x6F56104A;                     // type:ENUM.32BIT
	float                            _0x37378E2E;                     // type:FLOAT.0
};

struct _0x03B823F0
{
	string                           SwapName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           BaseName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x03D46E28 : UIBehavior
{
	string                           Texture;                         // type:STRING.ATNONFINALHASHSTRING
	int                              _0xBBD642F1;                     // type:INT.0
	int                              _0xF7C97423;                     // type:INT.0
	int                              _0x7ECF0AEE;                     // type:INT.0
};

struct _0x03E01F3C : CCollectableBase
{
	string                           LocText;                         // type:STRING.ATNONFINALHASHSTRING
	string                           DescriptionText;                 // type:STRING.ATNONFINALHASHSTRING
};

struct _0x03E3A9D0
{
	struct _0xBF2BD132               _0xF8EDCAE8;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x06664C81;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x4355E594;                     // type:STRUCT.STRUCTURE
	array<uchar, 4>                  Frames;                          // type:ARRAY.ATRANGEARRAY
};

struct _0x03E3C77E
{
	string                           _0xDB614E6A;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             Value;                           // type:BOOL.0
};

struct _0x03ED1983 : _0x7EAFD12D
{
	struct _0x861A2DEA               Filter;                          // type:STRUCT.STRUCTURE
};

struct _0x03EFF64E : CTuning
{
	bool                             _0x55AAC2F4;                     // type:BOOL.0
	float                            _0xCA84A8D8;                     // type:FLOAT.0
	float                            _0x1DC94110;                     // type:FLOAT.0
	float                            _0x55C20D0C;                     // type:FLOAT.0
	float                            _0x3F2B7DFC;                     // type:FLOAT.0
	uint                             _0x616F90C1;                     // type:UINT.0
	uint                             _0x6655D586;                     // type:UINT.0
	enum _0x6BCA108F                 _0xA09FF6D0;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xB3B42198;                     // type:ENUM.32BIT
	float                            _0x17B68133;                     // type:FLOAT.0
	float                            _0xEAB1B57F;                     // type:FLOAT.0
	uint                             _0xFC26902C;                     // type:UINT.0
	uint                             _0x3D6BE54E;                     // type:UINT.0
	float                            _0x152F5634;                     // type:FLOAT.0
	float                            _0x18DE6271;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x92083DCB;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xF558CF60;                     // type:ENUM.32BIT
};

struct _0x03FEEE17
{
	struct _0xD0DF1E98               staticBoundsCache;               // type:STRUCT.STRUCTURE
	struct _0xB0C43A9E               mapDataCache;                    // type:STRUCT.STRUCTURE
	struct _0x7BF8A210               interiorProxyCache;              // type:STRUCT.STRUCTURE
};

struct _0x040B8E11 : _0x12604662
{
};

struct _0x041596EA : _0xE521CAA8
{
	string                           ID;                              // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0416E6E8
{
	enum _0xFB8561BD                 WeaponType;                      // type:ENUM.32BIT
	enum eWeaponAttachPoint          EquippedAttachPoint;             // type:ENUM.32BIT
	enum eWeaponAttachPoint          PendingAttachPoint;              // type:ENUM.32BIT
};

struct _0x044807AB
{
	float                            _0x22EB0BD8;                     // type:FLOAT.0
	float                            _0xD013555A;                     // type:FLOAT.0
	float                            _0x8C82B6E1;                     // type:FLOAT.0
	float                            _0x9DFA6F2F;                     // type:FLOAT.0
	float                            _0xF7CD7C70;                     // type:FLOAT.0
	float                            _0x5616C48F;                     // type:FLOAT.0
	float                            _0xC308190F;                     // type:FLOAT.0
	int                              _0x3FE3A1C6;                     // type:INT.0
	int                              _0xF3D4C1E0;                     // type:INT.0
	float                            _0x6F0DBB2D;                     // type:FLOAT.0
	float                            _0x5B24010B;                     // type:FLOAT.0
	float                            _0x1FF39685;                     // type:FLOAT.0
	float                            _0x89D32DBC;                     // type:FLOAT.0
	float                            _0x53D8275C;                     // type:FLOAT.0
	float                            _0xEA8E86F2;                     // type:FLOAT.0
	float                            _0x8FD27875;                     // type:FLOAT.0
	float                            _0xB1824A28;                     // type:FLOAT.0
	float                            _0x860584CD;                     // type:FLOAT.0
	float                            _0x55794A4D;                     // type:FLOAT.0
	float                            _0x37F54F9D;                     // type:FLOAT.0
	float                            _0xF7A87913;                     // type:FLOAT.0
	float                            _0xC6DA2907;                     // type:FLOAT.0
	float                            _0x00FB19A0;                     // type:FLOAT.0
	float                            _0x8FF6CBF6;                     // type:FLOAT.0
	float                            _0x05E67A48;                     // type:FLOAT.0
	float                            _0xBB010B20;                     // type:FLOAT.0
	float                            _0x5DF9472B;                     // type:FLOAT.0
	float                            _0xE02930DA;                     // type:FLOAT.0
	uchar                            _0xD33651E3;                     // type:UCHAR.0
	float                            _0x089A0378;                     // type:FLOAT.0
	float                            _0x8CCF92D4;                     // type:FLOAT.0
	float                            _0xE5A006E6;                     // type:FLOAT.0
	float                            _0x75B7B1AA;                     // type:FLOAT.0
	float                            _0x36212297;                     // type:FLOAT.0
	float                            _0xF5FA4B86;                     // type:FLOAT.0
	float                            _0x886D8CDE;                     // type:FLOAT.0
	float                            _0x1EC201E7;                     // type:FLOAT.0
	float                            _0x6BA72770;                     // type:FLOAT.0
	float                            _0x8463E8D8;                     // type:FLOAT.0
	float                            _0x00E0B4E0;                     // type:FLOAT.0
	float                            _0x618E496C;                     // type:FLOAT.0
	float                            _0x876CF0F7;                     // type:FLOAT.0
	float                            _0xD733C7F0;                     // type:FLOAT.0
	float                            _0x14255D8E;                     // type:FLOAT.0
	float                            _0x3E563A53;                     // type:FLOAT.0
	float                            _0x252E2DDE;                     // type:FLOAT.0
	float                            _0x22BCA167;                     // type:FLOAT.0
	float                            _0xFB54857A;                     // type:FLOAT.0
	float                            _0x8CB29F50;                     // type:FLOAT.0
	float                            _0xFD31BC70;                     // type:FLOAT.0
	float                            _0x8AFD40B9;                     // type:FLOAT.0
	float                            _0xB7FF4A2C;                     // type:FLOAT.0
	float                            _0x8A57F526;                     // type:FLOAT.0
	float                            _0x048443D7;                     // type:FLOAT.0
	float                            _0x1A99FB69;                     // type:FLOAT.0
	float                            _0x31D322B1;                     // type:FLOAT.0
	float                            _0x61F973D8;                     // type:FLOAT.0
	float                            _0x624AB2A6;                     // type:FLOAT.0
	float                            _0xACCDC54B;                     // type:FLOAT.0
	float                            _0x373E2F16;                     // type:FLOAT.0
	float                            _0x77350C46;                     // type:FLOAT.0
	float                            _0x10E746F6;                     // type:FLOAT.0
	float                            _0xCAFFB38D;                     // type:FLOAT.0
	float                            _0x3778B833;                     // type:FLOAT.0
	float                            _0x886C4CFD;                     // type:FLOAT.0
	float                            _0x01C9EA1E;                     // type:FLOAT.0
	float                            _0x4BD5AD9D;                     // type:FLOAT.0
	float                            _0xCDF6D096;                     // type:FLOAT.0
	float                            _0x74CCDB0B;                     // type:FLOAT.0
	float                            _0x5E9D6902;                     // type:FLOAT.0
	float                            _0x0036C6F2;                     // type:FLOAT.0
	float                            _0x398AC8FE;                     // type:FLOAT.0
	int                              _0x8B695266;                     // type:INT.0
	float                            _0x9476E937;                     // type:FLOAT.0
	float                            _0x9F4B2E46;                     // type:FLOAT.0
	float                            _0x26E2A4A2;                     // type:FLOAT.0
	float                            _0x12FB61C8;                     // type:FLOAT.0
	float                            _0x5D5F34A8;                     // type:FLOAT.0
	float                            _0x58B21385;                     // type:FLOAT.0
	float                            _0x1631891F;                     // type:FLOAT.0
	float                            _0xFD88501A;                     // type:FLOAT.0
	float                            _0x801C2AA4;                     // type:FLOAT.0
	float                            _0xFBBDA71B;                     // type:FLOAT.0
	bool                             _0x5D5DE737;                     // type:BOOL.0
	bool                             _0xEA42BEFA;                     // type:BOOL.0
	bool                             _0xC002DABB;                     // type:BOOL.0
	bool                             _0xC0E894B0;                     // type:BOOL.0
	uint                             _0xF2FC4479;                     // type:UINT.1
	uint                             _0x7EB08C13;                     // type:UINT.1
	string                           _0x1441A011;                     // type:STRING.CONST_STRING
	string                           _0x6CF8A2E6;                     // type:STRING.CONST_STRING
	string                           _0xA4240499;                     // type:STRING.CONST_STRING
	string                           _0x49C013BC;                     // type:STRING.CONST_STRING
	string                           _0x18CAE271;                     // type:STRING.CONST_STRING
	string                           _0xE97E753C;                     // type:STRING.CONST_STRING
	float                            _0x8911C5AB;                     // type:FLOAT.0
	float                            _0x304D0A14;                     // type:FLOAT.0
	float                            _0xC082D92E;                     // type:FLOAT.0
	float                            _0x83EE2BA4;                     // type:FLOAT.0
	int                              _0xD668BC4C;                     // type:INT.0
	int                              _0xB5A22C6F;                     // type:INT.0
	int                              _0x812C7811;                     // type:INT.0
	int                              _0xDBB2DB03;                     // type:INT.0
	float                            _0xCB0CF257;                     // type:FLOAT.0
	float                            _0x0BB0EA93;                     // type:FLOAT.0
	float                            _0x9C10C35A;                     // type:FLOAT.0
	float                            _0x72318B84;                     // type:FLOAT.0
	float                            _0xB2E92764;                     // type:FLOAT.0
	float                            _0x1C49DC7E;                     // type:FLOAT.0
	float                            _0x20A66DA2;                     // type:FLOAT.0
	float                            _0xBD1AD62F;                     // type:FLOAT.0
	vec2                             _0xC898B3F3;                     // type:VECTOR2.0
	uint                             _0x19F7BCF4;                     // type:UINT.1
	struct _0x50BBC443               _0x1652FE32;                     // type:STRUCT.STRUCTURE
};

struct _0x044AFF2E : CTuning
{
	float                            _0x7447E4AB;                     // type:FLOAT.0
	float                            _0xD12778D5;                     // type:FLOAT.0
	float                            _0x51319ABA;                     // type:FLOAT.0
	float                            _0x9D0AE205;                     // type:FLOAT.0
	float                            _0xF1AFECEB;                     // type:FLOAT.0
	float                            _0xB950FBE7;                     // type:FLOAT.0
	float                            _0x0B33A5D2;                     // type:FLOAT.0
	float                            _0x9E247F69;                     // type:FLOAT.0
	float                            _0x80E11517;                     // type:FLOAT.0
	float                            _0x552F71D1;                     // type:FLOAT.0
	float                            _0x0FCB412C;                     // type:FLOAT.0
	float                            _0x52660B3B;                     // type:FLOAT.0
	float                            _0x65BF161F;                     // type:FLOAT.0
	float                            _0x290F56E4;                     // type:FLOAT.0
	float                            _0xBCA9824B;                     // type:FLOAT.0
	float                            _0xA8415037;                     // type:FLOAT.0
	float                            _0x4CD08F79;                     // type:FLOAT.0
	float                            _0x45477498;                     // type:FLOAT.0
	float                            _0xD1A63653;                     // type:FLOAT.0
	float                            _0x0E12C3AA;                     // type:FLOAT.0
	float                            _0xA882D033;                     // type:FLOAT.0
	float                            _0x48A5FA3D;                     // type:FLOAT.0
	float                            _0xCB93C4CC;                     // type:FLOAT.0
	float                            _0x5AB662D6;                     // type:FLOAT.0
	float                            _0xA37F64C9;                     // type:FLOAT.0
	uint                             _0xF5590AF7;                     // type:UINT.0
	uint                             _0xFED45CFC;                     // type:UINT.0
	uint                             _0x3240390A;                     // type:UINT.0
	uint                             _0x416BBE7B;                     // type:UINT.0
	uint                             _0xF2FB8678;                     // type:UINT.0
	uint                             _0x513610BA;                     // type:UINT.0
	float                            _0x6B7C4D21;                     // type:FLOAT.0
	float                            _0xEDA8C2D5;                     // type:FLOAT.0
	float                            _0xF297B05A;                     // type:FLOAT.0
	float                            _0x441F0D47;                     // type:FLOAT.0
	float                            _0xA4737BC0;                     // type:FLOAT.0
	float                            _0x4FE33E83;                     // type:FLOAT.0
	float                            _0xE7DE9241;                     // type:FLOAT.0
	float                            _0x29ACFC29;                     // type:FLOAT.0
	float                            _0x1D53A8F7;                     // type:FLOAT.0
	float                            _0x29EF7706;                     // type:FLOAT.0
	float                            _0x37AA24AC;                     // type:FLOAT.0
	float                            _0x597CB99E;                     // type:FLOAT.0
	float                            _0x3285942B;                     // type:FLOAT.0
	float                            _0xC55B9318;                     // type:FLOAT.0
	float                            _0xBFDC0DED;                     // type:FLOAT.0
	float                            _0x8C054EFD;                     // type:FLOAT.0
	float                            _0x4F30BF4B;                     // type:FLOAT.0
	float                            _0x0F53077F;                     // type:FLOAT.0
	float                            _0x3E1DACDA;                     // type:FLOAT.0
	float                            _0xF401AFF4;                     // type:FLOAT.0
	float                            _0x66FB5302;                     // type:FLOAT.0
	float                            _0x2430FCCA;                     // type:FLOAT.0
	float                            _0xEAE6D3A1;                     // type:FLOAT.0
	float                            _0x7E3511FA;                     // type:FLOAT.0
	float                            _0x5E0C00BE;                     // type:FLOAT.0
	float                            _0x17843501;                     // type:FLOAT.0
	float                            _0x51085A8B;                     // type:FLOAT.0
	float                            _0x66E00FE1;                     // type:FLOAT.0
	float                            _0x55143D54;                     // type:FLOAT.0
	float                            _0x44315E95;                     // type:FLOAT.0
	float                            _0xE3E82266;                     // type:FLOAT.0
	float                            _0x42FB6E9A;                     // type:FLOAT.0
	float                            _0x26FA4C5B;                     // type:FLOAT.0
	float                            _0xBA6FB8F8;                     // type:FLOAT.0
	float                            _0x97635BE5;                     // type:FLOAT.0
	float                            _0x3EA4BF58;                     // type:FLOAT.0
	float                            _0x0FB91283;                     // type:FLOAT.0
	float                            _0x8EFD546D;                     // type:FLOAT.0
	float                            _0xDAB1D841;                     // type:FLOAT.0
	float                            _0x339BC34C;                     // type:FLOAT.0
	float                            _0x240BBD5A;                     // type:FLOAT.0
	struct _0xA9466596               _0x37EADE85;                     // type:STRUCT.STRUCTURE
	struct _0xA9466596               _0x2EA12BDD;                     // type:STRUCT.STRUCTURE
	struct _0x33C3AE23               _0x31515A50;                     // type:STRUCT.STRUCTURE
	struct _0x33C3AE23               _0xD1743E49;                     // type:STRUCT.STRUCTURE
	struct _0x33C3AE23               _0xAA4FDC64;                     // type:STRUCT.STRUCTURE
};

struct _0x045212A8
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             VariationPctg;                   // type:UINT.0
	array<struct _0xB199F70A>        Breeds;                          // type:ARRAY.ATARRAY
};

struct _0x045A96B5
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xA7D663F0>        items;                           // type:ARRAY.ATARRAY
};

struct _0x0464303A : _0x1054F746
{
};

struct _0x0468324F
{
	string                           Template;                        // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0x047BBA62 : _0x61D1AAB0
{
};

struct _0x048EF559 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x04ACA6F1
{
	string                           LeftQuadrant;                    // type:STRING.ATNONFINALHASHSTRING
	string                           MiddleLeftQuadrant;              // type:STRING.ATNONFINALHASHSTRING
	string                           MiddleRightQuadrant;             // type:STRING.ATNONFINALHASHSTRING
	string                           RightQuadrant;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x04B31BA6
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x04C979A6 : _0x1619E486
{
};

struct _0x04DFBC35 : _0x8A0DC979
{
	enum eCompendiumCategories       Category;                        // type:ENUM.32BIT
};

struct _0x04E5E722 : _0x33550CA9
{
};

struct _0x04F45418
{
	array<vec3>                      ZoneAreaHull;                    // type:ARRAY.ATARRAY
};

struct _0x050E1B8D
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x1228221F               HighLimit;                       // type:STRUCT.STRUCTURE
	struct _0x1228221F               MediumLimit;                     // type:STRUCT.STRUCTURE
	struct _0x1228221F               LowLimit;                        // type:STRUCT.STRUCTURE
	struct _0x1228221F               PassiveLimit;                    // type:STRUCT.STRUCTURE
};

struct _0x0510FC23 : _0x8148C135
{
	struct _0x6FEC1103               params;                          // type:STRUCT.STRUCTURE
	string                           templateName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x051AC946 : _0x560C9F87
{
};

struct _0x051F2D1A
{
	string                           VoiceLocalizationValue;          // type:STRING.ATNONFINALHASHSTRING
	int                              VoiceIndex;                      // type:INT.0
	string                           DiscoverableItem;                // type:STRING.ATNONFINALHASHSTRING
	string                           UndiscoveredName;                // type:STRING.ATNONFINALHASHSTRING
	string                           AlternativeMpDiscoverableItem;   // type:STRING.ATNONFINALHASHSTRING
	bool                             NumberDuplicateLocalizationValue; // type:BOOL.0
	bool                             _0xAB1ED9BE;                     // type:BOOL.0
	bool                             MPEnabledDiscoverability;        // type:BOOL.0
};

struct _0x053303F2
{
	enum _0xD9E68380                 Type;                            // type:ENUM.32BIT
	string                           TextId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           MPTextId;                        // type:STRING.ATNONFINALHASHSTRING
	string                           TextIdIfOwned;                   // type:STRING.ATNONFINALHASHSTRING
	string                           TextIdIfBuying;                  // type:STRING.ATNONFINALHASHSTRING
	string                           TextIdIfBuyingWithGold;          // type:STRING.ATNONFINALHASHSTRING
	string                           TextIdSharedPickupAndLootPrompt; // type:STRING.ATNONFINALHASHSTRING
	string                           TextThrowId;                     // type:STRING.ATNONFINALHASHSTRING
	string                           TextThrowOrPlaceId;              // type:STRING.ATNONFINALHASHSTRING
	string                           TextIdIfAlive;                   // type:STRING.ATNONFINALHASHSTRING
	string                           TextIdIfUnconscious;             // type:STRING.ATNONFINALHASHSTRING
	string                           TextIdSwap;                      // type:STRING.ATNONFINALHASHSTRING
	string                           ConditionalTextIdSelector;       // type:STRING.ATNONFINALHASHSTRING
	float                            Radius;                          // type:FLOAT.0
	float                            CloseRadius;                     // type:FLOAT.0
	float                            FromTransportCloseRadius;        // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
	string                           OverrideActivationTime;          // type:STRING.ATNONFINALHASHSTRING
	float                            ActivationAngle;                 // type:FLOAT.0
	float                            FromTransportActivationAngle;    // type:FLOAT.0
	float                            BoneActivationAngle;             // type:FLOAT.0
	float                            LookAngle;                       // type:FLOAT.0
	float                            FromTransportLookAngle;          // type:FLOAT.0
	float                            FacingScoreModifier;             // type:FLOAT.0
	float                            RestrictPromptAngleToRootUp;     // type:FLOAT.0
	float                            MaxHorizontalDistance;           // type:FLOAT.0
	string                           SharedUseContextTag;             // type:STRING.ATNONFINALHASHSTRING
	string                           PromptTag;                       // type:STRING.ATSTRING
	bitset<enum _0xCC600A5C>         Flags;                           // type:BITSET.32BIT
};

struct _0x053B3B12
{
	struct _0xA2CB7B84               Path;                            // type:STRUCT.STRUCTURE
	bool                             _0x571E7C02;                     // type:BOOL.0
	bool                             _0xABA73669;                     // type:BOOL.0
};

struct _0x0560D6E6 : _0xDFE4E23E
{
	enum _0x729D6EED                 Operation;                       // type:ENUM.32BIT
	float                            fValue;                          // type:FLOAT.0
};

struct _0x056E124F
{
	float                            _0xDC4FE77D;                     // type:FLOAT.0
	float                            _0x7AD6CB39;                     // type:FLOAT.0
	float                            _0xC1088247;                     // type:FLOAT.0
	float                            _0x2466B25F;                     // type:FLOAT.0
	float                            _0x5BBFE0D9;                     // type:FLOAT.0
	float                            _0xCAEA82AA;                     // type:FLOAT.0
	float                            _0x4D9C47DB;                     // type:FLOAT.0
	float                            _0x5B28E428;                     // type:FLOAT.0
	float                            _0xE4230B8E;                     // type:FLOAT.0
	float                            _0x6CECF2EC;                     // type:FLOAT.0
	float                            _0xFD7C26E5;                     // type:FLOAT.0
	float                            _0x8B4BDAE7;                     // type:FLOAT.0
	float                            _0xF2EA0CDD;                     // type:FLOAT.0
	float                            _0xAD27C182;                     // type:FLOAT.0
	float                            _0x8EDC8F99;                     // type:FLOAT.0
	float                            _0x0E5532A9;                     // type:FLOAT.0
	float                            _0xC50CE58F;                     // type:FLOAT.0
	float                            _0xC908529A;                     // type:FLOAT.0
	float                            _0x8ABE7C05;                     // type:FLOAT.0
	float                            _0x90A29E89;                     // type:FLOAT.0
	float                            _0xCC2DFC22;                     // type:FLOAT.0
	float                            _0xAC368277;                     // type:FLOAT.0
	float                            _0x8EB9BE15;                     // type:FLOAT.0
	float                            _0x9B7CE9BC;                     // type:FLOAT.0
	float                            _0x36563E1F;                     // type:FLOAT.0
	float                            _0x3492B923;                     // type:FLOAT.0
	float                            _0x9843DAE8;                     // type:FLOAT.0
	float                            _0xC0988B02;                     // type:FLOAT.0
	float                            _0xD4E5EEE8;                     // type:FLOAT.0
	float                            _0x6C30B95A;                     // type:FLOAT.0
	float                            _0xBB80248F;                     // type:FLOAT.0
	float                            _0x10A26716;                     // type:FLOAT.0
	float                            _0x03481DB3;                     // type:FLOAT.0
	float                            _0x6822BE90;                     // type:FLOAT.0
	float                            _0x5BA6ACD9;                     // type:FLOAT.0
	float                            _0x4832C7A5;                     // type:FLOAT.0
	float                            _0x263238EC;                     // type:FLOAT.0
	float                            _0xC63EC060;                     // type:FLOAT.0
	uint                             _0xAF986A00;                     // type:UINT.0
	uint                             _0xCB4FD932;                     // type:UINT.0
	uint                             _0x30FF9676;                     // type:UINT.0
	uint                             _0x5CFA7A79;                     // type:UINT.0
	uint                             _0x28AD8311;                     // type:UINT.0
	uint                             _0x7985E203;                     // type:UINT.0
	uint                             _0x5ED3EE7D;                     // type:UINT.0
	uint                             _0x33469C73;                     // type:UINT.0
	uint                             _0x6D90E054;                     // type:UINT.0
	uint                             _0x3B952967;                     // type:UINT.0
};

struct _0x0572459B
{
	array<struct _0x23ECA058>        _0xE1A3DA30;                     // type:ARRAY.ATARRAY
	uint                             ScenarioName;                    // type:UINT.0
	uchar                            _0xF6130BE8;                     // type:UCHAR.0
};

struct _0x057388BD : CTuning
{
	float                            _0xE13A5E89;                     // type:FLOAT.0
	float                            _0xCAC03231;                     // type:FLOAT.0
	float                            _0xCEF6FE71;                     // type:FLOAT.0
	float                            _0x87040E04;                     // type:FLOAT.0
	float                            RootMinLimitScale;               // type:FLOAT.0
	float                            RootMaxLimitScale;               // type:FLOAT.0
	float                            _0x4B72D6F2;                     // type:FLOAT.0
	float                            _0x6A9795CC;                     // type:FLOAT.0
	float                            _0xD67E06EC;                     // type:FLOAT.0
	float                            _0xE5E5F3CB;                     // type:FLOAT.0
	float                            _0x2748D342;                     // type:FLOAT.0
	float                            _0x6A5D8A95;                     // type:FLOAT.0
	float                            _0x7C12FED6;                     // type:FLOAT.0
	float                            _0xD678323D;                     // type:FLOAT.0
	float                            _0x0BC66B44;                     // type:FLOAT.0
	float                            _0xB712A221;                     // type:FLOAT.0
	float                            _0xD93C4AA6;                     // type:FLOAT.0
	float                            _0xA76643A1;                     // type:FLOAT.0
	float                            _0xF0F4E6A0;                     // type:FLOAT.0
	float                            _0x64C62EAD;                     // type:FLOAT.0
	float                            _0xCD6E9BDD;                     // type:FLOAT.0
	float                            _0x5214576B;                     // type:FLOAT.0
	float                            _0xE4C49AC2;                     // type:FLOAT.0
};

struct _0x0573C43B
{
	array<struct _0x31488BDE>        Sources;                         // type:ARRAY.ATARRAY
	enum _0x83B2E5BE                 Gesture;                         // type:ENUM.32BIT
	bitset<enum _0x30094C2F>         Flags;                           // type:BITSET.32BIT
	uint                             TimeDuration;                    // type:UINT.0
	float                            Radius;                          // type:FLOAT.0
	enum _0x719BE2D5                 GestureReturn;                   // type:ENUM.32BIT
};

struct _0x05855D4A : _0x39DE799A
{
};

struct _0x05888FB6 : _0xA7FB0217
{
};

struct _0x059A2E64 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x05A7C375 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x05A866E6 : _0x4FA6E5D7
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x05C033C3
{
	string                           String;                          // type:STRING.POINTER
	uint                             Key;                             // type:UINT.0
};

struct _0x05C33D80
{
};

struct _0x05E228D9 : _0x420D3F6F
{
	string                           InitialValue;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x060747D8 : CTuning
{
	float                            _0xF424A802;                     // type:FLOAT.0
	float                            _0xF481B4EA;                     // type:FLOAT.0
	float                            _0x2A7B75A9;                     // type:FLOAT.0
	float                            _0x5DA2115F;                     // type:FLOAT.0
	float                            _0xAA1741A3;                     // type:FLOAT.0
	float                            _0xF94E92EF;                     // type:FLOAT.0
	float                            _0xE0D2B9EA;                     // type:FLOAT.0
	float                            _0xD3D01F8A;                     // type:FLOAT.0
	float                            _0xA30E4870;                     // type:FLOAT.0
	float                            _0xD3531F7E;                     // type:FLOAT.0
	float                            _0x41C111B8;                     // type:FLOAT.0
	float                            _0x1E2F07EC;                     // type:FLOAT.0
	float                            _0x7344E70C;                     // type:FLOAT.0
	float                            _0x2FA72B87;                     // type:FLOAT.0
	float                            _0xEDD6E22E;                     // type:FLOAT.0
	float                            _0x091A53A4;                     // type:FLOAT.0
	float                            _0x10C0BADF;                     // type:FLOAT.0
	float                            _0x78B79F2F;                     // type:FLOAT.0
	float                            _0x1E97C585;                     // type:FLOAT.0
	float                            _0x85101807;                     // type:FLOAT.0
	float                            _0x84E6BBEF;                     // type:FLOAT.0
	float                            _0xE8B4A4E5;                     // type:FLOAT.0
	float                            _0xD184E0B9;                     // type:FLOAT.0
	float                            _0xE60C0A61;                     // type:FLOAT.0
	float                            _0x28E97CF4;                     // type:FLOAT.0
	float                            _0x7922A634;                     // type:FLOAT.0
	float                            _0x7293D5AC;                     // type:FLOAT.0
};

struct _0x0622B580 : _0x1054F746
{
};

struct _0x06363F1D : _0x22214645
{
};

struct _0x063AF30F : _0xC48C1FCA
{
	string                           _0x4BF77BB2;                     // type:STRING.ATSTRING
};

struct _0x06419457 : CTuning
{
	uint                             _0x3152A1F0;                     // type:UINT.0
};

struct _0x065FCE0C
{
	map<enum _0xB76A7F88, struct rage__SafeframeProfile>     Profiles;                        // type:MAP.ATMAP
};

struct _0x06627157 : CBaseSaveObject
{
	array<struct _0xE975B01D>        _0x70FF4662;                     // type:ARRAY.ATARRAY
	enum _0x024D8A82                 codeVersion;                     // type:ENUM.32BIT
};

struct _0x06747F7A
{
	float                            ScoreThreshold;                  // type:FLOAT.0
	uint                             _0xFFE36FEE;                     // type:UINT.0
	bitset<enum _0x86ABA339>         Flags;                           // type:BITSET.32BIT
	struct _0xE12857D5               Scoring;                         // type:STRUCT.STRUCTURE
};

struct _0x067F1305 : _0x4B47DAA6
{
	bitset<enum eUIScreenOpTriggerFlags>     Flags;                           // type:BITSET.8BIT
};

struct _0x068776C8 : _0x3ABDED0D
{
	vec3                             RelativeOffset;                  // type:VECTOR3.0
	bool                             _0x464F6044;                     // type:BOOL.0
	bool                             _0x4A49E023;                     // type:BOOL.0
	bool                             _0xFFCA78A7;                     // type:BOOL.0
	int                              BlendInDuration;                 // type:INT.0
	int                              BlendOutDuration;                // type:INT.0
};

struct _0x068C10A6 : _0x2F7DA38D
{
};

struct _0x069802B9
{
	float                            _0xA13164B9;                     // type:FLOAT.0
	float                            _0x1CEB39C8;                     // type:FLOAT.0
	float                            _0xC8D09D31;                     // type:FLOAT.0
	float                            _0x79F3BE4B;                     // type:FLOAT.0
	float                            _0xA992BB18;                     // type:FLOAT.0
	float                            _0x5B5A496A;                     // type:FLOAT.0
	float                            _0xAE465E4E;                     // type:FLOAT.0
	float                            _0xC36815C5;                     // type:FLOAT.0
	float                            _0x9F99A371;                     // type:FLOAT.0
	float                            _0xCEBECFA6;                     // type:FLOAT.0
	float                            _0x0CDE31A9;                     // type:FLOAT.0
	float                            _0xB5D6A09A;                     // type:FLOAT.0
};

struct _0x069B04CA : UIBehavior
{
};

struct _0x069BBEFD
{
	enum _0x216B90AA                 _0xEA1457D8;                     // type:ENUM.32BIT
	matrix34V                        transform;                       // type:MAT34V.0
};

struct _0x06A04D25
{
	array<struct _0x7622C7F9>        _0x53C6B42D;                     // type:ARRAY.ATARRAY
	enum _0x3D73EB02                 _0xDC8B5570;                     // type:ENUM.32BIT
	enum _0xEFE999B9                 _0x3C5797E1;                     // type:ENUM.32BIT
	uint                             _0x59519816;                     // type:UINT.0
	uint                             _0x23D8BECB;                     // type:UINT.0
	bool                             _0xC325E3AA;                     // type:BOOL.0
	bool                             _0x813318B8;                     // type:BOOL.0
	bool                             _0xD6E9B72A;                     // type:BOOL.0
	bool                             _0xC5802B94;                     // type:BOOL.0
	bool                             _0x5A624AFC;                     // type:BOOL.0
	bool                             _0x27594E48;                     // type:BOOL.0
	bool                             _0x5139F5B7;                     // type:BOOL.0
	enum _0x08E32932                 _0xC9E12E39;                     // type:ENUM.32BIT
	bool                             AddBlip;                         // type:BOOL.0
	bool                             _0x2F826D5B;                     // type:BOOL.0
	bool                             _0x7DBC233F;                     // type:BOOL.0
	int                              Variation;                       // type:INT.0
};

struct _0x06B6D83F : _0x940B34F5
{
};

struct _0x06B8E19B
{
	array<string>                    _0x613E8BDF;                     // type:ARRAY.ATARRAY
	array<string>                    _0x1713BC22;                     // type:ARRAY.ATARRAY
	array<string>                    _0xC0D38109;                     // type:ARRAY.ATARRAY
	array<string>                    _0x74A18D83;                     // type:ARRAY.ATARRAY
};

struct _0x06B9EA6A
{
	bool                             _0x9B6E6BC1;                     // type:BOOL.0
	bool                             _0x5E6064CA;                     // type:BOOL.0
	float                            _0xB3078B0B;                     // type:FLOAT.0
	float                            _0x529EBB62;                     // type:FLOAT.0
	float                            _0x01755B3D;                     // type:FLOAT.0
	float                            _0xE72EEECF;                     // type:FLOAT.0
	float                            _0xDC2E5FC0;                     // type:FLOAT.0
	float                            _0xCE81CCFD;                     // type:FLOAT.0
	float                            _0x943CDAC6;                     // type:FLOAT.0
	float                            _0xA0848180;                     // type:FLOAT.0
	float                            _0x3470295C;                     // type:FLOAT.2
	float                            _0x2D35E1B9;                     // type:FLOAT.0
	float                            _0xFB9DE55E;                     // type:FLOAT.0
	float                            _0xEE80E308;                     // type:FLOAT.0
	float                            _0xCE55AB75;                     // type:FLOAT.0
	float                            _0x94538CB2;                     // type:FLOAT.0
	float                            _0x30DFD765;                     // type:FLOAT.0
	float                            _0x8A674BC1;                     // type:FLOAT.0
	float                            _0x34A5D0B5;                     // type:FLOAT.0
	enum _0xC93A7A62                 _0x1D725E3D;                     // type:ENUM.32BIT
	struct _0xA29C7FAB               Probes;                          // type:STRUCT.STRUCTURE
};

struct _0x06BF7DB8
{
	bool                             _0x5ECEBB57;                     // type:BOOL.0
	bool                             _0xAA8D2F39;                     // type:BOOL.0
	bool                             _0xC0269EF1;                     // type:BOOL.0
	bool                             _0x270D554E;                     // type:BOOL.0
	float                            _0x1DC0492E;                     // type:FLOAT.0
	float                            _0xBC97CFDA;                     // type:FLOAT.0
	float                            HomingMBR;                       // type:FLOAT.0
	float                            _0x006C881F;                     // type:FLOAT.0
	float                            _0x73AAD7A5;                     // type:FLOAT.0
	float                            HomingMaxCurrentMBR;             // type:FLOAT.0
	float                            HomingMinCurrentMBR;             // type:FLOAT.0
	float                            _0x9EFA6ECD;                     // type:FLOAT.0
	float                            _0x77CEF21D;                     // type:FLOAT.0
	float                            HomingSlowdownDistance;          // type:FLOAT.0
};

struct _0x06C5A788
{
	bool                             _0xB16B19E8;                     // type:BOOL.0
	bool                             _0x4599B31F;                     // type:BOOL.0
	vec3V                            _0xD61236DD;                     // type:VEC3V.0
	vec3V                            _0x578224F9;                     // type:VEC3V.0
	bool                             _0xE09B49C9;                     // type:BOOL.0
	vec3V                            _0xC6302AEA;                     // type:VEC3V.0
	vec3V                            _0xB663FF61;                     // type:VEC3V.0
	float                            _0xCF239B6A;                     // type:FLOAT.0
};

struct _0x06D6AD56
{
};

struct _0x06F101C3
{
	struct rage__spdAABB             AABB;                            // type:STRUCT.STRUCTURE
	int                              _0x1863CE8E;                     // type:INT.0
	enum _0x45ED825F                 _0x4F52C5D6;                     // type:ENUM.32BIT
};

struct _0x06F1A5FF
{
	string                           ClipId0;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId1;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId2;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId3;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId4;                         // type:STRING.ATNONFINALHASHSTRING
	string                           MoveNetworkID0;                  // type:STRING.ATNONFINALHASHSTRING
	string                           MoveNetworkID1;                  // type:STRING.ATNONFINALHASHSTRING
	string                           MoveNetworkID2;                  // type:STRING.ATNONFINALHASHSTRING
	string                           MoveNetworkID3;                  // type:STRING.ATNONFINALHASHSTRING
	string                           MoveNetworkID4;                  // type:STRING.ATNONFINALHASHSTRING
};

struct _0x06FB7335 : CTuning
{
	vec3V                            _0x438D9DDF;                     // type:VEC3V.0
	float                            _0xD97C24EF;                     // type:FLOAT.0
	float                            _0x92B54F12;                     // type:FLOAT.0
	float                            _0xC7C6734F;                     // type:FLOAT.0
	float                            _0xBC69394C;                     // type:FLOAT.0
	float                            _0xF5D516C9;                     // type:FLOAT.0
	float                            _0x5DCD2ABE;                     // type:FLOAT.0
	float                            _0x4A9BEE23;                     // type:FLOAT.0
	float                            _0xF205E824;                     // type:FLOAT.0
	float                            _0x1A750270;                     // type:FLOAT.0
	float                            _0x06034B6E;                     // type:FLOAT.0
	float                            _0x85D8ACA9;                     // type:FLOAT.0
	float                            _0x4FE2A127;                     // type:FLOAT.0
	string                           _0xDF82DE21;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD154D095;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x60B864CD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x070D4D66
{
	float                            _0xB05E0357;                     // type:FLOAT.0
	float                            _0x7B66786F;                     // type:FLOAT.0
	float                            _0x5AAA9CE7;                     // type:FLOAT.0
	float                            _0xE77E497F;                     // type:FLOAT.0
	float                            _0xCD12620D;                     // type:FLOAT.0
	float                            _0x37EE418C;                     // type:FLOAT.0
};

struct _0x0743A618
{
	float                            AI_TARGET_COMING_OUT_OF_COVER_MODIFIER; // type:FLOAT.0
	float                            AI_TARGET_IN_COMBAT_ROLL_MODIFIER; // type:FLOAT.0
	float                            AI_TARGET_IN_COVER_MODIFIER;     // type:FLOAT.0
	float                            AI_TARGET_IN_AIR_MODIFIER;       // type:FLOAT.0
	float                            AI_TARGET_DRIVING_AT_SPEED_MODIFIER; // type:FLOAT.0
	float                            AI_TARGET_GRAPPLING_PED;         // type:FLOAT.0
};

struct _0x0743CBD8 : CExtensionDef
{
	int                              _0x40DCFD17;                     // type:INT.0
	int                              _0xAB740877;                     // type:INT.0
	int                              _0xFD6931E9;                     // type:INT.0
	int                              _0xAA8D0767;                     // type:INT.0
};

struct _0x074646AA
{
	bool                             Enabled;                         // type:BOOL.0
	uint                             _0x54C9E418;                     // type:UINT.0
	float                            _0x0595EE98;                     // type:FLOAT.0
	float                            _0x7733B7BE;                     // type:FLOAT.0
};

struct _0x07477B01 : _0x8047EFCD
{
};

struct _0x074ED1CA
{
	array<vec4V>                        clipBoundsData;                  // type:ARRAY.ATARRAY
	map<string, struct _0x5C982484>     clipBoundsTextureMap;            // type:MAP.ATBINARYMAP
};

struct _0x0757FBC4
{
	array<struct _0x7E6E9DAF>        Probes;                          // type:ARRAY.ATARRAY
	float                            MaxZDiff;                        // type:FLOAT.0
	float                            MaxHitNormalAllowedDifferenceBetweenProbes; // type:FLOAT.0
	float                            MaxHitNormalAllowedDifferenceBetweenProbesAndWorldUp; // type:FLOAT.0
};

struct _0x07582E60
{
	float                            _0xC075EF2D;                     // type:FLOAT.0
	float                            _0x91D2B37A;                     // type:FLOAT.0
};

struct _0x075887EE : CTuning
{
	int                              _0x26C3009C;                     // type:INT.0
	int                              _0x3B019A9B;                     // type:INT.0
	int                              _0xD31B1973;                     // type:INT.0
	int                              _0x2CED1192;                     // type:INT.0
	int                              _0xFB25A552;                     // type:INT.0
	uchar                            _0xB2ED7CA0;                     // type:UCHAR.0
	uchar                            _0xB17E06C4;                     // type:UCHAR.0
	uchar                            _0x188C3AB2;                     // type:UCHAR.0
	float                            _0xF4232446;                     // type:FLOAT.0
	float                            _0xDB892222;                     // type:FLOAT.0
	float                            _0x66D34F29;                     // type:FLOAT.0
	float                            _0x68B001DE;                     // type:FLOAT.0
	float                            _0x375816B9;                     // type:FLOAT.0
	float                            _0x9F867A02;                     // type:FLOAT.0
	float                            _0x1F9E516F;                     // type:FLOAT.0
	float                            _0x5133774F;                     // type:FLOAT.0
	float                            _0xB3562E9D;                     // type:FLOAT.0
	float                            _0xC1CB55A6;                     // type:FLOAT.0
	float                            _0x2E1F862A;                     // type:FLOAT.0
	float                            _0x6443E7B1;                     // type:FLOAT.0
	uint                             _0xAEEC3688;                     // type:UINT.0
	uint                             _0x6C67C69A;                     // type:UINT.0
	uint                             _0xF37EB689;                     // type:UINT.0
	string                           InitialPOISearchSituation;       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x076AC487
{
	string                           ReachClipSetId;                  // type:STRING.ATNONFINALHASHSTRING
	string                           ReachFilterId;                   // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipSetId;                   // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipId;                      // type:STRING.ATNONFINALHASHSTRING
	float                            GripClipPhase;                   // type:FLOAT.0
	float                            GrabPickupExitPhase;             // type:FLOAT.0
	float                            _0x307714F0;                     // type:FLOAT.0
	enum eAnimBoneTag                ReachTargetBone;                 // type:ENUM.32BIT
};

struct _0x078BD94E
{
	array<string>                    Clips;                           // type:ARRAY.ATARRAY
	bitset<enum _0x84B21F89>         Flags;                           // type:BITSET.32BIT
};

struct _0x07B49970
{
	float                            Value;                           // type:FLOAT.0
	float                            Interval;                        // type:FLOAT.0
	float                            Distance;                        // type:FLOAT.0
	float                            MinRemainingTimeToApply;         // type:FLOAT.0
};

struct _0x07BC9DC3
{
	struct _0x54D37223               _0x150BE453;                     // type:STRUCT.STRUCTURE
	struct _0x54D37223               _0xAA15E40E;                     // type:STRUCT.STRUCTURE
	struct _0x54D37223               _0x9CEFDEFA;                     // type:STRUCT.STRUCTURE
	struct _0x54D37223               _0xF7FF476D;                     // type:STRUCT.STRUCTURE
};

struct _0x07C828F2 : _0x1FB1BCEA
{
};

struct _0x07E99C70
{
};

struct _0x07EB1D47 : _0x1054F746
{
};

struct _0x07EC986C
{
	size_t                           MemReserve;                      // type:SIZET.0
	size_t                           MemLimit;                        // type:SIZET.0
	size_t                           MemGranularity;                  // type:SIZET.0
	size_t                           LRUTailSize;                     // type:SIZET.0
	size_t                           StagingBufferSize;               // type:SIZET.0
	size_t                           VBLockEvictSizeLimit;            // type:SIZET.0
	uint                             MaxBatchInstances;               // type:UINT.0
	uint                             InstancingThreshold;             // type:UINT.0
	uint                             NoBatchVerticesSizeThreshold;    // type:UINT.0
	uint                             MaxVerticesSizeInBatch;          // type:UINT.0
	uint                             MaxIndicesInBatch;               // type:UINT.0
};

struct _0x07EE97E1 : CAICondition
{
	enum _0x563FBCEA                 Mount;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x0811658A : UIBehavior
{
	struct _0x4365821B               _0x93A855B9;                     // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               _0x1AB9CA1B;                     // type:STRUCT.STRUCTURE
	string                           CameraDictionary;                // type:STRING.ATNONFINALHASHSTRING
	string                           CameraName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0x081C7761
{
	uint                             _0x6F379FC7;                     // type:UINT.0
	array<struct _0xCD11E23C>        _0x9E5D2D99;                     // type:ARRAY.ATARRAY
	struct _0xD5FF6F61               _0x19919E7C;                     // type:STRUCT.STRUCTURE
};

struct _0x08393FFC
{
	float                            ForcedExitSpeedMin;              // type:FLOAT.0
	float                            ForcedExitSpeedMax;              // type:FLOAT.0
	float                            ForcedJumpSpeedMin;              // type:FLOAT.0
	float                            ForcedJumpSpeedMax;              // type:FLOAT.0
};

struct _0x087CF742
{
	float                            _0x93B5DDAE;                     // type:FLOAT.0
	float                            _0x16216D7B;                     // type:FLOAT.0
	float                            _0x141EDCB2;                     // type:FLOAT.0
	float                            _0x99C1A81D;                     // type:FLOAT.0
	struct CLightAttrDef             _0xBC57C49A;                     // type:STRUCT.STRUCTURE
	struct CLightAttrDef             _0x30A280D6;                     // type:STRUCT.STRUCTURE
	struct CLightAttrDef             _0xEE4EC7D1;                     // type:STRUCT.STRUCTURE
	struct CLightAttrDef             _0xEAE8B891;                     // type:STRUCT.STRUCTURE
};

struct _0x089360B7 : _0x8A0DC979
{
};

struct _0x089A3E1A : CTuning
{
	float                            _0xC8600646;                     // type:FLOAT.0
	float                            _0xCA52DDAF;                     // type:FLOAT.0
	float                            _0x0D993CC3;                     // type:FLOAT.0
	float                            _0xB05962E6;                     // type:FLOAT.0
	float                            _0x8FD31B53;                     // type:FLOAT.0
	float                            _0xE484FD0C;                     // type:FLOAT.0
	float                            InterpTime;                      // type:FLOAT.0
	float                            _0xB9A4E11A;                     // type:FLOAT.0
	float                            _0x290F2D26;                     // type:FLOAT.0
};

struct _0x089B0E01 : _0x5C1CB98F
{
};

struct _0x08A9FD28
{
	float                            _0x30126082;                     // type:FLOAT.0
	enum _0xC93A7A62                 _0x85F957A0;                     // type:ENUM.32BIT
	uint                             _0x3222ABA3;                     // type:UINT.0
	uint                             _0xB8A4C427;                     // type:UINT.0
	uint                             _0x6A8D714C;                     // type:UINT.0
};

struct _0x08AC0871 : _0x7EE7A7AE
{
};

struct _0x08B2661A : _0x4198511D
{
};

struct _0x08B6C4B0 : CTuning
{
	float                            _0xDE542021;                     // type:FLOAT.0
	float                            _0x5F09F5FC;                     // type:FLOAT.0
	float                            _0x36F58A54;                     // type:FLOAT.0
	float                            _0xD8D9C728;                     // type:FLOAT.0
	float                            _0x549076DE;                     // type:FLOAT.0
	float                            _0xA6BCC04D;                     // type:FLOAT.0
};

struct _0x08C6D3C5
{
};

struct _0x08CEE215 : _0x0A510DA9
{
};

struct _0x08D8308B
{
	array<struct _0xAA28D7FA>        High;                            // type:ARRAY.ATARRAY
	array<struct _0xAA28D7FA>        Low;                             // type:ARRAY.ATARRAY
};

struct _0x08D9C6AB
{
	enum _0x5066C50A                 Size;                            // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x08E0BAA3 : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct _0x08E19171 : _0x63948AEA
{
	array<float>                     Ranks;                           // type:ARRAY.ATARRAY
};

struct _0x08F3144A
{
	float                            fFragmentableSegmentCastWidth;   // type:FLOAT.0
	float                            fFragmentableMinDistanceBetweenPoints; // type:FLOAT.0
	float                            fFragmentableAimMaxWidthGap;     // type:FLOAT.0
	float                            fFragmentableMinAimHeightFree;   // type:FLOAT.0
	float                            fFragmentableMaxAimHeightFree;   // type:FLOAT.0
	float                            fFragmentableMinVerticalGapToAim; // type:FLOAT.0
	float                            _0xB534075F;                     // type:FLOAT.0
};

struct _0x09106DAD
{
	string                           _0x9EF7AEB2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0x093BE0FB
{
	float                            _0x1709062A;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0x0946D5B6 : _0x9B440548
{
};

struct _0x096A6916
{
	float                            RootWeight;                      // type:FLOAT.0
	float                            SpineWeight;                     // type:FLOAT.0
	float                            HeadWeight;                      // type:FLOAT.0
	float                            LeftArmWeight;                   // type:FLOAT.0
	float                            RightArmWeight;                  // type:FLOAT.0
	float                            RootRate;                        // type:FLOAT.0
	float                            SpineRate;                       // type:FLOAT.0
	float                            HeadRate;                        // type:FLOAT.0
	float                            LeftArmRate;                     // type:FLOAT.0
	float                            RightArmRate;                    // type:FLOAT.0
	bool                             _0x00415BA7;                     // type:BOOL.0
};

struct _0x097F8891 : camBaseCameraMetadata
{
	struct _0x3A05C551               _0x65D55DE8;                     // type:STRUCT.STRUCTURE
	struct _0x5063A41A               _0x31641358;                     // type:STRUCT.STRUCTURE
	struct _0xA18363F1               _0xB8FB230D;                     // type:STRUCT.STRUCTURE
	struct _0xC592168C               _0x0E74FB82;                     // type:STRUCT.STRUCTURE
	struct _0x8D865FE1               _0xBDD2D067;                     // type:STRUCT.STRUCTURE
	struct _0x8D865FE1               _0xD049439D;                     // type:STRUCT.STRUCTURE
	struct _0xD5186822               CollisionSettings;               // type:STRUCT.STRUCTURE
};

struct _0x099B7C97
{
	float                            LowThreshold;                    // type:FLOAT.0
	float                            HighThreshold;                   // type:FLOAT.0
	float                            HeightBlendRate;                 // type:FLOAT.0
	bool                             UseAsDefault;                    // type:BOOL.0
	bitset<enum _0xCD8B95D4>         Flags;                           // type:BITSET.32BIT
};

struct _0x099D19E3
{
	enum _0xA1D29A11                 WeaponType;                      // type:ENUM.32BIT
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           FilterId;                        // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x9461143F>         Flags;                           // type:BITSET.32BIT
	float                            BlendInDuration;                 // type:FLOAT.0
};

struct _0x09B4C683
{
	float                            _0xB07F3717;                     // type:FLOAT.0
	float                            _0x4D31F2F9;                     // type:FLOAT.0
	float                            _0x2FC0598E;                     // type:FLOAT.0
	float                            _0xDA7CAC50;                     // type:FLOAT.0
};

struct _0x09C03B78
{
	string                           Context;                         // type:STRING.ATSTRING
	string                           _0x66FB3A21;                     // type:STRING.ATSTRING
	enum _0xF8161245                 VolumeType;                      // type:ENUM.32BIT
	uint                             StartTime;                       // type:UINT.0
	uint                             EndTime;                         // type:UINT.0
	bool                             _0xDED3DC35;                     // type:BOOL.0
};

struct _0x09C1B78A
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              InitiatorCondition;              // type:STRUCT.POINTER
	struct void                      Intro;                           // type:STRUCT.EXTERNAL_NAMED
	struct void                      Outro;                           // type:STRUCT.EXTERNAL_NAMED
	array<struct void>               PriorityTopics;                  // type:ARRAY.ATARRAY
	array<struct void>               Topics;                          // type:ARRAY.ATARRAY
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct _0x09D8AA6B : CNmParameter
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x09F08CB2
{
	vec3V                            LeftOffset;                      // type:VEC3V.0
	vec3V                            RightOffset;                     // type:VEC3V.0
};

struct _0x0A10BF60
{
	float                            Override;                        // type:FLOAT.0
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x0A137F8C : _0x29583E42
{
};

struct _0x0A1A3371 : _0x224A5A64
{
	float                            _0x87F74C75;                     // type:FLOAT.0
	float                            _0xED9F3A3F;                     // type:FLOAT.0
	float                            _0x07D0D2A2;                     // type:FLOAT.0
	float                            _0x4A0C38F9;                     // type:FLOAT.0
	float                            _0x8AA58F5E;                     // type:FLOAT.0
	uint                             _0x0E8245B7;                     // type:UINT.0
	enum eAnimBoneTag                _0x63AA9F80;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x95E43BEB;                     // type:ENUM.32BIT
};

struct _0x0A1AF844
{
	bool                             _0x5D72F32E;                     // type:BOOL.0
	bool                             _0xF9444A03;                     // type:BOOL.0
	bool                             _0x32A66C77;                     // type:BOOL.0
	bool                             _0xD4F691DD;                     // type:BOOL.0
	bool                             _0xC11BBE4D;                     // type:BOOL.0
	int                              _0x19242633;                     // type:INT.0
	bool                             _0x53B1A642;                     // type:BOOL.0
	int                              _0x6C79CDD7;                     // type:INT.0
};

struct _0x0A21E27F : CTuning
{
	float                            _0xC758EBAE;                     // type:FLOAT.0
};

struct _0x0A2805EE
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xC9E700AD;                     // type:BOOL.0
};

struct _0x0A317D0E
{
	vec2V                            Center;                          // type:VEC2V.0
	float                            InnerRadius;                     // type:FLOAT.0
	float                            _0xC3152138;                     // type:FLOAT.0
	enum _0x4EEED54E                 _0x07B1BFAD;                     // type:ENUM.32BIT
	float                            Rotation;                        // type:FLOAT.0
	vec2V                            _0xCB88AEA7;                     // type:VEC2V.0
	float                            Opacity;                         // type:FLOAT.0
	uint                             TintColor;                       // type:UINT.1
	bool                             _0xD2A869CC;                     // type:BOOL.0
};

struct _0x0A47BB00
{
	string                           value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0A510DA9
{
};

struct _0x0A64BF0C : _0x14229900
{
	enum _0x563FBCEA                 _0xC06522C6;                     // type:ENUM.32BIT
};

struct _0x0A698250 : _0x642B20A3
{
};

struct _0x0A91E37B : _0x90A2610E
{
	float                            BaseValue;                       // type:FLOAT.0
};

struct _0x0A9836EF
{
	string                           _0x686C19F1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6BF04EB5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCF18DCE7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5C44560D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE9652038;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x99561A7C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDC897598;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x75114D30;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4057A9DD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4E377A25;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8CC8731D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF1A5D39F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEE977182;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAD0BEDDA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8CB7879A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x84170AC6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0E3054FD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC53AEA43;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2C7BDBA2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6D47E12C;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x2218567F, 3>     Speeds;                          // type:ARRAY.ATFIXEDARRAY
};

struct _0x0ACD7101
{
	bool                             _0x8CF753F4;                     // type:BOOL.0
	float                            _0x3A9FA52C;                     // type:FLOAT.0
	float                            _0x2FB50823;                     // type:FLOAT.0
	float                            _0x816C8B98;                     // type:FLOAT.0
	vec2                             _0xEF6E0DB1;                     // type:VECTOR2.0
	vec2                             _0xB99B596E;                     // type:VECTOR2.0
	float                            _0x0457B25A;                     // type:FLOAT.0
	bool                             _0x600457F4;                     // type:BOOL.0
	float                            _0x74776271;                     // type:FLOAT.0
	float                            IdleCmini;                       // type:FLOAT.0
	bool                             _0x3443BBD2;                     // type:BOOL.0
	float                            _0x807FADD5;                     // type:FLOAT.0
	float                            _0xF925B6C3;                     // type:FLOAT.0
	float                            _0x12A0365B;                     // type:FLOAT.0
	float                            _0x4FA8EE6B;                     // type:FLOAT.0
	float                            _0xE3C75EEA;                     // type:FLOAT.0
	float                            _0x7EC896A7;                     // type:FLOAT.0
	float                            _0x61034B97;                     // type:FLOAT.0
	bool                             _0x7C84CA14;                     // type:BOOL.0
	bool                             _0x2C5F243A;                     // type:BOOL.0
};

struct _0x0ACDDFB5 : _0x0A510DA9
{
};

struct _0x0AD780FE : _0x0FC1398F
{
	string                           ActivityID;                      // type:STRING.ATNSHASHSTRING
};

struct _0x0AE5F54A
{
	enum _0x85D2502E                 Type;                            // type:ENUM.32BIT
	string                           TextId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           MPTextId;                        // type:STRING.ATNONFINALHASHSTRING
	string                           AltTextId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           DisabledTextId;                  // type:STRING.ATNONFINALHASHSTRING
	string                           AliveTextId;                     // type:STRING.ATNONFINALHASHSTRING
	string                           UndiscoveredTextId;              // type:STRING.ATNONFINALHASHSTRING
	string                           StudyOnlyTextId;                 // type:STRING.ATNONFINALHASHSTRING
	float                            RadiusAtMinMovementSpeed;        // type:FLOAT.0
	float                            RadiusAtMaxMovementSpeed;        // type:FLOAT.0
	float                            CloseRadius;                     // type:FLOAT.0
	float                            RadiusPromptOnlyOverride;        // type:FLOAT.0
	float                            DisabledRadiusPromptOnly;        // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
	string                           OverrideActivationTime;          // type:STRING.ATNONFINALHASHSTRING
	float                            ActivationAngle;                 // type:FLOAT.0
	float                            LookAngle;                       // type:FLOAT.0
	float                            FacingScoreModifier;             // type:FLOAT.0
	string                           SharedUseContextTag;             // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xC2089236>         Flags;                           // type:BITSET.32BIT
};

struct _0x0AEE7811
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x0B209C63 : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0x0B36B51F : _0x1054F746
{
};

struct _0x0B412B73
{
	uint                             sequencer;                       // type:UINT.0
};

struct _0x0B500CE7
{
	float                            FromAngle;                       // type:FLOAT.2
	float                            ToAngle;                         // type:FLOAT.2
};

struct _0x0B6B179D
{
	struct _0xADDFBF21               Sprint;                          // type:STRUCT.STRUCTURE
	struct _0xA112C3D6               Canter;                          // type:STRUCT.STRUCTURE
	struct _0xA112C3D6               Trot;                            // type:STRUCT.STRUCTURE
	struct _0x02FF006C               Walk;                            // type:STRUCT.STRUCTURE
};

struct _0x0B6E5F27
{
	enum _0x74E3A3D2                 Type;                            // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0x0B799110 : _0x2F7DA38D
{
	enum _0x3832D31E                 action;                          // type:ENUM.32BIT
	float                            _0xEB6161EE;                     // type:FLOAT.0
};

struct _0x0B9B6CB2
{
	enum _0x88D3C30C                 _0xC50DB96C;                     // type:ENUM.32BIT
	float                            MinSpeed;                        // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct _0x0BA9FFBD
{
	struct _0xDB1D972E               _0xAA27564F;                     // type:STRUCT.STRUCTURE
	array<struct _0xDB1D972E>        _0x8CED7AE2;                     // type:ARRAY.ATARRAY
};

struct _0x0BB1C669 : camCinematicShotMetadata
{
	float                            _0x24164BBE;                     // type:FLOAT.0
	uint                             _0x6C8703C2;                     // type:UINT.0
	uint                             _0x9EB95310;                     // type:UINT.0
	float                            _0x5FC6806F;                     // type:FLOAT.0
	bool                             _0x8306296A;                     // type:BOOL.0
	bool                             _0xEC23EA20;                     // type:BOOL.0
	bool                             _0xB4EB5E97;                     // type:BOOL.0
};

struct _0x0BB7937C
{
	enum _0x94484AAC                 Gait;                            // type:ENUM.32BIT
	float                            MinDist;                         // type:FLOAT.0
	float                            MaxDist;                         // type:FLOAT.0
};

struct _0x0BBA48C1
{
};

struct _0x0BC0B7DA
{
	string                           PedClipSetId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           PedClipId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           PedClipFilterId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ItemClipId;                      // type:STRING.ATNONFINALHASHSTRING
	string                           PutInSatchelClipId;              // type:STRING.ATNONFINALHASHSTRING
	string                           PutInSatchelFilterId;            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0BC2DDB5
{
	array<struct _0xE7C4CE05, 12>     HostBroadcastData;               // type:ARRAY.ATFIXEDARRAY
	array<struct _0xE7C4CE05, 9>      PlayerBroadcastData;             // type:ARRAY.ATFIXEDARRAY
};

struct _0x0BCB6EDA : _0x1054F746
{
};

struct _0x0BEC009D : CTuning
{
	float                            _0x8239A682;                     // type:FLOAT.0
	float                            _0x089F9F04;                     // type:FLOAT.0
};

struct _0x0BF25E8E : _0x2F7DA38D
{
	enum _0xFFFECC46                 _0x231B55A1;                     // type:ENUM.32BIT
	vec4V                            _0xB6902640;                     // type:VEC4V.0
	struct _0xED16C5B0               _0xE3F4D16B;                     // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                _0xA79CAEA3;                     // type:ENUM.32BIT
	float                            _0x5DE62EC7;                     // type:FLOAT.0
	float                            _0x855F1924;                     // type:FLOAT.0
	float                            _0xBD1E7F53;                     // type:FLOAT.0
	float                            _0x3A3300A9;                     // type:FLOAT.0
	bitset<enum _0xCB034860>         _0x3C5963F4;                     // type:BITSET.32BIT
	struct _0xED16C5B0               _0x2CF8B75E;                     // type:STRUCT.STRUCTURE
	float                            _0x1DD1DDCE;                     // type:FLOAT.0
	float                            _0x2834608A;                     // type:FLOAT.0
	float                            fadeInDuration;                  // type:FLOAT.0
	float                            fadeOutDuration;                 // type:FLOAT.0
	enum _0x0100F80E                 fadeInCurve;                     // type:ENUM.32BIT
	enum _0x0100F80E                 fadeOutCurve;                    // type:ENUM.32BIT
};

struct _0x0C02DFD3 : _0x6C351FEE
{
	enum _0x8D814A82                 ScaleRange;                      // type:ENUM.32BIT
	enum _0x0DB4F0EF                 Precision;                       // type:ENUM.32BIT
	bool                             ClampRange;                      // type:BOOL.0
};

struct _0x0C14BE3A : _0xC0749003
{
};

struct _0x0C161A01 : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	float                            MinTimeMS;                       // type:FLOAT.0
	float                            MaxTimeMS;                       // type:FLOAT.0
};

struct _0x0C22B755 : UIContainer
{
};

struct _0x0C363095
{
	struct _0x25DDC7A9               _0x325EE9B1;                     // type:STRUCT.STRUCTURE
};

struct _0x0C4F690C
{
	map<string, struct _0x38D1DD83>     Collections;                     // type:MAP.ATBINARYMAP
};

struct _0x0C55EA5F : CExtensionDef
{
	vec3                             bottom;                          // type:VECTOR3.0
	vec3                             top;                             // type:VECTOR3.0
	vec3                             _0x6A641A32;                     // type:VECTOR3.0
	vec3                             _0xFCE94826;                     // type:VECTOR3.0
	array<struct _0xA15F529D>        steps;                           // type:ARRAY.ATARRAY
};

struct _0x0C583E09
{
	int                              _0xA8729FD0;                     // type:INT.0
	string                           message;                         // type:STRING.ATSTRING
	bool                             _0xE64A7AA0;                     // type:BOOL.0
	bool                             ignored;                         // type:BOOL.0
	uchar                            _0xEF5AA504;                     // type:UCHAR.0
};

struct _0x0C65497E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xD0183054                 ActionType;                      // type:ENUM.32BIT
	string                           PerformerClipSet;                // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBD8692C3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           PerformerClip;                   // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipSetFemale;             // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClip;                      // type:STRING.ATNONFINALHASHSTRING
	float                            BlendInTime;                     // type:FLOAT.0
	float                            BlendOutTime;                    // type:FLOAT.0
	struct _0x89550336               FacialData;                      // type:STRUCT.STRUCTURE
	string                           AnimSceneHash;                   // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x106BA323>        AnimSceneBoolIds;                // type:ARRAY.ATARRAY
	bitset<enum _0x6FFBACE3>         Flags;                           // type:BITSET.32BIT
};

struct _0x0C735B89
{
	string                           Action;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0C766FD5
{
	float                            MaxArmourImpulseMult;            // type:FLOAT.0
	float                            MinArmourImpulseMult;            // type:FLOAT.0
	float                            MaxHealthImpulseMult;            // type:FLOAT.0
	float                            MinHealthImpulseMult;            // type:FLOAT.0
	float                            MaxDamageTakenImpulseMult;       // type:FLOAT.0
	float                            MinDamageTakenImpulseMult;       // type:FLOAT.0
	float                            MaxDamageTakenThreshold;         // type:FLOAT.0
	float                            MinDamageTakenThreshold;         // type:FLOAT.0
	float                            DefaultKillShotImpulseMult;      // type:FLOAT.0
	float                            DefaultRapidFireKillShotImpulseMult; // type:FLOAT.0
	float                            DefaultMPKillShotImpulseMult;    // type:FLOAT.0
	float                            DefaultMPRapidFireKillShotImpulseMult; // type:FLOAT.0
	float                            _0x77158365;                     // type:FLOAT.0
	float                            RapidFireBoostShotImpulseMult;   // type:FLOAT.0
	int                              RapidFireBoostShotMinRandom;     // type:INT.0
	int                              RapidFireBoostShotMaxRandom;     // type:INT.0
	float                            EqualizeAmount;                  // type:FLOAT.0
	float                            COMImpulseScale;                 // type:FLOAT.0
	float                            COMImpulseMaxRootVelocityMagnitude; // type:FLOAT.0
	bool                             COMImpulseOnlyWhileBalancing;    // type:BOOL.0
	float                            _0x04F6626F;                     // type:FLOAT.0
	float                            _0xD30A6F28;                     // type:FLOAT.0
	float                            HeadShotImpulseMultiplier;       // type:FLOAT.0
	float                            HeadShotMPImpulseMultiplier;     // type:FLOAT.0
	bool                             ScaleHeadShotImpulseWithSpineOrientation; // type:BOOL.0
	float                            MinHeadShotImpulseMultiplier;    // type:FLOAT.0
	float                            _0xC546CC20;                     // type:FLOAT.0
	float                            _0x70F1660A;                     // type:FLOAT.0
	float                            AutomaticInitialSnapMult;        // type:FLOAT.0
	float                            BurstFireInitialSnapMult;        // type:FLOAT.0
	float                            _0xCB62DF4A;                     // type:FLOAT.0
	float                            FinalShotImpulseClampMax;        // type:FLOAT.0
	float                            RunningAgainstBulletImpulseMult; // type:FLOAT.0
	float                            RunningAgainstBulletImpulseMultMax; // type:FLOAT.0
	float                            RunningWithBulletImpulseMult;    // type:FLOAT.0
	float                            _0x56879FAB;                     // type:FLOAT.0
	float                            LegShotFallRootImpulseMinUpright; // type:FLOAT.0
	float                            LegShotFallRootImpulseMult;      // type:FLOAT.0
	float                            _0x0D7DB754;                     // type:FLOAT.0
	float                            _0x9D60BB6B;                     // type:FLOAT.0
	float                            _0xE3EEDB76;                     // type:FLOAT.0
	float                            _0x1C638E20;                     // type:FLOAT.0
	float                            _0xB5756D0C;                     // type:FLOAT.0
	float                            _0xF226E34A;                     // type:FLOAT.0
	float                            _0xDBED1D7E;                     // type:FLOAT.0
	struct _0xC47799F2               _0x8BF6FC75;                     // type:STRUCT.STRUCTURE
	float                            _0xAEB7C342;                     // type:FLOAT.0
	float                            _0x92C50BD4;                     // type:FLOAT.0
	float                            _0xD2611B96;                     // type:FLOAT.0
	float                            _0xC5241590;                     // type:FLOAT.0
	struct _0xBE4C7F5C               SniperImpulses;                  // type:STRUCT.STRUCTURE
	struct _0x4E829A16               _0x77941C12;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x49D6740B;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x385D6E34;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x54C33F5A;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0xF138DE00;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x663DC14F;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x8D689B44;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x38F0F834;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x66509174;                     // type:STRUCT.STRUCTURE
};

struct _0x0C7B8101 : _0xA26E1113
{
	short                            value;                           // type:SHORT.0
};

struct _0x0C819B3E
{
	float                            BlendTime;                       // type:FLOAT.0
	string                           WeaponActionIndexFrom;           // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponActionIndexTo;             // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0C9FE068
{
	array<string, 4>                 hashes;                          // type:ARRAY.MEMBER
};

struct _0x0CA7A72F
{
	float                            _0x4F643A1F;                     // type:FLOAT.0
	float                            _0x101A2AD4;                     // type:FLOAT.0
	float                            _0x3B343F15;                     // type:FLOAT.0
	float                            _0x15501D0E;                     // type:FLOAT.0
	float                            _0x8F37DE60;                     // type:FLOAT.0
	float                            _0x1ABB1E7C;                     // type:FLOAT.0
	float                            _0xED1BEBEE;                     // type:FLOAT.0
	float                            _0x6E8326AF;                     // type:FLOAT.0
	float                            _0x8C59A179;                     // type:FLOAT.0
	float                            _0xF79F06D8;                     // type:FLOAT.0
	float                            _0x38241C8E;                     // type:FLOAT.0
	float                            _0x1511289B;                     // type:FLOAT.0
	float                            _0xB8F55DF8;                     // type:FLOAT.0
	float                            _0x8C9D952F;                     // type:FLOAT.0
	float                            _0x8A289708;                     // type:FLOAT.0
	bool                             _0x12EC2C26;                     // type:BOOL.0
	bool                             _0x00D6219F;                     // type:BOOL.0
	float                            _0x07F850B6;                     // type:FLOAT.0
	float                            _0x90E875A5;                     // type:FLOAT.0
	bool                             _0x5286538D;                     // type:BOOL.0
	bool                             _0x7D21226C;                     // type:BOOL.0
	float                            _0x3C348C4A;                     // type:FLOAT.0
	float                            _0xCF406223;                     // type:FLOAT.0
	bool                             _0x41284945;                     // type:BOOL.0
	float                            _0x7935FA25;                     // type:FLOAT.0
	float                            _0xEA999916;                     // type:FLOAT.0
	float                            _0x061D676F;                     // type:FLOAT.0
	bool                             _0x17D08DE8;                     // type:BOOL.0
	float                            _0x55E9CD4E;                     // type:FLOAT.0
	bool                             _0x91F919F7;                     // type:BOOL.0
	float                            _0xB0873631;                     // type:FLOAT.0
	float                            _0xE04B80D6;                     // type:FLOAT.0
	float                            _0xCA319DC8;                     // type:FLOAT.0
	float                            _0x8900D17F;                     // type:FLOAT.0
	float                            _0x3DCAD12D;                     // type:FLOAT.0
	float                            _0x0FC5BD97;                     // type:FLOAT.0
	float                            _0x5917E270;                     // type:FLOAT.0
	bool                             _0x373A5EBF;                     // type:BOOL.0
	float                            _0x697677B6;                     // type:FLOAT.0
	float                            _0xF69EBA47;                     // type:FLOAT.0
	bool                             _0x57F75366;                     // type:BOOL.0
	float                            _0xDFCEFD92;                     // type:FLOAT.0
	float                            _0x6EC15718;                     // type:FLOAT.0
	float                            _0xBB17736D;                     // type:FLOAT.0
};

struct _0x0CAA7C9B : CTuning
{
	float                            _0x74EC3D45;                     // type:FLOAT.0
	float                            _0x7F09F391;                     // type:FLOAT.0
	float                            _0xB90729DC;                     // type:FLOAT.0
	float                            _0x3190D5CC;                     // type:FLOAT.0
};

struct _0x0CB4F193 : _0x2F7DA38D
{
	struct _0x24749343                                 clip;                            // type:STRUCT.STRUCTURE
	struct _0x24749343                                 _0x7C0A2099;                     // type:STRUCT.STRUCTURE
	bitset<enum eScriptedAnimFlags>                    _0xBD916EA6;                     // type:BITSET.32BIT
	bitset<enum eAnimFlags>                            flags;                           // type:BITSET.32BIT
	bitset<enum eRagdollBlockingFlags>                 ragdollBlockingFlags;            // type:BITSET.32BIT
	bitset<enum eIkControlFlags>                       _0xEFECA458;                     // type:BITSET.32BIT
	bitset<enum eTaskAnimationAiFlags>                 _0x1C489B94;                     // type:BITSET.32BIT
	bitset<enum eTaskAnimationPhysicsControlFlags>     _0x3EB4F7B6;                     // type:BITSET.32BIT
	string                                             filter;                          // type:STRING.ATNONFINALHASHSTRING
	string                                             _0xF5065648;                     // type:STRING.ATNONFINALHASHSTRING
	string                                             bodyDampingTemplate;             // type:STRING.ATNONFINALHASHSTRING
	float                                              blendInDuration;                 // type:FLOAT.0
	float                                              blendOutDuration;                // type:FLOAT.0
	float                                              _0xEB3388F4;                     // type:FLOAT.0
	float                                              _0x6B2E466B;                     // type:FLOAT.0
	float                                              rate;                            // type:FLOAT.0
	bool                                               _0x68303946;                     // type:BOOL.0
	bool                                               _0x1F1E9763;                     // type:BOOL.0
	struct _0xE19E0658                                 _0x03EFD81F;                     // type:STRUCT.POINTER
	struct _0xEE551A04                                 _0x26851D13;                     // type:STRUCT.POINTER
};

struct _0x0CB533F6
{
	string                           _0xCD0A0B26;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6C42124F;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0CF4ABD3
{
};

struct _0x0CFCBFD3
{
	ushort                           BaseWeaponBoneId;                // type:USHORT.0
	ushort                           WeaponComponentBoneId;           // type:USHORT.0
};

struct _0x0D007F9A : CAICondition
{
	float                            minimumWaitTime;                 // type:FLOAT.0
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0D04D04D : _0xAB76836B
{
	bool                             ApplyDefault;                    // type:BOOL.0
	vec2                             Default;                         // type:VECTOR2.0
	map<int, vec2>                   Dictionary;                      // type:MAP.ATMAP
};

struct _0x0D061743 : _0x05C33D80
{
	array<struct _0xE453720A>        specializedParams;               // type:ARRAY.ATARRAY
};

struct _0x0D0E6831 : _0x263CA8E8
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x0D4DF60A : CTuning
{
	bool                             _0xCDD9A489;                     // type:BOOL.0
	float                            _0x9F1D5FC7;                     // type:FLOAT.0
	float                            _0x434E039C;                     // type:FLOAT.0
	float                            _0x31C3D352;                     // type:FLOAT.0
	float                            _0x79F6F32E;                     // type:FLOAT.0
	float                            _0x19CD0791;                     // type:FLOAT.0
	float                            _0x4C458A92;                     // type:FLOAT.0
	float                            _0x6AA2D255;                     // type:FLOAT.0
	float                            _0xCC0ADF4C;                     // type:FLOAT.0
	float                            _0x656094FE;                     // type:FLOAT.0
	float                            _0xC4BBF3B3;                     // type:FLOAT.0
	float                            _0x6CEC72EB;                     // type:FLOAT.0
	float                            _0xE3BDA14E;                     // type:FLOAT.0
	float                            _0x434378A0;                     // type:FLOAT.0
	string                           _0xC44205B8;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x1C72A9D4;                     // type:FLOAT.0
	float                            _0x417236CE;                     // type:FLOAT.0
	float                            _0xC4C8FA3B;                     // type:FLOAT.0
	float                            _0x69AC00EC;                     // type:FLOAT.0
	float                            _0x7D4A321D;                     // type:FLOAT.0
	float                            _0x66A79F24;                     // type:FLOAT.0
	float                            _0x912E3FF9;                     // type:FLOAT.0
	float                            _0x5A37FDA6;                     // type:FLOAT.0
	float                            _0x11929CBF;                     // type:FLOAT.0
	float                            _0xDCE25004;                     // type:FLOAT.0
	float                            _0x444F0FB0;                     // type:FLOAT.0
	float                            _0x5FFB9085;                     // type:FLOAT.0
	float                            _0x5CC108E6;                     // type:FLOAT.0
	float                            _0x1DB01927;                     // type:FLOAT.0
	float                            _0x367EE34B;                     // type:FLOAT.0
	float                            _0xAF84B461;                     // type:FLOAT.0
	float                            _0xB58FC846;                     // type:FLOAT.0
	vec2V                            DistanceRange;                   // type:VEC2V.0
	vec2V                            _0xCE81CA95;                     // type:VEC2V.0
	vec2V                            _0x283FADCC;                     // type:VEC2V.0
	float                            _0x55A9AF0B;                     // type:FLOAT.0
	float                            _0xAA9BEF02;                     // type:FLOAT.0
	float                            MovementRadius;                  // type:FLOAT.0
	float                            _0x33A99CE9;                     // type:FLOAT.0
	float                            MaxTargetOffsetX;                // type:FLOAT.0
	float                            _0x39050308;                     // type:FLOAT.0
	float                            _0xC24955E1;                     // type:FLOAT.0
	uint                             _0xCF89677B;                     // type:UINT.0
	float                            MinHeadingAngle;                 // type:FLOAT.0
	float                            _0x325AED6E;                     // type:FLOAT.0
	uint                             _0xEDDE09DC;                     // type:UINT.0
};

struct _0x0D58926D : _0x1054F746
{
};

struct _0x0D59734F : _0x8A0DC979
{
	enum _0xFCF7D46B                 Result;                          // type:ENUM.32BIT
	string                           DataStore;                       // type:STRING.ATNSHASHSTRING
};

struct _0x0D6168A9
{
	bool                             _0xA89E4571;                     // type:BOOL.0
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0xBF271F73;                     // type:FLOAT.0
	float                            ptFxScale;                       // type:FLOAT.0
	string                           _0x6CFF8925;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAC0BBEDC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2392804A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB8E44BE9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x69AE69A0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x493BE2F6;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0D7E0505
{
	enum _0x7123E6B1                 API;                             // type:ENUM.32BIT
	bool                             locked;                          // type:BOOL.0
	bool                             _0x2FCE5D4F;                     // type:BOOL.0
	bool                             _0x53AE4AF3;                     // type:BOOL.0
	enum _0xEB8DD8AD                 shadowSoftShadows;               // type:ENUM.32BIT
	bool                             _0x7D932E4B;                     // type:BOOL.0
	float                            _0x263D396E;                     // type:FLOAT.0
	enum _0xEB8DD8AD                 particleLightingQuality;         // type:ENUM.32BIT
	bool                             _0x31409A4F;                     // type:BOOL.0
	enum _0xEB8DD8AD                 _0x0726D16D;                     // type:ENUM.32BIT
	enum _0xEB8DD8AD                 _0x9F9F7544;                     // type:ENUM.32BIT
	uint                             _0x1006514A;                     // type:UINT.0
	enum _0xEB8DD8AD                 _0x8BCF9DA6;                     // type:ENUM.32BIT
	enum _0xEB8DD8AD                 _0x7F0DBEE6;                     // type:ENUM.32BIT
	int                              maxTexUpgradesPerFrame;          // type:INT.0
	enum _0xEB8DD8AD                 _0x6DD58BC1;                     // type:ENUM.32BIT
	bool                             shadowParticleShadows;           // type:BOOL.0
	bool                             shadowLongShadows;               // type:BOOL.0
	bool                             _0xA797D1A8;                     // type:BOOL.0
	float                            _0xF41AA961;                     // type:FLOAT.0
	float                            _0x7AFF09DC;                     // type:FLOAT.0
	bool                             _0xD7609F01;                     // type:BOOL.0
	enum _0xEB8DD8AD                 scatteringVolumeQuality;         // type:ENUM.32BIT
	enum _0xEB8DD8AD                 _0xA7B422A1;                     // type:ENUM.32BIT
	enum _0xEB8DD8AD                 _0x3D10726F;                     // type:ENUM.32BIT
	bool                             _0x8AC89895;                     // type:BOOL.0
	enum _0xEB8DD8AD                 _0xE807892F;                     // type:ENUM.32BIT
	bool                             _0x26B07824;                     // type:BOOL.0
	enum _0xEB8DD8AD                 _0xA35876D3;                     // type:ENUM.32BIT
	bool                             _0x371BE22D;                     // type:BOOL.0
	int                              _0xA6239A27;                     // type:INT.0
	int                              _0xB45587D9;                     // type:INT.0
	bool                             _0x200705B7;                     // type:BOOL.0
	enum _0xEB8DD8AD                 _0x632DE48A;                     // type:ENUM.32BIT
	bool                             _0xE6E9A59A;                     // type:BOOL.0
	int                              _0x5463499D;                     // type:INT.0
	bool                             _0xDE4363F5;                     // type:BOOL.0
	enum _0xEB8DD8AD                 _0xAA0A86F2;                     // type:ENUM.32BIT
	bool                             _0x5A6698B1;                     // type:BOOL.0
	enum _0xEC1E8350                 scalingMode;                     // type:ENUM.32BIT
	int                              reflectionMSAA;                  // type:INT.0
	float                            lodScale;                        // type:FLOAT.0
	float                            _0xE19D3DA4;                     // type:FLOAT.0
	float                            pedLodBias;                      // type:FLOAT.0
	float                            vehicleLodBias;                  // type:FLOAT.0
	float                            _0xBFA89537;                     // type:FLOAT.0
	enum _0xEB8DD8AD                 _0x765CFFC8;                     // type:ENUM.32BIT
	enum _0xEB8DD8AD                 _0xC2DA44E4;                     // type:ENUM.32BIT
	bool                             _0x0DB52C49;                     // type:BOOL.0
};

struct _0x0D80056D : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0x0D8E3DDB
{
	map<string, struct _0xCA97D576>     mPoseMap;                        // type:MAP.ATBINARYMAP
};

struct _0x0D90C2EB
{
	float                            _0xD336CF47;                     // type:FLOAT.0
	float                            _0xF1F9FB15;                     // type:FLOAT.0
	float                            _0xA24639E6;                     // type:FLOAT.0
	float                            _0xB75C5830;                     // type:FLOAT.0
	float                            _0xA8A83463;                     // type:FLOAT.0
	float                            _0xCF8A46C2;                     // type:FLOAT.0
	float                            _0xFE256DD0;                     // type:FLOAT.0
	float                            _0xDE1D517D;                     // type:FLOAT.0
};

struct _0x0D943E01
{
	array<struct CScenarioPoint>              ScenarioPoints;                  // type:ARRAY.ATARRAY
	array<struct CScenarioEntityOverride>     EntityOverrides;                 // type:ARRAY.ATARRAY
};

struct _0x0D9F5312
{
	float                            _0x37B018AE;                     // type:FLOAT.0
	float                            _0x70A89139;                     // type:FLOAT.0
	float                            _0xAD8F22A7;                     // type:FLOAT.0
	float                            _0x459F5084;                     // type:FLOAT.0
	float                            _0x383C0FE2;                     // type:FLOAT.0
	float                            _0x916F9515;                     // type:FLOAT.0
	float                            _0xD3617F2E;                     // type:FLOAT.0
	float                            _0xDCB63760;                     // type:FLOAT.0
	float                            _0x52E30477;                     // type:FLOAT.0
	float                            _0x745D7AB4;                     // type:FLOAT.0
	float                            _0x6ED422E2;                     // type:FLOAT.0
	float                            _0xD1250BA0;                     // type:FLOAT.0
	float                            _0xF2B07A27;                     // type:FLOAT.0
	float                            _0xB3927443;                     // type:FLOAT.0
	float                            _0x455DFD0C;                     // type:FLOAT.0
	float                            _0xBBAD25E0;                     // type:FLOAT.0
	float                            _0x88C4B724;                     // type:FLOAT.0
	float                            _0xC2945E8B;                     // type:FLOAT.0
	float                            _0x19CB6842;                     // type:FLOAT.0
	float                            _0xB9E08DEF;                     // type:FLOAT.0
	float                            _0x78AB83DA;                     // type:FLOAT.0
	float                            _0x6CBC2E41;                     // type:FLOAT.0
	float                            _0x2B072626;                     // type:FLOAT.0
	float                            _0x35D71999;                     // type:FLOAT.0
	float                            _0xB251F26C;                     // type:FLOAT.0
};

struct _0x0DA28499
{
	enum _0xF945C864                 Context;                         // type:ENUM.32BIT
	bitset<enum _0x1F17C8B0>         _0x500BF4C8;                     // type:BITSET.8BIT
	array<struct _0xF2B234D5, 5>     _0xAD5BEC4D;                     // type:ARRAY.MEMBER
};

struct _0x0DA7A42C
{
	vec2                             _0xD4B30625;                     // type:VECTOR2.0
	vec2                             _0xB75D820F;                     // type:VECTOR2.0
	float                            _0x8BFB0EBC;                     // type:FLOAT.0
	float                            RollSpringConstant;              // type:FLOAT.0
	float                            _0xA955FFFD;                     // type:FLOAT.0
	float                            _0x3DA30380;                     // type:FLOAT.0
	float                            _0x7AA36E37;                     // type:FLOAT.0
	float                            _0x94F2CE3C;                     // type:FLOAT.0
	float                            _0xF49FD97D;                     // type:FLOAT.0
	float                            _0xECE16627;                     // type:FLOAT.0
	float                            _0xC074D555;                     // type:FLOAT.0
	float                            _0xAA22883C;                     // type:FLOAT.0
	float                            _0x16CB1540;                     // type:FLOAT.0
	float                            _0xE47203B0;                     // type:FLOAT.0
	float                            _0x2F724C00;                     // type:FLOAT.0
	float                            _0xC7B63D7A;                     // type:FLOAT.0
	float                            _0xADF0073D;                     // type:FLOAT.0
	float                            _0xD4A4079D;                     // type:FLOAT.0
	float                            _0x2DFCD142;                     // type:FLOAT.0
	float                            _0x18E3418A;                     // type:FLOAT.0
	float                            _0x4AD25D1E;                     // type:FLOAT.0
	float                            _0x76CD0F87;                     // type:FLOAT.0
	float                            _0x14A5D82B;                     // type:FLOAT.0
	float                            _0x7996DDA3;                     // type:FLOAT.0
	float                            _0xE37A5178;                     // type:FLOAT.0
	uint                             _0x4E296890;                     // type:UINT.0
	enum _0x0100F80E                 _0x3E42F2F3;                     // type:ENUM.32BIT
	float                            _0xFE9ABD25;                     // type:FLOAT.0
	float                            _0x3C7617DB;                     // type:FLOAT.0
	struct _0xFC63113F               _0xB3A1C244;                     // type:STRUCT.STRUCTURE
};

struct _0x0DA7B608
{
	vec3                             _0xA6E1D38F;                     // type:VECTOR3.0
	vec3                             _0x0EC11B7B;                     // type:VECTOR3.0
	vec3                             _0xB01FE9B5;                     // type:VECTOR3.0
};

struct _0x0DA87F42 : CAICondition
{
	float                            TurnAngleDegrees;                // type:FLOAT.0
	float                            ThresholdDegrees;                // type:FLOAT.0
};

struct _0x0DBB4460
{
	map<enum _0x3B1F0870, struct _0xBEDB8C65>     _0x3456643F;                     // type:MAP.ATBINARYMAP
};

struct _0x0DC4B2F4 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum AmbientEventType            AmbientEventType;                // type:ENUM.32BIT
};

struct _0x0DCB0767
{
	string                           _0xBA21D87C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB83757DD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB4CB5EFD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x53D3E58E;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x952BF3FA               _0xB578C180;                     // type:STRUCT.STRUCTURE
	struct _0x952BF3FA               _0x55C4351C;                     // type:STRUCT.STRUCTURE
	struct _0x952BF3FA               _0x15A95B80;                     // type:STRUCT.STRUCTURE
	struct _0x952BF3FA               _0x1EED2905;                     // type:STRUCT.STRUCTURE
	struct _0x952BF3FA               _0xF73500C8;                     // type:STRUCT.STRUCTURE
};

struct _0x0DCCD956
{
	string                           _0xA077151E;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x5E53805F;                     // type:FLOAT.0
};

struct _0x0DCE0888 : _0xE1CC4086
{
	bool                             wasObserved;                     // type:BOOL.0
	bool                             wasDiscovered;                   // type:BOOL.0
};

struct _0x0DD1EDE8 : CTuning
{
	float                            stiffness;                       // type:FLOAT.0
	float                            damping;                         // type:FLOAT.0
	float                            recovery;                        // type:FLOAT.0
	enum eAnimBoneTag                part;                            // type:ENUM.32BIT
	float                            _0x7D8CFA47;                     // type:FLOAT.0
	float                            _0xD0D27D63;                     // type:FLOAT.0
	float                            _0x18D36BC8;                     // type:FLOAT.0
	float                            _0x508B9D3D;                     // type:FLOAT.0
	float                            _0x7D4F076A;                     // type:FLOAT.0
	int                              _0xBAFCB79C;                     // type:INT.0
	int                              _0x6EBA14C4;                     // type:INT.0
	float                            _0xC8E57DDD;                     // type:FLOAT.0
	float                            _0x0046EC7B;                     // type:FLOAT.0
	float                            _0xEE944916;                     // type:FLOAT.0
	float                            _0x8875C455;                     // type:FLOAT.0
	float                            _0x1B2D74D3;                     // type:FLOAT.0
	float                            _0xA294EAE3;                     // type:FLOAT.0
	bool                             _0xB09674C7;                     // type:BOOL.0
	bool                             _0xF4A4A201;                     // type:BOOL.0
	bool                             _0x668A3161;                     // type:BOOL.0
	bool                             _0xEFAA73DB;                     // type:BOOL.0
	float                            _0xA047AA82;                     // type:FLOAT.0
	float                            _0x8ABA566D;                     // type:FLOAT.0
	float                            _0xBC3E3CE5;                     // type:FLOAT.0
	bool                             _0xF7134129;                     // type:BOOL.0
	bool                             _0x1715C93D;                     // type:BOOL.0
	float                            _0xF890EBBF;                     // type:FLOAT.0
	bool                             _0x8EE908FE;                     // type:BOOL.0
	bool                             _0x6BDCF8F2;                     // type:BOOL.0
	float                            _0xB2775E0C;                     // type:FLOAT.0
	float                            _0x5F0FD630;                     // type:FLOAT.0
	float                            _0xFC2A0DAE;                     // type:FLOAT.0
	float                            _0xDDF542BD;                     // type:FLOAT.0
	float                            _0x19AE3E89;                     // type:FLOAT.0
	float                            _0xFF87AA9F;                     // type:FLOAT.0
	float                            _0x47620B36;                     // type:FLOAT.0
	float                            _0xCB5ACC8B;                     // type:FLOAT.0
	float                            _0x8D720E64;                     // type:FLOAT.0
	bool                             _0x15D56FA6;                     // type:BOOL.0
	bool                             _0x1B1C93A6;                     // type:BOOL.0
	bool                             _0xF301856D;                     // type:BOOL.0
	bool                             _0x078F6622;                     // type:BOOL.0
	bool                             _0x4EFC90E7;                     // type:BOOL.0
	float                            _0x6E506650;                     // type:FLOAT.0
	float                            _0x21861A3C;                     // type:FLOAT.0
	float                            _0xD1D560B8;                     // type:FLOAT.0
	float                            _0x4EFDED07;                     // type:FLOAT.0
	bool                             _0xD72E21DB;                     // type:BOOL.0
	bool                             _0xD39D40D8;                     // type:BOOL.0
	bool                             _0xA825B2D1;                     // type:BOOL.0
	bool                             _0x28293678;                     // type:BOOL.0
	bool                             _0x52ACE741;                     // type:BOOL.0
	bool                             _0xC8B4C113;                     // type:BOOL.0
	float                            _0x19B53D8D;                     // type:FLOAT.0
	struct _0x9B20B488               _0x994A8C76;                     // type:STRUCT.STRUCTURE
	float                            _0x1953AACB;                     // type:FLOAT.0
	float                            _0xA08BF196;                     // type:FLOAT.0
};

struct _0x0DD205EF
{
	enum _0x3B1F0870                 vfxGroup;                        // type:ENUM.32BIT
	string                           _0xD4063D75;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD2B3F7EF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3449C5E5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x13C89AB9;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0DD6CC45 : _0xDC10377E
{
	vec2                             _0x6094F53C;                     // type:VECTOR2.0
	vec2                             _0x75AE5621;                     // type:VECTOR2.0
	vec2                             _0xB9DE0E4C;                     // type:VECTOR2.0
	vec2                             _0x9243BB65;                     // type:VECTOR2.0
	vec2                             _0x9F3A739B;                     // type:VECTOR2.0
	float                            _0x5A6B6213;                     // type:FLOAT.0
	float                            _0x109ADE61;                     // type:FLOAT.0
	float                            _0x77BAEC3E;                     // type:FLOAT.0
	float                            _0xFD5D77A4;                     // type:FLOAT.0
	float                            _0x51C7CB88;                     // type:FLOAT.0
	float                            _0x21D74FD4;                     // type:FLOAT.0
	float                            _0x47315690;                     // type:FLOAT.0
	float                            _0xB97F5B73;                     // type:FLOAT.0
	float                            _0x919756E0;                     // type:FLOAT.0
	float                            _0xD89ABAC3;                     // type:FLOAT.0
	float                            _0x79FEB76D;                     // type:FLOAT.0
	float                            _0x1526CF72;                     // type:FLOAT.0
	float                            _0xD3792E4C;                     // type:FLOAT.0
	float                            _0x1F3FB164;                     // type:FLOAT.0
	float                            _0xECE63A8B;                     // type:FLOAT.0
	float                            _0xC4C9A95B;                     // type:FLOAT.0
	float                            _0x93D3A55B;                     // type:FLOAT.0
	float                            _0xA4A7D79D;                     // type:FLOAT.0
	float                            _0x20F54A1B;                     // type:FLOAT.0
	float                            _0x19DDBA0F;                     // type:FLOAT.0
	float                            _0x4AE1BC3F;                     // type:FLOAT.0
	float                            _0xECD31F85;                     // type:FLOAT.0
	float                            _0x3132D351;                     // type:FLOAT.0
	float                            _0x11180EEA;                     // type:FLOAT.0
	float                            _0x0BEC217E;                     // type:FLOAT.0
	float                            _0x6ED76C68;                     // type:FLOAT.0
	float                            _0x2B3285A3;                     // type:FLOAT.0
	float                            _0x119FF6A2;                     // type:FLOAT.0
	float                            _0x09D88A5F;                     // type:FLOAT.0
	float                            _0x9AA16850;                     // type:FLOAT.0
	uint                             _0xA07E8345;                     // type:UINT.0
	float                            _0x97CF28CF;                     // type:FLOAT.0
	float                            _0x0B5BB93D;                     // type:FLOAT.0
	float                            _0xDEB76B73;                     // type:FLOAT.0
	float                            _0x4C16BF04;                     // type:FLOAT.0
	float                            _0x39290FF6;                     // type:FLOAT.0
	float                            _0xFC57181A;                     // type:FLOAT.0
	float                            _0x9489C59D;                     // type:FLOAT.0
	float                            _0x6FD54E88;                     // type:FLOAT.0
	float                            _0x8C90E6EF;                     // type:FLOAT.0
};

struct _0x0DE512A7
{
	struct _0x994A44C6                  Performer;                       // type:STRUCT.STRUCTURE
	struct _0x994A44C6                  Target;                          // type:STRUCT.STRUCTURE
	struct _0x994A44C6                  Weapon;                          // type:STRUCT.STRUCTURE
	array<struct _0x994A44C6>           Spawned;                         // type:ARRAY.ATARRAY
	map<string, struct _0x994A44C6>     InGameEntities;                  // type:MAP.ATBINARYMAP
	map<string, struct _0x994A44C6>     AnimSceneEntities;               // type:MAP.ATBINARYMAP
	string                              PerformerGripData;               // type:STRING.ATNONFINALHASHSTRING
	string                              OverrideClipSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                              OverrideClipSetFemale;           // type:STRING.ATNONFINALHASHSTRING
	float                               OverrideBlendInDuration;         // type:FLOAT.0
	bitset<enum _0xA1E26FB1>            Flags;                           // type:BITSET.32BIT
};

struct _0x0DEE1CA7
{
	float                            Speed;                           // type:FLOAT.0
	float                            ClipRate;                        // type:FLOAT.0
};

struct _0x0DF38D1F
{
	uint                             _0x205DFFE3;                     // type:UINT.0
	uint                             _0x7E162B38;                     // type:UINT.0
	uint                             _0x428A40D5;                     // type:UINT.0
	uint                             _0xB1438789;                     // type:UINT.0
	uint                             _0x462C3222;                     // type:UINT.0
};

struct _0x0DF66681 : CTuning
{
	struct naSpeechEventTypeBatchRequestParams     _0x4F6C4669;                     // type:STRUCT.STRUCTURE
	float                                          _0x956A4A51;                     // type:FLOAT.0
	float                                          _0xBC165C0E;                     // type:FLOAT.0
	float                                          _0x5120F942;                     // type:FLOAT.0
	float                                          _0x493D86D7;                     // type:FLOAT.0
	float                                          _0xCA5E9518;                     // type:FLOAT.0
	float                                          _0x00030939;                     // type:FLOAT.0
};

struct _0x0E1B275B
{
	float                            _0x0F36DA39;                     // type:FLOAT.0
	float                            _0xEC59EABF;                     // type:FLOAT.0
	float                            _0x0283C1A9;                     // type:FLOAT.0
	float                            _0xDE143930;                     // type:FLOAT.0
	float                            _0x05825533;                     // type:FLOAT.0
	int                              _0xBB42ABA2;                     // type:INT.0
};

struct _0x0E1D2569
{
	float                            BaseRechargeRate;                // type:FLOAT.0
	float                            RechargeInCoverMultiplier;       // type:FLOAT.0
	float                            RechargeMovementMultiplier;      // type:FLOAT.0
	float                            RechargeOnHorseOrInVehicleMovementMultiplier; // type:FLOAT.0
	float                            RechargeInMeleeMultiplier;       // type:FLOAT.0
	float                            _0xAF6C7D9F;                     // type:FLOAT.0
	float                            _0xEB316C80;                     // type:FLOAT.0
	float                            TimeToRechargeSinceLastDamage;   // type:FLOAT.0
	float                            TimeToRechargeSinceLastDamageInCover; // type:FLOAT.0
	float                            TimeToRechargeSinceLastFullBodyHitReact; // type:FLOAT.0
	float                            TimeToRechargeSinceLastDamageInMelee; // type:FLOAT.0
	float                            MovementSpeedThreshold;          // type:FLOAT.0
	float                            MovementOnHorseOrInVehicleSpeedThreshold; // type:FLOAT.0
	float                            MaxHealthToRechargeAsPercentage; // type:FLOAT.0
};

struct _0x0E2296F7 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	int                              DeepWaterThreshold;              // type:INT.0
};

struct _0x0E239174
{
	string                           PedSet;                          // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                           DrivebyTransitionIndex;          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x0E373713
{
	bool                             Apply;                           // type:BOOL.0
	vec3                             Constant;                        // type:VECTOR3.0
	vec3                             Velocity;                        // type:VECTOR3.0
	vec3                             Velocity2;                       // type:VECTOR3.0
	float                            Max;                             // type:FLOAT.0
	int                              Delay;                           // type:INT.0
};

struct _0x0E3AAD70 : CTuning
{
	float                            fCutoffDistForNodeSearch;        // type:FLOAT.0
	float                            fMinDistanceBetweenNodes;        // type:FLOAT.0
	float                            fForwardProjectionInSeconds;     // type:FLOAT.0
	float                            fDistBeforeMovingToNextNode;     // type:FLOAT.0
	float                            _0x5D3B6ABE;                     // type:FLOAT.0
	float                            _0xF30B9772;                     // type:FLOAT.0
	float                            fTimeBeforeRestart;              // type:FLOAT.0
	bool                             bIgnoreSwitchedOffNodes;         // type:BOOL.0
	bool                             bUseWaterNodes;                  // type:BOOL.0
	bool                             bUseOnlyHighwayNodes;            // type:BOOL.0
	bool                             bSearchUpFromPosition;           // type:BOOL.0
};

struct _0x0E4BCD35
{
	float                            SearchRadius;                    // type:FLOAT.0
	float                            _0x1F7F9547;                     // type:FLOAT.0
	float                            _0x87D4AF6D;                     // type:FLOAT.0
	float                            MaxZDiff;                        // type:FLOAT.0
	float                            _0x09DEDCC8;                     // type:FLOAT.0
	bool                             _0x7F368D6E;                     // type:BOOL.0
	float                            _0x67279493;                     // type:FLOAT.0
	float                            _0x4E1F080E;                     // type:FLOAT.0
	float                            _0xA369FFDB;                     // type:FLOAT.0
	float                            _0x940E2BD2;                     // type:FLOAT.0
};

struct _0x0E4F8FF9 : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	enum _0xEB8DD8AD                 minimum;                         // type:ENUM.32BIT
	enum _0xEB8DD8AD                 maximum;                         // type:ENUM.32BIT
	enum _0xEB8DD8AD                 default;                         // type:ENUM.32BIT
};

struct _0x0E51062E : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Agitator;                        // type:ENUM.32BIT
};

struct _0x0E5A5545
{
	uint                             NumTests;                        // type:UINT.0
	float                            LengthScaling;                   // type:FLOAT.0
	vec2                             OffsetLimits;                    // type:VECTOR2.0
};

struct _0x0E67DD7A : CTuning
{
	float                            _0x97A6D110;                     // type:FLOAT.0
	float                            _0x5359B004;                     // type:FLOAT.0
};

struct _0x0E7BBDE9 : _0x613AA048
{
	array<struct _0x613AA048>        Sets;                            // type:ARRAY.ATARRAY
};

struct _0x0E98123A
{
	float                            fCutoffDistForNodeSearch;        // type:FLOAT.0
	float                            fMinDistanceBetweenNodes;        // type:FLOAT.0
	float                            fForwardProjectionInSeconds;     // type:FLOAT.0
	float                            fDistBeforeMovingToNextNode;     // type:FLOAT.0
	float                            _0xAB907987;                     // type:FLOAT.0
	float                            _0x6E4F0BAC;                     // type:FLOAT.0
	float                            _0xEB701698;                     // type:FLOAT.0
	float                            _0x3AD570D6;                     // type:FLOAT.0
	float                            _0xBCA04EB2;                     // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStartJoiningRoadMin; // type:FLOAT.0
	float                            fDistanceToRoadExtentsToStartJoiningRoadMax; // type:FLOAT.0
	float                            _0x76EA4ABF;                     // type:FLOAT.0
	float                            _0xCF8F8504;                     // type:FLOAT.0
	float                            _0x349C4C2F;                     // type:FLOAT.0
	float                            _0xF35852EC;                     // type:FLOAT.0
	float                            _0x7930268E;                     // type:FLOAT.0
	float                            _0x23A2E05D;                     // type:FLOAT.0
	float                            _0xC6D3C691;                     // type:FLOAT.0
	float                            _0xD75C34CD;                     // type:FLOAT.0
	float                            _0x9FB86F63;                     // type:FLOAT.0
	float                            _0x1DE64208;                     // type:FLOAT.0
	float                            _0xF5341D0D;                     // type:FLOAT.0
	float                            _0x601AAD3A;                     // type:FLOAT.0
	float                            _0x45378768;                     // type:FLOAT.0
	uint                             _0xEC5641DF;                     // type:UINT.0
	bool                             bIgnoreSwitchedOffNodes;         // type:BOOL.0
	bool                             bUseWaterNodes;                  // type:BOOL.0
	bool                             bUseOnlyHighwayNodes;            // type:BOOL.0
	bool                             bSearchUpFromPosition;           // type:BOOL.0
};

struct _0x0E9A9B9A
{
	array<char, 56>                  data;                            // type:ARRAY.MEMBER
};

struct _0x0EAC6741 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Threshold;                       // type:FLOAT.0
	array<enum eAnimBoneTag>         _0x58A87222;                     // type:ARRAY.ATARRAY
};

struct _0x0EAF2D66 : CTuning
{
	float                            MinDelay;                        // type:FLOAT.0
	float                            MaxDelay;                        // type:FLOAT.0
};

struct _0x0EB6EFC7
{
	bool                             bEnableBreakableObjectHelper;    // type:BOOL.0
	int                              iFramesWaitFromLastDamageBeforeStartUpdate; // type:INT.0
	float                            fMinDistanceToFireObjectForUpdate; // type:FLOAT.0
	float                            fMinTimeBeforeConsecutiveUpdatesMs; // type:FLOAT.0
	int                              iMaxRetryFailuresForHelperTask;  // type:INT.0
};

struct _0x0EC5E0A0 : _0xFABD9DF5
{
};

struct _0x0EDADF0C : _0xBA4BE0CB
{
};

struct _0x0F1B3487
{
	struct _0x4FA0E646               Sphere;                          // type:STRUCT.STRUCTURE
	bitset<enum _0xEE89B448>         Flags;                           // type:BITSET.32BIT
};

struct _0x0F3B54FE : _0xFCA95283
{
};

struct _0x0F42C539
{
	uint                             _0xE6DF671D;                     // type:UINT.0
	uint                             _0xE6964EBC;                     // type:UINT.0
	uint                             _0xF678D31F;                     // type:UINT.0
	float                            _0x52208EB8;                     // type:FLOAT.0
	float                            _0xE1E4DE4E;                     // type:FLOAT.2
	uint                             _0x7717CEFA;                     // type:UINT.0
	float                            _0x32DAE2A3;                     // type:FLOAT.0
	float                            _0x0BE43A03;                     // type:FLOAT.0
	float                            _0x3154006D;                     // type:FLOAT.0
	float                            _0x283148FE;                     // type:FLOAT.0
	float                            _0x2E02D272;                     // type:FLOAT.0
	float                            _0xFBAE230F;                     // type:FLOAT.0
	float                            _0xAEA0DF8E;                     // type:FLOAT.0
	float                            _0x64E4B4BE;                     // type:FLOAT.0
	float                            _0xC42345C1;                     // type:FLOAT.2
	float                            _0xA2593977;                     // type:FLOAT.0
	float                            _0xC35AC1C2;                     // type:FLOAT.0
	float                            _0x27DABD0D;                     // type:FLOAT.0
	float                            _0xCEA90122;                     // type:FLOAT.0
	float                            _0x0A90349D;                     // type:FLOAT.0
	float                            _0x4C861A17;                     // type:FLOAT.0
	float                            _0xC73EDB68;                     // type:FLOAT.0
	float                            _0x3AA107D5;                     // type:FLOAT.0
	float                            _0x78AE4802;                     // type:FLOAT.0
	float                            _0xB10DA59F;                     // type:FLOAT.0
	float                            _0x34406057;                     // type:FLOAT.0
	float                            _0x29188554;                     // type:FLOAT.0
	float                            _0xFE0EEBBD;                     // type:FLOAT.2
	float                            _0xC1D4B812;                     // type:FLOAT.2
	float                            _0x066AC969;                     // type:FLOAT.2
	float                            _0xE921C370;                     // type:FLOAT.2
	float                            _0xA1C85F90;                     // type:FLOAT.2
	float                            _0x24CDE3FB;                     // type:FLOAT.2
	float                            _0x88108289;                     // type:FLOAT.2
	float                            _0x38FE9625;                     // type:FLOAT.2
	float                            _0xDD8D8920;                     // type:FLOAT.2
	float                            _0x2A1FAA81;                     // type:FLOAT.0
	float                            _0xC4843BE5;                     // type:FLOAT.0
	float                            _0x182E9309;                     // type:FLOAT.0
	float                            _0x1D7DC344;                     // type:FLOAT.0
	float                            _0xE3D168E5;                     // type:FLOAT.0
	float                            _0x1ED7B5FE;                     // type:FLOAT.0
	float                            _0xEE1890B3;                     // type:FLOAT.0
	float                            _0xE4405E7E;                     // type:FLOAT.0
	uint                             _0x69DCD2CE;                     // type:UINT.0
	uint                             _0x1F05E18C;                     // type:UINT.0
	float                            _0xD8033A02;                     // type:FLOAT.2
	float                            _0x36DD598B;                     // type:FLOAT.2
	float                            _0xC0179ECD;                     // type:FLOAT.0
	uint                             _0x613A1972;                     // type:UINT.0
	float                            _0x9A053FE6;                     // type:FLOAT.0
	float                            _0x540C4A30;                     // type:FLOAT.0
	float                            _0x2E2B5046;                     // type:FLOAT.0
	float                            _0x5F69AE96;                     // type:FLOAT.0
	vec3V                            _0x26ACD9FF;                     // type:VEC3V.0
	float                            _0xEF5D6823;                     // type:FLOAT.0
	float                            _0x6B325A9D;                     // type:FLOAT.2
	float                            _0xF5A1E270;                     // type:FLOAT.2
	float                            _0xFCEFBF83;                     // type:FLOAT.0
	float                            _0x18DB952C;                     // type:FLOAT.0
	float                            _0x097249C7;                     // type:FLOAT.2
	float                            _0x9A80C7CD;                     // type:FLOAT.2
	float                            _0xDFF71EF4;                     // type:FLOAT.2
	float                            _0x33FE80CE;                     // type:FLOAT.2
	float                            _0x586425CF;                     // type:FLOAT.0
	float                            _0x5181A49A;                     // type:FLOAT.0
	float                            _0x718469AA;                     // type:FLOAT.0
	float                            _0x33EAEE15;                     // type:FLOAT.0
	float                            _0x33FE5013;                     // type:FLOAT.0
	bool                             _0xC2D6E214;                     // type:BOOL.0
	bool                             _0x5F2AFFDE;                     // type:BOOL.0
	float                            _0x3905B7D6;                     // type:FLOAT.0
	float                            _0x8061F65C;                     // type:FLOAT.0
	float                            _0x90A5D70D;                     // type:FLOAT.0
	float                            _0xE8362497;                     // type:FLOAT.0
	float                            _0x1CE72120;                     // type:FLOAT.0
	float                            _0x9FB5D0C3;                     // type:FLOAT.0
	bool                             _0x3335C318;                     // type:BOOL.0
	float                            _0x41022A9E;                     // type:FLOAT.2
	float                            _0xF0F5625D;                     // type:FLOAT.2
	float                            _0x357FF6BA;                     // type:FLOAT.0
	float                            _0x29EF743B;                     // type:FLOAT.2
	float                            _0xF03299F5;                     // type:FLOAT.2
	vec3V                            _0x0234D8A4;                     // type:VEC3V.0
	vec3V                            _0xDB2FDCC7;                     // type:VEC3V.0
	vec3V                            _0x16A4A361;                     // type:VEC3V.0
	float                            _0x1A73E0FF;                     // type:FLOAT.0
	float                            _0x3C221A82;                     // type:FLOAT.0
	float                            _0x81833F67;                     // type:FLOAT.2
	float                            _0xA53310F9;                     // type:FLOAT.2
	float                            _0xC706BEAB;                     // type:FLOAT.2
	float                            _0xFF0D1B11;                     // type:FLOAT.0
	float                            _0x40DDC121;                     // type:FLOAT.0
	float                            _0xCFC3A1BF;                     // type:FLOAT.0
	float                            _0xAC59E67C;                     // type:FLOAT.0
	float                            _0xB3A6CB32;                     // type:FLOAT.0
	float                            _0x5DCD218F;                     // type:FLOAT.0
	float                            _0x654D98C9;                     // type:FLOAT.0
};

struct _0x0F4E5CCA
{
	struct _0x9C07C204               debugColor;                      // type:STRUCT.STRUCTURE
	struct _0x9C07C204               _0x1D536E9C;                     // type:STRUCT.STRUCTURE
	ushort                           _0xD48E9474;                     // type:USHORT.0
	uchar                            _0x6B5BC258;                     // type:UCHAR.0
	uchar                            _0x1CCFA541;                     // type:UCHAR.0
	ushort                           _0xA1941AFF;                     // type:USHORT.0
	uchar                            _0xEB66AE9F;                     // type:UCHAR.0
	uchar                            _0xA840A854;                     // type:UCHAR.0
};

struct _0x0F5161EB
{
};

struct _0x0F696E50 : CAICondition
{
	enum _0xC744E0AD                 Role;                            // type:ENUM.32BIT
};

struct _0x0F7FC899 : _0x4A265BE5
{
};

struct _0x0F81917B : CSaveChallengeBase
{
	array<struct SaveChallengeGoal>     _0x56E0543B;                     // type:ARRAY.ATARRAY
};

struct _0x0F8E6B8F
{
	string                                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	string                                           PropSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                                           WeaponInfo;                      // type:STRING.ATNONFINALHASHSTRING
	string                                           InitClipSet;                     // type:STRING.ATNONFINALHASHSTRING
	vec3V                                            Offset;                          // type:VEC3V.0
	vec3V                                            Rotation;                        // type:VEC3V.0
	float                                            ChanceOfSpawning;                // type:FLOAT.0
	float                                            Weight;                          // type:FLOAT.0
	int                                              _0xC30511B1;                     // type:INT.0
	bool                                             DisablePickup;                   // type:BOOL.0
	bool                                             FixedPhysics;                    // type:BOOL.0
	bool                                             UprootsSiblings;                 // type:BOOL.0
	float                                            WeaponDamage;                    // type:FLOAT.0
	float                                            WeaponSoot;                      // type:FLOAT.0
	float                                            WeaponDirt;                      // type:FLOAT.0
	float                                            _0x5DE45EC6;                     // type:FLOAT.0
	float                                            WeaponDegradation;               // type:FLOAT.0
	float                                            WeaponPermanentDegradation;      // type:FLOAT.0
	struct CScenarioSpawnedPropInfo__DofInitData     AnimDofInitData;                 // type:STRUCT.POINTER
	struct CAICondition                              SpawnCondition;                  // type:STRUCT.POINTER
	bitset<enum _0x7AFE45A6>                         Flags;                           // type:BITSET.32BIT
};

struct _0x0FC1398F : _0x8A0DC979
{
};

struct _0x0FC801A4 : CTuning
{
	float                            _0x5515E6BA;                     // type:FLOAT.0
	float                            ExtraFleeDistance;               // type:FLOAT.0
	float                            _0x756C373D;                     // type:FLOAT.0
	float                            _0xD2297DD9;                     // type:FLOAT.0
	bool                             _0x6D2AC85F;                     // type:BOOL.0
	int                              _0xA64B0BDC;                     // type:INT.0
	bool                             _0xB7530BF0;                     // type:BOOL.0
	bool                             _0x845B017B;                     // type:BOOL.0
};

struct _0x0FC8022E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
	int                              Lifetime;                        // type:INT.0
};

struct _0x0FCCCE05
{
	bitset<enum _0x9F7A5650>         Flags;                           // type:BITSET.32BIT
	float                            MovementCostModifier;            // type:FLOAT.0
};

struct _0x0FDC27F6 : CTuning
{
	struct _0x21FD2285               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x0FE066BD : _0xA26E1113
{
	array<float, 3>                  value;                           // type:ARRAY.ATRANGEARRAY
};

struct _0x0FEA1FB7
{
	float                            fImpulseMultLimbs;               // type:FLOAT.0
	float                            fImpulseMultSpine;               // type:FLOAT.0
	float                            fMinSpeedForPush;                // type:FLOAT.0
	float                            fFastCarPushImpulseMult;         // type:FLOAT.0
};

struct _0x0FEF4A59 : CTuning
{
	float                            _0xFCC8E32D;                     // type:FLOAT.0
	int                              _0x6326DFB6;                     // type:INT.0
};

struct _0x0FF0FDB0
{
	enum _0xA36A0DC0                 _0x09B920BD;                     // type:ENUM.32BIT
	float                            _0xC267D3F2;                     // type:FLOAT.0
	bool                             _0x2C6AC8A9;                     // type:BOOL.0
	bool                             _0x73C2BCB6;                     // type:BOOL.0
	float                            _0xF5EE2A6F;                     // type:FLOAT.0
	float                            _0x7EDEFAEF;                     // type:FLOAT.0
};

struct _0x0FF27871
{
	enum _0xF1B5DF91                 Type;                            // type:ENUM.32BIT
	vec3V                            Position;                        // type:VEC3V.0
	vec3V                            Orientation;                     // type:VEC3V.0
	vec3V                            Scale;                           // type:VEC3V.0
	bool                             AffectsPlayer;                   // type:BOOL.0
	bool                             AffectsPlayerHorse;              // type:BOOL.0
	bool                             AppliesWhenOnRoad;               // type:BOOL.0
	bool                             AppliesWhenInDanger;             // type:BOOL.0
	bool                             SwampArea;                       // type:BOOL.0
	array<float, 4>                  GaitRatios;                      // type:ARRAY.ATFIXEDARRAY
};

struct _0x101A7B94
{
	bool                             _0x98458144;                     // type:BOOL.0
	bool                             OnlyAllowForShot;                // type:BOOL.0
	bool                             AllowWhenBalanced;               // type:BOOL.0
	float                            MinHealth;                       // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
	float                            _0x35105B50;                     // type:FLOAT.0
	float                            _0x91E058FA;                     // type:FLOAT.0
	float                            _0xCE348154;                     // type:FLOAT.0
	float                            _0x8C2664D0;                     // type:FLOAT.0
	float                            _0xCD7E87D2;                     // type:FLOAT.0
	float                            MaxUprightRatio;                 // type:FLOAT.0
	float                            _0x040B42DA;                     // type:FLOAT.0
};

struct _0x102B44CC
{
	bitset<enum _0xCBF128D1>         Flags;                           // type:BITSET.32BIT
	float                            Bonus;                           // type:FLOAT.0
};

struct _0x102DB114
{
	struct void                       Link;                            // type:STRUCT.EXTERNAL_NAMED
	map<enum _0x6F35EEBB, string>     _0xC9C7C059;                     // type:MAP.ATBINARYMAP
};

struct _0x10338E35
{
	bool                             bManualTag;                      // type:BOOL.0
	bool                             bNoAutoDeactivation;             // type:BOOL.0
	bool                             bHighlightFatalDamageRegions;    // type:BOOL.0
	bool                             bHighlightCriticalDamageRegions; // type:BOOL.0
};

struct _0x1036D182
{
	float                            KeepWeapon;                      // type:FLOAT.0
	float                            MatchTargetWeapon;               // type:FLOAT.0
	float                            EquipBestWeapon;                 // type:FLOAT.0
};

struct _0x1038D339
{
	enum _0xBF94F67E                 Pelvis;                          // type:ENUM.32BIT
	enum _0xBF94F67E                 _0x5BEB0238;                     // type:ENUM.32BIT
	enum _0xBF94F67E                 _0x16AE77C0;                     // type:ENUM.32BIT
	enum _0xBF94F67E                 _0x1901FFD4;                     // type:ENUM.32BIT
	enum _0xBF94F67E                 Head;                            // type:ENUM.32BIT
	enum _0xBF94F67E                 _0x1E7F9271;                     // type:ENUM.32BIT
	enum _0xBF94F67E                 _0x4693E2A5;                     // type:ENUM.32BIT
	enum _0xBF94F67E                 _0x7F9FADD5;                     // type:ENUM.32BIT
	enum _0xBF94F67E                 _0xC2B9B40C;                     // type:ENUM.32BIT
	enum _0xBF94F67E                 _0xB87D4973;                     // type:ENUM.32BIT
};

struct _0x1054F746
{
};

struct _0x1064E799
{
	float                            DistMin;                         // type:FLOAT.0
	float                            DistMax;                         // type:FLOAT.0
	float                            AngleMin;                        // type:FLOAT.0
	float                            AngleMax;                        // type:FLOAT.0
};

struct _0x106BA323
{
	string                           BoolEntityId;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             BoolEntityValue;                 // type:BOOL.0
};

struct _0x106E297E
{
	float                            _0xAB5E9AC9;                     // type:FLOAT.0
	float                            _0x82276554;                     // type:FLOAT.0
	float                            _0xF6DD01A8;                     // type:FLOAT.0
	string                           _0xD41DAACC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3C902DD3;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0x6E15EF12;                     // type:INT.0
	int                              _0x2A9E2FBC;                     // type:INT.0
	array<string>                    _0x5F600C00;                     // type:ARRAY.ATARRAY
};

struct _0x1070CF86 : _0x5A5C67A0
{
	bool                             _0x4BA24E3E;                     // type:BOOL.0
	bool                             _0xC18CF642;                     // type:BOOL.0
	bool                             _0x0C610D0C;                     // type:BOOL.0
	bool                             _0x18A25156;                     // type:BOOL.0
	bool                             _0xEBE23BCC;                     // type:BOOL.0
	bool                             _0x5FBC9508;                     // type:BOOL.0
	bool                             _0xDB2FECDF;                     // type:BOOL.0
	bool                             _0x70E57379;                     // type:BOOL.0
	bool                             _0x9AD776EA;                     // type:BOOL.0
	bool                             _0x7C0B434A;                     // type:BOOL.0
	bool                             _0x74FC995E;                     // type:BOOL.0
	bool                             _0x842E61AC;                     // type:BOOL.0
};

struct _0x107E18C3 : _0xA4857667
{
	enum _0x729D6EED                 Operation;                       // type:ENUM.32BIT
};

struct _0x108F34F1 : _0x1054F746
{
};

struct _0x10985556
{
	array<struct _0x2BCDB232>        RightHandClipSets;               // type:ARRAY.ATARRAY
	array<struct _0x2BCDB232>        LeftHandClipSets;                // type:ARRAY.ATARRAY
};

struct _0x10D25514 : _0x0A510DA9
{
};

struct _0x10D580AC
{
	float                            RootMinLimitScale;               // type:FLOAT.0
	float                            RootMaxLimitScale;               // type:FLOAT.0
	float                            HighestForeLegHeightDeltaPercentage; // type:FLOAT.0
	float                            LowestForeLegHeightDeltaPercentage; // type:FLOAT.0
	float                            RearLegMaxLengthScale;           // type:FLOAT.0
	float                            _0xB712A221;                     // type:FLOAT.0
};

struct _0x10ED8FD9
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	string                           _0x19B66650;                     // type:STRING.ATFINALHASHSTRING
	bitset<enum _0x384386A3>         _0x6E19A114;                     // type:BITSET.32BIT
	array<string>                    _0x3100E55C;                     // type:ARRAY.ATARRAY
};

struct _0x10F2D5E9
{
	float                            _0x246DB944;                     // type:FLOAT.0
	float                            _0x624F98C8;                     // type:FLOAT.0
	float                            _0xA088E3BC;                     // type:FLOAT.0
	float                            _0x60BBDC42;                     // type:FLOAT.0
	float                            _0xB6FFEE48;                     // type:FLOAT.0
	float                            _0xB9F1365B;                     // type:FLOAT.0
	float                            _0x0B28F19D;                     // type:FLOAT.0
	float                            _0x17997D93;                     // type:FLOAT.0
	float                            _0x03BA6D40;                     // type:FLOAT.0
	float                            _0x8969B9D2;                     // type:FLOAT.0
	float                            _0x2406138B;                     // type:FLOAT.0
	float                            _0x9ADF4793;                     // type:FLOAT.0
	uint                             _0xBCF6A101;                     // type:UINT.0
	uint                             _0x54CC1281;                     // type:UINT.0
};

struct _0x10F8CDA5 : CTuning
{
	float                            _0xDE633510;                     // type:FLOAT.0
	float                            _0x75D89EA6;                     // type:FLOAT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
};

struct _0x1125481D : CTuning
{
	float                                          _0x41DB5D79;                     // type:FLOAT.0
	float                                          _0x07D5D303;                     // type:FLOAT.0
	float                                          _0xB8DD17B1;                     // type:FLOAT.0
	float                                          _0x9A5D7FEB;                     // type:FLOAT.0
	float                                          _0x622A705B;                     // type:FLOAT.0
	float                                          _0x5CDC7019;                     // type:FLOAT.0
	float                                          _0x5A2061A9;                     // type:FLOAT.0
	float                                          _0x44CBC95B;                     // type:FLOAT.0
	float                                          _0xEE7AB606;                     // type:FLOAT.0
	float                                          _0xE78E7BE5;                     // type:FLOAT.0
	float                                          _0x4F695292;                     // type:FLOAT.0
	float                                          _0x26708387;                     // type:FLOAT.0
	float                                          _0x5CB72402;                     // type:FLOAT.0
	float                                          _0x2043F6FB;                     // type:FLOAT.0
	float                                          _0xA60C7F55;                     // type:FLOAT.0
	float                                          _0x53576A2D;                     // type:FLOAT.0
	float                                          _0xC5045D44;                     // type:FLOAT.0
	float                                          _0xD945C6A8;                     // type:FLOAT.0
	float                                          _0x53A8D3A5;                     // type:FLOAT.0
	float                                          _0xB2588609;                     // type:FLOAT.0
	float                                          _0x1B31F13F;                     // type:FLOAT.0
	float                                          _0x8887869E;                     // type:FLOAT.0
	float                                          _0x953B4DBE;                     // type:FLOAT.0
	float                                          _0xE97A45F9;                     // type:FLOAT.0
	float                                          _0x0E356811;                     // type:FLOAT.0
	float                                          _0xE7F04525;                     // type:FLOAT.0
	float                                          _0xFE292A7C;                     // type:FLOAT.0
	float                                          _0x166B89B7;                     // type:FLOAT.0
	float                                          _0x1CBA61BF;                     // type:FLOAT.0
	float                                          _0xA61E2748;                     // type:FLOAT.0
	float                                          _0x956A4A51;                     // type:FLOAT.0
	float                                          _0xBC165C0E;                     // type:FLOAT.0
	float                                          _0xA7111E8B;                     // type:FLOAT.0
	float                                          _0x1B2576D4;                     // type:FLOAT.0
	bool                                           _0x7E5EE94D;                     // type:BOOL.0
	bool                                           _0x47043291;                     // type:BOOL.0
	bool                                           _0x030D0D0F;                     // type:BOOL.0
	bool                                           _0x88447B5A;                     // type:BOOL.0
	bool                                           _0xB6F341A1;                     // type:BOOL.0
	struct naSpeechEventTypeBatchRequestParams     _0x4F6C4669;                     // type:STRUCT.STRUCTURE
};

struct _0x11256464 : _0x1054F746
{
};

struct _0x112DC488
{
	struct _0x734C6EE2               _0x01A12ABD;                     // type:STRUCT.STRUCTURE
	struct _0x734C6EE2               _0x1EE35B22;                     // type:STRUCT.STRUCTURE
	struct _0x734C6EE2               _0x36E424C4;                     // type:STRUCT.STRUCTURE
	struct _0x734C6EE2               _0xE838D9CE;                     // type:STRUCT.STRUCTURE
};

struct _0x113B3E29 : _0x4F9987A4
{
	enum _0x563FBCEA                 _0x770F4295;                     // type:ENUM.32BIT
};

struct _0x113B9618 : _0x74EB5104
{
};

struct _0x113FCE3E
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct _0xC6E5CDA3               Say;                             // type:STRUCT.STRUCTURE
};

struct _0x11441772
{
	enum InteractionType             Type;                            // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct CAICondition              ActivationCondition;             // type:STRUCT.POINTER
	struct _0xBAFFFC5E               TimeBeforeInitialReaction;       // type:STRUCT.STRUCTURE
	struct _0xBAFFFC5E               TimeBetweenEscalatingReactions;  // type:STRUCT.STRUCTURE
	struct _0xBAFFFC5E               TimeAfterLastSuccessfulReaction; // type:STRUCT.STRUCTURE
	struct _0xBAFFFC5E               TimeAfterInitialReactionFailure; // type:STRUCT.STRUCTURE
	float                            MinDotToTarget;                  // type:FLOAT.0
	float                            MaxDotToTarget;                  // type:FLOAT.0
	float                            MinTargetSpeed;                  // type:FLOAT.0
	float                            MaxTargetSpeed;                  // type:FLOAT.0
	float                            MinDistanceToExpire;             // type:FLOAT.0
	uchar                            MaxReactions;                    // type:UCHAR.0
	bitset<enum _0xC59FB21D>         Flags;                           // type:BITSET.32BIT
};

struct _0x11498AC6 : camCinematicContextMetadata
{
	uint                             _0xE783E69C;                     // type:UINT.0
	uint                             _0x32FB4DCC;                     // type:UINT.0
	uint                             _0x846CD273;                     // type:UINT.0
	uint                             _0xD9B22C1D;                     // type:UINT.0
};

struct _0x115F7CEA
{
	float                            _0x3298FE44;                     // type:FLOAT.0
	float                            _0xB8997173;                     // type:FLOAT.0
};

struct _0x1188BEB4
{
	string                           tag;                             // type:STRING.ATNONFINALHASHSTRING
	string                           fromState;                       // type:STRING.ATNONFINALHASHSTRING
	string                           toState;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x11978CD8
{
	array<struct _0xCB777BD3>        Ranges;                          // type:ARRAY.ATARRAY
};

struct _0x119962EE
{
	array<array<vec3V, 2>, 5>        DeltaLimits;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x119F369B
{
	struct _0x4FD1156B               WitnessInformation;              // type:STRUCT.STRUCTURE
	enum _0x655601C3                 Severity;                        // type:ENUM.32BIT
	bool                             Disabled;                        // type:BOOL.0
};

struct _0x11AD3051
{
};

struct _0x11C1BC42
{
	map<string, string>              _0x74AD5638;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x4B1563D9;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x3142F6A6;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x72329CD0;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x35D53047;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x285E227B;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0xCDC38D4F;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0xCB3DB210;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0xFC6733F3;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0xF1DE4C09;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x27C1E9D2;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0xEE00DA8E;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x17CB3594;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x0E552024;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x535806C0;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x4928E8B5;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x198449F8;                     // type:MAP.ATBINARYMAP
	map<string, string>              _0x8AEF8ADE;                     // type:MAP.ATBINARYMAP
};

struct _0x11C2CD73 : CAICondition
{
};

struct _0x11C51609
{
	string                           Name;                            // type:STRING.ATSTRING
	string                           ShortName;                       // type:STRING.ATSTRING
	float                            Sun;                             // type:FLOAT.0
	float                            WindMin;                         // type:FLOAT.0
	float                            WindMax;                         // type:FLOAT.0
	float                            WindAngle;                       // type:FLOAT.0
	float                            _0xBE390065;                     // type:FLOAT.0
	float                            WindGustsChance;                 // type:FLOAT.0
	float                            WindGustsSpeedMin;               // type:FLOAT.0
	float                            WindGustsSpeedMax;               // type:FLOAT.0
	float                            WindGustsDurationMin;            // type:FLOAT.0
	float                            WindGustsDurationMax;            // type:FLOAT.0
	float                            WindGustsFadeInRatioMin;         // type:FLOAT.0
	float                            WindGustsFadeInRatioMax;         // type:FLOAT.0
	float                            WindGustsFadeOutRatioMin;        // type:FLOAT.0
	float                            WindGustsFadeOutRatioMax;        // type:FLOAT.0
	float                            WindEmission;                    // type:FLOAT.0
	float                            WindEmissionWindSpeedMin;        // type:FLOAT.0
	float                            WindEmissionWindSpeedMax;        // type:FLOAT.0
	float                            Rain;                            // type:FLOAT.0
	float                            Snow;                            // type:FLOAT.0
	float                            Fog;                             // type:FLOAT.0
	float                            CloudType;                       // type:FLOAT.0
	float                            Humidity;                        // type:FLOAT.0
	float                            MudWashSpeed;                    // type:FLOAT.0
	float                            _0xF5C6B927;                     // type:FLOAT.0
	float                            WetnessIncSpeed;                 // type:FLOAT.0
	float                            WetnessDecSpeed;                 // type:FLOAT.0
	float                            SoakIncSpeed;                    // type:FLOAT.0
	float                            SoakDecSpeed;                    // type:FLOAT.0
	bool                             Lightning;                       // type:BOOL.0
	bool                             Sandstorm;                       // type:BOOL.0
	bool                             IsNice;                          // type:BOOL.0
	bool                             IsBlizzard;                      // type:BOOL.0
	float                            Honor;                           // type:FLOAT.0
	float                            RippleBumpiness;                 // type:FLOAT.0
	float                            RippleMinBumpiness;              // type:FLOAT.0
	float                            RippleMaxBumpiness;              // type:FLOAT.0
	float                            RippleBumpinessWindScale;        // type:FLOAT.0
	float                            RippleSpeed;                     // type:FLOAT.0
	float                            RippleVelocityTransfer;          // type:FLOAT.0
	float                            RippleDisturb;                   // type:FLOAT.0
	float                            OceanBumpiness;                  // type:FLOAT.0
	float                            DeepOceanScale;                  // type:FLOAT.0
	float                            OceanNoiseMinAmplitude;          // type:FLOAT.0
	float                            OceanWaveAmplitude;              // type:FLOAT.0
	float                            ShoreWaveAmplitude;              // type:FLOAT.0
	float                            OceanWaveWindScale;              // type:FLOAT.0
	float                            ShoreWaveWindScale;              // type:FLOAT.0
	float                            OceanWaveMinAmplitude;           // type:FLOAT.0
	float                            ShoreWaveMinAmplitude;           // type:FLOAT.0
	float                            OceanWaveMaxAmplitude;           // type:FLOAT.0
	float                            ShoreWaveMaxAmplitude;           // type:FLOAT.0
	float                            OceanFoamIntensity;              // type:FLOAT.0
	float                            Water_WindGusts_MinBumpIntensity; // type:FLOAT.0
	float                            Water_WindGusts_MaxBumpIntensity; // type:FLOAT.0
	float                            Water_WindGusts_MaxGustVel;      // type:FLOAT.0
	float                            WeatherAccumulationRate;         // type:FLOAT.0
	float                            MinWeatherAccumulation;          // type:FLOAT.0
	float                            MaxWeatherAccumulation;          // type:FLOAT.0
	float                            MinWeatherAccumulationAfterMovement; // type:FLOAT.0
	float                            WeatherAccumulationLossFromMovement; // type:FLOAT.0
	float                            VehSnowAccumulationRate;         // type:FLOAT.0
	float                            VehMaxSnowAccumulation;          // type:FLOAT.0
	float                            VehWetnessAccumulationRate;      // type:FLOAT.0
	float                            TemperatureTarget;               // type:FLOAT.0
	float                            TemperatureFlatten;              // type:FLOAT.0
	float                            TemperatureOffset;               // type:FLOAT.0
	float                            OceanRippleUVScale;              // type:FLOAT.0
	float                            OceanFoamUVScale;                // type:FLOAT.0
	float                            OceanFoamIntensityScale;         // type:FLOAT.0
	float                            OceanFoamIntensityWeight;        // type:FLOAT.0
	float                            OceanFoamPuddleMaskScale;        // type:FLOAT.0
	float                            OceanFoamSmoothstepBlendMin;     // type:FLOAT.0
	float                            OceanFoamSmoothstepBlendMax;     // type:FLOAT.0
	float                            PuddleRippleMinSizeModifier;     // type:FLOAT.0
	float                            PuddleRippleMaxSizeModifier;     // type:FLOAT.0
	float                            PuddleRippleMinDurationModifier; // type:FLOAT.0
	float                            PuddleRippleMaxDurationModifier; // type:FLOAT.0
	float                            PuddleRippleStrengthModifier;    // type:FLOAT.0
	float                            PuddleRippleCountModifier;       // type:FLOAT.0
	string                           DropSettingName;                 // type:STRING.ATSTRING
	string                           GroundSettingName;               // type:STRING.ATSTRING
	string                           SheetSettingName;                // type:STRING.ATSTRING
	string                           TimeCycleFilename;               // type:STRING.ATSTRING
	array<struct _0x73461F3E>        Variations;                      // type:ARRAY.ATARRAY
	string                           LocalizedDensityMap;             // type:STRING.ATNONFINALHASHSTRING
	string                           PedDirtDefinition;               // type:STRING.ATFINALHASHSTRING
	string                           DirtCannedColor;                 // type:STRING.ATNONFINALHASHSTRING
};

struct _0x11CCD97C
{
	bitset<enum _0x9607CEEA>         AimHelperFlags;                  // type:BITSET.32BIT
};

struct _0x11D983E6 : _0xCFC15DEB
{
};

struct _0x11DB3A6A
{
	string                           ClipsetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0x383B7A3A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           EnterClipId;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC9F324C2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x36DFEAE0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           LoopClipId;                      // type:STRING.ATNONFINALHASHSTRING
	string                           ExitClipId;                      // type:STRING.ATNONFINALHASHSTRING
	string                           _0x467CFF3B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE2E127E7;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x11E82464
{
	vec3                             Offset;                          // type:VECTOR3.0
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0x11EFBF38 : CAICondition
{
	float                            MinDist;                         // type:FLOAT.0
};

struct _0x11F22FA9 : _0xFABD9DF5
{
};

struct _0x11FBE1B2
{
	struct _0x1036D182               Weights;                         // type:STRUCT.STRUCTURE
	float                            ProbabilityDrawWeaponWhenLosing; // type:FLOAT.0
};

struct _0x120A96B2 : _0x9B8C003A
{
	string                           _0x75F33978;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x120D4AD6 : _0x3AB6499E
{
};

struct _0x121091E4
{
	string                           _0x94BE6BE3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA1E08C26;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7ED1AF25;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xED62776D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x78D43D56;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0x38D5CC5F;                     // type:FLOAT.0
	float                            _0xFF0FD89D;                     // type:FLOAT.0
	float                            _0x3FDD577C;                     // type:FLOAT.0
	float                            _0xC00D7898;                     // type:FLOAT.0
	float                            ptFxScale;                       // type:FLOAT.0
};

struct _0x121B0A78 : _0xA2F7716A
{
};

struct _0x121DE263
{
	struct _0x8A49ABEB               constraints;                     // type:STRUCT.STRUCTURE
	struct _0xE4612B16               _0x50F0DFE7;                     // type:STRUCT.STRUCTURE
};

struct _0x1228221F
{
	float                            Distance;                        // type:FLOAT.0
	float                            ReactionTimeOverrideMin;         // type:FLOAT.0
	float                            ReactionTimeOverrideMax;         // type:FLOAT.0
	float                            _0xC9B9F22D;                     // type:FLOAT.0
	float                            _0x854F6059;                     // type:FLOAT.0
};

struct _0x122831FF : _0x1054F746
{
};

struct _0x123532E6
{
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
	float                            _0x62B50585;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0x12604662 : uiEventDataBase
{
	int                              _0x7DB57A0B;                     // type:INT.0
};

struct _0x126A9B6D : _0xAB695B15
{
};

struct _0x1279C576 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x127D58E9 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xCCF05C2D                 _0x6899D915;                     // type:ENUM.32BIT
};

struct _0x1288487A : uiSceneBindingHelperBase
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x128AA31B : _0x23D256ED
{
	array<struct _0xCDAFF092, 2>     SubCurves;                       // type:ARRAY.ATRANGEARRAY
};

struct _0x12B6E142
{
	string                           name;                            // type:STRING.ATSTRING
	float                            rangeStart;                      // type:FLOAT.0
	float                            rangeEnd;                        // type:FLOAT.0
	bool                             _0x32A6EB23;                     // type:BOOL.0
};

struct _0x12B97F4D
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x2DA42B11               _0x197DAE72;                     // type:STRUCT.STRUCTURE
	struct _0x7AC28A3D               _0x9A62AC08;                     // type:STRUCT.STRUCTURE
	struct _0xD29CB77F               _0xF4D4A92E;                     // type:STRUCT.STRUCTURE
	struct _0xF0529812               Strings;                         // type:STRUCT.STRUCTURE
	enum _0x21FEB22D                 _0x313879A7;                     // type:ENUM.32BIT
};

struct _0x12C469D7 : CNmParameterRandomInt
{
	array<float>                     Weights;                         // type:ARRAY.ATARRAY
};

struct _0x12C5D5FB : _0xF8449058
{
	array<struct _0x365A9C58>        Actions;                         // type:ARRAY.ATARRAY
	array<string>                    FallbackCutActions;              // type:ARRAY.ATARRAY
	struct _0x77DE7E16               HumanInteractionData;            // type:STRUCT.STRUCTURE
	string                           SwapModel;                       // type:STRING.ATNONFINALHASHSTRING
	string                           FallbackRansackReachInfo;        // type:STRING.ATNONFINALHASHSTRING
	string                           FallbackRansackReachInfoCrouching; // type:STRING.ATNONFINALHASHSTRING
	float                            RansackReachToPickupBlendInDuration; // type:FLOAT.0
	bitset<enum _0xE9E2288E>         Flags;                           // type:BITSET.32BIT
};

struct _0x12C64DC0 : _0xB88D6BEE
{
};

struct _0x12C8F514
{
	uint                             min;                             // type:UINT.0
	uint                             max;                             // type:UINT.0
	uint                             average;                         // type:UINT.0
};

struct _0x12D1991C
{
	enum _0xB2DF7F3B                 Mode;                            // type:ENUM.32BIT
	enum _0x99BEE274                 Stance;                          // type:ENUM.32BIT
	enum _0x3528E310                 Type;                            // type:ENUM.32BIT
	enum _0xFB8561BD                 WeaponType;                      // type:ENUM.32BIT
	enum _0xC1954F22                 HolsterType;                     // type:ENUM.32BIT
	enum eWeaponAttachPoint          EquippedAttachPoint;             // type:ENUM.32BIT
	enum eWeaponAttachPoint          PendingAttachPoint;              // type:ENUM.32BIT
	enum _0x2E105F7E                 PedType;                         // type:ENUM.32BIT
	array<struct _0x0416E6E8>        ExtraWeaponData;                 // type:ARRAY.ATARRAY
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponPropClipSet;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0x12E970E6 : CAICondition
{
};

struct _0x12F0FD4B : uiEventDataBase
{
	string                           _0xB118D1BE;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x536D6EDE                 _0xD9FC552A;                     // type:ENUM.32BIT
	string                           Event;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x12FAA5BF : _0x1054F746
{
};

struct _0x1301A27D
{
	float                            fMaxVantageUpHeight;             // type:FLOAT.0
	float                            LowSideVantageOffset;            // type:FLOAT.0
	float                            HighSideVantageOffset;           // type:FLOAT.0
	float                            ZHighVantageOffset;              // type:FLOAT.0
	float                            ZCrouchVantageOffset;            // type:FLOAT.0
	float                            fMaxSideOffset;                  // type:FLOAT.0
	float                            fSideOffsetRoundCoverPoint;      // type:FLOAT.0
	float                            fSweptSegmentVantageTestOffset;  // type:FLOAT.0
	float                            fPitchDownSoftCoverOffset;       // type:FLOAT.0
	float                            _0xBC3B014F;                     // type:FLOAT.0
	float                            _0x5104AA94;                     // type:FLOAT.0
};

struct _0x13076877 : _0x48935990
{
};

struct _0x131D5BE8 : _0x8A0DC979
{
};

struct _0x13440395 : CTuning
{
	uint                             _0x768EE628;                     // type:UINT.0
	uint                             _0x0F733FBF;                     // type:UINT.0
	float                            _0xF8006DF9;                     // type:FLOAT.0
	float                            _0x7971CEA2;                     // type:FLOAT.0
	float                            _0x2670EE95;                     // type:FLOAT.0
};

struct _0x13530E83
{
};

struct _0x13698585
{
	array<struct _0xAA90BC7E, 4>     MapData;                         // type:ARRAY.ATRANGEARRAY
};

struct _0x1391D1B5 : CTuning
{
	struct _0x6279F8A8               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x139EE851 : _0x8A0DC979
{
	bool                             NotifyCode;                      // type:BOOL.0
	enum eUiEventChannels            CodeEventChannel;                // type:ENUM.32BIT
	bool                             _0xA13F5E73;                     // type:BOOL.0
	string                           ScriptEventChannel;              // type:STRING.ATNONFINALHASHSTRING
	int                              _0x91F20435;                     // type:INT.0
	string                           Title;                           // type:STRING.ATNONFINALHASHSTRING
	string                           InitialValue;                    // type:STRING.ATNONFINALHASHSTRING
	enum _0x7D7578F3                 _0xD711F1A0;                     // type:ENUM.32BIT
};

struct _0x13B6A1E8
{
	enum eExplosionTag               Default;                         // type:ENUM.32BIT
	enum eExplosionTag               HitCar;                          // type:ENUM.32BIT
	enum eExplosionTag               HitTruck;                        // type:ENUM.32BIT
	enum eExplosionTag               HitBike;                         // type:ENUM.32BIT
	enum eExplosionTag               HitBoat;                         // type:ENUM.32BIT
	enum eExplosionTag               HitPlane;                        // type:ENUM.32BIT
};

struct _0x13B76A25 : _0x31488BDE
{
	enum _0xE34D50E5                 Trigger;                         // type:ENUM.32BIT
};

struct _0x13CCEA2D
{
	bool                             Enabled;                         // type:BOOL.0
	float                            _0xE182EB42;                     // type:FLOAT.0
	float                            _0x4ECA2578;                     // type:FLOAT.0
	float                            _0x7A532DB6;                     // type:FLOAT.0
	float                            _0x61AEDF12;                     // type:FLOAT.0
	float                            _0xAF4092E0;                     // type:FLOAT.0
	float                            _0x300590DF;                     // type:FLOAT.0
	float                            _0x4CE7147E;                     // type:FLOAT.0
	float                            _0xCAC76ECB;                     // type:FLOAT.0
	float                            _0x23DB8083;                     // type:FLOAT.0
	float                            _0x5841ECA9;                     // type:FLOAT.0
	float                            _0x193F9FED;                     // type:FLOAT.0
	float                            _0xF777CBDD;                     // type:FLOAT.0
	float                            _0xC4287F07;                     // type:FLOAT.0
};

struct _0x13D52A47 : _0xA709E487
{
	bool                             value;                           // type:BOOL.0
};

struct _0x13E523E6 : uiDynamicItemPagedSourceBase
{
};

struct _0x13F44DE4 : _0x1054F746
{
};

struct _0x13FB0F39
{
	string                           id;                              // type:STRING.ATNSHASHSTRING
};

struct _0x1408091B
{
	enum _0xA5B32C30                 CarriableType;                   // type:ENUM.32BIT
	string                           BlipDataSelector;                // type:STRING.ATNONFINALHASHSTRING
	string                           PromptDataSelector;              // type:STRING.ATNONFINALHASHSTRING
	string                           HumanCarryingMovementDataSetSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           MountCarryingMovementDataSetSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           VehicleCarryingMovementDataSetSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           IdlesDataSetSelector;            // type:STRING.ATNONFINALHASHSTRING
	string                           ApproachPickupDataSetSelector;   // type:STRING.ATNONFINALHASHSTRING
	string                           HogtieDataSetSelector;           // type:STRING.ATNONFINALHASHSTRING
	string                           CutFreeDataSetSelector;          // type:STRING.ATNONFINALHASHSTRING
	string                           DropDataSetSelector;             // type:STRING.ATNONFINALHASHSTRING
	string                           PickupCarriableEntityFromParentDataSetSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           PlaceCarriableEntityOnParentDataSetSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           LootAnimDataSetSelector;         // type:STRING.ATNONFINALHASHSTRING
	string                           CarriablePropsSelector;          // type:STRING.ATNONFINALHASHSTRING
	string                           PromptProbeOffsets;              // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                PromptProbeTargetBone;           // type:ENUM.32BIT
	uint                             EntityReservationTimeoutMs;      // type:UINT.0
	string                           PromptSubString;                 // type:STRING.ATNONFINALHASHSTRING
	string                           PromptSubStringAlive;            // type:STRING.ATNONFINALHASHSTRING
	string                           ForcedPromptGroupBlip;           // type:STRING.ATNONFINALHASHSTRING
	string                           DeadAndHogtiedSwapConfigSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           CarriableOutfitHash;             // type:STRING.ATNONFINALHASHSTRING
	string                           CarriableSubOutfitHash;          // type:STRING.ATNONFINALHASHSTRING
	uchar                            HuntingLoadValue;                // type:UCHAR.0
	enum _0x29DA3D60                 LongArmCorrectionType;           // type:ENUM.32BIT
	enum _0x8BEECF0B                 ExpressionCarrySizeId;           // type:ENUM.32BIT
	string                           MetaPedOutfitHashMale;           // type:STRING.ATNONFINALHASHSTRING
	string                           MetaPedOutfitHashFemale;         // type:STRING.ATNONFINALHASHSTRING
	string                           MetaPedShopItemHashMale;         // type:STRING.ATNONFINALHASHSTRING
	string                           MetaPedShopItemHashFemale;       // type:STRING.ATNONFINALHASHSTRING
	string                           MetaPedOutfitTagMale;            // type:STRING.ATNONFINALHASHSTRING
	string                           MetaPedOutfitTagFemale;          // type:STRING.ATNONFINALHASHSTRING
	vec3V                            LandUprightLocalUp;              // type:VEC3V.0
	bitset<enum _0x9C168EE1>         Flags;                           // type:BITSET.32BIT
};

struct _0x14198B6C : _0xDC10377E
{
	struct _0xBC60C26B               _0x6E502667;                     // type:STRUCT.STRUCTURE
	string                           _0xE043EED4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DofSettings;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x241109DE;                     // type:FLOAT.0
	float                            _0xA02ECDD2;                     // type:FLOAT.0
	float                            _0x8680F765;                     // type:FLOAT.0
	float                            _0x97CF28CF;                     // type:FLOAT.0
	float                            _0x5E1BAFAE;                     // type:FLOAT.0
	float                            _0xD336CF47;                     // type:FLOAT.0
	float                            _0x2C56158D;                     // type:FLOAT.0
	float                            _0xB75C5830;                     // type:FLOAT.0
	float                            _0x57236225;                     // type:FLOAT.0
	float                            _0xF7F92AD3;                     // type:FLOAT.0
	float                            _0x71C547B9;                     // type:FLOAT.0
	float                            _0x7DDFAEF8;                     // type:FLOAT.0
	float                            _0x2F2B8246;                     // type:FLOAT.0
	float                            _0x6E027FAD;                     // type:FLOAT.0
	float                            _0xDE7406D3;                     // type:FLOAT.0
	float                            _0x81CFE0B5;                     // type:FLOAT.0
	float                            _0xDCD5E091;                     // type:FLOAT.0
	float                            _0x1EA49EC8;                     // type:FLOAT.0
	float                            MinPitch;                        // type:FLOAT.0
	vec3                             _0x469762BB;                     // type:VECTOR3.0
};

struct _0x141ED6E9
{
	uint                             _0x66844874;                     // type:UINT.0
	uint                             _0x7B32B045;                     // type:UINT.0
	float                            _0x8CA9F45C;                     // type:FLOAT.0
	float                            _0x7AE2C5A1;                     // type:FLOAT.0
	float                            _0xDFAD3C40;                     // type:FLOAT.0
	float                            _0x8249D4EE;                     // type:FLOAT.0
};

struct _0x141F4737 : _0x499E1BE4
{
	float                            _0x25B8639F;                     // type:FLOAT.0
	float                            _0xEAB48890;                     // type:FLOAT.0
	bool                             _0x0F4FCB95;                     // type:BOOL.0
	bool                             _0x26A86C59;                     // type:BOOL.0
};

struct _0x14223E50 : _0x8A0DC979
{
	string                           _0x7B35E4FC;                     // type:STRING.ATNONFINALHASHSTRING
	int                              MaxLength;                       // type:INT.0
	int                              MinLength;                       // type:INT.0
	bool                             _0x5B40982A;                     // type:BOOL.0
	enum _0x7D7578F3                 _0xF2F011D9;                     // type:ENUM.32BIT
	struct _0xCE064FC1               _0xA423DB7B;                     // type:STRUCT.STRUCTURE
	string                           _0x281CC5D3;                     // type:STRING.ATNSHASHSTRING
	bitset<enum _0x72FB2D6F>         Filters;                         // type:BITSET.8BIT
	bool                             _0x00543397;                     // type:BOOL.0
	bool                             _0xEA3A537D;                     // type:BOOL.0
};

struct _0x14229900
{
};

struct _0x142BBAD7
{
	string                           platform;                        // type:STRING.ATSTRING
	string                           buildversion;                    // type:STRING.ATSTRING
	string                           _0x061F5A45;                     // type:STRING.ATSTRING
	string                           _0x67E27A24;                     // type:STRING.ATSTRING
	size_t                           _0x6185DD57;                     // type:SIZET.0
	array<struct _0x7C631AB6>        _0x695E02FF;                     // type:ARRAY.ATARRAY
};

struct _0x143ACF4A
{
	string                           name;                            // type:STRING.ATSTRING
	string                           set;                             // type:STRING.ATSTRING
	string                           category;                        // type:STRING.ATSTRING
	float                            min;                             // type:FLOAT.0
	float                            max;                             // type:FLOAT.0
	float                            average;                         // type:FLOAT.0
	float                            count;                           // type:FLOAT.0
	uint                             color;                           // type:UINT.0
};

struct _0x1451A6B0
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0xA4EB4ED2;                     // type:BOOL.0
	float                            _0xC65AC483;                     // type:FLOAT.0
};

struct _0x145331EE : _0x3AB6499E
{
	string                           _0xC31F2A30;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xD4D7B1EF;                     // type:FLOAT.0
};

struct _0x145E1E81 : _0x1054F746
{
};

struct _0x14823654
{
	float                            Current;                         // type:FLOAT.0
	float                            Door;                            // type:FLOAT.0
	float                            Window;                          // type:FLOAT.0
};

struct _0x14887F0B
{
	float                            _0xB8AA7F3A;                     // type:FLOAT.0
	float                            _0xCF592934;                     // type:FLOAT.0
	float                            _0x8E414272;                     // type:FLOAT.0
	float                            _0x5B426518;                     // type:FLOAT.0
	float                            _0x3FB9F062;                     // type:FLOAT.0
};

struct _0x1490AE8E : CTuning
{
	struct _0x6CA51263               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x14EBCAB0
{
	bool                             Enabled;                         // type:BOOL.0
	enum _0x9B2DCF16                 _0x9B2DCF16;                     // type:ENUM.32BIT
	float                            Seed;                            // type:FLOAT.0
	float                            Amount;                          // type:FLOAT.0
	float                            Size;                            // type:FLOAT.0
	float                            _0x4C5776C5;                     // type:FLOAT.0
	vec2V                            _0xD402BB78;                     // type:VEC2V.0
	vec2V                            _0x87356BF1;                     // type:VEC2V.0
	float                            _0xDF3539AE;                     // type:FLOAT.0
	enum _0xDACF69C7                 _0x09B920BD;                     // type:ENUM.32BIT
	float                            Opacity;                         // type:FLOAT.0
};

struct _0x150A5E97 : _0xA0889763
{
	size_t                           value;                           // type:SIZET.0
};

struct _0x150FE51F
{
	float                            Offset;                          // type:FLOAT.0
	vec2                             AngleToBlendInOffset;            // type:VECTOR2.0
};

struct _0x153F6192 : _0x7DE6531A
{
	int64                            targetValue;                     // type:INT64.0
	int64                            targetValueMin;                  // type:INT64.0
	int64                            targetValueMax;                  // type:INT64.0
};

struct _0x154728B8
{
	float                            Default;                         // type:FLOAT.0
	array<struct _0x0A10BF60>        ConditionOverrideFloats;         // type:ARRAY.ATARRAY
};

struct _0x15492ED3
{
	short                            _0x1B5444E2;                     // type:SHORT.0
};

struct _0x155C8726
{
	string                           _0xB747ACDE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA2B7F89B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC490D499;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x45F40BC5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD7099C30;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3A2F6CD8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB39307E9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA9A2FB18;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x31211A19;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1372F8D6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE90BEA94;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x434BEEB0;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x157309F9 : CTuning
{
	string                           _0x96B14A25;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x158AFA8F : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             AttachLeftHand;                  // type:BOOL.0
	bool                             AttachRightHand;                 // type:BOOL.0
	bool                             _0x9CACCDE3;                     // type:BOOL.0
};

struct _0x158B0B05 : uiGenericEventDataBase
{
	string                           data;                            // type:STRING.ATSTRING
};

struct _0x15947AEC
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    TVPlayListSlotNames;             // type:ARRAY.ATARRAY
};

struct _0x15A5821E : CTuning
{
	struct _0xA866E29F               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x15C825D1 : _0xB9627A49
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x15DB2440
{
	enum _0xEB8DD8AD                 tessellation;                    // type:ENUM.32BIT
	enum _0xEB8DD8AD                 shadowQuality;                   // type:ENUM.32BIT
	enum _0xEB8DD8AD                 _0x003270CC;                     // type:ENUM.32BIT
	enum _0xEB8DD8AD                 reflectionQuality;               // type:ENUM.32BIT
	enum _0xEB8DD8AD                 mirrorQuality;                   // type:ENUM.32BIT
	enum _0xEB8DD8AD                 ssao;                            // type:ENUM.32BIT
	enum _0xEB8DD8AD                 textureQuality;                  // type:ENUM.32BIT
	enum _0xEB8DD8AD                 particleQuality;                 // type:ENUM.32BIT
	enum _0xEB8DD8AD                 waterQuality;                    // type:ENUM.32BIT
	enum _0xEB8DD8AD                 volumetricsQuality;              // type:ENUM.32BIT
	enum _0xEB8DD8AD                 lightingQuality;                 // type:ENUM.32BIT
	enum _0xEB8DD8AD                 _0x1D63B691;                     // type:ENUM.32BIT
	int                              anisotropicFiltering;            // type:INT.0
	enum _0xEB8DD8AD                 taa;                             // type:ENUM.32BIT
	bool                             fxaaEnabled;                     // type:BOOL.0
	int                              msaa;                            // type:INT.0
	float                            _0x6FA300DC;                     // type:FLOAT.0
	bool                             _0xE65683E1;                     // type:BOOL.0
	uint                             _0x374DA11D;                     // type:UINT.0
	uint                             _0xC6D21CBA;                     // type:UINT.0
	bool                             _0x781C1BB9;                     // type:BOOL.0
	uint                             gamma;                           // type:UINT.0
	bool                             _0x78BB1EE0;                     // type:BOOL.0
};

struct _0x15DC3AAF : _0x7EAFD12D
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
	string                           Color;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x15DD8D50 : _0x0A510DA9
{
};

struct _0x15FA6392 : _0xC48C1FCA
{
	string                           _0x5C985CB8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x1603888E
{
	array<struct _0x969F6D91>        assets;                          // type:ARRAY.ATARRAY
};

struct _0x1607545A
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	uchar                            _0xB9906A52;                     // type:UCHAR.0
	array<struct _0xB2FC9566>        _0xAF3F41FD;                     // type:ARRAY.ATARRAY
};

struct _0x1619E486 : _0x22B199F9
{
	enum _0x0153DD05                 ScenarioExit;                    // type:ENUM.32BIT
	bool                             RunAsTempTask;                   // type:BOOL.0
	bool                             ForceAIUpdate;                   // type:BOOL.0
};

struct _0x161A0BBD
{
	string                           ptfxName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x16214B7B : CAICondition
{
	string                           _0x830C9179;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x162319B8
{
	uchar                            _0x2BD4F853;                     // type:UCHAR.0
	uchar                            _0xBFD848F6;                     // type:UCHAR.0
	uchar                            _0xAC3E6520;                     // type:UCHAR.0
	uchar                            _0x1DFC9B67;                     // type:UCHAR.0
	uchar                            _0x0E061F08;                     // type:UCHAR.0
	uchar                            _0xBF61C56D;                     // type:UCHAR.0
	char                             _0xEED37B2F;                     // type:CHAR.0
	char                             _0x6F30ADFE;                     // type:CHAR.0
	char                             _0x4652336D;                     // type:CHAR.0
	float                            _0xDFE044B7;                     // type:FLOAT.0
	float                            _0xF90C8537;                     // type:FLOAT.0
	float                            _0x40828D8C;                     // type:FLOAT.0
	float                            SpawnDelay;                      // type:FLOAT.0
	float                            _0x2311F2A1;                     // type:FLOAT.0
	float                            _0xE8619D90;                     // type:FLOAT.0
};

struct _0x1633A20C : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x84B954E7;                     // type:STRUCT.STRUCTURE
	string                           _0xFC5BB191;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x16350796
{
	float                            _0x466B42A3;                     // type:FLOAT.0
	float                            _0xA195121F;                     // type:FLOAT.0
	float                            _0x93B9D99D;                     // type:FLOAT.0
	float                            _0x20289AC3;                     // type:FLOAT.0
	float                            _0x3D3BB9CB;                     // type:FLOAT.0
	float                            _0xE2608C17;                     // type:FLOAT.0
	float                            _0x0D391326;                     // type:FLOAT.0
	bool                             _0x1AE7AE96;                     // type:BOOL.0
	bool                             _0x7915CD4E;                     // type:BOOL.0
	uint                             _0xE5514E20;                     // type:UINT.0
};

struct _0x1638FDAA
{
	string                           _0xB2A5A79B;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0xBD6915B4;                     // type:INT.0
	string                           CharacterName;                   // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x84794EEB;                     // type:UINT.0
};

struct _0x164703EE : camCinematicShotMetadata
{
};

struct _0x164A29BA
{
	float                            TimeStartScavengedVfxDamage;     // type:FLOAT.0
	float                            TimeToMaxScavengedVfxDamage;     // type:FLOAT.0
};

struct _0x16546AE9
{
	bitset<enum _0xD6A54707>         Flags;                           // type:BITSET.32BIT
	enum _0x748BF4E3                 Size;                            // type:ENUM.32BIT
	enum _0xA51E7F0F                 Weight;                          // type:ENUM.32BIT
	enum _0x4AEC0016                 FleeDiscard;                     // type:ENUM.32BIT
	float                            CarryingPedCapsuleRadius;        // type:FLOAT.0
	float                            CarryingPedCapsuleOffset;        // type:FLOAT.0
	float                            CarryingPedSideCapsuleRadius;    // type:FLOAT.0
	float                            CullingDistance;                 // type:FLOAT.0
	uint                             LodDistance;                     // type:UINT.0
};

struct _0x166AC204
{
	uint                             Type;                            // type:UINT.0
	struct _0x05C033C3               Name;                            // type:STRUCT.STRUCTURE
};

struct _0x1679F6C0 : _0x17E2C108
{
	string                           _0x0D0FD03C;                     // type:STRING.ATSTRING
	string                           _0xA744645C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCC99F2AA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBB23CB05;                     // type:STRING.ATSTRING
	enum _0x8D8341C5                 _0xF544B9F7;                     // type:ENUM.32BIT
	float                            rate;                            // type:FLOAT.0
	bool                             loop;                            // type:BOOL.0
	bool                             _0x036AB8F3;                     // type:BOOL.0
	bool                             _0x081BD84D;                     // type:BOOL.0
	enum _0x901737E6                 _0x0C5F765A;                     // type:ENUM.32BIT
};

struct _0x167DBDC9
{
	enum _0x9EC683D2                 Type;                            // type:ENUM.32BIT
	array<struct _0xEE126ABB>        Entries;                         // type:ARRAY.ATARRAY
	uchar                            _0xA09D4D22;                     // type:UCHAR.0
	uchar                            _0xA9B9AAEE;                     // type:UCHAR.0
};

struct _0x16908335
{
	string                           _0xE0782EAE;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x3C6AC912;                     // type:BOOL.0
	bool                             _0x38DA78F0;                     // type:BOOL.0
	int                              _0x67CAE331;                     // type:INT.0
	int                              _0x7BB64D9C;                     // type:INT.0
	struct _0x510D3B10               _0x331E190D;                     // type:STRUCT.STRUCTURE
	struct _0x510D3B10               _0xBF820886;                     // type:STRUCT.STRUCTURE
	float                            _0xC85617B2;                     // type:FLOAT.0
	float                            _0xDDD28CDF;                     // type:FLOAT.0
	float                            _0x89B4CD8F;                     // type:FLOAT.0
	float                            _0x453064EC;                     // type:FLOAT.0
	float                            _0x9D29BC96;                     // type:FLOAT.0
	float                            _0xE9ACFA96;                     // type:FLOAT.0
	float                            _0xBF72751F;                     // type:FLOAT.0
	float                            _0x68B10E72;                     // type:FLOAT.0
	float                            _0xDA78535F;                     // type:FLOAT.0
	float                            _0x984C56D0;                     // type:FLOAT.0
	float                            _0x38DD348D;                     // type:FLOAT.0
	float                            _0xE75BB4C0;                     // type:FLOAT.0
	float                            _0x364B2F7B;                     // type:FLOAT.0
	float                            _0x4493CD61;                     // type:FLOAT.0
	float                            _0xDECA0A43;                     // type:FLOAT.0
	float                            _0x42F3481A;                     // type:FLOAT.0
	float                            _0x0179F37E;                     // type:FLOAT.0
	float                            _0xAD909264;                     // type:FLOAT.0
	float                            _0xFC0836FD;                     // type:FLOAT.0
	float                            _0x291C4C07;                     // type:FLOAT.0
	float                            _0x8242E253;                     // type:FLOAT.0
	float                            _0x07CD1441;                     // type:FLOAT.0
	float                            _0xB9E98357;                     // type:FLOAT.0
	array<struct _0x078BD94E>        _0xA92B2050;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x3ACA43EC;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x8E21141B;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0xBCB6965B;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x23D9D812;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x095D3E0C;                     // type:ARRAY.ATARRAY
};

struct _0x16975EF5 : _0x17E2C108
{
	uint                             _0x2657713E;                     // type:UINT.0
};

struct _0x169A2FA7 : _0xAD9BC2D3
{
};

struct _0x16B3E34D : _0x54727751
{
};

struct _0x16B97780
{
	array<struct _0xF206AE70>        Actions;                         // type:ARRAY.ATARRAY
};

struct _0x16E4F2D0 : _0x23D256ED
{
	array<struct _0xCDAFF092, 3>     SubCurves;                       // type:ARRAY.ATRANGEARRAY
	matrix34V                        Transform;                       // type:MAT34V.0
};

struct _0x16EA414C
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             CollisionProbe;                  // type:BOOL.0
	bool                             LandProbe;                       // type:BOOL.0
};

struct _0x16EBF49F
{
	float                            _0xD1246F61;                     // type:FLOAT.0
	float                            _0xB86E75E5;                     // type:FLOAT.0
	bool                             _0x658C6E16;                     // type:BOOL.0
	float                            _0x75DDBC23;                     // type:FLOAT.0
	float                            _0x2121E086;                     // type:FLOAT.0
	float                            _0xD898C98C;                     // type:FLOAT.0
	float                            _0x1784BDD7;                     // type:FLOAT.0
	float                            _0x73B61CB8;                     // type:FLOAT.0
	float                            _0xD3C5A7C9;                     // type:FLOAT.0
	float                            _0xA8C1F4AC;                     // type:FLOAT.0
	bool                             _0xA7642CE6;                     // type:BOOL.0
	float                            _0x9750E991;                     // type:FLOAT.0
};

struct _0x16F9A3F5 : CTuning
{
	struct _0xC09AF161               _0xBF4DFCBE;                     // type:STRUCT.STRUCTURE
};

struct _0x17041063 : _0x810637E9
{
	enum _0x7B781BD0                 ConditionTestType;               // type:ENUM.32BIT
};

struct _0x170FA970
{
	map<string, struct _0x2CBFA0D6>     MetricConfigs;                   // type:MAP.ATBINARYMAP
};

struct _0x17206478 : _0xD5453C1F
{
};

struct _0x1726F3BE
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0xFF28DF94;                     // type:BOOL.0
	uint                             _0x2EC7C73B;                     // type:UINT.1
};

struct _0x1729C027 : CAICondition
{
	uint                             MinIncidents;                    // type:UINT.0
	uint                             _0xC0656D81;                     // type:UINT.0
	uint                             MinMinutesSince;                 // type:UINT.0
	uint                             MaxMinutesSince;                 // type:UINT.0
	bool                             _0x45749AE1;                     // type:BOOL.0
};

struct _0x173720AE
{
	uint                             _0x654061AA;                     // type:UINT.0
	uint                             _0x09A21D34;                     // type:UINT.0
	uint                             _0xD54D1176;                     // type:UINT.0
};

struct _0x17375D37 : _0xD2137166
{
	string                           Path;                            // type:STRING.ATSTRING
};

struct _0x173C7484 : _0xFEF980E4
{
};

struct _0x173E475C : _0x14229900
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct _0x1746B5A4
{
	string                                 BaseBoneId;                      // type:STRING.ATSTRING
	string                                 ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                                 ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	float                                  ClipRate;                        // type:FLOAT.0
	float                                  BoneBreakDistance;               // type:FLOAT.0
	vec2V                                  DamageAmountMinMax;              // type:VEC2V.0
	array<struct CObjectExplosionData>     ExplosionData;                   // type:ARRAY.ATARRAY
};

struct _0x174E37FD
{
	map<string, struct _0x00E2058D>               _0x07AB933F;                     // type:MAP.ATBINARYMAP
	map<enum _0x57F00EED, struct _0x665A4F9D>     _0x75D425EE;                     // type:MAP.ATBINARYMAP
};

struct _0x1750F677
{
	float                            DefaultMappingThreshold;         // type:FLOAT.0
	float                            DefaultErrorThreshold;           // type:FLOAT.0
};

struct _0x1756BE8D : _0x6002A167
{
};

struct _0x175B6EEB
{
	float                            Time;                            // type:FLOAT.0
	float                            Value;                           // type:FLOAT.0
	enum _0x1F546A14                 TangentType;                     // type:ENUM.32BIT
	float                            InputTangent;                    // type:FLOAT.0
	float                            OutputTangent;                   // type:FLOAT.0
};

struct _0x175D1BAD
{
	array<struct _0x5342E5CC>        Points;                          // type:ARRAY.ATARRAY
};

struct _0x176AA69D : _0x1054F746
{
};

struct _0x176E9B89
{
	struct _0xF0F88608               _0x7CC5729D;                     // type:STRUCT.STRUCTURE
	float                            _0xF67BB251;                     // type:FLOAT.0
	float                            _0x6966D74D;                     // type:FLOAT.0
	bool                             isUnderwater;                    // type:BOOL.0
};

struct _0x1785F817
{
	float                            fJumpVaultHeightThresholdMin;    // type:FLOAT.0
	float                            fJumpVaultHeightThresholdMax;    // type:FLOAT.0
	float                            fAutoJumpVaultHeightThresholdMax; // type:FLOAT.0
	float                            fJumpVaultHeightAllowanceOnSlope; // type:FLOAT.0
	float                            fJumpVaultDepthThresholdMin;     // type:FLOAT.0
	float                            fJumpVaultDepthThresholdMax;     // type:FLOAT.0
	float                            fJumpVaultMinHorizontalClearance; // type:FLOAT.0
	float                            fJumpVaultMBRThreshold;          // type:FLOAT.0
	float                            fJumpVaultForceValidInputMinHeight; // type:FLOAT.0
	float                            fJumpVaultForceValidInputMaxDist; // type:FLOAT.0
	float                            fAutoJumpVaultDistMin;           // type:FLOAT.0
	float                            fAutoJumpVaultDistMax;           // type:FLOAT.0
	float                            fAutoJumpVaultDistMaxAI;         // type:FLOAT.0
	float                            fAutoJumpVaultDistCutoff;        // type:FLOAT.0
	bool                             bJumpVaultAllowanceOnSlopeTest;  // type:BOOL.0
	bool                             bJumpVaultVehicles;              // type:BOOL.0
};

struct _0x17BD9C3D : fwClipItemWithProps
{
	float                            weight;                          // type:FLOAT.0
};

struct _0x17C6B197 : _0x2B40ABA9
{
};

struct _0x17D037AF : _0x3795142C
{
};

struct _0x17D11880
{
	bool                             ShouldApply;                     // type:BOOL.0
	struct _0x09B4C683               _0xB3AF862F;                     // type:STRUCT.STRUCTURE
	float                            _0xDABF24C6;                     // type:FLOAT.0
	float                            _0x9538E152;                     // type:FLOAT.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x805B8B8A;                     // type:FLOAT.0
	float                            _0xCFCED18C;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x42149307;                     // type:FLOAT.0
	float                            _0x40DD5D6F;                     // type:FLOAT.0
	float                            _0x1D0C8ED7;                     // type:FLOAT.0
	float                            _0x9E4F10D9;                     // type:FLOAT.0
	float                            _0x7E6D075E;                     // type:FLOAT.0
	float                            _0x31189B28;                     // type:FLOAT.0
	float                            _0x462ADBDC;                     // type:FLOAT.0
	float                            _0x0C3EE6D6;                     // type:FLOAT.0
	float                            _0xE3161EEE;                     // type:FLOAT.0
	float                            _0xD4A49D71;                     // type:FLOAT.0
	float                            _0x5DE31818;                     // type:FLOAT.0
	float                            _0x52EEED84;                     // type:FLOAT.0
	float                            _0x31AB9BE2;                     // type:FLOAT.0
	float                            _0x9CAA8B4B;                     // type:FLOAT.0
	float                            _0x22D9A099;                     // type:FLOAT.0
	float                            _0x5A69CE04;                     // type:FLOAT.0
	float                            _0xAB622796;                     // type:FLOAT.0
	float                            _0x5BEA6A53;                     // type:FLOAT.0
	float                            _0x8B86F82B;                     // type:FLOAT.0
	float                            _0x2594478D;                     // type:FLOAT.0
	float                            _0x69A73523;                     // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
	float                            _0xE073FF90;                     // type:FLOAT.0
	float                            _0xF5E98C95;                     // type:FLOAT.0
	float                            _0xB8BC2E35;                     // type:FLOAT.0
	bool                             _0x9A4868F0;                     // type:BOOL.0
	float                            _0xA77C4803;                     // type:FLOAT.0
	float                            _0x2DD2265B;                     // type:FLOAT.0
};

struct _0x17D63CD1
{
};

struct _0x17DBDAA9 : _0x8A0DC979
{
};

struct _0x17DC6876
{
	float                            Base;                            // type:FLOAT.0
	struct _0x14823654               Bonus;                           // type:STRUCT.STRUCTURE
	struct _0xA9E96484               Penalty;                         // type:STRUCT.STRUCTURE
	array<struct _0x93C15105>        LinearScores;                    // type:ARRAY.ATARRAY
	array<struct _0xCAB05532>        StatusModifiers;                 // type:ARRAY.ATARRAY
};

struct _0x17E2C108
{
};

struct _0x17E4C3A6
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xAC9792B6                 _0x9E3DB09B;                     // type:ENUM.32BIT
	string                           _0xB5736A33;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x18730A23;                     // type:FLOAT.0
	bool                             _0xD6B78054;                     // type:BOOL.0
	enum _0xDEC31923                 _0x78244834;                     // type:ENUM.32BIT
	string                           _0xEEBA91AA;                     // type:STRING.ATFINALHASHSTRING
	bool                             _0x8A383701;                     // type:BOOL.0
	bool                             _0xEF6B67D6;                     // type:BOOL.0
	enum _0xEE1703D1                 SamplingMode;                    // type:ENUM.32BIT
	struct _0xE2ADADD9               Transform;                       // type:STRUCT.STRUCTURE
	float                            Opacity;                         // type:FLOAT.0
	enum _0x5B6C1550                 _0xF7385530;                     // type:ENUM.32BIT
};

struct _0x17F7C5F4 : _0x3AB6499E
{
	float                            _0xE963B88E;                     // type:FLOAT.0
	float                            _0xE6F01EA8;                     // type:FLOAT.0
	float                            _0x8C604292;                     // type:FLOAT.0
	float                            _0x359215A3;                     // type:FLOAT.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x0FC2ACEE;                     // type:FLOAT.0
};

struct _0x17FD8D8C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct void                      Fallback;                        // type:STRUCT.EXTERNAL_NAMED
	struct void                      Default;                         // type:STRUCT.EXTERNAL_NAMED
	struct void                      IdleIntro;                       // type:STRUCT.EXTERNAL_NAMED
	struct void                      Idle;                            // type:STRUCT.EXTERNAL_NAMED
	struct void                      MovingIntro;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                      StartMoving;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                      Moving;                          // type:STRUCT.EXTERNAL_NAMED
	struct void                      StopMoving;                      // type:STRUCT.EXTERNAL_NAMED
	struct void                      _0xE18BC5B3;                     // type:STRUCT.EXTERNAL_NAMED
	struct void                      TransitionTable;                 // type:STRUCT.EXTERNAL_NAMED
	string                           UpperBodyBlendTemplate;          // type:STRING.ATNONFINALHASHSTRING
	string                           UpperBodyBlendFilterTemplateForStartMoving180s; // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x492F5E17>        UpperBody;                       // type:ARRAY.ATARRAY
	string                           StrafeType;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             UseVelocityNormalising;          // type:BOOL.0
	bool                             UseDirectionNormalising;         // type:BOOL.0
	bool                             AlwaysUseStarts;                 // type:BOOL.0
	bool                             AlwaysUseStops;                  // type:BOOL.0
	bool                             UseStartMovingFor180s;           // type:BOOL.0
	bool                             InstantBlendAfterFullBodyIntro;  // type:BOOL.0
	bool                             UseIdleIntro;                    // type:BOOL.0
	bool                             AlwaysUseStopsCount;             // type:BOOL.0
	bool                             UsePreviousDirectionFor180s;     // type:BOOL.0
	bool                             UseCurrentVelocityFor180s;       // type:BOOL.0
	bool                             UsePhysicsVelocityRotationDirection; // type:BOOL.0
	float                            MovingInWaterWalkAnimRateMin;    // type:FLOAT.0
	float                            MovingInWaterWalkAnimRateMax;    // type:FLOAT.0
	float                            MovingInDeepWaterWalkAnimRateMax; // type:FLOAT.0
	float                            MovingInWaterRunAnimRateMult;    // type:FLOAT.0
	float                            MovementAngAccelOverride;        // type:FLOAT.0
	float                            StartsSlowVelocityNormalisingRate; // type:FLOAT.0
	float                            MinStartsVelocityNormalisingRate; // type:FLOAT.0
	float                            MaxStartsVelocityNormalisingRate; // type:FLOAT.0
	float                            StartsVelocityNormalisingRateAccel; // type:FLOAT.0
	float                            StopsSlowVelocityNormalisingRate; // type:FLOAT.0
	float                            StopsFastVelocityNormalisingRate; // type:FLOAT.0
	float                            MovingIntrosVelocityNormalisingRate; // type:FLOAT.0
	float                            InterruptionSpeedPercentageFor180s; // type:FLOAT.0
};

struct _0x18065C4E : _0x906508CE
{
	string                           _0x43AC121D;                     // type:STRING.ATSTRING
	string                           _0x0484B0AB;                     // type:STRING.ATNONFINALHASHSTRING
	int                              cascadeIndex;                    // type:INT.0
	bool                             _0x1B541E79;                     // type:BOOL.0
};

struct _0x1808B340
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB18FE96F>        ConditionalClipSets;             // type:ARRAY.ATARRAY
	array<struct _0xCA7E46C9>        ConditionalBodyBlendTemplates;   // type:ARRAY.ATARRAY
};

struct _0x181B464F
{
	string                           vfxBloodInfoHashName;            // type:STRING.ATNONFINALHASHSTRING
	enum _0x2C20F1A2                 _0xA6464075;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0xE2BE07C5;                     // type:ENUM.32BIT
	vec3                             _0xEB90B062;                     // type:VECTOR3.0
	vec3                             _0x3B32399E;                     // type:VECTOR3.0
	vec3                             _0xB4317805;                     // type:VECTOR3.0
};

struct _0x1824C4AB
{
	string                           Override;                        // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x18320175
{
	struct _0x30B3AC89               Walk;                            // type:STRUCT.STRUCTURE
	struct _0x30B3AC89               Trot;                            // type:STRUCT.STRUCTURE
	struct _0x30B3AC89               Canter;                          // type:STRUCT.STRUCTURE
	struct _0x30B3AC89               Gallop;                          // type:STRUCT.STRUCTURE
};

struct _0x183DB3A1 : _0x22B199F9
{
	float                            Time;                            // type:FLOAT.0
};

struct _0x184818A1 : _0x8A0DC979
{
	bool                             _0x181F2E6B;                     // type:BOOL.0
};

struct _0x185D5ED4 : _0x82A307C0
{
	struct _0x4A7AD954               MinBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               MaxBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x8FE1DED2               Min;                             // type:STRUCT.STRUCTURE
	struct _0x8FE1DED2               Max;                             // type:STRUCT.STRUCTURE
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
};

struct _0x186E5166
{
	vec4V                            Rotation;                        // type:VEC4V.0
	float                            TwistMin;                        // type:FLOAT.0
	float                            TwistMax;                        // type:FLOAT.0
	array<float, 8>                  Control;                         // type:ARRAY.MEMBER
	ushort                           BoneId;                          // type:USHORT.0
	uchar                            Type;                            // type:UCHAR.0
	uchar                            NumControl;                      // type:UCHAR.0
	uchar                            TwistAxisType;                   // type:UCHAR.0
};

struct _0x187BE9B9 : _0xE9505B40
{
	struct _0xEFAEA34C               Value;                           // type:STRUCT.POINTER
};

struct _0x188B79A1
{
	struct _0xF7380478               LogTextureData;                  // type:STRUCT.STRUCTURE
	string                           InventoryItem;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x18927999
{
	uint                             _0xA2793410;                     // type:UINT.0
	uint                             _0x876BCB89;                     // type:UINT.0
	uint                             BlendOutDuration;                // type:UINT.0
	vec2                             _0x4C3632E0;                     // type:VECTOR2.0
	enum _0x0100F80E                 _0xABC819D1;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x01FD6D55;                     // type:ENUM.32BIT
	uint                             _0xA54E1F13;                     // type:UINT.0
	uint                             _0x463AF5B6;                     // type:UINT.0
	uint                             _0xA04729EE;                     // type:UINT.0
	float                            _0xC7DA3092;                     // type:FLOAT.0
	float                            _0x20EB1CFF;                     // type:FLOAT.0
	float                            _0x1E798825;                     // type:FLOAT.0
	float                            _0xBB742862;                     // type:FLOAT.0
	bool                             _0x4857A884;                     // type:BOOL.0
	float                            _0x2AAB34E5;                     // type:FLOAT.0
	float                            _0x91B00E57;                     // type:FLOAT.0
	bool                             _0xC6EB9496;                     // type:BOOL.0
	bool                             _0xF9A95EF1;                     // type:BOOL.0
	bool                             _0xD3B54386;                     // type:BOOL.0
	vec2                             _0x4AA7F9C8;                     // type:VECTOR2.0
	bool                             _0x8176921C;                     // type:BOOL.0
	struct _0x0ACD7101               _0x7EDC6D98;                     // type:STRUCT.STRUCTURE
	struct _0x0ACD7101               _0x9A4F8E7F;                     // type:STRUCT.STRUCTURE
	struct _0x123532E6               _0xD04DA01F;                     // type:STRUCT.STRUCTURE
};

struct _0x189F3CE1 : _0xB74AC865
{
};

struct _0x18A32B00 : _0x39DE799A
{
	uint64                           Value;                           // type:UINT64.0
};

struct _0x18BE7FE2
{
	string                           Stand;                           // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7E38017E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Crouch;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAB51686A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x18BE82F9 : CAICondition
{
	enum _0x563FBCEA                 RiderPed;                        // type:ENUM.32BIT
	enum _0x563FBCEA                 DriverPed;                       // type:ENUM.32BIT
};

struct _0x18C05852 : UIBehavior
{
	string                           ContextType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x18C7C82F
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xCB8AA441               time;                            // type:STRUCT.STRUCTURE
	struct _0xCB8AA441               timeLimit;                       // type:STRUCT.STRUCTURE
	float                            _0xA3C3E7E4;                     // type:FLOAT.0
	string                           weatherName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7387B4E4;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x2CBE796E;                     // type:FLOAT.0
	float                            _0x194F5290;                     // type:FLOAT.0
	float                            _0x43B45557;                     // type:FLOAT.0
};

struct _0x18D5AB07
{
	float                            _0x027F1574;                     // type:FLOAT.0
	int                              _0x3E5D8EB3;                     // type:INT.0
	float                            _0x9D8A15DE;                     // type:FLOAT.0
	bool                             _0x5DC8FA73;                     // type:BOOL.0
};

struct _0x18EAFEA9
{
	string                           modelName;                       // type:STRING.POINTER
	array<struct _0xDAF00628>        _0x99C68B00;                     // type:ARRAY.ATARRAY
	array<struct _0xD9A93C13>        liveries;                        // type:ARRAY.ATARRAY
	array<struct _0x99885DD2>        colors;                          // type:ARRAY.ATARRAY
	array<string>                    windowsWithExposedEdges;         // type:ARRAY.ATARRAY
	struct PlateProbabilities        plateProbabilities;              // type:STRUCT.STRUCTURE
	uchar                            lightSettings;                   // type:UCHAR.0
	uchar                            sirenSettings;                   // type:UCHAR.0
	float                            _0x62B789E9;                     // type:FLOAT.0
	float                            _0x25D03E79;                     // type:FLOAT.0
	vec4                             _0xAC958205;                     // type:VECTOR4.0
	vec4                             _0x41D56C0F;                     // type:VECTOR4.0
	float                            _0x66C6CE09;                     // type:FLOAT.0
	float                            _0x0F063E9E;                     // type:FLOAT.0
	float                            _0x1AA3DBEE;                     // type:FLOAT.0
	float                            _0x16A9D046;                     // type:FLOAT.0
	float                            _0x6C159217;                     // type:FLOAT.0
	float                            _0x755BFE36;                     // type:FLOAT.0
	float                            _0x910B57E9;                     // type:FLOAT.0
	float                            _0x4EB8D630;                     // type:FLOAT.0
	float                            _0x7F8638E9;                     // type:FLOAT.0
	float                            _0xB2216C96;                     // type:FLOAT.0
	float                            _0xDFE428AD;                     // type:FLOAT.0
	float                            _0xDD933689;                     // type:FLOAT.0
	float                            _0x258CC596;                     // type:FLOAT.0
	float                            _0xABA26B93;                     // type:FLOAT.0
};

struct _0x18F3DC80 : _0x6992EBA1
{
	bool                             _0xE6966D01;                     // type:BOOL.0
};

struct _0x1901476A : _0xDCC3E830
{
};

struct _0x190644CA : _0xCC7762ED
{
};

struct _0x191C87F6
{
	map<string, struct _0xE4AECA2C>     Columns;                         // type:MAP.ATBINARYMAP
};

struct _0x1924580C
{
	bitset<enum _0xCBF128D1>         Flags;                           // type:BITSET.32BIT
	bitset<enum _0x42338022>         CoverFlagsToLoad;                // type:BITSET.16BIT
	bitset<enum _0x42338022>         CoverFlagsToAvoid;               // type:BITSET.16BIT
	enum _0x3B7D9479                 CoverLoadingAreaPriority;        // type:ENUM.32BIT
};

struct _0x19261257
{
	string                              _0x7EFFBD94;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0x3795142C>     Motions;                         // type:MAP.ATBINARYMAP
	map<string, string>                 _0xB6DDDB6A;                     // type:MAP.ATBINARYMAP
};

struct _0x1949A9FF : _0xA9994D94
{
	struct _0xE453720A               params;                          // type:STRUCT.POINTER
	string                           templateName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x196266C1 : _0x8A0DC979
{
};

struct _0x1972EE07 : _0xF643E290
{
	string                           _0x43AC121D;                     // type:STRING.ATSTRING
	float                            value;                           // type:FLOAT.0
};

struct _0x19748D52 : _0x63948AEA
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0x197CC214
{
	enum eVehicleModType             slot;                            // type:ENUM.32BIT
	string                           name;                            // type:STRING.CONST_STRING
};

struct _0x198F1FC4
{
};

struct _0x19A45E4A
{
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE7FE3583;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x19B7E30F : _0x4469EF46
{
	string                           _0x365673D9;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xC0AEFB8A>        _0x633FF784;                     // type:ARRAY.ATARRAY
	array<struct _0x71BBDA02>        _0xCE3B33B2;                     // type:ARRAY.ATARRAY
	array<struct _0xAF92BC85>        Clips;                           // type:ARRAY.ATARRAY
	array<struct _0xAF92BC85>        _0xEA054FDC;                     // type:ARRAY.ATARRAY
};

struct _0x19BA168F : _0x1054F746
{
};

struct _0x19C6A837
{
	array<string>                    pathElements;                    // type:ARRAY.ATARRAY
};

struct _0x19D11B83
{
	float                            MaxDistanceToHoldFireForArrest;  // type:FLOAT.0
	float                            _0xF1191108;                     // type:FLOAT.0
	float                            _0x92220A01;                     // type:FLOAT.0
	float                            _0xCF0883D8;                     // type:FLOAT.0
	float                            _0x161CBF4B;                     // type:FLOAT.0
	float                            _0x3BC52532;                     // type:FLOAT.0
	float                            _0x023942C8;                     // type:FLOAT.0
	float                            _0xBC3E23B1;                     // type:FLOAT.0
	float                            _0x41CF765E;                     // type:FLOAT.0
	uint                             _0xE5A77DA2;                     // type:UINT.0
	uint                             TimeBetweenPlayerArrestAttempts; // type:UINT.0
	uint                             _0x1EE9991A;                     // type:UINT.0
	char                             _0x4765F83D;                     // type:CHAR.0
	bool                             _0xEC4453BD;                     // type:BOOL.0
	bool                             _0x943EF413;                     // type:BOOL.0
	string                           _0x75BC251A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x055AC949;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x19D56E39 : _0xDC10377E
{
	bool                             ShouldApplyAttachOffsetRelativeToCamera; // type:BOOL.0
	string                           _0x6DAEC1E0;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x19D7E025
{
	float                            ExtraDistanceToPushAway;         // type:FLOAT.0
	float                            OrbitDistanceScalingToApplyWhenPushing; // type:FLOAT.0
	float                            PullBackSpringConstant;          // type:FLOAT.0
	float                            PushInSpringConstant;            // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	bool                             ShouldAllowOtherCollisionToConstrainCameraIntoEntities; // type:BOOL.0
};

struct _0x19E46457
{
	bool                             ShouldConsiderData;              // type:BOOL.0
	bool                             ShouldAlignOnVehicleExit;        // type:BOOL.0
	float                            AlignmentConeOffsetTowardsVehicleFrontAngle; // type:FLOAT.0
	float                            AlignmentConeAngle;              // type:FLOAT.0
	float                            AlignmentConeAngleWithTrailer;   // type:FLOAT.0
	float                            MinOrientationDeltaToCut;        // type:FLOAT.0
	float                            MinOrientationDeltaToCutForReverseAngle; // type:FLOAT.0
	float                            MinOrientationDeltaToCutWithTrailer; // type:FLOAT.0
};

struct _0x19E66269
{
	string                           ID;                              // type:STRING.ATNONFINALHASHSTRING
	string                           Target;                          // type:STRING.CONST_STRING
};

struct _0x19E9A237
{
	array<struct _0x88D891F7>        Tags;                            // type:ARRAY.ATARRAY
};

struct _0x19EB3BC5 : _0x507E5FA3
{
	int                              ReferenceClipIndex;              // type:INT.0
	string                           ReferencePattern;                // type:STRING.ATSTRING
	array<string>                    Patterns;                        // type:ARRAY.ATARRAY
};

struct _0x19ECA8D0
{
	array<struct _0x6548A6CA, 3>     TypeData;                        // type:ARRAY.ATFIXEDARRAY
	struct _0x8AEADFE0               RagdollData;                     // type:STRUCT.STRUCTURE
	float                            MaxDeflectionAngleLimit;         // type:FLOAT.0
	float                            MaxCharacterSpeed;               // type:FLOAT.0
	float                            DistanceModifier;                // type:FLOAT.0
	float                            MinDistanceModifierLimit;        // type:FLOAT.0
	float                            MaxDistanceModifierLimit;        // type:FLOAT.0
	float                            MinRandomImpulsePositionOffset;  // type:FLOAT.0
	float                            MaxRandomImpulsePositionOffset;  // type:FLOAT.0
	float                            IntervalAtMaximum;               // type:FLOAT.0
	float                            WeaponGroupModifierShotgun;      // type:FLOAT.0
	float                            WeaponGroupModifierSniper;       // type:FLOAT.0
	float                            SecondaryMotionDelay;            // type:FLOAT.0
	float                            LowerBodyModifier;               // type:FLOAT.0
	float                            CharacterForwardTolerance;       // type:FLOAT.0
	float                            MaxDistanceFromBone;             // type:FLOAT.0
};

struct _0x19F0CFA9
{
	float                            fDefaultTestDistance;            // type:FLOAT.0
	float                            fTestGroundOffset;               // type:FLOAT.0
	float                            fIntersectionNormalMaxZ;         // type:FLOAT.0
	bool                             bDontAngleTestUp;                // type:BOOL.0
};

struct _0x19FB765D : _0xDC10377E
{
	vec3                             AttachRelativeOffset;            // type:VECTOR3.0
	vec3                             _0x834D628E;                     // type:VECTOR3.0
	vec3                             _0xD0A10D24;                     // type:VECTOR3.0
	vec3                             _0xDC5AF16F;                     // type:VECTOR3.0
	float                            MinPitch;                        // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	float                            _0x6A323226;                     // type:FLOAT.0
	float                            _0xF3786E22;                     // type:FLOAT.0
	float                            _0x6DD6861B;                     // type:FLOAT.0
	enum _0x0100F80E                 _0xA9958F83;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x12804503;                     // type:ENUM.32BIT
};

struct _0x1A0DB377 : _0x8A0DC979
{
};

struct _0x1A0DEFB7
{
	float                            _0x4A7A6BB9;                     // type:FLOAT.0
	float                            _0xF8C356F0;                     // type:FLOAT.0
	float                            fMinDoorHeight;                  // type:FLOAT.0
	float                            _0xC3AD4DF7;                     // type:FLOAT.0
	float                            _0xF47E0D2F;                     // type:FLOAT.0
	ushort                           _0xFC7CB785;                     // type:USHORT.0
};

struct _0x1A30947B
{
	uint                             _0x31F11411;                     // type:UINT.0
	uint                             _0x55B15792;                     // type:UINT.0
	uint                             _0x8617B07C;                     // type:UINT.0
	string                           FileName;                        // type:STRING.ATSTRING
	string                           _0x4C879F31;                     // type:STRING.ATSTRING
	struct _0x2CDB84B2               _0xE6DCFB2E;                     // type:STRUCT.STRUCTURE
	uint                             _0x611A88F2;                     // type:UINT.0
	uint                             _0x2ADE9C7B;                     // type:UINT.0
};

struct _0x1A332B58
{
	struct _0x6A74D413               _0xCDD3720B;                     // type:STRUCT.STRUCTURE
	struct _0x6A74D413               _0xD02E30AA;                     // type:STRUCT.STRUCTURE
};

struct _0x1A68C236
{
	array<struct _0x9FB643A5>        Changes;                         // type:ARRAY.ATARRAY
};

struct _0x1A690F44
{
	float                            fTestHeightMin;                  // type:FLOAT.0
	float                            fTestHeightMax;                  // type:FLOAT.0
	float                            fTestDistOffsetWalking;          // type:FLOAT.0
	float                            fTestDistOffsetRunning;          // type:FLOAT.0
	float                            fRequiredIntersectionDistAbovePed; // type:FLOAT.0
	float                            fSlopeAngleMax;                  // type:FLOAT.0
	float                            fCloseIntersectionMaxZNormal;    // type:FLOAT.0
};

struct _0x1A80B78B
{
	uint                             Key;                             // type:UINT.0
	bool                             _0x81364499;                     // type:BOOL.0
};

struct _0x1A8A749A : _0x1054F746
{
};

struct _0x1A92D2F6
{
	bool                             _0x59D6BB5E;                     // type:BOOL.0
	int                              _0x25B709EF;                     // type:INT.0
	float                            _0x5FCDE489;                     // type:FLOAT.0
	bool                             _0xF25F4D53;                     // type:BOOL.0
	bool                             _0xEFF5CD98;                     // type:BOOL.0
	bool                             _0xC339249D;                     // type:BOOL.0
	float                            _0x73AC937B;                     // type:FLOAT.0
	float                            _0x23B1D3B6;                     // type:FLOAT.0
	float                            _0xA79B5327;                     // type:FLOAT.0
	bool                             _0x851427A7;                     // type:BOOL.0
	float                            _0x8BE2CCD5;                     // type:FLOAT.0
	float                            _0xFEDE3E57;                     // type:FLOAT.0
	float                            _0xB61B3104;                     // type:FLOAT.0
	float                            _0x61EDF7D5;                     // type:FLOAT.0
	float                            _0x74AAB043;                     // type:FLOAT.0
	float                            _0x29B45A6A;                     // type:FLOAT.0
	float                            _0xF4A760B0;                     // type:FLOAT.0
	float                            _0xAD50C8D2;                     // type:FLOAT.0
	bool                             _0xA5790F59;                     // type:BOOL.0
	bool                             _0x475985C8;                     // type:BOOL.0
	float                            _0xAC1783DC;                     // type:FLOAT.0
	float                            _0x1E3916AD;                     // type:FLOAT.0
	float                            _0x3FEC1EA4;                     // type:FLOAT.0
	float                            _0xAEE27610;                     // type:FLOAT.0
	float                            _0xEE64D646;                     // type:FLOAT.0
	float                            _0xBBB05E54;                     // type:FLOAT.0
	float                            _0x03EC82C2;                     // type:FLOAT.0
	float                            _0x1E544EC8;                     // type:FLOAT.0
	float                            _0x7BCAE313;                     // type:FLOAT.0
	float                            _0x0DF3EF82;                     // type:FLOAT.0
	float                            _0x30286138;                     // type:FLOAT.0
	float                            _0x067AFA99;                     // type:FLOAT.0
	float                            _0x08AF89CF;                     // type:FLOAT.0
	float                            _0x58F52330;                     // type:FLOAT.0
};

struct _0x1AAC861A : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
};

struct _0x1ABC480D : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x1ABDF96A
{
	float                            _0xAA6A4048;                     // type:FLOAT.0
	float                            _0x91BD8633;                     // type:FLOAT.0
	float                            _0xFDE5F8FC;                     // type:FLOAT.0
	float                            _0x5B88884E;                     // type:FLOAT.0
	array<string>                    _0x6779AEAA;                     // type:ARRAY.ATARRAY
	string                           _0xEC62B0E1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFCF2A4AC;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x1AD3F658
{
	bool                             _0xB812563E;                     // type:BOOL.0
	float                            _0xF43E72F8;                     // type:FLOAT.0
	float                            _0xB8C94A77;                     // type:FLOAT.0
	float                            _0x6EC40E88;                     // type:FLOAT.0
	float                            _0x69E230E4;                     // type:FLOAT.0
	array<struct _0xC7A5F7BD>        _0xF65339B6;                     // type:ARRAY.ATARRAY
};

struct _0x1ADF76DF : _0x0A698250
{
};

struct _0x1AFAA17C : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	short                            LowerBound;                      // type:SHORT.0
	short                            UpperBound;                      // type:SHORT.0
};

struct _0x1B04D0F4
{
	string                           EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	string                           EmotionalPresetNonCombat;        // type:STRING.ATNONFINALHASHSTRING
	string                           FiringPatternOverride;           // type:STRING.ATNONFINALHASHSTRING
	struct void                      AimLogic;                        // type:STRUCT.EXTERNAL_NAMED
	struct void                      SpeedController;                 // type:STRUCT.EXTERNAL_NAMED
	bitset<enum _0x010428B5>         Flags;                           // type:BITSET.32BIT
	struct _0x290D962A               TacticalAnalysisSettings;        // type:STRUCT.STRUCTURE
	struct _0x11CCD97C               AimHelperSettings;               // type:STRUCT.STRUCTURE
	struct _0x65DF5F57               SpreadSettings;                  // type:STRUCT.STRUCTURE
	enum _0xB69160F5                 AttackRange;                     // type:ENUM.32BIT
	enum _0xE078876B                 FlankLimit;                      // type:ENUM.32BIT
	enum _0xE97E4C7D                 CombatSpeed;                     // type:ENUM.32BIT
	enum _0xE97E4C7D                 CombatSpeedOutOfAttackRange;     // type:ENUM.32BIT
	enum _0x4F456B61                 CombatMovement;                  // type:ENUM.32BIT
	enum _0x795864BB                 TransportAimMode;                // type:ENUM.32BIT
	enum _0x15FD84AE                 PreferAttackMode;                // type:ENUM.32BIT
	enum _0xD3574A14                 CombatStartAimIntro;             // type:ENUM.32BIT
	int                              MaxChasers;                      // type:INT.0
	float                            SwitchCoverThreshold;            // type:FLOAT.0
	float                            AttackRangeMin;                  // type:FLOAT.0
	float                            AttackRangeMax;                  // type:FLOAT.0
	float                            ChaseStartModifier;              // type:FLOAT.0
	float                            ChaseStopModifier;               // type:FLOAT.0
	float                            ShootRateModifier;               // type:FLOAT.0
	float                            BurstRateModifier;               // type:FLOAT.0
	float                            BlindFireModifier;               // type:FLOAT.0
	float                            AccuracyMultiplier;              // type:FLOAT.0
	float                            RepositionTime;                  // type:FLOAT.0
	bitset<enum _0x08DBCEDC>         BlockedMods;                     // type:BITSET.32BIT
	string                           Name;                            // type:STRING.POINTER
	bitset<enum _0x08DBCEDC>         AllowedMods;                     // type:BITSET.32BIT
};

struct _0x1B06F3E5
{
	bool                                _0xF92355F5;                     // type:BOOL.0
	string                              _0xF7AD0112;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x04B3DB24;                     // type:STRING.ATNONFINALHASHSTRING
	string                              BodyBlendTemplateId;             // type:STRING.ATNONFINALHASHSTRING
	struct _0x18BE7FE2                  _0xB212C1E1;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x18BE7FE2>     _0x4253EA01;                     // type:MAP.ATBINARYMAP
};

struct _0x1B1FBF0C
{
	struct _0xA9606439               WantedLevel1;                    // type:STRUCT.STRUCTURE
	struct _0xA9606439               WantedLevel2;                    // type:STRUCT.STRUCTURE
	struct _0xA9606439               WantedLevel3;                    // type:STRUCT.STRUCTURE
	struct _0xA9606439               WantedLevel4;                    // type:STRUCT.STRUCTURE
	struct _0xA9606439               WantedLevel5;                    // type:STRUCT.STRUCTURE
	uchar                            _0x7495FE67;                     // type:UCHAR.0
	char                             _0x4765F83D;                     // type:CHAR.0
};

struct _0x1B226B10 : _0x320EE17C
{
};

struct _0x1B26FDB1 : _0x72E4314A
{
};

struct _0x1B3DB3F4 : CTuning
{
	float                            _0x10E316B5;                     // type:FLOAT.0
};

struct _0x1B47AEC5 : _0xDFED37A7
{
};

struct _0x1B48ABF1
{
	float                            _0xA526D818;                     // type:FLOAT.0
	float                            _0xF087E21E;                     // type:FLOAT.0
	float                            _0x67BF91FA;                     // type:FLOAT.0
	float                            _0xCE524A15;                     // type:FLOAT.0
	float                            _0xE3230C44;                     // type:FLOAT.0
	float                            _0xD78C82AF;                     // type:FLOAT.0
	float                            _0x533FF592;                     // type:FLOAT.0
	float                            _0x2C7DCFE0;                     // type:FLOAT.0
	float                            _0x665A7EAB;                     // type:FLOAT.0
	float                            _0x4387FE96;                     // type:FLOAT.0
	float                            _0xC08C4204;                     // type:FLOAT.0
	float                            _0xE29C26FA;                     // type:FLOAT.0
	float                            _0x50312495;                     // type:FLOAT.0
	float                            _0xD6B778CB;                     // type:FLOAT.0
	float                            _0xCC05FFDD;                     // type:FLOAT.0
	float                            _0xEEF3F082;                     // type:FLOAT.0
	float                            _0xF7B0E59D;                     // type:FLOAT.0
	float                            _0xAA6E8A60;                     // type:FLOAT.0
	bool                             _0xCFFA4639;                     // type:BOOL.0
};

struct _0x1B5C65E0 : _0xC7CDF22D
{
	string                           ElementID;                       // type:STRING.ATNSHASHSTRING
};

struct _0x1B6B667F : CCompendiumItemWeapon
{
};

struct _0x1B80D600 : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x54B82C2C                 Style;                           // type:ENUM.32BIT
	enum _0xF0AB0E27                 Priority;                        // type:ENUM.32BIT
	float                            Duration;                        // type:FLOAT.0
};

struct _0x1BA712A3
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	float                            _0xA17ED88A;                     // type:FLOAT.0
	bool                             _0x3FBD74E0;                     // type:BOOL.0
	bool                             _0x14CA8C41;                     // type:BOOL.0
	bool                             _0xE3CC3284;                     // type:BOOL.0
	array<struct _0xC29B9A65>        Bounds;                          // type:ARRAY.ATARRAY
};

struct _0x1BB293EB
{
	float                            AimAssistBlendInTime;            // type:FLOAT.0
	float                            AimAssistBlendOutTime;           // type:FLOAT.0
	bool                             _0x975568FA;                     // type:BOOL.0
	float                            _0x3B1D6633;                     // type:FLOAT.0
	float                            _0x2537107E;                     // type:FLOAT.0
	float                            _0xC5A11311;                     // type:FLOAT.0
	float                            _0xB49825E2;                     // type:FLOAT.0
	array<struct CCurveSet, 5>       CurveSets;                       // type:ARRAY.ATFIXEDARRAY
	struct CCurveSet                 AimAssistDistanceCurve;          // type:STRUCT.STRUCTURE
};

struct _0x1BB854E2
{
	bool                             _0xF34BD310;                     // type:BOOL.0
	float                            _0x94720DEC;                     // type:FLOAT.0
	float                            Red;                             // type:FLOAT.0
	float                            Green;                           // type:FLOAT.0
	float                            Blue;                            // type:FLOAT.0
};

struct _0x1BC567F2
{
	array<struct _0xB473FE0D>        Textures;                        // type:ARRAY.ATARRAY
	int                              DefaultTexureIndex;              // type:INT.0
	uchar                            NumericOffset;                   // type:UCHAR.0
	uchar                            AlphabeticOffset;                // type:UCHAR.0
	uchar                            SpaceOffset;                     // type:UCHAR.0
	uchar                            RandomCharOffset;                // type:UCHAR.0
	uchar                            NumRandomChar;                   // type:UCHAR.0
};

struct _0x1BC84E35
{
	int                              MaxAttrsAudio;                   // type:INT.0
	int                              MaxAttrsBuoyancy;                // type:INT.0
	int                              MaxAttrsDecal;                   // type:INT.0
	int                              MaxAttrsExplosion;               // type:INT.0
	int                              MaxAttrsLadder;                  // type:INT.0
	int                              _0xF3D1F69D;                     // type:INT.0
	int                              MaxAttrsLightShaft;              // type:INT.0
	int                              MaxAttrsParticle;                // type:INT.0
	int                              MaxAttrsProcObj;                 // type:INT.0
	int                              MaxAttrsScrollBar;               // type:INT.0
	int                              MaxAttrsSpawnPoint;              // type:INT.0
	int                              _0xC47A325E;                     // type:INT.0
	int                              MaxAttrsWindDisturbance;         // type:INT.0
	int                              MaxAttrsWorldPoint;              // type:INT.0
	int                              _0xFC5DD116;                     // type:INT.0
	int                              MaxEffectsWorld2d;               // type:INT.0
	int                              _0x91572EB3;                     // type:INT.0
};

struct _0x1BC9F45F : _0x1054F746
{
};

struct _0x1BD0EE1C
{
	map<string, struct _0xA3CC2B5A>     TypeSelection;                   // type:MAP.ATBINARYMAP
	map<string, struct _0x994BDB66>     MotionTypeGroups;                // type:MAP.ATBINARYMAP
	map<string, struct _0xE63AC5D8>     WeaponHoldingGroups;             // type:MAP.ATBINARYMAP
};

struct _0x1BFD62ED : CAICondition
{
};

struct _0x1C26C4DE : CTuning
{
	struct _0x00E10AF1               _0x74E63FB9;                     // type:STRUCT.STRUCTURE
	struct _0x00E10AF1               _0x3C886CD1;                     // type:STRUCT.STRUCTURE
	struct _0x00E10AF1               _0xAC0183E3;                     // type:STRUCT.STRUCTURE
	struct _0x00E10AF1               _0xC2DA53F3;                     // type:STRUCT.STRUCTURE
	struct _0x00E10AF1               _0xB6147D51;                     // type:STRUCT.STRUCTURE
	struct _0x00E10AF1               _0x0C0DBD06;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xDC99961D;                     // type:STRUCT.STRUCTURE
	bool                             _0x36267A85;                     // type:BOOL.0
	float                            _0x2EF252B8;                     // type:FLOAT.0
	float                            _0xAEB15813;                     // type:FLOAT.0
	float                            _0x4C062CF9;                     // type:FLOAT.0
	float                            _0xD4B4DF8F;                     // type:FLOAT.0
	float                            _0xC41AA176;                     // type:FLOAT.0
	float                            _0x17EA622B;                     // type:FLOAT.0
	float                            _0x0C841C75;                     // type:FLOAT.0
	int                              _0x86B8B6EC;                     // type:INT.0
	int                              _0x03AD639E;                     // type:INT.0
};

struct _0x1C2F8A6C : CTuning
{
	float                            _0xE7F04525;                     // type:FLOAT.0
	float                            _0xFE292A7C;                     // type:FLOAT.0
	float                            _0x166B89B7;                     // type:FLOAT.0
	float                            _0x1CBA61BF;                     // type:FLOAT.0
	float                            _0xA61E2748;                     // type:FLOAT.0
	float                            _0x034D7957;                     // type:FLOAT.0
	float                            _0x171B3AE0;                     // type:FLOAT.0
	float                            _0xF65CD00F;                     // type:FLOAT.0
	float                            _0xA4F29045;                     // type:FLOAT.0
	float                            _0xA04EDCAA;                     // type:FLOAT.0
	float                            _0x92DD4B80;                     // type:FLOAT.0
	float                            _0x4B11C428;                     // type:FLOAT.0
	float                            _0xEF283DA2;                     // type:FLOAT.0
	float                            _0x2F4BB50C;                     // type:FLOAT.0
	float                            _0x34CE146F;                     // type:FLOAT.0
	float                            _0xD98DCBB2;                     // type:FLOAT.0
	float                            _0x7672274E;                     // type:FLOAT.0
	float                            _0xE4E72E83;                     // type:FLOAT.0
	bool                             _0xFE65E0B0;                     // type:BOOL.0
	float                            _0xD8397DA4;                     // type:FLOAT.0
	float                            _0xA76588FA;                     // type:FLOAT.0
};

struct _0x1C3053EC
{
	float                            objectMass;                      // type:FLOAT.0
	vec3                             _0x186A218E;                     // type:VECTOR3.0
	vec3                             objectLinearSpeedDamping;        // type:VECTOR3.0
	vec3                             objectLinearVelocityDamping;     // type:VECTOR3.0
	vec3                             objectLinearVelocitySquaredDamping; // type:VECTOR3.0
	vec3                             objectAngularSpeedDamping;       // type:VECTOR3.0
	vec3                             objectAngularVelocityDamping;    // type:VECTOR3.0
	vec3                             objectAngularVelocitySquaredDamping; // type:VECTOR3.0
	vec3                             objectCentreOfMassOffset;        // type:VECTOR3.0
	vec3                             _0x8D2634DB;                     // type:VECTOR3.0
	vec3                             _0x8EBB3B78;                     // type:VECTOR3.0
	vec3                             _0x74C257F0;                     // type:VECTOR3.0
	vec3                             forkliftAttachAngledAreaDims;    // type:VECTOR3.0
	vec3                             forkliftAttachAngledAreaOrigin;  // type:VECTOR3.0
	bool                             forkliftCanAttachWhenFragBroken; // type:BOOL.0
	float                            lowLodBuoyancyDistance;          // type:FLOAT.0
	float                            lowLodBuoyancyHeightOffset;      // type:FLOAT.0
	float                            buoyancyFactor;                  // type:FLOAT.0
	float                            buoyancyDragFactor;              // type:FLOAT.0
	float                            _0x6C4E34AF;                     // type:FLOAT.0
	float                            _0x87AB546A;                     // type:FLOAT.0
	bool                             _0x1F761CAB;                     // type:BOOL.0
	float                            _0xE4B95B25;                     // type:FLOAT.0
	float                            _0x14A007AB;                     // type:FLOAT.0
	int                              boundIndexForWaterSamples;       // type:INT.0
	bool                             lowLodBuoyancyNoCollision;       // type:BOOL.0
	float                            maxHealth;                       // type:FLOAT.0
	float                            knockOffBikeImpulseScalar;       // type:FLOAT.0
	int                              glassFrameFlags;                 // type:INT.0
	bool                             bCanBePickedUpByCargobob;        // type:BOOL.0
	bool                             bUnreachableByMeleeNavigation;   // type:BOOL.0
	bool                             notDamagedByFlames;              // type:BOOL.0
	bool                             collidesWithLowLodVehicleChassis; // type:BOOL.0
	bool                             _0xD3AA9BCB;                     // type:BOOL.0
	bool                             _0xAFA45899;                     // type:BOOL.0
	bool                             _0xB3CE7005;                     // type:BOOL.0
};

struct _0x1C4691B2 : StatsGoalScoreSourceGroupBase
{
	enum eCompendiumCategories           category;                        // type:ENUM.32BIT
	string                               subcategory;                     // type:STRING.ATNONFINALHASHSTRING
	enum eCompendiumGoalUpdateReason     reason;                          // type:ENUM.32BIT
};

struct _0x1C4D00E0
{
	array<string, 8>                 ModelNames;                      // type:ARRAY.ATFIXEDARRAY
};

struct _0x1C594B3D
{
	string                           uHash;                           // type:STRING.ATFINALHASHSTRING
	int                              iHighestLevel;                   // type:INT.0
	int                              iLowestLevel;                    // type:INT.0
};

struct _0x1C5972AF : _0x2F7DA38D
{
	bool                             _0x59B92C03;                     // type:BOOL.0
	string                           outfitName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBC501AFE;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x1C5B153A : CAICondition
{
};

struct _0x1C6D0EE9 : _0xCC7762ED
{
};

struct _0x1CCA2C29
{
	float                            VehicleSpawningDistance;         // type:FLOAT.0
	float                            VehicleMinSpawnDistance;         // type:FLOAT.0
	float                            VehicleCullDistanceNoDraftAnimals; // type:FLOAT.0
	float                            VehicleDefaultSpeed;             // type:FLOAT.0
	float                            _0x53161A05;                     // type:FLOAT.0
	float                            HorseSpawningDistance;           // type:FLOAT.0
	float                            HorseMinSpawnDistance;           // type:FLOAT.0
	float                            HorseDefaultSpeed;               // type:FLOAT.0
	float                            _0x8F20AB55;                     // type:FLOAT.0
	float                            HorseFindHitchingPostDistance;   // type:FLOAT.0
	uint                             _0x1629F68F;                     // type:UINT.0
	uint                             TimeTryingToForceSpawn;          // type:UINT.0
	uint                             TimeRefreshCachedScenarios;      // type:UINT.0
	uint                             MaxPersCharUpdatesPerFrame;      // type:UINT.0
	uint                             MaxPersCharGroupUpdatesPerFrame; // type:UINT.0
	uint                             MaxPersCharVolumeBoundSphereRadius; // type:UINT.0
	uint                             TimeWaitSinceInteriorPopulated;  // type:UINT.0
	float                            PedPriorityDespawnDistance;      // type:FLOAT.0
};

struct _0x1CCAACC8 : CTuning
{
	struct _0xDF771251               BlendOutThreshold;               // type:STRUCT.STRUCTURE
	float                            fDoInjuredOnGroundChance;        // type:FLOAT.0
	float                            fFallingSpeedThreshold;          // type:FLOAT.0
	float                            _0xCF43B608;                     // type:FLOAT.0
	float                            _0xF9EB23DC;                     // type:FLOAT.0
	float                            _0x7A411708;                     // type:FLOAT.0
	float                            _0x61F9D0A2;                     // type:FLOAT.0
	float                            _0x5DA6D130;                     // type:FLOAT.0
	float                            _0x96EADE45;                     // type:FLOAT.0
	int                              iRandomDurationMin;              // type:INT.0
	int                              iRandomDurationMax;              // type:INT.0
	int                              _0x22E02F69;                     // type:INT.0
	int                              _0xBBE58AFB;                     // type:INT.0
	int                              _0x319BD673;                     // type:INT.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
};

struct _0x1CD401A1 : _0x5278AC0B
{
};

struct _0x1CE459CF
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0xB3AABF84;                     // type:ENUM.32BIT
	vec3                             _0xA0F64103;                     // type:VECTOR3.0
	int                              _0x143F72AA;                     // type:INT.0
	float                            _0xB2BE8DFB;                     // type:FLOAT.0
	float                            _0xF4FB82DB;                     // type:FLOAT.0
	bool                             _0x646A8696;                     // type:BOOL.0
};

struct _0x1CFE5506 : _0x8A0DC979
{
};

struct _0x1D20B659
{
	struct _0xF51E79D8               MultiplierForLawWitnessDistance; // type:STRUCT.STRUCTURE
	struct _0xF51E79D8               MultiplierForWitnessDistance;    // type:STRUCT.STRUCTURE
	float                            MultiplierForOnScreen;           // type:FLOAT.0
	float                            MultiplierForScriptedPed;        // type:FLOAT.0
	float                            MultiplierForOwners;             // type:FLOAT.0
	float                            MultiplierForVictim;             // type:FLOAT.0
	float                            MultiplierForMounted;            // type:FLOAT.0
	float                            MultiplierForDriver;             // type:FLOAT.0
	float                            MultiplierForPassenger;          // type:FLOAT.0
	float                            MultiplierForKnownCriminal;      // type:FLOAT.0
	float                            MultiplierForDifferentInteriors; // type:FLOAT.0
	float                            MultiplierForScenarioPed;        // type:FLOAT.0
	float                            MultiplierForScenarioBlockedPed; // type:FLOAT.0
	float                            MultiplierForLawEnforcement;     // type:FLOAT.0
	float                            MultiplierForOwnedVolumes;       // type:FLOAT.0
	float                            MultiplierForLeader;             // type:FLOAT.0
};

struct _0x1D2B322F : CTuning
{
	struct _0x16908335               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x1D3AFABA : CTuning
{
	struct _0xDCEADA3A               Neck;                            // type:STRUCT.STRUCTURE
	struct _0xDCEADA3A               Torso;                           // type:STRUCT.STRUCTURE
	struct _0xDCEADA3A               Feet;                            // type:STRUCT.STRUCTURE
	struct _0xDCEADA3A               Base;                            // type:STRUCT.STRUCTURE
	float                            _0xE502B6D3;                     // type:FLOAT.0
	float                            _0x9D1E93CE;                     // type:FLOAT.0
	float                            _0xA5FEA914;                     // type:FLOAT.0
	vec2V                            _0x2A7439BF;                     // type:VEC2V.0
	vec2V                            _0xFD588744;                     // type:VEC2V.0
	float                            _0x9120D7EA;                     // type:FLOAT.0
	float                            _0xB259699A;                     // type:FLOAT.0
	bool                             ApplyImpulse;                    // type:BOOL.0
	bool                             _0x1DD7FA4C;                     // type:BOOL.0
	struct _0x7225432F               _0xF138DE00;                     // type:STRUCT.STRUCTURE
};

struct _0x1D3EB939 : _0xA2F7716A
{
};

struct _0x1D49448F
{
	string                           DuelingAnims;                    // type:STRING.ATNONFINALHASHSTRING
	float                            DrawAnimRate;                    // type:FLOAT.0
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            OpponentDrawTimeout;             // type:FLOAT.0
	float                            OpponentDrawDelay;               // type:FLOAT.0
	vec2V                            ReticleSpeed;                    // type:VEC2V.0
	float                            FiringCapsuleRadius;             // type:FLOAT.0
	enum _0x10E2E553                 ReticleMovementType;             // type:ENUM.32BIT
	bool                             IsLeftHanded;                    // type:BOOL.0
	bool                             SkipIdleState;                   // type:BOOL.0
};

struct _0x1D522EF3 : _0xDCC3E830
{
};

struct _0x1D60A23F : _0xFABD9DF5
{
};

struct _0x1D67D17C : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct _0x1D80DCFA
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, string>              _0x3D81F725;                     // type:MAP.ATBINARYMAP
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0x521B6827;                     // type:FLOAT.0
	float                            _0x7B660C91;                     // type:FLOAT.0
	bool                             _0xC498DCA0;                     // type:BOOL.0
};

struct _0x1D8B900F
{
	float                            HeapLimitMultiplier;             // type:FLOAT.0
	uint                             MaxCollectionRoots;              // type:UINT.0
	uint                             FramesBetweenCollections;        // type:UINT.0
	uint                             InitialDynamicLimit;             // type:UINT.0
	uint                             RunsToUpgradeGen;                // type:UINT.0
	uint                             RunsToCollectYoung;              // type:UINT.0
	uint                             RunsToCollectOld;                // type:UINT.0
};

struct _0x1D9AB0C9
{
	string                           ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
	float                            _0xA289876B;                     // type:FLOAT.0
	int                              _0xFBE718AC;                     // type:INT.0
	int                              _0xC3DB2744;                     // type:INT.0
	int                              _0x42B6270A;                     // type:INT.0
	int                              _0x871E49C3;                     // type:INT.0
};

struct _0x1DB0B13F
{
	map<short, struct _0xCFE39F5E>     Clips;                           // type:MAP.ATBINARYMAP
	bitset<enum _0x5CEFF047>           Flags;                           // type:BITSET.32BIT
};

struct _0x1DB93863 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           PropSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           DofName;                         // type:STRING.ATSTRING
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0x1DDFCC4D : uiPromptedInputBehaviorBase
{
};

struct _0x1DE1294D : _0xF206AE70
{
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 StatType;                        // type:ENUM.32BIT
};

struct _0x1DE25F3B : _0x8A0DC979
{
};

struct _0x1DE7B92A
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	vec3                             Displacement;                    // type:VECTOR3.0
	float                            ReloadWindowStart;               // type:FLOAT.0
	float                            ReloadWindowDuration;            // type:FLOAT.0
	float                            BlockFiringPercentage;           // type:FLOAT.0
	float                            AllowFiringDuration;             // type:FLOAT.0
};

struct _0x1DEB0C14
{
	int                                 _0x881157E5;                     // type:INT.0
	map<string, struct _0x16B97780>     Events;                          // type:MAP.ATBINARYMAP
	map<string, struct _0xDD140D06>     Stats;                           // type:MAP.ATBINARYMAP
	map<string, struct _0x1DF3858E>     Triggers;                        // type:MAP.ATBINARYMAP
};

struct _0x1DF3858E
{
	struct _0x0F5161EB               pCondition;                      // type:STRUCT.POINTER
	array<struct _0xF206AE70>        Actions;                         // type:ARRAY.ATARRAY
	array<struct _0x106E297E>        Responses;                       // type:ARRAY.ATARRAY
};

struct _0x1DF4F1CA
{
	float                            _0x94AFA795;                     // type:FLOAT.0
	float                            _0x80E5186C;                     // type:FLOAT.0
	float                            _0x43180A31;                     // type:FLOAT.0
};

struct _0x1E14166B : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0x1E195D9E : _0x14229900
{
};

struct _0x1E24BE45
{
	array<struct _0xDBF077AE, 5>     Values;                          // type:ARRAY.ATFIXEDARRAY
};

struct _0x1E256E6B
{
	array<struct _0x23D256ED>        CurvesMetadataList;              // type:ARRAY.ATARRAY
	int                              CurveLibVersion;                 // type:INT.0
};

struct _0x1E3B35D7
{
	float                            MaxDistance;                     // type:FLOAT.0
	float                            _0xE121D0C8;                     // type:FLOAT.0
	float                            _0xFC25E139;                     // type:FLOAT.0
	float                            _0x08D0F2EE;                     // type:FLOAT.0
	float                            _0x67E56653;                     // type:FLOAT.0
	float                            _0x91A016DC;                     // type:FLOAT.0
};

struct _0x1E3BD232 : _0x4198511D
{
};

struct _0x1E467C22 : _0x0F5161EB
{
	struct _0x0F5161EB               _0x9E823D63;                     // type:STRUCT.POINTER
	struct _0x0F5161EB               _0xABDBD816;                     // type:STRUCT.POINTER
};

struct _0x1E46A87B : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x1E493CEB
{
	bool                             Enabled;                         // type:BOOL.0
	vec2                             HeadingLimits;                   // type:VECTOR2.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
	float                            _0xADB51156;                     // type:FLOAT.0
	float                            _0xB6AE8B29;                     // type:FLOAT.0
};

struct _0x1E581CF6
{
	bool                             _0x5B5B0C23;                     // type:BOOL.0
	bool                             _0xDBB33BD4;                     // type:BOOL.0
	bool                             _0x36F98DA5;                     // type:BOOL.0
	bool                             _0xB917B0A8;                     // type:BOOL.0
	uint                             _0x3B1E85DD;                     // type:UINT.0
};

struct _0x1E5BE266
{
	struct rage__spdAABB             localBox;                        // type:STRUCT.STRUCTURE
	matrix33V                        localToWorld;                    // type:MAT33V.0
};

struct _0x1E69ADC0 : CAICondition
{
	enum _0x812799B4                 _0xE7BD3DDD;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
};

struct _0x1E711815 : _0xE1754E30
{
};

struct _0x1E95009C : _0x8F62E55D
{
};

struct _0x1EBDDB5B : _0x11AD3051
{
	struct _0xE19E0658                  _0xA176F880;                     // type:STRUCT.STRUCTURE
	map<string, struct _0xF70F21F5>     entities;                        // type:MAP.ATBINARYMAP
	map<string, struct _0x45E78B4D>     sections;                        // type:MAP.ATBINARYMAP
	map<string, struct _0xA90B7F7E>     playLists;                       // type:MAP.ATBINARYMAP
	bitset<enum _0x93E1254E>            flags;                           // type:BITSET.32BIT
	uint                                version;                         // type:UINT.0
	string                              _0x34CC92BF;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xC1751A4A                  _0x6C60E551;                     // type:STRUCT.POINTER
	array<string>                       _0x29C25EC9;                     // type:ARRAY.ATARRAY
	struct _0xA2F97C23                  stateMachine;                    // type:STRUCT.STRUCTURE
	string                              _0x8FB2F5A4;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                _0x0558B627;                     // type:BOOL.0
};

struct _0x1EEAF6ED
{
	bool                             ShouldApply;                     // type:BOOL.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	enum _0x0100F80E                 EasingType;                      // type:ENUM.32BIT
	bool                             _0x28DE316E;                     // type:BOOL.0
	float                            _0x049880F0;                     // type:FLOAT.0
	float                            _0x516C1A7A;                     // type:FLOAT.0
	float                            _0x681C47DA;                     // type:FLOAT.0
	float                            _0xBF070CA9;                     // type:FLOAT.0
};

struct _0x1EF3F893 : _0x7DE6531A
{
	int                              targetValue;                     // type:INT.0
	int                              targetValueMin;                  // type:INT.0
	int                              targetValueMax;                  // type:INT.0
};

struct _0x1EF489A5
{
	bool                             _0xBFFDA0EF;                     // type:BOOL.0
	bool                             _0x676D3896;                     // type:BOOL.0
	bool                             _0x741043CA;                     // type:BOOL.0
	bool                             _0x9A1CED5B;                     // type:BOOL.0
	bool                             _0xB666D2E6;                     // type:BOOL.0
	enum _0xF98A9BF2                 _0xCF984A2F;                     // type:ENUM.32BIT
	bool                             _0x4A1DB695;                     // type:BOOL.0
	bool                             _0x75535C1D;                     // type:BOOL.0
	bool                             _0x0182F3EA;                     // type:BOOL.0
	bool                             _0xEF1D1775;                     // type:BOOL.0
};

struct _0x1F00CEC5 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x1F06BA64 : CTuning
{
	float                            _0x3B47058D;                     // type:FLOAT.0
};

struct _0x1F269BEE
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x32CF5F3C;                     // type:FLOAT.0
	float                            _0x4ED7271A;                     // type:FLOAT.0
	float                            _0xF8FCA335;                     // type:FLOAT.0
};

struct _0x1F3A2007
{
	map<enum _0x113E295E, struct _0xF8F954BA>     _0x2A85E415;                     // type:MAP.ATMAP
};

struct _0x1F3DE612 : _0xE4AECA2C
{
	string                           Data;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x1F4105BF : _0x8A0DC979
{
};

struct _0x1F5421AB : _0x1054F746
{
};

struct _0x1F61A268
{
	array<struct CTxdRelationship>          txdRelationships;                // type:ARRAY.ATARRAY
	array<struct CMultiTxdRelationship>     multiTxdRelationships;           // type:ARRAY.ATARRAY
};

struct _0x1F8207B8 : _0xBF9602D8
{
};

struct _0x1F9DC2BE : CMission
{
	string                           _0x7BA4461C;                     // type:STRING.ATSTRING
};

struct _0x1FA04F09
{
	enum _0xDC890976                 VolumeType;                      // type:ENUM.32BIT
	vec3V                            Position;                        // type:VEC3V.0
	vec3V                            Heading;                         // type:VEC3V.0
	vec3V                            Scale;                           // type:VEC3V.0
	bitset<enum _0x778B3C66>         _0x2B9800A9;                     // type:BITSET.32BIT
};

struct _0x1FA256EF : _0x3E7AB376
{
	enum _0x99BEFEED                 Type;                            // type:ENUM.32BIT
	string                           LocText;                         // type:STRING.ATNONFINALHASHSTRING
	struct _0xD520C38A               Status;                          // type:STRUCT.POINTER
	struct _0x40FED52F               _0x65F63A80;                     // type:STRUCT.POINTER
};

struct _0x1FA4B915 : _0x1FB1BCEA
{
};

struct _0x1FB1BCEA : _0x906508CE
{
};

struct _0x1FB30285
{
	string                           _0xC69C2836;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0x23200FEE;                     // type:INT.0
	bool                             _0xA0045890;                     // type:BOOL.0
	float                            _0x42B8689C;                     // type:FLOAT.0
	bool                             _0xAFE18943;                     // type:BOOL.0
	string                           _0x7D8E64ED;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD5CBC9BC;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x9DE5083B;                     // type:BOOL.0
	uint                             _0xA715963E;                     // type:UINT.0
	string                           _0x96CF5F0F;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x1FB311C6
{
	ushort                                        DecompPeriodHours;               // type:USHORT.0
	string                                        CorpseVfxInfoHashName;           // type:STRING.ATNONFINALHASHSTRING
	string                                        GroundDecalHashName;             // type:STRING.ATNONFINALHASHSTRING
	float                                         GroundDecalWidth;                // type:FLOAT.0
	float                                         GroundDecalHeight;               // type:FLOAT.0
	uchar                                         GroundDecalColorRed;             // type:UCHAR.0
	uchar                                         GroundDecalColorGreen;           // type:UCHAR.0
	uchar                                         GroundDecalColorBlue;            // type:UCHAR.0
	uchar                                         GroundDecalColorAlpha;           // type:UCHAR.0
	map<enum _0x4F8AF3DF, struct _0xC1316795>     EnvTypeToDecompInfo;             // type:MAP.ATMAP
};

struct _0x1FC0213F
{
	struct _0x25BC258A               RightHandDisabled;               // type:STRUCT.STRUCTURE
	struct _0x25BC258A               LeftHandDisabled;                // type:STRUCT.STRUCTURE
};

struct _0x1FC5ADD8
{
	enum rage__InputType             Input;                           // type:ENUM.32BIT
	bool                             _0x553B0C19;                     // type:BOOL.0
	bool                             _0x11E2E19C;                     // type:BOOL.0
};

struct _0x1FCCFCC1
{
	float                            StraightLineDistance;            // type:FLOAT.0
	float                            MinTargetSpeedToStartFromPursue; // type:FLOAT.0
	float                            MinTargetSpeedToContinueFromPursue; // type:FLOAT.0
};

struct _0x1FE30971 : uiEventDataBase
{
};

struct _0x1FF7C383 : _0x0A510DA9
{
};

struct _0x1FFF2213 : _0x8148C135
{
	string                           templateName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x200432C5 : _0x2F7DA38D
{
	float                            _0x846EDDA3;                     // type:FLOAT.0
	float                            _0xEFD43E3F;                     // type:FLOAT.0
};

struct _0x200C29DC
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x20133D91
{
	enum _0x4432CE8F                 GameMode;                        // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	float                            Multiplier;                      // type:FLOAT.0
};

struct _0x202E0598 : _0x8A0DC979
{
	enum eUiEventChannels            EventChannel;                    // type:ENUM.32BIT
	struct uiEventDataBase           EventData;                       // type:STRUCT.POINTER
	string                           Message;                         // type:STRING.ATNONFINALHASHSTRING
	enum _0x039DE455                 ActionMode;                      // type:ENUM.32BIT
};

struct _0x2037A388 : _0xDE795AEA
{
};

struct _0x2037B6A6 : CTuning
{
	uint                             _0xDB330D2D;                     // type:UINT.0
	float                            _0xD64664E5;                     // type:FLOAT.0
	float                            _0x8A770C19;                     // type:FLOAT.0
	float                            _0x4A0688AF;                     // type:FLOAT.0
	float                            _0x65BE1DC2;                     // type:FLOAT.0
	float                            _0x11BF7744;                     // type:FLOAT.0
	float                            _0x657ACA59;                     // type:FLOAT.0
	float                            _0x26FC89C4;                     // type:FLOAT.0
	float                            _0x72E36FC7;                     // type:FLOAT.0
	float                            _0x5621ACA4;                     // type:FLOAT.0
};

struct _0x2045A21C
{
	bool                             _0xF34BD310;                     // type:BOOL.0
	float                            _0x94720DEC;                     // type:FLOAT.0
	float                            Red;                             // type:FLOAT.0
	float                            Green;                           // type:FLOAT.0
	float                            Blue;                            // type:FLOAT.0
};

struct _0x204F06B0
{
	string                           fall;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB5CEC3A1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2ECD1FE2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x68341999;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB9809DB8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x250E703F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7933D5F9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE5C0F861;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA2687923;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFD13F9F1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x89E40979;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8E55F1B9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA122B08B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x685E7E6F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE932D09F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9AC7D1FF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x385A598F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF7A797EE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE2070C3E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFF33311F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE2A39ADB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0198131D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2D1F80BE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           sweaty;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0xABB7A133;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2052F775 : _0xBF9602D8
{
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2055FAC1
{
	array<struct _0x2DB4A6BE>        _0xA96FF6D5;                     // type:ARRAY.ATARRAY
};

struct _0x20696AC6
{
	float                            TimeToLiveMin;                   // type:FLOAT.0
	float                            TimeToLiveMax;                   // type:FLOAT.0
	float                            FacingValue;                     // type:FLOAT.0
	float                            IkValue;                         // type:FLOAT.0
};

struct _0x2073EFE1
{
	map<string, struct _0x425FA4A1>     _0x06290D70;                     // type:MAP.ATBINARYMAP
};

struct _0x20778ED1
{
	array<float>                     SpineStiffness;                  // type:ARRAY.ATARRAY
};

struct _0x207DB71D
{
	string                           VfxName;                         // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
	float                            Scale;                           // type:FLOAT.0
	uint                             Color;                           // type:UINT.1
	vec3V                            OffsetPosition;                  // type:VEC3V.0
	vec3V                            OffsetRotation;                  // type:VEC3V.0
};

struct _0x20836C0E
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x3B8D694B;                     // type:BOOL.0
	array<struct _0x7A55D0D8>        properties;                      // type:ARRAY.ATARRAY
};

struct _0x20867AE2 : CBaseSaveObject
{
	array<struct _0x3D36DEDA>        _0xFBA23202;                     // type:ARRAY.ATARRAY
};

struct _0x208A10C5
{
	array<struct _0x857A8370>        _0x9D3F7509;                     // type:ARRAY.ATARRAY
};

struct _0x209B042C
{
	uint                             groupId;                         // type:UINT.0
	uint                             floorId;                         // type:UINT.0
	uint                             numExitPortals;                  // type:UINT.0
	uint                             proxyNameHash;                   // type:UINT.0
	uint                             mapDataStoreNameHash;            // type:UINT.0
	float                            posX;                            // type:FLOAT.0
	float                            posY;                            // type:FLOAT.0
	float                            posZ;                            // type:FLOAT.0
	float                            quatX;                           // type:FLOAT.0
	float                            quatY;                           // type:FLOAT.0
	float                            quatZ;                           // type:FLOAT.0
	float                            quatW;                           // type:FLOAT.0
	float                            bboxMinX;                        // type:FLOAT.0
	float                            bboxMinY;                        // type:FLOAT.0
	float                            bboxMinZ;                        // type:FLOAT.0
	float                            bboxMaxX;                        // type:FLOAT.0
	float                            bboxMaxY;                        // type:FLOAT.0
	float                            bboxMaxZ;                        // type:FLOAT.0
	string                           proxyName;                       // type:STRING.MEMBER
};

struct _0x20BD1259 : uiSelectableFlowControlBehavior
{
	struct _0x4A7AD954               _0x1A1D9C3D;                     // type:STRUCT.STRUCTURE
	struct _0xE0CC4C41               _0xAB17CDB7;                     // type:STRUCT.STRUCTURE
};

struct _0x20C48CEA
{
	bool                             Enabled;                         // type:BOOL.0
	float                            X;                               // type:FLOAT.0
	float                            Y;                               // type:FLOAT.0
	float                            Z;                               // type:FLOAT.0
};

struct _0x20D4CE18 : _0x0A698250
{
	enum _0xF4439461                 ComparisonType;                  // type:ENUM.32BIT
	uint                             DefaultThreshold;                // type:UINT.0
	string                           DefaultHash;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultThresholdHash;            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xD4053778>        Ranges;                          // type:ARRAY.ATARRAY
};

struct _0x20D5DE83 : _0xF70F21F5
{
	int                              defaultValue;                    // type:INT.0
	int                              maxValue;                        // type:INT.0
	int                              minValue;                        // type:INT.0
	bool                             _0xBAC8E518;                     // type:BOOL.0
};

struct _0x20F1AE40 : uiScreenInputOperationBase
{
	string                           _0x652BF0BD;                     // type:STRING.CONST_STRING
	bool                             SetDefaultFocus;                 // type:BOOL.0
};

struct _0x20F87B1F : CSaveChallengeBase
{
	array<string>                    _0x027D3989;                     // type:ARRAY.ATARRAY
};

struct _0x210FB9DC
{
	float                            MudSoakStart;                    // type:FLOAT.0
	float                            MudSoakEnd;                      // type:FLOAT.0
	float                            MudSoakMin;                      // type:FLOAT.0
	float                            MudSoakMax;                      // type:FLOAT.0
	float                            MudSoakScale;                    // type:FLOAT.0
	float                            MudPuddleFillStart;              // type:FLOAT.0
	float                            MudPuddleFillEnd;                // type:FLOAT.0
	float                            MudPuddleFillMin;                // type:FLOAT.0
	float                            MudPuddleFillMax;                // type:FLOAT.0
	float                            MudPuddleScale;                  // type:FLOAT.0
	float                            MudPuddleRippleScale;            // type:FLOAT.0
	float                            MudMipBias;                      // type:FLOAT.0
	float                            MudPOMPuddleScale;               // type:FLOAT.0
	float                            MudHeightMapPuddleScale;         // type:FLOAT.0
	float                            MudPuddleSlopeRange;             // type:FLOAT.0
	float                            MudPuddleMaskScale;              // type:FLOAT.0
	float                            MudPuddleMaskBias;               // type:FLOAT.0
	float                            MudPuddleSpecInt;                // type:FLOAT.0
	float                            MudPuddleSpecExp;                // type:FLOAT.0
	float                            MudLocalDirtBlend;               // type:FLOAT.0
	float                            MudLocalPuddleBlend;             // type:FLOAT.0
	uint                             MudTintColor;                    // type:UINT.1
	uint                             MudPuddleTintColor;              // type:UINT.1
};

struct _0x2117D0CD : _0x1054F746
{
};

struct _0x211A54A8
{
	bool                             _0x422557A2;                     // type:BOOL.0
	float                            _0x331875E2;                     // type:FLOAT.0
	float                            _0x78B3884F;                     // type:FLOAT.0
	float                            _0x5A0F2C5F;                     // type:FLOAT.0
	float                            _0x6E4D6F80;                     // type:FLOAT.0
	float                            _0x0DE811E2;                     // type:FLOAT.0
	float                            _0x70FF4BBC;                     // type:FLOAT.0
	float                            _0xE78063A5;                     // type:FLOAT.0
	bool                             _0xC3C4E24E;                     // type:BOOL.0
	float                            _0xEA2C8BB9;                     // type:FLOAT.0
	float                            _0x7E3D9F7A;                     // type:FLOAT.0
	float                            _0xF2176449;                     // type:FLOAT.0
	float                            _0xEDBF7463;                     // type:FLOAT.0
	float                            _0x733488FA;                     // type:FLOAT.0
	float                            _0x4937CF71;                     // type:FLOAT.0
	float                            _0x3FAC6A14;                     // type:FLOAT.0
	float                            _0xA926838B;                     // type:FLOAT.0
	float                            _0xDE2DAF85;                     // type:FLOAT.0
	float                            _0x762DFFE6;                     // type:FLOAT.0
	float                            _0xDE2A6372;                     // type:FLOAT.0
	float                            _0x32D736D6;                     // type:FLOAT.0
	float                            _0x9318B308;                     // type:FLOAT.0
	float                            _0x88CF1801;                     // type:FLOAT.0
	float                            _0xCD4369D2;                     // type:FLOAT.0
	float                            _0x5A9C6E64;                     // type:FLOAT.0
	float                            _0xF9603B1C;                     // type:FLOAT.0
	float                            _0x5D0E5D54;                     // type:FLOAT.0
	float                            _0xFDD6F956;                     // type:FLOAT.0
	float                            _0x3F082750;                     // type:FLOAT.0
	float                            _0xE500CF9F;                     // type:FLOAT.0
	float                            _0x9FD508B7;                     // type:FLOAT.0
	float                            _0xCEE746E0;                     // type:FLOAT.0
	float                            _0x1E1B55A8;                     // type:FLOAT.0
	float                            _0x749EB0B9;                     // type:FLOAT.0
	float                            _0x604F529D;                     // type:FLOAT.0
	float                            _0xB5FAF77D;                     // type:FLOAT.0
	float                            _0xBA9D00CB;                     // type:FLOAT.0
	int                              _0x2E6FEEA0;                     // type:INT.0
	float                            _0xED3651AE;                     // type:FLOAT.0
	float                            _0x33608CAD;                     // type:FLOAT.0
	float                            _0x5BCB7B5E;                     // type:FLOAT.0
	float                            _0x641782AE;                     // type:FLOAT.0
	int                              _0x6A347892;                     // type:INT.0
	float                            _0x583A716C;                     // type:FLOAT.0
	bool                             _0xA36639E1;                     // type:BOOL.0
	bool                             _0xFB1A0C2F;                     // type:BOOL.0
	float                            _0x990A90DF;                     // type:FLOAT.0
	float                            _0xDC7B7C74;                     // type:FLOAT.0
	float                            _0x01721793;                     // type:FLOAT.0
	float                            _0xA09DBAE0;                     // type:FLOAT.0
	float                            _0x50B4EF09;                     // type:FLOAT.0
	float                            _0x5E264E3D;                     // type:FLOAT.0
	float                            _0xFDC3E377;                     // type:FLOAT.0
	float                            _0x8FB1874C;                     // type:FLOAT.0
	float                            _0x7352DF63;                     // type:FLOAT.0
	float                            _0x28A561FC;                     // type:FLOAT.0
	int                              _0xC1F7F58F;                     // type:INT.0
	float                            _0x6E1CC1F5;                     // type:FLOAT.0
	float                            _0x1EFEE66B;                     // type:FLOAT.0
	float                            _0x8DE2EA4A;                     // type:FLOAT.0
	float                            _0xE1E788FB;                     // type:FLOAT.0
	float                            _0x8EA84706;                     // type:FLOAT.0
	float                            _0x705FDBAC;                     // type:FLOAT.0
	float                            _0x47AFA541;                     // type:FLOAT.0
	int                              _0xF717CCA6;                     // type:INT.0
	float                            _0xCD4F780C;                     // type:FLOAT.0
	float                            _0x53AF01E9;                     // type:FLOAT.0
	float                            _0x309D967A;                     // type:FLOAT.0
	float                            _0x6A447A5A;                     // type:FLOAT.0
	float                            _0xBD05E177;                     // type:FLOAT.0
};

struct _0x211C3657 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eAnimBoneTag                boneTag;                         // type:ENUM.32BIT
};

struct _0x21289E1E : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            _0x1C008FD1;                     // type:FLOAT.0
	string                           _0xB8B04F18;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC1833043;                     // type:FLOAT.0
	string                           _0xB9C735A2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x41AC9C93;                     // type:FLOAT.0
	float                            _0x1C9EB44E;                     // type:FLOAT.0
	float                            _0x7AE02169;                     // type:FLOAT.0
};

struct _0x213C6C99 : _0x8A0DC979
{
	bool                             Enable;                          // type:BOOL.0
	bool                             _0xD1A27966;                     // type:BOOL.0
	bool                             _0xEA829F42;                     // type:BOOL.0
	bool                             _0x84FA88AF;                     // type:BOOL.0
	enum _0xB5E42A93                 _0x132E5C75;                     // type:ENUM.32BIT
	string                           _0xAEF57FD7;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x21434596 : _0x0A510DA9
{
};

struct _0x215D1F98 : _0x9FD1B354
{
	string                           InitialValue;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x217211D9 : _0xD9683171
{
};

struct _0x21A1A228 : _0xF395E9FA
{
	array<struct _0x9CC7287C>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0x21A357CE : _0x01843326
{
	bool                             value;                           // type:BOOL.0
};

struct _0x21A3FE39
{
	bool                             Enable;                          // type:BOOL.0
	float                            Distance;                        // type:FLOAT.0
};

struct _0x21B61153 : CTuning
{
	struct _0x9B18BB38               _0xD528ED5C;                     // type:STRUCT.STRUCTURE
	struct _0x5A940A17               _0x32C90A93;                     // type:STRUCT.STRUCTURE
	struct _0x5D1F3F85               _0xC13860C3;                     // type:STRUCT.STRUCTURE
	struct _0xA303C489               _0x7AE46908;                     // type:STRUCT.STRUCTURE
	struct _0x07582E60               _0xA866F498;                     // type:STRUCT.STRUCTURE
	struct _0xC34A33E2               _0x9D27AC80;                     // type:STRUCT.STRUCTURE
	struct _0x7A934F16               _0xC054DBFC;                     // type:STRUCT.STRUCTURE
	struct _0x6FAB3D77               _0xC54E3E35;                     // type:STRUCT.STRUCTURE
	struct _0x88A212D8               _0xC110D2C9;                     // type:STRUCT.STRUCTURE
};

struct _0x21B85929
{
	array<struct _0x13B76A25>        States;                          // type:ARRAY.ATARRAY
	bitset<enum _0x30094C2F>         Flags;                           // type:BITSET.32BIT
	uint                             TimeDuration;                    // type:UINT.0
	uint                             DurationDrain;                   // type:UINT.0
	uint                             MinDuration;                     // type:UINT.0
};

struct _0x21BC8880
{
	string                           displayName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33171E8D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           groupId;                         // type:STRING.ATNONFINALHASHSTRING
	string                           toolTip;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2676655A;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xB4C0E736;                     // type:BOOL.0
	short                            priority;                        // type:SHORT.0
};

struct _0x21CE8D15
{
	bool                             _0xB81BE59F;                     // type:BOOL.0
	bool                             _0x0B1FBE59;                     // type:BOOL.0
	float                            _0xD86068F3;                     // type:FLOAT.0
	float                            _0xD5307B3E;                     // type:FLOAT.0
	bool                             _0xE4350A65;                     // type:BOOL.0
	string                           _0x0BD0A830;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x21E2CF99 : _0xF70F21F5
{
	string                           value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x21FD2285
{
	bool                             _0xF075F823;                     // type:BOOL.0
	float                            _0xA1AB04A1;                     // type:FLOAT.0
	float                            _0xF6F6DA4F;                     // type:FLOAT.0
	float                            _0xFEDB2929;                     // type:FLOAT.0
	float                            _0x1DA58E38;                     // type:FLOAT.0
	float                            _0x115E3F83;                     // type:FLOAT.0
	float                            _0x4AB33303;                     // type:FLOAT.0
	float                            _0x4F140CF6;                     // type:FLOAT.0
	float                            _0xF8FBFAEE;                     // type:FLOAT.0
	float                            _0x2E330970;                     // type:FLOAT.0
	struct _0xCF3FD097               _0x851B7D56;                     // type:STRUCT.STRUCTURE
	struct _0xEE764C4E               _0xEE764C4E;                     // type:STRUCT.STRUCTURE
	float                            _0x0E5AC32D;                     // type:FLOAT.0
	float                            _0x4E35E72C;                     // type:FLOAT.0
	float                            _0x05E8FC0B;                     // type:FLOAT.0
	float                            _0x76626002;                     // type:FLOAT.0
	float                            _0x66032039;                     // type:FLOAT.0
	float                            _0xBFB22FFA;                     // type:FLOAT.0
	float                            _0xDC050577;                     // type:FLOAT.0
	string                           _0x6CF1A902;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE17051BC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xECC4A240;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xECCDDF4E;                     // type:UINT.0
	uint                             _0x6BFD917C;                     // type:UINT.0
	float                            _0xCFE46436;                     // type:FLOAT.0
	float                            _0x324C8BAB;                     // type:FLOAT.0
};

struct _0x2209B7E9
{
	int                              AttachBoneTag;                   // type:INT.0
	vec3                             _0x170516C5;                     // type:VECTOR3.0
	vec3                             _0xC3402E0E;                     // type:VECTOR3.0
	float                            Fov;                             // type:FLOAT.0
	vec3                             _0x4C18D144;                     // type:VECTOR3.0
	uint                             _0x5A0088CB;                     // type:UINT.0
	bool                             _0xE6DC582F;                     // type:BOOL.0
	bool                             _0xBC59E564;                     // type:BOOL.0
	bool                             _0xA9C015E8;                     // type:BOOL.0
	bool                             _0xD99F885C;                     // type:BOOL.0
	bool                             _0xE97B5095;                     // type:BOOL.0
};

struct _0x220EF492
{
	bitset<enum eMovementTransitionHelperFlags>     _0xA0B501A0;                     // type:BITSET.32BIT
	bitset<enum eMovementTransitionHelperFlags>     _0xB4DC78A1;                     // type:BITSET.32BIT
	float                                           _0xA952B7EB;                     // type:FLOAT.0
	float                                           _0x8951B407;                     // type:FLOAT.0
	float                                           _0x79A9EEA6;                     // type:FLOAT.0
	float                                           _0xB255B2D0;                     // type:FLOAT.0
	float                                           _0xFB5BAA98;                     // type:FLOAT.0
	float                                           _0x45B268C5;                     // type:FLOAT.0
	float                                           _0xF8C5D4AA;                     // type:FLOAT.0
	float                                           _0x796C96DE;                     // type:FLOAT.0
	float                                           _0x0320D1F4;                     // type:FLOAT.0
	float                                           _0xB3824932;                     // type:FLOAT.0
	float                                           _0x233C12DE;                     // type:FLOAT.0
	float                                           _0x1FB35BDB;                     // type:FLOAT.0
	bool                                            _0x2083783F;                     // type:BOOL.0
	bool                                            _0xB70A7F26;                     // type:BOOL.0
	string                                          _0x623F565A;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x5917FD3A;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x08F02858;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x7EE578FE;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x4E1FDA64;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x90AC8D6B;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x6F7609CD;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x2C2CCC65;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xF701F7B5                              _0x9F77EDED;                     // type:STRUCT.STRUCTURE
};

struct _0x2218567F
{
	string                           _0x50E19141;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x791ABF68;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7CDD24E2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6D183AA0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x40DA83D9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD3A22CDD;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xABA9FACE;                     // type:FLOAT.0
};

struct _0x22214645
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x222CA523
{
	matrix34V                        data;                            // type:MAT34V.0
	int                              frame;                           // type:INT.0
};

struct _0x222CAA2C : CDynamicScenarioEntry
{
	vec2                             HeightLimits;                    // type:VECTOR2.0
	float                            _0x572AD22A;                     // type:FLOAT.0
};

struct _0x222DAE31 : uiBehaviorStyledStateBase
{
	array<struct _0x4A7AD954>        contexts;                        // type:ARRAY.ATARRAY
};

struct _0x222E43A6
{
	enum EmotionalState              Emotion;                         // type:ENUM.32BIT
	enum _0xE02F3066                 FacialMood;                      // type:ENUM.32BIT
	string                           LookSequencePreset;              // type:STRING.ATNONFINALHASHSTRING
	bool                             DisableFacing;                   // type:BOOL.0
	bool                             BlockGestures;                   // type:BOOL.0
	enum _0x5B27B358                 BreakoutSpeed;                   // type:ENUM.32BIT
	array<struct _0x97C6EC11>        MotivationOverloads;             // type:ARRAY.ATARRAY
};

struct _0x2232053F : CTuning
{
	struct _0xD1E7741F               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x224A5A64 : _0x3AB6499E
{
	float                            _0xA3F9B834;                     // type:FLOAT.0
	bool                             _0x503236C3;                     // type:BOOL.0
	bool                             _0xD453BE20;                     // type:BOOL.0
	enum _0x0100F80E                 _0x5FE740E9;                     // type:ENUM.32BIT
};

struct _0x226E795D
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x4E602AF5>        collectableItems;                // type:ARRAY.ATARRAY
};

struct _0x22712F56
{
	uint                             _0x24DE9F1E;                     // type:UINT.0
	uint                             _0x368BE3DB;                     // type:UINT.0
	int                              Mood;                            // type:INT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            _0x7894BB41;                     // type:FLOAT.0
};

struct _0x227902DE
{
	string                           modifierName;                    // type:STRING.ATNONFINALHASHSTRING
	float                            _0xB3FAB1CC;                     // type:FLOAT.0
};

struct _0x2283B2CB
{
	int                                 Version;                         // type:INT.0
	int                                 _0x5A560670;                     // type:INT.0
	string                              Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct rage__spdAABB                AABB;                            // type:STRUCT.STRUCTURE
	array<struct _0xDE5F1345>           _0xC2A6D653;                     // type:ARRAY.ATARRAY
	array<struct _0x06F101C3>           _0x32F07D8C;                     // type:ARRAY.ATARRAY
	struct _0xFA317D8F                  _0x8D99128D;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x4712787B>     _0x2E908CB7;                     // type:MAP.ATBINARYMAP
};

struct _0x228B1E39
{
	float                            _0x0950195C;                     // type:FLOAT.0
	float                            _0x04FE9B85;                     // type:FLOAT.0
	float                            _0x19FF4F14;                     // type:FLOAT.0
	float                            _0x92E5B4CC;                     // type:FLOAT.0
	float                            _0x983CFC66;                     // type:FLOAT.0
	float                            _0xC2EAC901;                     // type:FLOAT.0
	float                            _0x8E0457CA;                     // type:FLOAT.0
	float                            _0xF2A6191E;                     // type:FLOAT.0
	float                            _0xEAADB73E;                     // type:FLOAT.0
	float                            _0x35EAD78E;                     // type:FLOAT.0
	float                            _0x3487FB6D;                     // type:FLOAT.0
	float                            _0x4C9CA30A;                     // type:FLOAT.0
	float                            _0xBDCB2237;                     // type:FLOAT.0
	float                            _0x457A590B;                     // type:FLOAT.0
};

struct _0x22A0BD52 : _0x0C14BE3A
{
};

struct _0x22ADBECD : _0x2CC15C40
{
	enum _0xCEE4FD68                 Operation;                       // type:ENUM.32BIT
};

struct _0x22B199F9
{
};

struct _0x22C375A7 : uiScreenInputBehaviorBase
{
	bitset<enum eUIScreenOpTriggerFlags>     Flags;                           // type:BITSET.8BIT
};

struct _0x22F5AC82
{
	float                            _0x16CDEB2A;                     // type:FLOAT.0
	float                            _0x0327CAA3;                     // type:FLOAT.0
	float                            _0x127DCBE2;                     // type:FLOAT.0
	bool                             _0xA309A528;                     // type:BOOL.0
	bool                             _0xC553855B;                     // type:BOOL.0
	bool                             _0x0F277281;                     // type:BOOL.0
	float                            _0x33FA9D2C;                     // type:FLOAT.0
	float                            _0x77BD9E30;                     // type:FLOAT.0
	float                            _0x68318DF0;                     // type:FLOAT.0
	float                            _0x1EB5F703;                     // type:FLOAT.0
	float                            _0xA639C8FB;                     // type:FLOAT.0
	float                            _0x8C1C0270;                     // type:FLOAT.0
	int                              _0x4D0414F9;                     // type:INT.0
	struct _0x351E9485               _0xE162E637;                     // type:STRUCT.STRUCTURE
	struct _0x351E9485               _0x39FB25BA;                     // type:STRUCT.STRUCTURE
};

struct _0x22F6F286 : CTuning
{
	struct _0x41DC4EAA               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x23008166 : _0x906508CE
{
};

struct _0x23032C7B
{
	string                           Name;                            // type:STRING.ATFINALHASHSTRING
	struct rage__spdAABB             AABB;                            // type:STRUCT.STRUCTURE
};

struct _0x2316B014 : camBaseObjectMetadata
{
	float                            _0x59850E80;                     // type:FLOAT.0
	float                            _0x1C2EE544;                     // type:FLOAT.0
	float                            _0xCCB6BFE8;                     // type:FLOAT.0
	float                            CameraRelativeSideOffset;        // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
	bool                             _0x194E0F46;                     // type:BOOL.0
	bool                             _0xD6C0288B;                     // type:BOOL.0
	bool                             _0x0AB15F99;                     // type:BOOL.0
	bool                             _0x84ABA356;                     // type:BOOL.0
};

struct _0x231DC1B0 : _0xBC6A0384
{
};

struct _0x23232399 : _0x8A0DC979
{
	struct _0x3D93D240               Group;                           // type:STRUCT.STRUCTURE
};

struct _0x232D204E
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAE0DCC01;                     // type:STRING.ATSTRING
	string                           groupName;                       // type:STRING.ATSTRING
	string                           description;                     // type:STRING.ATSTRING
	enum _0x480F685B                 _0xE3C20F5D;                     // type:ENUM.32BIT
	enum _0x3B860DE2                 modType;                         // type:ENUM.32BIT
	float                            defaultValue;                    // type:FLOAT.0
	float                            minValue;                        // type:FLOAT.0
	float                            maxValue;                        // type:FLOAT.0
	float                            _0xFDA45309;                     // type:FLOAT.0
};

struct _0x233521F8 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x233DF2C7 : _0xAA28D7FA
{
	float                            _0x45DAF760;                     // type:FLOAT.0
	float                            _0x01BAF122;                     // type:FLOAT.0
	float                            StepDistance;                    // type:FLOAT.0
	string                           _0xE68B06B4;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2343D1B2 : _0x3AB6499E
{
	struct _0x8CE53393               DefaultSettings;                 // type:STRUCT.STRUCTURE
	struct _0x8CE53393               _0x52D66DCC;                     // type:STRUCT.STRUCTURE
	struct _0xC0AE68AA               _0xC11D1FD2;                     // type:STRUCT.STRUCTURE
	float                            _0x72660CED;                     // type:FLOAT.0
	float                            _0x1A131CA2;                     // type:FLOAT.0
};

struct _0x234676E3
{
	uint                             _0x16D0DD46;                     // type:UINT.0
	uint                             _0xDB316780;                     // type:UINT.0
	float                            _0x5530DC74;                     // type:FLOAT.0
	float                            _0xC9F7B472;                     // type:FLOAT.0
	float                            _0xB71F677B;                     // type:FLOAT.0
};

struct _0x234C3672 : _0x1054F746
{
};

struct _0x235B6093
{
	short                            minX;                            // type:SHORT.0
	short                            minY;                            // type:SHORT.0
	short                            maxX;                            // type:SHORT.0
	short                            maxY;                            // type:SHORT.0
	float                            fDampening;                      // type:FLOAT.0
};

struct _0x236607AF : uiEventDataBase
{
	string                           AppId;                           // type:STRING.ATNSHASHSTRING
	string                           _0x1E7EBC4C;                     // type:STRING.ATNSHASHSTRING
	string                           EntryPoint;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             Force;                           // type:BOOL.0
};

struct _0x236A2625 : _0x0A510DA9
{
	string                           AppID;                           // type:STRING.ATNSHASHSTRING
	string                           ActivityID;                      // type:STRING.ATNSHASHSTRING
};

struct _0x236BC097 : _0x8A0DC979
{
};

struct _0x237B8A3A
{
	bool                             _0xFAF7C8E1;                     // type:BOOL.0
	float                            _0xE518D0FA;                     // type:FLOAT.0
	float                            _0x75334804;                     // type:FLOAT.0
	float                            _0x52D5049C;                     // type:FLOAT.0
	float                            _0x60998D4B;                     // type:FLOAT.0
	float                            _0x4CD74955;                     // type:FLOAT.0
};

struct _0x238E27A7
{
	string                           MySpecies;                       // type:STRING.ATNONFINALHASHSTRING
	string                           TheirSpecies;                    // type:STRING.ATNONFINALHASHSTRING
	enum _0x244E919F                 FleeStyle;                       // type:ENUM.32BIT
};

struct _0x2395C18C
{
	bool                             enabled;                         // type:BOOL.0
	vec3                             position;                        // type:VECTOR3.0
	vec3                             rotation;                        // type:VECTOR3.0
	vec3                             scale;                           // type:VECTOR3.0
	vec3                             falloffScaleMin;                 // type:VECTOR3.0
	vec3                             falloffScaleMax;                 // type:VECTOR3.0
	float                            samplingOffsetStrength;          // type:FLOAT.0
	float                            falloffPower;                    // type:FLOAT.0
	float                            distance;                        // type:FLOAT.0
	int                              cellCountX;                      // type:INT.0
	int                              cellCountY;                      // type:INT.0
	int                              cellCountZ;                      // type:INT.0
	vec4                             clipPlane0;                      // type:VECTOR4.0
	vec4                             clipPlane1;                      // type:VECTOR4.0
	vec4                             clipPlane2;                      // type:VECTOR4.0
	vec4                             clipPlane3;                      // type:VECTOR4.0
	float                            clipPlaneBlend0;                 // type:FLOAT.0
	float                            clipPlaneBlend1;                 // type:FLOAT.0
	float                            clipPlaneBlend2;                 // type:FLOAT.0
	float                            clipPlaneBlend3;                 // type:FLOAT.0
	enum _0x03C709E7                 blendingMode;                    // type:ENUM.32BIT
	int                              layer;                           // type:INT.0
	int                              order;                           // type:INT.0
	bool                             natural;                         // type:BOOL.0
	bool                             attachedToDoor;                  // type:BOOL.0
	bool                             interior;                        // type:BOOL.0
	bool                             exterior;                        // type:BOOL.0
	bool                             vehicleInterior;                 // type:BOOL.0
	string                           sourceFolder;                    // type:STRING.ATNONFINALHASHSTRING
	uint64                           uuid;                            // type:UINT64.0
	uint                             iplHash;                         // type:UINT.0
};

struct _0x239608BB
{
	string                           PoolName;                        // type:STRING.CONST_STRING
	int                              PoolSize;                        // type:INT.0
};

struct _0x2399CB09
{
	int                              _0xCD4F68AA;                     // type:INT.0
	int                              _0x52EC73E6;                     // type:INT.0
};

struct _0x23D256ED
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xF8350C59                 Type;                            // type:ENUM.32BIT
};

struct _0x23D7A510 : CTuning
{
	float                            ChanceOfPedSeeingCarFromBehind;  // type:FLOAT.0
	float                            MinSpeedForAvoid;                // type:FLOAT.0
	float                            MinDistanceForAvoid;             // type:FLOAT.0
	float                            MaxSpeedForAvoid;                // type:FLOAT.0
	float                            MaxDistanceForAvoid;             // type:FLOAT.0
	float                            MinDistanceForAvoidDirected;     // type:FLOAT.0
	float                            MinSpeedForAvoidDirected;        // type:FLOAT.0
	float                            MaxDistanceForAvoidDirected;     // type:FLOAT.0
	float                            MaxSpeedForAvoidDirected;        // type:FLOAT.0
	float                            MaxAbsDotForAvoidDirected;       // type:FLOAT.0
	float                            MaxSpeedForBrace;                // type:FLOAT.0
	float                            MinSpeedForDive;                 // type:FLOAT.0
	float                            MinTimeToConsiderDangerousDriving; // type:FLOAT.0
	float                            MultiplierForDangerousDriving;   // type:FLOAT.0
	float                            MinDistanceToSideOnPavement;     // type:FLOAT.0
	float                            MaxDistanceToSideOnPavement;     // type:FLOAT.0
	float                            _0xAA0DE0C8;                     // type:FLOAT.0
	float                            _0xBDC01D8C;                     // type:FLOAT.0
	float                            _0xD01F64D3;                     // type:FLOAT.0
	float                            _0xFCBFD44B;                     // type:FLOAT.0
	float                            _0x4842D383;                     // type:FLOAT.0
	float                            _0x9E364B35;                     // type:FLOAT.0
	uint                             _0x1CFF4F96;                     // type:UINT.0
};

struct _0x23DAEDEE : uiHoverableBehavior
{
};

struct _0x23E56A24 : _0x2CC15C40
{
	enum _0xBDE72CD8                 Operation;                       // type:ENUM.32BIT
};

struct _0x23E61C78 : CTuning
{
	float                            _0x9952DAAA;                     // type:FLOAT.0
	float                            _0x44EA8F79;                     // type:FLOAT.0
	float                            _0xF3949AB6;                     // type:FLOAT.0
	float                            _0x7981ABE4;                     // type:FLOAT.0
	float                            _0xBD24690B;                     // type:FLOAT.0
};

struct _0x23ECA058
{
	uint                             SoundName;                       // type:UINT.0
};

struct _0x23F1A89B : CAICondition
{
};

struct _0x23F58839
{
	bool                             _0xFD8035E9;                     // type:BOOL.0
	float                            _0x3CCE2AC6;                     // type:FLOAT.0
	bool                             _0x5A8827E7;                     // type:BOOL.0
	float                            _0xE3492C6F;                     // type:FLOAT.0
	bool                             _0xFEA821B4;                     // type:BOOL.0
	float                            _0x3847C144;                     // type:FLOAT.0
	bool                             _0xDE3DE629;                     // type:BOOL.0
	float                            _0x14B1EEC3;                     // type:FLOAT.0
};

struct _0x240123D0
{
	array<struct _0x5614A6B0, 32>     _0xB11369FD;                     // type:ARRAY.ATFIXEDARRAY
	uint64                            _0xFA711393;                     // type:UINT64.0
};

struct _0x2411A3AB
{
	float                            IntensityMin;                    // type:FLOAT.0
	float                            IntensityMax;                    // type:FLOAT.0
	float                            IntensityMinClamp;               // type:FLOAT.0
	float                            WidthMin;                        // type:FLOAT.0
	float                            WidthMax;                        // type:FLOAT.0
	float                            WidthMinClamp;                   // type:FLOAT.0
	float                            _0x7F1AC942;                     // type:FLOAT.0
	float                            _0xD5813075;                     // type:FLOAT.0
	float                            _0x3C907E9A;                     // type:FLOAT.0
	float                            _0xFF22FC74;                     // type:FLOAT.0
	float                            _0xF1605231;                     // type:FLOAT.0
	float                            _0x70C45DA3;                     // type:FLOAT.0
	uint                             _0xDDF585EE;                     // type:UINT.0
	float                            _0xDDD733C0;                     // type:FLOAT.0
	float                            _0xBB094E2C;                     // type:FLOAT.0
	float                            _0x83C206BD;                     // type:FLOAT.0
	float                            _0xC016EBDE;                     // type:FLOAT.0
	float                            _0xF54F2575;                     // type:FLOAT.0
	float                            _0xC3A0DAB5;                     // type:FLOAT.0
	float                            IntensityFlickerMin;             // type:FLOAT.0
	float                            IntensityFlickerMax;             // type:FLOAT.0
	float                            IntensityFlickerFrequency;       // type:FLOAT.0
	float                            _0x148ABE65;                     // type:FLOAT.0
	float                            _0x54B8C7CC;                     // type:FLOAT.0
	float                            IntensityLevelDecayMin;          // type:FLOAT.0
	float                            IntensityLevelDecayMax;          // type:FLOAT.0
	float                            NoiseTexScale;                   // type:FLOAT.0
	float                            NoiseAmplitude;                  // type:FLOAT.0
	float                            _0x1B9F50C7;                     // type:FLOAT.0
	float                            _0x964728C3;                     // type:FLOAT.0
	uchar                            _0x45F21C63;                     // type:UCHAR.0
	float                            _0x1703E1FB;                     // type:FLOAT.0
	float                            _0xC8CBCD15;                     // type:FLOAT.0
	float                            _0x280C17D0;                     // type:FLOAT.0
	float                            _0x283705F2;                     // type:FLOAT.0
	float                            _0x7516254C;                     // type:FLOAT.0
	string                           _0x2205ED56;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFF116E03;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB489E0FA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4D3C8E86;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xBF2BD132               _0xB65BEB78;                     // type:STRUCT.STRUCTURE
	float                            OrbitDirXVariance;               // type:FLOAT.0
	float                            TargetRadius;                    // type:FLOAT.0
	float                            MaxDistanceForExposureReset;     // type:FLOAT.0
	uint                             FogColor;                        // type:UINT.1
	float                            MaxDistanceForBurst;             // type:FLOAT.0
	float                            BurstThresholdIntensity;         // type:FLOAT.0
	array<struct _0x5F9E4DD3>        variations;                      // type:ARRAY.ATARRAY
	struct _0x5649E726               _0x8CA9E5FC;                     // type:STRUCT.STRUCTURE
	struct _0x83A6D56C               CloudBurstCommonSettings;        // type:STRUCT.STRUCTURE
};

struct _0x2439CA20 : SaveChallengeGoalParamBase
{
	uint                             score;                           // type:UINT.0
	string                           _0x371C022C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x243B5E8B
{
	string                           Name;                            // type:STRING.CONST_STRING
	struct _0x81A5B004               Tuning;                          // type:STRUCT.STRUCTURE
};

struct _0x24749343 : _0x11AD3051
{
	string                           clipDictionaryName;              // type:STRING.ATNONFINALHASHSTRING
	string                           clipName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2481A03B
{
	map<string, struct _0xB82D6E86>     _0x77F672D8;                     // type:MAP.ATBINARYMAP
};

struct _0x2488B8F9
{
	struct CBaseReward               reward;                          // type:STRUCT.POINTER
	uint                             numGoalsComplete;                // type:UINT.0
};

struct _0x24CF7EA7
{
	int                              iAutoAimTimeBeforeTaggingInMS;   // type:INT.0
	int                              iAutoAimTimeBetweenTaggingInMS;  // type:INT.0
	int                              iAutoAimTimeBeforeShootingInMS;  // type:INT.0
};

struct _0x24E3AA6D
{
	vec3V                            AnchorPosition;                  // type:VEC3V.0
	array<vec3V>                     Positions;                       // type:ARRAY.ATARRAY
	array<uint>                      ClothIndices;                    // type:ARRAY.ATARRAY
	array<uint>                      RopeIndices;                     // type:ARRAY.ATARRAY
	int                              EdgeIndex;                       // type:INT.0
	float                            AnchorRadius;                    // type:FLOAT.0
	int                              SetIndex;                        // type:INT.0
	bool                             IsActive;                        // type:BOOL.0
	string                           OwnerName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClothPropName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           ClothSimName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x24EF24A7 : _0x252466D4
{
	enum _0x0100F80E                 _0x8B1C4B91;                     // type:ENUM.32BIT
	uint                             _0x4EA81099;                     // type:UINT.0
	enum _0x0100F80E                 _0xA5B0146A;                     // type:ENUM.32BIT
	uint                             _0xFE0CC017;                     // type:UINT.0
};

struct _0x24F1A27C : _0x8A0DC979
{
};

struct _0x24F4960C : CAICondition
{
};

struct _0x252466D4 : Simple
{
	float                            _0xBFC1B34C;                     // type:FLOAT.0
};

struct _0x252FF88A
{
	bool                             _0xC329527D;                     // type:BOOL.0
	struct _0x28CE2FBC               _0x7BDBD6BA;                     // type:STRUCT.STRUCTURE
	bool                             _0xF6EF2E97;                     // type:BOOL.0
	bool                             _0x2AF81D58;                     // type:BOOL.0
};

struct _0x253436DC : _0x0A510DA9
{
	int                              _0x014A9334;                     // type:INT.0
	bool                             _0x43DC0AC1;                     // type:BOOL.0
	enum _0xF4439461                 _0xF364B92E;                     // type:ENUM.32BIT
};

struct _0x25488A0E : _0x2F7DA38D
{
	struct _0xE19E0658               _0x2C935844;                     // type:STRUCT.STRUCTURE
};

struct _0x25559488 : _0xAE1C5728
{
};

struct _0x255DD174 : _0x1B26FDB1
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x255EEDF9 : _0x8DEEFEAD
{
};

struct _0x2584AC19 : CTuning
{
	struct _0xF4CF46A4               _0xBF4DFCBE;                     // type:STRUCT.STRUCTURE
	struct _0x433ECEF3               _0x576FD10A;                     // type:STRUCT.STRUCTURE
	struct _0xF8E21062               _0xE3BD36B0;                     // type:STRUCT.STRUCTURE
	struct _0x08A9FD28               _0x67DBE4CE;                     // type:STRUCT.STRUCTURE
	struct _0x47BD9996               _0xB7BDB3D4;                     // type:STRUCT.STRUCTURE
	struct _0x5F7333B1               _0xB0DA31D5;                     // type:STRUCT.STRUCTURE
	struct _0x47956A6D               _0xC8D145C9;                     // type:STRUCT.STRUCTURE
	struct _0x0B6B179D               _0x93EC46ED;                     // type:STRUCT.STRUCTURE
	struct _0x00392DE2               _0x673C9A54;                     // type:STRUCT.STRUCTURE
	struct _0xB3D3834F               _0x9835ED11;                     // type:STRUCT.STRUCTURE
	struct _0xEEF83038               _0x3D670185;                     // type:STRUCT.STRUCTURE
	struct _0x2A0C3B3A               _0xC6CEE1E7;                     // type:STRUCT.STRUCTURE
	struct _0x070D4D66               _0x737D624C;                     // type:STRUCT.STRUCTURE
	struct _0x11978CD8               _0x7BD79F85;                     // type:STRUCT.STRUCTURE
};

struct _0x2589088E : CTuning
{
	float                            _0x871121D5;                     // type:FLOAT.0
	float                            _0x16629C3F;                     // type:FLOAT.0
	float                            _0xDE4743A4;                     // type:FLOAT.0
	float                            _0x476342A2;                     // type:FLOAT.0
	float                            _0x5512A81D;                     // type:FLOAT.0
	float                            _0x495BA394;                     // type:FLOAT.0
	float                            _0x429F65BA;                     // type:FLOAT.0
	float                            _0x8C5DD26D;                     // type:FLOAT.0
	string                           _0x6329B203;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2591A6AE : _0x7EAFD12D
{
	float                            minAlpha;                        // type:FLOAT.0
	float                            fadeRate;                        // type:FLOAT.0
	float                            startDistance;                   // type:FLOAT.0
	bool                             edgeOnly;                        // type:BOOL.0
};

struct _0x25A4E268
{
	float                            minZoom;                         // type:FLOAT.0
	float                            maxZoom;                         // type:FLOAT.0
	float                            fadeLength;                      // type:FLOAT.0
	float                            maxZoomAlphaScalar;              // type:FLOAT.0
};

struct _0x25B101E2
{
	array<struct _0x11E82464>        Bones;                           // type:ARRAY.ATARRAY
	enum eAnimBoneTag                ConstraintBoneTag;               // type:ENUM.32BIT
};

struct _0x25BAFB04 : _0x489E5124
{
};

struct _0x25BC258A
{
	array<string>                    WeaponGroups;                    // type:ARRAY.ATARRAY
	array<string>                    WeaponTypes;                     // type:ARRAY.ATARRAY
};

struct _0x25CA9D69
{
	float                            _0x24F9DEA9;                     // type:FLOAT.0
	float                            _0x880B3E87;                     // type:FLOAT.0
	float                            _0xACED1424;                     // type:FLOAT.0
};

struct _0x25DDC7A9
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x25DDC7A9>        Groups;                          // type:ARRAY.ATARRAY
	array<struct _0xFBFED396>        Packs;                           // type:ARRAY.ATARRAY
};

struct _0x25F06F8F
{
	struct _0x988C66FF               _0x0804F5A6;                     // type:STRUCT.STRUCTURE
};

struct _0x25FC7B9F
{
	float                            _0x112E600B;                     // type:FLOAT.0
	float                            _0x2DC105C9;                     // type:FLOAT.0
	uint                             _0x8E8755FD;                     // type:UINT.0
	uint                             _0xB049FDE3;                     // type:UINT.0
	float                            _0x49DE3336;                     // type:FLOAT.0
	float                            _0x30BA19F7;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x7344566A;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x17633E51;                     // type:ENUM.32BIT
	struct _0x0181FF7C               Walk;                            // type:STRUCT.STRUCTURE
	struct _0x0181FF7C               Jog;                             // type:STRUCT.STRUCTURE
	struct _0x0181FF7C               Run;                             // type:STRUCT.STRUCTURE
	struct _0xE14F555E               _0x1007389D;                     // type:STRUCT.STRUCTURE
	struct _0xE14F555E               _0x544A4238;                     // type:STRUCT.STRUCTURE
	struct _0xE14F555E               _0x7BE042EE;                     // type:STRUCT.STRUCTURE
};

struct _0x260FF982
{
	map<string, struct _0x79F14140>     Styles;                          // type:MAP.ATBINARYMAP
};

struct _0x26184C72 : _0x8A0DC979
{
};

struct _0x261B1D55 : _0x7EAFD12D
{
	bool                             Leader;                          // type:BOOL.0
	string                           Group;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x26255952
{
	map<string, struct _0xE5EEA70B>     CustomEntryDataMap;              // type:MAP.ATBINARYMAP
};

struct _0x26267962 : _0x0A510DA9
{
};

struct _0x2628411E
{
	float                            _0x9A36FB55;                     // type:FLOAT.0
	float                            _0x98047602;                     // type:FLOAT.0
	float                            _0xC10D6317;                     // type:FLOAT.0
	float                            _0x75D818F2;                     // type:FLOAT.0
	float                            _0x1FA13F5B;                     // type:FLOAT.0
	float                            _0xE48D513E;                     // type:FLOAT.0
	float                            _0xBE3856A9;                     // type:FLOAT.0
	float                            _0xC40DB089;                     // type:FLOAT.0
	float                            _0xF8BFA729;                     // type:FLOAT.0
	float                            _0xBE925B6A;                     // type:FLOAT.0
	float                            _0x57D04399;                     // type:FLOAT.0
	float                            _0x25B6DE4F;                     // type:FLOAT.0
};

struct _0x263CA8E8 : _0x7F29A4A5
{
	struct _0x0A510DA9               Condition;                       // type:STRUCT.POINTER
	string                           Property;                        // type:STRING.ATNSHASHSTRING
};

struct _0x264532A7
{
	map<string, struct _0xB25EE510>     _0x5DFAD37A;                     // type:MAP.ATBINARYMAP
};

struct _0x26517DEE : _0x1054F746
{
};

struct _0x266CBDB1
{
	string                           _0x06EF9678;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD7ACF6B4;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x26700CA8 : _0x91140770
{
};

struct _0x267067D9
{
	struct _0x9AE8A3E3               Unlocked;                        // type:STRUCT.STRUCTURE
	struct _0x9AE8A3E3               Locked;                          // type:STRUCT.STRUCTURE
};

struct _0x267307F7
{
	vec3                             Pos;                             // type:VECTOR3.0
};

struct _0x26767A8B
{
	array<struct _0xA8202F7A>        ptxShaderInfos;                  // type:ARRAY.ATARRAY
};

struct _0x26A9ADCC : CAICondition
{
	enum _0x563FBCEA                 Animal;                          // type:ENUM.32BIT
};

struct _0x26B0ABCD
{
	uint                             TextureWidth;                    // type:UINT.0
	uint                             TextureHeight;                   // type:UINT.0
	uint                             NumTextures;                     // type:UINT.0
	uint                             MaxSlotHeight;                   // type:UINT.0
	uint                             SlotPadding;                     // type:UINT.0
	uint                             TexUpdWidth;                     // type:UINT.0
	uint                             TexUpdHeight;                    // type:UINT.0
	float                            MaxRasterScale;                  // type:FLOAT.0
	uint                             MaxVectorCacheSize;              // type:UINT.0
	float                            FauxItalicAngle;                 // type:FLOAT.0
	float                            FauxBoldRatio;                   // type:FLOAT.0
	float                            OutlineRatio;                    // type:FLOAT.0
	float                            ShadowQuality;                   // type:FLOAT.0
	bool                             UseAutoFit;                      // type:BOOL.0
	bool                             UseVectorOnFullCache;            // type:BOOL.0
	bool                             FenceWaitOnFullCache;            // type:BOOL.0
};

struct _0x26CDBBD4
{
	bool                             Enabled;                         // type:BOOL.0
	float                            ChancesWhenBuddyKilledWithScaryWeapon; // type:FLOAT.0
};

struct _0x26D9F1A8
{
	float                            _0x7D55409C;                     // type:FLOAT.0
	float                            _0x6704BE0B;                     // type:FLOAT.0
	float                            _0x2EBDB6A3;                     // type:FLOAT.0
	float                            _0x83478A22;                     // type:FLOAT.0
	float                            _0xAC2955FA;                     // type:FLOAT.0
	bool                             _0x347D322E;                     // type:BOOL.0
	uint                             _0x080FF118;                     // type:UINT.0
	uint                             _0x17882346;                     // type:UINT.0
	uint                             _0xE69733E2;                     // type:UINT.0
	float                            _0x603AB8FD;                     // type:FLOAT.0
	float                            _0x7C80B22A;                     // type:FLOAT.0
	uint                             _0x714A2448;                     // type:UINT.0
	float                            _0x8F16B888;                     // type:FLOAT.0
	string                           _0xAABBA0D2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5B1A695C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x26DAD862
{
	map<string, struct _0xBBB63A5E>     EventTypes;                      // type:MAP.ATBINARYMAP
};

struct _0x26E09A06 : CBaseSaveObject
{
	int64                            _0x4E2E7FD0;                     // type:INT64.0
	int64                            _0x3B0CD98D;                     // type:INT64.0
	int64                            _0x82C6FE13;                     // type:INT64.0
	int64                            _0x3901EA8A;                     // type:INT64.0
	bool                             equipped;                        // type:BOOL.0
};

struct _0x26F13B0B
{
	float                            MinDistanceToStart;              // type:FLOAT.0
	float                            MinDistanceToContinue;           // type:FLOAT.0
};

struct _0x26F35FEB
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x270CD4CE : _0x2F7DA38D
{
	struct _0xED16C5B0               _0xA19F1F71;                     // type:STRUCT.STRUCTURE
	int                              _0x8EF47EFF;                     // type:INT.0
};

struct _0x270FC240 : _0xE7263587
{
	string                           RawHintText;                     // type:STRING.CONST_STRING
	string                           HintText;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             HintVisible;                     // type:BOOL.0
};

struct _0x27380F7A : _0x1DE25F3B
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x273E4DE0 : _0x2F7DA38D
{
	bool                             _0x82DCC5F5;                     // type:BOOL.0
};

struct _0x274AE8AA : _0x7DE6531A
{
	enum _0xEC1E8350                 targetValue;                     // type:ENUM.32BIT
	enum _0xEC1E8350                 targetValueMin;                  // type:ENUM.32BIT
	enum _0xEC1E8350                 targetValueMax;                  // type:ENUM.32BIT
};

struct _0x274B18D9
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            fMinHeight;                      // type:FLOAT.0
	float                            _0x2B8ACC43;                     // type:FLOAT.0
	float                            _0xA0DF57C6;                     // type:FLOAT.0
	float                            _0x235ECE57;                     // type:FLOAT.0
	float                            _0xBC02DB53;                     // type:FLOAT.0
	float                            _0xA974B884;                     // type:FLOAT.0
	float                            _0x54CA7556;                     // type:FLOAT.0
	float                            _0x16EA66C3;                     // type:FLOAT.0
	float                            _0xEAD38CBC;                     // type:FLOAT.0
	float                            _0x1B878CCF;                     // type:FLOAT.0
	bool                             _0xA4BDE959;                     // type:BOOL.0
	bool                             _0xB33C6645;                     // type:BOOL.0
	bool                             _0x4C22E32E;                     // type:BOOL.0
	bool                             _0x256F5232;                     // type:BOOL.0
	enum _0x9AAD73F2                 _0x2576FEF4;                     // type:ENUM.32BIT
	string                           _0xDB614E6A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x274D7A77
{
	string                           _0x118AC788;                     // type:STRING.ATNONFINALHASHSTRING
	float                            probability;                     // type:FLOAT.0
	float                            scale;                           // type:FLOAT.0
	uint                             colTint;                         // type:UINT.1
};

struct _0x275C0161 : _0x2F7DA38D
{
	string                           _0x9AE694CF;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x275C775B : _0x4198511D
{
};

struct _0x277BA2DF : _0x8A0DC979
{
	enum _0x5B754EBB                 Context;                         // type:ENUM.32BIT
};

struct _0x277F8E80 : _0x29583E42
{
	float                            GlancingChance;                  // type:FLOAT.0
	float                            GlancingDamageModifier;          // type:FLOAT.0
};

struct _0x279B988A
{
	array<struct _0x239608BB>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0x27A262B3 : _0x39DE799A
{
	size_t                           Value;                           // type:SIZET.0
};

struct _0x27DFF31E
{
	array<uint, 4>                   Data;                            // type:ARRAY.MEMBER
};

struct _0x27FA6302
{
	bool                             _0x78302871;                     // type:BOOL.0
	bool                             _0x859D091B;                     // type:BOOL.0
	bool                             _0xA23460D6;                     // type:BOOL.0
	array<struct _0x8760E325>        Slots;                           // type:ARRAY.ATARRAY
	enum eQuickSelectProviderId      Id;                              // type:ENUM.32BIT
	string                           _0x8B004ED2;                     // type:STRING.ATNSHASHSTRING
	struct _0x0A510DA9               ActiveCondition;                 // type:STRUCT.POINTER
};

struct _0x28127D27 : _0x8A0DC979
{
};

struct _0x281EAA91
{
	enum _0x70E18FED                 Pelvis;                          // type:ENUM.32BIT
	enum _0x70E18FED                 _0x5BEB0238;                     // type:ENUM.32BIT
	enum _0x70E18FED                 _0x16AE77C0;                     // type:ENUM.32BIT
};

struct _0x284062CC : _0x81B3F73F
{
};

struct _0x28452708 : _0x187BE9B9
{
};

struct _0x2865BE3A : _0x906508CE
{
	bool                             _0xCB4861BA;                     // type:BOOL.0
	array<string>                    groups;                          // type:ARRAY.ATARRAY
	array<struct _0x232D204E>        _0x89F586A5;                     // type:ARRAY.ATARRAY
};

struct _0x28897BCD : uiEventDataBase
{
};

struct _0x28929464
{
	float                            fVaultSlopeDistToLine;           // type:FLOAT.0
	float                            fVaultSlopeCheckHeight;          // type:FLOAT.0
	float                            fVaultSlopeDotDiff;              // type:FLOAT.0
	float                            fVaultSlopeDist;                 // type:FLOAT.0
	float                            fVaultSlopeMinZ;                 // type:FLOAT.0
	float                            fSlopeTestMinZ;                  // type:FLOAT.0
	float                            fBaseCapsuleOffset;              // type:FLOAT.0
	float                            fDistanceToIntersectionZ;        // type:FLOAT.0
	float                            fDistToLineThreshold;            // type:FLOAT.0
};

struct _0x28CE2FBC
{
	float                            HomingMBR;                       // type:FLOAT.0
	float                            HomingMaxGroundHeightDifference; // type:FLOAT.0
	float                            HomingMaxGroundNormalAngle;      // type:FLOAT.0
	float                            HomingMinCurrentMBR;             // type:FLOAT.0
	float                            HomingMaxCurrentMBR;             // type:FLOAT.0
	float                            HomingMaxTargetVelocity;         // type:FLOAT.0
	float                            HomingMinDistance;               // type:FLOAT.0
	float                            HomingMaxDistance;               // type:FLOAT.0
	float                            HomingSlowdownDistance;          // type:FLOAT.0
};

struct _0x28E854D0
{
	bitset<enum _0x85C15257>            _0x0156FD0B;                     // type:BITSET.16BIT
	map<string, struct _0x4469EF46>     _0xA5A8E9E9;                     // type:MAP.ATBINARYMAP
};

struct _0x29038A89
{
	string                              _0x5FC45379;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0xD9660A3B>     _0x820CED20;                     // type:MAP.ATBINARYMAP
};

struct _0x290B7022 : camBaseObjectMetadata
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	uint                             _0xF0A87638;                     // type:UINT.0
};

struct _0x290D962A
{
	string                           BaseSearchProfile;               // type:STRING.ATNONFINALHASHSTRING
	string                           AdvanceSearchProfile;            // type:STRING.ATNONFINALHASHSTRING
	string                           MountedSearchProfile;            // type:STRING.ATNONFINALHASHSTRING
	string                           BaseUsageProfile;                // type:STRING.ATNONFINALHASHSTRING
	string                           AdvanceUsageProfile;             // type:STRING.ATNONFINALHASHSTRING
	string                           MountedUsageProfile;             // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB486663A>        Distributions;                   // type:ARRAY.ATARRAY
};

struct _0x291A04C7
{
	float                            Weight;                          // type:FLOAT.0
	array<struct _0x41953064>        Weights;                         // type:ARRAY.ATARRAY
};

struct _0x2920108A
{
	map<string, array<array<enum _0x5705A365>>>     Actions;                         // type:MAP.ATMAP
};

struct _0x29323BD0
{
	string                           ID;                              // type:STRING.ATNONFINALHASHSTRING
	struct _0xAB76836B               Converter;                       // type:STRUCT.POINTER
};

struct _0x29583E42
{
	struct _0xF5A13AF4               RegionData;                      // type:STRUCT.POINTER
	enum eAnimBoneTag                BoneTagStart;                    // type:ENUM.32BIT
	enum eAnimBoneTag                BoneTagEnd;                      // type:ENUM.32BIT
	vec3                             BoneOffsetStart;                 // type:VECTOR3.0
	vec3                             BoneOffsetEnd;                   // type:VECTOR3.0
	bool                             UseDamageFloor;                  // type:BOOL.0
	float                            DamageFloorPercent;              // type:FLOAT.0
	float                            BleedoutChanceIfEnabled;         // type:FLOAT.0
	float                            AlreadyWoundedModifier;          // type:FLOAT.0
	bitset<enum _0xA63400A4>         DamageInfoFlags;                 // type:BITSET.8BIT
	string                           DamageModifier;                  // type:STRING.ATNONFINALHASHSTRING
	string                           BleedoutType;                    // type:STRING.ATNONFINALHASHSTRING
	enum _0x97237B76                 CleanlinessRegion;               // type:ENUM.32BIT
	bool                             RenderRegion;                    // type:BOOL.0
	array<string>                    IgnoreRegionForWeapons;          // type:ARRAY.ATARRAY
};

struct _0x297579E3
{
	array<struct _0xE991BB13>        _0x24E9ED3A;                     // type:ARRAY.ATARRAY
};

struct _0x2977CE63
{
	uint                             idx;                             // type:UINT.0
	string                           name;                            // type:STRING.ATSTRING
	struct _0x6A74D413               _0xB74D2F4D;                     // type:STRUCT.STRUCTURE
	struct _0x6A74D413               _0x480A5538;                     // type:STRUCT.STRUCTURE
	struct _0x6A74D413               _0xDCEDBC82;                     // type:STRUCT.STRUCTURE
	struct _0x6A74D413               _0x30585E95;                     // type:STRUCT.STRUCTURE
};

struct _0x2978CACC : _0x9D9BBB81
{
};

struct _0x298FC9A9 : CTuning
{
	float                            SphereTestRadiusForDeadWaterSettle; // type:FLOAT.0
};

struct _0x29A23C7A
{
	string                           _0x0E3AF8FB;                     // type:STRING.ATNONFINALHASHSTRING
	uchar                            _0x07E33620;                     // type:UCHAR.0
};

struct _0x29B06C24 : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct _0x29B234D9
{
	string                           Type;                            // type:STRING.ATNONFINALHASHSTRING
	ushort                           MinDistance;                     // type:USHORT.0
	ushort                           MaxDistance;                     // type:USHORT.0
	short                            MaxLOD;                          // type:SHORT.0
};

struct _0x29BC8F35 : _0xDD140D06
{
	uint                             _0x0C3DE641;                     // type:UINT.0
};

struct _0x29C82B51 : _0x0A510DA9
{
	enum _0x15247004                 Property;                        // type:ENUM.32BIT
};

struct _0x29F70D11 : uiEventDataBase
{
};

struct _0x29F72AEA : _0x2F7DA38D
{
	string                           mood;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x29FF9F74 : StateUIObjectSimpleSceneHostBase
{
	string                           SceneName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           CycledSceneId;                   // type:STRING.ATNONFINALHASHSTRING
	int                              _0xBF181B87;                     // type:INT.0
};

struct _0x2A0C3B3A
{
	uint                             _0xA0B481FB;                     // type:UINT.0
	uint                             _0x38200C43;                     // type:UINT.0
	uint                             _0x493B956F;                     // type:UINT.0
};

struct _0x2A17176E : _0x74EB5104
{
};

struct _0x2A497FC2 : CTuning
{
	struct _0xF9EE94ED               _0x3D670185;                     // type:STRUCT.STRUCTURE
	struct _0xB14EDCCA               _0xEE801A8F;                     // type:STRUCT.STRUCTURE
	struct _0xB14EDCCA               _0xCB018AB7;                     // type:STRUCT.STRUCTURE
	struct _0x25FC7B9F               _0x499521E2;                     // type:STRUCT.STRUCTURE
	struct _0x9F1824AA               _0x673C9A54;                     // type:STRUCT.STRUCTURE
	struct _0x681D6FA3               _0xCDF4474D;                     // type:STRUCT.STRUCTURE
	struct _0x3D07B2DF               Sprint;                          // type:STRUCT.STRUCTURE
	struct _0x237B8A3A               _0xB06783DE;                     // type:STRUCT.STRUCTURE
	struct _0x60E277D1               _0x40503F8B;                     // type:STRUCT.STRUCTURE
	struct _0xD1C11D0D               _0xCE68A9BE;                     // type:STRUCT.STRUCTURE
	struct _0x496960B7               _0x4E2FD851;                     // type:STRUCT.STRUCTURE
	struct _0x540F7701               _0xED4EA21E;                     // type:STRUCT.STRUCTURE
	enum _0x6BCA108F                 _0xC6A98B30;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x3FC04F18;                     // type:ENUM.32BIT
	uint                             _0xA3DBEA7F;                     // type:UINT.0
	uint                             _0x8967B7F1;                     // type:UINT.0
	uint                             _0x97323680;                     // type:UINT.0
	uint                             _0x4D326406;                     // type:UINT.0
	uint                             _0xC88472A5;                     // type:UINT.0
	uint                             _0x6965EEBF;                     // type:UINT.0
	float                            _0xA11A4656;                     // type:FLOAT.0
	float                            _0x3F1B13CB;                     // type:FLOAT.2
};

struct _0x2A52AEB3 : SavegameInventoryItem
{
	uint                             WearStatusHash;                  // type:UINT.0
};

struct _0x2A5FDF13 : _0xE4ADC2EA
{
};

struct _0x2A60605A
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	int                              Id;                              // type:INT.0
};

struct _0x2A73148F
{
	map<string, struct _0x5A20FAD3>     _0xB4A558A9;                     // type:MAP.ATBINARYMAP
};

struct _0x2A737CC3
{
	int                              x;                               // type:INT.0
	int                              y;                               // type:INT.0
};

struct _0x2A7588BA
{
	bool                             _0xA3C37A66;                     // type:BOOL.0
	string                           VersionNumber;                   // type:STRING.MEMBER
	int                              _0x398882A9;                     // type:INT.0
	int                              _0x6130D24B;                     // type:INT.0
};

struct _0x2A809337
{
	float                            _0xF6AB8AAD;                     // type:FLOAT.0
	int                              _0x3E5D8EB3;                     // type:INT.0
	float                            _0x6AC39FDB;                     // type:FLOAT.0
};

struct _0x2A85743E : _0x6002A167
{
};

struct _0x2AA6E518
{
	string                           _0x0484B0AB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           spoutBoneName;                   // type:STRING.ATSTRING
	array<struct _0x3AA0A99B>        fluidComponents;                 // type:ARRAY.ATARRAY
	float                            spoutSize;                       // type:FLOAT.0
};

struct _0x2ABAF4E0
{
	float                            _0x1E0C1CCC;                     // type:FLOAT.0
	float                            _0x3FBB7B2A;                     // type:FLOAT.0
	float                            _0xB748DBA9;                     // type:FLOAT.0
	float                            _0x4B2A8C26;                     // type:FLOAT.0
	float                            _0xC5B85CA3;                     // type:FLOAT.0
	float                            _0x178CD4BF;                     // type:FLOAT.0
	float                            _0xC93587E5;                     // type:FLOAT.0
	float                            _0x44EC764D;                     // type:FLOAT.0
	float                            _0x8D78E6D7;                     // type:FLOAT.0
	bool                             _0x307941B3;                     // type:BOOL.0
	bool                             _0xD150C6A6;                     // type:BOOL.0
};

struct _0x2AEABA03 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x2B015DDB : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
	float                            AmbientEventLifetime;            // type:FLOAT.0
	float                            MinTimeForAmbientReaction;       // type:FLOAT.0
	float                            MaxTimeForAmbientReaction;       // type:FLOAT.0
	float                            _0xAD8D36E9;                     // type:FLOAT.0
	float                            _0x87959E66;                     // type:FLOAT.0
	float                            _0xC55F6997;                     // type:FLOAT.0
	float                            _0xE367B6EA;                     // type:FLOAT.0
	float                            _0xAD355B88;                     // type:FLOAT.0
	float                            _0x1D76CD78;                     // type:FLOAT.0
	float                            _0x77D5229E;                     // type:FLOAT.0
	float                            _0x96E2C89E;                     // type:FLOAT.0
	float                            _0x2CD1DEB7;                     // type:FLOAT.0
	float                            _0xD4F50463;                     // type:FLOAT.0
	float                            _0xF7115BD4;                     // type:FLOAT.0
	float                            _0x2825CB6F;                     // type:FLOAT.0
	enum AmbientEventType            AmbientEventType;                // type:ENUM.32BIT
};

struct _0x2B296061 : CTuning
{
	float                            _0x54DB9CFD;                     // type:FLOAT.0
	float                            _0xD8FD4540;                     // type:FLOAT.0
	float                            _0x260612E7;                     // type:FLOAT.0
	float                            _0x35714BEE;                     // type:FLOAT.0
	float                            _0x0561FF22;                     // type:FLOAT.0
	float                            MaxAngle;                        // type:FLOAT.0
	bool                             _0x8DAA7482;                     // type:BOOL.0
	bool                             _0x5AF04926;                     // type:BOOL.0
	bool                             _0xE931849D;                     // type:BOOL.0
	bool                             _0x4BECB748;                     // type:BOOL.0
};

struct _0x2B2A5213 : _0xBA4BE0CB
{
};

struct _0x2B3D007D
{
	array<ushort>                    Edges;                           // type:ARRAY.ATARRAY
};

struct _0x2B40ABA9 : uiSelectableBehaviorBase
{
};

struct _0x2B434FBF : _0x2F7DA38D
{
	float                            intensity;                       // type:FLOAT.0
};

struct _0x2B496E53
{
	int                              MaxDescriptionLength;            // type:INT.0
	int                              MaxNumDescriptions;              // type:INT.0
	int                              SizeOfDescriptionBuffer;         // type:INT.0
};

struct _0x2B79B4C9
{
};

struct _0x2B7A9AFB
{
	enum _0x19D7A2A7                 Type;                            // type:ENUM.32BIT
	vec3V                            Position;                        // type:VEC3V.0
	vec3V                            Orientation;                     // type:VEC3V.0
	vec3V                            Scale;                           // type:VEC3V.0
};

struct _0x2B9E77F8 : _0xAB76836B
{
	struct _0x69031EA5               Options;                         // type:STRUCT.STRUCTURE
};

struct _0x2B9F834A
{
	array<struct _0xD5C04C2B>        DispatchPedGroups;               // type:ARRAY.ATARRAY
	array<struct _0xD5C04C2B>        RandomDispatchPedGroups;         // type:ARRAY.ATARRAY
	struct CAICondition              GreedyAcquireCondition;          // type:STRUCT.POINTER
};

struct _0x2BA61B73 : _0x184818A1
{
	struct _0xCE064FC1               _0x1EAAFCA2;                     // type:STRUCT.STRUCTURE
};

struct _0x2BACE241
{
	float                            ConstraintWeight;                // type:FLOAT.0
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2BCDB232
{
	string                           PedSet;                          // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2C00042D : _0xA38642CA
{
};

struct _0x2C0B64BD : UIBehavior
{
	float                            _0x45CF62C7;                     // type:FLOAT.0
	string                           Color;                           // type:STRING.ATFINALHASHSTRING
};

struct _0x2C126145
{
	map<string, struct _0x963D369C>     _0x41CD0470;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xA9519E08>     _0x3A667459;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x5294B221>     _0x74630A3F;                     // type:MAP.ATBINARYMAP
};

struct _0x2C13A1BA
{
	float                            RadiusMin;                       // type:FLOAT.0
	float                            RadiusMax;                       // type:FLOAT.0
	struct _0xBF2BD132               RadiusPerAngleKF;                // type:STRUCT.STRUCTURE
};

struct _0x2C1BBB1F
{
	string                           Name;                            // type:STRING.POINTER
	string                           EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	string                           EmotionalPresetNonCombat;        // type:STRING.ATNONFINALHASHSTRING
	string                           FiringPatternOverride;           // type:STRING.ATNONFINALHASHSTRING
	struct void                      AimLogic;                        // type:STRUCT.EXTERNAL_NAMED
	struct _0xBD9AB8DE               SpeedController;                 // type:STRUCT.POINTER
	bitset<enum _0x010428B5>         FlagsOn;                         // type:BITSET.32BIT
	bitset<enum _0x010428B5>         FlagsOff;                        // type:BITSET.32BIT
	struct _0x290D962A               TacticalAnalysisSettings;        // type:STRUCT.STRUCTURE
	struct _0x11CCD97C               AimHelperSettings;               // type:STRUCT.STRUCTURE
	struct _0x65DF5F57               SpreadSettings;                  // type:STRUCT.STRUCTURE
	enum _0xB69160F5                 AttackRange;                     // type:ENUM.32BIT
	enum _0xD1AD9066                 RelativeAttackRange;             // type:ENUM.32BIT
	enum _0xE078876B                 FlankLimit;                      // type:ENUM.32BIT
	enum _0xE97E4C7D                 CombatSpeed;                     // type:ENUM.32BIT
	enum _0xE97E4C7D                 CombatSpeedOutOfAttackRange;     // type:ENUM.32BIT
	enum _0x4F456B61                 CombatMovement;                  // type:ENUM.32BIT
	enum _0x795864BB                 TransportAimMode;                // type:ENUM.32BIT
	enum _0x15FD84AE                 PreferAttackMode;                // type:ENUM.32BIT
	enum _0xD3574A14                 CombatStartAimIntro;             // type:ENUM.32BIT
	int                              MaxChasers;                      // type:INT.0
	float                            SwitchCoverThreshold;            // type:FLOAT.0
	float                            AttackRangeMin;                  // type:FLOAT.0
	float                            AttackRangeMax;                  // type:FLOAT.0
	float                            ChaseStartModifier;              // type:FLOAT.0
	float                            ChaseStopModifier;               // type:FLOAT.0
	float                            ShootRateModifier;               // type:FLOAT.0
	float                            BurstRateModifier;               // type:FLOAT.0
	float                            BlindFireModifier;               // type:FLOAT.0
	float                            AccuracyMultiplier;              // type:FLOAT.0
	float                            _0xB1462E0F;                     // type:FLOAT.0
	float                            RepositionTime;                  // type:FLOAT.0
};

struct _0x2C2A81C8
{
	map<string, struct _0xC4678F57>     _0x06290D70;                     // type:MAP.ATBINARYMAP
};

struct _0x2C417B5D
{
	bitset<enum _0x7D7578F3>                      _0x9B0A00F2;                     // type:BITSET.16BIT
	bitset<enum _0xCCEDDF91>                      _0xC5D72606;                     // type:BITSET.16BIT
	bool                                          _0x1CB0728E;                     // type:BOOL.0
	string                                        _0xDD205C7A;                     // type:STRING.ATNONFINALHASHSTRING
	int                                           _0x6C64A9C4;                     // type:INT.0
	int                                           _0x1322B7A7;                     // type:INT.0
	map<enum _0xCCEDDF91, struct _0x8CA49813>     _0xB31DF397;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x86A5EAEE>               _0x0E9CC343;                     // type:MAP.ATBINARYMAP
};

struct _0x2C4AD24B : _0x18A32B00
{
};

struct _0x2C4EC76A : _0x1FB1BCEA
{
};

struct _0x2C54C8B9 : _0x906508CE
{
};

struct _0x2C5845B9 : _0x3AB6499E
{
	struct _0xB5A7E7DA               DefaultSettings;                 // type:STRUCT.STRUCTURE
	struct _0xB5A7E7DA               _0xA1A620A4;                     // type:STRUCT.STRUCTURE
	struct _0xB5A7E7DA               _0xF3184E9A;                     // type:STRUCT.STRUCTURE
	struct _0xB5A7E7DA               _0xD05C5C65;                     // type:STRUCT.STRUCTURE
	map<string, string>              _0x29906C63;                     // type:MAP.ATBINARYMAP
	array<string>                    _0xD5815EC6;                     // type:ARRAY.ATARRAY
	float                            _0x30477D64;                     // type:FLOAT.0
	float                            _0x5576A6BD;                     // type:FLOAT.0
	uint                             _0x800A4163;                     // type:UINT.0
};

struct _0x2C58BE21 : _0x2F7DA38D
{
	uint                             _0x1EE31080;                     // type:UINT.0
	uint                             _0xED863DAF;                     // type:UINT.0
};

struct _0x2C847E78 : _0x84216D89
{
};

struct _0x2CA9A5F5 : _0x1054F746
{
};

struct _0x2CBFA0D6
{
	float                            Probability;                     // type:FLOAT.0
	bool                             IsDisabled;                      // type:BOOL.0
	uint                             _0xD45E8F10;                     // type:UINT.0
};

struct _0x2CC15C40 : _0x0F5161EB
{
	string                           _0x643916D9;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 _0x9F894189;                     // type:ENUM.32BIT
	string                           _0x5058BF1A;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 _0x16061F02;                     // type:ENUM.32BIT
};

struct _0x2CD56328
{
	vec3V                            RelaxedAimingLongArmsOffset;     // type:VEC3V.0
	vec3V                            RelaxedAimingShortArmsOffset;    // type:VEC3V.0
	float                            IndependentOffsetInterpRate;     // type:FLOAT.0
	float                            FastOffsetInterpRate;            // type:FLOAT.0
	float                            MediumOffsetInterpRate;          // type:FLOAT.0
	float                            SlowOffsetInterpRate;            // type:FLOAT.0
	float                            CoverOffsetInterpRate;           // type:FLOAT.0
	array<struct _0x64A62286>        StrafeShortArmsOffsets;          // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeDualRightOffsets;          // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeDualLeftOffsets;           // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeLongArmsOffsets;           // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeFishingRodOffsets;         // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeBowOffsets;                // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeBowDrawnOffsets;           // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeBowCrouchedOffsets;        // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        StrafeBowCrouchedDrawnOffsets;   // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        DriveByLongArmsOffsets;          // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        DriveByShortArmsOffsets;         // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        DriveByDualRightOffsets;         // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        DriveByDualLeftOffsets;          // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CoverShortArmsOffsets;           // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CoverDualRightOffsets;           // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CoverDualLeftOffsets;            // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CoverLongArmsOffsets;            // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        RunAndGunLongArmOffsets;         // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CombatDiveShortArmsOffsets;      // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CombatDiveDualRightOffsets;      // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CombatDiveDualLeftOffsets;       // type:ARRAY.ATARRAY
	array<struct _0x64A62286>        CombatDiveLongArmsOffsets;       // type:ARRAY.ATARRAY
};

struct _0x2CDB84B2
{
	float                            _0x5B5D14DF;                     // type:FLOAT.0
	float                            _0xEB276D01;                     // type:FLOAT.0
	float                            _0x23149522;                     // type:FLOAT.0
	float                            _0x97B3426A;                     // type:FLOAT.0
	float                            _0xC64EB242;                     // type:FLOAT.0
	int                              MaxDepth;                        // type:INT.0
};

struct _0x2CDD99AB : CAICondition
{
	array<struct CAICondition>       Conditions;                      // type:ARRAY.ATARRAY
};

struct _0x2CE350B0 : _0xCDF97B9D
{
};

struct _0x2CEC6053
{
	array<struct _0x00FE98FF>        _0x6722300E;                     // type:ARRAY.ATARRAY
};

struct _0x2D2BDC99
{
	uchar                            Track;                           // type:UCHAR.0
	enum eAnimBoneTag                Id;                              // type:ENUM.32BIT
	uchar                            WeightIndex;                     // type:UCHAR.0
};

struct _0x2D2CEC49 : _0xAE436053
{
	struct rage__spdAABB             AABB;                            // type:STRUCT.STRUCTURE
	vec3V                            Rotation;                        // type:VEC3V.0
};

struct _0x2D47A95E
{
	float                            fEdgeDiscardAllHeight;           // type:FLOAT.0
	float                            fEdgeDiscardAllHeightStairEdge;  // type:FLOAT.0
	float                            fMaxStairEdge;                   // type:FLOAT.0
	float                            fIntersectionTolerance;          // type:FLOAT.0
	uint                             uOffStairsAutoVaultCooldown;     // type:UINT.0
	uint                             uOffStairsAutoVaultDelay;        // type:UINT.0
};

struct _0x2D51D72B
{
	bool                             Enable;                          // type:BOOL.0
	float                            Mag;                             // type:FLOAT.0
	bool                             ScaleWithVelocity;               // type:BOOL.0
	float                            VelocityMin;                     // type:FLOAT.0
	float                            VelocityMax;                     // type:FLOAT.0
	float                            ForceAtMinVelocity;              // type:FLOAT.0
	float                            ForceAtMaxVelocity;              // type:FLOAT.0
	bool                             ClampImpulse;                    // type:BOOL.0
	float                            MinImpulse;                      // type:FLOAT.0
	float                            MaxImpulse;                      // type:FLOAT.0
	int                              Delay;                           // type:INT.0
	int                              Duration;                        // type:INT.0
	bool                             ScaleWithUpright;                // type:BOOL.0
};

struct _0x2D57BE23
{
};

struct _0x2D66239C
{
	bitset<enum _0x75F7A4EB>         Override;                        // type:BITSET.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x2D71ECB1
{
	string                           Tag;                             // type:STRING.ATNONFINALHASHSTRING
	string                           Event;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2D7D6B90 : CTuning
{
	string                           _0xB2081720;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x272857DA;                     // type:FLOAT.0
	float                            _0x181990B8;                     // type:FLOAT.0
	float                            _0xF805CFF9;                     // type:FLOAT.0
	float                            _0x26DEE822;                     // type:FLOAT.0
};

struct _0x2D84C271 : _0xAD9BC2D3
{
};

struct _0x2D87CCA0
{
	struct _0xD57B6AB5               _0xF3A56C9A;                     // type:STRUCT.STRUCTURE
	struct _0xD57B6AB5               _0x843AAB6F;                     // type:STRUCT.STRUCTURE
};

struct _0x2D8896BE
{
	float                            Offset;                          // type:FLOAT.0
	float                            _0x710FF8DC;                     // type:FLOAT.0
};

struct _0x2DA42B11
{
	bool                             _0xD0E79479;                     // type:BOOL.0
	bool                             _0x3D55E11E;                     // type:BOOL.0
	bool                             _0xB81C94BC;                     // type:BOOL.0
	bool                             _0x9665C94B;                     // type:BOOL.0
	bool                             _0xBC7CF9D9;                     // type:BOOL.0
	bool                             _0x2854ECD8;                     // type:BOOL.0
	bool                             _0x703DCE9B;                     // type:BOOL.0
	bool                             _0xCE3C1230;                     // type:BOOL.0
	bool                             _0x2269759B;                     // type:BOOL.0
	bool                             _0xB1E676B5;                     // type:BOOL.0
	bool                             _0xC9AFAAED;                     // type:BOOL.0
	bool                             _0xB04220FC;                     // type:BOOL.0
	bool                             _0x75DC6EF6;                     // type:BOOL.0
	bool                             _0x13533D05;                     // type:BOOL.0
	bool                             _0x035888F8;                     // type:BOOL.0
	bool                             _0x534C1957;                     // type:BOOL.0
	bool                             _0xB9ED7FB6;                     // type:BOOL.0
	bool                             _0xA1F8B098;                     // type:BOOL.0
	bool                             _0x4DD5EF0D;                     // type:BOOL.0
	bool                             _0xEA2D1D9D;                     // type:BOOL.0
	bool                             _0xCB4779F9;                     // type:BOOL.0
	bool                             _0x063DB982;                     // type:BOOL.0
	bool                             _0x0E2DDAC5;                     // type:BOOL.0
	bool                             _0x83DC8AC7;                     // type:BOOL.0
	bool                             _0xAC9DE958;                     // type:BOOL.0
	bool                             _0x357FC8EE;                     // type:BOOL.0
	bool                             _0xDFCB4A07;                     // type:BOOL.0
	bool                             _0x744E4B95;                     // type:BOOL.0
	bool                             _0x7C8DF884;                     // type:BOOL.0
	bool                             _0x5BE4811B;                     // type:BOOL.0
	bool                             Livestock;                       // type:BOOL.0
	bool                             _0xDF5D0C1A;                     // type:BOOL.0
	bool                             _0x7267D995;                     // type:BOOL.0
	bool                             _0xCCE1D98E;                     // type:BOOL.0
	bool                             _0x64A7938C;                     // type:BOOL.0
	bool                             _0x49671984;                     // type:BOOL.0
	bool                             _0x659F559C;                     // type:BOOL.0
	bool                             _0x3CE2AF18;                     // type:BOOL.0
	bool                             _0x12428C98;                     // type:BOOL.0
	bool                             _0x5B103CC3;                     // type:BOOL.0
	bool                             _0x3FA3E929;                     // type:BOOL.0
	bool                             _0xBBF5FB62;                     // type:BOOL.0
	bool                             _0x583A7AF3;                     // type:BOOL.0
	bool                             _0x772898A9;                     // type:BOOL.0
	bool                             _0x173F397B;                     // type:BOOL.0
	bool                             _0xB63BA99A;                     // type:BOOL.0
	bool                             _0xECA39A67;                     // type:BOOL.0
	bool                             _0xBBE45340;                     // type:BOOL.0
	bool                             _0xF10F2620;                     // type:BOOL.0
	bool                             _0x4F0C0EF7;                     // type:BOOL.0
	bool                             _0xE30668EC;                     // type:BOOL.0
	bool                             _0xB391DF0F;                     // type:BOOL.0
	bool                             _0x73499879;                     // type:BOOL.0
	bool                             _0x1241F8D6;                     // type:BOOL.0
	bool                             _0x3EED62A7;                     // type:BOOL.0
	bool                             _0x456080C7;                     // type:BOOL.0
	bool                             _0xE6C42533;                     // type:BOOL.0
	bool                             _0x36E8E59B;                     // type:BOOL.0
	bool                             _0x26EC0DF1;                     // type:BOOL.0
	bool                             _0x292637E8;                     // type:BOOL.0
	bool                             _0xF83F520F;                     // type:BOOL.0
	bool                             _0x5FDC65DD;                     // type:BOOL.0
	bool                             _0x8FDB83DC;                     // type:BOOL.0
	bool                             _0xF7B2FFCC;                     // type:BOOL.0
	bool                             _0x69D683EB;                     // type:BOOL.0
	bool                             _0xC39D97D4;                     // type:BOOL.0
	bool                             _0xAADDE665;                     // type:BOOL.0
	bool                             _0x2D941E49;                     // type:BOOL.0
	bool                             _0xB3DE39A9;                     // type:BOOL.0
	bool                             _0x611FAAE1;                     // type:BOOL.0
	bool                             _0xDA1528C9;                     // type:BOOL.0
	bool                             _0x8D761BF5;                     // type:BOOL.0
	bool                             _0x8E5AB707;                     // type:BOOL.0
	bool                             _0x97A9C636;                     // type:BOOL.0
	bool                             _0xFCB4A49B;                     // type:BOOL.0
	bool                             _0x15670081;                     // type:BOOL.0
	bool                             _0xE002AC13;                     // type:BOOL.0
	bool                             _0xAA99BE50;                     // type:BOOL.0
	bool                             _0x27F74BA9;                     // type:BOOL.0
	bool                             _0xC202B02F;                     // type:BOOL.0
	bool                             _0xCC0BB4DB;                     // type:BOOL.0
	bool                             _0xEC206036;                     // type:BOOL.0
	bool                             _0xE64DE81B;                     // type:BOOL.0
	bool                             _0xBA957AA7;                     // type:BOOL.0
	bool                             _0x6ABB1D39;                     // type:BOOL.0
	bool                             _0x4FC18598;                     // type:BOOL.0
	bool                             _0x2B9052CE;                     // type:BOOL.0
	bool                             _0x91A4E96E;                     // type:BOOL.0
	bool                             _0x933DCA74;                     // type:BOOL.0
	bool                             _0x4A00F96B;                     // type:BOOL.0
	bool                             _0x7C8018CF;                     // type:BOOL.0
	bool                             _0x9F81079E;                     // type:BOOL.0
	bool                             _0xAF0CC199;                     // type:BOOL.0
	bool                             _0x37FD58B3;                     // type:BOOL.0
	bool                             _0x9E67E14E;                     // type:BOOL.0
	bool                             _0x335D22D3;                     // type:BOOL.0
	bool                             _0xF83C1312;                     // type:BOOL.0
	bool                             _0xE13921C2;                     // type:BOOL.0
	bool                             _0x096FB95D;                     // type:BOOL.0
	bool                             _0x23794A91;                     // type:BOOL.0
};

struct _0x2DAE78DA : CNmParameter
{
	string                           Mask;                            // type:STRING.ATFINALHASHSTRING
};

struct _0x2DB4A6BE
{
	enum _0x9DB65C31                 _0x6CC3A318;                     // type:ENUM.32BIT
	string                           _0xCE7CA8C5;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x46BD0CA1;                     // type:FLOAT.0
	bool                             _0xEAFF26E4;                     // type:BOOL.0
};

struct _0x2DB6F7A5 : _0x9920C241
{
};

struct _0x2DC2D881
{
	uint                             _0x25D91E0E;                     // type:UINT.0
	char                             _0x00140D59;                     // type:CHAR.0
	uchar                            bodyColour1;                     // type:UCHAR.0
	uchar                            bodyColour2;                     // type:UCHAR.0
	uchar                            bodyColour3;                     // type:UCHAR.0
	uchar                            bodyColour4;                     // type:UCHAR.0
	uchar                            _0x5A328C33;                     // type:UCHAR.0
};

struct _0x2E1D294B : UIBehavior
{
	string                           SlotId;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2E3159DB
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x4A7EBF22               Default;                         // type:STRUCT.STRUCTURE
	struct _0x4A7EBF22               Combat;                          // type:STRUCT.STRUCTURE
	struct _0x4A7EBF22               Flee;                            // type:STRUCT.STRUCTURE
};

struct _0x2E323752
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                AttachBone;                      // type:ENUM.32BIT
	string                           CreateTagId;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DestroyTagId;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             DropInsteadOfDestroy;            // type:BOOL.0
	array<struct _0xA8FB03FC>        ValidInventoryItems;             // type:ARRAY.ATARRAY
};

struct _0x2E338A28 : _0x2F7DA38D
{
	string                           _0xD744802F;                     // type:STRING.ATSTRING
	string                           _0x14FF380C;                     // type:STRING.ATSTRING
	string                           Speaker;                         // type:STRING.ATNONFINALHASHSTRING
	int                              iLanguageID;                     // type:INT.0
	int                              iTransitionIn;                   // type:INT.0
	float                            fTransitionInDuration;           // type:FLOAT.0
	int                              iTransitionOut;                  // type:INT.0
	float                            fTransitionOutDuration;          // type:FLOAT.0
};

struct _0x2E35FD1E
{
	float                            BaseX;                           // type:FLOAT.0
	float                            BaseY;                           // type:FLOAT.0
	float                            BaseZ;                           // type:FLOAT.0
	float                            Delta1X;                         // type:FLOAT.0
	float                            Delta1Y;                         // type:FLOAT.0
	float                            Delta2X;                         // type:FLOAT.0
	float                            Delta2Y;                         // type:FLOAT.0
	float                            CeilingZ;                        // type:FLOAT.0
	bool                             useLineIntersection;             // type:BOOL.0
};

struct _0x2E3B2610 : CTuning
{
	float                            _0xE906377C;                     // type:FLOAT.0
	float                            AdditionalWindscreenRagdollForceFwd; // type:FLOAT.0
	float                            AdditionalWindscreenRagdollForceUp; // type:FLOAT.0
	float                            SkyDiveProbeDistance;            // type:FLOAT.0
	float                            InAirProbeDistance;              // type:FLOAT.0
	float                            ArrestProbeDistance;             // type:FLOAT.0
	float                            InWaterExitDepth;                // type:FLOAT.0
	float                            InWaterExitProbeLength;          // type:FLOAT.0
	float                            BikeVelocityToUseAnimatedJumpOff; // type:FLOAT.0
	float                            BicycleVelocityToUseAnimatedJumpOff; // type:FLOAT.0
	float                            DefaultGetOutBlendDuration;      // type:FLOAT.0
	float                            DefaultGetOutNoWindBlendDuration; // type:FLOAT.0
	float                            MaxTimeForArrestBreakout;        // type:FLOAT.0
	float                            ThroughWindscreenDamagePlayer;   // type:FLOAT.0
	float                            ThroughWindscreenDamageAi;       // type:FLOAT.0
	string                           DefaultCrashExitOnSideClipId;    // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedAlivePedFromOutsideClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           _0x96BFAD4C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedDeadPedFromOutsideClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCE32798D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedAlivePedFromWaterClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedDeadPedFromWaterClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedAlivePedOnVehicleClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedDeadPedOnVehicleClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedAlivePedOnVehicleIntoWaterClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultBeJackedDeadPedOnVehicleIntoWaterClipId; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultFleeExitClipId;           // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultGetOutClipId;             // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultGetOutToWaterClipId;      // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultGetOutOnToVehicleClipId;  // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultGetOutNoWingId;           // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultJumpOutClipId;            // type:STRING.ATNONFINALHASHSTRING
	string                           DeadFallOutClipId;               // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x561AFC84>        ExitToAimClipSets;               // type:ARRAY.ATARRAY
	array<struct _0x32C1B4A0>        ExitToAimVehicleInfos;           // type:ARRAY.ATARRAY
	float                            BikeExitForce;                   // type:FLOAT.0
	float                            RagdollIntoWaterVelocity;        // type:FLOAT.0
	float                            GroundFixupHeight;               // type:FLOAT.0
	float                            GroundFixupHeightLarge;          // type:FLOAT.0
	float                            GroundFixupHeightLargeOffset;    // type:FLOAT.0
	float                            GroundFixupHeightBoatInWaterInitial; // type:FLOAT.0
	float                            GroundFixupHeightBoatInWater;    // type:FLOAT.0
	float                            ExtraWaterZGroundFixup;          // type:FLOAT.0
	float                            FleeExitExtraRotationSpeed;      // type:FLOAT.0
	float                            FleeExitExtraTranslationSpeed;   // type:FLOAT.0
	string                           _0x5030B2EE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x59231952;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2E3E0FC1
{
	struct _0x0A510DA9                  _0x9E9ADD01;                     // type:STRUCT.POINTER
	map<string, struct _0x0A510DA9>     _0x2C2CC891;                     // type:MAP.ATMAP
};

struct _0x2E7361C9 : _0xDBE512DA
{
};

struct _0x2E7831E0 : _0x6EBB1EEA
{
	uint                             _0xC4411092;                     // type:UINT.0
	uint                             _0x93AC30D2;                     // type:UINT.0
	uint                             _0x43488928;                     // type:UINT.0
	float                            _0x67C0A3E6;                     // type:FLOAT.0
	uint                             _0xF1EAD797;                     // type:UINT.0
	uint                             _0xD8EA33D5;                     // type:UINT.0
	uint                             _0x8CF2712E;                     // type:UINT.0
	uint                             _0x9D7F6F79;                     // type:UINT.0
	uint                             _0x6BFB5836;                     // type:UINT.0
	float                            _0x7AC23C1D;                     // type:FLOAT.0
	uint                             _0x706FEF4C;                     // type:UINT.0
	uint                             _0x2C497C05;                     // type:UINT.0
	int                              _0x026FE681;                     // type:INT.0
	string                           _0x55AAD59B;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x462FE641;                     // type:UINT.0
	array<string>                    _0x344AF532;                     // type:ARRAY.ATARRAY
	string                           _0x12189A99;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2E78E82E : _0x1FB1BCEA
{
};

struct _0x2E809ADA : uiPromptedInputBehaviorBase
{
};

struct _0x2E86F9BD : CTuning
{
	float                            _0x97D1B7FD;                     // type:FLOAT.0
};

struct _0x2E992620
{
	bool                             value;                           // type:BOOL.0
	string                           commandType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x2E9A2CFB
{
	string                           NameOfScriptTextLine;            // type:STRING.ATHASHVALUE
	int                              MaximumNumber;                   // type:INT.0
};

struct _0x2EBAA9ED
{
	float                            _0xECFF574A;                     // type:FLOAT.0
	float                            _0x4F773FFB;                     // type:FLOAT.0
	float                            _0xA9914086;                     // type:FLOAT.0
	float                            _0x085E7441;                     // type:FLOAT.0
	float                            _0x40D63A9D;                     // type:FLOAT.0
	float                            _0xEE9FDD11;                     // type:FLOAT.0
	float                            _0x60F3EDCF;                     // type:FLOAT.0
	float                            _0xF7EAD74B;                     // type:FLOAT.0
	float                            _0xDF1A74FF;                     // type:FLOAT.0
	float                            _0x35773834;                     // type:FLOAT.0
	float                            _0x0B1B0EB8;                     // type:FLOAT.0
	float                            _0xB7AC4B5C;                     // type:FLOAT.0
	float                            _0x2A6A91CD;                     // type:FLOAT.0
	float                            _0x6B1CA8FA;                     // type:FLOAT.0
	float                            _0x29AD7C1E;                     // type:FLOAT.0
	float                            _0x1E06696C;                     // type:FLOAT.0
};

struct _0x2EBB01D3
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	enum _0xBEEA6142                 AttachBone;                      // type:ENUM.32BIT
	vec3V                            PosOffset;                       // type:VEC3V.0
	float                            HeadingOffset;                   // type:FLOAT.0
};

struct _0x2EFB7E78
{
	float                            force;                           // type:FLOAT.0
	float                            radius;                          // type:FLOAT.0
	float                            timer;                           // type:FLOAT.0
	float                            noise;                           // type:FLOAT.0
};

struct _0x2F00B86E : _0x7DE6531A
{
	enum _0x7123E6B1                 targetValue;                     // type:ENUM.32BIT
	enum _0x7123E6B1                 targetValueMin;                  // type:ENUM.32BIT
	enum _0x7123E6B1                 targetValueMax;                  // type:ENUM.32BIT
};

struct _0x2F0217BE
{
	string                           LinkModelName;                   // type:STRING.ATNONFINALHASHSTRING
	float                            ScaleX;                          // type:FLOAT.0
	float                            ScaleY;                          // type:FLOAT.0
	float                            ScaleZ;                          // type:FLOAT.0
};

struct _0x2F0CEE45
{
	float                            Epsilon;                         // type:FLOAT.0
	float                            CurveTolerance;                  // type:FLOAT.0
	float                            CollinearityTolerance;           // type:FLOAT.0
	float                            IntersectionEpsilon;             // type:FLOAT.0
	float                            FillLowerScale;                  // type:FLOAT.0
	float                            FillUpperScale;                  // type:FLOAT.0
	float                            FillAliasedLowerScale;           // type:FLOAT.0
	float                            FillAliasedUpperScale;           // type:FLOAT.0
	float                            StrokeLowerScale;                // type:FLOAT.0
	float                            StrokeUpperScale;                // type:FLOAT.0
	float                            HintedStrokeLowerScale;          // type:FLOAT.0
	float                            HintedStrokeUpperScale;          // type:FLOAT.0
	float                            Scale9LowerScale;                // type:FLOAT.0
	float                            Scale9UpperScale;                // type:FLOAT.0
	float                            EdgeAAScale;                     // type:FLOAT.0
	float                            MorphTolerance;                  // type:FLOAT.0
	float                            MinDet3D;                        // type:FLOAT.0
	float                            MinScale3D;                      // type:FLOAT.0
	uint                             CurveRecursionLimit;             // type:UINT.0
};

struct _0x2F1A7DB4 : _0x3ABDED0D
{
	string                           _0x056F1B40;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x2ED6366A;                     // type:BOOL.0
	vec2                             _0x2EE22370;                     // type:VECTOR2.0
	int                              _0x09AF3D11;                     // type:INT.0
	bool                             _0x391C87C1;                     // type:BOOL.0
	int                              _0x0815FD0A;                     // type:INT.0
	int                              _0x971CB0B1;                     // type:INT.0
};

struct _0x2F1ABF12 : _0x3AB6499E
{
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
	struct _0x68EB7CE9               _0x0DD446D2;                     // type:STRUCT.STRUCTURE
	struct _0x17D11880               _0xA975C5F5;                     // type:STRUCT.STRUCTURE
	struct _0xD3FCD9E3               AimingSettings;                  // type:STRUCT.STRUCTURE
};

struct _0x2F1B0C4B : _0xE046EA8D
{
	string                           EntryId;                         // type:STRING.ATSTRING
	string                           _0xCB30EC65;                     // type:STRING.ATSTRING
	bool                             _0x9BCE5188;                     // type:BOOL.0
};

struct _0x2F2B68C0 : _0x1901476A
{
};

struct _0x2F41B1CE
{
	bool                             _0xA9E92AF8;                     // type:BOOL.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct _0x2F5FAA31 : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
};

struct _0x2F78405A
{
	string                           MotionTypeHash;                  // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	bitset<enum _0x0DE234D3>         TriggerConditionFlags;           // type:BITSET.32BIT
	bitset<enum _0x0DE234D3>         ExcludedTriggerConditionFlags;   // type:BITSET.32BIT
	bitset<enum _0xDCF816E1>         PreStreamConditionFlags;         // type:BITSET.32BIT
	bitset<enum _0xDCF816E1>         _0x36375A80;                     // type:BITSET.32BIT
	enum eStreamingPriority          PreStreamPriority;               // type:ENUM.32BIT
};

struct _0x2F7DA38D : _0x11AD3051
{
	struct _0xED16C5B0               entity;                          // type:STRUCT.STRUCTURE
	float                            startTime;                       // type:FLOAT.0
	float                            endTime;                         // type:FLOAT.0
	float                            _0x420E8F0C;                     // type:FLOAT.0
	struct _0xEED7E46F               _0x88095688;                     // type:STRUCT.POINTER
	bool                             _0xAB28F89C;                     // type:BOOL.0
	enum _0xC0309C15                 state;                           // type:ENUM.32BIT
	struct _0x93F492CB               _0x6C60E551;                     // type:STRUCT.POINTER
};

struct _0x2F87123E
{
	string                           _0x15592AB7;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x2DC6E0DA;                     // type:UINT.0
	float                            offset;                          // type:FLOAT.0
	float                            duration;                        // type:FLOAT.0
	bool                             _0xA8C9E96E;                     // type:BOOL.0
};

struct _0x2F918841
{
	struct _0x5CE80E00               Timeline;                        // type:STRUCT.STRUCTURE
	struct _0x6815012B               _0xA2BDD5B6;                     // type:STRUCT.STRUCTURE
	struct _0x0FF0FDB0               _0xEBB8A903;                     // type:STRUCT.STRUCTURE
	struct _0x79848C17               _0xC6366990;                     // type:STRUCT.STRUCTURE
	struct _0x4F93D59F               _0xE68D464A;                     // type:STRUCT.STRUCTURE
	struct _0x0A317D0E               _0xBC377243;                     // type:STRUCT.STRUCTURE
	struct _0xDF15B723               _0x6C75A375;                     // type:STRUCT.STRUCTURE
	struct _0x3D086533               _0xF862163C;                     // type:STRUCT.STRUCTURE
	struct _0xF8A18CE1               _0x3AD7B97A;                     // type:STRUCT.STRUCTURE
};

struct _0x2F9C4766 : _0xE046EA8D
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            Step;                            // type:FLOAT.0
	struct _0x9B79B490               Value;                           // type:STRUCT.STRUCTURE
};

struct _0x2FCD256F : _0x8DCC010D
{
	matrix34V                        _0x45C1D269;                     // type:MAT34V.0
};

struct _0x2FE6FC32
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             Default;                         // type:BOOL.0
};

struct _0x3029AB0F : CTuning
{
	int                              _0xDFFB74DC;                     // type:INT.0
};

struct _0x30503071
{
	struct _0x4C149694               VelocityInheritance;             // type:STRUCT.STRUCTURE
	float                            AttachOffsetX;                   // type:FLOAT.0
	float                            AttachOffsetY;                   // type:FLOAT.0
	float                            AttachOffsetZ;                   // type:FLOAT.0
	float                            AttachOrientationX;              // type:FLOAT.0
	float                            AttachOrientationY;              // type:FLOAT.0
	float                            AttachOrientationZ;              // type:FLOAT.0
	float                            BlendInDeltaForPed;              // type:FLOAT.0
	float                            BlendInDeltaForProp;             // type:FLOAT.0
	float                            PhaseToBlendOut;                 // type:FLOAT.0
	float                            BlendOutDelta;                   // type:FLOAT.0
};

struct _0x3051C89E : CAICondition
{
	enum _0x563FBCEA                 _0x8425FDC1;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x3FB45769;                     // type:ENUM.32BIT
};

struct _0x3056B0D8
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	uint                             foundCount;                      // type:UINT.0
	uint                             turnedInCount;                   // type:UINT.0
};

struct _0x305B8C7F
{
	float                            _0x2CA88607;                     // type:FLOAT.0
	float                            _0x2A93A365;                     // type:FLOAT.0
	array<struct _0x078BD94E>        _0x6BB78329;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x6817206D;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0xA92B2050;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x8E21141B;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x1FED9AEE;                     // type:ARRAY.ATARRAY
};

struct _0x30685149 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x3070C110 : _0x6992EBA1
{
	float                            _0x23E9F63D;                     // type:FLOAT.0
	bool                             _0x0F4FCB95;                     // type:BOOL.0
	bool                             _0x26A86C59;                     // type:BOOL.0
};

struct _0x30748BB4 : _0xE975B01D
{
};

struct _0x30794597
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6978C5D6;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x06363F1D>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0x30801167 : CTuning
{
	string                           _0x7990727C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x23C2F747;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC3D82B87;                     // type:FLOAT.0
	bool                             _0x832DB1CC;                     // type:BOOL.0
	int                              _0xAF303A72;                     // type:INT.0
};

struct _0x3085D50C : _0xAD9BC2D3
{
	string                           Heading;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3098B9BE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF61815B2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x95B9EF04;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x624900AC;                     // type:BOOL.0
	uint                             _0x3DE46CE7;                     // type:UINT.0
};

struct _0x309316B5 : _0xEBB02FC9
{
};

struct _0x309C3B9F
{
	vec3                             Offset;                          // type:VECTOR3.0
	uchar                            SeatIndex;                       // type:UCHAR.0
};

struct _0x30B3AC89
{
	float                            _0xBDE52550;                     // type:FLOAT.0
	float                            _0x7E4889A5;                     // type:FLOAT.0
	enum _0xC93A7A62                 _0x3542D7AD;                     // type:ENUM.32BIT
	float                            _0xFEEBEEAD;                     // type:FLOAT.2
	float                            SpringConstant;                  // type:FLOAT.0
	float                            _0x882E97CF;                     // type:FLOAT.0
};

struct _0x30BDF895
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             wasObserved;                     // type:BOOL.0
};

struct _0x30FAEA90
{
	float                            RootWeight;                      // type:FLOAT.0
	float                            SpineWeight;                     // type:FLOAT.0
	float                            HeadWeight;                      // type:FLOAT.0
	float                            LeftArmWeight;                   // type:FLOAT.0
	float                            RightArmWeight;                  // type:FLOAT.0
	float                            RootRate;                        // type:FLOAT.0
	float                            SpineRate;                       // type:FLOAT.0
	float                            HeadRate;                        // type:FLOAT.0
	float                            LeftArmRate;                     // type:FLOAT.0
	float                            RightArmRate;                    // type:FLOAT.0
};

struct _0x30FF84C0 : _0x00EAD092
{
};

struct _0x3101B7BE
{
	string                           Response;                        // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xC5A6CFC2>        Situations;                      // type:ARRAY.ATARRAY
};

struct _0x31059BC9 : _0x22B199F9
{
};

struct _0x311CF1A8 : _0x1054F746
{
};

struct _0x311DD9C3 : CAICondition
{
};

struct _0x31274B4F
{
	string                           albedo;                          // type:STRING.ATNONFINALHASHSTRING
	string                           normal;                          // type:STRING.ATNONFINALHASHSTRING
	string                           material;                        // type:STRING.ATNONFINALHASHSTRING
	string                           mod;                             // type:STRING.ATNONFINALHASHSTRING
	string                           palette;                         // type:STRING.ATNONFINALHASHSTRING
	enum _0xDC6B5C12                 type;                            // type:ENUM.32BIT
	float                            alpha;                           // type:FLOAT.0
	float                            modAlpha;                        // type:FLOAT.0
	float                            roughnessMultiplier;             // type:FLOAT.0
	uchar                            modChannel;                      // type:UCHAR.0
	uchar                            tint0;                           // type:UCHAR.0
	uchar                            tint1;                           // type:UCHAR.0
	uchar                            tint2;                           // type:UCHAR.0
	uchar                            sheetItem;                       // type:UCHAR.0
};

struct _0x313B67AE : CAICondition
{
};

struct _0x31488BDE
{
	enum _0x5705A365                 Source;                          // type:ENUM.32BIT
	enum _0x5705A365                 SecondarySource;                 // type:ENUM.32BIT
};

struct _0x314FCC0D
{
	float                            _0xBE1655C9;                     // type:FLOAT.0
	float                            _0x13A631A5;                     // type:FLOAT.0
	float                            _0x2F1D35CA;                     // type:FLOAT.0
	float                            _0x18F21793;                     // type:FLOAT.0
	float                            _0x70979E10;                     // type:FLOAT.0
	float                            _0xEC58D0E4;                     // type:FLOAT.0
	float                            _0x60A23A45;                     // type:FLOAT.0
	float                            _0x0D6D2A65;                     // type:FLOAT.0
	float                            _0x40856C91;                     // type:FLOAT.0
	float                            _0x93B28B45;                     // type:FLOAT.0
	float                            _0x6E922940;                     // type:FLOAT.0
	float                            _0x62DFFCB9;                     // type:FLOAT.0
	float                            _0xF99AF644;                     // type:FLOAT.0
};

struct _0x315847C2 : CTuning
{
	struct _0xB4145F7D               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x315C89D1 : _0x184818A1
{
};

struct _0x31990E76
{
	uint                             _0x68C841EA;                     // type:UINT.0
	float                            _0xE5DF40B5;                     // type:FLOAT.0
};

struct _0x31AFE57F : CAICondition
{
	enum _0x563FBCEA                      Ped;                             // type:ENUM.32BIT
	bitset<enum ePedWeaponResetFlags>     ResetFlags;                      // type:BITSET.32BIT
};

struct _0x31B0F5A3 : _0xA0889763
{
	string                           value;                           // type:STRING.ATSTRING
};

struct _0x31B63C49 : _0x8A0DC979
{
};

struct _0x31CA41AF
{
	float                            _0xF8DDDA2F;                     // type:FLOAT.0
	bool                             _0xE4E0CDFD;                     // type:BOOL.0
	bool                             _0x5F13ED30;                     // type:BOOL.0
	float                            _0xAD81DCDD;                     // type:FLOAT.0
	float                            _0xC92D6F05;                     // type:FLOAT.0
	float                            _0x1C39F3E7;                     // type:FLOAT.0
	float                            _0x72E7F407;                     // type:FLOAT.0
	float                            _0x0701B6E3;                     // type:FLOAT.0
	float                            _0x786A313E;                     // type:FLOAT.0
	float                            _0x26DF3EE5;                     // type:FLOAT.0
	float                            _0x13DEACA7;                     // type:FLOAT.0
	float                            _0xDCDD4C34;                     // type:FLOAT.0
	float                            _0xCE0F7B5A;                     // type:FLOAT.0
	float                            _0x833BAF0C;                     // type:FLOAT.0
	float                            _0x9DBA308E;                     // type:FLOAT.0
	float                            _0xADC8184D;                     // type:FLOAT.0
	float                            _0x796BF712;                     // type:FLOAT.0
	float                            _0xDCE7BDA5;                     // type:FLOAT.0
	float                            _0x9EE8F245;                     // type:FLOAT.0
	float                            _0xB4C053B4;                     // type:FLOAT.0
	float                            _0x10B70876;                     // type:FLOAT.0
	float                            _0xD8816840;                     // type:FLOAT.0
};

struct _0x31CB7C5F : _0x906508CE
{
	enum _0x8D8341C5                 _0xF544B9F7;                     // type:ENUM.32BIT
	float                            rate;                            // type:FLOAT.0
};

struct _0x31CC2866 : _0x8A0DC979
{
};

struct _0x31D2EB40
{
	int                              numKeyEntries;                   // type:INT.0
	array<float>                     keyEntryData;                    // type:ARRAY.ATARRAY
};

struct _0x31D64A3D
{
	short                            iPosX;                           // type:SHORT.0
	short                            iPosY;                           // type:SHORT.0
	short                            iPosZ;                           // type:SHORT.0
	uchar                            iRadius;                         // type:UCHAR.0
	uchar                            iFlags;                          // type:UCHAR.0
};

struct _0x31DC6E2A
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33C1E27F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0x521B6827;                     // type:FLOAT.0
	float                            _0x7B660C91;                     // type:FLOAT.0
	float                            ptFxScale;                       // type:FLOAT.0
	float                            ptFxSpeedEvoMin;                 // type:FLOAT.0
	float                            ptFxSpeedEvoMax;                 // type:FLOAT.0
	float                            _0xF7B26E09;                     // type:FLOAT.0
	float                            _0x1ECC3344;                     // type:FLOAT.0
	bool                             _0xE86735F2;                     // type:BOOL.0
	bool                             _0xFC0015F3;                     // type:BOOL.0
	float                            _0xDFB36324;                     // type:FLOAT.0
	vec3                             _0xF97D9E1C;                     // type:VECTOR3.0
	vec3                             _0xA932E318;                     // type:VECTOR3.0
	vec2                             _0x6C7DCBDB;                     // type:VECTOR2.0
	vec2                             _0x38AC7EC0;                     // type:VECTOR2.0
	vec2                             _0xB5E8006F;                     // type:VECTOR2.0
};

struct _0x31F3B2CC
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             Contact;                         // type:BOOL.0
};

struct _0x31F4CD9B : UITemplateInstancingItem
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x31F52F9A : _0x4DE5602F
{
	string                           PropertyName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x31FB567E : _0x26F35FEB
{
	int                              _0x4EC9D661;                     // type:INT.0
};

struct _0x32048E07
{
	string                           PerformerClipSetId;              // type:STRING.ATNONFINALHASHSTRING
	string                           PerformerClipId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipSetId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipId;                    // type:STRING.ATNONFINALHASHSTRING
	float                            TargetFootCyclePhase;            // type:FLOAT.0
	string                           MovingFilter;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x320EE17C : _0xAC081F94
{
	uint                             MaxSize;                         // type:UINT.0
	uint                             MaxElementsBuiltPerFrame;        // type:UINT.0
	string                           DataID;                          // type:STRING.ATNSHASHSTRING
	struct _0xCE064FC1               DatastorePath;                   // type:STRUCT.STRUCTURE
};

struct _0x3224015C : _0xD6EBC8F6
{
	float                            Timeout;                         // type:FLOAT.0
};

struct _0x3227EC29
{
	struct _0x1F269BEE               _0xEF43FD0A;                     // type:STRUCT.STRUCTURE
};

struct _0x323B8B4A
{
	uint64                           abs;                             // type:UINT64.0
	uint64                           purge;                           // type:UINT64.0
};

struct _0x324388BF : _0x14229900
{
};

struct _0x324C35D2
{
};

struct _0x3264F1EC
{
	string                           ModelName;                       // type:STRING.CONST_STRING
	enum _0x36C9DA71                 PlaceType;                       // type:ENUM.8BIT
};

struct _0x32651A59 : _0x39DE799A
{
	double                           Value;                           // type:DOUBLE.0
};

struct _0x3266F536
{
	string                           RansackObjectsPropSet;           // type:STRING.ATNONFINALHASHSTRING
	array<string>                    ReachScenarios;                  // type:ARRAY.ATARRAY
	array<string>                    IntroScenarios;                  // type:ARRAY.ATARRAY
	array<string>                    OutroScenarios;                  // type:ARRAY.ATARRAY
	vec3V                            IntroScenarioOffset;             // type:VEC3V.0
	vec3V                            OutroScenarioOffset;             // type:VEC3V.0
	vec3V                            ReachScenarioOffset;             // type:VEC3V.0
	vec3V                            LookOffset;                      // type:VEC3V.0
	vec3V                            RansackVolume;                   // type:VEC3V.0
	vec3V                            VolumeScalerOffset;              // type:VEC3V.0
	vec3V                            VolumeAbsoluteOffset;            // type:VEC3V.0
	float                            ExtraVolumeHeight;               // type:FLOAT.0
	float                            _0x7E88C1D1;                     // type:FLOAT.0
	float                            _0xEE53C781;                     // type:FLOAT.0
	float                            LateralDistanceLimit;            // type:FLOAT.0
	float                            LateralDistanceConstraint;       // type:FLOAT.0
	bool                             UseBoundingBoxForVolume;         // type:BOOL.0
	bool                             ApplyBoundingBoxCentroid;        // type:BOOL.0
	bool                             AttachObjectsInVolume;           // type:BOOL.0
	string                           PropExpressionParameter;         // type:STRING.ATNONFINALHASHSTRING
	string                           PropRelativeBone;                // type:STRING.ATFINALHASHSTRING
	string                           LeftArmIkTarget;                 // type:STRING.ATFINALHASHSTRING
	string                           RightArmIkTarget;                // type:STRING.ATFINALHASHSTRING
	enum _0xC42FF564                 ConstraintType;                  // type:ENUM.32BIT
	float                            PickupHeadingTolerance;          // type:FLOAT.0
	bitset<enum _0xB1484B78>         Flags;                           // type:BITSET.32BIT
	string                           _0xFB292D23;                     // type:STRING.ATNONFINALHASHSTRING
	string                           FallbackAudio;                   // type:STRING.ATNONFINALHASHSTRING
	vec3V                            _0xA7CDA501;                     // type:VEC3V.0
	vec3V                            _0xE209A1E8;                     // type:VEC3V.0
};

struct _0x326FA4A2 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x3273F55D
{
	string                           _0x28D26BF7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           TypeName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x327C4B84 : CTuning
{
	float                            _0xEC3C69E5;                     // type:FLOAT.0
	float                            _0x9C0EB6EC;                     // type:FLOAT.0
	float                            _0xCC582C76;                     // type:FLOAT.0
	float                            _0xFCC9B2BE;                     // type:FLOAT.0
	float                            _0x27991938;                     // type:FLOAT.0
	float                            _0xB7536945;                     // type:FLOAT.0
	float                            fAvoidWaterCostModifier;         // type:FLOAT.0
	float                            _0x982B4530;                     // type:FLOAT.0
	bool                             _0x5BC693CA;                     // type:BOOL.0
	uint                             _0x4B936A31;                     // type:UINT.0
	uint                             _0xFA6B1762;                     // type:UINT.0
	uint                             _0x11209E2B;                     // type:UINT.0
	uint                             _0x0D78413B;                     // type:UINT.0
};

struct _0x3284E2C4
{
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	enum eAnimBoneTag                AttachBone;                      // type:ENUM.32BIT
	enum eAnimBoneTag                FallbackAttachBone;              // type:ENUM.32BIT
	enum _0xC5AC46C3                 WeaponBone;                      // type:ENUM.32BIT
	bool                             HideWeaponsAttachedHere;         // type:BOOL.0
	bool                             HideAIWeaponsAttachedHere;       // type:BOOL.0
	bool                             ShowWeaponWithoutMetaPedAttachTag; // type:BOOL.0
	bool                             DualWieldLockedAttachPoint;      // type:BOOL.0
	bool                             TryToHorseHolsterWeaponsCreatedHere; // type:BOOL.0
	bool                             TryToVehicleHolsterWeaponsCreatedHere; // type:BOOL.0
	bool                             UpgradeFromAltHolsterWhileMounted; // type:BOOL.0
};

struct _0x329BA7FC
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE24EA756;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x32AF60F7 : _0x6BA40A2D
{
};

struct _0x32B107CF : _0xE65BF5A5
{
};

struct _0x32C0AB5B : _0x68825F77
{
	string                           _0x4BF77BB2;                     // type:STRING.ATSTRING
};

struct _0x32C1B4A0
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x92E81058>        Seats;                           // type:ARRAY.ATARRAY
};

struct _0x32DAB33A
{
	float                            _0xAFE3703A;                     // type:FLOAT.0
	float                            MinTimeBetweenFiringVariations;  // type:FLOAT.0
	float                            _0x664AB428;                     // type:FLOAT.0
	float                            IdealPitchForFiringVariation;    // type:FLOAT.0
	float                            MaxPitchDifferenceForFiringVariation; // type:FLOAT.0
	float                            _0x70F4C497;                     // type:FLOAT.0
	float                            _0x4139C2B3;                     // type:FLOAT.0
	float                            _0xC501FEB1;                     // type:FLOAT.0
	float                            _0xB7B1A15B;                     // type:FLOAT.0
	float                            _0xE79498C9;                     // type:FLOAT.0
	float                            _0x4929DD16;                     // type:FLOAT.0
	float                            _0x33214006;                     // type:FLOAT.0
	float                            _0xB5B41160;                     // type:FLOAT.0
};

struct _0x32EDDD0A : CTuning
{
	struct _0x6DAC529B               TuningValues;                    // type:STRUCT.STRUCTURE
	struct _0x21CE8D15               _0xEAD5D7DB;                     // type:STRUCT.STRUCTURE
	struct _0x92951889               _0x5B5AD6E7;                     // type:STRUCT.STRUCTURE
};

struct _0x32F6F7A1
{
	float                            _0xEA8A2245;                     // type:FLOAT.0
	float                            _0x1804C996;                     // type:FLOAT.0
	float                            _0x77B13C54;                     // type:FLOAT.0
	float                            _0x26937F5E;                     // type:FLOAT.0
	float                            _0x5EF6F6C0;                     // type:FLOAT.0
	float                            _0x8CA9ECE9;                     // type:FLOAT.0
	bool                             _0x08A64AF7;                     // type:BOOL.0
};

struct _0x32FB437A : _0xCC7762ED
{
	string                           _0x6434C4D2;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x330E0893
{
	bitset<enum _0xD77C8DC8>         Flags;                           // type:BITSET.32BIT
	array<enum eAnimBoneTag>         TargetBoneTags;                  // type:ARRAY.ATARRAY
	array<struct _0x25B101E2>        AttachPoints;                    // type:ARRAY.ATARRAY
	int                              KnotAttachPointIndex;            // type:INT.0
	float                            MinAttachingZOffset;             // type:FLOAT.0
	float                            MaxAttachingZOffset;             // type:FLOAT.0
	float                            MinRange;                        // type:FLOAT.0
};

struct _0x331B4F5A
{
	float                            _0x334E35BB;                     // type:FLOAT.0
	float                            _0x5F456644;                     // type:FLOAT.0
	float                            _0xA3420FCF;                     // type:FLOAT.0
	float                            _0xB10BAB62;                     // type:FLOAT.0
	int                              _0x8A361970;                     // type:INT.0
	string                           _0x22D35282;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x54203A92;                     // type:FLOAT.0
	float                            _0xBF4DA7E4;                     // type:FLOAT.0
	float                            _0xF8A0C96F;                     // type:FLOAT.0
	float                            _0x5F801503;                     // type:FLOAT.0
};

struct _0x334CA609
{
	map<string, struct _0x74E2DEDB>     Collections;                     // type:MAP.ATBINARYMAP
};

struct _0x335019AA : SaveChallengeGoalParamBase
{
	float                            score;                           // type:FLOAT.0
	struct StatId                    _0x371C022C;                     // type:STRUCT.STRUCTURE
};

struct _0x33550CA9 : _0x39DE799A
{
	vec2                             Value;                           // type:VECTOR2.0
};

struct _0x335D77D7 : CTuning
{
	float                            MinWaitTime;                     // type:FLOAT.0
	float                            MaxWaitTime;                     // type:FLOAT.0
	float                            _0x7CB06D88;                     // type:FLOAT.0
};

struct _0x33758614 : CTuning
{
	struct _0xCF70EFCE               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x3394CCA5
{
	enum _0x99BEFEED                 AttributeType;                   // type:ENUM.32BIT
	string                           _0x958CD1D6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x004D3019;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x63948AEA               Compute;                         // type:STRUCT.POINTER
};

struct _0x33A8E0CE : _0x8A0DC979
{
	enum _0x387AA487                 Area;                            // type:ENUM.32BIT
};

struct _0x33AF3EB6
{
	map<string, struct TranquilizerProfile>     Profiles;                        // type:MAP.ATBINARYMAP
	struct TranquilizerProfile                  DefaultProfile;                  // type:STRUCT.STRUCTURE
};

struct _0x33B14BF6
{
	short                            minX;                            // type:SHORT.0
	short                            minY;                            // type:SHORT.0
	short                            maxX;                            // type:SHORT.0
	short                            maxY;                            // type:SHORT.0
	float                            _0x2F584072;                     // type:FLOAT.0
	float                            XDirection;                      // type:FLOAT.0
	float                            YDirection;                      // type:FLOAT.0
};

struct _0x33B1954F : CAICondition
{
};

struct _0x33C328EA
{
	string                           _0x8AD52861;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2E29D29A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5C50C1AF;                     // type:STRING.ATNONFINALHASHSTRING
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	string                           _0xAF5BB78E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0EE42FB4;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x094EBC86;                     // type:FLOAT.0
	float                            _0x6F9E0FD7;                     // type:FLOAT.0
	float                            _0x98348F95;                     // type:FLOAT.0
	float                            _0x0AA836CC;                     // type:FLOAT.0
	float                            _0x1DA5FA50;                     // type:FLOAT.0
	string                           _0xDFC2488D;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xEC36A111;                     // type:FLOAT.0
	float                            _0xC8400AD3;                     // type:FLOAT.0
	float                            _0x35FE1809;                     // type:FLOAT.0
	float                            _0x8E5A3548;                     // type:FLOAT.0
	float                            _0x263E8F98;                     // type:FLOAT.0
	float                            _0x00E45429;                     // type:FLOAT.0
};

struct _0x33C3AE23
{
	uint                             _0x83099E5F;                     // type:UINT.0
	uint                             _0x61B894C3;                     // type:UINT.0
	uint                             _0x0503D1C6;                     // type:UINT.0
};

struct _0x33C5054B : _0x45255C77
{
	struct _0x75D3CFBE               _0xC6D96D34;                     // type:STRUCT.STRUCTURE
	int                              _0x57F51297;                     // type:INT.0
	bool                             Wrap;                            // type:BOOL.0
	bool                             _0x60323A5F;                     // type:BOOL.0
	bool                             _0x11DCAB40;                     // type:BOOL.0
};

struct _0x33E2F023
{
	uint                             MaxTotalLifeTimeForSpawnedExitPropModelInMilliseconds; // type:UINT.0
	float                            VerticalPromptProbeWorldOffset;  // type:FLOAT.0
	float                            PromptProbeRadius;               // type:FLOAT.0
	enum eAnimBoneTag                LocalPlayerProbeStartBoneId;     // type:ENUM.32BIT
	float                            WaterAboveGroundHeightToleranceQuick; // type:FLOAT.0
	float                            MinStickMagnitudeForPlayerInputAbort; // type:FLOAT.0
	float                            MinStickHeadingDiffForPlayerInputAbort; // type:FLOAT.0
	float                            MinTimeRunningForPlayerInputAbort; // type:FLOAT.0
	float                            PeriodToPerformGroundAndWaterHeightProbes; // type:FLOAT.0
	float                            RootAboveGroundPromptWeight;     // type:FLOAT.0
	float                            StackedWeightDistance;           // type:FLOAT.0
	float                            MaxDeadRagdollVelocityToBeLootable; // type:FLOAT.0
	float                            LootableReProbeForGroundAndWaterDisplacementTolerance; // type:FLOAT.0
	float                            LocalPlayerPromptSearchDistance; // type:FLOAT.0
	float                            PromptSizeScalingMaxPlayerSpeed; // type:FLOAT.0
	float                            PreChoosingActionPromptRingTotalLootingTime; // type:FLOAT.0
	float                            PostChoosingActionPreEnteringPromptRingAdditionalEstimatedLootingTime; // type:FLOAT.0
	float                            FallbackLongHoldRingTime;        // type:FLOAT.0
	float                            MaxPromptRingTValueDeltaChangePerSecond; // type:FLOAT.0
	float                            TValueToStopClampingPromptRingFill; // type:FLOAT.0
	uint                             MaxNumEnemiesInMeleeCombatForCombatPromptChecks; // type:UINT.0
	float                            MeleeCombatBlockPromptRadius;    // type:FLOAT.0
	string                           SaddleMetaPedAssetTag;           // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA9D59C40;                     // type:STRING.ATNONFINALHASHSTRING
	float                            AliveSaddleTransferPromptRadius; // type:FLOAT.0
	float                            AliveSaddleTransferPromptCloseRadius; // type:FLOAT.0
	float                            AliveSaddleTransferPromptLookAngle; // type:FLOAT.0
	float                            AliveSaddleTransferPromptActivationAngle; // type:FLOAT.0
	enum eAnimBoneTag                AliveSaddleTransferPromptBone;   // type:ENUM.32BIT
	enum eAnimBoneTag                _0x7D03D4D1;                     // type:ENUM.32BIT
	float                            _0xC9442F75;                     // type:FLOAT.0
	float                            SaddleTransferAgitationThreshold; // type:FLOAT.0
	bool                             ResetAgitationForSaddleTransfer; // type:BOOL.0
	bool                             _0xFDD77E56;                     // type:BOOL.0
	float                            _0xA1588781;                     // type:FLOAT.0
	string                           _0x2874F88F;                     // type:STRING.ATSTRING
	string                           _0x04349433;                     // type:STRING.ATSTRING
	string                           _0x19A93576;                     // type:STRING.ATSTRING
	string                           _0xB2342322;                     // type:STRING.ATSTRING
	struct _0x347CCD7F               LootForEquippedWeaponsAndAmmoTunables; // type:STRUCT.STRUCTURE
	bool                             AllowSimultaneousLootingAndCarrying; // type:BOOL.0
	bool                             PromptSizeScalingMoveBlendHack;  // type:BOOL.0
	bool                             StomachAlignmentUsesRootBoneOnly; // type:BOOL.0
	bool                             PromptRingToInterruptiblePointInsteadOfCriticalFrame; // type:BOOL.0
	bool                             DisableCompanionAnimalSkinning;  // type:BOOL.0
	bool                             LootabilityManagerEnabled;       // type:BOOL.0
	bool                             GesticularLootingEnabledInMP;    // type:BOOL.0
	bool                             EnableLocalOnlyObjectLooting;    // type:BOOL.0
	bool                             EnableNewAnimalSkinningInSP;     // type:BOOL.0
	bool                             EnableNewAnimalSkinningInMP;     // type:BOOL.0
	bool                             _0xD053A8A3;                     // type:BOOL.0
	bool                             _0x1071CC7C;                     // type:BOOL.0
	bool                             _0x01EF6497;                     // type:BOOL.0
	bool                             QuickHumanLootingEnabledInMP;    // type:BOOL.0
	bool                             QuickHumanRevivesEnabledInMP;    // type:BOOL.0
	string                           DefaultLootPromptHoldDuration;   // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultSaddleTransferHoldDuration; // type:STRING.ATNONFINALHASHSTRING
	string                           _0x00220794;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB8411682;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             ShowDisabledPromptsFromActiveTasks; // type:BOOL.0
	float                            ChanceUseNoLootAnimVariationIfTargetWasRobbedNoOffer; // type:FLOAT.0
	float                            ChanceUseNoLootAnimVariationIfTargetWasRobbedHasOffered; // type:FLOAT.0
	uchar                            _0xF0D7A907;                     // type:UCHAR.0
	uchar                            _0xA7857B09;                     // type:UCHAR.0
};

struct _0x33ECE203 : _0x1FB1BCEA
{
};

struct _0x34132473
{
	float                            _0x1D582362;                     // type:FLOAT.0
	float                            _0x709C3E7C;                     // type:FLOAT.0
	float                            _0xCC94F072;                     // type:FLOAT.0
	float                            _0x8A2C3853;                     // type:FLOAT.0
	float                            _0x3D93DBA7;                     // type:FLOAT.0
	float                            ExitVehicleBlendInDuration;      // type:FLOAT.0
};

struct _0x34238932 : _0x2F7DA38D
{
	enum _0x5A342E68                 part;                            // type:ENUM.32BIT
	vec3V                            impulse;                         // type:VEC3V.0
	vec3V                            _0x60B573CB;                     // type:VEC3V.0
	vec3V                            _0x0CF11FE8;                     // type:VEC3V.0
};

struct _0x34249CC9
{
	map<enum _0xE4221B43, struct _0x0CB533F6>     _0x2C5333C0;                     // type:MAP.ATBINARYMAP
	array<struct _0x2C417B5D>                     _0x253F209D;                     // type:ARRAY.ATARRAY
};

struct _0x342FF120
{
	float                            _0xFBEA0C66;                     // type:FLOAT.0
	float                            fStartStrength;                  // type:FLOAT.0
	float                            fMidStrength;                    // type:FLOAT.0
	float                            fEndStrength;                    // type:FLOAT.0
	float                            _0xFF545C8C;                     // type:FLOAT.0
	float                            _0x0EFEFBE1;                     // type:FLOAT.0
};

struct _0x343826DC
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x00D84D55>        Logic;                           // type:ARRAY.ATARRAY
	int                              _0xCA62C60E;                     // type:INT.0
};

struct _0x3446AF62 : camCinematicShotMetadata
{
	bool                             _0x21350F94;                     // type:BOOL.0
};

struct _0x344CA6CF
{
	struct void                      MeleeCombatData;                 // type:STRUCT.EXTERNAL_NAMED
	struct void                      GrappleCombatData;               // type:STRUCT.EXTERNAL_NAMED
};

struct _0x34552ABE : _0x0A510DA9
{
};

struct _0x34729F9F
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x4961A079>        Offsets;                         // type:ARRAY.ATARRAY
};

struct _0x34752707
{
	float                            _0x17C97B21;                     // type:FLOAT.0
	float                            MinSteerRate;                    // type:FLOAT.0
	float                            SteerRate;                       // type:FLOAT.0
	float                            _0x26194556;                     // type:FLOAT.0
	float                            SteerLimit;                      // type:FLOAT.0
	float                            _0x3976473A;                     // type:FLOAT.0
	float                            _0x3B407343;                     // type:FLOAT.0
	float                            _0x6C3EE49B;                     // type:FLOAT.0
	float                            _0x2B219D5C;                     // type:FLOAT.0
	float                            _0x80BA3839;                     // type:FLOAT.0
	float                            _0x7A37D934;                     // type:FLOAT.0
	float                            _0x36DEAFC6;                     // type:FLOAT.0
	string                           _0x2918150D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x359F3FA8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x57264CF4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC3629F99;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4B687986;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBF21FF15;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF1B13BF1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x40DA83D9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5C44560D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9EAD0D39;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC57A0ACD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x784A76D4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDD9AB7E4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x48A2ABB9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6CF617EA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5BE88E83;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3479C47A
{
	float                            MinAngle;                        // type:FLOAT.0
	float                            MaxAngle;                        // type:FLOAT.0
};

struct _0x347CCD7F
{
	float                            RandomChanceApplyLootForEquippedWeaponsAndAmmo; // type:FLOAT.0
	float                            MinRandomPercentageOfClipSizeForEquippedWeaponsAndAmmoLoot; // type:FLOAT.0
	float                            MaxRandomPercentageOfClipSizeForEquippedWeaponsAndAmmoLoot; // type:FLOAT.0
	int                              MinAmmoForLootClipSize;          // type:INT.0
	int                              MaxAmmoForLootClipSize;          // type:INT.0
	int                              MaxWeaponsToConsiderForEquippedWeaponsAndAmmoLoot; // type:INT.0
	array<struct _0x46D8BDDB>        SpecialVisibleSlotItems;         // type:ARRAY.ATARRAY
};

struct _0x348CACC0 : CTuning
{
	map<string, struct _0xA288A66E>     _0xB7705969;                     // type:MAP.ATBINARYMAP
	float                               _0xDBBBE5B0;                     // type:FLOAT.0
	float                               _0x84FBDD60;                     // type:FLOAT.0
	float                               _0xC26BC34C;                     // type:FLOAT.0
	float                               _0x2D581225;                     // type:FLOAT.0
	float                               _0x9967717D;                     // type:FLOAT.0
	float                               _0x8D3AE4C2;                     // type:FLOAT.0
	float                               _0x10217C63;                     // type:FLOAT.0
	float                               _0xD8BBA2FF;                     // type:FLOAT.0
	float                               _0xBA9A841D;                     // type:FLOAT.0
	float                               _0xAC91431D;                     // type:FLOAT.0
	float                               _0x600094D0;                     // type:FLOAT.0
	float                               _0xB276AFA5;                     // type:FLOAT.0
	float                               _0x816C497A;                     // type:FLOAT.0
	float                               _0x67DEB731;                     // type:FLOAT.0
	float                               _0x729A8FCE;                     // type:FLOAT.0
	float                               _0xC1E6F263;                     // type:FLOAT.0
	float                               _0xB0BB1081;                     // type:FLOAT.0
	float                               _0x9441D80E;                     // type:FLOAT.0
	float                               _0x71F2E2CB;                     // type:FLOAT.0
	uint                                _0x173A2240;                     // type:UINT.0
	uint                                _0x00E1D470;                     // type:UINT.0
	uint                                _0x12546019;                     // type:UINT.0
	uint                                _0xC1BB6D67;                     // type:UINT.0
	uint                                _0x29CE0C83;                     // type:UINT.0
	uint                                _0xCF14B290;                     // type:UINT.0
	uint                                _0xDB01E743;                     // type:UINT.0
};

struct _0x3495B069 : _0xE975B01D
{
	string                           _0x26EAD728;                     // type:STRING.ATNSHASHSTRING
};

struct _0x34AD1B0E : _0xF70F21F5
{
	bool                             value;                           // type:BOOL.0
	bool                             _0xBAC8E518;                     // type:BOOL.0
};

struct _0x34AF5250 : _0x8A0DC979
{
	enum _0x01D385E4                 area;                            // type:ENUM.32BIT
};

struct _0x34BD0436
{
	float                            _0x6F8437BD;                     // type:FLOAT.0
	float                            _0x62CF8C3A;                     // type:FLOAT.0
	float                            _0x5FE16475;                     // type:FLOAT.0
	float                            _0x6979844E;                     // type:FLOAT.0
	float                            _0xCC5DEAA3;                     // type:FLOAT.0
	float                            _0xD9637913;                     // type:FLOAT.0
};

struct _0x34BD518D
{
	string                           PedHash;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             OnlyIfLegendary;                 // type:BOOL.0
};

struct _0x34EFFC3D
{
	float                            TemperatureAtOneMeter;           // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
	float                            MaxTemperature;                  // type:FLOAT.0
};

struct _0x34F61687
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            ShakeAmplitude;                  // type:FLOAT.0
	float                            _0xA1D13E0E;                     // type:FLOAT.0
};

struct _0x350C8E74
{
	map<string, struct _0x743C6B11>        _0x11C5D2B2;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x141F4737>        _0xD71EF34B;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x67AC5BE4>        _0x21B2BE72;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x8A5DBDE0>        _0x20CFE411;                     // type:MAP.ATBINARYMAP
	map<string, struct COLLISIONPROBE>     _0x428CD7BE;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xC141262C>        _0x5FF121DA;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x7145E9ED>        _0x2C295EDC;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xFAC97A1B>        _0x11AFE1F2;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x942A35C1>        _0x93218B50;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x3070C110>        _0xAC229D42;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x18F3DC80>        _0x01CC4787;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xE04538FE>        _0x587FEDA9;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x900AEE8B>        _0xE6121F64;                     // type:MAP.ATBINARYMAP
};

struct _0x351E9485
{
	float                            _0x3B7F633B;                     // type:FLOAT.0
	float                            _0xBBB44E15;                     // type:FLOAT.0
	bool                             _0x14998CB9;                     // type:BOOL.0
};

struct _0x353D1F76 : _0xDBE512DA
{
};

struct _0x3558E773 : _0x0A510DA9
{
	int                              _0x25F678B3;                     // type:INT.0
	int                              _0x65FD2EC1;                     // type:INT.0
	array<string>                    Styles;                          // type:ARRAY.ATARRAY
};

struct _0x35594878 : _0x3AB6499E
{
	string                           EnvelopeRef;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             ShouldDuck;                      // type:BOOL.0
	float                            OrbitPitchOffsetWhenFullyDucked; // type:FLOAT.0
	float                            MaxDistanceToPersist;            // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	struct _0x0E5A5545               CapsuleSettings;                 // type:STRUCT.STRUCTURE
};

struct _0x355D2806 : _0x560C9F87
{
	string                           CarriedEntityEnterClipSetId;     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x35665B76
{
	string                           _0xCDC73768;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x38D98A71;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2C5DC122;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x357327B4 : CAICondition
{
};

struct _0x358A9ABA
{
	array<struct _0x7EF1A999>        AngledAreas;                     // type:ARRAY.ATARRAY
	array<struct _0x0F1B3487>        Spheres;                         // type:ARRAY.ATARRAY
};

struct _0x35ABC248
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct CEntityDef>         _0xD222611A;                     // type:ARRAY.ATARRAY
};

struct _0x35C61B7B : _0xDD140D06
{
	bool                             bValue;                          // type:BOOL.0
};

struct _0x35CBCCBF
{
	vec2                             _0x059E340A;                     // type:VECTOR2.0
	vec2                             _0x9ED5B3C1;                     // type:VECTOR2.0
	float                            _0xCE1F459F;                     // type:FLOAT.0
	float                            _0x8709910F;                     // type:FLOAT.0
};

struct _0x35CF1015
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Event;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x35FF3822
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum eBraveryFlags>       Flags;                           // type:BITSET.32BIT
	float                            TakedownProbability;             // type:FLOAT.0
	float                            _0x4EF94951;                     // type:FLOAT.0
	struct _0xD8D70658               ThreatResponseUnarmed;           // type:STRUCT.STRUCTURE
	struct _0xD8D70658               ThreatResponseMelee;             // type:STRUCT.STRUCTURE
	struct _0xD8D70658               ThreatResponseArmed;             // type:STRUCT.STRUCTURE
	struct _0xD8D70658               _0x41938FA3;                     // type:STRUCT.STRUCTURE
	struct _0x26CDBBD4               FleeDuringCombat;                // type:STRUCT.STRUCTURE
};

struct _0x35FFDDEE
{
	string                           CenterStyle;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD297A3AE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB7745D70;                     // type:STRING.ATNONFINALHASHSTRING
	string                           FreeCameraStyle;                 // type:STRING.ATNONFINALHASHSTRING
	string                           WantedBountyHunter;              // type:STRING.ATNONFINALHASHSTRING
	string                           WantedCop;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA5D0D5BB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           WantedRegular;                   // type:STRING.ATNONFINALHASHSTRING
	string                           WantedCopDog;                    // type:STRING.ATNONFINALHASHSTRING
	string                           WantedRadius;                    // type:STRING.ATNONFINALHASHSTRING
	string                           WantedEyewitness;                // type:STRING.ATNONFINALHASHSTRING
	string                           WantedState;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x90207439;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3577AC16;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC8E17771;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB42A9C56;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6F50FB51;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33A55D17;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3FEEF77D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB490F17A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCD8E6C60;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x57FF8C71;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC51073CD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC71AAC35;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x579EE4C6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5C037A3F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1A769E4B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1F32145F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           CivilianCombat;                  // type:STRING.ATNONFINALHASHSTRING
	string                           _0x96DB3194;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x564537E7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           PedRelationship;                 // type:STRING.ATNONFINALHASHSTRING
	string                           NetworkOtherPlayer;              // type:STRING.ATNONFINALHASHSTRING
	string                           PickupPlacement;                 // type:STRING.ATNONFINALHASHSTRING
	string                           TrainBookmark;                   // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1B1AC277;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE62051BF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x48BDE503;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF6258830;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x72B14C92;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1245E48A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x287A3282;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1ADA6C5F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCE9A66F1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2E26582E;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3603B2DE
{
	string                           _0xBEF65D54;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Strength;                        // type:FLOAT.0
	float                            Alpha;                           // type:FLOAT.0
	float                            HorizontalBlur;                  // type:FLOAT.0
	float                            VerticalBlur;                    // type:FLOAT.0
	int                              Quality;                         // type:INT.0
	bool                             _0x3C59E413;                     // type:BOOL.0
	bool                             Knockout;                        // type:BOOL.0
};

struct _0x362DF664 : CTuning
{
	float                            _0x44129368;                     // type:FLOAT.0
	float                            _0x44A86659;                     // type:FLOAT.0
	float                            _0x5CDA7422;                     // type:FLOAT.0
	float                            _0xC70FFCB8;                     // type:FLOAT.0
	float                            _0xF25B3E61;                     // type:FLOAT.0
	float                            _0x68D61C38;                     // type:FLOAT.0
	bool                             _0x3E796094;                     // type:BOOL.0
	int                              _0x4FC1E8CD;                     // type:INT.0
	bool                             _0x0008AA3D;                     // type:BOOL.0
	float                            _0xD57578AD;                     // type:FLOAT.0
	enum _0x0100F80E                 _0xF3A6E90E;                     // type:ENUM.32BIT
	float                            _0x75A73CDA;                     // type:FLOAT.0
	float                            _0x57892BD9;                     // type:FLOAT.0
	float                            _0x283C8450;                     // type:FLOAT.0
	float                            _0xB57666E2;                     // type:FLOAT.0
	float                            _0x70861B49;                     // type:FLOAT.0
	string                           _0x0D5ED60C;                     // type:STRING.ATSTRING
	string                           _0xF2064257;                     // type:STRING.ATSTRING
	string                           _0xD023C327;                     // type:STRING.ATSTRING
	string                           _0x58727D85;                     // type:STRING.ATSTRING
	string                           _0x815CF556;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xACA54353;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFE24EC06;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD7EA925B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8132B70F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x07F85271;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x71D6D796;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEBBF55D4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEB1188DC;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x12D73A64;                     // type:FLOAT.0
	float                            _0xFEF4A524;                     // type:FLOAT.0
	float                            _0x23E8908F;                     // type:FLOAT.0
	float                            _0xBEF55B78;                     // type:FLOAT.0
	float                            _0xDE49BFF2;                     // type:FLOAT.0
	float                            _0x3073D880;                     // type:FLOAT.0
	float                            _0x4DF2CDB7;                     // type:FLOAT.0
	enum LookIkTurnRate              LookIkTurnRate;                  // type:ENUM.32BIT
	enum LookIkBlendRate             _0xBBE587E5;                     // type:ENUM.32BIT
	enum LookIkBlendRate             _0x4018A744;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0x59E081B7;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0xE7B62194;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0x2FA055C0;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0x3C696934;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0xFC0A667A;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0xF0190B2D;                     // type:ENUM.32BIT
};

struct _0x363ECFB7 : _0x3AB6499E
{
	struct _0x43D72741               DefaultSettings;                 // type:STRUCT.STRUCTURE
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x8DA0353D;                     // type:FLOAT.0
	float                            _0x18A12470;                     // type:FLOAT.0
	float                            _0xEEE4F590;                     // type:FLOAT.0
	float                            _0x6816E826;                     // type:FLOAT.0
	enum _0x0100F80E                 _0x31E7B674;                     // type:ENUM.32BIT
};

struct _0x3656B3CA : _0x6002A167
{
};

struct _0x365A9C58 : _0x560C9F87
{
	string                           TargetBeingPickedUpClipSet;      // type:STRING.ATNONFINALHASHSTRING
	string                           TargetBeingPickedUpClipSetFemale; // type:STRING.ATNONFINALHASHSTRING
	struct _0x32048E07               SwimmingPickupData;              // type:STRUCT.STRUCTURE
	bitset<enum _0x3F36FB8D>         Flags;                           // type:BITSET.32BIT
	float                            MinDotFromWorldUp;               // type:FLOAT.0
	float                            DesiredTargetRoll;               // type:FLOAT.0
	float                            DesiredTargetFwdDeltaFromDirectFacing; // type:FLOAT.0
	string                           PickupTargetBlendOutSet;         // type:STRING.ATNONFINALHASHSTRING
	float                            RagdollToAnimatedBlendInDuration; // type:FLOAT.0
	float                            TargetMoverBlendDuration;        // type:FLOAT.0
	float                            SettleAttachmentInterpolationDurationAtEndOfPickup; // type:FLOAT.0
	float                            InterruptSettleAttachmentInterpolationDurationAtEndOfPickup; // type:FLOAT.0
	float                            PickupToCarriedBlendDuration;    // type:FLOAT.0
	float                            InterruptPickupToCarriedBlendDuration; // type:FLOAT.0
	string                           BreakoutFilter;                  // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultSatchelItemInfo;          // type:STRING.ATNONFINALHASHSTRING
	string                           OptionalAnimScene;               // type:STRING.ATNONFINALHASHSTRING
	string                           ChainedLootAction;               // type:STRING.ATNONFINALHASHSTRING
	enum _0x580314CC                 AttachSlot;                      // type:ENUM.32BIT
};

struct _0x365DA5C8
{
	string                           Name;                            // type:STRING.CONST_STRING
	struct _0x03AFFA1E               Tuning;                          // type:STRUCT.STRUCTURE
};

struct _0x3662AB96 : _0xDC10377E
{
	struct _0x92BDDB6F               _0x4CF7294C;                     // type:STRUCT.STRUCTURE
	vec2                             PitchLimits;                     // type:VECTOR2.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0xB75C5830;                     // type:FLOAT.0
	float                            RollSpringConstant;              // type:FLOAT.0
	float                            _0xD336CF47;                     // type:FLOAT.0
	vec2                             _0xE870FAE9;                     // type:VECTOR2.0
	vec2                             _0x9C521A5B;                     // type:VECTOR2.0
	vec2                             _0x4A748038;                     // type:VECTOR2.0
	vec2                             _0xA23E35CF;                     // type:VECTOR2.0
	vec2                             _0x98272BC0;                     // type:VECTOR2.0
};

struct _0x36638626 : _0xE453720A
{
	float                            left;                            // type:FLOAT.0
	float                            top;                             // type:FLOAT.0
};

struct _0x366485D5 : camBaseObjectMetadata
{
	float                            ZoomFactor;                      // type:FLOAT.0
};

struct _0x366A3EFB : _0xCDF97B9D
{
};

struct _0x367345E8 : CAICondition
{
};

struct _0x3687EBCB : uiScreenInputBehaviorBase
{
	string                           DataStore;                       // type:STRING.ATNSHASHSTRING
	array<string>                    _0x8F73CC30;                     // type:ARRAY.ATARRAY
	array<string>                    _0x760D3958;                     // type:ARRAY.ATARRAY
	array<string>                    _0x63B214A2;                     // type:ARRAY.ATARRAY
	array<string>                    _0x9164F007;                     // type:ARRAY.ATARRAY
	array<string>                    _0x013FCFBB;                     // type:ARRAY.ATARRAY
	array<string>                    _0x2FC9ACCE;                     // type:ARRAY.ATARRAY
	array<string>                    _0x1C68860C;                     // type:ARRAY.ATARRAY
	array<string>                    _0x4B2F6399;                     // type:ARRAY.ATARRAY
	array<string>                    _0xE80C9D4D;                     // type:ARRAY.ATARRAY
	array<string>                    _0x1E8B9366;                     // type:ARRAY.ATARRAY
	array<string>                    _0xFCA369DF;                     // type:ARRAY.ATARRAY
	array<string>                    _0x483A7FFD;                     // type:ARRAY.ATARRAY
	array<string>                    _0x6ED0DBF0;                     // type:ARRAY.ATARRAY
	array<string>                    _0x8809EF5E;                     // type:ARRAY.ATARRAY
	array<string>                    _0x928A5771;                     // type:ARRAY.ATARRAY
	array<string>                    _0xC2BBE141;                     // type:ARRAY.ATARRAY
	float                            _0xA7ED1BDE;                     // type:FLOAT.0
	float                            _0x6B4A3E03;                     // type:FLOAT.0
	float                            _0x5944EFDA;                     // type:FLOAT.0
	float                            _0x673261B0;                     // type:FLOAT.0
	float                            _0x4913309A;                     // type:FLOAT.0
	float                            _0x30A10470;                     // type:FLOAT.0
	uchar                            _0xF9E95E35;                     // type:UCHAR.0
	uchar                            _0x794C1CF1;                     // type:UCHAR.0
	float                            _0xB7B5B71B;                     // type:FLOAT.0
	float                            _0xDA2CF724;                     // type:FLOAT.0
	float                            _0x9CB1AE6F;                     // type:FLOAT.0
	float                            _0x9F639979;                     // type:FLOAT.0
};

struct _0x3694A60D : _0x8A0DC979
{
};

struct _0x36B1BB80 : _0xE453720A
{
	float                            startAngle;                      // type:FLOAT.0
	float                            endAngle;                        // type:FLOAT.0
	enum _0x1449D153                 radialFlowDirection;             // type:ENUM.32BIT
	array<struct _0xAB0709B4>        sectors;                         // type:ARRAY.ATARRAY
};

struct _0x36C5595A : CTuning
{
	float                            Phase;                           // type:FLOAT.0
	float                            Period;                          // type:FLOAT.0
	float                            Constant;                        // type:FLOAT.0
	float                            Amplitude;                       // type:FLOAT.0
	bool                             _0x362A1BA3;                     // type:BOOL.0
	bool                             Enabled;                         // type:BOOL.0
	struct _0x7A0EA7A4               _0x97CF85D8;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0xCB767FC0;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0x04A90F64;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0x83FDD788;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0x06BCEC58;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0xC8A98483;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0x34891CE5;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0x9D8DEF01;                     // type:STRUCT.STRUCTURE
	struct _0x7A0EA7A4               _0x01EF3B75;                     // type:STRUCT.STRUCTURE
	float                            _0x804C4B5D;                     // type:FLOAT.0
	float                            _0x35FA9B5F;                     // type:FLOAT.0
};

struct _0x36E8E31F
{
	struct _0x04B31BA6                  ValidityConditions;              // type:STRUCT.STRUCTURE
	struct _0x04B31BA6                  TerminationConditions;           // type:STRUCT.STRUCTURE
	map<string, struct _0xDF4CA4D6>     AllowedPointsOfInterest;         // type:MAP.ATBINARYMAP
	struct _0xE0141974                  DefaultWeights;                  // type:STRUCT.STRUCTURE
	struct _0xCC17C467                  _0xDA878559;                     // type:STRUCT.STRUCTURE
	float                               SearchRadius;                    // type:FLOAT.0
	float                               VisitRadius;                     // type:FLOAT.0
	float                               MinPerimeterRadius;              // type:FLOAT.0
	float                               MaxPerimeterRadius;              // type:FLOAT.0
	float                               EvasionTime;                     // type:FLOAT.0
	float                               PlayerHorseWeight;               // type:FLOAT.0
	bool                                UpdateCenterWithNoMoreVisitablePOIs; // type:BOOL.0
	string                              NextSituation;                   // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xBA752F95>            Flags;                           // type:BITSET.8BIT
};

struct _0x36EC4E5D
{
	uint64                           _0x42BB6218;                     // type:UINT64.0
	uint                             nodeInfo;                        // type:UINT.0
	uint                             padding;                         // type:UINT.0
};

struct _0x36ED6FB6 : _0x8A0DC979
{
	enum _0x4F69766B                 _0x7D366DAA;                     // type:ENUM.32BIT
	bool                             restoreOnExit;                   // type:BOOL.0
};

struct _0x36EECFB6 : _0x2F7DA38D
{
	struct _0xED16C5B0               attachEntity;                    // type:STRUCT.STRUCTURE
	vec3V                            attachOffset;                    // type:VEC3V.0
	vec4V                            _0xF0B2D799;                     // type:VEC4V.0
	bool                             _0x42598F73;                     // type:BOOL.0
	enum eAnimBoneTag                attachBone;                      // type:ENUM.32BIT
};

struct _0x36F5144A
{
	float                            Limit;                           // type:FLOAT.0
	float                            Buffer;                          // type:FLOAT.0
	float                            MBR;                             // type:FLOAT.0
	bool                             bActivationOnlyLimit;            // type:BOOL.0
	bool                             bActive;                         // type:BOOL.0
};

struct _0x37010A2F : _0x0A510DA9
{
	string                           ContentType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3707EB79 : uiBehaviorStyledStateBase
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x3712E192
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3734480F : _0xE9505B40
{
	float                            Value;                           // type:FLOAT.0
};

struct _0x37372784 : _0x0A510DA9
{
};

struct _0x37603C00
{
	string                           BaseAmbientModelSet;             // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x39CBDF83>        ModelVariations;                 // type:ARRAY.ATARRAY
};

struct _0x3763775B
{
	bool                             enabled;                         // type:BOOL.0
	float                            timeScaleMultiplier;             // type:FLOAT.0
};

struct _0x3766210E
{
	vec3                             _0x16F654BE;                     // type:VECTOR3.0
	vec3                             _0x7A783C68;                     // type:VECTOR3.0
};

struct _0x3769D6BC
{
	string                           TextureDictionary;               // type:STRING.ATNONFINALHASHSTRING
	string                           TextureName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           LocText;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3777ACE3
{
	float                            _0x8D672DE0;                     // type:FLOAT.0
	float                            _0x5B4C1089;                     // type:FLOAT.0
	float                            _0x65DF4003;                     // type:FLOAT.0
	float                            _0x79C2D12C;                     // type:FLOAT.0
};

struct _0x377BA036
{
	string                           OtherRelGroupName;               // type:STRING.ATNONFINALHASHSTRING
	enum _0x8F0F2387                 RelationshipType;                // type:ENUM.32BIT
};

struct _0x3795142C : _0xAEC2EF8C
{
	string                                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                                           _0x5ADF6213;                     // type:STRING.ATNONFINALHASHSTRING
	string                                           MotionSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                                           Motion;                          // type:STRING.ATNONFINALHASHSTRING
	enum _0x334EF08A                                 _0x0DF23B04;                     // type:ENUM.32BIT
	enum _0xC1BFFC25                                 _0xECE11AB6;                     // type:ENUM.32BIT
	enum _0xC6AB2DAA                                 PreferredGait;                   // type:ENUM.32BIT
	enum _0xC6AB2DAA                                 _0x8D810066;                     // type:ENUM.32BIT
	enum _0xC6AB2DAA                                 _0xE1619970;                     // type:ENUM.32BIT
	enum _0xC6AB2DAA                                 CurrentGait;                     // type:ENUM.32BIT
	enum _0xC6AB2DAA                                 MinCurrentGait;                  // type:ENUM.32BIT
	enum _0xC6AB2DAA                                 MaxCurrentGait;                  // type:ENUM.32BIT
	array<struct _0xFA4D1997>                        Frames;                          // type:ARRAY.ATARRAY
	array<struct _0x5867C8DD>                        Clips;                           // type:ARRAY.ATARRAY
	array<struct _0xCD19E20D>                        RandomClips;                     // type:ARRAY.ATARRAY
	array<struct _0xE936B765>                        Motions;                         // type:ARRAY.ATARRAY
	array<struct _0x19A45E4A>                        AdditionalClipSets;              // type:ARRAY.ATARRAY
	array<struct _0xFDDEC5A2>                        _0x8FCE977F;                     // type:ARRAY.ATARRAY
	array<struct _0x5828D5EA>                        Values;                          // type:ARRAY.ATARRAY
	array<string>                                    _0x9E81F062;                     // type:ARRAY.ATARRAY
	array<string>                                    _0xE39EAF35;                     // type:ARRAY.ATARRAY
	array<struct _0x2D71ECB1>                        _0xB3753DB8;                     // type:ARRAY.ATARRAY
	array<string>                                    FlagValues;                      // type:ARRAY.ATARRAY
	array<struct _0xB12740AC>                        _0x0687BD64;                     // type:ARRAY.ATARRAY
	array<struct _0x50FF8908>                        _0x245C731A;                     // type:ARRAY.ATARRAY
	array<struct _0xCD3BDF2E>                        _0x96EC5096;                     // type:ARRAY.ATARRAY
	array<struct Loco__GameDrivenFloatReference>     FloatReferences;                 // type:ARRAY.ATARRAY
	array<struct _0x3AB88B1D>                        _0x3A34995A;                     // type:ARRAY.ATARRAY
	array<struct _0x0FC8022E>                        BlackboardHashValues;            // type:ARRAY.ATARRAY
	array<struct _0x73FA5646>                        BlackboardBoolValues;            // type:ARRAY.ATARRAY
	bool                                             _0x9BC17D6F;                     // type:BOOL.0
	bool                                             _0xCD28F861;                     // type:BOOL.0
	bool                                             _0xA685F1C6;                     // type:BOOL.0
	bool                                             _0xB900A696;                     // type:BOOL.0
	bool                                             _0x0BAC6CE2;                     // type:BOOL.0
	bool                                             _0x0F87DDF0;                     // type:BOOL.0
	bool                                             _0xB6A057D8;                     // type:BOOL.0
	bool                                             _0x284590AD;                     // type:BOOL.0
	bool                                             _0xA53CED7E;                     // type:BOOL.0
	bool                                             _0xE5BE2227;                     // type:BOOL.0
	bool                                             _0xDBC519E4;                     // type:BOOL.0
	bool                                             _0x0F7C8D84;                     // type:BOOL.0
	float                                            _0xCA6A3A0A;                     // type:FLOAT.0
	float                                            _0x2BFD24A8;                     // type:FLOAT.0
	float                                            _0xA3E98D0A;                     // type:FLOAT.0
	float                                            _0x8AE41494;                     // type:FLOAT.0
	bool                                             _0x3C549324;                     // type:BOOL.0
};

struct _0x37996FF5
{
	array<struct _0x37996FF5>           Children;                        // type:ARRAY.ATARRAY
	string                              ID;                              // type:STRING.ATNONFINALHASHSTRING
	struct _0x8A0DC979                  State;                           // type:STRUCT.POINTER
	map<string, struct _0xE521CAA8>     LinkMap;                         // type:MAP.ATMAP
	array<string>                       AutoHandleIDs;                   // type:ARRAY.ATARRAY
};

struct _0x37A2DDE9 : CTuning
{
	struct naSpeechEventTypeBatchRequestParams     _0x4F6C4669;                     // type:STRUCT.STRUCTURE
};

struct _0x37ADF737
{
	string                           ModelName;                       // type:STRING.CONST_STRING
	string                           TuningName;                      // type:STRING.CONST_STRING
};

struct _0x37C5E2F7 : camBaseCameraMetadata
{
	vec3                             StartPosition;                   // type:VECTOR3.0
	float                            _0xB7B5B71B;                     // type:FLOAT.0
	float                            _0x80D9B564;                     // type:FLOAT.0
	float                            PanSpeed;                        // type:FLOAT.0
	float                            _0x9CB1AE6F;                     // type:FLOAT.0
	float                            _0x81CFE0B5;                     // type:FLOAT.0
	float                            _0x8815940C;                     // type:FLOAT.0
	float                            _0x149641BF;                     // type:FLOAT.0
	float                            _0x96E960C1;                     // type:FLOAT.0
	float                            _0xDB7014C1;                     // type:FLOAT.0
	float                            ForwardAcceleration;             // type:FLOAT.0
	float                            StrafeAcceleration;              // type:FLOAT.0
	float                            VerticalAcceleration;            // type:FLOAT.0
	float                            _0x19ABF108;                     // type:FLOAT.0
	float                            _0x89F39815;                     // type:FLOAT.0
	float                            HeadingAcceleration;             // type:FLOAT.0
	float                            PitchAcceleration;               // type:FLOAT.0
	float                            RollAcceleration;                // type:FLOAT.0
	float                            _0x3B1D1624;                     // type:FLOAT.0
	float                            FovAcceleration;                 // type:FLOAT.0
	float                            _0x87AFAFDB;                     // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	float                            _0x5246DCF8;                     // type:FLOAT.0
	float                            _0xC508AEF8;                     // type:FLOAT.0
	bool                             _0x198A97D1;                     // type:BOOL.0
};

struct _0x37EDA489
{
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
	string                           Template;                        // type:STRING.ATNONFINALHASHSTRING
	struct void                      VariationSetup;                  // type:STRUCT.EXTERNAL_NAMED
};

struct _0x37F22DD2
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             Value;                           // type:UINT.0
};

struct _0x3801A7E6 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x381A30C7
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<enum _0xBEEA6142>          eBones;                          // type:ARRAY.ATARRAY
	bitset<enum _0x9AE3F8CA>         typeFlags;                       // type:BITSET.32BIT
	bitset<enum _0x9AE3F8CA>         includeFlags;                    // type:BITSET.32BIT
};

struct _0x381B0EA1
{
	string                           name;                            // type:STRING.ATSTRING
	uint                             _0x06B7E180;                     // type:UINT.0
	uint                             _0xF1065C87;                     // type:UINT.0
	uint                             _0xEEDB8717;                     // type:UINT.0
	float                            _0x2038909F;                     // type:FLOAT.0
	uint                             _0x2B1A759E;                     // type:UINT.0
	uint                             _0x2A1DE097;                     // type:UINT.0
	uint                             _0x63AB21CF;                     // type:UINT.0
	uint                             _0x5F2B1A8D;                     // type:UINT.0
	float                            _0x07219132;                     // type:FLOAT.0
	uint                             _0x9159791F;                     // type:UINT.0
};

struct _0x382A9AB7
{
	map<uint, float>                 Times;                           // type:MAP.ATMAP
};

struct _0x38397E21 : _0x8A0DC979
{
	string                           Animation;                       // type:STRING.ATNONFINALHASHSTRING
	struct _0x4A7AD954               _0xF5E9145B;                     // type:STRUCT.STRUCTURE
	bool                             _0xB559ED9D;                     // type:BOOL.0
};

struct _0x384A2F4D
{
	float                            minShardLife;                    // type:FLOAT.0
	float                            maxShardLife;                    // type:FLOAT.0
	float                            physicsImpulseRatio;             // type:FLOAT.0
	float                            simplePhysicsLinearImpulseScale; // type:FLOAT.0
	float                            simplePhysicsAngularImpulseScale; // type:FLOAT.0
};

struct _0x384A978A : _0xC2A67265
{
	enum eRadarMode                  Value;                           // type:ENUM.32BIT
};

struct _0x3855140D : _0x0A510DA9
{
	uint                             _0xB456A48A;                     // type:UINT.0
	uint                             _0x807B46CF;                     // type:UINT.0
	enum _0x489DA4C6                 _0xD9FA7A36;                     // type:ENUM.32BIT
	bool                             OnMount;                         // type:BOOL.0
};

struct _0x385D81BC : CTuning
{
	float                            _0x6002897D;                     // type:FLOAT.0
	float                            _0xF495F2F5;                     // type:FLOAT.0
	float                            _0x89298114;                     // type:FLOAT.0
	float                            _0x88B47A62;                     // type:FLOAT.0
	float                            _0x916DF469;                     // type:FLOAT.0
	float                            _0x91EB357C;                     // type:FLOAT.0
	float                            _0x021FD190;                     // type:FLOAT.0
	string                           _0x2929A05B;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xAF5824FE;                     // type:UINT.0
	uint                             _0xC9CCC33F;                     // type:UINT.0
	uint                             _0x81128DBE;                     // type:UINT.0
	uint                             _0x4188101C;                     // type:UINT.0
	uint                             _0xE6603EE6;                     // type:UINT.0
	uint                             _0x8BD217D4;                     // type:UINT.0
};

struct _0x386508B9 : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	enum _0x37A82382                 minimum;                         // type:ENUM.32BIT
	enum _0x37A82382                 maximum;                         // type:ENUM.32BIT
	enum _0x37A82382                 default;                         // type:ENUM.32BIT
};

struct _0x38722318 : _0x0A510DA9
{
};

struct _0x38872D1B
{
	float                            _0x68D744FC;                     // type:FLOAT.0
	float                            _0x3CFFEBCD;                     // type:FLOAT.0
	float                            _0x64831807;                     // type:FLOAT.0
	float                            _0x9D7D46B9;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xE904DF76;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xC3B9BA5F;                     // type:ENUM.32BIT
};

struct _0x38A9B273 : _0x3AB6499E
{
	struct _0xE5F4E230               _0xA41A3772;                     // type:STRUCT.STRUCTURE
	string                           _0xC607587A;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xCBF3D6F1;                     // type:BOOL.0
	float                            _0x9A1D5E62;                     // type:FLOAT.0
};

struct _0x38B42565 : CAICondition
{
	float                            Range;                           // type:FLOAT.0
};

struct _0x38CD014E : CAICondition
{
	struct void                      PropModelSet;                    // type:STRUCT.EXTERNAL_NAMED
};

struct _0x38D1DD83
{
	string                               _0x7EFFBD94;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct CAICondition>     Conditions;                      // type:MAP.ATBINARYMAP
	map<string, string>                  Hashes;                          // type:MAP.ATBINARYMAP
};

struct _0x38D781F8 : _0x5278AC0B
{
};

struct _0x38E66E2A : CTuning
{
	float                            _0x8239A682;                     // type:FLOAT.0
	float                            AmbientEventLifetime;            // type:FLOAT.0
	float                            _0x342B64D9;                     // type:FLOAT.0
	enum AmbientEventType            AmbientEventType;                // type:ENUM.32BIT
};

struct _0x38FAF9C1 : _0x3795142C
{
};

struct _0x38FBA6A5 : _0x22B199F9
{
	struct _0x77CA3522               Audio;                           // type:STRUCT.STRUCTURE
};

struct _0x39003CBD : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x391B67CB
{
	string                           DefaultBlip;                     // type:STRING.ATNONFINALHASHSTRING
	string                           EnemyBlip;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ObjectiveBlip;                   // type:STRING.ATNONFINALHASHSTRING
	string                           LootedModifier;                  // type:STRING.ATNONFINALHASHSTRING
	string                           LegendaryModifier;               // type:STRING.ATNONFINALHASHSTRING
	string                           DownedModifier;                  // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xAD2E6A89>         Flags;                           // type:BITSET.32BIT
};

struct _0x3926ED21 : _0xFABD9DF5
{
};

struct _0x393B9BF2
{
};

struct _0x39417DBD
{
	float                            DecayRate;                       // type:FLOAT.0
	float                            DefaultState;                    // type:FLOAT.0
	float                            StartingStateValueMin;           // type:FLOAT.0
	float                            StartingStateValueMax;           // type:FLOAT.0
	float                            MinTimeBeforeDecayAfterStateChange; // type:FLOAT.0
	enum _0x08277EA6                 MotivationType;                  // type:ENUM.32BIT
	bool                             Enabled;                         // type:BOOL.0
	bool                             IsAlerted;                       // type:BOOL.0
};

struct _0x394620FE
{
	float                            MinSpeed;                        // type:FLOAT.0
	float                            MinTargetOffsetX;                // type:FLOAT.0
	float                            MaxTargetOffsetX;                // type:FLOAT.0
	float                            MinTargetOffsetY;                // type:FLOAT.0
	float                            MaxTargetOffsetY;                // type:FLOAT.0
	float                            MinTargetOffsetZ;                // type:FLOAT.0
	float                            MaxTargetOffsetZ;                // type:FLOAT.0
	float                            MinTargetOffsetZ_TargetInAir;    // type:FLOAT.0
	float                            MaxTargetOffsetZ_TargetInAir;    // type:FLOAT.0
};

struct _0x396E4048
{
	enum _0x3EC993CB                 Type;                            // type:ENUM.32BIT
	vec3V                            Point;                           // type:VEC3V.0
	string                           _0xE82A5BB5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x162B14BC;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x0100F80E                 _0x4EEED54E;                     // type:ENUM.32BIT
	float                            _0x32BAAB21;                     // type:FLOAT.0
	bool                             _0x021A335F;                     // type:BOOL.0
	bool                             _0xE2B139B5;                     // type:BOOL.0
	bool                             _0x11669D17;                     // type:BOOL.0
	bool                             _0xF1A529BB;                     // type:BOOL.0
	bool                             _0x8C80BBCC;                     // type:BOOL.0
	float                            _0xB60E2D1E;                     // type:FLOAT.0
	float                            _0x08FF92D0;                     // type:FLOAT.0
	float                            _0x2B94A50E;                     // type:FLOAT.0
	float                            _0x203B086D;                     // type:FLOAT.0
};

struct _0x398BD84E
{
	array<uint>                      _0x510E9D3C;                     // type:ARRAY.ATARRAY
};

struct _0x39A9385D : _0x76F13DAD
{
	struct _0x17206478               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x39CBDF83
{
	uchar                            Component;                       // type:UCHAR.0
	uint                             DrawableId;                      // type:UINT.0
	uchar                            MinWantedLevel;                  // type:UCHAR.0
	float                            Armour;                          // type:FLOAT.0
};

struct _0x39D67EE9 : _0x3AB6499E
{
	uint                             _0x9E6BD2B9;                     // type:UINT.0
	uint                             LookBehindOutroTimeMS;           // type:UINT.0
};

struct _0x39D72BDA
{
	string                           FilePath;                        // type:STRING.ATSTRING
	enum _0x0C068FCA                 OrderType;                       // type:ENUM.32BIT
};

struct _0x39DE799A : _0x393B9BF2
{
	bitset<enum _0x3BBD5C2E>         SupportFlags;                    // type:BITSET.8BIT
};

struct _0x39FFA5BC : _0x2F7DA38D
{
	string                           oneShot;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3A04755E
{
	array<struct CSceneTerrainAnalyzerMgrDataInstance>     _0xC8A12BAA;                     // type:ARRAY.ATARRAY
};

struct _0x3A05C551
{
	struct _0xC9C5A880               _0x8B428128;                     // type:STRUCT.STRUCTURE
	struct _0xC9C5A880               _0xAB4715A6;                     // type:STRUCT.STRUCTURE
	struct _0xC9C5A880               _0x06EE7E60;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               _0xBA0C5A3E;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               _0x8523883F;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               HeightLimits;                    // type:STRUCT.STRUCTURE
};

struct _0x3A06DD1B
{
	string                           _0x9AC71C4E;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xBEEA6142                 _0xA89A7CD6;                     // type:ENUM.32BIT
	vec3                             _0x03F934E6;                     // type:VECTOR3.0
	int                              probability;                     // type:INT.0
};

struct _0x3A0E6260
{
	struct _0x4365821B               _0x66CD18D1;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               IsVisible;                       // type:STRUCT.STRUCTURE
};

struct _0x3A12D2F5 : _0xC2A67265
{
	bool                             Value;                           // type:BOOL.0
};

struct _0x3A2B2588 : _0xDD140D06
{
	int                              _0xF5264D00;                     // type:INT.0
};

struct _0x3A636087
{
	string                           CombatSpec;                      // type:STRING.ATNONFINALHASHSTRING
	enum DispatchType                DispatchType;                    // type:ENUM.32BIT
	string                           VehicleSet;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3A6C3BC6
{
	bool                             _0x0DD653A4;                     // type:BOOL.0
	bitset<enum _0x5C3B2E01>         _0x98AEE467;                     // type:BITSET.32BIT
	bitset<enum _0x42338022>         Flags;                           // type:BITSET.16BIT
	bitset<enum _0x42338022>         _0x275DFFE0;                     // type:BITSET.16BIT
	bitset<enum _0x42338022>         RequiredFlags;                   // type:BITSET.16BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0x3A7DEAD3
{
	uint                             _0x9EAE8131;                     // type:UINT.0
	uint                             _0x42DB7B3A;                     // type:UINT.0
	uint                             _0xE55EEA10;                     // type:UINT.0
	uint                             _0x5B4E200F;                     // type:UINT.0
};

struct _0x3A886547
{
	float                            WaterMinSpeedPercentageModifier; // type:FLOAT.0
	float                            WaterMaxSpeedPercentageModifier; // type:FLOAT.0
	float                            SwampMinSpeedPercentageModifier; // type:FLOAT.0
	float                            SwampMaxSpeedPercentageModifier; // type:FLOAT.0
	float                            SnowMinSpeedPercentageModifier;  // type:FLOAT.0
	float                            SnowMaxSpeedPercentageModifier;  // type:FLOAT.0
	float                            AscentSlopeMinSpeedPercentageModifier; // type:FLOAT.0
	float                            AscentSlopeMaxSpeedPercentageModifier; // type:FLOAT.0
	float                            DescentSlopeMinSpeedPercentageModifier; // type:FLOAT.0
	float                            DescentSlopeMaxSpeedPercentageModifier; // type:FLOAT.0
	float                            CarryWeightMinSpeedPercentageModifier; // type:FLOAT.0
	float                            CarryWeightMaxSpeedPercentageModifier; // type:FLOAT.0
};

struct _0x3A89BDEB : _0x80456568
{
	float                            RHS;                             // type:FLOAT.0
};

struct _0x3A94D7F3
{
	struct _0xC09F2F8B               swimming;                        // type:STRUCT.STRUCTURE
	struct _0x8BFAE6B4               onFoot;                          // type:STRUCT.STRUCTURE
};

struct _0x3A98C5F0
{
	bool                             Enabled;                         // type:BOOL.0
	enum _0x9B2DCF16                 _0x9B2DCF16;                     // type:ENUM.32BIT
	float                            _0xD1D3C28A;                     // type:FLOAT.0
	bool                             _0x4572D77D;                     // type:BOOL.0
	enum _0xC5A3EDFE                 _0x3B8210B4;                     // type:ENUM.32BIT
	bool                             _0xA5F1CA76;                     // type:BOOL.0
	struct _0x8F202515               _0xE85BFFC6;                     // type:STRUCT.STRUCTURE
	bool                             _0x310426EE;                     // type:BOOL.0
	bool                             _0xF9980E6C;                     // type:BOOL.0
	float                            _0x519776D9;                     // type:FLOAT.0
	float                            _0x32175735;                     // type:FLOAT.0
	uint                             _0xCC02E22B;                     // type:UINT.1
	bool                             _0x8A9A6E46;                     // type:BOOL.0
	enum _0xB341CDC6                 BlurType;                        // type:ENUM.32BIT
	struct _0xB7AA21E0               _0x86714A73;                     // type:STRUCT.STRUCTURE
	enum _0x4D6E849B                 _0xFA33A4C7;                     // type:ENUM.32BIT
	float                            _0x79A017C9;                     // type:FLOAT.0
};

struct _0x3A9F6599 : SaveChallengeGoalParamBase
{
	struct SaveChallengeGoalParamBase     _0xB7440B46;                     // type:STRUCT.POINTER
	bool                                  isComplete;                      // type:BOOL.0
	bool                                  hasFailed;                       // type:BOOL.0
	bool                                  _0x0CC33DAB;                     // type:BOOL.0
	bool                                  _0xBD9582BA;                     // type:BOOL.0
};

struct _0x3AA0A99B
{
	string                           fluidComponentBoneName;          // type:STRING.ATSTRING
	string                           fluidLevelBoneName;              // type:STRING.ATSTRING
	float                            minImpulse;                      // type:FLOAT.0
	float                            minMass;                         // type:FLOAT.0
	int                              shapeType;                       // type:INT.0
	enum _0x57F00EED                 liquidType;                      // type:ENUM.32BIT
};

struct _0x3AB6499E : camBaseObjectMetadata
{
};

struct _0x3AB88B1D
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            Value;                           // type:FLOAT.0
	int                              Lifetime;                        // type:INT.0
};

struct _0x3ABDED0D : camBaseObjectMetadata
{
	bitset<enum _0xF945C864>         _0x63DB1B2A;                     // type:BITSET.8BIT
	bitset<enum _0x8B3E29A1>         RequestType;                     // type:BITSET.32BIT
	uint                             Priority;                        // type:UINT.0
	struct _0x1FB30285               _0xC3764FDF;                     // type:STRUCT.STRUCTURE
};

struct _0x3ACE1FB6
{
	float                            _0x13B63049;                     // type:FLOAT.0
	float                            ReflectionLodRangeStart;         // type:FLOAT.0
	float                            ReflectionLodRangeEnd;           // type:FLOAT.0
	float                            ReflectionSLodRangeStart;        // type:FLOAT.0
	float                            ReflectionSLodRangeEnd;          // type:FLOAT.0
	float                            _0xB254D391;                     // type:FLOAT.0
	float                            _0xA62C711C;                     // type:FLOAT.0
	float                            LodMultLod;                      // type:FLOAT.0
	float                            LodMultSLod1;                    // type:FLOAT.0
	float                            LodMultSLod2;                    // type:FLOAT.0
	float                            LodMultSLod3;                    // type:FLOAT.0
	float                            LodMultSLod4;                    // type:FLOAT.0
	float                            WaterReflectionFarClip;          // type:FLOAT.0
};

struct _0x3AD3D6F0 : _0xB88D6BEE
{
	struct _0x43B62543               Event;                           // type:STRUCT.STRUCTURE
};

struct _0x3AD7BA05
{
	float                            _0x787BBD85;                     // type:FLOAT.0
	float                            _0x5F0C7C3F;                     // type:FLOAT.0
	float                            _0xC8461170;                     // type:FLOAT.0
	float                            _0x528B3642;                     // type:FLOAT.0
	float                            _0x355A10EB;                     // type:FLOAT.0
	float                            _0xCAB66710;                     // type:FLOAT.0
	struct _0x8998E492               _0xCAE7FD15;                     // type:STRUCT.STRUCTURE
	struct _0x8998E492               _0xFBD63CFD;                     // type:STRUCT.STRUCTURE
	float                            _0x1733E53F;                     // type:FLOAT.0
	struct _0x2ABAF4E0               _0x7E5ED999;                     // type:STRUCT.STRUCTURE
	struct _0x2ABAF4E0               _0x5379DF2A;                     // type:STRUCT.STRUCTURE
	float                            _0x9F170021;                     // type:FLOAT.0
	float                            _0x7CAD4CD7;                     // type:FLOAT.0
	float                            _0x40495448;                     // type:FLOAT.0
	uint                             _0xDDFBFB57;                     // type:UINT.0
	array<struct _0xBB6023D6>        _0xBE811407;                     // type:ARRAY.ATARRAY
	array<struct _0xA8C4C75E>        _0x62F1B533;                     // type:ARRAY.ATARRAY
	float                            _0x24A62AD2;                     // type:FLOAT.0
	float                            _0xB9182E49;                     // type:FLOAT.0
	float                            _0xA57BF808;                     // type:FLOAT.0
	bool                             _0x197DAE32;                     // type:BOOL.0
	bool                             _0x48722BC7;                     // type:BOOL.0
};

struct _0x3AE4B192
{
	array<struct _0xC46F7DD8>        schedules;                       // type:ARRAY.ATARRAY
};

struct _0x3AF315CA : _0x3795142C
{
};

struct _0x3B029300 : CTuning
{
	uint                             _0x3AEDEEC4;                     // type:UINT.0
};

struct _0x3B063953 : _0x8A0DC979
{
};

struct _0x3B0D96EC : _0x11AD3051
{
	struct _0xED16C5B0               entity;                          // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                boneId;                          // type:ENUM.32BIT
	vec3V                            offset;                          // type:VEC3V.0
	float                            _0x1807E5A8;                     // type:FLOAT.0
	bool                             _0x6A2D3CA6;                     // type:BOOL.0
	bool                             _0x88AF0592;                     // type:BOOL.0
};

struct _0x3B149A98 : CAICondition
{
	float                            Time;                            // type:FLOAT.0
};

struct _0x3B2CFD66 : _0x8EDEB4E3
{
	array<enum _0x5705A365>          Sources;                         // type:ARRAY.ATARRAY
};

struct _0x3B34D3BB
{
	array<struct _0x2E9A2CFB>        ArrayOfMaximumTextLines;         // type:ARRAY.ATARRAY
};

struct _0x3B3AE406 : SavegameInventoryItem
{
	string                            Name;                            // type:STRING.MEMBER
	int                               Bitfield;                        // type:INT.0
	int                               BondingXp;                       // type:INT.0
	int                               Dirty;                           // type:INT.0
	int                               Hungry;                          // type:INT.0
	array<struct _0x9C16E5DF, 13>     BondingEvents;                   // type:ARRAY.MEMBER
};

struct _0x3B3B133E
{
};

struct _0x3B3C2665
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             DebugColor;                      // type:UINT.1
	array<string>                    PhysicsMaterials;                // type:ARRAY.ATARRAY
	float                            HeightScaleMin;                  // type:FLOAT.0
	float                            HeightScaleMax;                  // type:FLOAT.0
	float                            BumpMapBumpinessScale;           // type:FLOAT.0
	float                            BoneDepthScaleMin;               // type:FLOAT.0
	float                            BoneDepthScaleMax;               // type:FLOAT.0
	float                            TrailHeightBiasMin;              // type:FLOAT.0
	float                            TrailHeightBiasMax;              // type:FLOAT.0
	float                            FadeBlurMin;                     // type:FLOAT.0
	float                            FadeBlurMax;                     // type:FLOAT.0
	float                            FadeMin;                         // type:FLOAT.0
	float                            FadeMax;                         // type:FLOAT.0
	float                            DepthShrinkScaleMin;             // type:FLOAT.0
	float                            DepthShrinkScaleMax;             // type:FLOAT.0
	float                            DeadBoneScaleMin;                // type:FLOAT.0
	float                            DeadBoneScaleMax;                // type:FLOAT.0
	float                            BlurFactorMin;                   // type:FLOAT.0
	float                            BlurFactorMax;                   // type:FLOAT.0
	float                            BumpMapTexScale;                 // type:FLOAT.0
	float                            MinViscosityDepth;               // type:FLOAT.0
	float                            MaxViscosityDepth;               // type:FLOAT.0
	float                            NormalScale;                     // type:FLOAT.0
	float                            BermHeight;                      // type:FLOAT.0
	float                            BermBoneExpansionScale;          // type:FLOAT.0
	float                            BermHeightScaleAdjust;           // type:FLOAT.0
	float                            FlattenAmount;                   // type:FLOAT.0
	float                            ExplosionFlattenAmount;          // type:FLOAT.0
	float                            WorldSpaceWidth;                 // type:FLOAT.0
	float                            ParallaxScale;                   // type:FLOAT.0
	float                            TrailWidthMultiplier;            // type:FLOAT.0
	float                            TrailDepthMultiplier;            // type:FLOAT.0
	float                            SSAOAllowedInTrails;             // type:FLOAT.0
	float                            SSAOAllowedInSnow;               // type:FLOAT.0
	float                            SelfShadowAllowedInTrails;       // type:FLOAT.0
	bool                             UseSqrtDuringCombine;            // type:BOOL.0
	bool                             DoCombinePostBlur;               // type:BOOL.0
	float                            TesselationMaskMipBias;          // type:FLOAT.0
};

struct _0x3B4031EE : _0x940B34F5
{
	bool                             _0xEF794C65;                     // type:BOOL.0
	bool                             _0x4D94DEB9;                     // type:BOOL.0
};

struct _0x3B4C37F6
{
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            _0xF2A20B9A;                     // type:FLOAT.0
	float                            _0x22FCCE1F;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
};

struct _0x3B62C46E : _0xE975B01D
{
	enum eCompendiumCategories       category;                        // type:ENUM.32BIT
};

struct _0x3B6C8B1B
{
	bool                             Enable;                          // type:BOOL.0
	float                            TopSpread;                       // type:FLOAT.0
	float                            BottomSpread;                    // type:FLOAT.0
	float                            Blend;                           // type:FLOAT.0
	enum eAnimBoneTag                _0x03418951;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x8F8D352E;                     // type:ENUM.32BIT
	float                            BiasSide;                        // type:FLOAT.0
	uint                             BiasSideTime;                    // type:UINT.0
};

struct _0x3B745589
{
	struct _0x3777ACE3               _0xD144B4FD;                     // type:STRUCT.STRUCTURE
	struct _0x3777ACE3               _0xBE466044;                     // type:STRUCT.STRUCTURE
	struct _0x3777ACE3               _0x8EEDA06E;                     // type:STRUCT.STRUCTURE
	struct _0x3777ACE3               _0xC83B8BC6;                     // type:STRUCT.STRUCTURE
	struct _0x79A4DDCE               _0x7B6AD79D;                     // type:STRUCT.STRUCTURE
	struct _0x79A4DDCE               _0xC42C0009;                     // type:STRUCT.STRUCTURE
	struct _0x79A4DDCE               _0xFEABF6FC;                     // type:STRUCT.STRUCTURE
	struct _0x79A4DDCE               _0xBA2477C7;                     // type:STRUCT.STRUCTURE
};

struct _0x3B88C95A : CTuning
{
	float                            _0xF0462353;                     // type:FLOAT.0
	float                            _0xB2574B88;                     // type:FLOAT.0
	float                            _0xFB038C00;                     // type:FLOAT.0
	float                            _0xA82AD3B8;                     // type:FLOAT.0
	float                            _0x1591F944;                     // type:FLOAT.0
	float                            _0xA7D942B0;                     // type:FLOAT.0
	float                            _0xFEFC40D5;                     // type:FLOAT.0
	float                            _0x3FBDE368;                     // type:FLOAT.0
	float                            _0x987E286A;                     // type:FLOAT.0
	float                            _0x260F5219;                     // type:FLOAT.0
	float                            _0xCA1F7522;                     // type:FLOAT.0
	float                            _0x9120DA92;                     // type:FLOAT.0
	float                            _0x6093EC52;                     // type:FLOAT.0
	float                            _0x6E2A5339;                     // type:FLOAT.0
	float                            _0xED01E0BF;                     // type:FLOAT.0
};

struct _0x3B8F8535
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             Probe;                           // type:BOOL.0
	bool                             ProbeResults;                    // type:BOOL.0
	bool                             _0xAEC60D28;                     // type:BOOL.0
	bool                             _0x5BA3E9F8;                     // type:BOOL.0
};

struct _0x3B902546
{
	string                           _0xD92A2C5E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7075F5D3;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x1A5EDBD6                 _0xCE20AB2B;                     // type:ENUM.32BIT
};

struct _0x3B9D26D4 : CTuning
{
	struct _0x220EF492               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x3BA4E73C : _0xAC8F7043
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x3BAAFAF1 : _0x6CE78879
{
};

struct _0x3BAEC979 : _0x3DE374C5
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x3BB87028
{
	float                            HoldingWeaponBonus;              // type:FLOAT.0
	float                            UnarmedBonus;                    // type:FLOAT.0
	float                            ArmouredBonus;                   // type:FLOAT.0
	float                            MovingMultiplierBonus;           // type:FLOAT.0
	float                            HealthMultiplierBonus;           // type:FLOAT.0
};

struct _0x3BBCDE38 : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x5D2DC7AC;                     // type:STRUCT.STRUCTURE
	enum _0x4C0BB44F                 action;                          // type:ENUM.32BIT
};

struct _0x3BC4AC19
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3                             center;                          // type:VECTOR3.0
	vec3                             orientation;                     // type:VECTOR3.0
	vec3                             scale;                           // type:VECTOR3.0
	uint                             _0xFE27FFDE;                     // type:UINT.0
	float                            percentage;                      // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	uint                             startHour;                       // type:UINT.0
	uint                             endHour;                         // type:UINT.0
};

struct _0x3BD461D2
{
	float                            _0x5AA75453;                     // type:FLOAT.0
	float                            NavmeshModifier;                 // type:FLOAT.0
	float                            OnScreenStickinessModifier;      // type:FLOAT.0
	float                            NavmeshModifierLeaderInCover;    // type:FLOAT.0
	float                            CoverModifierLeaderNotInCover;   // type:FLOAT.0
	float                            FormationModifierRunningAndGunning; // type:FLOAT.0
	float                            CoverModifierLeaderIsLoitering;  // type:FLOAT.0
	float                            NoLOSModifierLeaderIsLoitering;  // type:FLOAT.0
	array<struct _0x93C15105>        LinearScores;                    // type:ARRAY.ATARRAY
	array<struct _0x93C15105>        AttackingLinearScores;           // type:ARRAY.ATARRAY
	array<struct _0x93C15105>        RetreatingLinearScores;          // type:ARRAY.ATARRAY
	array<struct _0x93C15105>        LoiteringLinearScores;           // type:ARRAY.ATARRAY
};

struct _0x3BEADE9F : _0xF010F3EE
{
};

struct _0x3C17998B
{
	array<enum eAnimBoneTag>         TargetBones;                     // type:ARRAY.ATARRAY
	float                            Scale;                           // type:FLOAT.0
	float                            CustomCircleSweepTestRadius;     // type:FLOAT.0
};

struct _0x3C221686 : CTuning
{
	struct _0x228B1E39               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x3C23505C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            _0x2D096360;                     // type:FLOAT.0
	float                            _0x23104666;                     // type:FLOAT.0
	float                            _0x3CEC2EAC;                     // type:FLOAT.0
	float                            _0x86C1F04E;                     // type:FLOAT.0
	float                            _0x409836EA;                     // type:FLOAT.0
	float                            _0x52722CD2;                     // type:FLOAT.0
	float                            _0x01C2A159;                     // type:FLOAT.0
	float                            _0x5008C584;                     // type:FLOAT.0
	float                            _0xDDE90989;                     // type:FLOAT.0
	float                            _0xEC8B5544;                     // type:FLOAT.0
	float                            _0xA4604445;                     // type:FLOAT.0
	float                            _0xC7AB6F67;                     // type:FLOAT.0
	float                            _0xC959B452;                     // type:FLOAT.0
	float                            _0x317D38F8;                     // type:FLOAT.0
	bool                             _0x626ADED2;                     // type:BOOL.0
	string                           _0xDB614E6A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3C30D9E7 : _0x1901476A
{
};

struct _0x3C3872FB : CTuning
{
	float                            _0x8361DFF2;                     // type:FLOAT.0
	float                            _0x426C0CDB;                     // type:FLOAT.0
	float                            TargetRadius;                    // type:FLOAT.0
	float                            _0x69621DB5;                     // type:FLOAT.0
	float                            _0x3662E93A;                     // type:FLOAT.0
	float                            _0x668295CA;                     // type:FLOAT.0
};

struct _0x3C3BA0DB
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	struct _0x866FDEA0               _0xD7DA0CC0;                     // type:STRUCT.STRUCTURE
};

struct _0x3C3D2140 : CTuning
{
	float                            _0x756C373D;                     // type:FLOAT.0
	float                            _0xD2297DD9;                     // type:FLOAT.0
	int                              _0x4D740456;                     // type:INT.0
};

struct _0x3C415B1F
{
	float                            _0xFEDA4181;                     // type:FLOAT.0
	float                            _0xDBD4FB73;                     // type:FLOAT.0
	float                            _0xE03F8440;                     // type:FLOAT.0
	float                            _0xD41C3199;                     // type:FLOAT.0
	float                            _0x65AB4B7E;                     // type:FLOAT.0
	vec2                             _0x8C9CCB9D;                     // type:VECTOR2.0
	vec2                             _0x9E5DEB61;                     // type:VECTOR2.0
	vec2                             _0xB2256627;                     // type:VECTOR2.0
	float                            _0x355A7E81;                     // type:FLOAT.0
	float                            _0x49D32EDE;                     // type:FLOAT.0
	int                              _0x78081526;                     // type:INT.0
	int                              _0x21EED390;                     // type:INT.0
};

struct _0x3C442D30 : _0xAE1C7AAE
{
};

struct _0x3C5978B9 : CBaseSaveObject
{
	array<struct _0x31990E76>        _0xD15A5287;                     // type:ARRAY.ATARRAY
	array<struct _0xF58F945F>        _0x09244CB9;                     // type:ARRAY.ATARRAY
	array<struct _0x0572459B>        _0xA31128E4;                     // type:ARRAY.ATARRAY
};

struct _0x3C77B1BC : _0x8A0DC979
{
};

struct _0x3CB396E2 : _0x39DE799A
{
};

struct _0x3CB7E34D : _0xD6E4C7A1
{
	float                            Radius;                          // type:FLOAT.0
	bool                             ApplyAlpha;                      // type:BOOL.0
	string                           Color;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3CBBD404 : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
};

struct _0x3CC6E0BD : _0x5193BC57
{
};

struct _0x3CCA233C : CTuning
{
	float                            _0xA8D42F0B;                     // type:FLOAT.0
	float                            _0xFAD73EF4;                     // type:FLOAT.0
	float                            _0xA317DE78;                     // type:FLOAT.0
	float                            _0xB3445740;                     // type:FLOAT.0
	float                            _0x3FE7C896;                     // type:FLOAT.0
	float                            _0xD6BAEF88;                     // type:FLOAT.0
	string                           _0xCC2BC7C7;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0xE63F2A39;                     // type:ARRAY.ATARRAY
};

struct _0x3CD3BF5B : _0x14229900
{
	bool                             _0xD73A53EF;                     // type:BOOL.0
};

struct _0x3CD6A835 : _0x2F7DA38D
{
	enum _0x2DFB5519                 action;                          // type:ENUM.32BIT
};

struct _0x3CDEAA2D
{
	float                            _0x3A6BA973;                     // type:FLOAT.0
};

struct _0x3CFA8C79
{
	enum _0x2BC30B9F                 _0xD22990B4;                     // type:ENUM.32BIT
	enum _0x750EA65B                 _0xAF9E1594;                     // type:ENUM.32BIT
	enum _0x750EA65B                 _0x77E25CB0;                     // type:ENUM.32BIT
	array<struct _0xCD18BA53>        _0x3486F5D7;                     // type:ARRAY.ATARRAY
};

struct _0x3D003059 : _0x1054F746
{
};

struct _0x3D0744DB : _0x1054F746
{
};

struct _0x3D07B2DF
{
	float                            _0x59430821;                     // type:FLOAT.0
	float                            _0xB723EBBB;                     // type:FLOAT.0
	float                            _0x92D71FB4;                     // type:FLOAT.0
	uint                             _0xFCFABDD9;                     // type:UINT.0
	uint                             _0xF28D08E3;                     // type:UINT.0
	uint                             _0x1AC79950;                     // type:UINT.0
	uint                             _0xF2C8E3C1;                     // type:UINT.0
	uint                             _0x6A514017;                     // type:UINT.0
	uint                             _0x9D9E3B74;                     // type:UINT.0
	enum _0x6BCA108F                 _0xB8F7C9B8;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x33C390A3;                     // type:ENUM.32BIT
	float                            _0xDE4E214E;                     // type:FLOAT.0
	float                            _0x73E11CFB;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x86F47ED0;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x7EB66111;                     // type:ENUM.32BIT
	float                            _0x3883A9FC;                     // type:FLOAT.0
	float                            _0xEB8818AA;                     // type:FLOAT.0
	uint                             _0xA5A59B57;                     // type:UINT.0
	enum _0xC93A7A62                 _0x8BCF7359;                     // type:ENUM.32BIT
	float                            _0xF8800B59;                     // type:FLOAT.0
	float                            _0x4E44C0AF;                     // type:FLOAT.0
	float                            _0x7132B4F8;                     // type:FLOAT.0
	float                            _0x7B99E00C;                     // type:FLOAT.0
	float                            _0x6FC0BD69;                     // type:FLOAT.0
	uint                             _0x49308919;                     // type:UINT.0
	enum _0xC93A7A62                 _0x0DC909C8;                     // type:ENUM.32BIT
	uint                             _0xF44C9E2C;                     // type:UINT.0
};

struct _0x3D086533
{
	bool                             Enabled;                         // type:BOOL.0
	struct _0x82B1D4DA               _0x18F95829;                     // type:STRUCT.STRUCTURE
	struct _0xCB72A3E3               _0xE924CAC3;                     // type:STRUCT.STRUCTURE
	float                            Gamma;                           // type:FLOAT.0
};

struct _0x3D08AFB0 : CTuning
{
	struct _0xA199D0AF               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x3D0FCBA1 : _0xAB76836B
{
};

struct _0x3D1F0F9D : _0xAB76836B
{
};

struct _0x3D36DEDA
{
	uint                             Key;                             // type:UINT.0
	array<struct _0xC8862B14>        Data;                            // type:ARRAY.ATARRAY
};

struct _0x3D3D6556
{
	map<string, struct _0x4DE5602F>     Solvers;                         // type:MAP.ATBINARYMAP
};

struct _0x3D525090 : CTuning
{
	struct _0x5FBD0295               _0x097131FC;                     // type:STRUCT.STRUCTURE
	struct _0x7C9C2091               _0x169B6B25;                     // type:STRUCT.STRUCTURE
};

struct _0x3D53C5AB : CAICondition
{
};

struct _0x3D5B8E1C : CTuning
{
	struct _0xB9B6D775               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x3D712B80 : _0x8A0DC979
{
};

struct _0x3D72E90B : CTuning
{
	float                            _0x277C1A4A;                     // type:FLOAT.0
	float                            _0xA1712D53;                     // type:FLOAT.0
	uint                             _0xEE3F040F;                     // type:UINT.0
	uint                             _0x5A7C3833;                     // type:UINT.0
	float                            _0x710403F1;                     // type:FLOAT.0
	float                            _0x03FEC91D;                     // type:FLOAT.0
	float                            _0x23F0928E;                     // type:FLOAT.0
	float                            _0x9854937F;                     // type:FLOAT.0
	vec3V                            _0x91E497AA;                     // type:VEC3V.0
	float                            _0x31B437B9;                     // type:FLOAT.0
	float                            _0xB57A7028;                     // type:FLOAT.0
	float                            _0x87747AEA;                     // type:FLOAT.0
	float                            _0x56596552;                     // type:FLOAT.0
	float                            _0xAF45FA35;                     // type:FLOAT.0
	float                            _0xAF0148D2;                     // type:FLOAT.0
	float                            _0xC0612B10;                     // type:FLOAT.0
	float                            _0xBA9C5488;                     // type:FLOAT.0
	uint                             _0x002643A0;                     // type:UINT.0
	uint                             _0x0FA43E89;                     // type:UINT.0
	uint                             _0xC5C7A229;                     // type:UINT.0
	uint                             _0xD013C7BC;                     // type:UINT.0
	float                            _0x48BEACC9;                     // type:FLOAT.0
	float                            _0x66451980;                     // type:FLOAT.0
	float                            _0x47E418FF;                     // type:FLOAT.0
	float                            _0x212F110D;                     // type:FLOAT.0
	float                            _0x1100938B;                     // type:FLOAT.0
	float                            _0x38631299;                     // type:FLOAT.0
	float                            _0x200CCD54;                     // type:FLOAT.0
	float                            _0xEED5C0C9;                     // type:FLOAT.0
	float                            _0xFDF49D97;                     // type:FLOAT.0
	float                            _0xA07ED5D2;                     // type:FLOAT.0
	float                            _0xE38605C1;                     // type:FLOAT.0
	float                            _0x21970AEA;                     // type:FLOAT.0
	float                            _0x204D2A05;                     // type:FLOAT.0
	float                            _0xB6EF4E13;                     // type:FLOAT.0
	float                            _0xA658FAE3;                     // type:FLOAT.0
	float                            _0x73EE2F0A;                     // type:FLOAT.0
	float                            _0xB1EC7217;                     // type:FLOAT.0
	float                            _0xBDBAE70E;                     // type:FLOAT.0
	float                            _0xC40056F1;                     // type:FLOAT.0
	float                            _0x10EBB646;                     // type:FLOAT.0
	float                            _0x8493E975;                     // type:FLOAT.0
	float                            _0xEA595801;                     // type:FLOAT.0
	float                            _0x612E424F;                     // type:FLOAT.0
	float                            _0xD5853FDB;                     // type:FLOAT.0
	float                            _0xC3932033;                     // type:FLOAT.0
	uchar                            _0xCB6047D3;                     // type:UCHAR.0
	bool                             _0x155E9B4B;                     // type:BOOL.0
	bool                             Enabled;                         // type:BOOL.0
};

struct _0x3D77907E
{
	float                            Value;                           // type:FLOAT.0
	enum _0x99124ED7                 Type;                            // type:ENUM.32BIT
	enum _0x4314208E                 EaseType;                        // type:ENUM.32BIT
};

struct _0x3D7E241A
{
	string                           ptFxName;                        // type:STRING.ATNONFINALHASHSTRING
	float                            _0xCFAB591F;                     // type:FLOAT.0
	float                            _0xAE51C2A0;                     // type:FLOAT.0
	float                            _0x77B71B5D;                     // type:FLOAT.0
	float                            _0x2EB6CC86;                     // type:FLOAT.0
	uint                             _0x794F765B;                     // type:UINT.0
	uchar                            _0x25F1384F;                     // type:UCHAR.0
	uchar                            _0xE5B837DA;                     // type:UCHAR.0
	uchar                            _0x19749F52;                     // type:UCHAR.0
};

struct _0x3D810B5F
{
	uint                             TimeBetweenStateLineDefensiveAreaUpdatesMs; // type:UINT.0
	float                            MinTimeBetweenStateLineTaunts;   // type:FLOAT.0
	float                            MaxTimeBetweenStateLineTaunts;   // type:FLOAT.0
	float                            DefensiveAreaRadiusOnStateLines; // type:FLOAT.0
	bool                             DetectStateLinesViaMapZones;     // type:BOOL.0
	uchar                            MinWantedLevelToIgnoreStateLineDefensiveAreas; // type:UCHAR.0
};

struct _0x3D83C5A7
{
	string                           BaseStatName;                    // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB0C5F255>        Variations;                      // type:ARRAY.ATARRAY
};

struct _0x3D859926 : _0xFECF2F24
{
};

struct _0x3D8A1EC8 : CTuning
{
	float                            _0x63B25BB2;                     // type:FLOAT.0
	float                            _0x224461FB;                     // type:FLOAT.0
	float                            _0xFC9674D4;                     // type:FLOAT.0
	float                            _0x2E0BAB36;                     // type:FLOAT.0
	float                            _0x7F8A5144;                     // type:FLOAT.0
	float                            _0xE6EB574D;                     // type:FLOAT.0
};

struct _0x3D8A24DD
{
	float                            FatiguedHealthThreshold;         // type:FLOAT.0
	float                            KnockedOutHealthThreshold;       // type:FLOAT.0
	float                            KnockedOutHealthToRecover;       // type:FLOAT.0
	uint                             KnockedOutCount;                 // type:UINT.0
	float                            DogTakedownThreshold;            // type:FLOAT.0
	bool                             MeleeCardinalFatalAttackCheck;   // type:BOOL.0
	float                            ProneToFlourishHealthThreshold;  // type:FLOAT.0
};

struct _0x3D93D240 : _0xE1588AC1
{
	string                           Path;                            // type:STRING.ATSTRING
};

struct _0x3D9BB9AE : _0xEC516F75
{
	vec3V                            _0xC0EA519F;                     // type:VEC3V.0
	vec3V                            _0xDE2370CD;                     // type:VEC3V.0
	bool                             _0x43C4E726;                     // type:BOOL.0
};

struct _0x3DA511E4 : _0x8DCE67A8
{
	string                           _0xBD11A400;                     // type:STRING.ATNSHASHSTRING
	bool                             Value;                           // type:BOOL.0
};

struct _0x3DA7B7FE : CTuning
{
	float                            _0x4EDBE8AD;                     // type:FLOAT.0
	float                            _0x05BC0E5A;                     // type:FLOAT.0
	float                            _0xBD15C5B3;                     // type:FLOAT.0
	float                            _0xFE18F718;                     // type:FLOAT.0
	float                            _0x18E3D627;                     // type:FLOAT.0
	float                            _0x86D8770F;                     // type:FLOAT.0
	float                            _0xE8BCF4A2;                     // type:FLOAT.0
	float                            _0xB1392C8A;                     // type:FLOAT.0
	float                            _0xC9E06495;                     // type:FLOAT.0
	float                            _0xD5D54A66;                     // type:FLOAT.0
	float                            _0x0B3779CF;                     // type:FLOAT.0
	float                            _0x5731C99F;                     // type:FLOAT.0
	bool                             _0x1B00771E;                     // type:BOOL.0
	float                            _0x466B42A3;                     // type:FLOAT.0
	float                            ProbeRadius;                     // type:FLOAT.0
	float                            _0xA3824B22;                     // type:FLOAT.0
	float                            _0x85B0818F;                     // type:FLOAT.0
	float                            _0x48CB2080;                     // type:FLOAT.0
	float                            _0x53F212C9;                     // type:FLOAT.0
	float                            _0xACCA141F;                     // type:FLOAT.0
	float                            _0x1B3185F1;                     // type:FLOAT.0
	float                            _0xC980FF29;                     // type:FLOAT.0
	float                            _0x1838F0CE;                     // type:FLOAT.0
	float                            _0xC609826B;                     // type:FLOAT.0
	float                            _0x49DC9642;                     // type:FLOAT.0
	float                            _0x889784C6;                     // type:FLOAT.0
	bool                             _0xD7B378F4;                     // type:BOOL.0
	int                              _0x13DF31FB;                     // type:INT.0
	bool                             _0x060CA961;                     // type:BOOL.0
	float                            _0x4B454C11;                     // type:FLOAT.0
	float                            _0x71F85395;                     // type:FLOAT.0
	float                            _0xD3E5455C;                     // type:FLOAT.0
	float                            _0xF39ED074;                     // type:FLOAT.0
	struct _0x22F5AC82               _0x343B7C36;                     // type:STRUCT.STRUCTURE
	struct _0x22F5AC82               _0x02699893;                     // type:STRUCT.STRUCTURE
	struct _0x22F5AC82               _0xD78D42D7;                     // type:STRUCT.STRUCTURE
	struct _0x22F5AC82               _0xEDDF6F7B;                     // type:STRUCT.STRUCTURE
	struct _0x22F5AC82               _0x7E8490BF;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0x7622158E;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0xB3308FAA;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0xC1C72CD7;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0xCC284191;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0xE2666E0D;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0xB7C598CC;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0xBE18A572;                     // type:STRUCT.STRUCTURE
	struct _0x4D8C47C8               _0x1521D387;                     // type:STRUCT.STRUCTURE
	float                            _0x0BF47669;                     // type:FLOAT.0
	bool                             _0x2890717E;                     // type:BOOL.0
	float                            _0x0945A991;                     // type:FLOAT.0
	float                            _0x2ED4FC18;                     // type:FLOAT.0
	float                            _0x8F7B139F;                     // type:FLOAT.0
};

struct _0x3DC84895
{
	short                            minX;                            // type:SHORT.0
	short                            minY;                            // type:SHORT.0
	short                            maxX;                            // type:SHORT.0
	short                            maxY;                            // type:SHORT.0
	float                            Amplitude;                       // type:FLOAT.0
};

struct _0x3DCB142D : camBaseDirectorMetadata
{
	string                           _0xFF4765D0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x814C9E0E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE354F8A2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA3E9D158;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x650E8102;                     // type:FLOAT.0
	struct _0x0DA7B608               _0x25C3D984;                     // type:STRUCT.STRUCTURE
};

struct _0x3DDA4FE9
{
	float                            FromWantedLevel;                 // type:FLOAT.0
	struct _0x4E1B3DEE               Weights;                         // type:STRUCT.STRUCTURE
	struct _0xCD2A47B4               Decay;                           // type:STRUCT.STRUCTURE
};

struct _0x3DDB6317
{
	string                           weatherName;                     // type:STRING.ATNONFINALHASHSTRING
	float                            probability;                     // type:FLOAT.0
};

struct _0x3DDEF649
{
	string                           Link;                            // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultShuffleClipId;            // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCE91A4F2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x00CF7E9B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3DE374C5 : _0x8A0DC979
{
	string                           Path;                            // type:STRING.CONST_STRING
	bool                             OmitAsLeaf;                      // type:BOOL.0
};

struct _0x3DF03C74 : _0x353D1F76
{
};

struct _0x3DF3675A : _0x8A0DC979
{
};

struct _0x3DFC2543 : _0xAB76836B
{
};

struct _0x3DFE3442
{
	bool                             EnableActivationsFromCapsuleImpacts; // type:BOOL.0
	float                            VehicleVelToImpactNormalMinDot;  // type:FLOAT.0
	bool                             EnableSideSwipeActivations;      // type:BOOL.0
	bool                             _0x894217C3;                     // type:BOOL.0
	float                            MinSideNormalForSideSwipe;       // type:FLOAT.0
	float                            MinVelThroughNormalForSideSwipe; // type:FLOAT.0
	float                            MinAccumulatedImpactForSideSwipe; // type:FLOAT.0
	float                            MinVehVelMagForSideSwipe;        // type:FLOAT.0
	float                            MinVehVelMagForBicycleSideSwipe; // type:FLOAT.0
};

struct _0x3E01A9FB : _0xC509663E
{
};

struct _0x3E22266D
{
	string                           ID;                              // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x041596EA>        EntryPoints;                     // type:ARRAY.ATARRAY
	array<struct _0x19E66269>        ExitPoints;                      // type:ARRAY.ATARRAY
	struct _0x37996FF5               FlowRoot;                        // type:STRUCT.STRUCTURE
};

struct _0x3E399CCE
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xD0CFA8BF>        _0x7E10C242;                     // type:ARRAY.ATARRAY
};

struct _0x3E4FD036 : CTuning
{
	struct _0x16EBF49F               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x3E53D1BA : _0x64AE3E49
{
	string                           ID;                              // type:STRING.ATNONFINALHASHSTRING
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x3E56B865
{
	array<struct _0x8EDEB4E3>        Mappings;                        // type:ARRAY.ATARRAY
	struct _0xC0BCA3EB               AdaptorMappings;                 // type:STRUCT.STRUCTURE
};

struct _0x3E591342 : _0x4198511D
{
};

struct _0x3E6A6495 : _0x2F7DA38D
{
	uint                             color;                           // type:UINT.1
};

struct _0x3E7AB376
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x440E9A1A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3E7B0E96 : _0xCDF97B9D
{
};

struct _0x3E7EC724
{
	float                            RippleBumpiness;                 // type:FLOAT.0
	float                            RippleMinBumpiness;              // type:FLOAT.0
	float                            RippleMaxBumpiness;              // type:FLOAT.0
	float                            RippleBumpinessWindScale;        // type:FLOAT.0
	float                            RippleSpeed;                     // type:FLOAT.0
	float                            RippleDisturb;                   // type:FLOAT.0
	float                            RippleVelocityTransfer;          // type:FLOAT.0
	float                            OceanBumpiness;                  // type:FLOAT.0
	float                            DeepOceanScale;                  // type:FLOAT.0
	float                            OceanNoiseMinAmplitude;          // type:FLOAT.0
	float                            OceanWaveAmplitude;              // type:FLOAT.0
	float                            ShoreWaveAmplitude;              // type:FLOAT.0
	float                            OceanWaveWindScale;              // type:FLOAT.0
	float                            ShoreWaveWindScale;              // type:FLOAT.0
	float                            OceanWaveMinAmplitude;           // type:FLOAT.0
	float                            ShoreWaveMinAmplitude;           // type:FLOAT.0
	float                            OceanWaveMaxAmplitude;           // type:FLOAT.0
	float                            ShoreWaveMaxAmplitude;           // type:FLOAT.0
	float                            OceanFoamIntensity;              // type:FLOAT.0
	float                            _0x24453158;                     // type:FLOAT.0
	float                            _0x176BC4BE;                     // type:FLOAT.0
	float                            _0x3B00CA4F;                     // type:FLOAT.0
	float                            OceanRippleUVScale;              // type:FLOAT.0
	float                            OceanFoamUVScale;                // type:FLOAT.0
	float                            OceanFoamIntensityScale;         // type:FLOAT.0
	float                            OceanFoamIntensityWeight;        // type:FLOAT.0
	float                            OceanFoamPuddleMaskScale;        // type:FLOAT.0
	float                            OceanFoamSmoothstepBlendMin;     // type:FLOAT.0
	float                            OceanFoamSmoothstepBlendMax;     // type:FLOAT.0
};

struct _0x3E80AC7F : _0x3AB6499E
{
	float                            _0xD4B14D9B;                     // type:FLOAT.0
	vec3                             _0x9D288ADA;                     // type:VECTOR3.0
	vec3                             _0x5B22B702;                     // type:VECTOR3.0
	vec3                             _0x882E97CF;                     // type:VECTOR3.0
	float                            _0x62CD2C76;                     // type:FLOAT.0
	float                            _0x86180488;                     // type:FLOAT.0
	vec2                             _0x9AD39E06;                     // type:VECTOR2.0
	vec3                             _0x0378D900;                     // type:VECTOR3.0
	vec3                             _0x561FF388;                     // type:VECTOR3.0
	vec3                             _0x28A3D2FA;                     // type:VECTOR3.0
	vec3                             _0x2756065E;                     // type:VECTOR3.0
	vec3                             _0x4E22BE80;                     // type:VECTOR3.0
	vec2                             _0x43C6D209;                     // type:VECTOR2.0
	vec2                             _0x9E16D8A2;                     // type:VECTOR2.0
	float                            _0x5D3EABB4;                     // type:FLOAT.0
};

struct _0x3ECC9718 : _0x3AB6499E
{
	struct _0x8D865FE1               _0xD049439D;                     // type:STRUCT.STRUCTURE
	float                            _0x88730EAD;                     // type:FLOAT.0
	float                            _0x52EEED84;                     // type:FLOAT.0
	float                            _0x31AB9BE2;                     // type:FLOAT.0
	float                            _0x1FEE8608;                     // type:FLOAT.0
	float                            _0x771A679A;                     // type:FLOAT.0
	float                            _0xA17B4446;                     // type:FLOAT.0
	float                            _0xA9749771;                     // type:FLOAT.0
	float                            _0x7331B435;                     // type:FLOAT.0
	float                            MinRoll;                         // type:FLOAT.0
	float                            MaxRoll;                         // type:FLOAT.0
	float                            _0x8723F32D;                     // type:FLOAT.0
	float                            MinFov;                          // type:FLOAT.0
	float                            MaxFov;                          // type:FLOAT.0
	float                            _0xE63347D5;                     // type:FLOAT.0
	float                            _0x8DDCF2B6;                     // type:FLOAT.0
	float                            _0x87DEE23B;                     // type:FLOAT.0
	float                            _0xCC4DF0E4;                     // type:FLOAT.0
	float                            _0xB0BA2FCF;                     // type:FLOAT.0
	float                            _0x2611BFD7;                     // type:FLOAT.0
	float                            _0xA92B5913;                     // type:FLOAT.0
};

struct _0x3ED430B4 : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	string                           Context;                         // type:STRING.ATNONFINALHASHSTRING
	uint                             MaxTimeMS;                       // type:UINT.0
};

struct _0x3EE0FBE1 : _0x6F0C770E
{
	struct _0xD469CE50               _0xEBA25604;                     // type:STRUCT.STRUCTURE
};

struct _0x3EE286BA : _0x8A0DC979
{
	enum _0x5B754EBB                 Context;                         // type:ENUM.32BIT
};

struct _0x3EEF38FE
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<uint>                      Ranks;                           // type:ARRAY.ATARRAY
};

struct _0x3EFBD429 : CTuning
{
	bool                             _0x15D1EF34;                     // type:BOOL.0
	float                            _0xE0842590;                     // type:FLOAT.0
	float                            _0xA3162052;                     // type:FLOAT.0
	float                            _0x1F1E24EC;                     // type:FLOAT.0
	float                            _0xFAD8FB52;                     // type:FLOAT.0
	float                            _0x89C0D3B6;                     // type:FLOAT.0
	struct _0x3A94D7F3               _0x763F4C8F;                     // type:STRUCT.STRUCTURE
	struct _0x3A94D7F3               _0x3FB5AAF1;                     // type:STRUCT.STRUCTURE
	struct _0x3A94D7F3               _0xA04992D3;                     // type:STRUCT.STRUCTURE
};

struct _0x3F072A48
{
	string                           id;                              // type:STRING.ATFINALHASHSTRING
	array<struct _0xC90278D2>        volumes;                         // type:ARRAY.ATARRAY
};

struct _0x3F0877FF : UIBehavior
{
	struct _0x405F330C               Items;                           // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               CurrentIndex;                    // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               _0xFDF306FF;                     // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               _0x28E3EB98;                     // type:STRUCT.STRUCTURE
};

struct _0x3F0D0F0A
{
	vec3                             vNodePosition;                   // type:VECTOR3.0
	int                              iPhase;                          // type:INT.0
	float                            fStoppingDistance;               // type:FLOAT.0
	float                            fOrientation;                    // type:FLOAT.0
	bool                             bLeftLaneIsAheadOnly;            // type:BOOL.0
	bool                             bCanTurnRightOnRedLight;         // type:BOOL.0
	bool                             bRightLaneIsRightOnly;           // type:BOOL.0
	int                              iLeftFilterLanePhase;            // type:INT.0
	bool                             _0x31F868A5;                     // type:BOOL.0
};

struct _0x3F1DD8F8
{
	uint                             idx;                             // type:UINT.0
	string                           name;                            // type:STRING.ATSTRING
	size_t                           used;                            // type:SIZET.0
	size_t                           free;                            // type:SIZET.0
	size_t                           total;                           // type:SIZET.0
	size_t                           peak;                            // type:SIZET.0
	size_t                           _0xA2696A38;                     // type:SIZET.0
};

struct _0x3F3514D9
{
	enum _0x1786EF75                 DamageQuality;                   // type:ENUM.32BIT
	enum _0x7B293473                 SkinQuality;                     // type:ENUM.32BIT
	string                           OutfitFilter;                    // type:STRING.ATNONFINALHASHSTRING
	string                           SatchelItem;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3F3EFA4D
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           SwapClipSetId;                   // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleSwapClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	string                           MpMaleSwapClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	string                           GripTransitionClipSetId;         // type:STRING.ATNONFINALHASHSTRING
	string                           FemaleGripTransitionClipSetId;   // type:STRING.ATNONFINALHASHSTRING
	string                           InspectInteraction;              // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6567D183;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xD5A22466                 Orientation;                     // type:ENUM.32BIT
	bitset<enum _0x9728CB9C>         Flags;                           // type:BITSET.32BIT
};

struct _0x3F630F1E
{
	int                              numDecalsMin;                    // type:INT.0
	int                              numDecalsMax;                    // type:INT.0
	string                           _0xA6F65343;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3F6738B2 : _0x0CB4F193
{
	struct _0xED16C5B0               _0x3C289E70;                     // type:STRUCT.STRUCTURE
	float                            _0x87D74D33;                     // type:FLOAT.0
	array<struct _0x24749343, 4>     _0x50C29A4C;                     // type:ARRAY.MEMBER
};

struct _0x3F6CE918
{
	string                           _0xD14DB6F9;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0x347192AC;                     // type:ENUM.32BIT
	vec3                             _0x641A4C97;                     // type:VECTOR3.0
	float                            _0xF8184DFA;                     // type:FLOAT.0
	float                            _0xA5458CD4;                     // type:FLOAT.0
	float                            _0x9AE7EB45;                     // type:FLOAT.0
	bool                             _0x5667CC57;                     // type:BOOL.0
};

struct _0x3F7381EC
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x9DE1FB8C, 5>     elements;                        // type:ARRAY.ATFIXEDARRAY
	struct _0xFC82A3BF               outputInfo;                      // type:STRUCT.STRUCTURE
	enum _0x88E5332E                 renderPhase;                     // type:ENUM.32BIT
	bool                             renderInWaterReflection;         // type:BOOL.0
	bool                             useSquareAspectRatio;            // type:BOOL.0
	string                           aifStackTag;                     // type:STRING.ATNONFINALHASHSTRING
	string                           aifBackgroundStackTag;           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x3F76DB61
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	array<struct _0xA36FB31B>        _0x8CC19477;                     // type:ARRAY.ATARRAY
	float                            _0x1F776A65;                     // type:FLOAT.0
	bool                             _0x46AC0A70;                     // type:BOOL.0
};

struct _0x3F8276DA
{
	map<enum _0x3B1F0870, struct _0x0F4E5CCA>     _0x117EB4AA;                     // type:MAP.ATBINARYMAP
};

struct _0x3F8365DA : _0xABB31B99
{
};

struct _0x3FA05BD8
{
	bitset<enum _0xF575C67D>         ptFxExtras;                      // type:BITSET.32BIT
	string                           ptFxName;                        // type:STRING.ATNONFINALHASHSTRING
	vec3                             ptFxOffset;                      // type:VECTOR3.0
	float                            ptFxRange;                       // type:FLOAT.0
	float                            ptFxSpeedEvoMin;                 // type:FLOAT.0
	float                            ptFxSpeedEvoMax;                 // type:FLOAT.0
};

struct _0x3FC89C8A
{
	int                              ScenarioPedsMultiplier_Base;     // type:INT.0
	int                              ScenarioPedsMultiplier;          // type:INT.0
	int                              AmbientPedsMultiplier_Base;      // type:INT.0
	int                              AmbientPedsMultiplier;           // type:INT.0
	int                              MaxTotalPeds_Base;               // type:INT.0
	int                              MaxTotalPeds;                    // type:INT.0
	int                              _0xF4C60A75;                     // type:INT.0
	int                              _0xC217C797;                     // type:INT.0
	int                              PedMemoryMultiplier;             // type:INT.0
	int                              PedsForVehicles_Base;            // type:INT.0
	int                              PedsForVehicles;                 // type:INT.0
	int                              VehicleTimesliceMaxUpdatesPerFrame_Base; // type:INT.0
	int                              VehicleTimesliceMaxUpdatesPerFrame; // type:INT.0
	int                              VehicleAmbientDensityMultiplier_Base; // type:INT.0
	int                              VehicleAmbientDensityMultiplier; // type:INT.0
	int                              VehicleMemoryMultiplier;         // type:INT.0
	int                              VehicleParkedDensityMultiplier_Base; // type:INT.0
	int                              VehicleParkedDensityMultiplier;  // type:INT.0
	int                              VehicleLowPrioParkedDensityMultiplier_Base; // type:INT.0
	int                              VehicleLowPrioParkedDensityMultiplier; // type:INT.0
	int                              VehicleUpperLimit_Base;          // type:INT.0
	int                              VehicleUpperLimit;               // type:INT.0
	int                              VehicleUpperLimitMP;             // type:INT.0
	int                              VehicleParkedUpperLimit_Base;    // type:INT.0
	int                              VehicleParkedUpperLimit;         // type:INT.0
	int                              VehicleKeyholeShapeInnerThickness_Base; // type:INT.0
	int                              VehicleKeyholeShapeInnerThickness; // type:INT.0
	int                              VehicleKeyholeShapeOuterThickness_Base; // type:INT.0
	int                              VehicleKeyholeShapeOuterThickness; // type:INT.0
	int                              VehicleKeyholeShapeInnerRadius_Base; // type:INT.0
	int                              VehicleKeyholeShapeInnerRadius;  // type:INT.0
	int                              VehicleKeyholeShapeOuterRadius_Base; // type:INT.0
	int                              VehicleKeyholeShapeOuterRadius;  // type:INT.0
	int                              VehicleKeyholeSideWallThickness_Base; // type:INT.0
	int                              VehicleKeyholeSideWallThickness; // type:INT.0
	int                              VehicleMaxCreationDistance_Base; // type:INT.0
	int                              VehicleMaxCreationDistance;      // type:INT.0
	int                              VehicleMaxCreationDistanceOffscreen_Base; // type:INT.0
	int                              VehicleMaxCreationDistanceOffscreen; // type:INT.0
	int                              VehicleCullRange_Base;           // type:INT.0
	int                              VehicleCullRange;                // type:INT.0
	int                              VehicleCullRangeOnScreenScale_Base; // type:INT.0
	int                              VehicleCullRangeOnScreenScale;   // type:INT.0
	int                              VehicleCullRangeOffScreen_Base;  // type:INT.0
	int                              VehicleCullRangeOffScreen;       // type:INT.0
	int                              DensityBasedRemovalRateScale_Base; // type:INT.0
	int                              DensityBasedRemovalRateScale;    // type:INT.0
	int                              _0xEBE40E64;                     // type:INT.0
	int                              _0xE2F25B93;                     // type:INT.0
	int                              DensityBasedRemovalTargetHeadroom_Base; // type:INT.0
	int                              DensityBasedRemovalTargetHeadroom; // type:INT.0
	array<int, 16>                   VehicleSpacing_Base;             // type:ARRAY.MEMBER
	array<int, 16>                   VehicleSpacing;                  // type:ARRAY.MEMBER
	int                              PlayersRoadScanDistance_Base;    // type:INT.0
	int                              PlayersRoadScanDistance;         // type:INT.0
	array<int, 16>                   PlayerRoadDensityInc_Base;       // type:ARRAY.MEMBER
	array<int, 16>                   PlayerRoadDensityInc;            // type:ARRAY.MEMBER
	array<int, 16>                   NonPlayerRoadDensityDec_Base;    // type:ARRAY.MEMBER
	array<int, 16>                   NonPlayerRoadDensityDec;         // type:ARRAY.MEMBER
	int                              VehiclePopulationFrameRate_Base; // type:INT.0
	int                              VehiclePopulationFrameRate;      // type:INT.0
	int                              VehiclePopulationCyclesPerFrame_Base; // type:INT.0
	int                              VehiclePopulationCyclesPerFrame; // type:INT.0
	int                              VehiclePopulationFrameRateMP_Base; // type:INT.0
	int                              VehiclePopulationFrameRateMP;    // type:INT.0
	int                              VehiclePopulationCyclesPerFrameMP_Base; // type:INT.0
	int                              VehiclePopulationCyclesPerFrameMP; // type:INT.0
	int                              PedPopulationFrameRate_Base;     // type:INT.0
	int                              PedPopulationFrameRate;          // type:INT.0
	int                              PedPopulationCyclesPerFrame_Base; // type:INT.0
	int                              PedPopulationCyclesPerFrame;     // type:INT.0
	int                              PedPopulationFrameRateMP_Base;   // type:INT.0
	int                              PedPopulationFrameRateMP;        // type:INT.0
	int                              PedPopulationCyclesPerFrameMP_Base; // type:INT.0
	int                              PedPopulationCyclesPerFrameMP;   // type:INT.0
	int                              _0x96849BF4;                     // type:INT.0
	int                              _0x7DBB2CAC;                     // type:INT.0
	int                              _0xEA598353;                     // type:INT.0
	int                              _0x483C5494;                     // type:INT.0
	int                              _0x743EBBF0;                     // type:INT.0
	int                              _0x63F78946;                     // type:INT.0
	int                              _0x50055DB5;                     // type:INT.0
	int                              _0x489024EC;                     // type:INT.0
	int                              _0xA9D7C05B;                     // type:INT.0
	int                              _0x19F3894C;                     // type:INT.0
	int                              _0xDA81FFD7;                     // type:INT.0
	int                              _0x34EF9AC8;                     // type:INT.0
	int                              _0x44D675BA;                     // type:INT.0
	int                              _0x3FD84EE3;                     // type:INT.0
	int                              _0x1C8DF1F7;                     // type:INT.0
};

struct _0x3FC9702F
{
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0x3FF9CBE2 : _0xBCD5CE8E
{
	array<struct _0x75B579EF>        _0xF65275B9;                     // type:ARRAY.ATARRAY
	array<struct _0x6485ADCC>        _0xE6A9043F;                     // type:ARRAY.ATARRAY
};

struct _0x40004624
{
	uchar                            Component;                       // type:UCHAR.0
	short                            Drawable;                        // type:SHORT.0
};

struct _0x400303FC
{
	float                            sizeEvo;                         // type:FLOAT.0
	float                            depthMult;                       // type:FLOAT.0
	float                            speedMult;                       // type:FLOAT.0
	float                            widthRatio;                      // type:FLOAT.0
};

struct _0x40204B7E : _0xCC6C9624
{
};

struct _0x4034378B : _0x8A0DC979
{
};

struct _0x404214B2 : _0xDC10377E
{
	vec2                                                        _0x086076ED;                     // type:VECTOR2.0
	vec2                                                        _0x04349BD3;                     // type:VECTOR2.0
	float                                                       _0x739F256F;                     // type:FLOAT.0
	float                                                       _0xA1EE1EBC;                     // type:FLOAT.0
	float                                                       _0x44BD8A50;                     // type:FLOAT.0
	float                                                       _0x00AB66C4;                     // type:FLOAT.0
	float                                                       _0x642FA306;                     // type:FLOAT.0
	float                                                       _0x4D291CCD;                     // type:FLOAT.0
	float                                                       _0xD3850BD5;                     // type:FLOAT.0
	float                                                       _0xC4A75338;                     // type:FLOAT.0
	float                                                       _0x59404CEE;                     // type:FLOAT.0
	float                                                       _0x2EB336B6;                     // type:FLOAT.0
	float                                                       _0x9BFC1647;                     // type:FLOAT.0
	float                                                       _0xD701230F;                     // type:FLOAT.0
	float                                                       _0x9584B6E2;                     // type:FLOAT.0
	struct camFirstPersonAimCameraMetadataHeadingCorrection     HeadingCorrection;               // type:STRUCT.STRUCTURE
	struct camFirstPersonAimCameraMetadataHeadingCorrection     _0xA4666FD4;                     // type:STRUCT.STRUCTURE
	int                                                         _0x361643AA;                     // type:INT.0
	int                                                         _0xF6F439DA;                     // type:INT.0
	int                                                         _0x0649C066;                     // type:INT.0
	int                                                         _0x7D195325;                     // type:INT.0
	int                                                         _0x740009C2;                     // type:INT.0
	int                                                         _0xD64DD06B;                     // type:INT.0
	float                                                       _0x0924414B;                     // type:FLOAT.0
	float                                                       _0x4BC4FE0B;                     // type:FLOAT.0
	float                                                       _0x13AD17D9;                     // type:FLOAT.0
	float                                                       _0x99560E61;                     // type:FLOAT.0
	float                                                       _0xAB8DDA6C;                     // type:FLOAT.0
	float                                                       _0x860D6CC0;                     // type:FLOAT.0
	float                                                       _0x45DCA5B8;                     // type:FLOAT.0
	float                                                       _0x404BAB17;                     // type:FLOAT.0
};

struct _0x405F330C : _0xB89C4C40
{
};

struct _0x405F8C57
{
	string                           set;                             // type:STRING.ATSTRING
	string                           name;                            // type:STRING.ATSTRING
	uint                             frames;                          // type:UINT.0
	float                            min;                             // type:FLOAT.0
	float                            max;                             // type:FLOAT.0
	float                            average;                         // type:FLOAT.0
	float                            total;                           // type:FLOAT.0
};

struct _0x4061ABF7 : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x55BC2B20;                     // type:STRUCT.STRUCTURE
	string                           CarriableConfig;                 // type:STRING.ATNONFINALHASHSTRING
	enum _0x1D553A97                 _0x2B2CB4FD;                     // type:ENUM.32BIT
	enum _0x9C985241                 CarriedAttachSlot;               // type:ENUM.32BIT
	float                            _0xA9E88188;                     // type:FLOAT.0
	bool                             _0x48191EC3;                     // type:BOOL.0
};

struct _0x40637027 : _0xA0889763
{
	double                           value;                           // type:DOUBLE.0
};

struct _0x40659780
{
	array<struct _0x52C08AB4>        _0xCE3078A7;                     // type:ARRAY.ATARRAY
};

struct _0x40754131 : _0x5BA1A146
{
	enum _0x7A4B2B1E                 Timer;                           // type:ENUM.32BIT
};

struct _0x40ADB07A : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x40B628B5 : _0x8A0DC979
{
};

struct _0x40B7F70F : _0xA57BA3ED
{
	array<struct _0x72E2A0BC>        Simplices;                       // type:ARRAY.ATARRAY
};

struct _0x40CAD87B
{
	string                              _0x571AD0EB;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x5D855317                  _0x9A958F83;                     // type:STRUCT.STRUCTURE
	struct _0x7EB36ECB                  _0x29D1478A;                     // type:STRUCT.STRUCTURE
	struct _0x84E24733                  _0x2ED8B4F0;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x86EDB96D>     _0x9B288E92;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xCAF89876>     _0x1EBD3EC9;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x3227EC29>     _0x9805C13D;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xC53A265A>     _0x3E39E6DE;                     // type:MAP.ATBINARYMAP
};

struct _0x40CFF606 : _0x06627157
{
};

struct _0x40F3FB1E
{
	string                           OverlayClipSet;                  // type:STRING.ATNONFINALHASHSTRING
	string                           OverlayClipFilter;               // type:STRING.ATNONFINALHASHSTRING
	string                           OverlayClip;                     // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xD08694EE>         Flags;                           // type:BITSET.32BIT
};

struct _0x40FED52F
{
};

struct _0x41015C2D
{
	bool                             _0x26D79E79;                     // type:BOOL.0
	float                            _0x716DD19F;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0x4117EA94
{
	enum _0x705A8B9B                 Motivation;                      // type:ENUM.32BIT
	array<struct _0x928D27E5>        ImpactParams;                    // type:ARRAY.ATARRAY
};

struct _0x411F0E89
{
	float                            ExampleFloat;                    // type:FLOAT.0
};

struct _0x411F3899 : _0x3ABDED0D
{
	string                           _0x109ABCFE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCED76D62;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x412FE519 : uiDataAdjustableBehaviorBase
{
	struct _0x8ECFB47F               Value;                           // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               Step;                            // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               StepBindingContext;              // type:STRUCT.STRUCTURE
};

struct _0x4134FC98 : _0x1B5C65E0
{
};

struct _0x4146391F : _0xBA4BE0CB
{
};

struct _0x414D26CC : camCinematicShotMetadata
{
	float                            _0x6CE64711;                     // type:FLOAT.0
};

struct _0x4157F84A
{
	array<struct _0x59B89D9F>        Actions;                         // type:ARRAY.ATARRAY
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ValidationBlendOutSet;           // type:STRING.ATNONFINALHASHSTRING
	float                            PoseThreshold;                   // type:FLOAT.0
	string                           ActionScoringWeightTable;        // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xFBF8B1BC>         Flags;                           // type:BITSET.32BIT
};

struct _0x41795F09 : CTuning
{
	struct _0x305B8C7F               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x4183745C
{
	vec3V                            LocalStart;                      // type:VEC3V.0
	vec3V                            LocalEnd;                        // type:VEC3V.0
	float                            CapsuleRadius;                   // type:FLOAT.0
	float                            HitToRootHeightTolerance;        // type:FLOAT.0
	float                            HitAboveWaterThreshold;          // type:FLOAT.0
	bitset<enum _0xA6FE886A>         Flags;                           // type:BITSET.32BIT
};

struct _0x41953064
{
	float                            Dist;                            // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
};

struct _0x4198511D : _0x39DE799A
{
};

struct _0x41C4804D
{
	array<struct _0xAF365801>        Files;                           // type:ARRAY.ATARRAY
	array<struct _0x5D3F6196>        _0xDBA6C7DC;                     // type:ARRAY.ATARRAY
	array<struct _0x5D3F6196>        _0xE74D61A5;                     // type:ARRAY.ATARRAY
	string                           _0x7294F412;                     // type:STRING.ATSTRING
	string                           _0xF994AA57;                     // type:STRING.ATSTRING
};

struct _0x41C88192 : _0x4134FC98
{
};

struct _0x41CB1AE1
{
	string                           _0x6265EA04;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x90B78082;                     // type:ARRAY.ATARRAY
};

struct _0x41D2B5EA
{
	float                            _0x763F9650;                     // type:FLOAT.0
	float                            _0x6589B011;                     // type:FLOAT.0
	float                            _0x53B3F0AD;                     // type:FLOAT.0
	float                            _0x33821259;                     // type:FLOAT.0
	uint                             _0xA68AD8D3;                     // type:UINT.0
};

struct _0x41D7E216 : CAICondition
{
	enum _0x70760C5A                 RadioGenre;                      // type:ENUM.32BIT
};

struct _0x41DC4EAA
{
	float                            _0x1E3FAE11;                     // type:FLOAT.2
	float                            _0x33313476;                     // type:FLOAT.0
	float                            _0x94622780;                     // type:FLOAT.0
	float                            _0x0C8A956D;                     // type:FLOAT.0
	float                            _0x313E7F88;                     // type:FLOAT.0
};

struct _0x41E8C36E : uiBaseInputContext
{
	string                           _0xD9112ED9;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x98EE1835                 ContextSlot;                     // type:ENUM.32BIT
	array<string>                    _0x239A9921;                     // type:ARRAY.ATARRAY
	array<struct _0x476BC347>        _0x43B15B07;                     // type:ARRAY.ATARRAY
	array<struct _0x476BC347>        _0x6200C482;                     // type:ARRAY.ATARRAY
	bool                             _0x102731D0;                     // type:BOOL.0
	bool                             _0xA9D94411;                     // type:BOOL.0
	bool                             _0x3EA70BEC;                     // type:BOOL.0
};

struct _0x41EF8472
{
	struct _0xDE202ECD                  OnFoot;                          // type:STRUCT.STRUCTURE
	struct _0xDE202ECD                  OnMount;                         // type:STRUCT.STRUCTURE
	struct _0xDE202ECD                  InVehicle;                       // type:STRUCT.STRUCTURE
	map<string, struct _0xB7323E10>     Overrides;                       // type:MAP.ATBINARYMAP
};

struct _0x41FEB509 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x84E6CD81                 _0xEB31CBB0;                     // type:ENUM.32BIT
};

struct _0x4200C6AC : _0x45531AE9
{
	array<struct _0x4A7AD954>        contexts;                        // type:ARRAY.ATARRAY
};

struct _0x42078C79 : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
};

struct _0x420D3F6F : _0xC0749003
{
};

struct _0x4241AAAF : StatsGoalParamPrestigable
{
};

struct _0x42454115
{
};

struct _0x42522A47
{
	struct _0x4A7AD954               Target;                          // type:STRUCT.STRUCTURE
	string                           Property;                        // type:STRING.CONST_STRING
	struct _0xAB76836B               Converter;                       // type:STRUCT.POINTER
};

struct _0x42543A36
{
	float                            ContinuousFoamAmountAtMaxVelocity; // type:FLOAT.0
	float                            ContinuousFoamMaxVelocity;       // type:FLOAT.0
	float                            ContinuousFoamCurveAdjust;       // type:FLOAT.0
};

struct _0x42548FF3
{
	enum _0x7970FB3F                 Event;                           // type:ENUM.32BIT
	uchar                            Index;                           // type:UCHAR.0
	string                           EventName;                       // type:STRING.ATFINALHASHSTRING
};

struct _0x425FA4A1
{
	map<string, struct _0xAD8485A5>     _0xA00ACE8D;                     // type:MAP.ATBINARYMAP
};

struct _0x42841966
{
	struct _0x7611035D               _0x7611035D;                     // type:STRUCT.STRUCTURE
	struct _0xDC14B199               _0xDC14B199;                     // type:STRUCT.STRUCTURE
	struct _0x5A4C3E0C               _0x5A4C3E0C;                     // type:STRUCT.STRUCTURE
	struct _0x331B4F5A               _0x331B4F5A;                     // type:STRUCT.STRUCTURE
	struct _0x7F828DB6               _0x7F828DB6;                     // type:STRUCT.STRUCTURE
	struct _0x1E581CF6               _0x0121605A;                     // type:STRUCT.STRUCTURE
};

struct _0x42986A00 : _0x3ABDED0D
{
	string                           _0x92AE53C9;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x6648EFE5;                     // type:UINT.0
	float                            _0xAFFA324C;                     // type:FLOAT.0
	float                            _0x38E18F97;                     // type:FLOAT.0
};

struct _0x4299117A
{
	struct _0x77CA3522               Audio;                           // type:STRUCT.STRUCTURE
	struct _0x77CA3522               SecondaryResponseAudio;          // type:STRUCT.STRUCTURE
	enum _0x777955A2                 LookIntensity;                   // type:ENUM.32BIT
	enum _0x44D77E81                 PrimaryTargetThreatLevel;        // type:ENUM.32BIT
	enum _0x44D77E81                 SecondaryTargetThreatLevel;      // type:ENUM.32BIT
	float                            ReactionTimeMin;                 // type:FLOAT.0
	float                            ReactionTimeMax;                 // type:FLOAT.0
	float                            ApproachDelay;                   // type:FLOAT.0
	float                            DiminishMinDistance;             // type:FLOAT.0
	float                            DiminishMaxDistance;             // type:FLOAT.0
	float                            PrimaryTargetReactionTimeMin;    // type:FLOAT.0
	float                            PrimaryTargetReactionTimeMax;    // type:FLOAT.0
	float                            SecondaryTargetReactionTimeMin;  // type:FLOAT.0
	float                            SecondaryTargetReactionTimeMax;  // type:FLOAT.0
	float                            SecondaryResponseDelayMin;       // type:FLOAT.0
	float                            SecondaryResponseDelayMax;       // type:FLOAT.0
	float                            TerminationRadius;               // type:FLOAT.0
	bool                             UseBoost;                        // type:BOOL.0
	bool                             DisablePassiveLook;              // type:BOOL.0
	bool                             DisableShockingEventReact;       // type:BOOL.0
	bool                             ForceShockingEventReact;         // type:BOOL.0
	bool                             EscalateOnWeaponThreat;          // type:BOOL.0
	bool                             VehiclesCanStop;                 // type:BOOL.0
	bool                             VehiclesCanStopForAI;            // type:BOOL.0
	bool                             ReactUntilEventExpiration;       // type:BOOL.0
	bool                             ReactUntilOutsideTerminationRadius; // type:BOOL.0
	bool                             EnableApproachBehavior;          // type:BOOL.0
	bool                             UseActiveLookForAllLowIntensityReacts; // type:BOOL.0
	bool                             EscalateOnClearLoSToPrimaryTarget; // type:BOOL.0
	bool                             EscalateOnClearLoSToSecondaryTarget; // type:BOOL.0
	bool                             FearEscalationsRequireLoSToPrimaryTarget; // type:BOOL.0
	bool                             FearEscalationsRequireLoSToSecondaryTarget; // type:BOOL.0
	bool                             EndReactionOnEventExpiration;    // type:BOOL.0
};

struct _0x4299C888
{
	float                            _0xEADCBD97;                     // type:FLOAT.0
	float                            _0x753C7E37;                     // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct _0x42D4D3AA : _0xE453720A
{
	uint                             virtualIndex;                    // type:UINT.0
};

struct _0x42DFBA15
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            Cost;                            // type:FLOAT.0
	float                            CostBias;                        // type:FLOAT.0
};

struct _0x42E9AE1B
{
	struct _0x3D7E241A               _0xDCED324E;                     // type:STRUCT.STRUCTURE
	struct _0xB4ED5FA1               _0xE9FF1315;                     // type:STRUCT.STRUCTURE
};

struct _0x42F737BA : CTuning
{
	float                            _0x63110A87;                     // type:FLOAT.0
	float                            _0x5D6AB950;                     // type:FLOAT.0
	float                            _0xC5CDE318;                     // type:FLOAT.0
	float                            _0xB0043776;                     // type:FLOAT.0
};

struct _0x42F7AB34 : CAICondition
{
};

struct _0x42FF10F9
{
	struct _0xFC70364F               Curve;                           // type:STRUCT.STRUCTURE
	bool                             _0xC5F187E4;                     // type:BOOL.0
};

struct _0x43127582
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xBC6A0384               Condition;                       // type:STRUCT.POINTER
	struct _0x43127582               NextModifier;                    // type:STRUCT.POINTER
	bool                             TrackUsage;                      // type:BOOL.0
	enum _0x1137139B                 NextModifierPolicy;              // type:ENUM.32BIT
};

struct _0x43133B86 : _0xB88D6BEE
{
	string                           _0x2FED4559;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xCCBF2BB4                 Event;                           // type:ENUM.32BIT
};

struct _0x4318416D : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x426BAA95>         GeneralFlags;                    // type:BITSET.32BIT
	bitset<enum _0xEBFCC29A>         _0xE146753E;                     // type:BITSET.32BIT
};

struct _0x4324AAC6
{
	float                            _0x31A9AEF5;                     // type:FLOAT.0
	float                            _0xBE9BFD6A;                     // type:FLOAT.0
	float                            _0x1CD13C4A;                     // type:FLOAT.0
	float                            _0xB3548FB0;                     // type:FLOAT.0
	float                            _0x73346092;                     // type:FLOAT.0
	float                            _0x30E55E30;                     // type:FLOAT.2
	float                            _0x5775E2A2;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xDE12FCED;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xF00903ED;                     // type:ENUM.32BIT
	float                            _0xA142CD87;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xD1CE5BC6;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x594C77C3;                     // type:ENUM.32BIT
	float                            _0x81FC0FF7;                     // type:FLOAT.0
	float                            _0x62CB62AE;                     // type:FLOAT.0
	float                            _0x56B8FFD6;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x3CC6AB6C;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xBEAEF05E;                     // type:ENUM.32BIT
};

struct _0x43256DA2
{
	map<string, struct _0x207DB71D>     Effects;                         // type:MAP.ATBINARYMAP
};

struct _0x432D1D3A : _0x32C0AB5B
{
};

struct _0x433422A5
{
	vec3V                            PositionOffset;                  // type:VEC3V.0
	float                            Height;                          // type:FLOAT.0
	float                            HeightVariation;                 // type:FLOAT.0
	array<struct _0x517DED80>        Prompts;                         // type:ARRAY.ATARRAY
	string                           FallbackAudio;                   // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFB292D23;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x433ECEF3
{
	uint                             _0x86923C71;                     // type:UINT.0
	uint                             _0xBD70D99E;                     // type:UINT.0
	float                            _0x56562CFF;                     // type:FLOAT.2
};

struct _0x435D61FB : _0x7EAFD12D
{
	enum _0xB08B6EC2                 heightType;                      // type:ENUM.32BIT
};

struct _0x4365821B : _0x4DFD60F5
{
};

struct _0x4367825B
{
	uint                             NumCapsuleTests;                 // type:UINT.0
	float                            MaxCollisionRootSpeedToForcePopIn; // type:FLOAT.0
	float                            MaxPreCollisionCameraSpeedToForcePopIn; // type:FLOAT.0
	float                            MaxSweepAngleWhenMovingTowardsLos; // type:FLOAT.0
	float                            _0x01BA7A88;                     // type:FLOAT.0
	float                            MaxSweepAngleWhenAvoidingPopIn;  // type:FLOAT.0
	float                            MinOrientationSpeedToMaintainDirection; // type:FLOAT.0
	float                            MinCameraMoveSpeedToSweepInDirectionOfTravel; // type:FLOAT.0
	bool                             _0x658A1612;                     // type:BOOL.0
};

struct _0x436D7D1C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xEA2FE81F>        _0xB4957481;                     // type:ARRAY.ATARRAY
	uint                             _0xCC66BA93;                     // type:UINT.0
	uint                             _0x54F84BA4;                     // type:UINT.0
	float                            _0xD7BAFB14;                     // type:FLOAT.0
	float                            _0x0B49E725;                     // type:FLOAT.0
};

struct _0x436E578E
{
	vec3                             Color;                           // type:VECTOR3.1
	float                            Position;                        // type:FLOAT.0
};

struct _0x437709B0 : CTuning
{
	array<string>                    _0x992F8AEA;                     // type:ARRAY.ATARRAY
	array<string>                    _0x17F86E7B;                     // type:ARRAY.ATARRAY
	array<string>                    _0x73DFA167;                     // type:ARRAY.ATARRAY
	array<string>                    _0x67CA8844;                     // type:ARRAY.ATARRAY
	array<string>                    _0x61240E04;                     // type:ARRAY.ATARRAY
	array<string>                    _0xF0CA4657;                     // type:ARRAY.ATARRAY
	array<string>                    _0x6B0F91A3;                     // type:ARRAY.ATARRAY
	string                           _0xEE2D08AF;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x1692EFBF;                     // type:FLOAT.0
	float                            _0xFA74B419;                     // type:FLOAT.0
};

struct _0x4377FBD4 : _0xC098F5A7
{
};

struct _0x43874087
{
	string                           Default;                         // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xEB64EDD5>        Sets;                            // type:ARRAY.ATARRAY
};

struct _0x438A2028 : CTuning
{
	float                            _0xFAC8C4FA;                     // type:FLOAT.0
	float                            _0xEAFC29A9;                     // type:FLOAT.0
	float                            _0xE34D44F1;                     // type:FLOAT.0
	float                            _0xA0DC9239;                     // type:FLOAT.0
	float                            _0x2B834EE9;                     // type:FLOAT.0
};

struct _0x439009B7 : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0x4390E378 : CTuning
{
	float                            MaxDistanceAroundClosestRoadNode; // type:FLOAT.0
};

struct _0x43A66EF7
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	string                           spName;                          // type:STRING.ATNONFINALHASHSTRING
	string                           mpName;                          // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0xC6FA7F1F;                     // type:ARRAY.ATARRAY
	float                            _0x64800766;                     // type:FLOAT.0
	float                            _0x3C2982E9;                     // type:FLOAT.0
	float                            _0xC2D8FF98;                     // type:FLOAT.0
	float                            _0x0E57EA5C;                     // type:FLOAT.0
	float                            _0x496248AE;                     // type:FLOAT.0
	float                            _0x35AC286A;                     // type:FLOAT.0
	float                            _0x1F776A65;                     // type:FLOAT.0
	float                            _0x77142C40;                     // type:FLOAT.0
	float                            _0xD046FC27;                     // type:FLOAT.0
	float                            _0x85C77212;                     // type:FLOAT.0
	uint                             _0x987CFA11;                     // type:UINT.0
};

struct _0x43AE59C8
{
	array<struct _0xA30410E1>                     _0x230FCE74;                     // type:ARRAY.ATARRAY
	array<struct _0xA30410E1>                     _0xC4E40C59;                     // type:ARRAY.ATARRAY
	map<string, struct _0xF4FFDEDB>               _0xBDE73A44;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x3C415B1F>               _0xDC8F0B8A;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xAF7D7777>               _0x67981610;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x4AE9A654>               _0x40AA0E20;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, struct _0xE3A89511>     _0xAA3605C2;                     // type:MAP.ATBINARYMAP
	map<enum _0x57F00EED, struct _0x53F18B74>     _0x3EA0B898;                     // type:MAP.ATBINARYMAP
	map<enum _0x00AB4385, struct _0xC2148C15>     _0xE467DB23;                     // type:MAP.ATBINARYMAP
	array<enum _0x00AB4385>                       _0xDF3F257E;                     // type:ARRAY.ATARRAY
	struct _0x044807AB                            _0x95D2878A;                     // type:STRUCT.STRUCTURE
};

struct _0x43B62543
{
	string                           EventName;                       // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xA0889763, 2>     Parameters;                      // type:ARRAY.ATFIXEDARRAY
};

struct _0x43C832A2
{
	string                           _0xC3C9224B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFEF089A1;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x43D57772
{
	float                            ReloadIntroRateModifier;         // type:FLOAT.0
	float                            ReloadStartRateModifier;         // type:FLOAT.0
	float                            ReloadLoopRateModifier;          // type:FLOAT.0
	float                            ReloadEndRateModifier;           // type:FLOAT.0
	float                            ReloadOutroRateModifier;         // type:FLOAT.0
	float                            CockStartIntroModifier;          // type:FLOAT.0
	float                            CockEndIntroModifier;            // type:FLOAT.0
	float                            CockStartNormalModifier;         // type:FLOAT.0
	float                            CockEndNormalModifier;           // type:FLOAT.0
};

struct _0x43D72741 : camBaseObjectMetadata
{
	vec2                             HeadingLimits;                   // type:VECTOR2.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
	vec2                             RelativeOffset;                  // type:VECTOR2.0
	float                            OrbitDistance;                   // type:FLOAT.0
};

struct _0x43DA8759 : camBaseObjectMetadata
{
	array<struct _0x0DA28499, 8>     _0x47900669;                     // type:ARRAY.MEMBER
	string                           _0xC31F2A30;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCFA27209;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xCE1BAB06>        _0x8D907F91;                     // type:ARRAY.ATARRAY
};

struct _0x43DC0908 : uiGenericEventDataBase
{
	float                            data;                            // type:FLOAT.0
};

struct _0x43ED29A3 : _0x0FC1398F
{
};

struct _0x43F04AE9 : uiEventDataBase
{
};

struct _0x43F493B9 : _0x4E602AF5
{
	uint                             turnedInCount;                   // type:UINT.0
	bool                             wasDiscovered;                   // type:BOOL.0
};

struct _0x43F5BB16 : _0x4469EF46
{
	string                           _0x884EDD03;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x01522EC2;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x440967C8 : camCinematicContextMetadata
{
	float                            _0x0B442395;                     // type:FLOAT.0
	uint                             _0x1B3C1CC9;                     // type:UINT.0
	uint                             _0x488D9581;                     // type:UINT.0
	float                            _0x59C25E2F;                     // type:FLOAT.0
	float                            _0xEAF646E8;                     // type:FLOAT.0
	float                            _0x64D3E0E5;                     // type:FLOAT.0
	float                            _0x967462E2;                     // type:FLOAT.0
	float                            _0xAD6BD622;                     // type:FLOAT.0
	float                            _0xB5FA8015;                     // type:FLOAT.0
	float                            _0xF49E8282;                     // type:FLOAT.0
	float                            _0x91CA8BA3;                     // type:FLOAT.0
	float                            _0x45C96807;                     // type:FLOAT.0
	float                            _0x5DD4E0E5;                     // type:FLOAT.0
};

struct _0x4419CFEC : _0xBA4BE0CB
{
};

struct _0x441A9775
{
	array<struct _0x6EDE6748>        _0x40254994;                     // type:ARRAY.ATARRAY
};

struct _0x443B9F9F : _0x560C9F87
{
	string                           AttachmentTransitionFilter;      // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipSetFemale;             // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x48CC8B1E>         Flags;                           // type:BITSET.32BIT
	string                           OptionalParentClipSetId;         // type:STRING.ATNONFINALHASHSTRING
	string                           OptionalParentClipId;            // type:STRING.ATNONFINALHASHSTRING
	string                           OptionalParentFilter;            // type:STRING.ATNONFINALHASHSTRING
	enum _0x580314CC                 AttachSlot;                      // type:ENUM.32BIT
};

struct _0x443C5282 : _0xE046EA8D
{
};

struct _0x443F271F
{
	string                           weapon;                          // type:STRING.ATNONFINALHASHSTRING
	vec2V                            position;                        // type:VEC2V.0
	uint                             heading;                         // type:UINT.0
	float                            zoom;                            // type:FLOAT.0
	float                            accuracy;                        // type:FLOAT.0
	float                            power;                           // type:FLOAT.0
	bool                             reloading;                       // type:BOOL.0
	bool                             _0x96EAD825;                     // type:BOOL.0
	bool                             _0x11A9E51D;                     // type:BOOL.0
	bool                             _0xF672E5FD;                     // type:BOOL.0
	enum _0x1D80C274                 _0x1BBA07E9;                     // type:ENUM.32BIT
	enum _0x1100C0DF                 targetType;                      // type:ENUM.32BIT
	enum _0xA17A58C9                 _0x05223F85;                     // type:ENUM.32BIT
	enum _0xF01A9A60                 _0xDA28B3E6;                     // type:ENUM.32BIT
	bitset<enum _0x6D17B886>         _0xE4269916;                     // type:BITSET.16BIT
};

struct _0x444B7F55
{
	struct _0x0D7E0505               advancedGraphics;                // type:STRUCT.STRUCTURE
	struct _0x15DB2440               graphics;                        // type:STRUCT.STRUCTURE
	struct _0xB281167C               video;                           // type:STRUCT.STRUCTURE
	enum _0xB4AB2C35                 configSource;                    // type:ENUM.32BIT
	string                           videoCardDescription;            // type:STRING.ATSTRING
	ushort                           version;                         // type:USHORT.0
};

struct _0x444D4DE4
{
	string                           LootBlipDataSelector;            // type:STRING.ATNONFINALHASHSTRING
	string                           LootPromptDataSelector;          // type:STRING.ATNONFINALHASHSTRING
	string                           LootLongAnimDataSelector;        // type:STRING.ATNONFINALHASHSTRING
	string                           LootLongAltAnimDataSelector;     // type:STRING.ATNONFINALHASHSTRING
	string                           LootLongCameraCutAnimDataSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           LootLongCameraCutAltAnimDataSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           LootQuickAnimDataSelector;       // type:STRING.ATNONFINALHASHSTRING
	string                           LootAliveComponentsAnimDataSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           LootAliveComponentsFallbackAnimDataSelector; // type:STRING.ATNONFINALHASHSTRING
	string                           HorseTransferAnimDataSelector;   // type:STRING.ATNONFINALHASHSTRING
	string                           LongLootRollSelector;            // type:STRING.ATNONFINALHASHSTRING
	string                           FallbackAnimsDataSelector;       // type:STRING.ATNONFINALHASHSTRING
	string                           RandomLootabilitySelector;       // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x54642C51>         Flags;                           // type:BITSET.32BIT
};

struct _0x4454B9C0 : _0x1FB1BCEA
{
};

struct _0x445EFBA9 : _0x98B6594B
{
	struct _0xED16C5B0               _0x3D99B1CB;                     // type:STRUCT.STRUCTURE
	vec3V                            _0xEBCD4130;                     // type:VEC3V.0
	enum _0xA65B69DA                 _0x80626C51;                     // type:ENUM.32BIT
};

struct _0x4469EF46
{
	string                           NetworkId;                       // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x9147136F>         SignalsToSend;                   // type:BITSET.8BIT
};

struct _0x446A540C : _0xA709E487
{
	bool                             value;                           // type:BOOL.0
};

struct _0x4470E8D8
{
	enum eAnimBoneTag                BoneId;                          // type:ENUM.32BIT
	bitset<enum _0x702BE544>         Flags;                           // type:BITSET.32BIT
};

struct _0x44891E97
{
	uint                             _0x15D52393;                     // type:UINT.0
	uchar                            _0xC84A8D9D;                     // type:UCHAR.0
	array<vec3V, 4>                  _0x90DA2028;                     // type:ARRAY.ATRANGEARRAY
};

struct _0x448B8D82 : _0x3AB6499E
{
	struct _0xCAC90DA3               DefaultSettings;                 // type:STRUCT.STRUCTURE
	string                           DofSettings;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6239E78D;                     // type:FLOAT.0
	float                            _0xDC31F71F;                     // type:FLOAT.0
	float                            _0x81CFE0B5;                     // type:FLOAT.0
	float                            _0x3C223C2F;                     // type:FLOAT.0
	float                            _0xA167A3EF;                     // type:FLOAT.0
	float                            _0x30EEA16E;                     // type:FLOAT.0
	float                            _0x74268D06;                     // type:FLOAT.0
	float                            _0x9FD9880E;                     // type:FLOAT.0
	float                            _0x6E027FAD;                     // type:FLOAT.0
	float                            _0xDE7406D3;                     // type:FLOAT.0
	float                            _0x97CF28CF;                     // type:FLOAT.0
	float                            _0x44D396CE;                     // type:FLOAT.0
	float                            _0xD151B440;                     // type:FLOAT.0
	float                            _0x5E1BAFAE;                     // type:FLOAT.0
	float                            _0x33B07AC7;                     // type:FLOAT.0
	float                            _0x8E04C926;                     // type:FLOAT.0
	float                            _0x6AE14BCF;                     // type:FLOAT.0
	int                              _0xF0EE8CBA;                     // type:INT.0
	float                            _0x3B4D82A8;                     // type:FLOAT.0
	float                            _0x7C25CE58;                     // type:FLOAT.0
	string                           _0xE043EED4;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x733276B5;                     // type:UINT.0
	float                            _0x88D836D7;                     // type:FLOAT.0
};

struct _0x4494B15E
{
	map<enum _0xD52EB169, struct _0xEECAFE9D>     _0x7D4DCA9C;                     // type:MAP.ATMAP
};

struct _0x449C97D3
{
	string                           Text;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x5FE53DCF>         Conditions;                      // type:BITSET.16BIT
};

struct _0x449CA1AF : _0x87CB7DBA
{
	string                           VehicleModelSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0180B09E;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x92D6C704>        Passengers;                      // type:ARRAY.ATARRAY
};

struct _0x44A7560F : CTuning
{
	float                            _0x1503EFD9;                     // type:FLOAT.0
	float                            _0x5B8965EC;                     // type:FLOAT.0
	float                            _0x5EFA529E;                     // type:FLOAT.0
	uint                             _0xD47AE29C;                     // type:UINT.0
	uint                             _0x7B8519F0;                     // type:UINT.0
	float                            _0x427D791D;                     // type:FLOAT.0
};

struct _0x44B0D705
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xF253BB65>        Volumes;                         // type:ARRAY.ATARRAY
	array<vec3V>                     SpawnPositions;                  // type:ARRAY.ATARRAY
	array<string>                    _0x0F007392;                     // type:ARRAY.ATARRAY
};

struct _0x44BC92C1 : SaveChallengeGoalParamBase
{
	uint                             score;                           // type:UINT.0
	struct StatId                    _0x371C022C;                     // type:STRUCT.STRUCTURE
};

struct _0x44C580DF
{
	string                           sName;                           // type:STRING.ATNONFINALHASHSTRING
	float                            fWidth;                          // type:FLOAT.0
	float                            fHeight;                         // type:FLOAT.0
	float                            fMinZoom;                        // type:FLOAT.0
	float                            fMaxZoom;                        // type:FLOAT.0
	vec2V                            vPaperUVScale;                   // type:VEC2V.0
	float                            fPaperIntensity;                 // type:FLOAT.0
	uint                             OverlayColor;                    // type:UINT.1
	uchar                            uTintRow;                        // type:UCHAR.0
	uchar                            uBackgroundColorIdx;             // type:UCHAR.0
	vec2V                            vWorldStart;                     // type:VEC2V.0
	float                            ViewReferenceHeight;             // type:FLOAT.0
	array<string>                    TileSetIds;                      // type:ARRAY.ATARRAY
	array<struct _0xC39E3C76>        Layers;                          // type:ARRAY.ATARRAY
};

struct _0x44C611C0 : _0xF4966086
{
	string                           _0x12B501A6;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x05A5B021                 _0x86FB44AF;                     // type:ENUM.32BIT
	enum _0x05A5B021                 _0x4B2A3615;                     // type:ENUM.32BIT
	enum _0x05A5B021                 _0xB87460D6;                     // type:ENUM.32BIT
	enum _0x05A5B021                 _0xAD8AE2EB;                     // type:ENUM.32BIT
	float                            _0xA8601F93;                     // type:FLOAT.0
	float                            _0xB59F5DB4;                     // type:FLOAT.0
	float                            _0x4BAEE933;                     // type:FLOAT.0
	float                            _0x864900E4;                     // type:FLOAT.0
	float                            _0xD12A8B2F;                     // type:FLOAT.0
	float                            _0x266F88C9;                     // type:FLOAT.0
	float                            _0x21E47C17;                     // type:FLOAT.0
	bool                             _0x5CDB065C;                     // type:BOOL.0
	bool                             _0x9B43988F;                     // type:BOOL.0
	bool                             _0xD6BA6B0B;                     // type:BOOL.0
	bool                             _0xC71352A7;                     // type:BOOL.0
	float                            _0xEADB410F;                     // type:FLOAT.0
	bool                             _0x13B1814C;                     // type:BOOL.0
	float                            _0xF1AAC933;                     // type:FLOAT.0
	float                            _0x993BE016;                     // type:FLOAT.0
	float                            _0x3176BD1A;                     // type:FLOAT.0
	float                            _0xFE05F2FD;                     // type:FLOAT.0
	float                            _0xC4495A79;                     // type:FLOAT.0
	float                            _0x635C1E3C;                     // type:FLOAT.0
	float                            _0xEAA3B796;                     // type:FLOAT.0
	float                            _0x6ED770EC;                     // type:FLOAT.0
	float                            _0xDAFC7328;                     // type:FLOAT.0
	float                            _0x7AF0DA09;                     // type:FLOAT.0
	float                            _0xA59A53F9;                     // type:FLOAT.0
	float                            _0xB083DC53;                     // type:FLOAT.0
	float                            _0xB0BD3591;                     // type:FLOAT.0
	float                            _0xDCACF950;                     // type:FLOAT.0
	float                            _0xF3BB2F2D;                     // type:FLOAT.0
	float                            _0x94D1F97C;                     // type:FLOAT.0
	bool                             _0x034BF0B4;                     // type:BOOL.0
	bool                             _0x6E816D5C;                     // type:BOOL.0
	bool                             _0x1D5ACAB5;                     // type:BOOL.0
	float                            _0x30F21457;                     // type:FLOAT.0
	float                            _0x8A58EFA7;                     // type:FLOAT.0
	float                            _0x9D490FF6;                     // type:FLOAT.0
	float                            _0x918DD640;                     // type:FLOAT.0
	float                            _0x5D780F27;                     // type:FLOAT.0
	float                            _0x0F079B53;                     // type:FLOAT.0
	float                            _0xBCD8E38C;                     // type:FLOAT.0
	float                            _0x9881EAFF;                     // type:FLOAT.0
	float                            _0xFB675DBF;                     // type:FLOAT.0
	float                            _0x6DDF0AD0;                     // type:FLOAT.0
	float                            _0x6F643FA4;                     // type:FLOAT.0
	float                            _0xB455984B;                     // type:FLOAT.0
	float                            _0x0C434CB9;                     // type:FLOAT.0
	float                            _0xA6676DCA;                     // type:FLOAT.0
	float                            _0x7EE129B0;                     // type:FLOAT.0
	float                            _0xA2969663;                     // type:FLOAT.0
	bool                             _0xB5FD8EB4;                     // type:BOOL.0
	float                            _0x3E1ECEC6;                     // type:FLOAT.0
	float                            _0x35A6F154;                     // type:FLOAT.0
	float                            _0xE7654F9D;                     // type:FLOAT.0
	float                            _0xFA889A8A;                     // type:FLOAT.0
	float                            _0x76CE1B21;                     // type:FLOAT.0
	float                            _0xC583777F;                     // type:FLOAT.0
	float                            _0x822F8E20;                     // type:FLOAT.0
	float                            _0xAADFA86C;                     // type:FLOAT.0
	float                            _0x1ED1CD55;                     // type:FLOAT.0
	float                            _0xE332E7BA;                     // type:FLOAT.0
	float                            _0xDF2ED59A;                     // type:FLOAT.0
	float                            _0x72F7F6F3;                     // type:FLOAT.0
	float                            _0x51578562;                     // type:FLOAT.0
	float                            _0x5111E1EE;                     // type:FLOAT.0
	float                            _0x9E4BCDFC;                     // type:FLOAT.0
	float                            _0x4E6938D8;                     // type:FLOAT.0
	float                            _0xAED6E87A;                     // type:FLOAT.0
	float                            _0x5A899F9B;                     // type:FLOAT.0
	float                            _0xAE7F7315;                     // type:FLOAT.0
	float                            _0xAE326C01;                     // type:FLOAT.0
	float                            _0xC0DCF25C;                     // type:FLOAT.0
	float                            _0x843D8030;                     // type:FLOAT.0
	float                            _0x09BC9B1A;                     // type:FLOAT.0
	float                            _0x65C795D1;                     // type:FLOAT.0
	float                            _0xE304ABF6;                     // type:FLOAT.0
	float                            _0xC850ACB0;                     // type:FLOAT.0
	float                            _0xB493CB33;                     // type:FLOAT.0
	float                            _0x8B6B6B5C;                     // type:FLOAT.0
	float                            _0xACCB1878;                     // type:FLOAT.0
	struct _0xEB75F559               _0x4EE58FA7;                     // type:STRUCT.STRUCTURE
	struct _0xEB75F559               _0xFD041EE1;                     // type:STRUCT.STRUCTURE
	struct _0xEB75F559               _0xF6A9529A;                     // type:STRUCT.STRUCTURE
	struct _0xEB75F559               _0x347782DA;                     // type:STRUCT.STRUCTURE
	bool                             _0xF4748CBB;                     // type:BOOL.0
	struct _0x51EB392F               _0xA6BFE355;                     // type:STRUCT.STRUCTURE
	struct _0x51EB392F               _0xCD14E070;                     // type:STRUCT.STRUCTURE
	struct _0x51EB392F               _0x9F2D4163;                     // type:STRUCT.STRUCTURE
	struct _0x51EB392F               _0xE5FC7766;                     // type:STRUCT.STRUCTURE
	struct _0xB834358C               _0xBAF020C0;                     // type:STRUCT.STRUCTURE
	struct _0xB834358C               _0x91850E79;                     // type:STRUCT.STRUCTURE
	struct _0xB834358C               _0xE275D9F5;                     // type:STRUCT.STRUCTURE
	struct _0xB834358C               _0x6CB20115;                     // type:STRUCT.STRUCTURE
	struct _0x859C879B               _0x2518D4A0;                     // type:STRUCT.STRUCTURE
	struct _0x859C879B               WalkParams;                      // type:STRUCT.STRUCTURE
	struct _0x859C879B               _0x32E5B299;                     // type:STRUCT.STRUCTURE
	struct _0x859C879B               RunParams;                       // type:STRUCT.STRUCTURE
	struct _0x859C879B               _0xE29A94D4;                     // type:STRUCT.STRUCTURE
	struct _0x859C879B               _0xF54B9CA2;                     // type:STRUCT.STRUCTURE
	float                            _0x4901AFC0;                     // type:FLOAT.0
	float                            _0xDEE63550;                     // type:FLOAT.0
	float                            _0xFB39C10B;                     // type:FLOAT.0
	float                            _0x5988B0AD;                     // type:FLOAT.0
	float                            _0xD2A36C3F;                     // type:FLOAT.0
	float                            _0x710950EE;                     // type:FLOAT.0
	bool                             _0x5A757353;                     // type:BOOL.0
	float                            _0xF363D66B;                     // type:FLOAT.0
	float                            _0x2E9E8F4D;                     // type:FLOAT.0
};

struct _0x44DEE094 : _0xA6283223
{
	string                           weaponName;                      // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x7EDCDA78>         _0xE158CE1B;                     // type:BITSET.32BIT
};

struct _0x44F286B6 : _0x2E992620
{
	string                           _0x43AC121D;                     // type:STRING.ATSTRING
};

struct _0x44FB0257 : _0x3AB6499E
{
	float                            _0x551EAE08;                     // type:FLOAT.0
};

struct _0x450BE532
{
	float                            RandChance;                      // type:FLOAT.0
	bitset<enum _0x9CBA7585>         Flags;                           // type:BITSET.32BIT
};

struct _0x45183F3D
{
	vec3                             direction;                       // type:VECTOR3.0
	float                            intensity;                       // type:FLOAT.0
	uint                             color;                           // type:UINT.1
};

struct _0x45255C77 : uiScreenInputDataAdjustableBehaviorBase
{
	int                              Value;                           // type:INT.0
	int                              Step;                            // type:INT.0
};

struct _0x45391461 : _0x8A0DC979
{
};

struct _0x4540CF82
{
	uint                             _0xC02E4B08;                     // type:UINT.0
	float                            _0x8EB921DA;                     // type:FLOAT.0
	float                            _0xF0B63392;                     // type:FLOAT.0
};

struct _0x4544092E
{
	array<float, 4>                  fPointPointDensityRadius;        // type:ARRAY.ATRANGEARRAY
	array<float, 3>                  fPointPointRadiusLOD_Distances;  // type:ARRAY.ATRANGEARRAY
	array<float, 4>                  fPedPointDensityRadius;          // type:ARRAY.ATRANGEARRAY
	array<float, 3>                  fPedPointRadiusLOD_Distances;    // type:ARRAY.ATRANGEARRAY
	float                            fGatherPedsPointRadius;          // type:FLOAT.0
	float                            fSameLevelHeight;                // type:FLOAT.0
	float                            fSortingNoiseMin;                // type:FLOAT.0
	float                            fSortingNoiseMax;                // type:FLOAT.0
	float                            fAmbientPedsWeight;              // type:FLOAT.0
	float                            fDiffInteriorPedsWeight;         // type:FLOAT.0
	float                            fGatherPedsWeight;               // type:FLOAT.0
	float                            fDiffFloorScenarioScoreMod;      // type:FLOAT.0
	array<float, 12>                 fInteriorScenarioScoreMod;       // type:ARRAY.ATRANGEARRAY
	float                            fInteriorScenarioFarBehindScoreMod; // type:FLOAT.0
	float                            fClusterScenarioScoreMod;        // type:FLOAT.0
	float                            fChainedScenarioScoreMod;        // type:FLOAT.0
	float                            fExtendedScenarioScoreMod;       // type:FLOAT.0
	float                            fExtraScoreForPointImportanceLow; // type:FLOAT.0
	float                            fExtraScoreForPointImportanceHigh; // type:FLOAT.0
	float                            fExtraScoreForPointImportanceVeryHigh; // type:FLOAT.0
	float                            fAheadPointsMod;                 // type:FLOAT.0
	float                            fMinScoreToTriggerOverpopulationCleanup; // type:FLOAT.0
	float                            fMountOrVehicleSpeedPortionToConsiderFast; // type:FLOAT.0
	float                            fNearbyPedsCapDistance;          // type:FLOAT.0
	float                            fMinNearbyPedsDensity;           // type:FLOAT.0
	float                            fScenarioPickAllowedMinScore;    // type:FLOAT.0
	float                            fChancesToSpawnAmbientPedPair;   // type:FLOAT.0
	float                            fPavementPointsForPedDensityPerMeterSq; // type:FLOAT.0
	float                            fPavementMaxDistToEdgeLine;      // type:FLOAT.0
	array<float, 8>                  fPavementNearbyPedsDesiredCount; // type:ARRAY.ATRANGEARRAY
	array<float, 8>                  fPavementNearbyPedsSearchDistances; // type:ARRAY.ATRANGEARRAY
	bool                             bAllowWanderingHumanPeds;        // type:BOOL.0
	float                            fSpawnRangeInViewMultiplierOnHorse; // type:FLOAT.0
	float                            fSpawnRangeInViewMultiplierInVehicle; // type:FLOAT.0
};

struct _0x45531AE9 : _0x7F29A4A5
{
	string                           Property;                        // type:STRING.ATNSHASHSTRING
};

struct _0x4557A5DF : _0x1054F746
{
};

struct _0x4578942D : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0x4591B22C : CTuning
{
	float                            _0x2EE9211F;                     // type:FLOAT.0
	float                            _0xCC41F82B;                     // type:FLOAT.0
	float                            _0x3A494075;                     // type:FLOAT.0
	float                            _0x22B54C41;                     // type:FLOAT.0
	float                            _0x7D65A906;                     // type:FLOAT.0
};

struct _0x4591B45B : _0x2F7DA38D
{
	struct _0x24749343               clip;                            // type:STRUCT.STRUCTURE
	array<float, 24>                 _0x4FDB02F0;                     // type:ARRAY.ATRANGEARRAY
	float                            blendInDuration;                 // type:FLOAT.0
	float                            blendOutDuration;                // type:FLOAT.0
	float                            _0x64BE00E5;                     // type:FLOAT.0
	float                            _0x895EF81B;                     // type:FLOAT.0
	float                            _0x6B2E466B;                     // type:FLOAT.0
	bitset<enum _0xECC5BC2C>         cameraSettings;                  // type:BITSET.32BIT
	bitset<enum _0x57CBE6C1>         _0x300B8847;                     // type:BITSET.32BIT
	struct _0xE19E0658               _0x03EFD81F;                     // type:STRUCT.POINTER
	string                           _0x54AF1DAB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB0E887EB;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x937BFA7B;                     // type:FLOAT.0
	float                            _0x594DB973;                     // type:FLOAT.0
	enum _0xB4A6BC7B                 _0xD58FE6F7;                     // type:ENUM.32BIT
	enum _0x259BBB88                 _0x67B6947A;                     // type:ENUM.32BIT
	enum _0x0AA919BD                 _0x0C6250F8;                     // type:ENUM.32BIT
};

struct _0x45921A51 : CTuning
{
	struct _0x8E8357AC               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x45964312
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	bool                             _0xA169D44B;                     // type:BOOL.0
	bool                             _0xEE5F6312;                     // type:BOOL.0
	bool                             _0x77E5C4EA;                     // type:BOOL.0
	bool                             _0x55E64F41;                     // type:BOOL.0
	bool                             _0xA74A5B33;                     // type:BOOL.0
	bool                             _0x8DF000F5;                     // type:BOOL.0
	bool                             _0xC2CFF022;                     // type:BOOL.0
	bool                             _0x6DE5B418;                     // type:BOOL.0
	bool                             _0xAECF90C0;                     // type:BOOL.0
};

struct _0x459D38A9 : CAICondition
{
	string                           ItemId;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x459E5B73
{
	string                           _0x6AA44D6A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB92546F8;                     // type:STRING.ATNONFINALHASHSTRING
	enum rage__InputType             InputType;                       // type:ENUM.32BIT
	float                            Radius;                          // type:FLOAT.0
	float                            CloseRadius;                     // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
	float                            LookAngle;                       // type:FLOAT.0
	vec3V                            VehicleEntityOffset;             // type:VEC3V.0
};

struct _0x45B035D1 : _0xF8449058
{
	array<struct _0x355D2806>        Actions;                         // type:ARRAY.ATARRAY
};

struct _0x45B396C6 : _0xA709E487
{
};

struct _0x45BA9C82
{
	struct _0xBF2BD132               LightningMainIntensity;          // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               LightningBranchIntensity;        // type:STRUCT.STRUCTURE
};

struct _0x45CC8262 : _0x673DCB64
{
};

struct _0x45D47235
{
	map<enum _0xE014C36B, struct _0x6BE32756>     OfferItemChances;                // type:MAP.ATBINARYMAP
	float                                         RecentlyIntimidatedModifier;     // type:FLOAT.0
};

struct _0x45D858EB : UIContainer
{
};

struct _0x45E26F3A
{
	array<struct _0xEF399D0C>        Groups;                          // type:ARRAY.ATARRAY
};

struct _0x45E78B4D : _0x11AD3051
{
	struct _0xE19E0658               _0xC618212A;                     // type:STRUCT.POINTER
	struct _0xED16C5B0               _0xBB18B485;                     // type:STRUCT.STRUCTURE
	bool                             _0x47B47045;                     // type:BOOL.0
	uint                             _0xC03CED86;                     // type:UINT.0
};

struct _0x45F2C47B : camBaseObjectMetadata
{
};

struct _0x45F81C32
{
	float                            _0x807B5B75;                     // type:FLOAT.0
};

struct _0x461E7ADA
{
	array<struct _0x12B97F4D>        _0xE72996C6;                     // type:ARRAY.ATARRAY
};

struct _0x46214E38
{
	bool                             _0xD7C80DE5;                     // type:BOOL.0
	float                            Height;                          // type:FLOAT.0
	enum _0x5F70F41E                 _0x59423EB5;                     // type:ENUM.32BIT
};

struct _0x462963B7 : CTuning
{
	struct _0xDCEB3D64               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x463A30CB
{
	string                           Dialogue;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x464B5770 : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0x464F1683
{
	array<struct _0x09C1B78A>        Variations;                      // type:ARRAY.ATARRAY
	bool                             Monologue;                       // type:BOOL.0
	ushort                           MinRepeatTime;                   // type:USHORT.0
};

struct _0x4667CE00
{
	struct _0xE2354E46               Default;                         // type:STRUCT.STRUCTURE
	struct _0xE2354E46               InVehicle;                       // type:STRUCT.STRUCTURE
	struct _0xE2354E46               OnMount;                         // type:STRUCT.STRUCTURE
	struct _0xE2354E46               InHeli;                          // type:STRUCT.STRUCTURE
	struct _0xE2354E46               InBoat;                          // type:STRUCT.STRUCTURE
};

struct _0x46734AB6
{
	array<struct _0xE48F7859>        CoverPoints;                     // type:ARRAY.ATARRAY
	array<struct _0xA6679FF8>        _0x39CD9D8B;                     // type:ARRAY.ATARRAY
};

struct _0x4688AA35 : UIBehavior
{
	string                           _0x3893CE33;                     // type:STRING.CONST_STRING
};

struct _0x46976C8C
{
	string                           FlickClipSet;                    // type:STRING.ATNONFINALHASHSTRING
	string                           FlickClipSetFemale;              // type:STRING.ATNONFINALHASHSTRING
	struct _0xEFB8673F               DefaultFlicks;                   // type:STRUCT.STRUCTURE
	struct _0xEFB8673F               LeftFlicks;                      // type:STRUCT.STRUCTURE
	struct _0xEFB8673F               RightFlicks;                     // type:STRUCT.STRUCTURE
};

struct _0x46CEB373 : _0xDA1F7477
{
	enum _0xBABBE5D2                 Season;                          // type:ENUM.32BIT
};

struct _0x46CEE975 : _0x7EAFD12D
{
};

struct _0x46D8BDDB
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	float                            RandomChance;                    // type:FLOAT.0
	enum _0xA5321A62                 VisibleLootSlotRequest;          // type:ENUM.32BIT
	float                            Score;                           // type:FLOAT.0
	string                           LootTable;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x47045B49
{
	bool                             _0x803A22EC;                     // type:BOOL.0
	matrix34V                        _0x0E7C3973;                     // type:MAT34V.0
	float                            _0x5E589C38;                     // type:FLOAT.0
};

struct _0x4712787B
{
	array<struct _0x57AD0B12>        _0x76BF57D2;                     // type:ARRAY.ATARRAY
	array<vec3V>                     EntityPositions;                 // type:ARRAY.ATARRAY
};

struct _0x4725DC7F
{
	map<string, vec4>                _0xED3A93C9;                     // type:MAP.ATBINARYMAP
	array<struct _0xC9F31B66>        _0x98ED3E33;                     // type:ARRAY.ATARRAY
	array<struct _0x8277295E>        _0xBFB5A18E;                     // type:ARRAY.ATARRAY
	array<struct _0xAAD79D83>        _0x6F00E506;                     // type:ARRAY.ATARRAY
	array<struct _0x532765FF>        _0xABA06698;                     // type:ARRAY.ATARRAY
	array<struct _0x436D7D1C>        _0x5D5FFE41;                     // type:ARRAY.ATARRAY
};

struct _0x474AF132 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x475E839A : CTuning
{
	struct _0x016AF558               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x476BC347
{
	struct _0x1054F746               Message;                         // type:STRUCT.POINTER
	bool                             _0x1EBACBDB;                     // type:BOOL.0
	bool                             _0xA9741B88;                     // type:BOOL.0
	enum _0x5C097F19                 _0x97B19EBA;                     // type:ENUM.32BIT
	enum _0xD495912C                 _0x83961F7C;                     // type:ENUM.32BIT
};

struct _0x47700E7C : _0x8A0DC979
{
};

struct _0x478AE1AC : _0x39DE799A
{
	struct _0x4A60D095               BindingContext;                  // type:STRUCT.POINTER
	string                           TypeAlias;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x47956A6D
{
	uint                             _0x24AFF4B6;                     // type:UINT.0
	uint                             _0xE5F1CD1E;                     // type:UINT.0
	uint                             _0x1DA37D6B;                     // type:UINT.0
	float                            _0xF648E41F;                     // type:FLOAT.0
};

struct _0x47A107E4 : CTuning
{
	uint                             _0x0EB1E187;                     // type:UINT.0
	uint                             _0x99705ADC;                     // type:UINT.0
	uint                             _0x70650DC9;                     // type:UINT.0
	bool                             _0xC4B6CE31;                     // type:BOOL.0
};

struct _0x47BB2FD6 : _0xADE15FC7
{
};

struct _0x47BD9996
{
	uint                             _0x00C60B3C;                     // type:UINT.0
	uint                             _0xCD67C291;                     // type:UINT.0
	int                              _0xDCB3868A;                     // type:INT.0
	int                              _0xE0623714;                     // type:INT.0
	int                              _0xE781ECB5;                     // type:INT.0
	int                              _0x80A9C8F4;                     // type:INT.0
	uint                             _0x3537BBEB;                     // type:UINT.0
	uint                             _0x20E2851C;                     // type:UINT.0
	int                              _0x83789F80;                     // type:INT.0
	int                              _0xF874904B;                     // type:INT.0
	int                              _0x876EA146;                     // type:INT.0
	float                            _0x86C298BA;                     // type:FLOAT.0
	float                            _0x0E8E7ED0;                     // type:FLOAT.0
	float                            _0x73BDC0DC;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xA0F4A113;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xFF5EDE9E;                     // type:ENUM.32BIT
	bool                             _0x99BFE872;                     // type:BOOL.0
	uint                             _0xF0B66DB6;                     // type:UINT.0
	float                            _0xC3072BF5;                     // type:FLOAT.0
	float                            _0x9D01FDD4;                     // type:FLOAT.0
	float                            _0xFD9094DA;                     // type:FLOAT.0
	float                            _0xF938FAB6;                     // type:FLOAT.0
};

struct _0x47CAEC75 : CTuning
{
	struct _0x2A809337               _0x77B1DF89;                     // type:STRUCT.STRUCTURE
	struct _0x62EDD645               _0x3F4B8D1D;                     // type:STRUCT.STRUCTURE
	struct _0x18D5AB07               _0x7550A196;                     // type:STRUCT.STRUCTURE
	float                            _0xA70525CE;                     // type:FLOAT.0
};

struct _0x47D7F7B5
{
	bool                             _0x8CCB7DDE;                     // type:BOOL.0
	float                            _0xB37BC759;                     // type:FLOAT.0
};

struct _0x47E40290 : _0xED23B004
{
	bool                             Value;                           // type:BOOL.0
};

struct _0x47E8F679
{
	array<struct _0x47E8F679>        Variations;                      // type:ARRAY.ATARRAY
	bitset<enum _0x89D9B8BD>         Tags;                            // type:BITSET.32BIT
	struct _0xBD0AD460               SensoryData;                     // type:STRUCT.STRUCTURE
};

struct _0x47F03035 : uiGenericEventDataBase
{
	uint64                           data;                            // type:UINT64.0
};

struct _0x47F8B5EE : _0x17D63CD1
{
	string                           MotionSet;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x48033767 : _0xDFED37A7
{
};

struct _0x480A91D7
{
	string                           StartTime;                       // type:STRING.ATSTRING
	string                           EndTime;                         // type:STRING.ATSTRING
	bitset<enum _0xB968072D>         Flags;                           // type:BITSET.32BIT
	string                           _0xEA841F1C;                     // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	array<struct _0xD65BC8F8>        ModelSets;                       // type:ARRAY.ATARRAY
	enum _0xE1F61859                 _0x20060E83;                     // type:ENUM.32BIT
	enum _0xDCA24677                 Density;                         // type:ENUM.32BIT
	uint                             _0x25F678B3;                     // type:UINT.0
	uint                             _0x65FD2EC1;                     // type:UINT.0
	uint                             _0x3B7B9FF1;                     // type:UINT.0
	uint                             _0x54366577;                     // type:UINT.0
	uint                             _0x456FA5BA;                     // type:UINT.0
	bool                             _0xEF518F32;                     // type:BOOL.0
	int                              TimeFlockSleeping;               // type:INT.0
};

struct _0x4811791C : CAICondition
{
	string                           VolumeName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0x4817D6E4 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x48334981
{
	array<struct _0x1603888E>        partsToSpawn;                    // type:ARRAY.ATARRAY
	array<struct _0xCCA41165>        goreCaps;                        // type:ARRAY.ATARRAY
	array<string>                    tagsToRemove;                    // type:ARRAY.ATARRAY
	array<ushort>                    cutoffBones;                     // type:ARRAY.ATARRAY
	string                           tagToKnockOff;                   // type:STRING.ATNONFINALHASHSTRING
	string                           goreTagToRemove;                 // type:STRING.ATNONFINALHASHSTRING
	string                           collisionModel;                  // type:STRING.ATNONFINALHASHSTRING
	string                           goreCapTag;                      // type:STRING.ATNONFINALHASHSTRING
	string                           vfx;                             // type:STRING.ATNONFINALHASHSTRING
	ushort                           attachBone;                      // type:USHORT.0
	bool                             cutoffBonesCollisionOnly;        // type:BOOL.0
};

struct _0x483E779D : _0x69C0774C
{
};

struct _0x48595F30
{
	float                            fJumpVaultSubmergeLevelThreshold; // type:FLOAT.0
	float                            fStepUpDistanceCutoffClose;      // type:FLOAT.0
	float                            fStepUpDistanceCutoff;           // type:FLOAT.0
	float                            fStealthStepUpDistanceCutoffClose; // type:FLOAT.0
	float                            fStealthStepUpDistanceCutoff;    // type:FLOAT.0
	float                            fAutoStepUpHeight;               // type:FLOAT.0
	float                            fAutoStepUpPedHeight;            // type:FLOAT.0
	float                            fMaxDistStepUp;                  // type:FLOAT.0
	float                            fAutoVaultDistMBRMin;            // type:FLOAT.0
	float                            fAutoVaultDistMBRMax;            // type:FLOAT.0
	float                            fVaultDistanceManual;            // type:FLOAT.0
	float                            fVaultMinDistanceManual;         // type:FLOAT.0
	float                            fVaultMaxDistanceManual;         // type:FLOAT.0
	float                            fVaultDistanceStanding;          // type:FLOAT.0
	float                            fVaultDistanceStandingVehicle;   // type:FLOAT.0
	float                            fVaultDistanceInWater;           // type:FLOAT.0
	float                            fLargeHorizontalTestDistance;    // type:FLOAT.0
	float                            fInAirVaultDistance;             // type:FLOAT.0
	float                            fInAirVaultHeightMin;            // type:FLOAT.0
	float                            fInAirVaultHeightMax;            // type:FLOAT.0
	float                            fInAirHorizontalTestGroundOffset; // type:FLOAT.0
	uint                             uStepUpReduceGaitTime;           // type:UINT.0
	uint                             uGaitReducedTimeForAutoVault;    // type:UINT.0
	bool                             bEnableFailClimbs;               // type:BOOL.0
};

struct _0x485B120B
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x485B2CD8 : uiSelectableBehaviorBase
{
	enum eUiEventChannels            EventChannel;                    // type:ENUM.32BIT
	struct uiEventDataBase           EventData;                       // type:STRUCT.POINTER
};

struct _0x485F3B08 : _0x5BE4874A
{
};

struct _0x4861222B : _0x8A0DC979
{
	string                           ContextType;                     // type:STRING.ATNONFINALHASHSTRING
	struct uiFeedbackContext         context;                         // type:STRUCT.POINTER
	bool                             restoreOnExit;                   // type:BOOL.0
};

struct _0x4862CAC8 : _0x00EAD092
{
	char                             HorizontalOffset;                // type:CHAR.0
	char                             VerticalOffset;                  // type:CHAR.0
	bool                             _0x45649FF9;                     // type:BOOL.0
	int                              _0x68BF534F;                     // type:INT.0
};

struct _0x4862DC30 : _0x0A510DA9
{
};

struct _0x486331A0
{
	string                           AIMemoryLongTermFilterSet;       // type:STRING.ATNONFINALHASHSTRING
	string                           AttitudeRuleSet;                 // type:STRING.ATNONFINALHASHSTRING
	enum _0xF9A5DFAA                 OwnedLocation;                   // type:ENUM.32BIT
	float                            ApproachGreetBaseChance;         // type:FLOAT.0
	float                            _0x287F1A93;                     // type:FLOAT.0
	float                            _0xFBBC6051;                     // type:FLOAT.0
	float                            _0x4124BD96;                     // type:FLOAT.0
	array<string>                    AIGroupMemberships;              // type:ARRAY.ATARRAY
	array<string>                    SpeechRuleSets;                  // type:ARRAY.ATARRAY
};

struct _0x487C7F99 : StatsGoalScoreSourceScript
{
};

struct _0x48935990 : _0xA0889763
{
	int                              value;                           // type:INT.0
};

struct _0x489E5124 : _0x5B13805C
{
	string                           EntryPoint;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0x48C5586A
{
	bool                             _0xC90F056A;                     // type:BOOL.0
	float                            MinMBR;                          // type:FLOAT.0
	float                            MaxMBR;                          // type:FLOAT.0
	float                            _0x52D57EAB;                     // type:FLOAT.0
	float                            _0x114B895E;                     // type:FLOAT.0
	float                            _0xCE1F459F;                     // type:FLOAT.0
	float                            _0x8709910F;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0xDB047B3A;                     // type:FLOAT.0
	float                            _0xD46B5E55;                     // type:FLOAT.0
	float                            _0xCE4C1400;                     // type:FLOAT.0
	bool                             _0xA47D1845;                     // type:BOOL.0
};

struct _0x48C77A4E : CTuning
{
};

struct _0x48D48025 : _0x0A510DA9
{
};

struct _0x48EA7C70
{
	string                           NameLabel;                       // type:STRING.ATNONFINALHASHSTRING
	string                           MenuLink;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x48ED399C
{
	uint                             MaxDurationToTrackVehicles;      // type:UINT.0
	float                            _0x451C5FEB;                     // type:FLOAT.0
	float                            _0x42798EE5;                     // type:FLOAT.0
	float                            DetectionRadius;                 // type:FLOAT.0
	float                            DistanceToTestDownForVehiclesToReject; // type:FLOAT.0
};

struct _0x48F155B4 : _0x4134FC98
{
};

struct _0x49029EEE : _0xB74AC865
{
};

struct _0x491C5204 : rage__StackPanelParams
{
	uint                             virtualChildCount;               // type:UINT.0
};

struct _0x4925EB11
{
	int                              Index;                           // type:INT.0
	vec3V                            Position;                        // type:VEC3V.0
	vec4V                            Colour;                          // type:VEC4V.0
	bool                             IsSorted;                        // type:BOOL.0
};

struct _0x492F5E17
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	array<struct _0xD0B14299>        ClipSets;                        // type:ARRAY.ATARRAY
	struct _0x9AE64F9E               _0x3701A4C7;                     // type:STRUCT.STRUCTURE
	struct _0xEBC633C1               HashStringData;                  // type:STRUCT.STRUCTURE
	array<string>                    CaptureFrames;                   // type:ARRAY.ATARRAY
	string                           Flag;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x4A5DDA13>         FPSCHData;                       // type:BITSET.8BIT
};

struct _0x493BA4E9
{
	string                                PedSet;                          // type:STRING.ATNONFINALHASHSTRING
	enum WeaponActionClipSetVariation     WeaponActionIndex;               // type:ENUM.32BIT
	struct _0xC4561C6C                    Validation;                      // type:STRUCT.STRUCTURE
};

struct _0x49548C66
{
	int                              _0x8BD121B6;                     // type:INT.0
	int                              _0x74AB3AB5;                     // type:INT.0
	float                            _0xB29FB344;                     // type:FLOAT.0
	float                            _0x6D3B7168;                     // type:FLOAT.0
	float                            _0x34F880D5;                     // type:FLOAT.0
};

struct _0x49550F9C : _0xD2137166
{
	struct _0xCE064FC1               Path;                            // type:STRUCT.STRUCTURE
};

struct _0x4955A457
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             CoverPoints;                     // type:BOOL.0
	bool                             NavMeshPoints;                   // type:BOOL.0
	bitset<enum _0xCBF128D1>         _0x6E54D603;                     // type:BITSET.32BIT
	bitset<enum _0xCBF128D1>         _0xC35597BC;                     // type:BITSET.32BIT
	bitset<enum _0x498CBB3B>         _0x41135767;                     // type:BITSET.32BIT
	bitset<enum _0x498CBB3B>         _0x75635FC0;                     // type:BITSET.32BIT
	bitset<enum _0xD76B0DE6>         _0xEA4BEBCE;                     // type:BITSET.32BIT
	bitset<enum _0xD76B0DE6>         _0x23434FBD;                     // type:BITSET.32BIT
	bool                             _0x619B706F;                     // type:BOOL.0
	bool                             Position;                        // type:BOOL.0
	bool                             LineOfSightStatus;               // type:BOOL.0
	bool                             _0x8BA43AC9;                     // type:BOOL.0
	bool                             ArcStatus;                       // type:BOOL.0
	bool                             Reserved;                        // type:BOOL.0
	bool                             Nearby;                          // type:BOOL.0
	bool                             BadRouteValue;                   // type:BOOL.0
	bool                             Reservations;                    // type:BOOL.0
	bool                             LineOfSightTests;                // type:BOOL.0
	bool                             Flags;                           // type:BOOL.0
	bool                             Text;                            // type:BOOL.0
	float                            _0x99CE303B;                     // type:FLOAT.0
};

struct _0x4961A079
{
	ushort                           BoneId;                          // type:USHORT.0
	vec3V                            Offset;                          // type:VEC3V.0
};

struct _0x4964B112 : _0xA0889763
{
	string                           value;                           // type:STRING.ATNSHASHSTRING
};

struct _0x496960B7
{
	float                            _0x048A319D;                     // type:FLOAT.0
	float                            _0xCA8FD6BA;                     // type:FLOAT.0
	float                            _0x87ADA523;                     // type:FLOAT.0
};

struct _0x49827D09 : CAICondition
{
	enum _0x563FBCEA                 Player;                          // type:ENUM.32BIT
	int                              LowerBound;                      // type:INT.0
	int                              UpperBound;                      // type:INT.0
	float                            Radius;                          // type:FLOAT.0
};

struct _0x499E1BE4
{
	string                           ptFxAssetName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           ptFxName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xBEDC3290;                     // type:FLOAT.0
	bool                             _0xB76AA1BB;                     // type:BOOL.0
	bool                             _0x045D2771;                     // type:BOOL.0
	bool                             _0x7E9BD3F8;                     // type:BOOL.0
	bool                             _0x379D88DB;                     // type:BOOL.0
	bool                             _0x84D96361;                     // type:BOOL.0
};

struct _0x49BFDD33
{
	bool                             InterpTarget;                    // type:BOOL.0
	bool                             PerformIntersectionTestForPlayer; // type:BOOL.0
	float                            LocoAngleInterpRate;             // type:FLOAT.0
	float                            DepthInInterpFast;               // type:FLOAT.0
	float                            DepthInInterpSlow;               // type:FLOAT.0
	float                            DepthInInterpDistance;           // type:FLOAT.0
	float                            DepthOutInterpFast;              // type:FLOAT.0
	float                            DepthOutInterpSlow;              // type:FLOAT.0
	float                            DepthOutInterpDistance;          // type:FLOAT.0
	float                            MinTargetLength;                 // type:FLOAT.0
	float                            MaxTargetLength;                 // type:FLOAT.0
	vec2V                            TargetAdditiveAngleInterp;       // type:VEC2V.0
	vec2V                            ProjectileLaunchAngleInterp;     // type:VEC2V.0
	vec2V                            AddDesiredDirectionDeltaClamp;   // type:VEC2V.0
	float                            TargetAdditiveAngleBlendInterp;  // type:FLOAT.0
	float                            ProjectileLaunchClampedPitchCorrectionLimit; // type:FLOAT.0
	vec2V                            MinAngleInterpRate;              // type:VEC2V.0
	vec2V                            MaxAngleInterpRate;              // type:VEC2V.0
	float                            StartInterpRate;                 // type:FLOAT.0
	float                            StartInterpOffsetThreshold;      // type:FLOAT.0
	float                            AdditiveTargetMinDistance;       // type:FLOAT.0
	vec2V                            PedRelativePoleRadiusHeight;     // type:VEC2V.0
	vec2V                            PedForwardAngleWeightBlend;      // type:VEC2V.0
	vec2V                            PedForwardAngleOffsetBlend;      // type:VEC2V.0
};

struct _0x49C02F3A
{
	float                            _0xCD1F6B30;                     // type:FLOAT.0
	float                            _0x9AA9CAC6;                     // type:FLOAT.0
	float                            _0xB5D17C38;                     // type:FLOAT.0
	float                            _0x64AF75B8;                     // type:FLOAT.0
	float                            _0x065FBF93;                     // type:FLOAT.0
	string                           _0x18F928A0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x92436AB7;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x078BD94E>        _0x445BAB60;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x6075DB56;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0xE0F48F41;                     // type:ARRAY.ATARRAY
};

struct _0x49EB915C : uiScreenInputDataAdjustableBehaviorBase
{
	size_t                           Value;                           // type:SIZET.0
	size_t                           Step;                            // type:SIZET.0
};

struct _0x49EBFA47 : _0x2F7DA38D
{
	vec3V                            _0x6F66C2BD;                     // type:VEC3V.0
	bool                             _0x3B6C6A50;                     // type:BOOL.0
	bool                             _0x0021CA14;                     // type:BOOL.0
	bool                             _0xE91D5D23;                     // type:BOOL.0
	bool                             _0x2A337FE1;                     // type:BOOL.0
	float                            _0x914BD6B6;                     // type:FLOAT.0
	float                            _0x6DF0E4EE;                     // type:FLOAT.0
	int                              _0x7B562AC5;                     // type:INT.0
	float                            _0x568D9622;                     // type:FLOAT.0
	int                              _0xCB8E50A6;                     // type:INT.0
	bool                             _0xAB742BA4;                     // type:BOOL.0
	bool                             _0xD39685EA;                     // type:BOOL.0
	float                            _0xB06BB79F;                     // type:FLOAT.0
	bool                             _0xE1CF1BE3;                     // type:BOOL.0
	float                            _0x1476557D;                     // type:FLOAT.0
};

struct _0x49EE8C02 : _0x906508CE
{
};

struct _0x4A04EE7F
{
	uint                             _0xCA813CC8;                     // type:UINT.0
	uint                             _0xDC81B581;                     // type:UINT.0
	uint                             _0xBA35B2CD;                     // type:UINT.0
	uint                             _0x5BC25929;                     // type:UINT.0
	float                            _0x8C78B8B8;                     // type:FLOAT.0
};

struct _0x4A15DCB9 : _0xA57BA3ED
{
};

struct _0x4A1A4F98 : _0xCAAD7E2F
{
};

struct _0x4A265BE5 : _0x41E8C36E
{
};

struct _0x4A2F5434
{
	enum _0x9B2DCF16                 _0x9B2DCF16;                     // type:ENUM.32BIT
	bool                             _0xAB6F8782;                     // type:BOOL.0
	float                            Opacity;                         // type:FLOAT.0
	uint                             _0x51DC7E1B;                     // type:UINT.0
	float                            _0x9A4FABD9;                     // type:FLOAT.0
	float                            _0x5DD9B63C;                     // type:FLOAT.0
	uint                             _0xC9FD599F;                     // type:UINT.0
	float                            _0xB18E46E1;                     // type:FLOAT.0
	float                            _0x8F2DBEF0;                     // type:FLOAT.0
	uint                             _0x00F9E575;                     // type:UINT.0
	float                            _0x25DB05E5;                     // type:FLOAT.0
	float                            _0x9BB97F8C;                     // type:FLOAT.0
	bool                             _0xB1CE4EF8;                     // type:BOOL.0
	uint                             _0xDECAB344;                     // type:UINT.0
	float                            _0x8B7922AA;                     // type:FLOAT.0
	float                            _0xD6C928E2;                     // type:FLOAT.0
	bool                             _0xC94D16AF;                     // type:BOOL.0
	uint                             _0x504A96BC;                     // type:UINT.0
	float                            _0x3CF4FADE;                     // type:FLOAT.0
	float                            _0xF3B78886;                     // type:FLOAT.0
	bool                             _0xDC46E40A;                     // type:BOOL.0
	uint                             _0xC26313FE;                     // type:UINT.0
	float                            _0x402E9104;                     // type:FLOAT.0
	float                            _0xC984F81D;                     // type:FLOAT.0
	bool                             _0x919D9099;                     // type:BOOL.0
};

struct _0x4A373F8A : _0x4DA163F4
{
	string                           _0xC3C9224B;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x1159D22B                 _0x738E568A;                     // type:ENUM.32BIT
	int                              index;                           // type:INT.0
};

struct _0x4A390A26 : CTuning
{
	struct _0x0A9836EF               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x4A52B7E5
{
};

struct _0x4A5D8685
{
	float                            _0xDE64FCCF;                     // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
};

struct _0x4A60D095
{
	enum _0x1925B7EA                 PathType;                        // type:ENUM.32BIT
};

struct _0x4A7AD954 : _0x4A60D095
{
	string                           Path;                            // type:STRING.ATSTRING
};

struct _0x4A7E9558
{
	float                            _0x1B111453;                     // type:FLOAT.0
	float                            _0x844409FD;                     // type:FLOAT.0
	float                            _0x9412C080;                     // type:FLOAT.0
	enum _0x8C678728                 Priority;                        // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	bool                             _0x6A2B910A;                     // type:BOOL.0
	bool                             NoSpawn;                         // type:BOOL.0
};

struct _0x4A7EBF22
{
	float                            WalkMin;                         // type:FLOAT.0
	float                            WalkMax;                         // type:FLOAT.0
	float                            JogMin;                          // type:FLOAT.0
	float                            JogMax;                          // type:FLOAT.0
	float                            RunMin;                          // type:FLOAT.0
	float                            RunMax;                          // type:FLOAT.0
	float                            SprintMin;                       // type:FLOAT.0
	float                            SprintMax;                       // type:FLOAT.0
	float                            PreferredTurnNarrowestScale;     // type:FLOAT.0
	float                            PreferredTurnWidestScale;        // type:FLOAT.0
};

struct _0x4A8ADA17 : _0x1E3BD232
{
	array<struct _0xC5AA3369>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0x4A8F2CCF : _0x8A0DC979
{
};

struct _0x4AAAE2C4
{
	array<struct _0x51D5FF4A>        _0xA79C5C31;                     // type:ARRAY.ATARRAY
};

struct _0x4AAC5C2A
{
};

struct _0x4AB37DCD : _0x1054F746
{
};

struct _0x4AB6CD53 : UIBehavior
{
	vec3V                            _0xB8EF529A;                     // type:VEC3V.0
	vec3V                            _0xFA9D726B;                     // type:VEC3V.0
	vec3V                            _0x629AB8A5;                     // type:VEC3V.0
};

struct _0x4AB6DCD3 : _0xB88D6BEE
{
	struct _0x43B62543               Event;                           // type:STRUCT.STRUCTURE
	struct _0x43B62543               _0x502FA976;                     // type:STRUCT.STRUCTURE
};

struct _0x4ABDAC5B
{
	string                           categoryName;                    // type:STRING.ATSTRING
	uint                             _0xFC422E6F;                     // type:UINT.0
	uint                             _0xCC848723;                     // type:UINT.0
};

struct _0x4ABDB2ED
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x9F7EA696;                     // type:ARRAY.ATARRAY
	array<string>                    _0xAFA1684F;                     // type:ARRAY.ATARRAY
	bool                             wasObserved;                     // type:BOOL.0
	uint                             _0x7ACCA7EB;                     // type:UINT.0
	uint                             _0x83907069;                     // type:UINT.0
};

struct _0x4AD37C0A
{
};

struct _0x4AD6C274 : _0xB74AC865
{
};

struct _0x4AD8C6EA
{
	int                              OrderNumber;                     // type:INT.0
	string                           Entry;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x4ADCA08E : CTuning
{
	float                            _0x7C34D3B8;                     // type:FLOAT.0
	float                            _0x220CAF8C;                     // type:FLOAT.0
	float                            _0x8DBD784A;                     // type:FLOAT.0
	float                            _0x932B71FD;                     // type:FLOAT.0
	float                            _0xD44379CF;                     // type:FLOAT.0
};

struct _0x4AE9A654
{
	uint                             _0x7A87EA75;                     // type:UINT.1
	uint                             _0x6B194190;                     // type:UINT.1
	uint                             _0xA4F683A6;                     // type:UINT.1
	uint                             _0x7DAC3DCE;                     // type:UINT.1
	float                            _0x00A99628;                     // type:FLOAT.0
	float                            _0x5FD700E9;                     // type:FLOAT.0
	float                            _0xFE2C719F;                     // type:FLOAT.0
	float                            _0xE5FCCAF0;                     // type:FLOAT.0
	float                            falloff;                         // type:FLOAT.0
	float                            falloffBias;                     // type:FLOAT.0
	float                            _0x4BD363E5;                     // type:FLOAT.0
	float                            _0xD4F6AE62;                     // type:FLOAT.0
	float                            _0xACC4664A;                     // type:FLOAT.0
	float                            nonDirectionality;               // type:FLOAT.0
	float                            wrapAmount;                      // type:FLOAT.0
	float                            _0xF6CC1EF5;                     // type:FLOAT.0
};

struct _0x4AF8985C
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	string                           vfxRegion;                       // type:STRING.ATNONFINALHASHSTRING
	uchar                            _0x7111AC8A;                     // type:UCHAR.0
	float                            vehDirtMin;                      // type:FLOAT.0
	float                            vehDirtMax;                      // type:FLOAT.0
	float                            vehDirtGrowScale;                // type:FLOAT.0
	float                            pedDirtMin;                      // type:FLOAT.0
	float                            pedDirtMax;                      // type:FLOAT.0
	float                            _0xCC1252A2;                     // type:FLOAT.0
	float                            _0xBEB81589;                     // type:FLOAT.0
	string                           _0x0AC1275E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x66A8F10A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x77ACDC10;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x9A338C53;                     // type:FLOAT.0
	float                            _0xF8C2C0C0;                     // type:FLOAT.0
	float                            _0xA57FDFCE;                     // type:FLOAT.0
	float                            _0x37BD8C6B;                     // type:FLOAT.0
	float                            _0x81A36B15;                     // type:FLOAT.0
	float                            _0x4C3E77C0;                     // type:FLOAT.0
	bool                             _0x2C34011F;                     // type:BOOL.0
	bool                             _0x7810AEBB;                     // type:BOOL.0
	bool                             _0x163693CC;                     // type:BOOL.0
	float                            _0x151EA90B;                     // type:FLOAT.0
	float                            _0xC9C91C80;                     // type:FLOAT.0
	float                            _0x02E0A1FC;                     // type:FLOAT.0
	float                            _0x48587B41;                     // type:FLOAT.0
	float                            humidity;                        // type:FLOAT.0
	string                           pedDirtDefinition;               // type:STRING.ATFINALHASHSTRING
	string                           _0x4F1FD576;                     // type:STRING.ATFINALHASHSTRING
	string                           _0x142269D5;                     // type:STRING.ATFINALHASHSTRING
	float                            _0x4088AD58;                     // type:FLOAT.0
	float                            _0x34648FBC;                     // type:FLOAT.0
	float                            _0x276185D3;                     // type:FLOAT.0
	float                            _0xF2398478;                     // type:FLOAT.0
	float                            _0xE31C8771;                     // type:FLOAT.0
	float                            _0x5EF304AF;                     // type:FLOAT.0
	float                            _0x7B1EF231;                     // type:FLOAT.0
	float                            _0xB97AEFF1;                     // type:FLOAT.0
	float                            _0x52969069;                     // type:FLOAT.0
	float                            _0xBE1137A3;                     // type:FLOAT.0
	float                            _0x60E79C30;                     // type:FLOAT.0
	float                            _0x552A972E;                     // type:FLOAT.0
	float                            _0xC4905A70;                     // type:FLOAT.0
	float                            _0xA8F6B947;                     // type:FLOAT.0
	float                            _0xF64DDD77;                     // type:FLOAT.0
	float                            _0xDE4478C7;                     // type:FLOAT.0
	float                            _0x2F240F8B;                     // type:FLOAT.0
	float                            _0xCD88E925;                     // type:FLOAT.0
	float                            _0xFA459831;                     // type:FLOAT.0
	float                            _0x7C20CCB8;                     // type:FLOAT.0
	float                            _0x373FEF25;                     // type:FLOAT.0
	float                            _0xA305B76C;                     // type:FLOAT.0
	bool                             _0xDA810BCE;                     // type:BOOL.0
	float                            _0x382442D4;                     // type:FLOAT.0
	float                            _0xF7FE39D9;                     // type:FLOAT.0
	float                            _0x04760D6B;                     // type:FLOAT.0
	float                            _0x143FD55C;                     // type:FLOAT.0
	float                            _0x252B79EA;                     // type:FLOAT.0
	float                            _0xFCB0BB39;                     // type:FLOAT.0
	float                            _0x6271EE05;                     // type:FLOAT.0
	float                            _0x019EA1BE;                     // type:FLOAT.0
	float                            _0xB9027E7D;                     // type:FLOAT.0
	float                            _0xBEC48610;                     // type:FLOAT.0
	float                            _0xF518DC45;                     // type:FLOAT.0
	float                            _0xC676EF40;                     // type:FLOAT.0
	float                            _0x34140ED5;                     // type:FLOAT.0
	float                            _0xFDC171FA;                     // type:FLOAT.0
	float                            _0x56B44AE8;                     // type:FLOAT.0
	float                            _0x916E9955;                     // type:FLOAT.0
	float                            _0xDF99E530;                     // type:FLOAT.0
	float                            _0x6DA5CCDE;                     // type:FLOAT.0
	float                            _0x32CEB58D;                     // type:FLOAT.0
	float                            _0x500BDD93;                     // type:FLOAT.0
	float                            _0x34C735F4;                     // type:FLOAT.0
	float                            _0x1E09A3D2;                     // type:FLOAT.0
	bool                             _0x0AD3489C;                     // type:BOOL.0
	float                            _0x5015B97B;                     // type:FLOAT.0
	float                            _0xAAE453AB;                     // type:FLOAT.0
	float                            _0xA0EFC780;                     // type:FLOAT.0
	float                            _0x13072952;                     // type:FLOAT.0
	float                            _0x7D298581;                     // type:FLOAT.0
	float                            _0x7344A1DC;                     // type:FLOAT.0
	float                            _0x5F6B4CF1;                     // type:FLOAT.0
	float                            _0x684E9397;                     // type:FLOAT.0
	float                            _0xBD42C48A;                     // type:FLOAT.0
	float                            _0xCC684BE7;                     // type:FLOAT.0
	float                            _0x44740B3C;                     // type:FLOAT.0
	float                            _0x25049A00;                     // type:FLOAT.0
	float                            _0x6CAB32F8;                     // type:FLOAT.0
	float                            _0xAFD5321A;                     // type:FLOAT.0
	float                            _0x754F71F3;                     // type:FLOAT.0
	float                            _0xDDB64475;                     // type:FLOAT.0
	float                            _0xEA643E29;                     // type:FLOAT.0
	float                            _0xE235CB59;                     // type:FLOAT.0
	float                            _0xF4996ECB;                     // type:FLOAT.0
	float                            _0x7C95F7B9;                     // type:FLOAT.0
	float                            _0xB883C83D;                     // type:FLOAT.0
	float                            _0xAB161B37;                     // type:FLOAT.0
};

struct _0x4B47DAA6 : uiScreenInputBehaviorBase
{
};

struct _0x4B66F14C
{
	float                            MinFilteredStickBreakoutToLocomotionAngle; // type:FLOAT.0
	float                            MinFilteredStickBreakoutToLocomotionMagnitude; // type:FLOAT.0
	float                            MinFullExitStickBreakoutToLocomotionAngle; // type:FLOAT.0
	float                            MinFullExitStickBreakoutToLocomotionMagnitude; // type:FLOAT.0
};

struct _0x4B6DBAA0 : _0xB74AC865
{
};

struct _0x4B6F9353
{
	array<struct _0xE2384B4B>        ClipData;                        // type:ARRAY.ATARRAY
	array<struct _0x0B9B6CB2>        _0x22D49680;                     // type:ARRAY.ATARRAY
};

struct _0x4B7C425C
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	float                            SpawnDelay;                      // type:FLOAT.0
};

struct _0x4B7CC512 : CAICondition
{
};

struct _0x4B80038D
{
	array<struct _0x77E5CEF4>        info;                            // type:ARRAY.ATARRAY
};

struct _0x4B80AC69
{
	string                           _0x9AC71C4E;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                boneTag;                         // type:ENUM.32BIT
	int                              probability;                     // type:INT.0
};

struct _0x4B852C44
{
	array<struct _0x01843326>        conditions;                      // type:ARRAY.ATARRAY
};

struct _0x4B895669
{
	bool                             ApplyVehicleScale;               // type:BOOL.0
	float                            VehicleScale;                    // type:FLOAT.0
	bool                             ApplyPedScale;                   // type:BOOL.0
	float                            PedScale;                        // type:FLOAT.0
};

struct _0x4B89E126
{
	int                              _0xD3B9FE92;                     // type:INT.0
	int                              VScale;                          // type:INT.0
	float                            _0xD3A09022;                     // type:FLOAT.0
	float                            _0x4404FA88;                     // type:FLOAT.0
	float                            _0xB2A44F01;                     // type:FLOAT.0
	float                            _0xD64DF4FC;                     // type:FLOAT.0
	float                            _0x54458B1A;                     // type:FLOAT.0
	float                            _0xF0D422DE;                     // type:FLOAT.0
};

struct _0x4B94BFD7
{
	struct _0x0C735B89               RightHand;                       // type:STRUCT.STRUCTURE
	struct _0x0C735B89               LeftHand;                        // type:STRUCT.STRUCTURE
};

struct _0x4B9EE18D : _0x2F7DA38D
{
	string                           _0x0298E59A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEF9B6B75;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x307AF89A;                     // type:FLOAT.0
	float                            _0xC7BC271E;                     // type:FLOAT.0
	struct _0xED16C5B0               _0x5D2DC7AC;                     // type:STRUCT.STRUCTURE
	vec2                             headingLimits;                   // type:VECTOR2.0
	vec2                             pitchLimits;                     // type:VECTOR2.0
	vec2                             relativeOffset;                  // type:VECTOR2.0
	float                            orbitDistance;                   // type:FLOAT.0
	bool                             _0x012CD34C;                     // type:BOOL.0
	bool                             _0x25DDC6B0;                     // type:BOOL.0
};

struct _0x4BCCC0AF
{
	enum _0xC2EE4E1E                 Type;                            // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0x4BDAC485 : _0x6F6348F5
{
	string                           RawHintText;                     // type:STRING.CONST_STRING
	string                           HintText;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             HintVisible;                     // type:BOOL.0
};

struct _0x4BDE9574
{
	uchar                            _0x919DEFAA;                     // type:UCHAR.0
	uchar                            _0x7EFDC087;                     // type:UCHAR.0
	uchar                            _0x1FAD2A0B;                     // type:UCHAR.0
	uchar                            _0x021AC0EA;                     // type:UCHAR.0
};

struct _0x4BF75C6E : _0xC2A67265
{
	int                              Value;                           // type:INT.0
};

struct _0x4BFB7C5D : uiScreenInputOperationBase
{
	enum eSocialClubFeedFilterTypes     FilterType;                      // type:ENUM.32BIT
};

struct _0x4BFD8B90
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	enum _0xBEEA6142                 VehicleAttachBone;               // type:ENUM.32BIT
	vec3V                            AttachPosOffset;                 // type:VEC3V.0
	vec3V                            AttachRotOffset;                 // type:VEC3V.0
	vec3V                            CustomTargettingOffset;          // type:VEC3V.0
	bool                             _0x9BE9AD28;                     // type:BOOL.0
};

struct _0x4C0069B6 : CTuning
{
	struct _0xC0FADA9E               _0x62A3EF29;                     // type:STRUCT.STRUCTURE
	struct _0x5A368F9A               _0x40D8EA9E;                     // type:STRUCT.STRUCTURE
	float                            _0xA199C056;                     // type:FLOAT.0
	float                            _0x5809537C;                     // type:FLOAT.0
	float                            _0x4DC7E403;                     // type:FLOAT.0
};

struct _0x4C04EC43
{
	struct void                      SeatInfo;                        // type:STRUCT.EXTERNAL_NAMED
	struct void                      SeatAnimInfo;                    // type:STRUCT.EXTERNAL_NAMED
};

struct _0x4C0748B6 : _0x0F5161EB
{
	struct _0x0F5161EB               pCondition;                      // type:STRUCT.POINTER
};

struct _0x4C149694
{
	bool                             Enabled;                         // type:BOOL.0
	float                            X;                               // type:FLOAT.0
	float                            Y;                               // type:FLOAT.0
	float                            Z;                               // type:FLOAT.0
};

struct _0x4C35CE5D
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0xFCD0CF53;                     // type:FLOAT.0
	array<float, 5>                  _0x16CC4315;                     // type:ARRAY.ATFIXEDARRAY
	array<float, 5>                  _0x3742900D;                     // type:ARRAY.ATFIXEDARRAY
	array<float, 5>                  _0x967FD7B6;                     // type:ARRAY.ATFIXEDARRAY
	array<float, 5>                  _0xB5CBDC64;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x4C3CA8B7 : _0x906508CE
{
	int                              _0x5D7C15DA;                     // type:INT.0
	int                              _0x5F74A34A;                     // type:INT.0
};

struct _0x4C3FAEBB
{
	vec3V                            LocalStart;                      // type:VEC3V.0
	vec3V                            LocalEnd;                        // type:VEC3V.0
	float                            CapsuleRadius;                   // type:FLOAT.0
	bitset<enum _0x59C1C751>         Flags;                           // type:BITSET.32BIT
};

struct _0x4C447A53 : _0xD6E4C7A1
{
	float                            MinAlpha;                        // type:FLOAT.0
	float                            MaxAlpha;                        // type:FLOAT.0
	bool                             FadeInOut;                       // type:BOOL.0
};

struct _0x4C5E1237
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	enum _0xBEEA6142                 AttachBone;                      // type:ENUM.32BIT
	vec3V                            PosOffset;                       // type:VEC3V.0
	vec3V                            RotOffset;                       // type:VEC3V.0
};

struct _0x4C6342F5
{
	float                            _0x91620628;                     // type:FLOAT.0
	float                            _0xE83B54CD;                     // type:FLOAT.0
	float                            _0x30E58C05;                     // type:FLOAT.0
	float                            _0xF7DE3F71;                     // type:FLOAT.0
	float                            _0x1F6F922E;                     // type:FLOAT.0
	uint                             _0x6C67C69A;                     // type:UINT.0
	uint                             _0xF37EB689;                     // type:UINT.0
};

struct _0x4C7585CC
{
	map<string, struct _0xDBC6D960>     _0xC9AA662F;                     // type:MAP.ATBINARYMAP
};

struct _0x4C7DA5C2
{
	float                            _0x43AF694C;                     // type:FLOAT.0
	float                            _0x5CFDB859;                     // type:FLOAT.0
};

struct _0x4C7E2247 : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
};

struct _0x4C804BE5
{
	string                           Animation;                       // type:STRING.ATNONFINALHASHSTRING
	struct _0x6D03A7A6               Target;                          // type:STRUCT.STRUCTURE
	bool                             Reverse;                         // type:BOOL.0
};

struct _0x4C93E445
{
	string                           award;                           // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x0C629C49;                     // type:UINT.0
};

struct _0x4C96E060
{
	string                              Key;                             // type:STRING.ATNONFINALHASHSTRING
	string                              EntryClipSetHash;                // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0xB5CFEB25>     StateDataMap;                    // type:MAP.ATBINARYMAP
};

struct _0x4CB568F7
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 About;                           // type:ENUM.32BIT
	enum _0x8B2BD05B                 SimpleMemory;                    // type:ENUM.32BIT
	enum _0x6ED55512                 SimplePlayerMemory;              // type:ENUM.32BIT
	enum _0x62A8CB86                 SimplePerPlayerMemory;           // type:ENUM.32BIT
	enum _0x8C92AFD0                 RobberyMemory;                   // type:ENUM.32BIT
	int                              TimeSinceMinMS;                  // type:INT.0
	int                              TimeSinceMaxMS;                  // type:INT.0
	uint                             CountMin;                        // type:UINT.0
	uint                             CountMax;                        // type:UINT.0
};

struct _0x4CD7D819
{
	bool                             ShouldApply;                     // type:BOOL.0
	float                            _0x8EBDF96C;                     // type:FLOAT.0
	float                            _0x036976FC;                     // type:FLOAT.0
	float                            _0xACED1424;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
};

struct _0x4CD8E3A4 : _0xE046EA8D
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x4CECE320 : _0x9B8C003A
{
	string                           _0xB2A5A79B;                     // type:STRING.ATSTRING
	string                           ContextName;                     // type:STRING.ATSTRING
	int                              _0x63CE98EB;                     // type:INT.0
};

struct _0x4CFA1CB3 : _0x8A0DC979
{
	bool                             _0xBFAC8876;                     // type:BOOL.0
};

struct _0x4CFE599E : _0x4A52B7E5
{
	struct _0x16E4F2D0               CurveData;                       // type:STRUCT.POINTER
};

struct _0x4D534E80 : _0x478AE1AC
{
	struct _0x51B38E82               Text;                            // type:STRUCT.STRUCTURE
};

struct _0x4D58CF19 : CTuning
{
	float                            _0x487AAF56;                     // type:FLOAT.0
	bool                             _0xEC1AC96C;                     // type:BOOL.0
};

struct _0x4D692630 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x4D731F7D
{
	string                           _0x92C89A3C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE16EC318;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x179D7AC6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x32AF63EE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDC76D724;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDBA6BCE7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x236DE664;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xFF0FD89D;                     // type:FLOAT.0
	float                            _0x1713A9D0;                     // type:FLOAT.0
	float                            _0x39F1809F;                     // type:FLOAT.0
};

struct _0x4D7E4F33 : _0x4FA6E5D7
{
	vec2                             Value;                           // type:VECTOR2.0
};

struct _0x4D892A30 : _0xEB587558
{
	array<struct _0xEB587558>        Nodes;                           // type:ARRAY.ATARRAY
};

struct _0x4D8C47C8
{
	float                            _0xE8B6FF6C;                     // type:FLOAT.0
	float                            _0xE355AC16;                     // type:FLOAT.0
	float                            _0x16E918C7;                     // type:FLOAT.0
	float                            _0x6CE38BD8;                     // type:FLOAT.0
};

struct _0x4D8E6813 : _0xE44EB193
{
	struct _0x2DC2D881               variation;                       // type:STRUCT.STRUCTURE
	struct _0xE51C0F55               _0xADFB6328;                     // type:STRUCT.STRUCTURE
};

struct _0x4DA163F4 : _0x11AD3051
{
	bool                             _0x147AD7DC;                     // type:BOOL.0
};

struct _0x4DA3FAA2 : _0x0A510DA9
{
};

struct _0x4DA944F2 : _0xBA4BE0CB
{
};

struct _0x4DAA9895
{
	float                             fWorldX;                         // type:FLOAT.0
	float                             fWorldY;                         // type:FLOAT.0
	float                             fWorldW;                         // type:FLOAT.0
	float                             fWorldH;                         // type:FLOAT.0
	float                             fFowWaterHeight;                 // type:FLOAT.0
	float                             fPreRevealPixelCount;            // type:FLOAT.0
	float                             fRevealScaleMaxHeight;           // type:FLOAT.0
	float                             fRevealScaleMinHeight;           // type:FLOAT.0
	float                             fRevealScaleMaxDeltaHeight;      // type:FLOAT.0
	float                             fRevealScaleMinDeltaHeight;      // type:FLOAT.0
	float                             fRevealScaleMaxScale;            // type:FLOAT.0
	float                             fLocalRevealMinSize;             // type:FLOAT.0
	float                             fLocalRevealMaxSize;             // type:FLOAT.0
	float                             fLocalRevealMinZoom;             // type:FLOAT.0
	float                             fLocalRevealMaxZoom;             // type:FLOAT.0
	float                             fLocalRevealHighIntensity;       // type:FLOAT.0
	float                             fLocalRevealLowIntensity;        // type:FLOAT.0
	map<uint, struct _0x83B12E77>     FogLayers;                       // type:MAP.ATBINARYMAP
};

struct _0x4DB6CA74
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    campsFound;                      // type:ARRAY.ATARRAY
	array<string>                    hideoutsFound;                   // type:ARRAY.ATARRAY
	uint                             ambushesSurvived;                // type:UINT.0
	uint                             uniqueEncounters;                // type:UINT.0
	uint                             bountiesCaptured;                // type:UINT.0
	uint                             gangMembersKilled;               // type:UINT.0
};

struct _0x4DBA1E48 : CTuning
{
	struct _0x5EDA78FC               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x4DCF2845
{
	float                            _0xD6C2EB3B;                     // type:FLOAT.0
	float                            _0xA8FB6ED1;                     // type:FLOAT.0
	int                              _0xE75769B7;                     // type:INT.0
	float                            _0xC82D7705;                     // type:FLOAT.0
	int                              _0x54EDF38F;                     // type:INT.0
};

struct _0x4DCF523E
{
	map<string, struct _0x0DBB4460>     _0x34971E19;                     // type:MAP.ATBINARYMAP
};

struct _0x4DD0DE0D
{
	ushort                           id;                              // type:USHORT.0
	float                            min;                             // type:FLOAT.0
	float                            max;                             // type:FLOAT.0
};

struct _0x4DE5602F
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x4DE833E2 : uiEventDataBase
{
	int                              _0xD7E16E19;                     // type:INT.0
	enum eUILogEntryType             EntryType;                       // type:ENUM.32BIT
};

struct _0x4DF02D8D : _0x8A0DC979
{
};

struct _0x4DFD60F5 : _0x39DE799A
{
	bool                             Value;                           // type:BOOL.0
};

struct _0x4E00489B : uiMultiDataBindingTriggerBehaviorBase
{
	float                            _0xC2C6486D;                     // type:FLOAT.0
};

struct _0x4E19900B
{
	float                            ValueForUnableToFind;            // type:FLOAT.0
	float                            ValueForTooCloseToTarget;        // type:FLOAT.0
	float                            MaxDistanceForTaint;             // type:FLOAT.0
	float                            DecayRate;                       // type:FLOAT.0
};

struct _0x4E1B3DEE
{
	float                            WantedLevel;                     // type:FLOAT.0
	float                            LastSpottedDistance;             // type:FLOAT.0
	float                            Randomness;                      // type:FLOAT.0
};

struct _0x4E375ED3
{
	string                           _0x7EFFBD94;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Identifier;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0x4E3A79D1
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xC1A92DE4>        ConditionalVehicleSets;          // type:ARRAY.ATARRAY
};

struct _0x4E3E3359 : _0xDD74E211
{
};

struct _0x4E3FD548
{
	map<string, struct _0x73F2C1CE>     _0xACE8C14C;                     // type:MAP.ATBINARYMAP
	array<string>                       _0xA8349D2B;                     // type:ARRAY.ATARRAY
	map<string, struct _0x7969316A>     _0xB204851F;                     // type:MAP.ATBINARYMAP
	array<struct _0xF2FFF16E>           _0xCE3DA15B;                     // type:ARRAY.ATARRAY
};

struct _0x4E43A94C
{
	int                              _0x3962C8F0;                     // type:INT.0
	int                              _0x4A397D02;                     // type:INT.0
	int                              _0x3230D977;                     // type:INT.0
	int                              _0xBFEA821C;                     // type:INT.0
	int                              _0x29D588F4;                     // type:INT.0
};

struct _0x4E46C309 : _0x0A510DA9
{
	bitset<enum _0x425C34DC>         Flags;                           // type:BITSET.32BIT
};

struct _0x4E4932DD
{
	array<struct _0x8A376258>        Stacks;                          // type:ARRAY.ATARRAY
};

struct _0x4E4DB7FA
{
	array<struct _0xAFFE19FB, 4>     Entries;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0x4E602AF5
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
};

struct _0x4E829A16
{
	bool                             _0xE22CDF32;                     // type:BOOL.0
	uint                             _0xD4C269ED;                     // type:UINT.0
	uint                             _0x94273321;                     // type:UINT.0
	float                            _0x6E8B60E5;                     // type:FLOAT.0
	bool                             _0xBCAABB36;                     // type:BOOL.0
	float                            _0x01458C2B;                     // type:FLOAT.0
	float                            _0xD3A13849;                     // type:FLOAT.0
	float                            _0x0473554E;                     // type:FLOAT.0
	float                            _0x6FAC7BA5;                     // type:FLOAT.0
	float                            _0xA5ADB9EA;                     // type:FLOAT.0
	float                            _0x30BD818F;                     // type:FLOAT.0
	float                            _0xBA7EA03F;                     // type:FLOAT.0
	float                            _0xDF46B2F5;                     // type:FLOAT.0
	float                            _0xF9E5064C;                     // type:FLOAT.0
	bool                             _0x7F13E4FF;                     // type:BOOL.0
	float                            _0x9832EA39;                     // type:FLOAT.0
	float                            _0x1AB834F1;                     // type:FLOAT.0
	float                            _0xFA1C89A9;                     // type:FLOAT.0
	float                            _0x86168FE0;                     // type:FLOAT.0
	float                            _0x589F9179;                     // type:FLOAT.0
	float                            _0xC8CC8A7D;                     // type:FLOAT.0
	float                            _0x2C8283CE;                     // type:FLOAT.0
	float                            _0x04C71087;                     // type:FLOAT.0
	bool                             _0xC04545BC;                     // type:BOOL.0
	bool                             _0x55A916FD;                     // type:BOOL.0
	bool                             _0xF19D1D78;                     // type:BOOL.0
	bool                             _0xB00481D8;                     // type:BOOL.0
	float                            _0xFA55C9CA;                     // type:FLOAT.0
	float                            _0x762C41D7;                     // type:FLOAT.0
	float                            _0xB0E76BA1;                     // type:FLOAT.0
	float                            _0x12866FCD;                     // type:FLOAT.0
	float                            _0xC950BC1E;                     // type:FLOAT.0
	float                            _0x2577F24C;                     // type:FLOAT.0
	float                            _0x7853D488;                     // type:FLOAT.0
	float                            _0xAE21F4D1;                     // type:FLOAT.0
	float                            _0x87C38E5E;                     // type:FLOAT.0
	float                            _0xECE0379B;                     // type:FLOAT.0
	float                            _0xF4358947;                     // type:FLOAT.0
	float                            _0x3376BAE9;                     // type:FLOAT.0
	float                            _0xB886439D;                     // type:FLOAT.0
	float                            _0x435AFD06;                     // type:FLOAT.0
	float                            _0xBB010458;                     // type:FLOAT.0
};

struct _0x4E842C3B
{
	string                           cName;                           // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB710CECA;                     // type:STRING.ATNONFINALHASHSTRING
	float                            fSubtitleDuration;               // type:FLOAT.0
};

struct _0x4E8F35DB : _0xBA4BE0CB
{
};

struct _0x4EB04539
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3                             center;                          // type:VECTOR3.0
	vec3                             orientation;                     // type:VECTOR3.0
	vec3                             scale;                           // type:VECTOR3.0
	uint                             _0xFE27FFDE;                     // type:UINT.0
	float                            percentage;                      // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	uint                             startHour;                       // type:UINT.0
	uint                             endHour;                         // type:UINT.0
};

struct _0x4EBBB2E4 : _0x14229900
{
	enum _0x563FBCEA                 PedToReactTo;                    // type:ENUM.32BIT
};

struct _0x4ECD7879
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD841DD6C;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0xF8938BD0;                     // type:INT.0
	float                            Radius;                          // type:FLOAT.0
	float                            Length;                          // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
	float                            _0x490C173E;                     // type:FLOAT.0
	float                            _0xBB96B35F;                     // type:FLOAT.0
	float                            VfxOffset;                       // type:FLOAT.0
	float                            Distance;                        // type:FLOAT.0
	int                              NumSections;                     // type:INT.0
	int                              _0x48BF765A;                     // type:INT.0
	int                              _0xDAAC88AA;                     // type:INT.0
	int                              VfxDataIndex;                    // type:INT.0
	uint                             _0x29B768A9;                     // type:UINT.1
	bool                             _0xEA25F233;                     // type:BOOL.0
	bool                             _0xC1C0B7BD;                     // type:BOOL.0
	bool                             _0xE4F71900;                     // type:BOOL.0
	struct _0xA1BCDF14               _0xCE9D8813;                     // type:STRUCT.STRUCTURE
};

struct _0x4ED715E3
{
	array<struct _0xA0A44E21, 1024>     Sectors;                         // type:ARRAY.ATRANGEARRAY
};

struct _0x4EDAD55A : _0x476BC347
{
	enum rage__InputType             inputType;                       // type:ENUM.32BIT
	string                           holdDuration;                    // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x7F111135;                     // type:UINT.0
	bool                             _0xFABBB52B;                     // type:BOOL.0
	bool                             _0xF9D9A097;                     // type:BOOL.0
};

struct _0x4EE94A79 : CAICondition
{
	uint                             TimeRangeMS;                     // type:UINT.0
	bool                             _0x95DDA0BC;                     // type:BOOL.0
};

struct _0x4EF178E2 : _0x8A0DC979
{
};

struct _0x4EF30E53 : _0x810637E9
{
	enum _0xBA531850                 ConditionTestType;               // type:ENUM.32BIT
};

struct _0x4EF87ED4 : _0x8A0DC979
{
};

struct _0x4EFF5B1C
{
	float                            intensity;                       // type:FLOAT.0
	bool                             active;                          // type:BOOL.0
	bool                             _0x152A2984;                     // type:BOOL.0
};

struct _0x4F0DCF7C : _0x0A510DA9
{
	bitset<enum _0x425C34DC>         Flags;                           // type:BITSET.32BIT
	bool                             _0x69003423;                     // type:BOOL.0
};

struct _0x4F468BAD
{
	string                           _0x61689B8C;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
	vec4V                            _0xABBEAC66;                     // type:VEC4V.0
	vec3V                            Normal;                          // type:VEC3V.0
	vec3V                            Tangent;                         // type:VEC3V.0
	vec3V                            _0x1CC678DE;                     // type:VEC3V.0
	vec4V                            Size;                            // type:VEC4V.0
	float                            Rotation;                        // type:FLOAT.0
	bool                             _0xCE8C9F3A;                     // type:BOOL.0
	bool                             _0x530E2833;                     // type:BOOL.0
	float                            _0x7C493DCB;                     // type:FLOAT.0
	float                            _0x0C0C620E;                     // type:FLOAT.0
	vec2V                            _0x0A4733DA;                     // type:VEC2V.0
};

struct _0x4F58E61F
{
	float                            Freq_CloseFreq;                  // type:FLOAT.0
	float                            Freq_FarFreq;                    // type:FLOAT.0
	float                            Freq_CloseDist;                  // type:FLOAT.0
	float                            Freq_FarDist;                    // type:FLOAT.0
	float                            PosDelta_ClosePosDelta;          // type:FLOAT.0
	float                            PosDelta_FarPosDelta;            // type:FLOAT.0
	float                            PosDelta_CloseDist;              // type:FLOAT.0
	float                            PosDelta_FarDist;                // type:FLOAT.0
	float                            Angle_CloseAngle;                // type:FLOAT.0
	float                            Angle_FarAngle;                  // type:FLOAT.0
	float                            Angle_CloseDist;                 // type:FLOAT.0
	float                            Angle_FarDist;                   // type:FLOAT.0
};

struct _0x4F89A557
{
	float                            _0xC6BF86FC;                     // type:FLOAT.0
	float                            _0xA33D7562;                     // type:FLOAT.0
	float                            _0x78C5A926;                     // type:FLOAT.0
	float                            _0xE8A4C93B;                     // type:FLOAT.0
	float                            _0xD61E5318;                     // type:FLOAT.0
	float                            _0x08CC324B;                     // type:FLOAT.0
	float                            _0x5A0A206F;                     // type:FLOAT.0
	float                            _0x41F424D5;                     // type:FLOAT.0
	float                            _0xBF5492D0;                     // type:FLOAT.0
	float                            _0x5C6058C7;                     // type:FLOAT.0
	float                            _0x5F75B01A;                     // type:FLOAT.0
	float                            _0x6204741D;                     // type:FLOAT.0
	float                            _0xE5590894;                     // type:FLOAT.0
	float                            _0x0C212EB9;                     // type:FLOAT.0
	float                            _0xFF4E7D80;                     // type:FLOAT.0
	float                            _0xCBD04CDE;                     // type:FLOAT.0
};

struct _0x4F8F3D71
{
	bitset<enum _0x5DF55174>         Flags;                           // type:BITSET.8BIT
	string                           EmotionalPreset;                 // type:STRING.ATNONFINALHASHSTRING
	struct _0x41EF8472               DataSet;                         // type:STRUCT.STRUCTURE
};

struct _0x4F9319D3
{
	float                            CockStartRate;                   // type:FLOAT.0
	float                            CockStartQuickRate;              // type:FLOAT.0
	float                            CockEndRate;                     // type:FLOAT.0
	float                            RecoilRate;                      // type:FLOAT.0
	float                            FireRecoilRate;                  // type:FLOAT.0
	float                            _0xA2334074;                     // type:FLOAT.0
	float                            CockToFireDelay;                 // type:FLOAT.0
	float                            FireDelay;                       // type:FLOAT.0
	float                            TimeScaleCockRateModifier;       // type:FLOAT.0
	float                            TimeScaleFireRateModifier;       // type:FLOAT.0
	float                            TimeScaleRecoilRateModifier;     // type:FLOAT.0
	float                            HipCockStartRate;                // type:FLOAT.0
	float                            HipCockStartQuickRate;           // type:FLOAT.0
	float                            HipCockEndRate;                  // type:FLOAT.0
	float                            HipRecoilRate;                   // type:FLOAT.0
	float                            HipFireRate;                     // type:FLOAT.0
	float                            HipFireDelay;                    // type:FLOAT.0
	float                            TimeScaleHipCockRateModifier;    // type:FLOAT.0
	float                            TimeScaleHipFireRateModifier;    // type:FLOAT.0
	float                            TimeScaleHipRecoilRateModifier;  // type:FLOAT.0
	float                            AiOnFootRateModifier;            // type:FLOAT.0
	float                            AiHorsebackRateModifier;         // type:FLOAT.0
};

struct _0x4F93D59F
{
	string                           _0xB553B457;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xF3558EC0;                     // type:BOOL.0
};

struct _0x4F9987A4 : _0x14229900
{
	struct _0x14229900               Task;                            // type:STRUCT.POINTER
};

struct _0x4FA0E646
{
	struct _0x90EBE89B               Position;                        // type:STRUCT.STRUCTURE
	float                            Radius;                          // type:FLOAT.0
};

struct _0x4FA6E5D7
{
};

struct _0x4FC603BE : _0xF479EE77
{
	uchar                                        _0x6A592688;                     // type:UCHAR.0
	uchar                                        _0x5F90D718;                     // type:UCHAR.0
	array<uchar>                                 _0xCE6D4BB9;                     // type:ARRAY.ATARRAY
	array<struct Loco__UpperBodyFidgetTimer>     FidgetTimers;                    // type:ARRAY.ATARRAY
};

struct _0x4FD1156B
{
	int                              NumInvestigators;                // type:INT.0
	int                              NumLawInvestigators;             // type:INT.0
	int                              NumWitnesses;                    // type:INT.0
	string                           ScoringData;                     // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xDEDF1C87>         RequiredFlags;                   // type:BITSET.16BIT
	bitset<enum _0x5F13AB5F>         Flags;                           // type:BITSET.16BIT
	bitset<enum _0x5F13AB5F>         AdditionalFlagsForSP;            // type:BITSET.16BIT
	bitset<enum _0x5F13AB5F>         AdditionalFlagsForMP;            // type:BITSET.16BIT
	bitset<enum _0x35148E76>         LawNotificationRestrictions;     // type:BITSET.8BIT
	bitset<enum _0x35148E76>         AdditionalRestrictionsForSP;     // type:BITSET.8BIT
	bitset<enum _0x35148E76>         AdditionalRestrictionsForMP;     // type:BITSET.8BIT
};

struct _0x4FD2D58B
{
	float                            KeepMovingWhilePathingDistance;  // type:FLOAT.0
	float                            MaxDistanceMayAdjustPathEndPosition; // type:FLOAT.0
	float                            MeleeMovementMBR;                // type:FLOAT.0
	float                            MeleeBlockingMovementMBR;        // type:FLOAT.0
	float                            AttackRangeMax;                  // type:FLOAT.0
	float                            AttackConsecuitiveComboInfluence; // type:FLOAT.0
	float                            TauntProbability;                // type:FLOAT.0
	float                            TauntProbabilityQueued;          // type:FLOAT.0
	float                            AvoidanceRadiusInterior;         // type:FLOAT.0
	float                            AvoidanceRadiusExterior;         // type:FLOAT.0
	float                            AvoidanceRadiusQueueForTargetScalar; // type:FLOAT.0
	float                            ActionApproachCooldownDuration;  // type:FLOAT.0
	float                            _0x68534B5B;                     // type:FLOAT.0
	vec2V                            ApproachRadius;                  // type:VEC2V.0
	vec2V                            AttackProbabilityToCombo;        // type:VEC2V.0
	vec2V                            DesperatePunchProbability;       // type:VEC2V.0
	vec2V                            ProbabilityToBeDazed;            // type:VEC2V.0
	vec2V                            BlockProbability;                // type:VEC2V.0
	vec2V                            DodgeProbability;                // type:VEC2V.0
	vec2V                            ParryProbability;                // type:VEC2V.0
	vec2V                            CounterProbability;              // type:VEC2V.0
	vec2V                            DisarmProbability;               // type:VEC2V.0
	vec2V                            SeekModeScanTime;                // type:VEC2V.0
	vec2V                            AttackFrequencyWorstFighterInMs; // type:VEC2V.0
	vec2V                            AttackFrequencyBestFighterInMs;  // type:VEC2V.0
	vec2V                            TauntFrequencyInMs;              // type:VEC2V.0
	vec2V                            TauntFrequencyQueuedInMs;        // type:VEC2V.0
	vec2V                            BlockLengthInMs;                 // type:VEC2V.0
	vec2V                            FightEndsIntimidatedProbability; // type:VEC2V.0
	vec2V                            _0xA1AEC5B5;                     // type:VEC2V.0
	bool                             PlayTauntBeforeAttacking;        // type:BOOL.0
	bool                             CanMeleeInWater;                 // type:BOOL.0
	bool                             IgnoreMeleeAvoidance;            // type:BOOL.0
	bool                             AllowDefensiveLeadIn;            // type:BOOL.0
	bool                             PreventsActionApproach;          // type:BOOL.0
	bool                             PreferAttackFromTheBack;         // type:BOOL.0
	bool                             AllowStrafe;                     // type:BOOL.0
	bool                             CausesBattleAwareness;           // type:BOOL.0
	bool                             CheckForGrappleOnRelease;        // type:BOOL.0
	bool                             DontReactToSecondaryAttackers;   // type:BOOL.0
	bool                             UseDamageRegionDamageModifiers;  // type:BOOL.0
};

struct _0x4FD5620C : uiEventDataBase
{
	string                           SlotId;                          // type:STRING.ATNONFINALHASHSTRING
	enum eQuickSelectProviderId      _0xA6F6FA7C;                     // type:ENUM.32BIT
};

struct _0x4FF79310 : _0xA0889763
{
	uint                             value;                           // type:UINT.0
};

struct _0x5001C442 : _0x3AB6499E
{
	float                            _0x367F213D;                     // type:FLOAT.0
	float                            _0xF4662E78;                     // type:FLOAT.0
	float                            _0xDA9B08F5;                     // type:FLOAT.0
	float                            MinForwardSpeed;                 // type:FLOAT.0
	float                            MaxForwardSpeed;                 // type:FLOAT.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            _0xA7927AEC;                     // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x17214A7D;                     // type:FLOAT.0
	float                            _0x01CCA2C8;                     // type:FLOAT.0
	float                            _0xADF55786;                     // type:FLOAT.0
	vec3                             _0xCD663E71;                     // type:VECTOR3.0
};

struct _0x500C0D4F
{
	struct _0x04ACA6F1               RightHand;                       // type:STRUCT.STRUCTURE
	struct _0x04ACA6F1               LeftHand;                        // type:STRUCT.STRUCTURE
};

struct _0x5023C058
{
	float                            TimeBetweenUpdatesWhileMoving;   // type:FLOAT.0
	float                            TimeBetweenUpdatesWhileStationary; // type:FLOAT.0
	float                            TimeBetweenUpdatesWhileStationaryNoLOS; // type:FLOAT.0
	float                            TargetRadiusForMoveToPosition;   // type:FLOAT.0
	float                            fTimeToWaitBeforeFindingPointToMoveToAfterPathFail; // type:FLOAT.0
	float                            MaxPathLengthToPoint;            // type:FLOAT.0
	int                              MaxPositionsToExclude;           // type:INT.0
	bool                             QuitIfNoneFound;                 // type:BOOL.0
	bool                             WaitAtPosition;                  // type:BOOL.0
	bitset<enum _0xAFBE6C85>         Flags;                           // type:BITSET.32BIT
};

struct _0x503BDAD3
{
	float                            _0x0D9772A8;                     // type:FLOAT.0
	string                           _0x84630D0B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA2D1714E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC1F980C2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF155D31C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC8562651;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5041A93D : CTuning
{
	struct _0x2D87CCA0               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x50462A0F : _0x95E59A7E
{
	enum _0xA1CF9846                 Formatting;                      // type:ENUM.32BIT
};

struct _0x504D9C14
{
	enum eExplosionTag               ExplosionTag;                    // type:ENUM.32BIT
	bool                             PositionAtPetrolTank;            // type:BOOL.0
	bool                             PositionInBoundingBox;           // type:BOOL.0
	vec3                             PositionOffset;                  // type:VECTOR3.0
	int                              DelayTimeMs;                     // type:INT.0
	float                            Scale;                           // type:FLOAT.0
};

struct _0x505A40C8
{
	struct _0x55970FF4               Forgiveness;                     // type:STRUCT.STRUCTURE
	struct _0xD3B3C45F               Contexts;                        // type:STRUCT.STRUCTURE
	bitset<enum _0x07954EF1>         Flags;                           // type:BITSET.8BIT
	float                            Chances;                         // type:FLOAT.0
	int                              GiveUpThreshold;                 // type:INT.0
};

struct _0x5063A41A
{
	struct _0xC9C5A880               _0xCDDCDB31;                     // type:STRUCT.STRUCTURE
	struct _0xC9C5A880               _0x3369EEC5;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               HeadingLimits;                   // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               PitchLimits;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               _0x4408B690;                     // type:STRUCT.STRUCTURE
};

struct _0x507CC522 : _0x0A510DA9
{
	bool                             _0x9CFFC126;                     // type:BOOL.0
};

struct _0x507E5FA3
{
	string                           Type;                            // type:STRING.ATSTRING
};

struct _0x509D0C69
{
	float                            Pelvis;                          // type:FLOAT.0
	float                            _0x5BEB0238;                     // type:FLOAT.0
	float                            _0x16AE77C0;                     // type:FLOAT.0
	float                            _0x1901FFD4;                     // type:FLOAT.0
	float                            Head;                            // type:FLOAT.0
	float                            _0x14DFB737;                     // type:FLOAT.0
	float                            _0x1E7F9271;                     // type:FLOAT.0
	float                            _0xB5C978E8;                     // type:FLOAT.0
	float                            _0x4693E2A5;                     // type:FLOAT.0
	float                            _0xA2B74F2A;                     // type:FLOAT.0
	float                            _0x7F9FADD5;                     // type:FLOAT.0
	float                            _0x82E4A93E;                     // type:FLOAT.0
	float                            _0x12752E6C;                     // type:FLOAT.0
	float                            _0xC2B9B40C;                     // type:FLOAT.0
	float                            _0x99D3571B;                     // type:FLOAT.0
	float                            _0x2D063ACE;                     // type:FLOAT.0
	float                            _0xEFCA405F;                     // type:FLOAT.0
	float                            _0x4EA0875A;                     // type:FLOAT.0
	float                            _0x7F96879E;                     // type:FLOAT.0
	float                            _0x2EC03D47;                     // type:FLOAT.0
	float                            _0xBB0BD5F0;                     // type:FLOAT.0
	float                            _0x466509B0;                     // type:FLOAT.0
	float                            _0x89F34096;                     // type:FLOAT.0
};

struct _0x50B4EF3B : CAICondition
{
	float                            NoiseThreshold;                  // type:FLOAT.0
};

struct _0x50BBC443
{
	float                            _0xF2DA66A4;                     // type:FLOAT.0
	float                            _0xF537F8F2;                     // type:FLOAT.0
	float                            _0x9DE06968;                     // type:FLOAT.0
	float                            _0x93B777CD;                     // type:FLOAT.0
	float                            _0x9D673904;                     // type:FLOAT.0
	bool                             _0x1BBC0DE3;                     // type:BOOL.0
};

struct _0x50BCC853
{
	float                            _0x144B0F61;                     // type:FLOAT.0
	float                            _0xA8856BB3;                     // type:FLOAT.0
	float                            _0x7662A99B;                     // type:FLOAT.0
	float                            _0x7C80B787;                     // type:FLOAT.0
	float                            _0xFA7C657B;                     // type:FLOAT.0
	bool                             _0x5CF9666A;                     // type:BOOL.0
	vec2                             _0x3CAC0DD6;                     // type:VECTOR2.0
	vec2                             _0x4F48B9FB;                     // type:VECTOR2.0
	vec2                             _0x7781D4FF;                     // type:VECTOR2.0
	vec2                             _0x920F7B1B;                     // type:VECTOR2.0
	vec2                             _0x2ACA6B87;                     // type:VECTOR2.0
	vec2                             _0xCD306223;                     // type:VECTOR2.0
	bool                             _0x455EA96A;                     // type:BOOL.0
	bool                             _0xF00EBF27;                     // type:BOOL.0
	float                            Reticle;                         // type:FLOAT.0
	float                            _0xAFA41090;                     // type:FLOAT.0
	float                            _0xB2EC1118;                     // type:FLOAT.0
	float                            _0xC1474832;                     // type:FLOAT.0
	float                            _0xB39D0657;                     // type:FLOAT.0
	float                            _0x50428625;                     // type:FLOAT.0
	float                            _0xAA554FA6;                     // type:FLOAT.0
	float                            _0xA0E9C164;                     // type:FLOAT.0
	float                            _0x3CCCC237;                     // type:FLOAT.0
	float                            _0x05C39281;                     // type:FLOAT.0
	float                            _0xB6669920;                     // type:FLOAT.0
	float                            _0x3E0DD890;                     // type:FLOAT.0
};

struct _0x50DE4353
{
	float                            delta;                           // type:FLOAT.0
	float                            start;                           // type:FLOAT.0
	float                            speed;                           // type:FLOAT.0
	uint                             sequencer;                       // type:UINT.0
	uchar                            multiples;                       // type:UCHAR.0
	bool                             direction;                       // type:BOOL.0
	bool                             syncToBpm;                       // type:BOOL.0
};

struct _0x50F03981
{
	bool                             ShouldConsiderData;              // type:BOOL.0
	bool                             _0x792FAE91;                     // type:BOOL.0
	uint                             _0xB6FCFCB0;                     // type:UINT.0
};

struct _0x50FF8908
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           GameValueName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x510D3B10
{
	enum _0x7170DA3B                 eType;                           // type:ENUM.32BIT
	float                            _0x1D9E4C7D;                     // type:FLOAT.0
};

struct _0x510DF21C : _0x8A0DC979
{
	bool                             _0xC4C96A36;                     // type:BOOL.0
};

struct _0x51168F8F
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           NextAction;                      // type:STRING.ATNONFINALHASHSTRING
	array<string, 2>                 NextSkipActions;                 // type:ARRAY.ATFIXEDARRAY
	string                           EntryClipSet;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ApproachLootingSetData;          // type:STRING.ATNONFINALHASHSTRING
	string                           ApproachLootingSetAction;        // type:STRING.ATNONFINALHASHSTRING
	float                            OverrideApproachRadius;          // type:FLOAT.0
	string                           TargetBlendOutSet;               // type:STRING.ATNONFINALHASHSTRING
	string                           ActionClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           MiniGameBlendClipSet;            // type:STRING.ATNONFINALHASHSTRING
	string                           TargetActionClipSet;             // type:STRING.ATNONFINALHASHSTRING
	string                           TargetActionClip;                // type:STRING.ATNONFINALHASHSTRING
	string                           TargetFacialClip;                // type:STRING.ATNONFINALHASHSTRING
	string                           CarriedEntityActionClipSet;      // type:STRING.ATNONFINALHASHSTRING
	string                           CarriedEntityActionClip;         // type:STRING.ATNONFINALHASHSTRING
	string                           TargetOutfit;                    // type:STRING.ATNONFINALHASHSTRING
	string                           TargetSubOutfit;                 // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x8BDC4108>        Variations;                      // type:ARRAY.ATARRAY
	enum _0x41DA6081                 VisibleLootSlot;                 // type:ENUM.32BIT
	string                           GenericAnimScene;                // type:STRING.ATNONFINALHASHSTRING
	string                           ConditionalAnimSceneSelector;    // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                SceneOriginBone;                 // type:ENUM.32BIT
	enum eAnimBoneTag                SceneOriginPositionBone;         // type:ENUM.32BIT
	string                           SceneOriginTargetCompositeEntity; // type:STRING.ATNONFINALHASHSTRING
	float                            ExtraOriginZRotation;            // type:FLOAT.0
	struct _0x719CEF29               MoVENetworkData;                 // type:STRUCT.STRUCTURE
	struct _0xF1D33C7F               EntryBlendData;                  // type:STRUCT.STRUCTURE
	float                            EarlyActionBlendOutPhase;        // type:FLOAT.0
	float                            CustomFinishBlendDuration;       // type:FLOAT.0
	struct _0xA14FF3A8               ExitData;                        // type:STRUCT.STRUCTURE
	string                           LootLongPropAnimData;            // type:STRING.ATNONFINALHASHSTRING
	string                           ModelSpecificDataCollection;     // type:STRING.ATNONFINALHASHSTRING
	string                           ForcedLootTable;                 // type:STRING.ATNONFINALHASHSTRING
	string                           RequiredWeapon;                  // type:STRING.ATNONFINALHASHSTRING
	string                           RequiredAIConditions;            // type:STRING.ATNONFINALHASHSTRING
	struct _0x7E40A68B               HeightBlendBoneData;             // type:STRUCT.STRUCTURE
	string                           HullData;                        // type:STRING.ATNONFINALHASHSTRING
	string                           ForcedOrbitCameraData;           // type:STRING.ATNONFINALHASHSTRING
	string                           FakeStaticFrameFilter;           // type:STRING.ATNONFINALHASHSTRING
	enum _0x2174D3B5                 LootComponentOnTarget;           // type:ENUM.32BIT
	float                            PreferredAngleToTarget;          // type:FLOAT.0
	float                            PreferredPreActionSpeed;         // type:FLOAT.0
	bitset<enum _0x14F299DC>         Flags;                           // type:BITSET.32BIT
};

struct _0x514A8625
{
	vec3                             _0x8A59963E;                     // type:VECTOR3.0
	uint                             _0xC2097173;                     // type:UINT.0
	array<uint, 3>                   padding;                         // type:ARRAY.MEMBER
};

struct _0x515741B4 : uiEventDataBase
{
};

struct _0x516296F4
{
	bitset<enum _0xF5346367>            Flags;                           // type:BITSET.8BIT
	map<string, struct _0x3101B7BE>     Contexts;                        // type:MAP.ATBINARYMAP
};

struct _0x51786423
{
	array<float, 5>                  _0x22D635C9;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x517AD977 : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x76D4A788;                     // type:STRUCT.STRUCTURE
	enum _0x3257FE2D                 action;                          // type:ENUM.32BIT
	int                              seat;                            // type:INT.0
	bitset<enum _0xEEB74D42>         flags;                           // type:BITSET.32BIT
	float                            _0x3F51654C;                     // type:FLOAT.0
};

struct _0x517DED80
{
	string                           PromptText;                      // type:STRING.ATNONFINALHASHSTRING
	string                           GroupedPromptText;               // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	float                            HoldTime;                        // type:FLOAT.0
	bool                             PromptEnabled;                   // type:BOOL.0
};

struct _0x518B037A
{
	array<struct _0xD90EC412, 4>     TypeData;                        // type:ARRAY.ATFIXEDARRAY
	struct _0x93AF6B88               CarryingData;                    // type:STRUCT.STRUCTURE
	struct _0x20778ED1               VehicleData;                     // type:STRUCT.STRUCTURE
	struct _0xAF060404               MountedData;                     // type:STRUCT.STRUCTURE
	struct _0xFAD7F3DC               ProneData;                       // type:STRUCT.STRUCTURE
	struct _0xAC7FE161               LongArmAimingData;               // type:STRUCT.STRUCTURE
	struct _0x8AEADFE0               RagdollData;                     // type:STRUCT.STRUCTURE
	float                            MaxDeflectionAngleLimit;         // type:FLOAT.0
	float                            MaxCharacterSpeed;               // type:FLOAT.0
	float                            FirstPersonModifier;             // type:FLOAT.0
	float                            FirstPersonVehicleModifier;      // type:FLOAT.0
	float                            VehicleModifier;                 // type:FLOAT.0
	float                            VehicleLimit;                    // type:FLOAT.0
	float                            EnteringVehicleModifier;         // type:FLOAT.0
	float                            MeleeModifierLocalPlayer;        // type:FLOAT.0
	float                            MeleeModifier;                   // type:FLOAT.0
	float                            LowCoverModifier;                // type:FLOAT.0
	float                            AimingModifier;                  // type:FLOAT.0
	float                            MountedModifier;                 // type:FLOAT.0
	float                            IntervalAtMaximum;               // type:FLOAT.0
	float                            ArmWeight;                       // type:FLOAT.0
	float                            ArmWeightApproachRate;           // type:FLOAT.0
	float                            BoneDelay;                       // type:FLOAT.0
	float                            DurationModifier;                // type:FLOAT.0
};

struct _0x5193BC57 : _0xC16E6360
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x519E4116 : _0x3AB6499E
{
	float                            ScreenRatioForMinFootRoom;       // type:FLOAT.0
	float                            ScreenRatioForMaxFootRoom;       // type:FLOAT.0
	float                            ScreenRatioForMinFootRoomInTightSpace; // type:FLOAT.0
	float                            ScreenRatioForMaxFootRoomInTightSpace; // type:FLOAT.0
	float                            _0x39833740;                     // type:FLOAT.0
	float                            _0x2F9E9567;                     // type:FLOAT.0
	float                            _0x33ACEFF2;                     // type:FLOAT.0
	float                            _0x0E285989;                     // type:FLOAT.0
	float                            _0x317BBC89;                     // type:FLOAT.0
	float                            _0xC30BECB4;                     // type:FLOAT.0
	float                            _0x7E17A685;                     // type:FLOAT.0
	float                            _0xB01B8C51;                     // type:FLOAT.0
	float                            _0xA09792F6;                     // type:FLOAT.0
	float                            _0x7DC42D87;                     // type:FLOAT.0
	float                            _0xC89A1E0F;                     // type:FLOAT.0
	float                            _0x47CD0DE4;                     // type:FLOAT.0
	float                            _0x42699F1C;                     // type:FLOAT.0
	float                            _0xC98FCA49;                     // type:FLOAT.0
	float                            _0x930E80F4;                     // type:FLOAT.0
	float                            _0x74AB0CD5;                     // type:FLOAT.0
	float                            _0x753274B7;                     // type:FLOAT.0
	float                            _0x1C8C010C;                     // type:FLOAT.0
	float                            _0x5A1C518C;                     // type:FLOAT.0
	float                            _0x3DF58A2E;                     // type:FLOAT.0
	float                            _0xF1E2DAC5;                     // type:FLOAT.0
	float                            _0x1CA98316;                     // type:FLOAT.0
	float                            _0xD75D5875;                     // type:FLOAT.0
	float                            _0x782DF3FF;                     // type:FLOAT.0
	float                            _0x96ABA904;                     // type:FLOAT.0
	float                            _0x035178C1;                     // type:FLOAT.0
	float                            _0xBBF2330B;                     // type:FLOAT.0
	float                            _0x953C1568;                     // type:FLOAT.0
	float                            _0xD96CC8BB;                     // type:FLOAT.0
	float                            _0xF8011335;                     // type:FLOAT.0
	float                            _0x864ECF45;                     // type:FLOAT.0
	float                            _0xF7E0F0D6;                     // type:FLOAT.0
	float                            _0x3ED96B13;                     // type:FLOAT.0
	float                            _0x866F4331;                     // type:FLOAT.0
	float                            _0x513FDADD;                     // type:FLOAT.0
	float                            _0xB57160B2;                     // type:FLOAT.0
	float                            _0xFB5CF422;                     // type:FLOAT.0
	float                            _0x52EEED84;                     // type:FLOAT.0
	float                            _0x31AB9BE2;                     // type:FLOAT.0
	float                            _0xA451052C;                     // type:FLOAT.0
	float                            _0xE1856E41;                     // type:FLOAT.0
	float                            _0x2E011C1F;                     // type:FLOAT.0
	float                            _0x870BF775;                     // type:FLOAT.0
	float                            _0xE19CD641;                     // type:FLOAT.0
	float                            _0x848C01B1;                     // type:FLOAT.0
	float                            _0x4B4D9753;                     // type:FLOAT.0
	float                            _0xF9487A05;                     // type:FLOAT.0
	float                            _0x6443A8E2;                     // type:FLOAT.0
	float                            _0x56FBC12F;                     // type:FLOAT.0
	float                            _0x07A62FF8;                     // type:FLOAT.0
	float                            _0x6ED785F6;                     // type:FLOAT.0
	float                            _0x1334E4F6;                     // type:FLOAT.0
	float                            _0x2C969F05;                     // type:FLOAT.0
	float                            _0x9E07528C;                     // type:FLOAT.0
	float                            _0xE94C4024;                     // type:FLOAT.0
	float                            _0x0DC42FB2;                     // type:FLOAT.0
	float                            _0xEFD7F893;                     // type:FLOAT.0
	float                            _0x1E53C04D;                     // type:FLOAT.0
	float                            _0x5FE77A12;                     // type:FLOAT.0
	float                            _0x0F67DE2A;                     // type:FLOAT.0
	float                            _0x24C1A5BA;                     // type:FLOAT.0
	float                            _0xEC0CD907;                     // type:FLOAT.0
	float                            _0xE33C0CEF;                     // type:FLOAT.0
	float                            _0x9E8A4682;                     // type:FLOAT.0
	float                            _0x2856C2D0;                     // type:FLOAT.0
	float                            _0x000B8E8E;                     // type:FLOAT.0
	float                            _0xC0E2D34E;                     // type:FLOAT.0
	float                            _0x53D82A14;                     // type:FLOAT.0
	float                            _0x4D60846E;                     // type:FLOAT.0
	float                            _0x0F9C0E27;                     // type:FLOAT.0
	uint                             _0xAC5350BF;                     // type:UINT.0
	uint                             _0x3D156BB7;                     // type:UINT.0
	uint                             _0x3597104B;                     // type:UINT.0
	uint                             _0xDAE98D25;                     // type:UINT.0
	uint                             _0x12112B89;                     // type:UINT.0
	uint                             _0x75F918BA;                     // type:UINT.0
	array<string>                    _0x5F3580B4;                     // type:ARRAY.ATARRAY
	array<string>                    _0xFD3BAE06;                     // type:ARRAY.ATARRAY
	array<string>                    _0xFAE92E34;                     // type:ARRAY.ATARRAY
	float                            _0x1D123437;                     // type:FLOAT.0
	float                            _0xC1570F55;                     // type:FLOAT.0
	float                            _0x56C248BB;                     // type:FLOAT.0
	float                            _0x048CD2CE;                     // type:FLOAT.0
	float                            _0xCF71E42B;                     // type:FLOAT.0
	float                            _0xC06CD19E;                     // type:FLOAT.0
	float                            _0x20B10B54;                     // type:FLOAT.0
	float                            _0x92CC7B4F;                     // type:FLOAT.0
	float                            _0x7E6D7C7F;                     // type:FLOAT.0
	float                            _0x177B4456;                     // type:FLOAT.0
	float                            _0x074F06FD;                     // type:FLOAT.0
	float                            _0x3DBEA444;                     // type:FLOAT.0
	float                            _0x37414AC7;                     // type:FLOAT.0
	float                            _0xBBF1AA85;                     // type:FLOAT.0
	float                            _0xE02783D4;                     // type:FLOAT.0
	float                            _0x68AF5663;                     // type:FLOAT.0
	float                            _0x27451AE7;                     // type:FLOAT.0
	struct _0x9A64B2CF               _0x020D12FC;                     // type:STRUCT.STRUCTURE
	struct _0xE4067C8D               _0x8FDBD1EA;                     // type:STRUCT.STRUCTURE
	struct _0xF0AEFE1F               _0xEADAAB64;                     // type:STRUCT.STRUCTURE
	struct _0x6B36EE14               _0x0141BCD6;                     // type:STRUCT.STRUCTURE
	bool                             _0x5C14BFA9;                     // type:BOOL.0
	bool                             _0xA85BD8BA;                     // type:BOOL.0
	bool                             _0x6828AD4C;                     // type:BOOL.0
	bool                             _0xFF06A3B4;                     // type:BOOL.0
	bool                             _0x7A137657;                     // type:BOOL.0
	bool                             _0x5418B98B;                     // type:BOOL.0
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x2C885886;                     // type:FLOAT.0
	float                            _0x402A3D84;                     // type:FLOAT.0
	float                            _0x229804D9;                     // type:FLOAT.0
	float                            _0x00A502E8;                     // type:FLOAT.0
	float                            _0x635E8D11;                     // type:FLOAT.0
	float                            _0x796D7CE7;                     // type:FLOAT.0
	float                            _0xD38F103F;                     // type:FLOAT.0
	float                            _0x1ADF53CD;                     // type:FLOAT.0
	float                            _0xB16F6037;                     // type:FLOAT.0
	float                            _0xE0C5B1BD;                     // type:FLOAT.0
	float                            _0x3667F61C;                     // type:FLOAT.0
	float                            _0x384EF6C6;                     // type:FLOAT.0
	float                            _0x511089B7;                     // type:FLOAT.0
	float                            _0x8D276CC2;                     // type:FLOAT.0
	float                            _0xFB659343;                     // type:FLOAT.0
	float                            _0xA5AB54A9;                     // type:FLOAT.0
	float                            _0xA3681400;                     // type:FLOAT.0
	float                            _0xB55709D7;                     // type:FLOAT.0
	float                            _0xF7D7A9DE;                     // type:FLOAT.0
	float                            _0xEFA7F3A3;                     // type:FLOAT.0
	float                            _0x428CAE43;                     // type:FLOAT.0
	float                            _0x2459619A;                     // type:FLOAT.0
	float                            _0xE79196BA;                     // type:FLOAT.0
};

struct _0x51B38E82 : _0x7ED07AC9
{
};

struct _0x51B93A98
{
	float                            _0x72AD3DE1;                     // type:FLOAT.0
	float                            _0x9DEFDE02;                     // type:FLOAT.0
	float                            _0x707D3EF2;                     // type:FLOAT.0
	float                            _0x755D4A78;                     // type:FLOAT.0
	float                            _0x0D8624B7;                     // type:FLOAT.0
	float                            _0x54FE30F8;                     // type:FLOAT.0
	float                            _0x0B1BB487;                     // type:FLOAT.0
	float                            _0xE702E504;                     // type:FLOAT.0
};

struct _0x51D5FF4A
{
	float                            probability;                     // type:FLOAT.0
	float                            friction;                        // type:FLOAT.0
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5EF41EDD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x51D96D7E : CTuning
{
	float                            _0xE9CDFD76;                     // type:FLOAT.0
	float                            _0x02217D9E;                     // type:FLOAT.0
	float                            _0x127F9A8B;                     // type:FLOAT.0
	float                            _0x5B4A03BA;                     // type:FLOAT.0
	float                            _0xF2D67474;                     // type:FLOAT.0
	float                            _0x99293831;                     // type:FLOAT.0
	float                            _0x2B051467;                     // type:FLOAT.0
	float                            _0x986F0EEA;                     // type:FLOAT.0
	float                            _0xEA2CE933;                     // type:FLOAT.0
	float                            _0xBE8143CE;                     // type:FLOAT.0
	float                            _0xB4994D74;                     // type:FLOAT.0
	float                            _0x1FC7CA60;                     // type:FLOAT.0
	float                            _0x27B06F6B;                     // type:FLOAT.0
	float                            _0xD5736A30;                     // type:FLOAT.0
	float                            _0x2ED3B15B;                     // type:FLOAT.0
	float                            _0x4BADD439;                     // type:FLOAT.0
	float                            _0xA939CDC9;                     // type:FLOAT.0
	float                            _0xCF0ED048;                     // type:FLOAT.0
	float                            _0xE05BB88A;                     // type:FLOAT.0
	float                            _0x1D813C48;                     // type:FLOAT.0
	float                            _0x914092BB;                     // type:FLOAT.0
	float                            _0x2C5B7BCE;                     // type:FLOAT.0
	float                            _0xEAD5F2AB;                     // type:FLOAT.0
	float                            _0x09536585;                     // type:FLOAT.0
	float                            _0xF59A69CA;                     // type:FLOAT.0
	float                            _0x47248CBB;                     // type:FLOAT.0
	float                            _0x553B6AF2;                     // type:FLOAT.0
	float                            _0xA6B2BA71;                     // type:FLOAT.0
	float                            _0x84A3E5FD;                     // type:FLOAT.0
	float                            _0xADF14822;                     // type:FLOAT.0
	float                            _0xD4712412;                     // type:FLOAT.0
	float                            _0xA7CC1B25;                     // type:FLOAT.0
	float                            _0x490B5591;                     // type:FLOAT.0
	float                            _0x6742A3F5;                     // type:FLOAT.0
	float                            _0x1BA926DC;                     // type:FLOAT.0
	float                            _0x8098CAAF;                     // type:FLOAT.0
	float                            _0x71ABEF25;                     // type:FLOAT.0
	float                            _0xA9B77D2B;                     // type:FLOAT.0
	float                            _0xBEA17C3D;                     // type:FLOAT.0
	float                            _0xCC1D3796;                     // type:FLOAT.0
	bool                             _0x4449D133;                     // type:BOOL.0
	float                            _0x85917F3F;                     // type:FLOAT.0
	bool                             _0x7CDE5A24;                     // type:BOOL.0
	bool                             _0x92D1B153;                     // type:BOOL.0
	bool                             _0xB11DD862;                     // type:BOOL.0
	bool                             _0xF82E6452;                     // type:BOOL.0
	bool                             _0x681B4A80;                     // type:BOOL.0
	bool                             _0xA1D9998A;                     // type:BOOL.0
	bool                             _0x965D7DB8;                     // type:BOOL.0
	bool                             _0x2F0B2146;                     // type:BOOL.0
	bool                             _0xC7A13B45;                     // type:BOOL.0
	bool                             _0x44C35132;                     // type:BOOL.0
	bool                             _0x921ED65C;                     // type:BOOL.0
	bool                             _0x67825FB6;                     // type:BOOL.0
	bool                             _0x9D84D497;                     // type:BOOL.0
	bool                             _0xD8F2E315;                     // type:BOOL.0
	bool                             _0xF8AF0DF3;                     // type:BOOL.0
	bool                             _0x6F69410E;                     // type:BOOL.0
	float                            _0x9DE91890;                     // type:FLOAT.0
	float                            _0xA83923B0;                     // type:FLOAT.0
	float                            _0x00268381;                     // type:FLOAT.0
	float                            _0x780B6130;                     // type:FLOAT.0
	float                            _0xEF242A53;                     // type:FLOAT.0
	float                            _0xCBA80AC4;                     // type:FLOAT.0
	vec3V                            _0x037516E1;                     // type:VEC3V.0
	bool                             _0x5BB1D501;                     // type:BOOL.0
	bool                             _0xD64BBE2C;                     // type:BOOL.0
	float                            _0xFDA9E9CA;                     // type:FLOAT.0
	float                            _0x68B9825A;                     // type:FLOAT.0
	float                            _0xCA16CF86;                     // type:FLOAT.0
	float                            _0xDA491936;                     // type:FLOAT.0
	bool                             _0xDA16F998;                     // type:BOOL.0
	bool                             _0x18155C30;                     // type:BOOL.0
	bool                             _0xD0F81FF2;                     // type:BOOL.0
	bool                             _0xDDC2B106;                     // type:BOOL.0
	float                            _0x4447E1EC;                     // type:FLOAT.0
	float                            _0x64502386;                     // type:FLOAT.0
	float                            _0xAB88FC7F;                     // type:FLOAT.0
};

struct _0x51EB392F
{
	float                            _0x97CD6F50;                     // type:FLOAT.0
	float                            _0x14042B7E;                     // type:FLOAT.0
	float                            _0x86C335B1;                     // type:FLOAT.0
};

struct _0x522179AA : _0x8244CA58
{
};

struct _0x522DC506
{
	array<struct _0x053303F2, 8>     PromptTable;                     // type:ARRAY.ATFIXEDARRAY
	bitset<enum _0x17F22C05>         Flags;                           // type:BITSET.32BIT
};

struct _0x5237A3D1
{
	string                           pDefnName;                       // type:STRING.POINTER
	string                           pRuleName;                       // type:STRING.POINTER
	int                              ruleType;                        // type:INT.0
	uint                             propertyId;                      // type:UINT.0
};

struct _0x5272B5BD
{
	float                            Distance;                        // type:FLOAT.0
	float                            Damage;                          // type:FLOAT.0
};

struct _0x5274857B : CTuning
{
	struct _0x6C7B6C20               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x5278AC0B : _0x8A0DC979
{
};

struct _0x5287C842 : _0xF70F21F5
{
	float                            _0x09FCB95D;                     // type:FLOAT.0
	float                            _0x3AF21F31;                     // type:FLOAT.0
	float                            _0x209D37A7;                     // type:FLOAT.0
	bool                             _0xDCDB7C66;                     // type:BOOL.0
	bool                             _0x43BA9B76;                     // type:BOOL.0
	bool                             _0x3BF18C4D;                     // type:BOOL.0
	bool                             _0xFEA95D43;                     // type:BOOL.0
};

struct _0x5287CB04 : _0xE453720A
{
};

struct _0x52943FB9 : _0x7CBDE0BD
{
	string                           MemberName;                      // type:STRING.ATNSHASHSTRING
};

struct _0x5294B221
{
	bool                             _0xA89E4571;                     // type:BOOL.0
	float                            _0xBF271F73;                     // type:FLOAT.0
	float                            ptFxScale;                       // type:FLOAT.0
	string                           _0x6CFF8925;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAC0BBEDC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2392804A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB8E44BE9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x69AE69A0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x493BE2F6;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x52A7AF3B
{
	struct _0x1B48ABF1               _0x11F2A215;                     // type:STRUCT.STRUCTURE
	struct _0xB5634E29               _0x99AF2BAC;                     // type:STRUCT.STRUCTURE
};

struct _0x52C08AB4
{
	float                            probability;                     // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	float                            fadeDistance;                    // type:FLOAT.0
	float                            _0x5376114A;                     // type:FLOAT.0
	float                            widthMin;                        // type:FLOAT.0
	float                            widthMax;                        // type:FLOAT.0
	float                            _0xC16F216F;                     // type:FLOAT.0
	float                            _0xD0C31537;                     // type:FLOAT.0
	float                            _0xDF068772;                     // type:FLOAT.0
	float                            _0x9C45424E;                     // type:FLOAT.0
	float                            _0xAFBB233F;                     // type:FLOAT.0
	float                            _0xA89B0482;                     // type:FLOAT.0
	float                            fadeInTime;                      // type:FLOAT.0
	float                            fadeOutTime;                     // type:FLOAT.0
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5EF41EDD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x52C3A681 : _0x770F82BD
{
};

struct _0x52C3DC37
{
	string                           Child;                           // type:STRING.ATNONFINALHASHSTRING
	string                           Parent;                          // type:STRING.ATNONFINALHASHSTRING
	string                           BoneName;                        // type:STRING.CONST_STRING
	string                           DebugOnlyVariableBoneName;       // type:STRING.ATNONFINALHASHSTRING
	vec3V                            AttachmentOffset;                // type:VEC3V.0
	vec3V                            AttachmentRotation;              // type:VEC3V.0
};

struct _0x52C814EF
{
	bitset<enum _0x82BDC697>         BodyPose;                        // type:BITSET.32BIT
	bitset<enum _0xFC1A65E2>         WeaponPose;                      // type:BITSET.32BIT
	bitset<enum _0xEFE9F25D>         WeaponGroup;                     // type:BITSET.32BIT
	bitset<enum _0x3B52EB76>         Intensity;                       // type:BITSET.32BIT
	bitset<enum _0xC2C58377>         Injury;                          // type:BITSET.32BIT
	bitset<enum _0xB49B6697>         CombatMode;                      // type:BITSET.32BIT
	bitset<enum _0xECB2AF1A>         CameraMode;                      // type:BITSET.32BIT
	bitset<enum _0x222E87B7>         Control;                         // type:BITSET.32BIT
	bitset<enum _0xFF2B6848>         State;                           // type:BITSET.32BIT
	bitset<enum _0x3AAC80E3>         Multiplayer;                     // type:BITSET.32BIT
};

struct _0x52CB5875 : _0x3795142C
{
};

struct _0x52CFC129 : _0xC48C1FCA
{
};

struct _0x52F7085D : CTuning
{
	float                            _0xB3BE3FA0;                     // type:FLOAT.0
	float                            _0x352EE78D;                     // type:FLOAT.0
	float                            _0xC5886C9E;                     // type:FLOAT.0
	float                            _0x06C854FE;                     // type:FLOAT.0
	float                            _0x429F5A92;                     // type:FLOAT.0
	float                            _0x028DD9E0;                     // type:FLOAT.0
	float                            _0x06FE7969;                     // type:FLOAT.0
	float                            _0x0303A024;                     // type:FLOAT.0
	float                            _0x147BC836;                     // type:FLOAT.0
	float                            _0x6869639E;                     // type:FLOAT.0
};

struct _0x52FBE94F : _0x9B440548
{
};

struct _0x5323C588
{
	array<struct _0x7C2B8E30>        ReportingPositions;              // type:ARRAY.ATARRAY
};

struct _0x532765FF
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x00DBAA4A               ShortRange;                      // type:STRUCT.STRUCTURE
	struct _0x00DBAA4A               _0x9E88D3B2;                     // type:STRUCT.STRUCTURE
	struct _0x00DBAA4A               _0x8C39BAB5;                     // type:STRUCT.STRUCTURE
	struct _0x00DBAA4A               _0xC491431E;                     // type:STRUCT.STRUCTURE
};

struct _0x5333FAA1
{
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	float                            _0x1203B5F0;                     // type:FLOAT.0
};

struct _0x53360556
{
	vec3V                            Offset;                          // type:VEC3V.0
	array<struct _0x83BE83FD>        EnableConditionData;             // type:ARRAY.ATARRAY
};

struct _0x5342E5CC
{
	float                            _0xF586F86F;                     // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
};

struct _0x53695DCA : CTuning
{
	float                            _0xC1E3987E;                     // type:FLOAT.0
	bool                             _0xC369A076;                     // type:BOOL.0
	bool                             _0x45F0CD42;                     // type:BOOL.0
};

struct _0x5369F04B
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           type;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct ItemModifiers>      itemModifiers;                   // type:ARRAY.ATARRAY
};

struct _0x53806989
{
	float                            Timeout;                         // type:FLOAT.0
};

struct _0x5389A3C7 : CTuning
{
	struct _0xD6B91386               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x53B89CCD : _0xCD9BCB7D
{
	map<string, struct _0x8A0DC979>     PotentialStates;                 // type:MAP.ATMAP
	string                              DefaultState;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x53C3CC2E
{
	enum _0x4F6FCF6D                 Priority;                        // type:ENUM.32BIT
	array<int>                       CpuAffinity;                     // type:ARRAY.ATARRAY
};

struct _0x53C5296C
{
	bitset<enum _0xA62EB687>         Override;                        // type:BITSET.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x53CE36AE : _0x23DAEDEE
{
	struct _0x0D58926D               _0xB575AA56;                     // type:STRUCT.STRUCTURE
};

struct _0x53DD4F50
{
	float                            MinValueForCorrection;           // type:FLOAT.0
	float                            MaxValueForCorrection;           // type:FLOAT.0
	float                            MinRate;                         // type:FLOAT.0
	float                            MaxRate;                         // type:FLOAT.0
};

struct _0x53F18B74
{
	float                            _0x914BD6B6;                     // type:FLOAT.0
	float                            _0x6DF0E4EE;                     // type:FLOAT.0
	float                            _0x1CDF0756;                     // type:FLOAT.0
	float                            _0x040C7B6C;                     // type:FLOAT.0
	float                            _0x350208C5;                     // type:FLOAT.0
	float                            _0xF9B9B616;                     // type:FLOAT.0
	float                            _0x301C1A86;                     // type:FLOAT.0
	float                            _0x4E48D483;                     // type:FLOAT.0
	float                            _0x36C4775B;                     // type:FLOAT.0
	float                            _0x54A62704;                     // type:FLOAT.0
	float                            _0xD9B84372;                     // type:FLOAT.0
	string                           _0x994C76C8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC32D2CD3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9790DA27;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x53F7343C : _0xD2002F1E
{
	float                            _0xABBF2C23;                     // type:FLOAT.0
	float                            _0xC9B33A86;                     // type:FLOAT.0
	float                            _0x34AE7D96;                     // type:FLOAT.0
	float                            _0x8D66F8F9;                     // type:FLOAT.0
};

struct _0x540F7701
{
	float                            _0x58E7A1AC;                     // type:FLOAT.2
	float                            _0xC4BE0A85;                     // type:FLOAT.2
	float                            _0xFBC391B4;                     // type:FLOAT.2
	uint                             _0x4F5E0E52;                     // type:UINT.0
	uint                             _0x94B7DC87;                     // type:UINT.0
};

struct _0x54179587 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x541D7EC2
{
	array<string>                    ValidAnimInfos;                  // type:ARRAY.ATARRAY
	struct _0x57E10F57               ItemCondition;                   // type:STRUCT.STRUCTURE
};

struct _0x5427F6B3 : _0x14229900
{
};

struct _0x542A91ED : _0x0A510DA9
{
	enum _0xB677E3DD                 Category;                        // type:ENUM.32BIT
};

struct _0x54727751 : _0x6C14A98D
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x54797D5F : _0xED23B004
{
	vec4V                            Value;                           // type:VEC4V.0
};

struct _0x549E97A6 : CTuning
{
	struct _0xE0B1A55C               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x54A08C37 : CTuning
{
	struct _0xE99C27EC               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x54A1CEB0
{
	struct _0xD41612A3               AngledArea;                      // type:STRUCT.STRUCTURE
	struct _0x90EBE89B               Position;                        // type:STRUCT.STRUCTURE
};

struct _0x54B1B034
{
	string                           Name;                            // type:STRING.ATSTRING
	string                           GUID;                            // type:STRING.ATSTRING
	array<struct _0x436E578E>        _0xB30F92DE;                     // type:ARRAY.ATARRAY
	array<struct _0xC991122A>        _0x02EAABD3;                     // type:ARRAY.ATARRAY
};

struct _0x54B4D307 : CAICondition
{
	vec3                             Direction;                       // type:VECTOR3.0
	float                            Threshold;                       // type:FLOAT.0
	bool                             FlattenZ;                        // type:BOOL.0
};

struct _0x54B570C6
{
	array<struct _0x95D9BC70>        _0xAD413B1A;                     // type:ARRAY.ATARRAY
};

struct _0x54BA1268 : _0x1619E486
{
	int                              TimeInMilliseconds;              // type:INT.0
};

struct _0x54C95141 : _0x1B26FDB1
{
	string                           Value;                           // type:STRING.ATNSHASHSTRING
};

struct _0x54CB8697 : UIBehavior
{
	struct _0xE0CC4C41               EnterAnimation;                  // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               _0x08BF3DBB;                     // type:STRUCT.STRUCTURE
	struct _0xE0CC4C41               ExitAnimation;                   // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               _0xB3ECFCC5;                     // type:STRUCT.STRUCTURE
	float                            Duration;                        // type:FLOAT.0
};

struct _0x54D37223
{
	float                            _0x31A9AEF5;                     // type:FLOAT.0
	float                            _0xBE9BFD6A;                     // type:FLOAT.0
	float                            _0x1CD13C4A;                     // type:FLOAT.0
	float                            _0xB3548FB0;                     // type:FLOAT.0
	float                            _0x73346092;                     // type:FLOAT.0
	float                            _0xF6BEBE0F;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xF49028CA;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x11CD0F29;                     // type:ENUM.32BIT
	float                            _0xA142CD87;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xD1CE5BC6;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x594C77C3;                     // type:ENUM.32BIT
};

struct _0x54D6FFEB : uiEventDataBase
{
	enum _0x3D035416                 PedType;                         // type:ENUM.32BIT
	enum _0x99BEFEED                 Attribute;                       // type:ENUM.32BIT
};

struct _0x54D89C1E
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	int                              length;                          // type:INT.0
	string                           modifier;                        // type:STRING.ATNONFINALHASHSTRING
	string                           award;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x54E4FFBD : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
};

struct _0x54F00579 : CTuning
{
};

struct _0x54F499FD
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3V                            _0xFA47F63E;                     // type:VEC3V.0
	bool                             _0xFF0B45AA;                     // type:BOOL.0
	float                            _0xC975F4B8;                     // type:FLOAT.0
	float                            _0xEC9BF93A;                     // type:FLOAT.0
	bool                             _0x5BFC4A27;                     // type:BOOL.0
	float                            _0xA3C65B59;                     // type:FLOAT.0
	float                            _0x75A054C4;                     // type:FLOAT.0
	vec2V                            UVScale;                         // type:VEC2V.0
	bool                             _0xA8D05710;                     // type:BOOL.0
	bool                             _0xFEDF5DBE;                     // type:BOOL.0
	bool                             _0x79654651;                     // type:BOOL.0
	vec3V                            _0xD4C7B406;                     // type:VEC3V.0
	vec3V                            _0x1EFC4872;                     // type:VEC3V.0
	vec3V                            _0x1F2AC8CB;                     // type:VEC3V.0
};

struct _0x54F4B2F8 : CTuning
{
	float                            MinDelay;                        // type:FLOAT.0
	float                            MaxDelay;                        // type:FLOAT.0
};

struct _0x54F6A0FC
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	int                              Priority;                        // type:INT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            InitIncrement;                   // type:FLOAT.0
	float                            MaxIncRate;                      // type:FLOAT.0
	float                            MaxIncRateDistance;              // type:FLOAT.0
	float                            ZeroRateDistance;                // type:FLOAT.0
	float                            MaxDecRate;                      // type:FLOAT.0
	float                            MaxDecRateDistance;              // type:FLOAT.0
	bool                             ModulateDecRateByCurrentState;   // type:BOOL.0
	bool                             ApplyDecay;                      // type:BOOL.0
};

struct _0x54FA7476 : _0x3F8365DA
{
	enum _0xF9A5DFAA                 _0xAE3DD0B1;                     // type:ENUM.32BIT
};

struct _0x54FD2687 : _0x0A510DA9
{
};

struct _0x5502EFDB : CTuning
{
	float                            _0x31D4465E;                     // type:FLOAT.0
	float                            _0xF062488C;                     // type:FLOAT.0
	float                            _0xFC8A928E;                     // type:FLOAT.0
	float                            _0x5295AC52;                     // type:FLOAT.0
};

struct _0x5506C938 : _0x05C33D80
{
	float                            _0x0C8D1B77;                     // type:FLOAT.0
	float                            _0x53124447;                     // type:FLOAT.0
};

struct _0x550DEFDE : _0x8734E5E1
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x551D293F : CAICondition
{
};

struct _0x55204DC1 : CAICondition
{
	enum _0x563FBCEA                 Mount;                           // type:ENUM.32BIT
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x5526DFE4
{
};

struct _0x5589CE6B : _0x8EDEB4E3
{
};

struct _0x55936CDF : _0x8A0DC979
{
	enum _0x4F69766B                 _0x7D366DAA;                     // type:ENUM.32BIT
};

struct _0x55970FF4
{
	float                            _0xCDA22296;                     // type:FLOAT.0
	bool                             _0x4BC54FE0;                     // type:BOOL.0
	bool                             CriminalLeftOwnedVehicle;        // type:BOOL.0
	bool                             _0xB9EDB689;                     // type:BOOL.0
};

struct _0x55A5DD5F : CTuning
{
	struct _0xAA5EF9DD               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x55B09631
{
	array<struct _0x7B2C198D>        Rules;                           // type:ARRAY.ATARRAY
};

struct _0x55C4B499
{
	float                            Fov;                             // type:FLOAT.0
	float                            _0xB71CBB16;                     // type:FLOAT.0
	float                            _0x26FE940C;                     // type:FLOAT.0
	float                            CameraRelativeVerticalOffset;    // type:FLOAT.0
	float                            _0x271F3B1C;                     // type:FLOAT.0
	float                            OrbitDistance;                   // type:FLOAT.0
	int                              _0xD4FA5865;                     // type:INT.0
	float                            _0x74776271;                     // type:FLOAT.0
	float                            IdleCmini;                       // type:FLOAT.0
};

struct _0x55C9D1BE
{
	uint                             MaxIterations;                   // type:UINT.0
	float                            CapsuleLengthForDetection;       // type:FLOAT.0
	float                            _0xABF8235A;                     // type:FLOAT.0
};

struct _0x55E37936
{
	string                           PedClipId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponClipId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ReloadActionTypeIndex;           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5603C709 : _0x8A0DC979
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x5604AFA2 : _0x87446492
{
};

struct _0x560C9F87
{
	string                                 Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                                 EnterClipSetId;                  // type:STRING.ATNONFINALHASHSTRING
	string                                 EnterClipSetFemaleId;            // type:STRING.ATNONFINALHASHSTRING
	string                                 EnterActionClipSetId;            // type:STRING.ATNONFINALHASHSTRING
	string                                 MovingEnterClipSetId;            // type:STRING.ATNONFINALHASHSTRING
	string                                 BaseClipSetId;                   // type:STRING.ATNONFINALHASHSTRING
	string                                 BaseClipSetFemaleId;             // type:STRING.ATNONFINALHASHSTRING
	string                                 PickupOverrideClipSetId;         // type:STRING.ATNONFINALHASHSTRING
	string                                 TargetClipId;                    // type:STRING.ATNONFINALHASHSTRING
	string                                 TargetBlendOutSet;               // type:STRING.ATNONFINALHASHSTRING
	string                                 AdjustmentClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	string                                 RequiredWeapon;                  // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xC0B6A160>               RequiredWeaponWithFlags;         // type:BITSET.32BIT
	string                                 SlopeProbes;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                      DirectFacingTargetBone;          // type:ENUM.32BIT
	enum eAnimBoneTag                      SceneOriginBone;                 // type:ENUM.32BIT
	enum eAnimBoneTag                      SceneOriginPositionBone;         // type:ENUM.32BIT
	string                                 SceneOriginTargetCompositeEntity; // type:STRING.ATNONFINALHASHSTRING
	struct _0xF1D33C7F                     MoverFixupData;                  // type:STRUCT.STRUCTURE
	float                                  ExtraOriginZRotation;            // type:FLOAT.0
	float                                  ApproachBlendOutDuration;        // type:FLOAT.0
	float                                  PickupBlendInDuration;           // type:FLOAT.0
	float                                  _0xDF73FC41;                     // type:FLOAT.0
	float                                  OverrideApproachRadius;          // type:FLOAT.0
	bitset<enum loot_vehicle_disabled>     BaseFlags;                       // type:BITSET.32BIT
};

struct _0x5614A6B0
{
	vec3V                            _0xBB532BB4;                     // type:VEC3V.0
	vec3V                            _0x34119710;                     // type:VEC3V.0
	float                            _0xA4D6B64C;                     // type:FLOAT.0
	float                            _0x21819CF0;                     // type:FLOAT.0
	float                            _0x4F6A9001;                     // type:FLOAT.0
	float                            _0x113FC395;                     // type:FLOAT.0
	float                            _0xEE2E1B5F;                     // type:FLOAT.0
	float                            _0x202A360D;                     // type:FLOAT.0
	float                            _0xE03518E4;                     // type:FLOAT.0
	float                            _0x701605B7;                     // type:FLOAT.0
	float                            _0x48F54887;                     // type:FLOAT.0
	float                            _0xC4D4C724;                     // type:FLOAT.0
	float                            _0x09083188;                     // type:FLOAT.0
	float                            _0xF3D412D6;                     // type:FLOAT.0
	float                            _0x575B3E01;                     // type:FLOAT.0
	uchar                            _0xFC3A52C3;                     // type:UCHAR.0
	bool                             _0xB3A54B41;                     // type:BOOL.0
	bool                             _0x43B1350C;                     // type:BOOL.0
};

struct _0x561993C9 : _0x1FB1BCEA
{
};

struct _0x561AFC84
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    Clips;                           // type:ARRAY.ATARRAY
};

struct _0x56311D9B : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
};

struct _0x56320992 : _0x0A510DA9
{
};

struct _0x5644ED83 : _0x63948AEA
{
	array<struct _0x95D9C532>        Points;                          // type:ARRAY.ATARRAY
};

struct _0x5649E726
{
	float                            _0xD1878935;                     // type:FLOAT.0
	float                            _0xE8954779;                     // type:FLOAT.0
	float                            _0x54230E54;                     // type:FLOAT.0
	float                            _0x26AEEA09;                     // type:FLOAT.0
	float                            _0x5C3FCD72;                     // type:FLOAT.0
	float                            _0xCE1E92F5;                     // type:FLOAT.0
	float                            _0x67B22829;                     // type:FLOAT.0
	float                            _0xBDC2A675;                     // type:FLOAT.0
	float                            _0xFE8D1BF5;                     // type:FLOAT.0
	float                            _0x2B7210E0;                     // type:FLOAT.0
};

struct _0x564C11AB : _0x3AB6499E
{
	map<string, struct _0xBD27203E>     _0x0798168E;                     // type:MAP.ATBINARYMAP
	struct _0x8BCD5B9A                  _0x16F7069B;                     // type:STRUCT.STRUCTURE
	vec3                                OffsetLimits;                    // type:VECTOR3.0
	vec3                                _0xD3437F0A;                     // type:VECTOR3.0
	string                              _0xC31F2A30;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x808F2993;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x56651398
{
	uint                             dataVersion;                     // type:UINT.0
	uint                             codeVersion;                     // type:UINT.0
	array<struct _0xFAAF9D04>        writtenJournalEntries;           // type:ARRAY.ATARRAY
};

struct _0x56757596
{
	struct _0xB8D37414               Writhe;                          // type:STRUCT.POINTER
	float                            StaggerTimeMin;                  // type:FLOAT.0
	float                            StaggerTimeMax;                  // type:FLOAT.0
	float                            CollapsedTimeMin;                // type:FLOAT.0
	float                            CollapsedTimeMax;                // type:FLOAT.0
	enum _0x61C0401E                 VFX;                             // type:ENUM.32BIT
	string                           Loco;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Weapon;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5685F6BF
{
	string                           FreeModeName;                    // type:STRING.CONST_STRING
};

struct _0x56861D60
{
	float                            _0x8510B0A3;                     // type:FLOAT.0
	float                            _0x6F887CC7;                     // type:FLOAT.0
	float                            ScaleFactor;                     // type:FLOAT.0
};

struct _0x56CFE59D
{
	int                              top;                             // type:INT.0
	int                              left;                            // type:INT.0
	int                              width;                           // type:INT.0
	int                              height;                          // type:INT.0
};

struct _0x56F5D4DE
{
	string                           Identifier;                      // type:STRING.ATNONFINALHASHSTRING
	string                           PedSet;                          // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                           Type;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Direction;                       // type:STRING.ATNONFINALHASHSTRING
	string                           PrimaryClip;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            BlendMin;                        // type:FLOAT.0
	float                            BlendMax;                        // type:FLOAT.0
	float                            AnimRate;                        // type:FLOAT.0
	float                            AnimRateMP;                      // type:FLOAT.0
	float                            AnimSettleRate;                  // type:FLOAT.0
	bool                             EnableGameplayScaleRateTags;     // type:BOOL.0
};

struct _0x570CB6DF : _0xF70F21F5
{
};

struct _0x571327FE : _0x82D5B4A9
{
	struct _0x4A7AD954               MinBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               MaxBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x5BF3C96A               Min;                             // type:STRUCT.STRUCTURE
	struct _0x5BF3C96A               Max;                             // type:STRUCT.STRUCTURE
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
};

struct _0x57229579 : _0x1054F746
{
};

struct _0x572A5491
{
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailure;                // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Idle;                            // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Moving;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Front;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Back;                            // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x762CA6FD;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xB73F4F93;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x2A5FE660;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x4CC59D49;                     // type:STRUCT.STRUCTURE
};

struct _0x572ABC01
{
	string                           ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
	float                            Priority;                        // type:FLOAT.0
};

struct _0x572B6A14 : _0x184818A1
{
	string                           _0x5142BAD4;                     // type:STRING.CONST_STRING
};

struct _0x572DE532 : _0x8A0DC979
{
	string                           CreditsData;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x57320B5E : _0x14229900
{
};

struct _0x5732F795 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
	uchar                            NumBarrels;                      // type:UCHAR.0
};

struct _0x5734CC3E : _0xAB76836B
{
};

struct _0x57439252 : _0x01843326
{
	string                           _0xF82A367D;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x57513EFB : UIMeter
{
	int                              _0x80749F89;                     // type:INT.0
	float                            _0xBA3E5C75;                     // type:FLOAT.0
};

struct _0x57888379 : CTuning
{
	float                            MinRemainingRotationForScaling;  // type:FLOAT.0
	float                            MinAngularVelocityScaleFactor;   // type:FLOAT.0
	float                            MaxAngularVelocityScaleFactor;   // type:FLOAT.0
};

struct _0x57919EF5 : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct _0x579CB7E5 : _0x5A5C67A0
{
	bool                             _0xA6ED74A7;                     // type:BOOL.0
	bool                             _0x284A9E9A;                     // type:BOOL.0
	bool                             _0x83A2D043;                     // type:BOOL.0
	bool                             _0x547A0032;                     // type:BOOL.0
	bool                             _0xE931A15E;                     // type:BOOL.0
	bool                             _0x6C3EABDE;                     // type:BOOL.0
	bool                             _0xE943D484;                     // type:BOOL.0
	bool                             _0x385B1EDA;                     // type:BOOL.0
	bool                             _0x06F8D5D1;                     // type:BOOL.0
	bool                             _0x4870F276;                     // type:BOOL.0
	bool                             _0xD74B8B6A;                     // type:BOOL.0
	bool                             _0xD86447D1;                     // type:BOOL.0
	bool                             _0x10D94727;                     // type:BOOL.0
	bool                             _0x0F42F93C;                     // type:BOOL.0
	bool                             _0xE0F6FACE;                     // type:BOOL.0
	bool                             _0x3BF4BEF3;                     // type:BOOL.0
	bool                             _0x40F6F7B8;                     // type:BOOL.0
	bool                             _0x42B018EF;                     // type:BOOL.0
	bool                             _0x465FF06F;                     // type:BOOL.0
	bool                             _0x85FD7277;                     // type:BOOL.0
	bool                             _0xB3FA99E0;                     // type:BOOL.0
	bool                             _0x0FAECB4A;                     // type:BOOL.0
	uint                             _0x63BF9CE6;                     // type:UINT.0
	float                            _0x92919D9A;                     // type:FLOAT.0
	bool                             _0x997ABEFE;                     // type:BOOL.0
	bool                             _0x49028B67;                     // type:BOOL.0
	bool                             _0xDE4F9737;                     // type:BOOL.0
	bool                             _0xB8B9494E;                     // type:BOOL.0
	bool                             _0x8425ED5F;                     // type:BOOL.0
	bool                             _0x353E864E;                     // type:BOOL.0
	bool                             _0x4545FCAF;                     // type:BOOL.0
	bool                             _0x4FCD7FFC;                     // type:BOOL.0
	bool                             _0xB3053A6A;                     // type:BOOL.0
	bool                             _0xEA0EDB44;                     // type:BOOL.0
	bool                             _0x54010CE6;                     // type:BOOL.0
	int                              _0xF8359A89;                     // type:INT.0
	int                              _0xC55C7732;                     // type:INT.0
	bool                             _0xE5BB93CB;                     // type:BOOL.0
	uint                             _0xA7C4E346;                     // type:UINT.0
	bool                             _0x5C87A17C;                     // type:BOOL.0
	bool                             _0x01BC7D1A;                     // type:BOOL.0
	bool                             _0x0E0057F5;                     // type:BOOL.0
	bool                             _0x737E6FD0;                     // type:BOOL.0
	bool                             _0x0BF9FD6F;                     // type:BOOL.0
	bool                             _0x4811A425;                     // type:BOOL.0
	bool                             _0x52C90991;                     // type:BOOL.0
	bool                             _0x81BDFCD4;                     // type:BOOL.0
	bool                             _0xF8E03EF9;                     // type:BOOL.0
	bool                             _0x440F3BF0;                     // type:BOOL.0
};

struct _0x57A232AA
{
	string                           _0xBA21D87C;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x2AE38B02;                     // type:FLOAT.0
	float                            _0x91086154;                     // type:FLOAT.0
};

struct _0x57AD0B12
{
	map<uint, array<struct CCoverPointNode>>     _0xD41793F6;                     // type:MAP.ATBINARYMAP
};

struct _0x57C66362 : _0x2F7DA38D
{
	struct _0x3ACE1FB6               _0xAE0171D0;                     // type:STRUCT.STRUCTURE
};

struct _0x57CA3C22 : _0x2F7DA38D
{
	struct PedVariationSaveData      pedVariationSaveData;            // type:STRUCT.STRUCTURE
};

struct _0x57D15D58
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x66486C44>        ClothNames;                      // type:ARRAY.ATARRAY
	int                              _0xDAAC88AA;                     // type:INT.0
};

struct _0x57D1C79E : camBaseObjectMetadata
{
	string                           _0xB52C35FA;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x6CD65722;                     // type:UINT.0
	string                           _0xA8549C6F;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x4121B6DD;                     // type:UINT.0
	uint                             _0x0025488D;                     // type:UINT.0
	string                           _0xD7F8F5D3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD895264C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x79EE0101;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xDAD7AB79;                     // type:UINT.0
	string                           _0x47D2B92B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA5480402;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB7DBC564;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xCA079EA6;                     // type:UINT.0
	float                            _0x8CED232E;                     // type:FLOAT.0
	string                           _0xCE8048FC;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x658E91A9;                     // type:UINT.0
	string                           _0x89D29595;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x603A74AD;                     // type:FLOAT.0
	float                            _0x6F2D199B;                     // type:FLOAT.0
	string                           _0xA30AF22F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x92A52108;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEC062CFB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x53A813C9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB92F9DFA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0081F3D9;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x8FDA0241;                     // type:FLOAT.0
	float                            _0xA0F8FBF0;                     // type:FLOAT.0
	float                            _0x671896A4;                     // type:FLOAT.0
	float                            _0x6B0386A8;                     // type:FLOAT.0
	float                            _0x7B404CA7;                     // type:FLOAT.0
	float                            _0xA6AE87B3;                     // type:FLOAT.0
	float                            _0xC2F8D585;                     // type:FLOAT.0
	float                            _0x08F32303;                     // type:FLOAT.0
	float                            _0x8D94A195;                     // type:FLOAT.0
	float                            _0xF3B391DB;                     // type:FLOAT.0
	float                            _0x47E79E12;                     // type:FLOAT.0
	float                            _0x856E074B;                     // type:FLOAT.0
	float                            _0x582BD3DE;                     // type:FLOAT.0
	float                            _0xB0186CD4;                     // type:FLOAT.0
	float                            _0x0A71F962;                     // type:FLOAT.0
	float                            _0x9127E485;                     // type:FLOAT.0
	float                            _0xCA38A1C1;                     // type:FLOAT.0
	float                            _0x526A9C3A;                     // type:FLOAT.0
};

struct _0x57DC40B1
{
	string                           UnhookActionDataSetHash;         // type:STRING.ATNONFINALHASHSTRING
	string                           _0x42F746D9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           FallbackUnhookProbesHash;        // type:STRING.ATNONFINALHASHSTRING
	float                            MaxWaterDepthForSeamlessUnhook;  // type:FLOAT.0
	string                           StruggleDataSetHash;             // type:STRING.ATNONFINALHASHSTRING
};

struct _0x57DE0888 : _0xB74AC865
{
};

struct _0x57E10F57
{
	string                           SatchelItem;                     // type:STRING.ATNONFINALHASHSTRING
	ushort                           Amount;                          // type:USHORT.0
	enum _0xA3028C26                 Comparer;                        // type:ENUM.32BIT
	float                            RandomChance;                    // type:FLOAT.0
};

struct _0x57E4A1CA : _0x0D0E6831
{
};

struct _0x57EA5CA6 : CTuning
{
	struct _0x7F94B6C1               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x57FC15B8
{
	string                           Guid;                            // type:STRING.MEMBER
	enum _0xE87D0F28                 Type;                            // type:ENUM.32BIT
	enum _0xD92C96A0                 PadMake;                         // type:ENUM.32BIT
	array<struct _0xBF502C27>        Sources;                         // type:ARRAY.ATARRAY
};

struct _0x5809C405
{
	string                              Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct void                         Fallback;                        // type:STRUCT.EXTERNAL_NAMED
	map<string, struct _0xB7B6BD27>     TransitionsFrom;                 // type:MAP.ATBINARYMAP
};

struct _0x580F1E76 : CTuning
{
	float                            _0x382745F9;                     // type:FLOAT.0
	float                            _0x7329438D;                     // type:FLOAT.0
	float                            _0x06AE21F1;                     // type:FLOAT.0
	float                            _0xB6C2EDEE;                     // type:FLOAT.0
	float                            _0x7CD9922C;                     // type:FLOAT.0
};

struct _0x580FA60A : _0x0A510DA9
{
};

struct _0x58185505 : _0xF70F21F5
{
	bool                             _0x3224058C;                     // type:BOOL.0
	bool                             _0x2201C709;                     // type:BOOL.0
	float                            intensity;                       // type:FLOAT.0
	float                            _0x3847C144;                     // type:FLOAT.0
	uint                             color;                           // type:UINT.1
	float                            _0x66584A23;                     // type:FLOAT.0
	float                            _0x7024AECE;                     // type:FLOAT.0
};

struct _0x581B0854
{
	array<struct _0x844C34AD>        _0xD1C833B9;                     // type:ARRAY.ATARRAY
	array<struct _0x844C34AD>        _0x3669BA03;                     // type:ARRAY.ATARRAY
	array<struct _0x844C34AD>        _0xE5FB2552;                     // type:ARRAY.ATARRAY
};

struct _0x5828D5EA
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            Value;                           // type:FLOAT.0
	bool                             _0xF0813F3A;                     // type:BOOL.0
};

struct _0x5837FAD6 : _0x3ABDED0D
{
	string                           _0x056F1B40;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA8A6A96C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x72822B76;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x583E63D2
{
	float                            _0x9C4BEB7A;                     // type:FLOAT.0
	float                            _0xD4C99F5F;                     // type:FLOAT.0
	float                            _0xE7563945;                     // type:FLOAT.0
	float                            _0x1134F7CC;                     // type:FLOAT.0
};

struct _0x5840A570
{
	string                           GroupId;                         // type:STRING.ATNONFINALHASHSTRING
	array<string>                    ProbeIds;                        // type:ARRAY.ATARRAY
};

struct _0x5857C938
{
	string                           Extension;                       // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x03B823F0>        Swaps;                           // type:ARRAY.ATARRAY
};

struct _0x585D704A
{
	string                           BGColor;                         // type:STRING.ATNONFINALHASHSTRING
	ushort                           FlashSpeed;                      // type:USHORT.0
	float                            PulseMinMultiplier;              // type:FLOAT.0
	float                            PulseMaxMultiplier;              // type:FLOAT.0
	enum _0x4314208E                 ePulseEaseType;                  // type:ENUM.32BIT
	uchar                            AreaBlipAlpha;                   // type:UCHAR.0
	float                            TextureAcceptableRatio;          // type:FLOAT.0
	float                            TextureRatioHysteresis;          // type:FLOAT.0
	float                            RadiusReduction;                 // type:FLOAT.0
	float                            StageDepthDistanceGranularity;   // type:FLOAT.0
	ushort                           StageDepthMaxDistanceSteps;      // type:USHORT.0
	ushort                           StageDepthMaxDistance;           // type:USHORT.0
	string                           LowPriorityCategoryStart;        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5867C8DD
{
	string                           ClipID;                          // type:STRING.ATNONFINALHASHSTRING
	string                           VariableClipID;                  // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x74303333;                     // type:BOOL.0
};

struct _0x58798CD4 : _0x30794597
{
};

struct _0x5882F0F0 : CTuning
{
	struct _0x252FF88A               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x58940117 : _0x3795142C
{
};

struct _0x58BD789F
{
	float                            _0xA83FD834;                     // type:FLOAT.0
	float                            _0x83FF8690;                     // type:FLOAT.0
	float                            _0xAB690C31;                     // type:FLOAT.0
	float                            _0x3C1D00BB;                     // type:FLOAT.0
	string                           _0xB9208CB1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF348F11E;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xFF0FD89D;                     // type:FLOAT.0
	bool                             _0xB1EA18AF;                     // type:BOOL.0
	float                            _0x808F9656;                     // type:FLOAT.0
	float                            _0xE8A9274C;                     // type:FLOAT.0
	float                            _0xFBFB0E27;                     // type:FLOAT.0
	float                            _0xECBAF123;                     // type:FLOAT.0
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xF3F14A20;                     // type:FLOAT.0
	float                            _0x0B090163;                     // type:FLOAT.0
	float                            _0x000A489A;                     // type:FLOAT.0
	float                            _0x58C30316;                     // type:FLOAT.0
	struct _0x9C07C204               _0xED2F5BD7;                     // type:STRUCT.STRUCTURE
	float                            _0x8610B9C2;                     // type:FLOAT.0
	float                            _0xE200FF83;                     // type:FLOAT.0
	float                            _0x8E293BAA;                     // type:FLOAT.0
	float                            _0xBCEB73A6;                     // type:FLOAT.0
	float                            _0x5BC257AA;                     // type:FLOAT.0
	float                            _0x761C8342;                     // type:FLOAT.0
	float                            _0xFDE5F8FC;                     // type:FLOAT.0
	float                            _0x78FC320A;                     // type:FLOAT.0
	string                           _0x57E15297;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBF8A9EDF;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x58DAFBB6 : CAICondition
{
	enum _0x563FBCEA                 DamagedPed;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xD434FEDC;                     // type:ENUM.32BIT
	string                           Weapon;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x58E37E94 : CBaseReward
{
	string                           award;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x58FD29A7 : UIContainer
{
};

struct _0x5901F7D8 : _0x01843326
{
};

struct _0x5927CCB8
{
	string                           MapMovieName;                    // type:STRING.CONST_STRING
	array<struct _0x01EDA845>        TileSetConstructionData;         // type:ARRAY.ATARRAY
	array<struct _0x44C580DF>        MapConstructionData;             // type:ARRAY.ATARRAY
};

struct _0x5929FF38 : BlipModuleWithCondition
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x592ED613 : _0x1B26FDB1
{
	bool                             Value;                           // type:BOOL.0
};

struct _0x59400292 : _0xA57BA3ED
{
	array<struct _0xEA2ED039>        Slices;                          // type:ARRAY.ATARRAY
	array<struct _0x72E2A0BC>        Simplices;                       // type:ARRAY.ATARRAY
};

struct _0x594A888E : camThirdPersonCameraMetadata
{
	struct _0xC592168C               _0x0E74FB82;                     // type:STRUCT.STRUCTURE
	struct _0x8D865FE1               _0xBDD2D067;                     // type:STRUCT.STRUCTURE
};

struct _0x594EF6D2
{
	array<struct CAICondition>       Conditions;                      // type:ARRAY.ATARRAY
	bitset<enum _0xAE94EF4B>         ActionFlags;                     // type:BITSET.32BIT
	string                           ActionCapabilities;              // type:STRING.ATSTRING
	float                            Weight;                          // type:FLOAT.0
};

struct _0x596371F6 : _0x76F13DAD
{
};

struct _0x5967281C
{
	enum _0x77D8137F                 SceneEntityType;                 // type:ENUM.32BIT
	string                           SceneParticipantId;              // type:STRING.ATNONFINALHASHSTRING
	string                           ModelOrWeaponName;               // type:STRING.ATNONFINALHASHSTRING
	string                           SwapModelName;                   // type:STRING.ATNONFINALHASHSTRING
	uchar                            TintIndex;                       // type:UCHAR.0
	bitset<enum _0xFCB9DFD3>         SceneEntityFlags;                // type:BITSET.32BIT
};

struct _0x5980A5DE : _0xE21F6188
{
	enum eAnimBoneTag                   BoneTag;                         // type:ENUM.32BIT
	array<bitset<enum _0xA037A47B>>     Flags;                           // type:ARRAY.ATARRAY
	float                               SoftCollisionMult;               // type:FLOAT.0
	bool                                EntitySpaceOffset;               // type:BOOL.0
	bool                                UseEntityBounds;                 // type:BOOL.0
	bool                                PreventLoopWrapAround;           // type:BOOL.0
	bool                                PreventCoilToLoopWrapAround;     // type:BOOL.0
	bool                                UseFirstPersonCameraMatrix;      // type:BOOL.0
};

struct _0x59B0BFFC
{
	bool                             enabled;                         // type:BOOL.0
	vec4V                            sizeMultiplier;                  // type:VEC4V.0
	float                            distortionMultiplier;            // type:FLOAT.0
	float                            bloomMultiplier;                 // type:FLOAT.0
	vec2V                            timeWarpHorizontalSoftnessDistMinMax; // type:VEC2V.0
};

struct _0x59B89D9F
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           EntryClipSet;                    // type:STRING.ATNONFINALHASHSTRING
	struct _0xF1D33C7F               EntryBlendData;                  // type:STRUCT.STRUCTURE
	string                           SingleClipData;                  // type:STRING.ATNONFINALHASHSTRING
	array<string, 4>                 ExitClipDataOptions;             // type:ARRAY.ATFIXEDARRAY
	float                            LateralActivationDistanceMax;    // type:FLOAT.0
	float                            AngularActivationLimitInDegs;    // type:FLOAT.0
	struct _0x4B66F14C               BreakoutData;                    // type:STRUCT.STRUCTURE
	struct _0x778E4582               BlendDurations;                  // type:STRUCT.STRUCTURE
	bitset<enum _0x80E18BA8>         Flags;                           // type:BITSET.32BIT
};

struct _0x59BEA91A : UIBehavior
{
	string                           _0xC7215B6E;                     // type:STRING.ATSTRING
	string                           _0x31A08395;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xFD4D1565;                     // type:BOOL.0
};

struct _0x59CADCC4
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	float                            popRangeScaleStart;              // type:FLOAT.0
	float                            popRangeScaleEnd;                // type:FLOAT.0
	float                            popRangeMultiplier;              // type:FLOAT.0
	enum _0xBEFF3185                 lawResponseTime;                 // type:ENUM.32BIT
	enum _0xFF842F1B                 lawResponseType;                 // type:ENUM.32BIT
	enum _0xF4161D51                 specialZoneAttribute;            // type:ENUM.32BIT
	bool                             _0xAEBEFEED;                     // type:BOOL.0
};

struct _0x59D4005F
{
	int                              ReviveHours;                     // type:INT.0
	int                              KillInARowHours;                 // type:INT.0
};

struct _0x59D71795 : _0x68825F77
{
};

struct _0x59D98584 : _0x9A228B01
{
	bool                             _0xE3BA41B4;                     // type:BOOL.0
};

struct _0x5A051249
{
	struct _0x4F468BAD               decal;                           // type:STRUCT.STRUCTURE
	float                            age;                             // type:FLOAT.0
	uint                             _0x989020E4;                     // type:UINT.0
};

struct _0x5A10D466 : _0x1054F746
{
};

struct _0x5A20FAD3
{
	bitset<enum _0xAE0D8F69>         Flags;                           // type:BITSET.32BIT
};

struct _0x5A27B452
{
	uint                             _0x19154F46;                     // type:UINT.0
	string                           _0x3A39EE90;                     // type:STRING.ATSTRING
	size_t                           _0xD96B6AF3;                     // type:SIZET.0
	size_t                           _0x2DCA6F7B;                     // type:SIZET.0
	size_t                           _0x1CEE0571;                     // type:SIZET.0
	size_t                           _0x53668BE5;                     // type:SIZET.0
};

struct _0x5A368F9A
{
	float                            _0x59A231FD;                     // type:FLOAT.0
	float                            _0x5A98B181;                     // type:FLOAT.0
	float                            _0x4EBCBC1D;                     // type:FLOAT.0
	float                            _0x8A28B353;                     // type:FLOAT.0
	float                            _0x5CB3E005;                     // type:FLOAT.0
	float                            _0x9424D5AB;                     // type:FLOAT.0
	float                            _0x50E91E3F;                     // type:FLOAT.0
	float                            _0x3CC09E44;                     // type:FLOAT.0
};

struct _0x5A430688 : CTuning
{
	struct _0x9719549E               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x5A4C3E0C
{
	float                            _0xB85421AB;                     // type:FLOAT.0
	float                            _0x81657CDC;                     // type:FLOAT.0
	float                            _0x66117BDC;                     // type:FLOAT.0
	float                            _0x98E6E186;                     // type:FLOAT.0
	int                              _0x381C8FC9;                     // type:INT.0
};

struct _0x5A5A24C5 : BlipModuleWithCondition
{
	struct _0x6CBEB302               OnTrue;                          // type:STRUCT.STRUCTURE
	struct _0x6CBEB302               OnFalse;                         // type:STRUCT.STRUCTURE
};

struct _0x5A5C67A0
{
};

struct _0x5A656E90 : _0x3AB6499E
{
	float                            _0xC4AE0BC5;                     // type:FLOAT.0
	float                            _0x9C348A2A;                     // type:FLOAT.0
	float                            _0xABBBFB60;                     // type:FLOAT.0
	float                            _0x25CB4B73;                     // type:FLOAT.0
	float                            _0x9649F219;                     // type:FLOAT.0
	float                            _0xEA46A624;                     // type:FLOAT.0
	float                            _0xBE5E4B36;                     // type:FLOAT.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
	float                            _0x3E497885;                     // type:FLOAT.0
	float                            _0x0FD930CE;                     // type:FLOAT.0
	float                            _0x39DA7565;                     // type:FLOAT.0
};

struct _0x5A68C739
{
	array<struct _0x240123D0>        _0xE09304C9;                     // type:ARRAY.ATARRAY
};

struct _0x5A69268D
{
};

struct _0x5A7295F9 : _0x8A0DC979
{
	string                           URL;                             // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5A7E93E2 : StatsChallengeUIInfo
{
};

struct _0x5A8A1445
{
	array<struct _0x449C97D3>        ConditionalSubstitutions;        // type:ARRAY.ATARRAY
};

struct _0x5A8FFD18
{
	bool                             Enabled;                         // type:BOOL.0
	uint                             _0x2799319A;                     // type:UINT.0
	float                            MinPitch;                        // type:FLOAT.0
};

struct _0x5A940A17
{
	vec3V                            _0x7AF3550E;                     // type:VEC3V.0
	float                            _0x899EC077;                     // type:FLOAT.0
	float                            _0xF355A51D;                     // type:FLOAT.2
	float                            _0x5EB9E073;                     // type:FLOAT.2
	float                            _0xD4D4A658;                     // type:FLOAT.0
	float                            _0x67FE62BB;                     // type:FLOAT.0
	float                            _0x6F359C6D;                     // type:FLOAT.2
	float                            _0x372C4ACE;                     // type:FLOAT.0
	float                            _0x42D566DE;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x6D0AE327;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xBB6926E8;                     // type:ENUM.32BIT
	float                            _0x135DD7C8;                     // type:FLOAT.2
	float                            _0xEC4A6D09;                     // type:FLOAT.0
	float                            _0xD7261010;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x6771350F;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x9CAE52A7;                     // type:ENUM.32BIT
	float                            _0xE23371CA;                     // type:FLOAT.2
	float                            _0x250B5DCF;                     // type:FLOAT.0
	float                            _0x3B90D941;                     // type:FLOAT.0
};

struct _0x5A99214A : _0x906508CE
{
	bool                             _0xCB4861BA;                     // type:BOOL.0
	array<struct _0xB7BDB1C9>        _0xEB166D95;                     // type:ARRAY.ATARRAY
};

struct _0x5AAA5D3D
{
	float                            _0x1664E054;                     // type:FLOAT.0
	float                            _0xE82B9216;                     // type:FLOAT.0
	float                            _0xA9E2B5F4;                     // type:FLOAT.0
	float                            _0xC989F269;                     // type:FLOAT.0
	float                            _0x04D39D38;                     // type:FLOAT.0
	float                            _0x0277045A;                     // type:FLOAT.0
	float                            _0xBEEFFFCA;                     // type:FLOAT.0
	float                            _0x98A0F61B;                     // type:FLOAT.0
	float                            FireTimeAfterChaseOnFoot;        // type:FLOAT.0
	float                            _0xCF338F83;                     // type:FLOAT.0
	float                            _0xC39670BA;                     // type:FLOAT.0
	float                            _0xB9FCBCF1;                     // type:FLOAT.0
	float                            _0xAEF0FF59;                     // type:FLOAT.0
	float                            _0xEE783889;                     // type:FLOAT.0
	float                            _0xFCD29EF2;                     // type:FLOAT.0
	float                            _0x0C2C3178;                     // type:FLOAT.0
	float                            _0xC8B5A5DD;                     // type:FLOAT.0
	float                            _0xD8F59DB3;                     // type:FLOAT.0
	float                            MaxDistanceToMyVehicleToChase;   // type:FLOAT.0
	float                            MaxDistanceToVehicleForCommandeer; // type:FLOAT.0
	float                            MinDistanceToEnterVehicleIfTargetEntersVehicle; // type:FLOAT.0
	float                            _0x2F121A95;                     // type:FLOAT.0
	float                            _0xF2403CA5;                     // type:FLOAT.0
	float                            _0xAA098267;                     // type:FLOAT.0
	float                            _0x556D1EB6;                     // type:FLOAT.0
	float                            _0x271FD501;                     // type:FLOAT.0
	float                            _0xD835C5B6;                     // type:FLOAT.0
	uint                             MinTimeToChangeChaseOnFootSpeed; // type:UINT.0
	uchar                            NumEarlyVehicleEntryDriversAllowed; // type:UCHAR.0
	uchar                            MaxNumPedsChasingOnFoot;         // type:UCHAR.0
};

struct _0x5ABE3994 : CAICondition
{
};

struct _0x5AC0C1C9 : _0x8F62E55D
{
	vec3                             RelativeOffset;                  // type:VECTOR3.0
	bool                             _0x132E8652;                     // type:BOOL.0
	float                            CustomOrbitDistance;             // type:FLOAT.0
	struct _0xFC70364F               _0xC6716636;                     // type:STRUCT.STRUCTURE
	struct _0xFC70364F               _0xB2946CAF;                     // type:STRUCT.STRUCTURE
	struct _0xFC70364F               _0x9C73406D;                     // type:STRUCT.STRUCTURE
	struct _0xFC70364F               _0x8EC0A508;                     // type:STRUCT.STRUCTURE
	struct _0xFC70364F               _0x517C0821;                     // type:STRUCT.STRUCTURE
	struct _0xFC70364F               _0xE95A530B;                     // type:STRUCT.STRUCTURE
	float                            _0x12BE4EEE;                     // type:FLOAT.0
	float                            _0x65AAEBF6;                     // type:FLOAT.0
	float                            _0x1606AD04;                     // type:FLOAT.0
	float                            _0x29C37600;                     // type:FLOAT.0
	float                            _0xE34E6EFB;                     // type:FLOAT.0
	float                            _0x4B108D9B;                     // type:FLOAT.0
	bool                             _0x6038442D;                     // type:BOOL.0
	bool                             _0xFA56A1E0;                     // type:BOOL.0
	float                            _0x70FD16B1;                     // type:FLOAT.0
	float                            _0xCE0B4481;                     // type:FLOAT.0
	int                              _0xC8B28ACD;                     // type:INT.0
	vec3                             _0x788F4DDA;                     // type:VECTOR3.0
	float                            _0x2A0C9042;                     // type:FLOAT.0
	bool                             _0x5C35C7EB;                     // type:BOOL.0
	string                           _0x7700B7ED;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5ACB266C : _0x7CA06CF1
{
	bool                             _0x9CFFC126;                     // type:BOOL.0
};

struct _0x5AD1191D
{
	string                           videoFileName;                   // type:STRING.ATSTRING
	string                           soundName;                       // type:STRING.ATSTRING
};

struct _0x5AD2A914 : _0xAD9BC2D3
{
	bitset<enum _0xD9B991BD>         _0x65222AF6;                     // type:BITSET.8BIT
	bool                             _0xED3CC521;                     // type:BOOL.0
};

struct _0x5AF7CC04 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x5B12F18A : _0xE4AECA2C
{
	int                              Data;                            // type:INT.0
};

struct _0x5B13805C : _0x0FC1398F
{
	string                           AppID;                           // type:STRING.ATNSHASHSTRING
};

struct _0x5B20408D : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x5B275EDA
{
	string                           LocKey;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5B2CB9E0
{
	array<struct _0x9FFC3E87>        DispatchServices;                // type:ARRAY.ATARRAY
};

struct _0x5B384A44
{
	bool                             bThrowSmokeGrenadeEnabled;       // type:BOOL.0
	uchar                            uMaxNumActiveThrowers;           // type:UCHAR.0
	uint                             uConsiderRecentThrowAsActiveTimeoutMS; // type:UINT.0
	uint                             uMinTimeBetweenThrowsAtSameTargetMS; // type:UINT.0
	uint                             uMinTimeForSamePedToThrowAgainMS; // type:UINT.0
	uint                             uCheckForSmokeThrowPeriodMS;     // type:UINT.0
	float                            fMinDistanceToTarget;            // type:FLOAT.0
	float                            fMaxDistanceToTarget;            // type:FLOAT.0
	float                            fDotMinThrowerToTarget;          // type:FLOAT.0
	float                            fMinLoiteringTimeSeconds;        // type:FLOAT.0
};

struct _0x5B3BB857 : _0x6F9AAF97
{
};

struct _0x5B581DA6
{
	array<struct CWeaponActionResultList>     aWeaponActionResultList;         // type:ARRAY.ATARRAY
	array<string>                             aBrawlingStyles;                 // type:ARRAY.ATARRAY
	array<string>                             aPedModels;                      // type:ARRAY.ATARRAY
	string                                    ImpulseTest;                     // type:STRING.ATNONFINALHASHSTRING
	string                                    InterrelationTest;               // type:STRING.ATNONFINALHASHSTRING
	string                                    SpecialConditionTest;            // type:STRING.ATNONFINALHASHSTRING
	string                                    ActionProbeTest;                 // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x76382FA4>                  SelfFilter;                      // type:BITSET.32BIT
	bitset<enum _0xE72522AC>                  PedPose;                         // type:BITSET.32BIT
	bitset<enum _0x21F00F8A>                  MovementSpeed;                   // type:BITSET.32BIT
	bitset<enum _0xA7DA38FF>                  RequiredWeaponType;              // type:BITSET.32BIT
};

struct _0x5B58C79A : _0x5C7B0174
{
};

struct _0x5B683B5B
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xEB94E487>        Idles;                           // type:ARRAY.ATARRAY
};

struct _0x5B77FEDE
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           VideoFileName;                   // type:STRING.ATSTRING
	float                            fDuration;                       // type:FLOAT.0
	bool                             bNotOnDisk;                      // type:BOOL.0
};

struct _0x5B800C53
{
	string                           CycleName;                       // type:STRING.ATSTRING
	uint                             TimeMult;                        // type:UINT.0
};

struct _0x5B85AD61
{
	enum eAnimBoneTag                ParentBone;                      // type:ENUM.32BIT
	enum eAnimBoneTag                AttachBone;                      // type:ENUM.32BIT
	vec3V                            AttachmentOffset;                // type:VEC3V.0
	vec3V                            AttachmentRotation;              // type:VEC3V.0
};

struct _0x5B8AD8BA
{
	float                            TexWidthScale;                   // type:FLOAT.0
	float                            PaperIntensity;                  // type:FLOAT.0
	float                            NoiseUVScale;                    // type:FLOAT.0
	float                            NoiseIntensity;                  // type:FLOAT.0
	float                            orCullDist;                      // type:FLOAT.0
	float                            orFadeDist;                      // type:FLOAT.0
	float                            orDotLength;                     // type:FLOAT.0
	float                            orDotScale;                      // type:FLOAT.0
	float                            orWidthScale;                    // type:FLOAT.0
	float                            owDotLength;                     // type:FLOAT.0
	float                            owDotScale;                      // type:FLOAT.0
	float                            hudAlphaScalar;                  // type:FLOAT.0
};

struct _0x5B913CEF : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           _0xD7C5AC9C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5BA1A146 : _0x8A0DC979
{
};

struct _0x5BA30A85
{
	float                            _0x123D51B9;                     // type:FLOAT.0
	float                            _0x00B9507F;                     // type:FLOAT.0
	float                            _0xA3B84C55;                     // type:FLOAT.0
};

struct _0x5BB60831 : _0x963EBEBE
{
};

struct _0x5BB670DD
{
	array<struct _0xC3CFA262>        Sets;                            // type:ARRAY.ATARRAY
};

struct _0x5BBBBA5B : _0x39DE799A
{
};

struct _0x5BD857F6 : _0xF920D56D
{
};

struct _0x5BE4874A : _0x8A0DC979
{
};

struct _0x5BE519E7
{
	enum _0xE6E47298                 Pelvis;                          // type:ENUM.32BIT
	enum _0xE6E47298                 _0x5BEB0238;                     // type:ENUM.32BIT
	enum _0xE6E47298                 _0x16AE77C0;                     // type:ENUM.32BIT
};

struct _0x5BEAC5E7 : _0xED23B004
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5BF3C96A : _0x32651A59
{
};

struct _0x5BF975CF : _0x39DE799A
{
	int                              Value;                           // type:INT.0
};

struct _0x5C067422 : uiProportionalOffsetBehaviorBase
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x5C0A76A6
{
	float                            MinDistanceForLeavingArea;       // type:FLOAT.0
	float                            MinTimeAfterSpawnDelayAfterLeavingArea; // type:FLOAT.0
	float                            MinTimeAfterSpawnDelayWithoutLeavingArea; // type:FLOAT.0
	uint                             MaxTimeSinceLastSpotted;         // type:UINT.0
	float                            TimeEvadingForEscape;            // type:FLOAT.0
	float                            TimeInOrAroundWaterBeforeAdjustingResources; // type:FLOAT.0
	float                            MinDistanceDuringCrimeSceneSearch; // type:FLOAT.0
	float                            MinDistanceDuringNoEvasionPOISearch; // type:FLOAT.0
};

struct _0x5C1CB98F : _0x5603C709
{
};

struct _0x5C3E93D4 : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x08DBCEDC                 Mod;                             // type:ENUM.32BIT
	float                            Duration;                        // type:FLOAT.0
};

struct _0x5C49D27C
{
	array<string>                    PedTypes;                        // type:ARRAY.ATARRAY
	float                            Chances;                         // type:FLOAT.0
	float                            Distance;                        // type:FLOAT.0
	string                           Reaction;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5C5A313D : _0x3ABDED0D
{
	string                           _0xC9C722AA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x60E854E4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2393FFCD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5C5E39AE : CTuning
{
	struct _0x7458F17C               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x5C60A3D4
{
	uint                             _0x36FC602C;                     // type:UINT.0
	uint                             TimeIntervalMS;                  // type:UINT.0
};

struct _0x5C6E4F9C : _0x8A0DC979
{
	enum _0x387AA487                 Area;                            // type:ENUM.32BIT
};

struct _0x5C7B0174 : _0x4200C6AC
{
};

struct _0x5C8405F9
{
	struct CLoadOutItem              Item;                            // type:STRUCT.POINTER
	float                            Chance;                          // type:FLOAT.0
};

struct _0x5C853176 : _0xA26E1113
{
	vec3                             value;                           // type:VECTOR3.0
};

struct _0x5C97D4C9
{
	string                           BreakVehicleLockAnimData;        // type:STRING.ATNONFINALHASHSTRING
	string                           ExitStreamClipSet;               // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultPairedLootClipsSet;       // type:STRING.ATNONFINALHASHSTRING
	string                           ConditionalPairedLootClipsLookup; // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5C982484
{
	uint                             numColumns;                      // type:UINT.0
	uint                             numRows;                         // type:UINT.0
	uint                             numFrames;                       // type:UINT.0
	uint                             clipBoundsIndex;                 // type:UINT.0
};

struct _0x5CA67537 : _0x673DCB64
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x5CAAE5F8
{
	string                           _0x7A687998;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x131C66C1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x52FB0BFA;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5CAC764E
{
	array<float, 4>                  Spring;                          // type:ARRAY.ATFIXEDARRAY
	array<float, 4>                  Damping;                         // type:ARRAY.ATFIXEDARRAY
	array<float, 4>                  InvMass;                         // type:ARRAY.ATFIXEDARRAY
	float                            SpringRefDirRel;                 // type:FLOAT.0
	float                            DampingRefDirRel;                // type:FLOAT.0
	float                            InvMassRefDirRel;                // type:FLOAT.0
	array<float, 5>                  SpringScales;                    // type:ARRAY.ATFIXEDARRAY
};

struct _0x5CADC64F
{
	array<struct _0xBE944B14>        _0x46A1FD3B;                     // type:ARRAY.ATARRAY
	struct void                      RangeSet;                        // type:STRUCT.EXTERNAL_NAMED
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5CBA02E4 : _0x40637027
{
};

struct _0x5CBFC79E : _0xCAAD7E2F
{
};

struct _0x5CBFFDDE : _0x4DA163F4
{
	vec3V                            _0xE190216C;                     // type:VEC3V.0
	bool                             _0x08F3E3FA;                     // type:BOOL.0
	float                            searchRadius;                    // type:FLOAT.0
};

struct _0x5CE4CCA4
{
	string                           ClipSetVarId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5CE80E00
{
	bool                             _0x30BA4589;                     // type:BOOL.0
	bool                             _0x9F409F3B;                     // type:BOOL.0
	uint                             StartDelayDuration;              // type:UINT.0
	uint                             InDuration;                      // type:UINT.0
	uint                             HoldDuration;                    // type:UINT.0
	uint                             OutDuration;                     // type:UINT.0
	enum _0x4EEED54E                 _0xDAF10A1B;                     // type:ENUM.32BIT
	enum _0x4EEED54E                 _0x1226E0E8;                     // type:ENUM.32BIT
};

struct _0x5CF3DE90
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE501B3C1;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxDepthEvoMin;                 // type:FLOAT.0
	float                            ptFxDepthEvoMax;                 // type:FLOAT.0
	float                            ptFxSpeedEvoMin;                 // type:FLOAT.0
	float                            ptFxSpeedEvoMax;                 // type:FLOAT.0
	float                            _0xB4E8571F;                     // type:FLOAT.0
	float                            _0x4751986F;                     // type:FLOAT.0
	float                            _0xFE61F7CE;                     // type:FLOAT.0
	float                            _0x0EC133BC;                     // type:FLOAT.0
};

struct _0x5CFF0ACD
{
	float                            Rate;                            // type:FLOAT.0
	bool                             AccelerationBased;               // type:BOOL.0
	bool                             ScaleAccelWithDelta;             // type:BOOL.0
	bool                             ZeroRateOnDirectionChange;       // type:BOOL.0
	float                            AccelRate;                       // type:FLOAT.0
};

struct _0x5D118525 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x5D194698
{
	struct _0x5CAC764E               YawMotionData;                   // type:STRUCT.STRUCTURE
	struct _0x5CAC764E               PitchMotionData;                 // type:STRUCT.STRUCTURE
	struct _0x5CAC764E               FastYawMotionData;               // type:STRUCT.STRUCTURE
	struct _0x5CAC764E               FastPitchMotionData;             // type:STRUCT.STRUCTURE
	array<array<vec3V, 2>>           SpineJointLimits;                // type:ARRAY.ATARRAY
	array<vec3V, 2>                  NeckJointLimits;                 // type:ARRAY.ATFIXEDARRAY
	array<vec3V, 2>                  HeadJointLimits;                 // type:ARRAY.ATFIXEDARRAY
	array<vec3V, 2>                  EyeJointLimits;                  // type:ARRAY.ATFIXEDARRAY
	array<float, 4>                  Spring;                          // type:ARRAY.ATFIXEDARRAY
	array<float, 4>                  Damping;                         // type:ARRAY.ATFIXEDARRAY
	array<float, 4>                  InvMass;                         // type:ARRAY.ATFIXEDARRAY
	float                            SpringRefDirRel;                 // type:FLOAT.0
	float                            DampingRefDirRel;                // type:FLOAT.0
	float                            InvMassRefDirRel;                // type:FLOAT.0
	array<float, 5>                  SpringScales;                    // type:ARRAY.ATFIXEDARRAY
	array<float>                     SpineWeights;                    // type:ARRAY.ATARRAY
	array<float, 5>                  ArmCompensationWeights;          // type:ARRAY.ATFIXEDARRAY
	array<float, 6>                  BlendDurations;                  // type:ARRAY.ATFIXEDARRAY
	array<float, 4>                  BlendRateScales;                 // type:ARRAY.ATFIXEDARRAY
	array<array<float, 2>, 4>        RefDirBlendRates;                // type:ARRAY.ATFIXEDARRAY
	float                            DeltaLimitBlendRate;             // type:FLOAT.0
	float                            RefDirWeightBlendRate;           // type:FLOAT.0
	float                            RollLimitBlendRate;              // type:FLOAT.0
	float                            LODDistanceTorso;                // type:FLOAT.0
	float                            LODDistanceHeadNeck;             // type:FLOAT.0
	float                            LODDistanceEyes;                 // type:FLOAT.0
	float                            OvershootInterp;                 // type:FLOAT.0
	float                            MaxCharSpeed;                    // type:FLOAT.0
	float                            MaxCharAngSpeed;                 // type:FLOAT.0
	float                            CharSpeedModifier;               // type:FLOAT.0
	float                            CharAngSpeedModifier;            // type:FLOAT.0
	float                            CharAngSpeedCounterModifierStill; // type:FLOAT.0
	float                            CharAngSpeedCounterModifierMoving; // type:FLOAT.0
	float                            TargetYawLimit;                  // type:FLOAT.0
	float                            TargetYawLimitInWater;           // type:FLOAT.0
	float                            TargetYawLimitCarry;             // type:FLOAT.0
	float                            HatCompensation;                 // type:FLOAT.0
	float                            AngDiffLimit;                    // type:FLOAT.0
	float                            AngDiffLimitRelaxed;             // type:FLOAT.0
	int                              BlinkOpenTime;                   // type:INT.0
	int                              BlinkCloseTime;                  // type:INT.0
	float                            BlinkPendingAngleThreshold;      // type:FLOAT.0
	float                            BlinkResetAngleThreshold;        // type:FLOAT.0
	float                            BlinkTriggerAngleFraction;       // type:FLOAT.0
	float                            BrowScale;                       // type:FLOAT.0
};

struct _0x5D1F3F85
{
	vec3V                            _0x7AF3550E;                     // type:VEC3V.0
	float                            _0x3C50B5A1;                     // type:FLOAT.0
	float                            _0xD902628F;                     // type:FLOAT.0
	float                            _0xA7D87C02;                     // type:FLOAT.0
	float                            _0xFF66E872;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xE02914F5;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xDF4D0E78;                     // type:ENUM.32BIT
	float                            _0xF4A06065;                     // type:FLOAT.0
	float                            _0xBED4E6E0;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xDC319A34;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x3F829F3A;                     // type:ENUM.32BIT
	float                            _0x07DA9869;                     // type:FLOAT.0
	float                            _0x10FCDB69;                     // type:FLOAT.2
	float                            _0x72521E14;                     // type:FLOAT.2
	float                            _0x711EF0ED;                     // type:FLOAT.2
	float                            _0xDD5F3371;                     // type:FLOAT.2
	float                            _0xC979BD04;                     // type:FLOAT.0
	float                            _0x4A3AC612;                     // type:FLOAT.0
	float                            _0x59D1C6A3;                     // type:FLOAT.0
	float                            _0x04CB8FCE;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xBBCD3854;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xAFDB860E;                     // type:ENUM.32BIT
	float                            _0xFF1866B0;                     // type:FLOAT.0
	float                            _0xCEF2197D;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xBA3B037A;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x27D9FD41;                     // type:ENUM.32BIT
	vec3V                            _0x6CE32112;                     // type:VEC3V.0
	vec3V                            _0x2240DE0F;                     // type:VEC3V.0
	vec3V                            _0x161750AB;                     // type:VEC3V.0
	vec3V                            _0x34321E28;                     // type:VEC3V.0
	float                            _0x54A396E0;                     // type:FLOAT.0
	float                            _0x0103D9E3;                     // type:FLOAT.0
	float                            _0x567B77EB;                     // type:FLOAT.0
	float                            _0xC0C9ED7B;                     // type:FLOAT.0
	float                            _0xEFF3D4B2;                     // type:FLOAT.0
	float                            _0x3DFF6CCC;                     // type:FLOAT.2
	float                            _0x0E504D2C;                     // type:FLOAT.2
	enum _0x6BCA108F                 _0xD434BB88;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x11D32367;                     // type:ENUM.32BIT
};

struct _0x5D202AAE : _0x8A0DC979
{
};

struct _0x5D37CDA5 : _0xCDF97B9D
{
};

struct _0x5D3996E5 : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	enum _0x7123E6B1                 minimum;                         // type:ENUM.32BIT
	enum _0x7123E6B1                 maximum;                         // type:ENUM.32BIT
	enum _0x7123E6B1                 default;                         // type:ENUM.32BIT
};

struct _0x5D3F6196
{
	string                           Name;                            // type:STRING.ATSTRING
	string                           ProductId;                       // type:STRING.ATSTRING
};

struct _0x5D496F4E : _0x0F5161EB
{
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 StatType;                        // type:ENUM.32BIT
};

struct _0x5D68AFA9 : CTuning
{
	float                            _0xE15A248F;                     // type:FLOAT.0
	bool                             _0xBC80B72A;                     // type:BOOL.0
	bool                             _0xC871C756;                     // type:BOOL.0
	bool                             _0x1EC26E01;                     // type:BOOL.0
	int                              _0x465CB421;                     // type:INT.0
	int                              _0x725D817A;                     // type:INT.0
	uint                             _0x831235C3;                     // type:UINT.0
	uint                             _0x985F18E1;                     // type:UINT.0
	uint                             _0x08C33104;                     // type:UINT.0
	uint                             _0x4A7C6BBF;                     // type:UINT.0
};

struct _0x5D6F4F57 : _0x906508CE
{
};

struct _0x5D83CE42
{
};

struct _0x5D855317
{
	string                           _0x54C49985;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x1D661BD6;                     // type:UINT.0
	uint                             _0x0E8373A8;                     // type:UINT.0
	struct _0xFE7A6193               _0x500EBAB8;                     // type:STRUCT.STRUCTURE
	struct _0xFE7A6193               _0x833AFD9C;                     // type:STRUCT.STRUCTURE
};

struct _0x5D87B14B
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x88B37827               _0x627A770E;                     // type:STRUCT.STRUCTURE
	struct _0x88B37827               _0xDD5A584A;                     // type:STRUCT.STRUCTURE
	struct _0x88B37827               _0xB66CE3C9;                     // type:STRUCT.STRUCTURE
};

struct _0x5DA09A28
{
	bitset<enum _0x05150611>         _0x41540C7F;                     // type:BITSET.32BIT
	float                            _0x90AB0269;                     // type:FLOAT.0
	float                            _0xB8C1AAD3;                     // type:FLOAT.0
	float                            _0xBE03EB7F;                     // type:FLOAT.0
	float                            _0x5FBFA61A;                     // type:FLOAT.0
	float                            _0x5C0B271E;                     // type:FLOAT.0
	float                            _0xCBDD2E0D;                     // type:FLOAT.0
	vec2V                            _0x0C4B32EE;                     // type:VEC2V.0
	vec2V                            _0x02307F2B;                     // type:VEC2V.0
	float                            _0x99CEDE2E;                     // type:FLOAT.0
	float                            _0x67421586;                     // type:FLOAT.0
	int                              _0x8CDA7D9C;                     // type:INT.0
};

struct _0x5DA78944
{
	struct _0xABB31B99               Filter;                          // type:STRUCT.POINTER
};

struct _0x5DAAEF88
{
	vec3                             vStart;                          // type:VECTOR3.0
	vec3                             vEnd;                            // type:VECTOR3.0
	bool                             _0xCD9CCE1C;                     // type:BOOL.0
	bool                             _0x1B6F64A0;                     // type:BOOL.0
	bool                             _0x5B953975;                     // type:BOOL.0
	bool                             _0x7783B480;                     // type:BOOL.0
};

struct _0x5DB68CCC
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33C1E27F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0xF7B26E09;                     // type:FLOAT.0
	float                            _0x1ECC3344;                     // type:FLOAT.0
	float                            _0xB8F6B2DD;                     // type:FLOAT.0
	float                            _0xC1690A78;                     // type:FLOAT.0
	float                            _0x85993657;                     // type:FLOAT.0
};

struct _0x5DC49993 : CTuning
{
	float                            MaxRange;                        // type:FLOAT.0
	float                            MinTimeBetweenReactions;         // type:FLOAT.0
};

struct _0x5DF15BAA
{
	enum _0x859F7636                 ModifierType;                    // type:ENUM.32BIT
	float                            ModifierValue;                   // type:FLOAT.0
};

struct _0x5E182D48 : _0xF8449058
{
	array<struct _0x443B9F9F>        Actions;                         // type:ARRAY.ATARRAY
	array<string>                    FallbackCutActions;              // type:ARRAY.ATARRAY
	struct _0x77DE7E16               HumanInteractionData;            // type:STRUCT.STRUCTURE
	bitset<enum _0xAADEBCE7>         Flags;                           // type:BITSET.32BIT
	string                           SwapModel;                       // type:STRING.ATNONFINALHASHSTRING
	struct _0xB3EF21B5               SwapAttachmentData;              // type:STRUCT.STRUCTURE
	string                           TargetSwapOutfit;                // type:STRING.ATNONFINALHASHSTRING
	array<string>                    TargetSwapOutfitTags;            // type:ARRAY.ATARRAY
	string                           MountWaitClipSet;                // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5E350980 : _0x93F492CB
{
	string                           _0xC42A6C8C;                     // type:STRING.ATSTRING
	string                           Speaker;                         // type:STRING.ATSTRING
	string                           _0x03087CE1;                     // type:STRING.ATSTRING
};

struct _0x5E3DC99F : CTuning
{
	float                            _0xC6AE2967;                     // type:FLOAT.0
};

struct _0x5E3F7DCB
{
	map<string, vec3V>               _0x407AC2AB;                     // type:MAP.ATBINARYMAP
};

struct _0x5E40326E : _0xED23B004
{
	float                            Value;                           // type:FLOAT.0
};

struct _0x5E556AFB : _0x2F7DA38D
{
	bool                                _0x83371272;                     // type:BOOL.0
	bool                                _0x21164117;                     // type:BOOL.0
	bool                                _0x98BA5742;                     // type:BOOL.0
	bool                                _0x70C1EB06;                     // type:BOOL.0
	bool                                _0x222BF169;                     // type:BOOL.0
	float                               _0x15D71539;                     // type:FLOAT.0
	bool                                _0xD9891D75;                     // type:BOOL.0
	bool                                _0x22145799;                     // type:BOOL.0
	bool                                _0xF17CBA38;                     // type:BOOL.0
	bool                                _0xD0163711;                     // type:BOOL.0
	string                              _0xDB55F15D;                     // type:STRING.ATNONFINALHASHSTRING
	float                               _0xDDF9FA5A;                     // type:FLOAT.0
	float                               fadeInDuration;                  // type:FLOAT.0
	float                               fadeOutDuration;                 // type:FLOAT.0
	enum _0x0100F80E                    fadeInCurve;                     // type:ENUM.32BIT
	enum _0x0100F80E                    fadeOutCurve;                    // type:ENUM.32BIT
	map<string, struct _0x70D05F4A>     _0x548D55DC;                     // type:MAP.ATBINARYMAP
	array<struct _0x4EFF5B1C, 4>        _0x0218E2C9;                     // type:ARRAY.ATRANGEARRAY
	struct _0x23F58839                  _0x4F404ECF;                     // type:STRUCT.STRUCTURE
};

struct _0x5E5F3FEF
{
	vec3V                            LongarmBackRotCorrectionAimShortarmCover; // type:VEC3V.0
	vec3V                            LongarmBackTransCorrectionAimShortarmCover; // type:VEC3V.0
};

struct _0x5E7E4141 : CTuning
{
	float                            _0x9A5F144F;                     // type:FLOAT.0
	float                            _0x8AA5A084;                     // type:FLOAT.0
	float                            _0xEB37A13E;                     // type:FLOAT.0
	float                            _0xC6187467;                     // type:FLOAT.0
};

struct _0x5E913669
{
	bool                             _0x022FBDB6;                     // type:BOOL.0
	string                           _0x51554422;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xF1B35C7E;                     // type:BOOL.0
	string                           _0x2DB26A2D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x43F05A69;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5EA8A2DF : CAICondition
{
	float                            _0x9EE546FD;                     // type:FLOAT.0
};

struct _0x5EC0B0AE : _0xDC10377E
{
	vec3                             AttachRelativeOffset;            // type:VECTOR3.0
	vec3                             _0x237AB623;                     // type:VECTOR3.0
	vec3                             _0x66CFDBBC;                     // type:VECTOR3.0
	vec3                             _0x2CADC811;                     // type:VECTOR3.0
	vec3                             _0x19546622;                     // type:VECTOR3.0
	vec3                             _0xCD567A71;                     // type:VECTOR3.0
	vec3                             _0xB90A1F19;                     // type:VECTOR3.0
	vec3                             _0xD0A10D24;                     // type:VECTOR3.0
	vec3                             _0x5E61A8FB;                     // type:VECTOR3.0
	vec3                             _0xC09AD373;                     // type:VECTOR3.0
	vec3                             _0xA823A33E;                     // type:VECTOR3.0
	vec3                             _0xCA8B8847;                     // type:VECTOR3.0
	vec3                             _0x76BB0B38;                     // type:VECTOR3.0
	vec3                             _0xCC28113A;                     // type:VECTOR3.0
	vec3                             _0x3455A918;                     // type:VECTOR3.0
	vec3                             _0x4B012584;                     // type:VECTOR3.0
	vec3                             _0x688B7BEA;                     // type:VECTOR3.0
	vec3                             _0xFC435DEF;                     // type:VECTOR3.0
	vec3                             _0xE150BC2D;                     // type:VECTOR3.0
	vec2                             _0x54FF6071;                     // type:VECTOR2.0
	float                            _0x2C388C5E;                     // type:FLOAT.0
	float                            _0x5F34AA75;                     // type:FLOAT.0
	float                            _0x29B001D7;                     // type:FLOAT.0
	float                            _0xFF782110;                     // type:FLOAT.0
	float                            _0xC42D3200;                     // type:FLOAT.0
	float                            _0x978F697A;                     // type:FLOAT.0
	float                            _0xD44E6C90;                     // type:FLOAT.0
	float                            _0x7D14483A;                     // type:FLOAT.0
	float                            MinPitch;                        // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	bool                             _0x1ACC1CF3;                     // type:BOOL.0
	float                            _0xDA2912D9;                     // type:FLOAT.0
	float                            _0x24CF2239;                     // type:FLOAT.0
	float                            _0xECADBBC2;                     // type:FLOAT.0
	float                            _0x89056CB8;                     // type:FLOAT.0
	float                            _0xCAE3C002;                     // type:FLOAT.0
	float                            _0xDD6CC698;                     // type:FLOAT.0
	float                            _0x0009D17E;                     // type:FLOAT.0
	float                            _0xE3A42295;                     // type:FLOAT.0
	float                            _0x76B857F8;                     // type:FLOAT.0
	float                            _0xADD1C811;                     // type:FLOAT.0
	float                            _0xC4E58160;                     // type:FLOAT.0
	float                            _0x5F392CE6;                     // type:FLOAT.0
	float                            _0xF1094D83;                     // type:FLOAT.0
	float                            _0xD983C8BF;                     // type:FLOAT.0
	float                            _0x6DD6861B;                     // type:FLOAT.0
	float                            _0xCCCA2FE0;                     // type:FLOAT.0
	float                            _0xB941FE20;                     // type:FLOAT.0
	float                            _0x096E8FC7;                     // type:FLOAT.0
	float                            _0xCD2C4B40;                     // type:FLOAT.0
	float                            _0xEB6566F4;                     // type:FLOAT.0
	float                            _0x1FE870C5;                     // type:FLOAT.0
	int                              AttachBoneTag;                   // type:INT.0
	uint                             _0x8A677DF2;                     // type:UINT.0
	uint                             _0xED211588;                     // type:UINT.0
	bool                             ShouldApplyAttachOffsetRelativeToCamera; // type:BOOL.0
	bool                             ShouldTorsoIkLimitsOverrideOrbitPitchLimits; // type:BOOL.0
	bool                             _0x42C80F74;                     // type:BOOL.0
	bool                             _0x66BB239F;                     // type:BOOL.0
};

struct _0x5EC12A8F : _0xA0889763
{
	float                            value;                           // type:FLOAT.0
};

struct _0x5ECF13CD : _0xA709E487
{
};

struct _0x5ECFF4EF
{
	bitset<enum _0x914B7C81>               AnimInfoFlags;                   // type:BITSET.32BIT
	struct _0xD46E7A34                     FullBody;                        // type:STRUCT.STRUCTURE
	struct FullBodyLoopedEmoteAnimInfo     FullBodyLooped;                  // type:STRUCT.POINTER
	struct _0xAD112116                     UpperBody;                       // type:STRUCT.STRUCTURE
	array<struct _0x2E323752>              PropData;                        // type:ARRAY.ATARRAY
	struct _0xCBEC0F91                     FirstPersonData;                 // type:STRUCT.STRUCTURE
	struct TempoEmoteData                  TempoData;                       // type:STRUCT.POINTER
	array<string>                          SupportedWeapons;                // type:ARRAY.ATARRAY
};

struct _0x5ED92B2B
{
	enum _0xAEA9877C                 Type;                            // type:ENUM.32BIT
	string                           _0x482B905F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x14605A62;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDFFD3CFB;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x2DC95EC3;                     // type:UINT.0
	int                              _0x5A49ACD4;                     // type:INT.0
	uint                             Priority;                        // type:UINT.0
	bitset<enum _0xF945C864>         _0x63DB1B2A;                     // type:BITSET.8BIT
	bool                             _0x92892B1B;                     // type:BOOL.0
	bool                             _0xF14F7FD4;                     // type:BOOL.0
	bool                             _0x91BA13B3;                     // type:BOOL.0
	bool                             _0x9BDE5C65;                     // type:BOOL.0
	bool                             _0xD0C2BDC1;                     // type:BOOL.0
};

struct _0x5ED9649C
{
	string                           _0x8FD50F20;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x46898F66;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1221B07B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAF7AAA3E;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xD2FD0A49;                     // type:FLOAT.0
	float                            _0x9BFB9276;                     // type:FLOAT.0
	float                            _0x18F5E211;                     // type:FLOAT.0
	float                            _0x1F88F84B;                     // type:FLOAT.0
};

struct _0x5EDA78FC
{
	string                           _0x8AB9BBD9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF8AB0F64;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5DD4DDE8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDBC63FC8;                     // type:STRING.ATSTRING
};

struct _0x5EF21CD9
{
	int                              SwatAutomobileUnitsToRemoveForUnreachableTarget; // type:INT.0
	uint                             TimeBetweenUpdatesForUnreachableTargetViaFoot; // type:UINT.0
	uint                             TimeBetweenUpdatesForReachableTargetViaFoot; // type:UINT.0
	uint                             TimeBetweenUpdatesForUnreachableTargetViaRoad; // type:UINT.0
	float                            MaxDistanceForUnreachableTargetViaRoad; // type:FLOAT.0
};

struct _0x5EFD1120
{
	string                           CategoryName;                    // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x3273F55D>        Types;                           // type:ARRAY.ATARRAY
};

struct _0x5EFEBD79 : _0xF70F21F5
{
	string                           _0x8A944233;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x4DA163F4               _0xDC110A02;                     // type:STRUCT.POINTER
	bool                             optional;                        // type:BOOL.0
	bool                             _0xFE77EAE6;                     // type:BOOL.0
	bool                             _0xE47BA481;                     // type:BOOL.0
};

struct _0x5F14C3C2 : _0xF70F21F5
{
	array<struct _0xC4664C58>        _0xC853E292;                     // type:ARRAY.ATARRAY
};

struct _0x5F1845B2 : _0x0BBA48C1
{
	string                           NetworkId;                       // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x9BE88B89>        Clips;                           // type:ARRAY.ATARRAY
};

struct _0x5F1D826B : _0x1DE1294D
{
};

struct _0x5F47FC17 : _0x8A0DC979
{
	enum eCompendiumCategories       Category;                        // type:ENUM.32BIT
	uint                             _0x378FEB42;                     // type:UINT.0
};

struct _0x5F4839DD : _0x4AD37C0A
{
	array<struct _0xB034FFFD>        _0x83CC65E7;                     // type:ARRAY.ATARRAY
	array<string>                    _0x37381133;                     // type:ARRAY.ATARRAY
	array<struct _0xFEE170B8>        _0x04273008;                     // type:ARRAY.ATARRAY
};

struct _0x5F498DEB
{
	string                           _0x085DE605;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x187C0A47;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x1A344390                 _0x158C1C38;                     // type:ENUM.32BIT
	string                           _0xAAEED045;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5F7333B1
{
	bool                             _0xEED64613;                     // type:BOOL.0
	bool                             _0x4BB58CAC;                     // type:BOOL.0
	uint                             _0xFCD31C5B;                     // type:UINT.0
	uint                             _0xFBB4D2C8;                     // type:UINT.0
};

struct _0x5F78E379 : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x84B954E7;                     // type:STRUCT.STRUCTURE
	struct _0xED16C5B0               _0x2A2B1433;                     // type:STRUCT.STRUCTURE
	vec3V                            _0xEBCD4130;                     // type:VEC3V.0
	string                           _0xB562C063;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1FE6F044;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xA65B69DA                 _0x80626C51;                     // type:ENUM.32BIT
	enum _0xF49A67A7                 SoundType;                       // type:ENUM.32BIT
};

struct _0x5F7BB149 : UIBehavior
{
	enum eUiEventChannels            EventChannel;                    // type:ENUM.32BIT
	struct uiEventDataBase           EventData;                       // type:STRUCT.POINTER
	bool                             DispatchUnfocusEvent;            // type:BOOL.0
};

struct _0x5F833FD6 : _0xBF9602D8
{
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5F88006B
{
	struct _0x96B34ADF               MaxFacingThreshold;              // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               MaxMovingThreshold;              // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               MinDistanceToBeConsideredLaggingBehind; // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               MinDistanceToCheckClumped;       // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               MaxDistanceToBeConsideredClumped; // type:STRUCT.STRUCTURE
};

struct _0x5F9E4DD3
{
	float                            DurationMin;                     // type:FLOAT.0
	float                            DurationMax;                     // type:FLOAT.0
	float                            AnimationTimeMin;                // type:FLOAT.0
	float                            AnimationTimeMax;                // type:FLOAT.0
	float                            _0x51F95220;                     // type:FLOAT.0
	struct _0xE8AF7AC7               ZigZagSplitPoint;                // type:STRUCT.STRUCTURE
	struct _0x9AA3D143               ForkPoint;                       // type:STRUCT.STRUCTURE
	struct _0xA35432B6               _0x4EEA6604;                     // type:STRUCT.STRUCTURE
	struct _0x45BA9C82               KeyFrameData;                    // type:STRUCT.STRUCTURE
};

struct _0x5FA0834D
{
	uint                             _0x18E4BAA7;                     // type:UINT.0
	uint                             TimeLimit;                       // type:UINT.0
	float                            Radius;                          // type:FLOAT.0
};

struct _0x5FB2AE96
{
	float                            _0x7725E7B2;                     // type:FLOAT.0
	string                           _0x0BA3D577;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC7DB35D7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA75A7963;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5FBA3B3A
{
	map<string, bool>                Items;                           // type:MAP.ATMAP
};

struct _0x5FBD0295
{
	float                            _0x14E22E7F;                     // type:FLOAT.0
	float                            _0xC2DE2915;                     // type:FLOAT.0
	float                            _0xE4D50D8A;                     // type:FLOAT.0
	float                            _0xD97DC5A5;                     // type:FLOAT.0
	float                            _0x87844021;                     // type:FLOAT.0
	float                            _0x351A72E8;                     // type:FLOAT.0
	float                            _0x4DF76F02;                     // type:FLOAT.0
	float                            _0x190E26F6;                     // type:FLOAT.0
	float                            _0x8D86347E;                     // type:FLOAT.0
	float                            _0x93325288;                     // type:FLOAT.0
	float                            _0x2AEC1C7F;                     // type:FLOAT.0
	float                            _0x5894794A;                     // type:FLOAT.0
};

struct _0x5FC1694A : StatsChallengeUIInfo
{
};

struct _0x5FC88197
{
	array<struct _0x649820E2>        FleePoints;                      // type:ARRAY.ATARRAY
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5FC8967C : _0x2F7DA38D
{
	string                           ptFxName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           ptFxAssetName;                   // type:STRING.ATNONFINALHASHSTRING
	vec3V                            offsetPosition;                  // type:VEC3V.0
	vec3V                            _0x8A60C92F;                     // type:VEC3V.0
	bool                             _0xDB6A0211;                     // type:BOOL.0
	float                            scale;                           // type:FLOAT.0
	int                              probability;                     // type:INT.0
	enum eAnimBoneTag                boneId;                          // type:ENUM.32BIT
	uint                             color;                           // type:UINT.1
	bool                             isLooping;                       // type:BOOL.0
	bool                             isAttached;                      // type:BOOL.0
	bool                             _0xB76AA1BB;                     // type:BOOL.0
	float                            _0xE827432B;                     // type:FLOAT.0
	float                            _0x8EE135BB;                     // type:FLOAT.0
	float                            _0x626A3D6E;                     // type:FLOAT.0
	float                            _0x388E7270;                     // type:FLOAT.0
};

struct _0x5FD3E106
{
	string                             Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAmbientModelVariations     Variations;                      // type:STRUCT.POINTER
	float                              Probability;                     // type:FLOAT.0
	bitset<enum _0x8F0B6849>           TimeOfDay;                       // type:BITSET.8BIT
	string                             InventoryInfoHash;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5FD5510F
{
	float                            Align;                           // type:FLOAT.0
	float                            _0x6259A3BE;                     // type:FLOAT.0
};

struct _0x5FDAD4BE
{
	string                           WindDisturbanceMuzzleInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	string                           WindDisturbanceBulletInfoHashName; // type:STRING.ATNONFINALHASHSTRING
};

struct _0x5FE10C4C
{
	uint64                           _0x60C295EE;                     // type:UINT64.0
	uint64                           _0xCBD11ECF;                     // type:UINT64.0
	uint64                           _0x16F0197F;                     // type:UINT64.0
	uint64                           _0xF201C763;                     // type:UINT64.0
	int64                            _0xE98DB2D3;                     // type:INT64.0
	int64                            _0x04E22285;                     // type:INT64.0
	uint64                           _0x7CBD77DD;                     // type:UINT64.0
	uint64                           _0xFA3D7A5A;                     // type:UINT64.0
	int                              _0xEDC1D997;                     // type:INT.0
};

struct _0x5FE5960F : _0xDE795AEA
{
};

struct _0x5FEA120B : _0x22B199F9
{
};

struct _0x5FEFA1E7
{
	struct _0x0E4BCD35               _0x09194763;                     // type:STRUCT.STRUCTURE
	struct _0x0E4BCD35               _0xC9778481;                     // type:STRUCT.STRUCTURE
	string                           _0xB79EAD67;                     // type:STRING.ATNONFINALHASHSTRING
	array<float>                     _0x4C347C4D;                     // type:ARRAY.ATARRAY
	float                            _0x27608B1C;                     // type:FLOAT.0
	bool                             _0x3291060D;                     // type:BOOL.0
};

struct _0x5FF70FA4 : camBaseCameraMetadata
{
	struct _0x396E4048               Position;                        // type:STRUCT.STRUCTURE
	struct _0x396E4048               Target;                          // type:STRUCT.STRUCTURE
	string                           _0x5B6928C2;                     // type:STRING.ATNONFINALHASHSTRING
	vec2                             WorldPitchLimits;                // type:VECTOR2.0
	vec2                             _0xF8FB59CE;                     // type:VECTOR2.0
	uint                             _0xDBD91047;                     // type:UINT.0
	bool                             _0x1900F986;                     // type:BOOL.0
	bool                             _0xA2DC3264;                     // type:BOOL.0
	bool                             _0x1A6259FD;                     // type:BOOL.0
	float                            _0x74206AC4;                     // type:FLOAT.0
	float                            _0x3BD48238;                     // type:FLOAT.0
	string                           _0xADF45CFD;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xC7E22658;                     // type:BOOL.0
	float                            _0x62D272B9;                     // type:FLOAT.0
	bool                             _0x18FCF5E1;                     // type:BOOL.0
	float                            _0x0AFDB810;                     // type:FLOAT.0
	bool                             _0x6BC89619;                     // type:BOOL.0
	vec2                             _0xB82CAFE5;                     // type:VECTOR2.0
	vec2                             _0xA50F09AA;                     // type:VECTOR2.0
	bool                             _0xA4BAAFF7;                     // type:BOOL.0
	bool                             _0x8CD8E17B;                     // type:BOOL.0
	vec2                             _0xF970EE3B;                     // type:VECTOR2.0
	vec2                             _0x820E369A;                     // type:VECTOR2.0
	string                           _0xC607587A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9A0D7722;                     // type:STRING.ATNONFINALHASHSTRING
	string                           AnimationDictionary;             // type:STRING.ATNONFINALHASHSTRING
	string                           _0x886F8C73;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x06966EB9;                     // type:BOOL.0
	string                           _0xCE8048FC;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x937F44E7;                     // type:BOOL.0
	bool                             _0xFA277D58;                     // type:BOOL.0
	bool                             _0x2A5C2E38;                     // type:BOOL.0
	bool                             _0xDD1E2233;                     // type:BOOL.0
	bool                             _0xDDE8F9F1;                     // type:BOOL.0
	uint                             BlendInDuration;                 // type:UINT.0
	uint                             BlendOutDuration;                // type:UINT.0
	bool                             _0xC942D0DB;                     // type:BOOL.0
	bool                             _0x60889A3E;                     // type:BOOL.0
	bool                             _0x9641902E;                     // type:BOOL.0
};

struct _0x6002A167
{
	struct _0x857163E6               Scorer;                          // type:STRUCT.POINTER
	struct _0x14229900               Task;                            // type:STRUCT.POINTER
};

struct _0x6027CF69 : _0x1FB1BCEA
{
};

struct _0x60285E82 : _0xE44EB193
{
	struct _0x70A20876               _0x4D1CCB35;                     // type:STRUCT.SIMPLE_POINTER
	bitset<enum _0x5A3B0660>         _0x780D85C8;                     // type:BITSET.16BIT
	float                            _0x182E4236;                     // type:FLOAT.0
	float                            _0xF355C2F0;                     // type:FLOAT.0
	float                            _0x28395058;                     // type:FLOAT.0
	float                            scale;                           // type:FLOAT.0
	uint                             _0x05733014;                     // type:UINT.0
	float                            _0x9CFA6E18;                     // type:FLOAT.0
	int                              _0x23CEAC14;                     // type:INT.0
	string                           _0x8D6CD13D;                     // type:STRING.ATHASHVALUE
	string                           _0xF7BF3D4D;                     // type:STRING.ATHASHVALUE
	uint                             _0x449604BB;                     // type:UINT.0
	int                              _0xBFBD460C;                     // type:INT.0
	struct _0xB8E3D843               _0xB3F1A670;                     // type:STRUCT.STRUCTURE
	uchar                            _0x30DE7356;                     // type:UCHAR.0
	uchar                            _0x4AD5002D;                     // type:UCHAR.0
	uchar                            _0x049B10C5;                     // type:UCHAR.0
	uchar                            _0x295BC36A;                     // type:UCHAR.0
	string                           _0xD6C58840;                     // type:STRING.ATHASHVALUE
	string                           _0x4F73E945;                     // type:STRING.ATHASHVALUE
	string                           _0x28919904;                     // type:STRING.ATHASHVALUE
	string                           _0x2114E524;                     // type:STRING.ATHASHVALUE
	uint                             _0xB5E4A013;                     // type:UINT.0
	int                              _0x05FBC0BD;                     // type:INT.0
	char                             _0xD3922690;                     // type:CHAR.0
	char                             _0x0B659442;                     // type:CHAR.0
};

struct _0x603230BC : CTuning
{
	struct _0x7FB63AA3               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x6035F569 : _0x39DE799A
{
	float                            Value;                           // type:FLOAT.0
};

struct _0x60527A0E
{
};

struct _0x6053769A : _0x39DE799A
{
	struct uiGamerHandleBlob         data;                            // type:STRUCT.STRUCTURE
};

struct _0x60587AA5 : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0x6058CA83 : _0xB8A8B4A7
{
};

struct _0x6072C7BA
{
	enum _0x1925B7EA                 PathType;                        // type:ENUM.32BIT
};

struct _0x60762EDD : _0xF51D5F09
{
};

struct _0x607F15BC
{
	bool                                            _0xF92355F5;                     // type:BOOL.0
	bool                                            _0xC7E4A398;                     // type:BOOL.0
	bool                                            _0x1F729A16;                     // type:BOOL.0
	bitset<enum eMovementTransitionHelperFlags>     Flags;                           // type:BITSET.32BIT
	enum _0xFB86F8ED                                Target;                          // type:ENUM.32BIT
	array<struct _0xBA3EEB17>                       _0x6535A39F;                     // type:ARRAY.ATARRAY
	struct _0x8E64405F                              _0x2C8CE372;                     // type:STRUCT.POINTER
};

struct _0x608767C1
{
	float                            _0xED21641B;                     // type:FLOAT.0
	float                            _0x26EF26BC;                     // type:FLOAT.0
	bool                             _0xFD0C44AD;                     // type:BOOL.0
	float                            _0xDCF55528;                     // type:FLOAT.0
	float                            _0x11BCD885;                     // type:FLOAT.0
	float                            _0xD1059877;                     // type:FLOAT.0
	float                            _0xD349B7FF;                     // type:FLOAT.0
	float                            _0x8DA49969;                     // type:FLOAT.0
	float                            _0x0ECDCF26;                     // type:FLOAT.0
	float                            _0x8904F902;                     // type:FLOAT.0
	float                            _0x2A572748;                     // type:FLOAT.0
	float                            _0x2A7ED735;                     // type:FLOAT.0
	bool                             _0xACD1A6D2;                     // type:BOOL.0
	float                            _0x87168CE5;                     // type:FLOAT.0
};

struct _0x60A6237F
{
	map<enum _0x3B1F0870, struct _0xF13A4BD4>     _0x6975B710;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xA16FA08A>               _0x6AD41927;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xA16FA08A>               _0x03204F34;                     // type:MAP.ATBINARYMAP
};

struct _0x60AB4219
{
	uchar                            _0x1B2FFB89;                     // type:UCHAR.0
	uchar                            _0xA89D94C6;                     // type:UCHAR.0
};

struct _0x60AB4F0B : _0x1FB1BCEA
{
};

struct _0x60B9DC1F : uiScreenInputOperationBase
{
	enum _0xE7051B3A                 FilterType;                      // type:ENUM.32BIT
};

struct _0x60E277D1
{
	bool                             _0x2FA9D2CC;                     // type:BOOL.0
};

struct _0x60EA96EA : _0xFECF2F24
{
};

struct _0x61046C23
{
	float                               _0x2A02517C;                     // type:FLOAT.0
	float                               _0x867624B3;                     // type:FLOAT.0
	float                               _0x3137059A;                     // type:FLOAT.0
	float                               _0xA989314F;                     // type:FLOAT.0
	float                               _0xF9649C1B;                     // type:FLOAT.0
	float                               _0x9C81263A;                     // type:FLOAT.0
	float                               _0x665E6C28;                     // type:FLOAT.0
	float                               _0xD1607798;                     // type:FLOAT.0
	bool                                _0xD0FAEC15;                     // type:BOOL.0
	bool                                _0x64267A03;                     // type:BOOL.0
	float                               _0x77079B42;                     // type:FLOAT.0
	float                               _0xF66B89BF;                     // type:FLOAT.0
	float                               _0x0962D9BD;                     // type:FLOAT.0
	float                               _0x13054D91;                     // type:FLOAT.0
	float                               _0x992914A3;                     // type:FLOAT.0
	float                               _0xE9881AF7;                     // type:FLOAT.0
	float                               _0x228119D0;                     // type:FLOAT.0
	bool                                _0xA35B1DC6;                     // type:BOOL.0
	bool                                _0x5C0DAE2E;                     // type:BOOL.0
	uint                                _0xEAD6AC17;                     // type:UINT.0
	uint                                _0x6AE530F8;                     // type:UINT.0
	uint                                _0x541DB6B9;                     // type:UINT.0
	uint                                _0x6AB3B183;                     // type:UINT.0
	uint                                _0x2C2DC3C4;                     // type:UINT.0
	uint                                _0x9634CDE2;                     // type:UINT.0
	uint                                _0x7798DF1A;                     // type:UINT.0
	float                               _0xFDCBAEF7;                     // type:FLOAT.0
	float                               _0x8E13058A;                     // type:FLOAT.0
	float                               _0x4B02A862;                     // type:FLOAT.0
	map<string, struct _0x0E1B275B>     _0xF1A1FB50;                     // type:MAP.ATBINARYMAP
	struct _0xCA460AD5                  _0xF8394733;                     // type:STRUCT.STRUCTURE
	uint                                _0xC8A6DF13;                     // type:UINT.0
	uint                                _0x5459DEA2;                     // type:UINT.0
	uint                                _0xD5FA6579;                     // type:UINT.0
	uint                                _0x544A87BF;                     // type:UINT.0
	uint                                _0x105B102F;                     // type:UINT.0
	uint                                _0x59281AE9;                     // type:UINT.0
};

struct _0x610683E8 : _0x2F7DA38D
{
};

struct _0x610BB19B : _0x14229900
{
	bool                             _0xD73A53EF;                     // type:BOOL.0
};

struct _0x610E9F81 : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            _0x3B23D25F;                     // type:FLOAT.0
	float                            _0x9CFE8082;                     // type:FLOAT.0
	float                            _0x10098C34;                     // type:FLOAT.0
	float                            _0x1C008FD1;                     // type:FLOAT.0
	string                           _0xB8B04F18;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC1833043;                     // type:FLOAT.0
	string                           _0xB9C735A2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x41AC9C93;                     // type:FLOAT.0
	float                            _0x1C9EB44E;                     // type:FLOAT.0
};

struct _0x61131A24 : _0x4A7AD954
{
	struct _0x8932045A               Relationship;                    // type:STRUCT.STRUCTURE
};

struct _0x6115BB07
{
	float                            TemperatureTarget;               // type:FLOAT.0
	float                            TemperatureFlatten;              // type:FLOAT.0
	float                            TemperatureOffset;               // type:FLOAT.0
};

struct _0x613AA048
{
};

struct _0x6142C61D : _0xAD9BC2D3
{
	string                           Heading;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Body;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x616F504A : CTuning
{
	float                            _0x18A414FC;                     // type:FLOAT.0
	float                            _0x8E30578D;                     // type:FLOAT.0
	float                            _0x655DED98;                     // type:FLOAT.0
	float                            _0xEE89A76B;                     // type:FLOAT.0
	float                            _0x23E8780F;                     // type:FLOAT.0
	float                            _0x43E69531;                     // type:FLOAT.0
	float                            _0x8514D398;                     // type:FLOAT.0
	float                            _0x4DE43B01;                     // type:FLOAT.0
	float                            _0x6670F9C3;                     // type:FLOAT.0
	float                            _0x6596AB76;                     // type:FLOAT.0
	float                            _0x639A9CB5;                     // type:FLOAT.0
	float                            _0xAFDD4B82;                     // type:FLOAT.0
	float                            _0x7AE2C5A1;                     // type:FLOAT.0
	float                            _0xDFAD3C40;                     // type:FLOAT.0
	float                            _0x00AA37E4;                     // type:FLOAT.0
	float                            _0xDF32D7E1;                     // type:FLOAT.0
	uchar                            _0x458C162D;                     // type:UCHAR.0
	uchar                            _0x79E9F384;                     // type:UCHAR.0
	uint                             _0xC935421E;                     // type:UINT.0
};

struct _0x61784794
{
	bool                             DisableCoverToCoverTranslationScaling; // type:BOOL.0
	bool                             DisableCoverToCoverRotationScaling; // type:BOOL.0
	float                            _0x4E7299CD;                     // type:FLOAT.0
	float                            _0xF0FC91CD;                     // type:FLOAT.0
	float                            CoverToCoverMinDistToScale;      // type:FLOAT.0
	float                            CoverToCoverMinAngToScale;       // type:FLOAT.0
	float                            CoverToCoverMinAng;              // type:FLOAT.0
	float                            CoverToCoverDistTol;             // type:FLOAT.0
	float                            CoverToCoverMaxDistToStep;       // type:FLOAT.0
	float                            CoverToCoverMaxAccel;            // type:FLOAT.0
	float                            CoverToCoverMinDepthToScale;     // type:FLOAT.0
	float                            _0x5AAC938D;                     // type:FLOAT.0
	float                            _0x59731519;                     // type:FLOAT.0
	float                            _0x99532BAC;                     // type:FLOAT.0
	float                            _0xA3E2DB58;                     // type:FLOAT.0
	float                            _0x4EECE5E5;                     // type:FLOAT.0
	float                            _0xE3F1C3E1;                     // type:FLOAT.0
	float                            _0x1173C725;                     // type:FLOAT.0
	float                            _0x3F1C49F5;                     // type:FLOAT.0
	float                            _0x08C45AE1;                     // type:FLOAT.0
	string                           _0x2E766DE8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2159A0A6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6FDA4AEA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetVarId;                    // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xF50932F7>        _0x5C03F880;                     // type:ARRAY.ATARRAY
	array<struct _0xF50932F7>        _0x82C4164D;                     // type:ARRAY.ATARRAY
	array<struct _0xF50932F7>        _0xCD589C53;                     // type:ARRAY.ATARRAY
	array<struct _0xBB1EB87E>        _0x2C677AEF;                     // type:ARRAY.ATARRAY
	array<struct _0xBB1EB87E>        _0x932573F2;                     // type:ARRAY.ATARRAY
};

struct _0x618BAEEF : _0x7535FFBE
{
	string                           _0x95DA69E7;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x88F63BB2;                     // type:BOOL.0
	array<string>                    Clips;                           // type:ARRAY.ATARRAY
};

struct _0x61D1AAB0 : BlipModuleWithCondition
{
	short                            FadeInTimeMS;                    // type:SHORT.0
	short                            FadeOutTimeMS;                   // type:SHORT.0
	bool                             ReverseFadeDirection;            // type:BOOL.0
	bool                             FirstTimeUsesFade;               // type:BOOL.0
	bool                             StartHidden;                     // type:BOOL.0
};

struct _0x61DEA3ED : _0x23DAEDEE
{
	struct _0xCFD64FEE               _0xB575AA56;                     // type:STRUCT.STRUCTURE
};

struct _0x62133BCB : _0x1054F746
{
};

struct _0x622362A8
{
	array<int>                       MapOriginalToFinalClipIndex;     // type:ARRAY.ATARRAY
	array<int>                       MapOriginalToFinalExampleIndex;  // type:ARRAY.ATARRAY
};

struct _0x62243022
{
	float                            _0x2E149888;                     // type:FLOAT.0
	float                            _0xEE8E0B7F;                     // type:FLOAT.0
	float                            _0xA4A03E66;                     // type:FLOAT.0
	float                            _0x834A2CDD;                     // type:FLOAT.0
	float                            _0xD4FD8932;                     // type:FLOAT.0
	float                            _0x46A1FD5F;                     // type:FLOAT.0
	float                            _0x4CFAA0E3;                     // type:FLOAT.0
	float                            _0x3C75DCE2;                     // type:FLOAT.0
	float                            _0x8D7F5A38;                     // type:FLOAT.0
	int                              _0xC3813A8C;                     // type:INT.0
};

struct _0x62263ECF : _0x1DE1294D
{
	enum _0x729D6EED                 Operation;                       // type:ENUM.32BIT
	float                            fValue;                          // type:FLOAT.0
};

struct _0x622FEECE : CTuning
{
	struct _0x5BA30A85               CoverPoints;                     // type:STRUCT.STRUCTURE
	float                            _0xDF0A2B3A;                     // type:FLOAT.0
	float                            _0x0684E90D;                     // type:FLOAT.0
	float                            _0x4383AE51;                     // type:FLOAT.0
	float                            _0x070E4BAC;                     // type:FLOAT.0
	float                            _0xFA0BDF4D;                     // type:FLOAT.0
	float                            _0xC0CF3FD6;                     // type:FLOAT.0
	float                            _0xD3E401FC;                     // type:FLOAT.0
	string                           _0xEB03BDA1;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xE33A65C5;                     // type:FLOAT.0
	float                            _0x67DFA8CF;                     // type:FLOAT.0
	float                            _0x41FB0156;                     // type:FLOAT.0
	float                            _0x8D869949;                     // type:FLOAT.0
	float                            _0x303D9713;                     // type:FLOAT.0
	float                            _0xE6384E47;                     // type:FLOAT.0
	float                            _0x133FCE4A;                     // type:FLOAT.0
	float                            _0x92D21568;                     // type:FLOAT.0
	float                            _0xE3C676EB;                     // type:FLOAT.0
	float                            _0x011487D0;                     // type:FLOAT.0
	float                            _0xF75E2716;                     // type:FLOAT.0
	float                            _0x5139E520;                     // type:FLOAT.0
	float                            _0x9CB36FD4;                     // type:FLOAT.0
	uint                             _0x03131DE3;                     // type:UINT.0
	uint                             _0x7FA271CB;                     // type:UINT.0
	ushort                           _0x4B583FB5;                     // type:USHORT.0
	ushort                           _0x3F4C2268;                     // type:USHORT.0
	short                            _0xCBE78003;                     // type:SHORT.0
	char                             _0x32EFA5BE;                     // type:CHAR.0
	bool                             _0xFD9DB3B3;                     // type:BOOL.0
};

struct _0x6243AAB7 : _0x8A0DC979
{
	enum _0x5B754EBB                 Context;                         // type:ENUM.32BIT
};

struct _0x624A4E1C
{
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
};

struct _0x624BEF4F
{
	float                            Idle;                            // type:FLOAT.0
	float                            Walk;                            // type:FLOAT.0
	float                            Run;                             // type:FLOAT.0
};

struct _0x62504236
{
	int                              InitialDelay;                    // type:INT.0
	int                              UnderVehicleInitialDelay;        // type:INT.0
	float                            VelocityThreshold;               // type:FLOAT.0
	float                            ContinuousContactTime;           // type:FLOAT.0
	float                            UnderVehicleVelocityThreshold;   // type:FLOAT.0
	float                            UnderVehicleContinuousContactTime; // type:FLOAT.0
	float                            UnderCarMaxVelocity;             // type:FLOAT.0
	struct CNmTuningSet              StuckOnVehicle;                  // type:STRUCT.STRUCTURE
	struct CNmTuningSet              EndStuckOnVehicle;               // type:STRUCT.STRUCTURE
	struct CNmTuningSet              UpdateOnVehicle;                 // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StuckUnderVehicle;               // type:STRUCT.STRUCTURE
	struct CNmTuningSet              EndStuckUnderVehicle;            // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StuckOnVehiclePlayer;            // type:STRUCT.STRUCTURE
	struct CNmTuningSet              EndStuckOnVehiclePlayer;         // type:STRUCT.STRUCTURE
	struct CNmTuningSet              UpdateOnVehiclePlayer;           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              StuckUnderVehiclePlayer;         // type:STRUCT.STRUCTURE
	struct CNmTuningSet              EndStuckUnderVehiclePlayer;      // type:STRUCT.STRUCTURE
};

struct _0x6277482B : _0x4198511D
{
};

struct _0x6279F8A8
{
	float                            ProbeRadius;                     // type:FLOAT.0
	float                            _0x4CE1F243;                     // type:FLOAT.0
	float                            _0xC6AA115F;                     // type:FLOAT.0
	float                            _0x052F8153;                     // type:FLOAT.0
	float                            _0x80182ECF;                     // type:FLOAT.0
	float                            _0x7052122C;                     // type:FLOAT.0
	float                            _0x95F29AA9;                     // type:FLOAT.0
	float                            _0x9E987084;                     // type:FLOAT.0
	int                              _0xEDDC53E0;                     // type:INT.0
	bool                             _0xC3351477;                     // type:BOOL.0
	bool                             _0xF1EF1101;                     // type:BOOL.0
	bool                             _0x2A1DFC0C;                     // type:BOOL.0
	bool                             _0xE640D0B9;                     // type:BOOL.0
	bool                             _0xC4F03216;                     // type:BOOL.0
	bool                             _0x3E1D6A28;                     // type:BOOL.0
	bool                             _0xDC6C3B0D;                     // type:BOOL.0
	bool                             _0xB49FA0E4;                     // type:BOOL.0
	int                              _0x3FEBD193;                     // type:INT.0
};

struct _0x6282A6DB
{
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	float                            AimingBlendOutDuration;          // type:FLOAT.0
	float                            _0xDC64A094;                     // type:FLOAT.0
	bool                             _0xAAFF7D70;                     // type:BOOL.0
};

struct _0x62862EE1
{
	float                            _0x382FDDAD;                     // type:FLOAT.0
	float                            _0x01E1F54D;                     // type:FLOAT.0
	float                            _0x61AB49B7;                     // type:FLOAT.0
	float                            _0x48DFFB88;                     // type:FLOAT.0
	float                            _0xB851B692;                     // type:FLOAT.0
	uint                             _0x8781E0EE;                     // type:UINT.0
	float                            _0xAD00C7E8;                     // type:FLOAT.0
	float                            _0xB316685A;                     // type:FLOAT.0
	float                            _0x042297AF;                     // type:FLOAT.0
	float                            _0xB34ED0C8;                     // type:FLOAT.0
	float                            _0x370949B6;                     // type:FLOAT.0
	float                            _0x29F27C1B;                     // type:FLOAT.0
	float                            _0x05EED199;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0x62B316F7 : CTuning
{
	struct _0xB86F7860               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x62C8DA81 : _0xFECF2F24
{
};

struct _0x62D01AC0 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0x42282E70;                     // type:BOOL.0
	bool                             _0xCCA663E9;                     // type:BOOL.0
	bool                             _0x64F379FF;                     // type:BOOL.0
	bool                             _0x43D417DD;                     // type:BOOL.0
	bool                             _0x83639692;                     // type:BOOL.0
	bool                             _0xD96306BB;                     // type:BOOL.0
	bool                             _0x666C02C6;                     // type:BOOL.0
	bool                             _0x05CF935C;                     // type:BOOL.0
	bool                             _0x43688413;                     // type:BOOL.0
	bool                             _0x02835C36;                     // type:BOOL.0
	bool                             _0xFFBCAB21;                     // type:BOOL.0
	bool                             _0xDF8A3AD4;                     // type:BOOL.0
};

struct _0x62E28419 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eEventType                  _0x992B4090;                     // type:ENUM.32BIT
	array<enum eEventType>           EventTypes;                      // type:ARRAY.ATARRAY
};

struct _0x62EDD645
{
	float                            _0xA5CCFD6B;                     // type:FLOAT.0
	int                              _0x3E5D8EB3;                     // type:INT.0
	float                            _0x51E8B0C1;                     // type:FLOAT.0
};

struct _0x6327C216 : _0x2F7DA38D
{
	string                           archetype;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6332BCAA
{
	array<struct _0x9B5D785F>        Lines;                           // type:ARRAY.ATARRAY
};

struct _0x633C8069
{
	char                             _0x65D47CC0;                     // type:CHAR.0
	char                             _0x68758206;                     // type:CHAR.0
};

struct _0x633FCD2F
{
	string                           ParticipantId;                   // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x56392180>         Flags;                           // type:BITSET.32BIT
};

struct _0x635D686D : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x63703EA3
{
	bitset<enum _0x36A08B4C>         Flags;                           // type:BITSET.8BIT
	float                            Value;                           // type:FLOAT.0
	enum _0xC7504D05                 _0x4183DF1E;                     // type:ENUM.32BIT
};

struct _0x637E6AB3
{
	bool                             Enabled;                         // type:BOOL.0
	vec3                             LeftHandOffset;                  // type:VECTOR3.0
	vec3                             RightHandOffset;                 // type:VECTOR3.0
};

struct _0x63948AEA : _0xB91B3562
{
};

struct _0x6396B884 : _0xFECF2F24
{
};

struct _0x6396FD8D : _0xE834461E
{
};

struct _0x63A7DF84 : _0x23232399
{
	bool                             _0xD844D76B;                     // type:BOOL.0
	bool                             _0xF119FE24;                     // type:BOOL.0
	bool                             _0xA56FE8E7;                     // type:BOOL.0
	bool                             _0x1A960576;                     // type:BOOL.0
};

struct _0x63AF4C5E
{
	struct _0x34EFFC3D               SmallConfig;                     // type:STRUCT.STRUCTURE
	struct _0x34EFFC3D               MediumConfig;                    // type:STRUCT.STRUCTURE
	struct _0x34EFFC3D               LargeConfig;                     // type:STRUCT.STRUCTURE
	float                            SmallToMediumStrengthTransitionStart; // type:FLOAT.0
	float                            SmallToMediumStrengthTransitionEnd; // type:FLOAT.0
	float                            MediumToLargeStrengthTransitionStart; // type:FLOAT.0
	float                            MediumToLargeStrengthTransitionEnd; // type:FLOAT.0
};

struct _0x63B7EC87
{
	float                            _0xC5CA14C0;                     // type:FLOAT.0
	float                            _0x86F01250;                     // type:FLOAT.0
	float                            _0x13472562;                     // type:FLOAT.0
	float                            _0x08327988;                     // type:FLOAT.0
	float                            _0xB8CD814A;                     // type:FLOAT.0
	float                            _0x14BC0B4E;                     // type:FLOAT.0
	float                            _0x5F07D991;                     // type:FLOAT.0
	float                            _0xE02A5A8A;                     // type:FLOAT.0
	float                            _0x5C381C0E;                     // type:FLOAT.0
	float                            _0x934F8192;                     // type:FLOAT.0
	float                            _0x449DE6FC;                     // type:FLOAT.0
	float                            _0xD60CA7EB;                     // type:FLOAT.0
	float                            _0xE990E652;                     // type:FLOAT.0
	float                            _0xDF210429;                     // type:FLOAT.0
	float                            _0x48E7B132;                     // type:FLOAT.0
	float                            _0x34502CF1;                     // type:FLOAT.0
	float                            _0x909001DD;                     // type:FLOAT.0
	float                            _0x6F15517F;                     // type:FLOAT.0
	float                            _0x0EC662DA;                     // type:FLOAT.0
	bool                             _0xDFCF0F8E;                     // type:BOOL.0
	float                            _0xC080E669;                     // type:FLOAT.0
	float                            _0xE007C1E8;                     // type:FLOAT.0
	bool                             _0x9996D705;                     // type:BOOL.0
	bool                             _0x3600D823;                     // type:BOOL.0
	float                            _0xFC9B68BF;                     // type:FLOAT.0
	float                            _0x7B3E131A;                     // type:FLOAT.0
	float                            _0x1E855B44;                     // type:FLOAT.0
	int                              _0x61679583;                     // type:INT.0
	int                              _0x43959234;                     // type:INT.0
};

struct _0x63B8C81D : _0xA1B9A635
{
};

struct _0x63C9A879
{
	float                            Default;                         // type:FLOAT.0
	float                            LocoTypeChangeDefault;           // type:FLOAT.0
	float                            GunNormalAimToLocoAim;           // type:FLOAT.0
	float                            GunLocoAimToNormalAim;           // type:FLOAT.0
	float                            GunCrouchStandingIntroToAim;     // type:FLOAT.0
	float                            GunCrouchMovingIntroToAim;       // type:FLOAT.0
	float                            GunToCarryAim;                   // type:FLOAT.0
	float                            GunFromCarryAim;                 // type:FLOAT.0
	float                            GunFromCarryAimBlocked;          // type:FLOAT.0
	float                            GunInAirToOutro;                 // type:FLOAT.0
	float                            GunToChamber_AI;                 // type:FLOAT.0
	float                            GunFromChamber_AI;               // type:FLOAT.0
	float                            GunFromChamberOnTransport;       // type:FLOAT.0
	float                            GunInAirToCarryMount;            // type:FLOAT.0
	float                            FishingDefault;                  // type:FLOAT.0
	float                            FishingCastBlendOut;             // type:FLOAT.0
	float                            FireVariationRestart;            // type:FLOAT.0
	float                            BowReleaseEmergencyQuitToAimRelaxed; // type:FLOAT.0
	float                            LassoHorsebackReelPullToAttachedBlendTime; // type:FLOAT.0
	float                            LassoHorsebackAttachedToReelPullBlendTime; // type:FLOAT.0
	float                            LassoHorsebackAttachedTransitionBlendOutTime; // type:FLOAT.0
	float                            MPJugOutroToFireBlendTime;       // type:FLOAT.0
	float                            ThrownDrawnToReleaseBlendTime;   // type:FLOAT.0
	float                            LassoThrowBlendOut;              // type:FLOAT.0
	float                            RideAndFireTransition;           // type:FLOAT.0
	float                            AiTransportAnyToAim;             // type:FLOAT.0
	float                            FullBodyAimIntroToAim;           // type:FLOAT.0
	float                            OnTransportTransitionFrontToBackAim; // type:FLOAT.0
	float                            OnTransportTransitionBackToFrontAim; // type:FLOAT.0
	float                            GunToOnFootFireVariation;        // type:FLOAT.0
	float                            AimReactTurnBlendIn;             // type:FLOAT.0
	float                            AimReactTurnBlendOut;            // type:FLOAT.0
	float                            AimToTransitionInVehicle_AI;     // type:FLOAT.0
	float                            DriveByRearFlipToAimBlendDuration; // type:FLOAT.0
	float                            BolasSwingToMovingRelease;       // type:FLOAT.0
};

struct _0x63DBA26C : CTuning
{
	int                              _0x8A4EC9D8;                     // type:INT.0
};

struct _0x6414F056 : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0x6416B46C : CTuning
{
	float                            _0x4948D7E0;                     // type:FLOAT.0
	float                            _0xFC77021D;                     // type:FLOAT.0
	float                            _0x0ED8D454;                     // type:FLOAT.0
	float                            _0xEBBD34F5;                     // type:FLOAT.0
	float                            _0x2C38DF3F;                     // type:FLOAT.0
	float                            _0xDF06FB73;                     // type:FLOAT.0
	float                            _0x4244F163;                     // type:FLOAT.0
	float                            _0x0EF13F6E;                     // type:FLOAT.0
	float                            _0x1DD1B917;                     // type:FLOAT.0
	float                            _0xE6FA27B5;                     // type:FLOAT.0
	float                            _0xEDB8BB82;                     // type:FLOAT.0
};

struct _0x642B20A3 : _0xAB76836B
{
	struct _0x69031EA5               Options;                         // type:STRUCT.STRUCTURE
};

struct _0x6449822C : _0x476BC347
{
	enum rage__InputType             inputType;                       // type:ENUM.32BIT
};

struct _0x64606A45 : _0x41C88192
{
	bool                             Value;                           // type:BOOL.0
};

struct _0x64610611 : camCinematicContextMetadata
{
};

struct _0x64692028
{
	string                           ptFxAssetName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6485ADCC
{
	string                           _0x8F3CDACB;                     // type:STRING.ATNSHASHSTRING
};

struct _0x649820E2
{
	vec3V                            Pos;                             // type:VEC3V.0
	float                            Radius;                          // type:FLOAT.0
	int                              Occupancy;                       // type:INT.0
	bool                             SkipFacing;                      // type:BOOL.0
	array<vec3V>                     GeneratedPoints;                 // type:ARRAY.ATARRAY
};

struct _0x64A62286
{
	vec3V                            Min;                             // type:VEC3V.0
	vec3V                            Mid;                             // type:VEC3V.0
	vec3V                            Max;                             // type:VEC3V.0
	float                            Key;                             // type:FLOAT.0
	uchar                            Set;                             // type:UCHAR.0
};

struct _0x64AB9571 : _0x869CC3B6
{
};

struct _0x64AE3E49 : _0xAB76836B
{
};

struct _0x64BAB889 : _0x9920C241
{
};

struct _0x64BDB519
{
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x19116B23;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xDEC69AF1;                     // type:FLOAT.0
	float                            _0xB15FE062;                     // type:FLOAT.0
	float                            _0xA5188493;                     // type:FLOAT.0
	struct _0x9C07C204               _0xED2F5BD7;                     // type:STRUCT.STRUCTURE
	uchar                            _0x2AC11B87;                     // type:UCHAR.0
	bool                             _0xD2C9ED8A;                     // type:BOOL.0
	float                            _0xCD746100;                     // type:FLOAT.0
	float                            _0xBFD14130;                     // type:FLOAT.0
	float                            _0xC9D57669;                     // type:FLOAT.0
	float                            _0x16CD3256;                     // type:FLOAT.0
	float                            _0xF75CCB07;                     // type:FLOAT.0
	float                            _0x8610B9C2;                     // type:FLOAT.0
	float                            _0xE200FF83;                     // type:FLOAT.0
	float                            _0x0983BDEE;                     // type:FLOAT.0
};

struct _0x64C21672
{
	string                           PtFxName;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             IsAttached;                      // type:BOOL.0
	string                           BoneName;                        // type:STRING.ATHASHVALUE16U
	vec3V                            OffsetPos;                       // type:VEC3V.0
	vec3V                            _0x6DCF7AB7;                     // type:VEC3V.0
	bitset<enum _0xDAA76215>         Flags;                           // type:BITSET.32BIT
};

struct _0x64C795D1
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x61FAC7E7>         BitFlags;                        // type:BITSET.64BIT
	float                            fPathFindRadius;                 // type:FLOAT.0
	float                            fLegendaryPathFindRadius;        // type:FLOAT.0
	float                            MaxClimbHeight;                  // type:FLOAT.0
	float                            MaxDropHeight;                   // type:FLOAT.0
	float                            IgnoreObjectMass;                // type:FLOAT.0
	float                            fClimbCostModifier;              // type:FLOAT.0
	float                            fUseLadderCostModifier;          // type:FLOAT.0
	float                            fAvoidWaterCostModifier;         // type:FLOAT.0
	float                            fAvoidWaterCostModifierFlee;     // type:FLOAT.0
	float                            fAvoidWaterCostModifier_Depth0;  // type:FLOAT.0
	float                            fAvoidWaterCostModifier_Depth1;  // type:FLOAT.0
	float                            fAvoidWaterCostModifier_Depth2;  // type:FLOAT.0
	float                            fAvoidWaterCostModifier_Depth3;  // type:FLOAT.0
	float                            fAvoidWaterCostModifier_Depth4;  // type:FLOAT.0
	float                            fStayInWaterCostModifier;        // type:FLOAT.0
	float                            fAvoidDeepSnowCostModifier;      // type:FLOAT.0
	float                            fAvoidMudCostModifier;           // type:FLOAT.0
	float                            fAvoidFoliageCostModifier;       // type:FLOAT.0
	float                            GotoTargetLookAheadDistance;     // type:FLOAT.0
	float                            GotoTargetInitialLookAheadDistance; // type:FLOAT.0
	float                            GotoTargetLookAheadDistanceIncrement; // type:FLOAT.0
	float                            GotoTargetLookAheadDistanceDecrement; // type:FLOAT.0
	float                            GotoTargetUseDynamicObjectLookAheadThreshold; // type:FLOAT.0
	float                            DefaultMoveFollowLeaderRunDistance; // type:FLOAT.0
	float                            DefaultMoveFollowLeaderSprintDistance; // type:FLOAT.0
	float                            DesiredMbrLowerBoundInMoveFollowLeader; // type:FLOAT.0
	float                            FollowLeaderSeekEntityWalkSpeedRange; // type:FLOAT.0
	float                            FollowLeaderSeekEntityRunSpeedRange; // type:FLOAT.0
	float                            DefaultMaxSlopeNavigable;        // type:FLOAT.0
	float                            DefaultMaxDesiredUphillSlope;    // type:FLOAT.0
	float                            DefaultMaxDesiredDownhillSlope;  // type:FLOAT.0
	float                            StillLeaderSpacingEpsilon;       // type:FLOAT.0
	float                            MoveFollowLeaderHeadingTolerance; // type:FLOAT.0
	float                            FollowLeaderLookaheadTime;       // type:FLOAT.0
	float                            FollowLeaderMinimumLookaheadDistance; // type:FLOAT.0
	float                            FollowLeaderMaximumLookaheadDistance; // type:FLOAT.0
	float                            NonGroupMinDistToAdjustSpeed;    // type:FLOAT.0
	float                            NonGroupMaxDistToAdjustSpeed;    // type:FLOAT.0
	int                              iMinWaterDepthBand;              // type:INT.0
	bool                             CanSprintInFollowLeaderSeekEntity; // type:BOOL.0
	bool                             UseAdaptiveMbrInMoveFollowLeader; // type:BOOL.0
	bool                             AlwaysKeepMovingWhilstFollowingLeaderPath; // type:BOOL.0
	bool                             IgnoreMovingTowardsLeaderTargetRadiusExpansion; // type:BOOL.0
	bool                             UseSimpleFollowMBRCalculation;   // type:BOOL.0
	bool                             PreventFollowingIntoInteriors;   // type:BOOL.0
	float                            OuterTurningCircleFleeUsage;     // type:FLOAT.0
	float                            DistanceToSlowForCornersScale;   // type:FLOAT.0
};

struct _0x64C9E73E
{
	float                            fDistAboveHandhold;              // type:FLOAT.0
	float                            fLength;                         // type:FLOAT.0
	float                            fLengthVehicle;                  // type:FLOAT.0
	float                            fRadius;                         // type:FLOAT.0
	float                            fMaxAdjustDistance;              // type:FLOAT.0
};

struct _0x64D97283 : _0xA6283223
{
	array<struct _0xCCE27413>        _0x46EC3400;                     // type:ARRAY.ATARRAY
	struct _0x8D5E1429               _0x1E1F29FE;                     // type:STRUCT.STRUCTURE
	bitset<enum _0x638B0DDB>         _0x0DBBBCF1;                     // type:BITSET.32BIT
	string                           outfit;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x445A1C4C;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xCF46BEC6               _0xFF8220B9;                     // type:STRUCT.POINTER
};

struct _0x64E8AC67 : _0x45E78B4D
{
	struct _0xEED7E46F                  events;                          // type:STRUCT.STRUCTURE
	map<string, struct _0xAD5DFE3C>     _0xEFEC097E;                     // type:MAP.ATBINARYMAP
	struct _0x813453EE                  _0x0696FE9E;                     // type:STRUCT.POINTER
};

struct _0x64F382F8
{
	float                            _0x65097410;                     // type:FLOAT.0
	float                            Normal;                          // type:FLOAT.0
	float                            Overpowered;                     // type:FLOAT.0
};

struct _0x64F8ED5E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	int                              RopeType;                        // type:INT.0
	float                            _0xB7D5AF19;                     // type:FLOAT.0
	float                            _0x5A349DFA;                     // type:FLOAT.0
	float                            _0xA3ADC59D;                     // type:FLOAT.0
	float                            _0xCCF961D2;                     // type:FLOAT.0
	float                            _0x47DC1763;                     // type:FLOAT.0
	float                            _0x382745F9;                     // type:FLOAT.0
	float                            _0x7329438D;                     // type:FLOAT.0
	float                            _0xB5DBF0FA;                     // type:FLOAT.0
	float                            _0xF2DB30CA;                     // type:FLOAT.0
	float                            _0x34544D42;                     // type:FLOAT.0
	float                            _0x7C38CA33;                     // type:FLOAT.0
	int                              _0x9E081EF3;                     // type:INT.0
	float                            _0xA5CFC81C;                     // type:FLOAT.0
	float                            _0x93937690;                     // type:FLOAT.0
	float                            _0xC20840CC;                     // type:FLOAT.0
	float                            _0x8741388C;                     // type:FLOAT.0
	float                            _0x3C7D35E7;                     // type:FLOAT.0
	float                            _0x8A1F19A1;                     // type:FLOAT.0
	float                            _0x031FA4BF;                     // type:FLOAT.0
	float                            _0xF15DDDC8;                     // type:FLOAT.0
	float                            _0x78C5B521;                     // type:FLOAT.0
	vec3V                            _0x1AE949D6;                     // type:VEC3V.0
	vec3V                            _0x2DD4EFAD;                     // type:VEC3V.0
	enum eAnimBoneTag                _0xBE2A289B;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0xB0388CB8;                     // type:ENUM.32BIT
	vec3V                            _0x40663A3B;                     // type:VEC3V.0
	vec3V                            _0x8F10D78F;                     // type:VEC3V.0
	vec3V                            _0xDB9AC564;                     // type:VEC3V.0
	vec3V                            _0x3702DFD1;                     // type:VEC3V.0
	enum eAnimBoneTag                _0x1F538322;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0xE3BB1144;                     // type:ENUM.32BIT
	vec3V                            _0x6664E8E6;                     // type:VEC3V.0
	vec3V                            _0x5481C91B;                     // type:VEC3V.0
	enum eAnimBoneTag                _0xCD8ED742;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x936D2552;                     // type:ENUM.32BIT
	float                            _0x1F39B402;                     // type:FLOAT.0
	float                            _0x71396D98;                     // type:FLOAT.0
	float                            _0xD8CCAE62;                     // type:FLOAT.0
	float                            _0xC33E7E07;                     // type:FLOAT.0
	float                            _0x46A66B38;                     // type:FLOAT.0
	float                            _0xED3A3983;                     // type:FLOAT.0
	float                            _0x96400C30;                     // type:FLOAT.0
	float                            _0xAEF2AD81;                     // type:FLOAT.0
	float                            _0xA245992D;                     // type:FLOAT.0
	float                            _0xF4718FBE;                     // type:FLOAT.0
	int                              _0x6FB993D5;                     // type:INT.0
	int                              _0xD5229A3F;                     // type:INT.0
	float                            _0xBB687C44;                     // type:FLOAT.0
	bool                             _0x94372B34;                     // type:BOOL.0
};

struct _0x651ED589 : _0x8A0DC979
{
	int                              Duration;                        // type:INT.0
	string                           Color;                           // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xD1A27966;                     // type:BOOL.0
	bool                             _0x9E83CB99;                     // type:BOOL.0
};

struct _0x6537F8BF
{
	array<struct _0x749C9159>        Poses;                           // type:ARRAY.ATARRAY
	string                           ClothName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6548A6CA
{
	float                            Magnitude;                       // type:FLOAT.0
	float                            MagnitudeNetModifier;            // type:FLOAT.0
	float                            SpeedModifier;                   // type:FLOAT.0
	float                            MaxDeflectionAngle;              // type:FLOAT.0
	array<float>                     SpineStiffness;                  // type:ARRAY.ATARRAY
	array<float>                     NeckStiffness;                   // type:ARRAY.ATARRAY
	float                            HeadStiffness;                   // type:FLOAT.0
	float                            PelvisStiffness;                 // type:FLOAT.0
	float                            RootStiffness;                   // type:FLOAT.0
	float                            RootLimit;                       // type:FLOAT.0
	float                            Duration;                        // type:FLOAT.0
};

struct _0x654A72FA
{
	string                           id;                              // type:STRING.ATNSHASHSTRING
};

struct _0x65514AC8
{
	vec3V                            Position;                        // type:VEC3V.0
	string                           _0x9B1D60AB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x655D5A02
{
	vec3                             _0x170516C5;                     // type:VECTOR3.0
	vec3                             _0xC3402E0E;                     // type:VECTOR3.0
	float                            Fov;                             // type:FLOAT.0
	uint                             _0x2ED1BAD1;                     // type:UINT.0
	uint                             _0x545D3F89;                     // type:UINT.0
};

struct _0x65727CE7
{
	string                           Clipset;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0x24DAA64F;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6581D33F : camThirdPersonCameraMetadata
{
};

struct _0x658572A5
{
	struct _0x267067D9               WalkAlignSet;                    // type:STRUCT.STRUCTURE
	struct _0x267067D9               RunAlignSet;                     // type:STRUCT.STRUCTURE
	struct _0x89F201F6               WalkActionSet;                   // type:STRUCT.STRUCTURE
	struct _0x89F201F6               RunActionSet;                    // type:STRUCT.STRUCTURE
};

struct _0x6596653F
{
	bool                             Enabled;                         // type:BOOL.0
	float                            _0x2B370670;                     // type:FLOAT.0
	uint                             _0x86297031;                     // type:UINT.0
	float                            _0x6AFC69C7;                     // type:FLOAT.0
	float                            _0x748CAA36;                     // type:FLOAT.0
};

struct _0x65A3A633 : UIBehavior
{
	struct _0x4A7AD954               _0x4F7BF5F8;                     // type:STRUCT.STRUCTURE
	bool                             Horizontal;                      // type:BOOL.0
	float                            Speed;                           // type:FLOAT.0
	float                            Position;                        // type:FLOAT.0
	float                            Size;                            // type:FLOAT.0
	bool                             Visible;                         // type:BOOL.0
};

struct _0x65ADEB70 : CTuning
{
	struct _0x42841966               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x65B4A7AC : UIBehavior
{
	struct _0x4A7AD954               Container;                       // type:STRUCT.STRUCTURE
	float                            _0xC7EFD9B7;                     // type:FLOAT.0
	float                            _0xB9EA3DAC;                     // type:FLOAT.0
	float                            _0x9F43C1B3;                     // type:FLOAT.0
	float                            _0x62FD80A0;                     // type:FLOAT.0
	float                            _0x96F300C6;                     // type:FLOAT.0
	float                            _0x9BE97DB3;                     // type:FLOAT.0
	float                            Speed;                           // type:FLOAT.0
};

struct _0x65C80F67
{
	string                           driverName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           npcName;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x65D10030 : _0x8A0DC979
{
};

struct _0x65DE4D97
{
	int                              ExampleIndex;                    // type:INT.0
	string                           Group;                           // type:STRING.ATSTRING
	string                           Reason;                          // type:STRING.ATSTRING
	int                              OriginalExampleIndex;            // type:INT.0
	string                           Name;                            // type:STRING.ATSTRING
};

struct _0x65DF5F57
{
	enum _0x726F8241                 Mode;                            // type:ENUM.32BIT
	float                            FullAngle;                       // type:FLOAT.0
};

struct _0x65E725C0
{
};

struct _0x65EB78AA
{
	map<string, array<string>>       _0x09B41268;                     // type:MAP.ATMAP
};

struct _0x660AC55B : _0xDC10377E
{
	vec3                             _0xD0A10D24;                     // type:VECTOR3.0
	int                              AttachBoneTag;                   // type:INT.0
	float                            RelativeAttachPositionSmoothRate; // type:FLOAT.0
	float                            MinPitch;                        // type:FLOAT.0
	bool                             ShouldApplyAttachOffsetRelativeToCamera; // type:BOOL.0
	bool                             ShouldTorsoIkLimitsOverrideOrbitPitchLimits; // type:BOOL.0
	bool                             _0x42C80F74;                     // type:BOOL.0
};

struct _0x6640F4F1
{
	float                            MaxDistanceForSpawnTurn;         // type:FLOAT.0
	float                            DurationOfTurns;                 // type:FLOAT.0
	float                            TimeBetweenTurns;                // type:FLOAT.0
	float                            MaxTimeDeadBeforeIncidentEnds;   // type:FLOAT.0
};

struct _0x66486C44
{
	string                           Cloth;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x665231BA : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x655601C3                 MinSeverity;                     // type:ENUM.32BIT
	enum _0x655601C3                 MaxSeverity;                     // type:ENUM.32BIT
	bool                             _0xA69D6DDB;                     // type:BOOL.0
	bool                             _0x11A1C148;                     // type:BOOL.0
};

struct _0x665A4F9D
{
	string                           _0xAE0DCC01;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x3B1F0870                 vfxGroup;                        // type:ENUM.32BIT
	bool                             _0xDD376D03;                     // type:BOOL.0
	float                            _0x77EBE9F7;                     // type:FLOAT.0
	float                            _0x885AE60E;                     // type:FLOAT.0
	string                           _0xBF340451;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4D299F6A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x18B38B3B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3D9EAC7F;                     // type:FLOAT.0
	string                           _0xA0A8BE77;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA2560DAC;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x665E3290
{
	string                           Parent;                          // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x0C0AA6CC>         Flags;                           // type:BITSET.32BIT
	float                            StaringTriggerMinDuration;       // type:FLOAT.0
	float                            StaringTriggerMaxDuration;       // type:FLOAT.0
	float                            StaringTriggerMinDurationAtLoiterDistance; // type:FLOAT.0
	float                            StaringTriggerMaxDurationAtLoiterDistance; // type:FLOAT.0
	array<struct _0x5C49D27C>        Triggers;                        // type:ARRAY.ATARRAY
};

struct _0x666C440B : CBaseSaveObject
{
	bitset<enum _0x00000000>         _0xC950247A;                     // type:BITSET.32BIT
};

struct _0x6676112C : CCollectableUniqueFindAndTurnInItem
{
};

struct _0x66838F63
{
	enum eVehicleModType             ModType;                         // type:ENUM.32BIT
	uchar                            ModIndex;                        // type:UCHAR.0
};

struct _0x66911D18
{
	array<struct _0x726E5B7B>        _0xC2AD14A3;                     // type:ARRAY.ATARRAY
	array<struct _0xD3333F6E>        _0x4A5787C6;                     // type:ARRAY.ATARRAY
	array<struct _0xD9BE5667>        _0xDA38E537;                     // type:ARRAY.ATARRAY
};

struct _0x66A383CA
{
	float                            Normal;                          // type:FLOAT.0
	float                            Sniper;                          // type:FLOAT.0
	float                            Surprised;                       // type:FLOAT.0
};

struct _0x66ADF330 : _0x7EAFD12D
{
	bitset<enum eRadarMode>          AllowedMapModes;                 // type:BITSET.8BIT
	float                            HidingDistance;                  // type:FLOAT.0
};

struct _0x66C95AB8
{
	bool                             _0xD4D3E191;                     // type:BOOL.0
	bool                             _0x645BAE7F;                     // type:BOOL.0
	bool                             _0x9D08E3CC;                     // type:BOOL.0
	string                           handle;                          // type:STRING.ATNONFINALHASHSTRING
	string                           animationName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x66CF30E9 : CTuning
{
	uint                             _0x616B36ED;                     // type:UINT.0
	uint                             _0x3D975672;                     // type:UINT.0
	float                            _0x488853BB;                     // type:FLOAT.0
	float                            _0xD0741D62;                     // type:FLOAT.0
};

struct _0x66EFD902
{
	float                            _0x0C530BCE;                     // type:FLOAT.0
};

struct _0x66F468E2
{
	string                           HrsTypeName;                     // type:STRING.ATNONFINALHASHSTRING
	float                            BlockerBoxLength;                // type:FLOAT.0
	float                            BlockerBoxWidth;                 // type:FLOAT.0
	float                            BlockerBoxHeight;                // type:FLOAT.0
	float                            BlockerBoxOffsetX;               // type:FLOAT.0
	float                            BlockerBoxOffsetY;               // type:FLOAT.0
	float                            BlockerBoxOffsetZ;               // type:FLOAT.0
};

struct _0x672FA8CF
{
	string                           DofName;                         // type:STRING.ATSTRING
	float                            MinInitValue;                    // type:FLOAT.0
	float                            MaxInitValue;                    // type:FLOAT.0
};

struct _0x673DCB64 : _0xEB587558
{
	struct _0xEB587558               Node;                            // type:STRUCT.POINTER
};

struct _0x6746A597 : _0xC48C1FCA
{
	enum _0xA7636D84                 _0x8C324F83;                     // type:ENUM.32BIT
	bool                             _0xFD365EC5;                     // type:BOOL.0
	string                           _0xF3B44717;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x674CEE86 : _0xD8839517
{
	uint                             virtualChildCount;               // type:UINT.0
};

struct _0x6750A20B
{
	float                            MinDistance;                     // type:FLOAT.0
	float                            MBR;                             // type:FLOAT.0
};

struct _0x677A48FC
{
};

struct _0x677CED8C : _0x14229900
{
};

struct _0x6794ECBE
{
	float                            MinRate;                         // type:FLOAT.0
	float                            MaxRate;                         // type:FLOAT.0
	float                            InterpRateUpSpeed;               // type:FLOAT.0
	float                            InterpRateDownSpeed;             // type:FLOAT.0
	float                            InterpRateDownBadSpeed;          // type:FLOAT.0
	float                            BlendWeightInterpUpSpeed;        // type:FLOAT.0
	float                            BlendWeightInterpDownSpeed;      // type:FLOAT.0
	float                            BlendWeightInterpDownBadSpeed;   // type:FLOAT.0
	float                            InitialBlendWeight;              // type:FLOAT.0
	float                            InitialRate;                     // type:FLOAT.0
	float                            MaxRumbleIntensityGood;          // type:FLOAT.0
	float                            MaxRumbleIntensityBad;           // type:FLOAT.0
	float                            RumbleIntensityNeutral;          // type:FLOAT.0
};

struct _0x67AC5BE4 : _0x499E1BE4
{
	bool                             _0xE6966D01;                     // type:BOOL.0
	bool                             _0xDF5077D4;                     // type:BOOL.0
};

struct _0x67B9B7F2 : _0x5D496F4E
{
	enum _0xBDE72CD8                 Operation;                       // type:ENUM.32BIT
	int                              _0xF5264D00;                     // type:INT.0
};

struct _0x67C585B9 : _0x8462386D
{
	array<struct _0x51B38E82>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0x67C85F24 : _0x476BC347
{
	enum rage__InputGroup            inputGroup;                      // type:ENUM.32BIT
	enum rage__InputType             _0x2CAF25E4;                     // type:ENUM.32BIT
	enum rage__InputType             _0xC28807F7;                     // type:ENUM.32BIT
	bool                             _0xFD028CB6;                     // type:BOOL.0
};

struct _0x67D4591D
{
	float                            MaxDistanceFromCriminal;         // type:FLOAT.0
	float                            MaxDistanceFromVictim;           // type:FLOAT.0
};

struct _0x67F53D6D : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	bool                             minimum;                         // type:BOOL.0
	bool                             maximum;                         // type:BOOL.0
	bool                             default;                         // type:BOOL.0
};

struct _0x680E643C
{
	float                            _0x02CE8712;                     // type:FLOAT.0
	float                            _0x50DFFC78;                     // type:FLOAT.0
	float                            _0xEE86634A;                     // type:FLOAT.0
	bool                             Enabled;                         // type:BOOL.0
	bool                             DebugPrint;                      // type:BOOL.0
};

struct _0x6815012B
{
	float                            Intensity;                       // type:FLOAT.0
	bool                             _0x2642F925;                     // type:BOOL.0
	int                              _0x339E2CC0;                     // type:INT.0
	float                            _0x96B0FC56;                     // type:FLOAT.0
	float                            _0x222315E8;                     // type:FLOAT.0
	enum _0x4EEED54E                 _0xA68C6C6B;                     // type:ENUM.32BIT
	enum _0x4EEED54E                 _0xB4F8C91F;                     // type:ENUM.32BIT
};

struct _0x681D6FA3
{
	struct _0x88E4014F               _0xBEE89922;                     // type:STRUCT.STRUCTURE
	struct _0x748CAB7E               _0xB8BB8247;                     // type:STRUCT.STRUCTURE
	float                            _0xADB1065B;                     // type:FLOAT.0
	float                            _0x577154F0;                     // type:FLOAT.2
	float                            _0x1BA53F63;                     // type:FLOAT.2
	float                            _0x3F1B13CB;                     // type:FLOAT.2
	float                            _0x76D28ACC;                     // type:FLOAT.2
	float                            _0xB35FDCF8;                     // type:FLOAT.2
};

struct _0x683B6CF6 : Simple
{
};

struct _0x6853E04A : CTuning
{
};

struct _0x686C9D78
{
	vec3V                            _0x004FAAEE;                     // type:VEC3V.0
	vec3V                            _0x0B8800C0;                     // type:VEC3V.0
	vec3V                            _0xD73F48DB;                     // type:VEC3V.0
	vec3V                            _0xE2EDD831;                     // type:VEC3V.0
	vec3V                            _0x379D0A05;                     // type:VEC3V.0
	vec3V                            _0x651E03C5;                     // type:VEC3V.0
	int                              _0x3D18DE07;                     // type:INT.0
	int                              _0x9542B0C2;                     // type:INT.0
	enum _0xE40D2E91                 LinkType;                        // type:ENUM.32BIT
	bitset<enum _0x42338022>         Flags;                           // type:BITSET.16BIT
};

struct _0x687AF40D : _0xAA28D7FA
{
	float                            _0x45DAF760;                     // type:FLOAT.0
	float                            _0x01BAF122;                     // type:FLOAT.0
	string                           _0xE68B06B4;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x687C2226
{
	float                            fTestRadius;                     // type:FLOAT.0
	float                            fHeightTolerance;                // type:FLOAT.0
	float                            fMinDot;                         // type:FLOAT.0
	float                            fStartDistance;                  // type:FLOAT.0
	float                            fEndDistance;                    // type:FLOAT.0
};

struct _0x687D9319 : _0x74EB5104
{
};

struct _0x68825F77 : _0x906508CE
{
	bool                             _0xA7A1E146;                     // type:BOOL.0
	bool                             value;                           // type:BOOL.0
};

struct _0x68862BF0 : CAICondition
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	vec3                             Direction;                       // type:VECTOR3.0
	float                            Threshold;                       // type:FLOAT.0
	bool                             FlattenZ;                        // type:BOOL.0
};

struct _0x688710E1
{
	struct _0xAD66FEC1               _0xCA7142E5;                     // type:STRUCT.STRUCTURE
	struct _0xAD66FEC1               _0x336D1B1E;                     // type:STRUCT.STRUCTURE
};

struct _0x688F83C2
{
	array<struct _0x150FE51F, 3>     Offsets;                         // type:ARRAY.ATFIXEDARRAY
	vec2                             ExtraRelativePitch;              // type:VECTOR2.0
	vec2                             AngleToBlendInExtraPitch;        // type:VECTOR2.0
};

struct _0x689AFA2B
{
	string                           albedo;                          // type:STRING.ATNONFINALHASHSTRING
	string                           normal;                          // type:STRING.ATNONFINALHASHSTRING
	string                           material;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x689E725C : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
	uint                             Min;                             // type:UINT.0
	uint                             Max;                             // type:UINT.0
};

struct _0x689FBCE1 : CAICondition
{
};

struct _0x68BFBC75
{
};

struct _0x68EB7CE9
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x0931E4AB;                     // type:FLOAT.0
	float                            _0xCF4CD5CE;                     // type:FLOAT.0
	float                            _0xEABB707E;                     // type:FLOAT.0
	float                            _0x8856E50A;                     // type:FLOAT.0
	float                            _0x3F7CE1C0;                     // type:FLOAT.0
	float                            _0xB1AA5AF7;                     // type:FLOAT.0
	float                            _0x83F25487;                     // type:FLOAT.0
	float                            _0x0457B25A;                     // type:FLOAT.0
	struct _0xCEE583D4               _0x1AE63ECC;                     // type:STRUCT.STRUCTURE
	struct _0xCEE583D4               _0x494CD18B;                     // type:STRUCT.STRUCTURE
	struct _0xCEE583D4               _0x5A9EB2EA;                     // type:STRUCT.STRUCTURE
};

struct _0x69031EA5
{
	enum _0xB4881CB0                 Rounding;                        // type:ENUM.32BIT
	enum _0x98F11E89                 Precision;                       // type:ENUM.32BIT
	enum _0x127EF07E                 Modulo;                          // type:ENUM.32BIT
	int                              PrecisionValue;                  // type:INT.0
	int                              ModuloValue;                     // type:INT.0
};

struct _0x6919C4F3 : _0xB74AC865
{
};

struct _0x691F01D2
{
	string                           Name;                            // type:STRING.ATFINALHASHSTRING
	string                           ModelIdName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ModelSetName;                    // type:STRING.ATNONFINALHASHSTRING
	string                           OutfitName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           ScheduleName;                    // type:STRING.ATFINALHASHSTRING
	string                           VehicleName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           VehicleSetName;                  // type:STRING.ATNONFINALHASHSTRING
	string                           HorseName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           HorseSetName;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ProfessionName;                  // type:STRING.ATNONFINALHASHSTRING
	string                           CharacterName;                   // type:STRING.ATNONFINALHASHSTRING
	bool                             NameHasToBeDiscovered;           // type:BOOL.0
	string                           AIPersonName;                    // type:STRING.ATNONFINALHASHSTRING
	string                           PersonalityNameOverride;         // type:STRING.ATNONFINALHASHSTRING
	bool                             ShouldDefendOwnedVolumes;        // type:BOOL.0
	int                              CreateMin;                       // type:INT.0
	int                              CreateMax;                       // type:INT.0
	string                           CreateGroup;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             AllowPersistentCorpse;           // type:BOOL.0
	bool                             TriggersKillCam;                 // type:BOOL.0
	bool                             RejectsILORideRequest;           // type:BOOL.0
	string                           RevivedVfxCollectionName;        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x691F06F0
{
	uint                             Key;                             // type:UINT.0
	uint                             Subject;                         // type:UINT.0
	uint                             Object;                          // type:UINT.0
	uint                             _0xB1FB9FBC;                     // type:UINT.0
	int                              _0x63150C9F;                     // type:INT.0
	ushort                           Location;                        // type:USHORT.0
	uchar                            Verb;                            // type:UCHAR.0
	char                             Priority;                        // type:CHAR.0
};

struct _0x692F3DE4 : StatsGoalScoreSourceGroupBase
{
	enum eCompendiumCategories           category;                        // type:ENUM.32BIT
	enum eCompendiumGoalUpdateReason     reason;                          // type:ENUM.32BIT
};

struct _0x69311678 : _0x1054F746
{
};

struct _0x693AAFDE
{
	uint                             dataVersion;                     // type:UINT.0
	struct _0x6A473627               _0xEEE36950;                     // type:STRUCT.STRUCTURE
};

struct _0x695CEF17 : _0x3AB6499E
{
	int                              BoneTag;                         // type:INT.0
	struct _0x799E1061               _0xC9959A08;                     // type:STRUCT.STRUCTURE
	struct _0xEF722FDB               _0x7F3373CB;                     // type:STRUCT.STRUCTURE
	struct _0xECBD24CE               _0xABEE9701;                     // type:STRUCT.STRUCTURE
	struct _0xB8E0E271               _0x0F536112;                     // type:STRUCT.STRUCTURE
	float                            _0xE06535BC;                     // type:FLOAT.0
	vec2                             _0x5EFCA2A3;                     // type:VECTOR2.0
	vec2                             _0x3F3BDD54;                     // type:VECTOR2.0
	vec2                             _0xA5B3852B;                     // type:VECTOR2.0
	vec2                             _0x82807D7C;                     // type:VECTOR2.0
	float                            _0x29C37600;                     // type:FLOAT.0
	float                            _0x4B108D9B;                     // type:FLOAT.0
	float                            _0x8E918C55;                     // type:FLOAT.0
	vec3                             _0xA387C36F;                     // type:VECTOR3.0
	float                            _0x430EA6A1;                     // type:FLOAT.0
	float                            _0x27BB0007;                     // type:FLOAT.0
	float                            _0x603125DA;                     // type:FLOAT.0
	float                            _0xF7798D78;                     // type:FLOAT.0
	float                            _0x9185A553;                     // type:FLOAT.0
	float                            _0xDC03A831;                     // type:FLOAT.0
	float                            _0x4C01645C;                     // type:FLOAT.0
};

struct _0x696B3585
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	bool                             OverrideInverseMassScales;       // type:BOOL.0
	struct _0x4B895669               InverseMassScales;               // type:STRUCT.STRUCTURE
	bool                             OverrideReactionType;            // type:BOOL.0
	bool                             ForceUnderVehicle;               // type:BOOL.0
	bool                             ForceOverVehicle;                // type:BOOL.0
	float                            VehicleCentreZOffset;            // type:FLOAT.0
	bool                             OverrideRootLiftForce;           // type:BOOL.0
	struct _0xE374330A               RootLiftForce;                   // type:STRUCT.STRUCTURE
	bool                             OverrideFlipForce;               // type:BOOL.0
	struct _0xE374330A               FlipForce;                       // type:STRUCT.STRUCTURE
	bool                             OverrideInitialForce;            // type:BOOL.0
	struct _0xA76D1305               InitialForce;                    // type:STRUCT.STRUCTURE
	bool                             OverrideElasticity;              // type:BOOL.0
	float                            VehicleCollisionElasticityMult;  // type:FLOAT.0
	bool                             OverrideFriction;                // type:BOOL.0
	float                            VehicleCollisionFrictionMult;    // type:FLOAT.0
	struct _0xE374330A               LateralForce;                    // type:STRUCT.STRUCTURE
	bool                             OverrideStuckOnVehicleSets;      // type:BOOL.0
	bool                             AddToBaseStuckOnVehicleSets;     // type:BOOL.0
	struct _0x62504236               StuckOnVehicle;                  // type:STRUCT.STRUCTURE
};

struct _0x6970CC0E
{
	array<struct _0xA41F7A20>        _0x475AB243;                     // type:ARRAY._0x2087BB00
};

struct _0x6985CE56 : _0x3AB6499E
{
	string                           _0x5509140D;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x018D8624, 3>     _0x160BF7E5;                     // type:ARRAY.ATRANGEARRAY
	uint                             _0x76255C66;                     // type:UINT.0
	enum _0xAB9E4997                 _0xC04EA578;                     // type:ENUM.32BIT
};

struct _0x698C7F30
{
	string                           _0x219D0F71;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC3629F99;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x614280FE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x40DA83D9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5C44560D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9EAD0D39;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x699135E0
{
	array<struct _0x541D7EC2>           ItemConditions;                  // type:ARRAY.ATARRAY
	map<string, struct _0xFE408D42>     LootExitByModelAnimInfos;        // type:MAP.ATBINARYMAP
};

struct _0x699161F1 : _0x7EAFD12D
{
	uint                             SpawnInterval;                   // type:UINT.0
	string                           _0x23B6BE84;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6992EBA1
{
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            sizeMin;                         // type:FLOAT.0
	float                            sizeMax;                         // type:FLOAT.0
	float                            _0xBA5D8BA0;                     // type:FLOAT.0
	float                            _0x92CE332A;                     // type:FLOAT.0
	float                            fadeInTime;                      // type:FLOAT.0
	uchar                            colR;                            // type:UCHAR.0
	uchar                            colG;                            // type:UCHAR.0
	uchar                            colB;                            // type:UCHAR.0
	float                            _0xDF068772;                     // type:FLOAT.0
	float                            _0x9C45424E;                     // type:FLOAT.0
	float                            _0x0AA452CC;                     // type:FLOAT.0
	float                            _0x4ACA6A1F;                     // type:FLOAT.0
	float                            _0x4E3E3CEA;                     // type:FLOAT.0
	int                              _0x03A9B77E;                     // type:INT.0
	vec3                             _0xFCC50ACD;                     // type:VECTOR3.0
	float                            _0x44DB5191;                     // type:FLOAT.0
	float                            _0x71620D05;                     // type:FLOAT.0
	float                            _0xB818277C;                     // type:FLOAT.0
};

struct _0x699EAF8E : CTuning
{
	struct _0xF6B42D89               Params;                          // type:STRUCT.STRUCTURE
};

struct _0x69B0C2E7
{
	map<string, struct _0x9FCDC8F0>     _0xCDA42BD1;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x181B464F>     _0xA60AC61A;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x870B4019>     _0xFE6219C2;                     // type:MAP.ATBINARYMAP
};

struct _0x69B2A189
{
	struct _0xBBFBD9AB               Sequence;                        // type:STRUCT.STRUCTURE
};

struct _0x69B819CD
{
	float                            _0x399B5EF5;                     // type:FLOAT.0
	float                            _0x18C74A6F;                     // type:FLOAT.0
	bool                             _0x6A05D793;                     // type:BOOL.0
	float                            _0xB1B4F6C2;                     // type:FLOAT.0
	float                            _0xD20FA10B;                     // type:FLOAT.0
	float                            _0x1ABFB887;                     // type:FLOAT.0
	float                            _0xEE021FC7;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	enum _0x0100F80E                 _0x09C402FF;                     // type:ENUM.32BIT
};

struct _0x69BB53CF : _0x2D57BE23
{
	uint                             EndTime;                         // type:UINT.0
};

struct _0x69BEF590 : CTuning
{
	float                            _0xADA1235E;                     // type:FLOAT.0
	float                            _0xE1E627F8;                     // type:FLOAT.0
};

struct _0x69C0774C : _0x4B47DAA6
{
	struct _0x23DAEDEE               _0x8707AC9C;                     // type:STRUCT.POINTER
};

struct _0x69D4930A : CTuning
{
};

struct _0x69DE6FA8 : _0x592ED613
{
};

struct _0x69EAFE60 : _0x0A510DA9
{
};

struct _0x69F3EEB0
{
	float                            DriveByFrontAndBackAimVelocityAtMinSpeedUp; // type:FLOAT.0
	float                            DriveByFrontAndBackAimVelocityAtMaxSpeedUp; // type:FLOAT.0
	float                            DriveByDefaultAimVelocityAtMinSpeedUp; // type:FLOAT.0
	float                            DriveByDefaultAimVelocityAtMaxSpeedUp; // type:FLOAT.0
	float                            DriveByArmBlendSpeedUp;          // type:FLOAT.0
	float                            DriveByStateSwitchBlendSpeedUp;  // type:FLOAT.0
	float                            DriveByIntroRateSpeedUp;         // type:FLOAT.0
	float                            DriveByTransitionRateSpeedUp;    // type:FLOAT.0
	float                            DriveByFiringRateSpeedUp;        // type:FLOAT.0
};

struct _0x6A008202
{
	enum _0x373B4446                 CursorType;                      // type:ENUM.32BIT
	string                           Path;                            // type:STRING.POINTER
	ushort                           xHotspot;                        // type:USHORT.0
	ushort                           yHotspot;                        // type:USHORT.0
};

struct _0x6A01653E
{
	struct rage__spdAABB             bBox;                            // type:STRUCT.STRUCTURE
};

struct _0x6A0E8255 : _0x31B0F5A3
{
};

struct _0x6A23F0E8
{
	string                           ID;                              // type:STRING.ATNSHASHSTRING
};

struct _0x6A2417B9 : CTuning
{
	float                            _0x5B1DBFF7;                     // type:FLOAT.0
	float                            _0xB1422118;                     // type:FLOAT.0
};

struct _0x6A473627
{
	array<struct _0xC9DFF80F>        _0x8CE7FDEE;                     // type:ARRAY.ATARRAY
	array<struct _0xD140120B>        _0xECB7072B;                     // type:ARRAY.ATARRAY
	array<struct _0x6F5B1994>        _0x23872670;                     // type:ARRAY.ATARRAY
	array<struct _0x4DB6CA74>        _0x599ECD43;                     // type:ARRAY.ATARRAY
	array<struct _0x30BDF895>        _0xE412CA79;                     // type:ARRAY.ATARRAY
	array<struct _0x4ABDB2ED>        _0x2B157D85;                     // type:ARRAY.ATARRAY
	array<struct _0x72D9D374>        _0x6D87975F;                     // type:ARRAY.ATARRAY
};

struct _0x6A6DCBE0 : _0xA0889763
{
	bool                             value;                           // type:BOOL.0
};

struct _0x6A727973 : CTuning
{
	float                            _0x9DC947DE;                     // type:FLOAT.0
	float                            _0xE460E8F1;                     // type:FLOAT.0
	float                            _0xE2525718;                     // type:FLOAT.0
	float                            _0x4A91FC48;                     // type:FLOAT.0
	float                            _0x0742D7F0;                     // type:FLOAT.0
	float                            _0xD13816D4;                     // type:FLOAT.0
	float                            _0xAE9B036A;                     // type:FLOAT.0
	uint                             _0x618325A9;                     // type:UINT.0
};

struct _0x6A749818 : _0x1054F746
{
};

struct _0x6A74D413
{
	uint                             min;                             // type:UINT.0
	uint                             max;                             // type:UINT.0
	uint                             average;                         // type:UINT.0
	float                            std;                             // type:FLOAT.0
};

struct _0x6A7B9953
{
	float                            MinAccelModifier;                // type:FLOAT.0
	float                            MaxAccelModifier;                // type:FLOAT.0
	float                            MinDeccelModifier;               // type:FLOAT.0
	float                            MaxDeccelModifier;               // type:FLOAT.0
	float                            InputMagToIncreaseDeadZoneMin;   // type:FLOAT.0
	float                            InputMagToIncreaseDeadZoneMax;   // type:FLOAT.0
};

struct _0x6A8C6DE0
{
	string                           Path;                            // type:STRING.ATSTRING
	enum _0x2A14A674                 Type;                            // type:ENUM.32BIT
	string                           Condition;                       // type:STRING.ATSTRING
	array<struct _0x010A3A6A>        BackupData;                      // type:ARRAY.ATARRAY
};

struct _0x6AA8D921 : _0x8A0DC979
{
};

struct _0x6AAAEDC1
{
	float                            MaxDistanceFromCriminal;         // type:FLOAT.0
	float                            MaxDistanceFromVictim;           // type:FLOAT.0
	bitset<enum _0xC5A8B07A>         Flags;                           // type:BITSET.8BIT
};

struct _0x6AB32B9C
{
	int                               _0xBC7AD7EC;                     // type:INT.0
	map<enum _0x3B1F0870, string>     _0xDF25CC84;                     // type:MAP.ATBINARYMAP
};

struct _0x6AC22C19 : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct _0x6AC54FDF : _0xE4AECA2C
{
	string                           Data;                            // type:STRING.CONST_STRING
};

struct _0x6ADB4F54
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct _0x77CA3522               Audio;                           // type:STRUCT.STRUCTURE
	string                           ILOPromptName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6B01A3E9 : _0x1054F746
{
};

struct _0x6B1BE4D1
{
	float                            _EnableGlints;                   // type:FLOAT.0
	float                            _Intensity;                      // type:FLOAT.0
	float                            _LocalLightIntensity;            // type:FLOAT.0
	float                            _MovementIntensityMultiplier;    // type:FLOAT.0
	float                            _HotspotsTileAmount;             // type:FLOAT.0
	float                            _HotspotsIntensity;              // type:FLOAT.0
	float                            _HotspotsDist;                   // type:FLOAT.0
	float                            _HotspotsThresholdMin;           // type:FLOAT.0
	float                            _HotspotsThresholdMax;           // type:FLOAT.0
	float                            _HotspotsMaskTileAmount;         // type:FLOAT.0
	float                            _HotspotsMaskShiftAmount;        // type:FLOAT.0
	float                            _HotspotsMaskLevelsMin;          // type:FLOAT.0
	float                            _HotspotsMaskLevelsMax;          // type:FLOAT.0
	float                            _MaskTileAmount;                 // type:FLOAT.0
	float                            _MaskShiftAmount;                // type:FLOAT.0
	float                            _DecreaseWhenPerpindicular;      // type:FLOAT.0
	float                            _ShadowIntensity;                // type:FLOAT.0
	float                            _MaskTodShift;                   // type:FLOAT.0
	array<struct _0xCC5C37CC, 2>     _LayerData;                      // type:ARRAY.ATRANGEARRAY
};

struct _0x6B22BDA5 : CTuning
{
	float                            _0xD57481F0;                     // type:FLOAT.0
	float                            _0xFB432244;                     // type:FLOAT.0
	float                            _0x9A164699;                     // type:FLOAT.0
	float                            _0x33A5DDF2;                     // type:FLOAT.0
	float                            _0x36B2E436;                     // type:FLOAT.0
	float                            _0x0F2D4A69;                     // type:FLOAT.0
	float                            _0x4824C5CE;                     // type:FLOAT.0
	float                            _0x013C943E;                     // type:FLOAT.0
	float                            _0xA1E2816B;                     // type:FLOAT.0
	float                            _0x3D644A6D;                     // type:FLOAT.0
	float                            _0xE695E38F;                     // type:FLOAT.0
	float                            _0x0B0BEFED;                     // type:FLOAT.0
	float                            _0x07E698F4;                     // type:FLOAT.0
	float                            _0x0448AA0A;                     // type:FLOAT.0
	float                            _0x512D412F;                     // type:FLOAT.0
	float                            _0x6D1C989C;                     // type:FLOAT.0
	float                            _0x2C8F4BF7;                     // type:FLOAT.0
	float                            _0x5BFA872E;                     // type:FLOAT.0
	float                            _0x2AAD01B3;                     // type:FLOAT.0
	float                            _0xC3BC2DDA;                     // type:FLOAT.0
	float                            _0x9172B291;                     // type:FLOAT.0
	float                            _0xC37E7EE0;                     // type:FLOAT.0
	float                            _0x6D1A0B96;                     // type:FLOAT.0
	float                            _0xAB7DEF46;                     // type:FLOAT.0
	float                            _0xF0F733CB;                     // type:FLOAT.0
	float                            _0x977F5013;                     // type:FLOAT.0
	float                            _0x656927C4;                     // type:FLOAT.0
	float                            _0x924E3EB5;                     // type:FLOAT.0
	float                            _0x574E3D32;                     // type:FLOAT.0
	float                            _0xF2FBDDA7;                     // type:FLOAT.0
	float                            _0x4EFB40E3;                     // type:FLOAT.0
	float                            _0x0F8B4995;                     // type:FLOAT.0
	float                            _0x034E5D2B;                     // type:FLOAT.0
	float                            _0xE26FCAAB;                     // type:FLOAT.0
	float                            _0x51589DDB;                     // type:FLOAT.0
	float                            _0x81D134A7;                     // type:FLOAT.0
	float                            _0xCDC78CEC;                     // type:FLOAT.0
	float                            _0x02740B37;                     // type:FLOAT.0
	float                            _0xE70355B3;                     // type:FLOAT.0
	float                            _0x2BA153DD;                     // type:FLOAT.0
	float                            _0x5EC015D4;                     // type:FLOAT.0
	float                            _0x062FF3FB;                     // type:FLOAT.0
	float                            _0xE71A221E;                     // type:FLOAT.0
	float                            _0x49AA328D;                     // type:FLOAT.0
	float                            _0x2FB314D4;                     // type:FLOAT.0
	float                            _0x6C64BA0C;                     // type:FLOAT.0
	float                            _0x64997A8E;                     // type:FLOAT.0
	float                            _0xAD7488C8;                     // type:FLOAT.0
	float                            _0x57B95249;                     // type:FLOAT.0
	float                            _0x964826D9;                     // type:FLOAT.0
	float                            _0x6699D594;                     // type:FLOAT.0
	float                            _0x2975100D;                     // type:FLOAT.0
	float                            _0x0B83F0DF;                     // type:FLOAT.0
	float                            _0xE0185965;                     // type:FLOAT.0
	bool                             _0xAF92577F;                     // type:BOOL.0
	bool                             _0x0566C0D6;                     // type:BOOL.0
	bool                             _0x33F79779;                     // type:BOOL.0
};

struct _0x6B233B47 : _0xE12074F9
{
	float                            _0x3059301D;                     // type:FLOAT.0
};

struct _0x6B36EE14
{
	float                            _0x97787014;                     // type:FLOAT.0
	float                            _0x8F6AC3D5;                     // type:FLOAT.0
	float                            _0xC6C9D5F4;                     // type:FLOAT.0
	float                            _0x51B6A9FC;                     // type:FLOAT.0
	float                            _0x1080DEFC;                     // type:FLOAT.0
	float                            _0xB55AA1C3;                     // type:FLOAT.0
	float                            _0x48458E68;                     // type:FLOAT.0
	float                            _0x1334E4F6;                     // type:FLOAT.0
	uint                             _0xA0C424DD;                     // type:UINT.0
	uint                             _0xAC5350BF;                     // type:UINT.0
	uint                             _0x12112B89;                     // type:UINT.0
};

struct _0x6B3BCA29
{
	bool                             ShouldApplyBuoyancy;             // type:BOOL.0
	bool                             ShouldIgnoreBuoyancyStateAndAvoidSurface; // type:BOOL.0
	float                            MinHitNormalDotWorldUpForRivers; // type:FLOAT.0
	float                            WaterHeightSmoothRate;           // type:FLOAT.0
	float                            MinHeightAboveWaterWhenBuoyant;  // type:FLOAT.0
	float                            MinDepthUnderWaterWhenNotBuoyant; // type:FLOAT.0
};

struct _0x6B4F4A44 : _0x8A0DC979
{
	enum _0x3D035416                 PedType;                         // type:ENUM.32BIT
	enum _0x99BEFEED                 AttributeType;                   // type:ENUM.32BIT
};

struct _0x6B57EB46 : _0x23232399
{
};

struct _0x6B741610
{
	array<struct _0x2B3D007D>        _0xF15D68AF;                     // type:ARRAY.ATARRAY
	ushort                           _0x5265B342;                     // type:USHORT.0
	ushort                           _0x44EC9850;                     // type:USHORT.0
};

struct _0x6BA40A2D : _0x3795142C
{
};

struct _0x6BB4B95E : UIBehavior
{
	struct _0x6D03A7A6               _0x8BEF772C;                     // type:STRUCT.STRUCTURE
	enum eBindingContextScopes       _0xDE85943A;                     // type:ENUM.32BIT
	string                           Trigger;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6BB4CABC
{
	struct _0x48C5586A               DefaultSettings;                 // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0x2346D48F;                     // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0x6C148C9B;                     // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0x87038FF9;                     // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0x56F374F3;                     // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0x026465C4;                     // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0xDD6ECF27;                     // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0x0DEFA717;                     // type:STRUCT.STRUCTURE
	struct _0x48C5586A               _0x2D6D65AD;                     // type:STRUCT.STRUCTURE
};

struct _0x6BC6DF26 : _0x8A0DC979
{
	string                           ContentType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6BE15712
{
	bitset<enum _0x55737B73>         Flags;                           // type:BITSET.32BIT
	float                            Override;                        // type:FLOAT.0
};

struct _0x6BE32756
{
	array<float>                     RobberyOfferItemChances;         // type:ARRAY.ATARRAY
};

struct _0x6BE7D583
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0x8D14E938;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x53E176D2;                     // type:ENUM.32BIT
	float                            sizeEvo;                         // type:FLOAT.0
};

struct _0x6BEAEAF2 : CTuning
{
	struct _0x7639E9E7               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x6BF1AFA3
{
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xB5500556;                     // type:FLOAT.0
	float                            _0x9EEABC18;                     // type:FLOAT.0
	struct _0x9C07C204               _0xED2F5BD7;                     // type:STRUCT.STRUCTURE
};

struct _0x6BF7F7D1 : _0x01843326
{
	bool                             value;                           // type:BOOL.0
};

struct _0x6BF8C3D9 : _0x2F7DA38D
{
	string                           _0x5EFA3965;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6BFCA598
{
	string                              _0x5451E488;                     // type:STRING.ATNONFINALHASHSTRING
	string                              displayName;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0xC6E99E81>     fields;                          // type:MAP.ATBINARYMAP
	array<struct _0xC6E99E81>           _0xAEC72ADC;                     // type:ARRAY.ATARRAY
	map<string, struct _0x21BC8880>     commands;                        // type:MAP.ATBINARYMAP
	struct _0x8619C873                  _0x3DFBDA02;                     // type:STRUCT.POINTER
};

struct _0x6C0204F5 : _0x05C33D80
{
	float                            MaxIconHeight;                   // type:FLOAT.0
	bool                             ShrinkToFit;                     // type:BOOL.0
};

struct _0x6C14A98D : _0x8A0DC979
{
};

struct _0x6C173FD1
{
	float                            _0x190A0D68;                     // type:FLOAT.0
	float                            _0x6660D4CA;                     // type:FLOAT.0
	float                            _0xC6A735C0;                     // type:FLOAT.0
	float                            _0xBF0DE24D;                     // type:FLOAT.0
	float                            _0x81DDEC60;                     // type:FLOAT.0
	float                            _0xD3DBBD4F;                     // type:FLOAT.0
	float                            _0x9FCE698A;                     // type:FLOAT.0
	float                            _0xC2D4F429;                     // type:FLOAT.0
};

struct _0x6C1D7764
{
	float                            _0xA2D07B0A;                     // type:FLOAT.0
	float                            _0x8689442A;                     // type:FLOAT.0
	float                            ExitCornerZOffset;               // type:FLOAT.0
	float                            ExitCornerYOffset;               // type:FLOAT.0
	float                            ExitCornerDirOffset;             // type:FLOAT.0
	bool                             _0xA1C977C2;                     // type:BOOL.0
	float                            _0x2F40BF77;                     // type:FLOAT.0
	float                            _0xEB2D860A;                     // type:FLOAT.0
	float                            _0x0556AE31;                     // type:FLOAT.0
	float                            _0xCC10F870;                     // type:FLOAT.0
	enum eStreamingPriority          _0x89259BC9;                     // type:ENUM.32BIT
	float                            _0xF828BF28;                     // type:FLOAT.0
	float                            _0xFEED3CB5;                     // type:FLOAT.0
	int                              _0xB8A088C0;                     // type:INT.0
};

struct _0x6C22ED78 : _0xC509663E
{
};

struct _0x6C351FEE : _0x2B9E77F8
{
};

struct _0x6C554569 : camCinematicContextMetadata
{
};

struct _0x6C641953
{
	string                           FiringPattern;                   // type:STRING.ATNONFINALHASHSTRING
	string                           Alias;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6C648116
{
	float                            Heading;                         // type:FLOAT.0
	float                            Arc;                             // type:FLOAT.0
	float                            Range;                           // type:FLOAT.0
};

struct _0x6C695F2B
{
	int                              iMinNumEnemiesForScaling;        // type:INT.0
	float                            fAccuracyReductionPerEnemy;      // type:FLOAT.0
	float                            fAccuracyReductionFloor;         // type:FLOAT.0
};

struct _0x6C6B5587
{
	float                            _0xB5BAE63B;                     // type:FLOAT.0
	struct _0xB74710D5               tuning;                          // type:STRUCT.STRUCTURE
};

struct _0x6C77561C : _0xCD9BCB7D
{
};

struct _0x6C7B6C20
{
	string                           _0xC8B00F5A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5FB87981;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2E999829;                     // type:STRING.ATNONFINALHASHSTRING
	vec3V                            _0xAD8D5C5A;                     // type:VEC3V.0
	vec3V                            _0x63B16FDF;                     // type:VEC3V.0
	vec3V                            _0x2F0685E9;                     // type:VEC3V.0
	vec3V                            _0xC113C205;                     // type:VEC3V.0
	vec3V                            _0x070C1D6B;                     // type:VEC3V.0
	vec3V                            _0xE8A93540;                     // type:VEC3V.0
	vec3V                            _0x598546DD;                     // type:VEC3V.0
	vec3V                            _0xCBC7ACBE;                     // type:VEC3V.0
	vec3V                            _0x27107E00;                     // type:VEC3V.0
	vec3V                            _0x415771A0;                     // type:VEC3V.0
	string                           _0x5A09AEC4;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0xB4554ED2;                     // type:ARRAY.ATARRAY
	float                            _0xD4AB0F20;                     // type:FLOAT.0
	float                            _0xABAE10EF;                     // type:FLOAT.0
	float                            _0x426B8AEF;                     // type:FLOAT.0
	float                            _0x41EFE03F;                     // type:FLOAT.0
	string                           _0x6AD66909;                     // type:STRING.ATSTRING
	string                           _0x9D46435E;                     // type:STRING.ATSTRING
	string                           _0x4C7B4809;                     // type:STRING.ATSTRING
	string                           _0xB23DE9CE;                     // type:STRING.ATSTRING
	string                           _0x1C43136D;                     // type:STRING.ATSTRING
	string                           _0x7B4FDF04;                     // type:STRING.ATSTRING
	string                           _0x6C99F97D;                     // type:STRING.ATSTRING
	string                           _0xAA6D8982;                     // type:STRING.ATSTRING
};

struct _0x6C82A03F : CTuning
{
	float                            _0xA5B972B1;                     // type:FLOAT.0
	uint                             _0x8A2715DD;                     // type:UINT.0
};

struct _0x6CA51263
{
	float                            _0x8857885A;                     // type:FLOAT.0
	float                            _0x5BB5FAF8;                     // type:FLOAT.0
	float                            _0x24804833;                     // type:FLOAT.0
	float                            _0x6C9A2A8A;                     // type:FLOAT.0
	float                            _0xA18033FF;                     // type:FLOAT.0
	ushort                           _0xB84B0BA3;                     // type:USHORT.0
	float                            _0x297F2C90;                     // type:FLOAT.0
	float                            MaxWaitTime;                     // type:FLOAT.0
	float                            _0x9D8CF6DA;                     // type:FLOAT.0
	bool                             _0xC329527D;                     // type:BOOL.0
	bool                             _0xA6154B4F;                     // type:BOOL.0
	struct _0x06BF7DB8               _0x7BDBD6BA;                     // type:STRUCT.STRUCTURE
};

struct _0x6CBEB302
{
	array<string>                    Push;                            // type:ARRAY.ATARRAY
	array<string>                    Pop;                             // type:ARRAY.ATARRAY
};

struct _0x6CC414F1 : _0x7DE6531A
{
	float                            targetValue;                     // type:FLOAT.0
	float                            targetValueMin;                  // type:FLOAT.0
	float                            targetValueMax;                  // type:FLOAT.0
};

struct _0x6CCAF529
{
	map<string, struct _0x11C1BC42>     _0xF2A0B435;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x8601509D>     _0x25EEB665;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x5ED9649C>     _0x024572F2;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xB87A7DE0>     _0xC346D635;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x5FB2AE96>     _0x357E83D2;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xA3614D9D>     _0x4270E894;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xB1DBDAA0>     _0xA3A2C8B3;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xB1DBDAA0>     _0x67074AAF;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x03856E3C>     _0xBF7FC094;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xC5F25150>     _0xA4EB7D91;                     // type:MAP.ATBINARYMAP
	struct _0xD8FC9EDD                  _0x6241E200;                     // type:STRUCT.STRUCTURE
};

struct _0x6CD82697
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           RepositionClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	string                           DrawProcessClipId;               // type:STRING.ATNONFINALHASHSTRING
	string                           HolsterProcessClipId;            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6CDB42AF
{
	enum _0x9F210687                 _0xC95678F3;                     // type:ENUM.32BIT
	string                           _0x7393CBDC;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6CE15AC9 : _0x2F7DA38D
{
	float                            fadeInDuration;                  // type:FLOAT.0
	float                            fadeOutDuration;                 // type:FLOAT.0
	enum _0x0100F80E                 fadeInCurve;                     // type:ENUM.32BIT
	enum _0x0100F80E                 fadeOutCurve;                    // type:ENUM.32BIT
};

struct _0x6CE78879 : _0xB126632D
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x6CFE3F47 : _0x1054F746
{
};

struct _0x6D03A7A6 : _0x4A60D095
{
	struct _0xCE064FC1               Path;                            // type:STRUCT.STRUCTURE
};

struct _0x6D27D36F
{
	enum _0xEDF064FF                 Type;                            // type:ENUM.32BIT
	float                            FleeThreatApproach_TimeThreshold; // type:FLOAT.0
	float                            FleeThreatApproach_DistThreshold; // type:FLOAT.0
	float                            FleeThreatApproach_EscapeAngleMin; // type:FLOAT.0
	float                            FleeThreatApproach_EscapeAngleMax; // type:FLOAT.0
	float                            FleeThreatApproach_BlockTime;    // type:FLOAT.0
	float                            TrappedHeadingMin;               // type:FLOAT.0
	float                            TrappedHeadingMax;               // type:FLOAT.0
	float                            AddNewTargetsFreqMin;            // type:FLOAT.0
	float                            AddNewTargetsFreqMax;            // type:FLOAT.0
	float                            SharpCornerAngleThreshold;       // type:FLOAT.0
	struct _0x4F58E61F               UpdateFleePosParams;             // type:STRUCT.STRUCTURE
	bitset<enum _0x20FBD437>         Flags;                           // type:BITSET.32BIT
	struct SFleeStyle                FleeStyle_NervousRetreat;        // type:STRUCT.STRUCTURE
	struct SFleeStyle                FleeStyle_AnnoyedRetreat;        // type:STRUCT.STRUCTURE
	struct SFleeStyle                FleeStyle_PotentialThreat;       // type:STRUCT.STRUCTURE
	struct SFleeStyle                FleeStyle_MajorThreat;           // type:STRUCT.STRUCTURE
	struct SFleeStyle                FleeStyle_ClearTheArea;          // type:STRUCT.STRUCTURE
	struct SFleeStyle                FleeStyle_MortallyInjured;       // type:STRUCT.STRUCTURE
	struct SFleeStyle                FleeStyle_CalmRetreat;           // type:STRUCT.POINTER
	struct SFleeStyle                FleeStyle_InjuredRider;          // type:STRUCT.POINTER
	struct SFleeStyle                FleeStyle_IntimidatedRetreat;    // type:STRUCT.POINTER
	struct SFleeStyle                FleeStyle_HorseTamingQuick;      // type:STRUCT.POINTER
	struct SFleeStyle                FleeStyle_HorseTamingSlow;       // type:STRUCT.POINTER
	struct SFleeStyle                FleeStyle_StolenVehicleRetreat;  // type:STRUCT.POINTER
	struct SFleeStyle                FleeStyle_CautiousRetreat;       // type:STRUCT.POINTER
};

struct _0x6D31BD9C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x045212A8>        FlockVariations;                 // type:ARRAY.ATARRAY
};

struct _0x6D50134D : _0x1FB1BCEA
{
};

struct _0x6D51D3F2
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	int                              Id;                              // type:INT.0
};

struct _0x6D53142D
{
	struct _0x51B38E82               Text;                            // type:STRUCT.STRUCTURE
	struct _0x51B38E82               IconToken;                       // type:STRUCT.STRUCTURE
	struct _0x2C4AD24B               UniqueId;                        // type:STRUCT.STRUCTURE
	struct _0x9B79B490               PromptAlpha;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               IsVisible;                       // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x4B541341;                     // type:STRUCT.STRUCTURE
	struct _0x51B38E82               _0x1420815C;                     // type:STRUCT.STRUCTURE
};

struct _0x6D59D63D : _0x1054F746
{
};

struct _0x6D74BDB6 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x6D7D1951 : CTuning
{
	float                            ParkingSpaceBlockedWaitTimePerAttempt; // type:FLOAT.0
	uint                             MinTimeToKeepEngineAndLightsOnWhileParked; // type:UINT.0
	uchar                            ParkingSpaceBlockedMaxAttempts;  // type:UCHAR.0
};

struct _0x6D899C05 : _0x184818A1
{
};

struct _0x6D8B37A9
{
	string                           name;                            // type:STRING.ATSTRING
	uint                             _0x43CD03D7;                     // type:UINT.0
	uint                             _0x4B8FEBDA;                     // type:UINT.0
};

struct _0x6D9B1145
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           tag;                             // type:STRING.ATNONFINALHASHSTRING
	string                           inventoryItem;                   // type:STRING.ATNONFINALHASHSTRING
	enum eMetaPedType                pedType;                         // type:ENUM.32BIT
	array<struct _0xAF715C58>        assets;                          // type:ARRAY.ATARRAY
};

struct _0x6DAC529B
{
	bool                                _0x45140A55;                     // type:BOOL.0
	string                              _0x96D83327;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xDCB671A4;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x8F884AF6;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                _0x2166BCC3;                     // type:BOOL.0
	string                              _0xEF0A0E9E;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xD59BC72D;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xE240B706;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xBD13137E;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xC13FC171;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                _0xB52DECD3;                     // type:BOOL.0
	bool                                _0x44422C8D;                     // type:BOOL.0
	bool                                _0x27166FA0;                     // type:BOOL.0
	bool                                _0x8F133A96;                     // type:BOOL.0
	float                               _0x1618C44F;                     // type:FLOAT.0
	float                               _0xE478F903;                     // type:FLOAT.0
	struct _0xCA66E6F9                  _0x9EE2679F;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x7535FFBE>     _0x4A28AF7D;                     // type:MAP.ATBINARYMAP
};

struct _0x6DB5FD5D : _0x0A510DA9
{
	enum _0x4F69766B                 Channel;                         // type:ENUM.32BIT
};

struct _0x6DC458FB
{
	float                            exposure;                        // type:FLOAT.0
	float                            gamma;                           // type:FLOAT.0
};

struct _0x6DD0F8D3 : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x84B954E7;                     // type:STRUCT.STRUCTURE
	string                           _0x7C12444E;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x6DD157F2 : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
};

struct _0x6DEE05B0
{
};

struct _0x6DFB6DFD : _0xEFAEA34C
{
	struct _0xEFAEA34C               Ratio;                           // type:STRUCT.POINTER
};

struct _0x6E1AA4A6
{
	string                           _0xBA21D87C;                     // type:STRING.ATNONFINALHASHSTRING
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
};

struct _0x6E1BB82A : _0xE1C9B28B
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x6E1F8C0E : uiGenericEventDataBase
{
	int                              data;                            // type:INT.0
};

struct _0x6E26BBD3 : _0xDC19ABBE
{
};

struct _0x6E34975B : _0xED23B004
{
	int                              Value;                           // type:INT.0
};

struct _0x6E9153A9
{
	float                            _0x58397422;                     // type:FLOAT.0
	float                            _0x2A93A365;                     // type:FLOAT.0
	array<struct _0x078BD94E>        _0x63580EAD;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0xF9ED0014;                     // type:ARRAY.ATARRAY
};

struct _0x6E979DFA
{
	float                            fTime;                           // type:FLOAT.0
	int                              iEventId;                        // type:INT.0
	int                              iEventArgsIndex;                 // type:INT.0
	int                              iObjectId;                       // type:INT.0
};

struct _0x6EBB1EEA : camCinematicContextMetadata
{
};

struct _0x6ECB1C3E
{
	vec3                             vDestination;                    // type:VECTOR3.0
	int                              SrcKey;                          // type:INT.0
	int                              DestKey;                         // type:INT.0
	bool                             LoadEntireExtents;               // type:BOOL.0
};

struct _0x6ECBF9D7 : _0xDDFEF534
{
};

struct _0x6ED85382 : CAICondition
{
	uint                             Count;                           // type:UINT.0
};

struct _0x6EDE6748
{
	string                           _0xD5BA23FD;                     // type:STRING.ATSTRING
};

struct _0x6EE0C6E2 : CTuning
{
	struct _0xF28AC006               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x6F07E5C7 : CTuning
{
	array<float>                     _0xBDC7F488;                     // type:ARRAY.ATARRAY
	float                            _0x0A3DFA5F;                     // type:FLOAT.0
	float                            MinDistanceToMove;               // type:FLOAT.0
	float                            _0xB0959FCE;                     // type:FLOAT.0
	float                            _0xE9A88EB8;                     // type:FLOAT.0
	float                            _0x3901E340;                     // type:FLOAT.0
	float                            _0x6A8C5F86;                     // type:FLOAT.0
	float                            _0x073933D5;                     // type:FLOAT.0
	float                            _0x4B018533;                     // type:FLOAT.0
	string                           _0x64BA0851;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3F2811A6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0AFB15BE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE49462D6;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x25AE60C0;                     // type:UINT.0
	uint                             _0x04CECEBC;                     // type:UINT.0
	uint                             _0xD04C6C22;                     // type:UINT.0
	uint                             _0x4C0CA058;                     // type:UINT.0
	uint                             _0xDB190DA4;                     // type:UINT.0
	float                            _0xEF125614;                     // type:FLOAT.0
};

struct _0x6F0C770E : _0x3AB6499E
{
	struct _0x18927999               Settings;                        // type:STRUCT.STRUCTURE
	float                            _0xE3E015EB;                     // type:FLOAT.0
	float                            _0xF439803F;                     // type:FLOAT.0
	float                            _0x5BCE9DDB;                     // type:FLOAT.0
	float                            _0x67B7AB7F;                     // type:FLOAT.0
	float                            _0xAC6F8A37;                     // type:FLOAT.0
	float                            _0xFACFB2F5;                     // type:FLOAT.0
	float                            _0xBB34C7DC;                     // type:FLOAT.0
	float                            _0x20AA54AE;                     // type:FLOAT.0
	float                            _0xDF5D8056;                     // type:FLOAT.0
	float                            _0xE5DB8ED2;                     // type:FLOAT.0
	float                            _0x9C456CE9;                     // type:FLOAT.0
	bool                             _0xCF1403DB;                     // type:BOOL.0
	float                            _0x1F1E0495;                     // type:FLOAT.0
	float                            _0xE0E7A2CF;                     // type:FLOAT.0
	float                            _0x7E6D075E;                     // type:FLOAT.0
	float                            _0x31189B28;                     // type:FLOAT.0
	float                            _0x462ADBDC;                     // type:FLOAT.0
	float                            _0x0C3EE6D6;                     // type:FLOAT.0
	float                            _0x78CC5C85;                     // type:FLOAT.0
	float                            _0xB274948E;                     // type:FLOAT.0
	float                            _0x2F75D0AD;                     // type:FLOAT.0
	float                            _0x26E38987;                     // type:FLOAT.0
	float                            _0x5BA9B28D;                     // type:FLOAT.0
	float                            _0x6CE22738;                     // type:FLOAT.0
	float                            _0x68214507;                     // type:FLOAT.0
	float                            _0x2DD2265B;                     // type:FLOAT.0
	float                            _0x4277AA05;                     // type:FLOAT.0
	string                           _0xC607587A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xD86B89A1;                     // type:FLOAT.0
	float                            _0xB5F2FCFC;                     // type:FLOAT.0
	float                            _0x8A1B6947;                     // type:FLOAT.0
	float                            _0x4B56169C;                     // type:FLOAT.0
	float                            _0x75A35D58;                     // type:FLOAT.0
	string                           DofSettings;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xA239025B               _0x7772A240;                     // type:STRUCT.STRUCTURE
	float                            _0xA417EC79;                     // type:FLOAT.0
	float                            _0x92604F30;                     // type:FLOAT.0
};

struct _0x6F214E57 : camBaseObjectMetadata
{
	vec2                             _0xE3BED3C6;                     // type:VECTOR2.0
	float                            _0x16403D7B;                     // type:FLOAT.0
	string                           _0x06A08719;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x0567ACC6;                     // type:BOOL.0
	bool                             _0x7DBF1C59;                     // type:BOOL.0
	vec2                             _0xE9635B77;                     // type:VECTOR2.0
	float                            _0xE1748B39;                     // type:FLOAT.0
	bool                             _0x80DD4038;                     // type:BOOL.0
	bool                             _0x250C2A5A;                     // type:BOOL.0
	int                              _0xEEE5029A;                     // type:INT.0
};

struct _0x6F2FD402 : _0xD3B53186
{
	struct _0x5CAAE5F8               _0x3ACC7209;                     // type:STRUCT.STRUCTURE
	string                           _0x4A9103B1;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xDDCE8D63               Source;                          // type:STRUCT.STRUCTURE
	struct _0xDDCE8D63               Reference;                       // type:STRUCT.STRUCTURE
};

struct _0x6F34A3DE : StatsChallengeUIInfo
{
};

struct _0x6F3F547F : _0xC031AE20
{
	struct _0xA57BA3ED               Translator;                      // type:STRUCT.POINTER
	struct _0x507E5FA3               Alignment;                       // type:STRUCT.POINTER
};

struct _0x6F5398EE : _0x5D83CE42
{
	float                            Radius;                          // type:FLOAT.0
	string                           _0x2588E7BE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC0DE027B;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x54C0975C;                     // type:BOOL.0
	bool                             _0x4E168AAE;                     // type:BOOL.0
};

struct _0x6F5B1994
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xCC099708>        lures;                           // type:ARRAY.ATARRAY
	bool                             wasObserved;                     // type:BOOL.0
};

struct _0x6F5F0E4F : _0x45255C77
{
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
	bool                             _0x60323A5F;                     // type:BOOL.0
	bool                             _0x11DCAB40;                     // type:BOOL.0
};

struct _0x6F611A53
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0x52CA6C66;                     // type:BOOL.0
	float                            _0x8DDEA981;                     // type:FLOAT.0
	float                            _0x5D079C91;                     // type:FLOAT.0
	float                            _0x691B5089;                     // type:FLOAT.0
	float                            _0xFE80A6DA;                     // type:FLOAT.0
	float                            _0x403B9B88;                     // type:FLOAT.0
	float                            _0x621F2E5F;                     // type:FLOAT.0
	float                            _0x1782F7A9;                     // type:FLOAT.0
	bool                             _0x0DCD09AD;                     // type:BOOL.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0x6F6348F5 : _0x22C375A7
{
	struct uiScreenInputOperationBase            _0x1A61CF5B;                     // type:STRUCT.POINTER
	struct uiScreenInputCodeEventOperation       CodeEventOp;                     // type:STRUCT.SIMPLE_POINTER
	struct uiScreenInputScriptEventOperation     ScriptEventOp;                   // type:STRUCT.SIMPLE_POINTER
	struct uiScreenInputFlowOperationSimple      FlowOp;                          // type:STRUCT.STRUCTURE
};

struct _0x6F6FEAB1
{
	struct _0x936AC1BC               Facing;                          // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0x48402092;                     // type:STRUCT.STRUCTURE
};

struct _0x6F763B16 : camBaseObjectMetadata
{
};

struct _0x6F7F35F9 : _0x9B7B8D6F
{
};

struct _0x6F846C86
{
	float                            _0xD8D07645;                     // type:FLOAT.0
	float                            _0x19746EA0;                     // type:FLOAT.0
	float                            _0x56819557;                     // type:FLOAT.0
	float                            _0xF9F8C56E;                     // type:FLOAT.0
	float                            _0xDF9DB431;                     // type:FLOAT.0
	float                            _0x3417BCD1;                     // type:FLOAT.0
	float                            _0xCAC02CAF;                     // type:FLOAT.0
	float                            _0xDB57B64E;                     // type:FLOAT.0
	float                            _0x7822E3B3;                     // type:FLOAT.0
	float                            _0x3511C9C9;                     // type:FLOAT.0
	float                            _0x3C792EE6;                     // type:FLOAT.0
	float                            _0x64E6AF0D;                     // type:FLOAT.0
	float                            _0xBCABABFE;                     // type:FLOAT.0
	float                            _0xD78B5AAF;                     // type:FLOAT.0
	float                            _0x53A5A66F;                     // type:FLOAT.0
	float                            _0x04F0E2F9;                     // type:FLOAT.0
	float                            _0x98F0ECCA;                     // type:FLOAT.0
	float                            _0xEA9B40F3;                     // type:FLOAT.0
	float                            _0x33FA0C55;                     // type:FLOAT.0
	float                            _0x34D2AD21;                     // type:FLOAT.0
	float                            _0x742C5EFE;                     // type:FLOAT.0
	float                            _0x17E7024F;                     // type:FLOAT.0
	float                            _0x05AC74B9;                     // type:FLOAT.0
	float                            _0x7DD1B1FD;                     // type:FLOAT.0
};

struct _0x6F8C37CF : _0xE1588AC1
{
	struct _0xCE064FC1               Path;                            // type:STRUCT.STRUCTURE
};

struct _0x6F8CD2FE : _0xF5CD8B85
{
};

struct _0x6F9AAF97 : _0xAF24E56C
{
};

struct _0x6FA757C9 : uiObjectBase
{
	string                           MovieFileName;                   // type:STRING.ATSTRING
};

struct _0x6FAB3D77
{
	vec3V                            _0x73AEC495;                     // type:VEC3V.0
	float                            _0x459AAB48;                     // type:FLOAT.0
	float                            _0xA5F03334;                     // type:FLOAT.0
	float                            _0x9CDC00E7;                     // type:FLOAT.0
	float                            _0x7A10E8FF;                     // type:FLOAT.0
	float                            _0x636081A2;                     // type:FLOAT.0
	float                            _0xEF569582;                     // type:FLOAT.0
	uint                             _0xC5431153;                     // type:UINT.0
};

struct _0x6FB3A09F
{
	vec4V                            _0x8D92BE81;                     // type:VEC4V.0
	vec4V                            _0x9663343B;                     // type:VEC4V.0
};

struct _0x6FB9AF4F : CTuning
{
	struct _0xFD5D7F02               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x6FBEA40F : _0x8A0DC979
{
};

struct _0x6FD7BE74 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bitset<enum _0x426BAA95>         GeneralFlags;                    // type:BITSET.32BIT
	bitset<enum _0xEBFCC29A>         _0xE146753E;                     // type:BITSET.32BIT
};

struct _0x6FD8108B : camAnimSceneDirectorMetadata
{
};

struct _0x6FEC1103
{
	float                            leftMargin;                      // type:FLOAT.0
	float                            topMargin;                       // type:FLOAT.0
	float                            rightMargin;                     // type:FLOAT.0
	float                            bottomMargin;                    // type:FLOAT.0
	float                            maxWidth;                        // type:FLOAT.0
	float                            maxHeight;                       // type:FLOAT.0
	float                            width;                           // type:FLOAT.0
	float                            height;                          // type:FLOAT.0
	float                            minWidth;                        // type:FLOAT.0
	float                            minHeight;                       // type:FLOAT.0
	enum _0xB8B229B0                 widthContentMode;                // type:ENUM.32BIT
	enum _0xB8B229B0                 heightContentMode;               // type:ENUM.32BIT
	enum _0x47CDBC47                 horizontalAlignment;             // type:ENUM.32BIT
	enum _0xE61E8E23                 verticalAlignment;               // type:ENUM.32BIT
	enum _0x5FF5E7BA                 flowDirection;                   // type:ENUM.32BIT
};

struct _0x6FF706C7 : _0x2F7DA38D
{
};

struct _0x6FF78ABB
{
	char                             x;                               // type:CHAR.0
	char                             y;                               // type:CHAR.0
};

struct _0x6FF80FF9 : _0x0A510DA9
{
	string                           AppID;                           // type:STRING.ATNSHASHSTRING
	string                           ActivityID;                      // type:STRING.ATNSHASHSTRING
	bool                             _0x8C24CE98;                     // type:BOOL.0
	bool                             _0x1AD29AA3;                     // type:BOOL.0
};

struct _0x70354A58 : UIBehavior
{
	string                           UnlockId;                        // type:STRING.ATNSHASHSTRING
	string                           _0xEC7B5BFE;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x4365821B               locked;                          // type:STRUCT.STRUCTURE
	struct _0x4365821B               new;                             // type:STRUCT.STRUCTURE
};

struct _0x7040F606 : CAICondition
{
};

struct _0x70425A87
{
	bool                             Enabled;                         // type:BOOL.0
	enum _0x9B2DCF16                 _0x9B2DCF16;                     // type:ENUM.32BIT
	enum _0xA09FE033                 _0x09B920BD;                     // type:ENUM.32BIT
	bool                             _0x2C6AC8A9;                     // type:BOOL.0
	bool                             _0x73C2BCB6;                     // type:BOOL.0
	float                            _0xF5EE2A6F;                     // type:FLOAT.0
	float                            _0x7EDEFAEF;                     // type:FLOAT.0
	float                            _0xC267D3F2;                     // type:FLOAT.0
};

struct _0x704A69D2
{
	float                            _0x8595CF50;                     // type:FLOAT.0
	float                            _0xE7375D48;                     // type:FLOAT.0
	float                            _0xF79C525E;                     // type:FLOAT.0
	float                            MinLength;                       // type:FLOAT.0
	float                            MaxLength;                       // type:FLOAT.0
};

struct _0x705C0859
{
	map<string, struct _0xFC3B3C26>     Templates;                       // type:MAP.ATBINARYMAP
};

struct _0x70736448
{
	array<struct _0x52A7AF3B, 3>     _0xEC460E13;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x7099428D : _0x1054F746
{
};

struct _0x70A20876
{
	struct PedVariationSaveData      _0x079C50BE;                     // type:STRUCT.STRUCTURE
	uint                             _0xD16B5979;                     // type:UINT.0
	uchar                            _0x3C716DF0;                     // type:UCHAR.0
	uchar                            _0xA84E20A7;                     // type:UCHAR.0
	uchar                            _0xD7FF6DE5;                     // type:UCHAR.0
	bool                             _0x8679E5F4;                     // type:BOOL.0
};

struct _0x70A72D3C : _0x71D3ED59
{
	struct _0x90E9B700               Location;                        // type:STRUCT.STRUCTURE
};

struct _0x70D05F4A
{
	float                            _0x9CD51751;                     // type:FLOAT.0
	float                            _0xCAD1F34A;                     // type:FLOAT.0
	uint                             color;                           // type:UINT.1
	bool                             active;                          // type:BOOL.0
};

struct _0x70F30674 : UIContainer
{
};

struct _0x710D1467
{
	string                           TextId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           OpenTextId;                      // type:STRING.ATNONFINALHASHSTRING
	string                           OpenBreakLockTextId;             // type:STRING.ATNONFINALHASHSTRING
	string                           DisabledTextId;                  // type:STRING.ATNONFINALHASHSTRING
	string                           DisabledNoLockBreakerTextId;     // type:STRING.ATNONFINALHASHSTRING
	enum rage__InputType             InputType;                       // type:ENUM.32BIT
	float                            Radius;                          // type:FLOAT.0
	float                            CloseRadius;                     // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
	float                            LookAngle;                       // type:FLOAT.0
	vec3V                            VehicleEntityOffset;             // type:VEC3V.0
};

struct _0x7115AB46
{
	bool                                TimeScaled;                      // type:BOOL.0
	string                              Context;                         // type:STRING.ATNONFINALHASHSTRING
	string                              Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x87D49FD5, 4>        Timelines;                       // type:ARRAY.ATFIXEDARRAY
	map<string, struct _0x4DE5602F>     Solvers;                         // type:MAP.ATMAP
	map<string, struct _0x4FA6E5D7>     ContextValues;                   // type:MAP.ATMAP
};

struct _0x71214C08 : CTuning
{
	float                            _0x7D11AD23;                     // type:FLOAT.0
	float                            _0x9B2013D8;                     // type:FLOAT.0
	float                            _0x44D270FD;                     // type:FLOAT.0
	float                            _0x7BDA0B42;                     // type:FLOAT.0
	string                           _0x52CEA8CA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33AB17F4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE68087E6;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x713227F6
{
	string                           uHash;                           // type:STRING.ATFINALHASHSTRING
	vec3V                            vPosition;                       // type:VEC3V.0
	float                            fRotation;                       // type:FLOAT.0
	array<string>                    OverriddenInteriors;             // type:ARRAY.ATARRAY
};

struct _0x71360BE5
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            scale;                           // type:FLOAT.0
};

struct _0x713D63A6 : _0x08B2661A
{
	array<struct _0xE0CC4C41>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0x7145E9ED : _0x499E1BE4
{
};

struct _0x7157F4F9 : _0x8A0DC979
{
};

struct _0x718075A5 : _0x2F7DA38D
{
	int                              hour;                            // type:INT.0
	int                              minute;                          // type:INT.0
};

struct _0x7180E947
{
	enum eAnimBoneTag                _0x8D14E938;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x53E176D2;                     // type:ENUM.32BIT
	enum _0x2B545AB0                 limbId;                          // type:ENUM.32BIT
	string                           _0x3F3E355E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB231C7D4;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x718B5782 : _0x1054F746
{
};

struct _0x71967F80 : CTuning
{
	float                            _0x20A9029D;                     // type:FLOAT.0
	float                            _0x8B81292C;                     // type:FLOAT.0
	float                            _0x2E3E285E;                     // type:FLOAT.0
	float                            _0x950F7EDC;                     // type:FLOAT.0
	float                            _0xB86D4196;                     // type:FLOAT.0
	float                            _0x5594DBA7;                     // type:FLOAT.0
	float                            _0x155DC3B2;                     // type:FLOAT.0
	float                            _0xA9239287;                     // type:FLOAT.0
	float                            _0x911A700E;                     // type:FLOAT.0
	float                            _0x83E1EEB4;                     // type:FLOAT.0
	float                            _0x2D6792D8;                     // type:FLOAT.0
	float                            _0x26C31354;                     // type:FLOAT.0
	float                            _0x0BF0FD61;                     // type:FLOAT.0
	vec2V                            _0x0E8DFF52;                     // type:VEC2V.0
	vec2V                            _0x4A66E758;                     // type:VEC2V.0
	string                           _0xC8BC6BC5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x978FCE5F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB0FF5B2E;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x719CEF29
{
	string                           MoVENetworkName;                 // type:STRING.ATNONFINALHASHSTRING
	string                           MoVEClipSet;                     // type:STRING.ATNONFINALHASHSTRING
	string                           StartingRequest;                 // type:STRING.ATNONFINALHASHSTRING
	string                           TargetOutfit;                    // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                AttachBone;                      // type:ENUM.32BIT
	bitset<enum _0x1476808F>         Flags;                           // type:BITSET.32BIT
};

struct _0x71AFB8FC : _0x940B34F5
{
	string                           Clip;                            // type:STRING.ATNONFINALHASHSTRING
	string                           GripClip;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x71B7CDB7 : _0x1054F746
{
};

struct _0x71BBDA02
{
	string                           ClipSetVarId;                    // type:STRING.ATNONFINALHASHSTRING
	int                              ClipSetVariationIndex;           // type:INT.0
};

struct _0x71BC91F8 : _0x1054F746
{
};

struct _0x71C4ED61
{
	array<struct _0xDE94E0AC>        _0x44D7CD34;                     // type:ARRAY.ATARRAY
	array<struct _0x78710AD0>        _0xD2B721B6;                     // type:ARRAY.ATARRAY
};

struct _0x71D3ED59
{
	array<struct camBaseObjectMetadata>     MetadataList;                    // type:ARRAY.ATARRAY
	struct _0x1E256E6B                      Curves;                          // type:STRUCT.STRUCTURE
};

struct _0x720FAD40
{
	enum _0x901737E6                 type;                            // type:ENUM.32BIT
	string                           message;                         // type:STRING.ATSTRING
	bool                             _0x5AB4D60A;                     // type:BOOL.0
	string                           _0xE3A88E33;                     // type:STRING.ATSTRING
	string                           _0x877828F8;                     // type:STRING.ATSTRING
};

struct _0x7225432F
{
	bool                             Enabled;                         // type:BOOL.0
	uint                             Priority;                        // type:UINT.0
	float                            _0xF0E491B0;                     // type:FLOAT.0
	float                            _0xAA6E68CE;                     // type:FLOAT.0
	float                            _0x1B036301;                     // type:FLOAT.0
	float                            _0x97B4B4F5;                     // type:FLOAT.0
	float                            _0x71753340;                     // type:FLOAT.0
	float                            _0x43A01A2D;                     // type:FLOAT.0
	float                            _0x7A106F09;                     // type:FLOAT.0
	float                            _0xE8FF7405;                     // type:FLOAT.0
	float                            _0x1957F018;                     // type:FLOAT.0
	float                            _0x27B9CF25;                     // type:FLOAT.0
	bool                             _0x8A4EAF7D;                     // type:BOOL.0
	bool                             _0xACEE1020;                     // type:BOOL.0
};

struct _0x725734CB
{
	vec2                             _0xF42AAAC5;                     // type:VECTOR2.0
	vec2                             _0xDFF77433;                     // type:VECTOR2.0
	vec2                             _0x6D6382F2;                     // type:VECTOR2.0
	vec2                             _0x06ADE72A;                     // type:VECTOR2.0
	float                            _0x8DC6B9C5;                     // type:FLOAT.0
	float                            _0x51673F5C;                     // type:FLOAT.0
	float                            _0x3BBFD734;                     // type:FLOAT.0
	float                            _0x8FB327DE;                     // type:FLOAT.0
	float                            _0x2509865B;                     // type:FLOAT.0
	float                            _0x83542535;                     // type:FLOAT.0
	float                            _0x1339944F;                     // type:FLOAT.0
	float                            _0x0C7C2E4D;                     // type:FLOAT.0
	float                            _0xDC0D7C87;                     // type:FLOAT.0
	float                            _0x855880C1;                     // type:FLOAT.0
	float                            _0x46C58A11;                     // type:FLOAT.0
	float                            _0x78438DBC;                     // type:FLOAT.0
	float                            _0xD78525A9;                     // type:FLOAT.0
	float                            _0x22C3034D;                     // type:FLOAT.0
	float                            _0xCC68C70A;                     // type:FLOAT.0
	float                            _0xAB6ACC21;                     // type:FLOAT.0
	float                            _0x1A42D642;                     // type:FLOAT.0
	float                            _0xAEDC458A;                     // type:FLOAT.0
	float                            _0x3BAEC6DE;                     // type:FLOAT.0
	float                            _0x0EB6782D;                     // type:FLOAT.0
};

struct _0x726E5B7B
{
	int                              _0xEFEB0167;                     // type:INT.0
	int                              _0x285D33EC;                     // type:INT.0
	float                            Sign;                            // type:FLOAT.0
};

struct _0x72802A8E
{
	array<struct _0x93C15105>        LinearScores;                    // type:ARRAY.ATARRAY
	array<struct _0x102B44CC>        DistributionScores;              // type:ARRAY.ATARRAY
	array<struct _0x6BE15712>        MarkupModifiers;                 // type:ARRAY.ATARRAY
	array<struct _0xCAB05532>        StatusModifiers;                 // type:ARRAY.ATARRAY
	array<struct _0xBA49702B>        ValidRanges;                     // type:ARRAY.ATARRAY
	struct _0x93C15105               OptionalSniperSpotScore;         // type:STRUCT.STRUCTURE
	struct _0x93C15105               OptionalNearRoadScore;           // type:STRUCT.STRUCTURE
	struct _0x7DDDFA0C               TrainScores;                     // type:STRUCT.STRUCTURE
	float                            MatchInteriorStatusPenalty;      // type:FLOAT.0
	float                            MetadataSpecialLinkPenalty;      // type:FLOAT.0
};

struct _0x72975C0A : _0x0A510DA9
{
};

struct _0x729C0185 : _0x1451A6B0
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0x72A925C2 : _0xE4042597
{
	bool                             isObject;                        // type:BOOL.0
	bool                             _0xE30DF0B0;                     // type:BOOL.0
};

struct _0x72BB00EF
{
	string                           parent;                          // type:STRING.ATNONFINALHASHSTRING
	string                           child;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x72CD57F5
{
	float                            MinDist;                         // type:FLOAT.0
	float                            MaxDist;                         // type:FLOAT.0
};

struct _0x72D9D374
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xD46AA2A6;                     // type:BOOL.0
};

struct _0x72E2A0BC
{
	array<uint, 2>                   IndicesBeforeRemap;              // type:ARRAY.MEMBER
	array<uint, 2>                   Indices;                         // type:ARRAY.MEMBER
	array<float, 2>                  Vertices;                        // type:ARRAY.MEMBER
};

struct _0x72E3BF2B : CTuning
{
	float                            _0x50FC5D7B;                     // type:FLOAT.0
	float                            _0x4CE7AA00;                     // type:FLOAT.0
	int                              _0x00F0FCEE;                     // type:INT.0
	int                              _0x04590CDE;                     // type:INT.0
	float                            _0x1CB7DEE1;                     // type:FLOAT.0
	float                            _0x24B4E5C7;                     // type:FLOAT.0
	float                            _0xCCFC4966;                     // type:FLOAT.0
	float                            _0x95E94294;                     // type:FLOAT.0
	float                            _0x4FBF447A;                     // type:FLOAT.0
	float                            _0x682B3852;                     // type:FLOAT.0
	int                              _0x4F755FAA;                     // type:INT.0
	int                              _0xB810FE9C;                     // type:INT.0
	float                            _0x350FB287;                     // type:FLOAT.0
	int                              _0x39E06A97;                     // type:INT.0
	float                            _0x0DC050B5;                     // type:FLOAT.0
	float                            _0x23FCE5AF;                     // type:FLOAT.0
	float                            _0x2409F7A5;                     // type:FLOAT.0
	float                            _0x36064B03;                     // type:FLOAT.0
	bool                             _0xA5A3D26B;                     // type:BOOL.0
	bool                             _0x8797C1BE;                     // type:BOOL.0
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Base;                            // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Moving;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Idle;                            // type:STRUCT.STRUCTURE
};

struct _0x72E4314A
{
	string                           Name;                            // type:STRING.CONST_STRING
};

struct _0x730065E8 : CAICondition
{
	float                            Distance;                        // type:FLOAT.0
};

struct _0x730AE350
{
	string                           _0x08968968;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x478AC835                 renderType;                      // type:ENUM.32BIT
	string                           modelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x571AD0EB;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x732D18D5 : _0x1B26FDB1
{
	float                            Value;                           // type:FLOAT.0
};

struct _0x7330C05C
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33C1E27F;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xC5AC46C3                 _0xD4F7EA71;                     // type:ENUM.32BIT
	enum _0xC5AC46C3                 _0x56A10841;                     // type:ENUM.32BIT
	float                            ptFxRange;                       // type:FLOAT.0
	float                            ptFxScale;                       // type:FLOAT.0
};

struct _0x7343B4F4
{
	bool                             _0xE37A55A8;                     // type:BOOL.0
	bool                             EnableCoverPeekingVariations;    // type:BOOL.0
	bool                             EnableCoverPinnedVariations;     // type:BOOL.0
	bool                             EnableCoverIdleVariations;       // type:BOOL.0
	bool                             _0xE9C5FFF5;                     // type:BOOL.0
	bool                             _0x794E962B;                     // type:BOOL.0
	float                            _0xF23743A1;                     // type:FLOAT.0
	float                            _0xBEE7684C;                     // type:FLOAT.0
	float                            MinTimeStayPinned;               // type:FLOAT.0
	float                            MaxTimeStayPinned;               // type:FLOAT.0
	bool                             _0xE133B6E8;                     // type:BOOL.0
	float                            _0xDBB713DD;                     // type:FLOAT.0
	float                            _0x9BF4764A;                     // type:FLOAT.0
	float                            _0x8CD4D4C0;                     // type:FLOAT.0
	float                            _0xDC46A8F0;                     // type:FLOAT.0
	float                            _0x8D6E7E80;                     // type:FLOAT.0
	float                            _0x3C37BD47;                     // type:FLOAT.0
	int                              _0x9864BEB1;                     // type:INT.0
	float                            _0xC7CA360A;                     // type:FLOAT.0
	bool                             ForcePinnedDown;                 // type:BOOL.0
	float                            MinDistanceToTargetForIdleVariations; // type:FLOAT.0
	float                            MinTimeBetweenIdleVariations;    // type:FLOAT.0
	float                            MaxTimeBetweenIdleVariations;    // type:FLOAT.0
	float                            MinWaitTimeToPlayPlayerIdleVariations; // type:FLOAT.0
	float                            MinTimeBetweenPlayerIdleVariations; // type:FLOAT.0
	float                            MaxTimeBetweenPlayerIdleVariations; // type:FLOAT.0
	string                           _0x7102B864;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x87B1E16A;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xFC78F052>        IdleAnimStateInfos;              // type:ARRAY.ATARRAY
	array<string>                    PinnedLow1HVariationClipsets;    // type:ARRAY.ATARRAY
	array<string>                    PinnedLow2HVariationClipsets;    // type:ARRAY.ATARRAY
	array<string>                    PinnedHigh1HVariationClipsets;   // type:ARRAY.ATARRAY
	array<string>                    PinnedHigh2HVariationClipsets;   // type:ARRAY.ATARRAY
	array<struct _0xFC78F052>        PinnedIntroAnimStateInfos;       // type:ARRAY.ATARRAY
	array<struct _0xFC78F052>        PinnedIdleAnimStateInfos;        // type:ARRAY.ATARRAY
	array<struct _0xFC78F052>        PinnedOutroAnimStateInfos;       // type:ARRAY.ATARRAY
	array<struct _0xFC78F052>        _0x3535A97D;                     // type:ARRAY.ATARRAY
	array<string>                    OutroReact1HVariationClipsets;   // type:ARRAY.ATARRAY
	array<string>                    OutroReact2HVariationClipsets;   // type:ARRAY.ATARRAY
	array<string>                    _0x422FFD8B;                     // type:ARRAY.ATARRAY
	array<string>                    _0xAF78A07E;                     // type:ARRAY.ATARRAY
	array<string>                    _0x12798F74;                     // type:ARRAY.ATARRAY
	array<string>                    _0x3ACAF2E6;                     // type:ARRAY.ATARRAY
	array<string>                    _0x1C361A85;                     // type:ARRAY.ATARRAY
	array<string>                    _0x3B942C64;                     // type:ARRAY.ATARRAY
	array<string>                    _0x163F3167;                     // type:ARRAY.ATARRAY
	array<string>                    _0x126AC4BC;                     // type:ARRAY.ATARRAY
	array<string>                    _0xAEB9EF36;                     // type:ARRAY.ATARRAY
	array<string>                    _0xD34328D3;                     // type:ARRAY.ATARRAY
	array<string>                    _0x994FED07;                     // type:ARRAY.ATARRAY
	array<string>                    _0x41E83EBD;                     // type:ARRAY.ATARRAY
};

struct _0x73453E5B : _0x1054F746
{
};

struct _0x73461F3E
{
	string                           Name;                            // type:STRING.ATSTRING
	string                           TimeCycleVariationFileName;      // type:STRING.ATSTRING
};

struct _0x734C6EE2
{
	float                            _0x2251595B;                     // type:FLOAT.0
	float                            _0x3225BCEF;                     // type:FLOAT.0
	float                            _0x4149D923;                     // type:FLOAT.0
};

struct _0x734EA69F
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33C1E27F;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xC5AC46C3                 _0xD4F7EA71;                     // type:ENUM.32BIT
	float                            ptFxRange;                       // type:FLOAT.0
	float                            ptFxScale;                       // type:FLOAT.0
};

struct _0x735C51D6
{
	bool                             renderOnVegetation;              // type:BOOL.0
	float                            sizeMultiplier;                  // type:FLOAT.0
	vec3                             tintColor;                       // type:VECTOR3.0
	float                            roughnessOverride;               // type:FLOAT.0
	float                            translucencyOverride;            // type:FLOAT.0
	float                            aoOverride;                      // type:FLOAT.0
	float                            heightRestrictionMin;            // type:FLOAT.0
	float                            heightRestrictionMax;            // type:FLOAT.0
	float                            randomThreshold;                 // type:FLOAT.0
	float                            randomMultiplier;                // type:FLOAT.0
};

struct _0x7363C501
{
	int                              _0x9BDD4C51;                     // type:INT.0
	string                           _0x7E26B8F4;                     // type:STRING.POINTER
};

struct _0x7365CA1C : _0x0A510DA9
{
};

struct _0x7370142D : _0x651ED589
{
};

struct _0x7370B9ED
{
	map<enum _0x4F69766B, struct _0xA1C2BAD7>     _0x2A85E415;                     // type:MAP.ATMAP
};

struct _0x7375C2C5
{
	enum _0x9DB65C31                 _0x6CC3A318;                     // type:ENUM.32BIT
	enum _0x750EA65B                 _0x19349695;                     // type:ENUM.32BIT
	bool                             _0xEAFF26E4;                     // type:BOOL.0
	bool                             _0xCA329AE8;                     // type:BOOL.0
	bool                             _0x7AFBCE49;                     // type:BOOL.0
	bool                             _0xA3D64CB9;                     // type:BOOL.0
	float                            _0x0CBD6703;                     // type:FLOAT.0
	float                            _0x3098617E;                     // type:FLOAT.0
	float                            _0xD589F0A0;                     // type:FLOAT.0
	float                            _0xD4E57378;                     // type:FLOAT.0
};

struct _0x73844E6B : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 OtherPed;                        // type:ENUM.32BIT
};

struct _0x73897708
{
	string                           _0xBF631EC5;                     // type:STRING.ATNONFINALHASHSTRING
	float                            AngledClimbTheshold;             // type:FLOAT.0
	float                            MinAngleForScaleVelocityExtension; // type:FLOAT.0
	float                            MaxAngleForScaleVelocityExtension; // type:FLOAT.0
	float                            AngledClimbScaleVelocityExtensionMax; // type:FLOAT.0
	float                            DisableVaultForwardDot;          // type:FLOAT.0
	float                            SlideWalkAnimRate;               // type:FLOAT.0
	float                            _0x6CA68719;                     // type:FLOAT.0
	float                            _0x5E8A6CC3;                     // type:FLOAT.0
	float                            _0x9BC5F750;                     // type:FLOAT.0
	float                            _0xAC9718F2;                     // type:FLOAT.0
	float                            _0xAF1CB3FD;                     // type:FLOAT.0
	float                            _0xD7A08504;                     // type:FLOAT.0
	float                            _0x99B0A7A7;                     // type:FLOAT.0
	float                            _0xB7A325EA;                     // type:FLOAT.0
	float                            _0xC565C16F;                     // type:FLOAT.0
	float                            _0x2A993F6A;                     // type:FLOAT.0
	float                            _0xE3010208;                     // type:FLOAT.0
	float                            _0xE42F96D6;                     // type:FLOAT.0
	bool                             _0x4EE83522;                     // type:BOOL.0
	bool                             _0x82560732;                     // type:BOOL.0
	bool                             _0x77A1D0CE;                     // type:BOOL.0
	bool                             _0x14196E7D;                     // type:BOOL.0
	bool                             _0x08DD08E6;                     // type:BOOL.0
	bool                             _0x4E91AFE2;                     // type:BOOL.0
	bool                             _0x56D2063E;                     // type:BOOL.0
	array<struct _0xEABA0019>        _0x5BDE2378;                     // type:ARRAY.ATARRAY
	array<struct _0x274B18D9>        _0x27DB2579;                     // type:ARRAY.ATARRAY
};

struct _0x739DA792 : _0x651ED589
{
	bool                             _0x3984A19C;                     // type:BOOL.0
};

struct _0x73A7DDF2 : CTuning
{
	bool                             _0x06E0BB47;                     // type:BOOL.0
	bool                             _0x31AE542A;                     // type:BOOL.0
	float                            _0xEBC73B3C;                     // type:FLOAT.0
	float                            _0x209A260B;                     // type:FLOAT.0
	float                            _0xB5D96A07;                     // type:FLOAT.0
	float                            _0x4001C7BD;                     // type:FLOAT.0
	float                            _0x41D4CD55;                     // type:FLOAT.0
	float                            _0xAD8E254F;                     // type:FLOAT.0
	float                            _0x1CAC66A4;                     // type:FLOAT.0
	float                            _0x6A13AB31;                     // type:FLOAT.0
	float                            _0x2ED29ECA;                     // type:FLOAT.0
	float                            _0x32EC274F;                     // type:FLOAT.0
	float                            _0xDB7821DD;                     // type:FLOAT.0
	float                            _0x9F12F39A;                     // type:FLOAT.0
	float                            _0xA015E942;                     // type:FLOAT.0
	float                            _0xDB8C44A5;                     // type:FLOAT.0
	float                            _0x7F54302A;                     // type:FLOAT.0
	float                            _0x86FEBF8C;                     // type:FLOAT.0
	float                            _0xB5C7CCD5;                     // type:FLOAT.0
	float                            _0xBE461297;                     // type:FLOAT.0
	float                            _0x7BC3E733;                     // type:FLOAT.0
	float                            _0xD71E68FE;                     // type:FLOAT.0
	float                            _0xA1D4A66A;                     // type:FLOAT.0
	float                            _0xF389EAF0;                     // type:FLOAT.0
	float                            _0xBB2C3B15;                     // type:FLOAT.0
	float                            _0xAE9F5F29;                     // type:FLOAT.0
	float                            _0xCBEBCCD4;                     // type:FLOAT.0
	float                            _0x5C08748B;                     // type:FLOAT.0
	float                            _0xEF90E0F2;                     // type:FLOAT.0
	float                            _0x1D534B89;                     // type:FLOAT.0
	float                            _0x10BDBB54;                     // type:FLOAT.0
};

struct _0x73B53AA2
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x5C04D65B                 filterType;                      // type:ENUM.32BIT
	array<string>                    entities;                        // type:ARRAY.ATARRAY
};

struct _0x73C700A6
{
	short                            minX;                            // type:SHORT.0
	short                            minY;                            // type:SHORT.0
	short                            maxX;                            // type:SHORT.0
	short                            maxY;                            // type:SHORT.0
	uchar                            a1;                              // type:UCHAR.0
	uchar                            a2;                              // type:UCHAR.0
	uchar                            a3;                              // type:UCHAR.0
	uchar                            a4;                              // type:UCHAR.0
	uchar                            _0x6112E109;                     // type:UCHAR.0
	uchar                            _0x7345856E;                     // type:UCHAR.0
	uchar                            _0x4DB63A50;                     // type:UCHAR.0
	uchar                            _0x5FEFDEC3;                     // type:UCHAR.0
	float                            z;                               // type:FLOAT.0
	uchar                            Type;                            // type:UCHAR.0
	uchar                            _0xA56ADB43;                     // type:UCHAR.0
	uchar                            _0xC51A1A8D;                     // type:UCHAR.0
	uchar                            _0xE606DC7E;                     // type:UCHAR.0
	uchar                            _0x0F9A2FAC;                     // type:UCHAR.0
	ushort                           TextureId;                       // type:USHORT.0
	ushort                           _0x8C0476CC;                     // type:USHORT.0
	bool                             _0x6F8B8DEB;                     // type:BOOL.0
	bool                             IsInvisible;                     // type:BOOL.0
	bool                             HasLimitedDepth;                 // type:BOOL.0
	bool                             NoStencil;                       // type:BOOL.0
};

struct _0x73D07B5D : _0x4FA6E5D7
{
	bool                             Value;                           // type:BOOL.0
};

struct _0x73DC7285 : _0x0F81917B
{
	array<struct _0xDAA7F5D5>        _0x9CB80C26;                     // type:ARRAY.ATARRAY
};

struct _0x73F2C1CE
{
	array<struct _0xAE436053>         Components;                      // type:ARRAY.ATARRAY
	array<struct _0x90DFC33B>         _0x0725F8A1;                     // type:ARRAY.ATARRAY
	array<struct CCoverPointNode>     _0xFA1812B9;                     // type:ARRAY.ATARRAY
	array<struct _0xF2FFF16E>         _0xCE3DA15B;                     // type:ARRAY.ATARRAY
	bitset<enum _0x6EA4D604>          Flags;                           // type:BITSET.32BIT
	bool                              _0x5C1B48E8;                     // type:BOOL.0
};

struct _0x73FA5646
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             Value;                           // type:BOOL.0
	int                              Lifetime;                        // type:INT.0
};

struct _0x7425DAD5
{
	array<string>                    Goals;                           // type:ARRAY.ATARRAY
};

struct _0x742934C4 : _0xB4712173
{
	float                            DefaultArmour;                   // type:FLOAT.0
	float                            InjuredHealthThreshold;          // type:FLOAT.0
	float                            CriticallyInjuredHealthThreshold; // type:FLOAT.0
	bool                             Invincible;                      // type:BOOL.0
	float                            WritheFromBulletDamageTheshold;  // type:FLOAT.0
	float                            FireVulnerability;               // type:FLOAT.0
	struct void                      RechargeProperties;              // type:STRUCT.EXTERNAL_NAMED
	struct _0x3D8A24DD               MeleeProperties;                 // type:STRUCT.STRUCTURE
	struct _0x164A29BA               ScavengingProperties;            // type:STRUCT.STRUCTURE
	struct _0xD4B07D01               IncapacitatedProperties;         // type:STRUCT.STRUCTURE
	struct _0xA992C843               HitReactProperties;              // type:STRUCT.STRUCTURE
};

struct _0x742EB801 : CAICondition
{
};

struct _0x74330FC5 : CTuning
{
	struct _0xEB51CD6F               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x7438E446
{
	array<uint64, 2>                 _0x00A8CB2A;                     // type:ARRAY.MEMBER
};

struct _0x743C6B11 : _0x499E1BE4
{
	bool                             _0xD5C80D6A;                     // type:BOOL.0
	bool                             _0x13C958CF;                     // type:BOOL.0
	float                            _0x29562933;                     // type:FLOAT.0
	float                            _0xAD27EDC0;                     // type:FLOAT.0
	float                            _0x2E71B3E6;                     // type:FLOAT.0
	bool                             _0xCA1CE810;                     // type:BOOL.0
	float                            _0x938AE8EF;                     // type:FLOAT.0
	float                            _0x79BA193E;                     // type:FLOAT.0
	float                            _0xD81C84AA;                     // type:FLOAT.0
	float                            _0xACAD8E99;                     // type:FLOAT.0
	float                            _0xCACF8CB3;                     // type:FLOAT.0
	float                            _0xC93A00B0;                     // type:FLOAT.0
	float                            _0x28328FBC;                     // type:FLOAT.0
	float                            _0x355534C9;                     // type:FLOAT.0
	float                            _0x306370CB;                     // type:FLOAT.0
	float                            _0xCEC6B65F;                     // type:FLOAT.0
	int                              _0xAC5270EF;                     // type:INT.0
	int                              _0x13F2B666;                     // type:INT.0
	float                            _0x8EB0E234;                     // type:FLOAT.0
	float                            _0x3B12B1F9;                     // type:FLOAT.0
	float                            _0xEF95C889;                     // type:FLOAT.0
	float                            _0x7803621E;                     // type:FLOAT.0
	float                            _0x74400297;                     // type:FLOAT.0
	float                            _0x87E3A07E;                     // type:FLOAT.0
	float                            _0x87994F27;                     // type:FLOAT.0
	float                            _0x5926FB3F;                     // type:FLOAT.0
	float                            _0xF1CB91C4;                     // type:FLOAT.0
	float                            _0xD76F77B8;                     // type:FLOAT.0
	float                            _0xE827432B;                     // type:FLOAT.0
	float                            _0x8EE135BB;                     // type:FLOAT.0
	float                            _0x9A3B5A77;                     // type:FLOAT.0
	float                            _0x9CA5E7A4;                     // type:FLOAT.0
	float                            _0x69F4BE69;                     // type:FLOAT.0
	float                            _0x7CBEEABD;                     // type:FLOAT.0
	float                            _0x0853E166;                     // type:FLOAT.0
	float                            _0x5BCAFF47;                     // type:FLOAT.0
	float                            _0x626A3D6E;                     // type:FLOAT.0
	float                            _0x388E7270;                     // type:FLOAT.0
	bool                             _0x1BB0DBC8;                     // type:BOOL.0
	float                            _0x00B51804;                     // type:FLOAT.0
	float                            _0x70E8EEAE;                     // type:FLOAT.0
	float                            _0x95E0788A;                     // type:FLOAT.0
	float                            _0x630E9BAB;                     // type:FLOAT.0
	bool                             _0x6E27B5E8;                     // type:BOOL.0
	bool                             _0x82AA266B;                     // type:BOOL.0
	bool                             _0xDF5077D4;                     // type:BOOL.0
};

struct _0x74420071
{
	string                              _0xD3767575;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0xCCD69154>     Weapons;                         // type:MAP.ATBINARYMAP
	struct _0x9D920AA1                  CoverSetTrees;                   // type:STRUCT.STRUCTURE
};

struct _0x744B7C39 : CAICondition
{
};

struct _0x7458F17C
{
	uint                             _0x9359732A;                     // type:UINT.0
	float                            _0x66BAA462;                     // type:FLOAT.0
	float                            _0xCB2DEFF7;                     // type:FLOAT.0
	float                            VaultDepth;                      // type:FLOAT.0
	float                            VaultHorizClearance;             // type:FLOAT.0
	float                            VaultVertClearance;              // type:FLOAT.0
	float                            MinSpeedToRagdollOpenDoor;       // type:FLOAT.0
	float                            MinSpeedToRagdollOpenDoorPlayer; // type:FLOAT.0
	float                            _0x006865A9;                     // type:FLOAT.0
	float                            _0x49C89573;                     // type:FLOAT.0
	float                            _0x160A5090;                     // type:FLOAT.0
	float                            _0xADA04C16;                     // type:FLOAT.0
	float                            _0x4148469A;                     // type:FLOAT.0
	float                            _0x381898CD;                     // type:FLOAT.0
	float                            _0x261360D4;                     // type:FLOAT.0
	float                            DistanceToEvaluateDoors;         // type:FLOAT.0
	float                            _0xFAAFE966;                     // type:FLOAT.0
	float                            _0xFA2384D4;                     // type:FLOAT.0
	float                            _0x2A5340AA;                     // type:FLOAT.0
	float                            _0xC93BCF6C;                     // type:FLOAT.0
	float                            _0xC2E80C88;                     // type:FLOAT.0
	float                            _0xDDC3A8C5;                     // type:FLOAT.0
	float                            _0x344EF997;                     // type:FLOAT.0
	float                            _0x7CA8ED55;                     // type:FLOAT.0
	float                            _0xCB8A8420;                     // type:FLOAT.0
	float                            LeftPickUpTargetLerpPhaseStart;  // type:FLOAT.0
	float                            LeftPickUpTargetLerpPhaseEnd;    // type:FLOAT.0
	float                            LeftPullUpTargetLerpPhaseStart;  // type:FLOAT.0
	float                            LeftPullUpTargetLerpPhaseEnd;    // type:FLOAT.0
	float                            RightPickUpTargetLerpPhaseStart; // type:FLOAT.0
	float                            RightPickUpTargetLerpPhaseEnd;   // type:FLOAT.0
	float                            RightPullUpTargetLerpPhaseStart; // type:FLOAT.0
	float                            RightPullUpTargetLerpPhaseEnd;   // type:FLOAT.0
	float                            LeftPickUpTargetLerpPhaseStartBicycle; // type:FLOAT.0
	float                            LeftPickUpTargetLerpPhaseEndBicycle; // type:FLOAT.0
	float                            LeftPullUpTargetLerpPhaseStartBicycle; // type:FLOAT.0
	float                            LeftPullUpTargetLerpPhaseEndBicycle; // type:FLOAT.0
	float                            RightPickUpTargetLerpPhaseStartBicycle; // type:FLOAT.0
	float                            RightPickUpTargetLerpPhaseEndBicycle; // type:FLOAT.0
	float                            RightPullUpTargetLerpPhaseStartBicycle; // type:FLOAT.0
	float                            RightPullUpTargetLerpPhaseEndBicycle; // type:FLOAT.0
	float                            MinSpeedToAbortOpenDoor;         // type:FLOAT.0
	float                            MinSpeedToAbortOpenDoorCombat;   // type:FLOAT.0
	float                            MinSpeedToAbortOpenDoorPlayer;   // type:FLOAT.0
	float                            _0x4C9F7098;                     // type:FLOAT.0
	float                            MinSpeedToRagdollOpenDoorCombat; // type:FLOAT.0
	bool                             UseSlowInOut;                    // type:BOOL.0
	float                            SecondsBeforeWarpToLeader;       // type:FLOAT.0
	float                            MinMagForBikeToBeOnSide;         // type:FLOAT.0
	float                            MaxDistanceToCheckEntryCollisionWhenIgnoring; // type:FLOAT.0
	float                            DoorRatioToConsiderDoorOpenSteps; // type:FLOAT.0
	float                            DoorRatioToConsiderDoorOpen;     // type:FLOAT.0
	float                            DoorRatioToConsiderDoorOpenCombat; // type:FLOAT.0
	float                            DoorRatioToConsiderDoorClosed;   // type:FLOAT.0
	float                            FastEnterExitRate;               // type:FLOAT.0
	float                            TargetRearDoorOpenRatio;         // type:FLOAT.0
	float                            MaxOpenRatioForOpenDoorInitialOutside; // type:FLOAT.0
	float                            MaxOpenRatioForOpenDoorOutside;  // type:FLOAT.0
	float                            MaxOscillationDisplacementOutside; // type:FLOAT.0
	float                            MaxOpenRatioForOpenDoorInitialInside; // type:FLOAT.0
	float                            MaxOpenRatioForOpenDoorInside;   // type:FLOAT.0
	float                            MaxOscillationDisplacementInside; // type:FLOAT.0
	float                            BikeEnterLeanAngleOvershootAmt;  // type:FLOAT.0
	float                            BikeEnterLeanAngleOvershootRate; // type:FLOAT.0
	float                            _0x416BB72E;                     // type:FLOAT.0
	float                            _0x6920CB10;                     // type:FLOAT.0
	float                            _0x37F7FCD8;                     // type:FLOAT.0
	float                            _0x7D56C512;                     // type:FLOAT.0
	float                            _0xB5A1FD7E;                     // type:FLOAT.0
	float                            _0x382D1581;                     // type:FLOAT.0
	float                            _0x270C4EA5;                     // type:FLOAT.0
	bool                             _0x86964F4D;                     // type:BOOL.0
	bool                             _0xCD352E20;                     // type:BOOL.0
	bool                             _0x6813F942;                     // type:BOOL.0
	bool                             _0x877FA80A;                     // type:BOOL.0
	uint                             _0x0AE80CB9;                     // type:UINT.0
	string                           _0xC58778F9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3E174427;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xB711CE8A;                     // type:FLOAT.0
	float                            _0x11677D70;                     // type:FLOAT.0
	float                            _0x92AC063F;                     // type:FLOAT.0
	float                            _0xEB1B8965;                     // type:FLOAT.0
	float                            _0xAD1CF982;                     // type:FLOAT.0
	float                            _0xAF5F3855;                     // type:FLOAT.0
	bool                             _0xF266669D;                     // type:BOOL.0
	float                            _0x39486B49;                     // type:FLOAT.0
	float                            _0x258AF82D;                     // type:FLOAT.0
	float                            _0x64CAE6DF;                     // type:FLOAT.0
	float                            _0xE212BABF;                     // type:FLOAT.0
	float                            _0x03D3C83A;                     // type:FLOAT.0
	float                            _0xFD5B9C6C;                     // type:FLOAT.0
	float                            _0x67B4D26B;                     // type:FLOAT.0
	float                            _0xA3011DA0;                     // type:FLOAT.0
	float                            _0x3E8B0598;                     // type:FLOAT.0
	float                            _0x66461B37;                     // type:FLOAT.0
	float                            _0x25380280;                     // type:FLOAT.0
	bool                             _0x45EB7961;                     // type:BOOL.0
	float                            _0x16C2A7E9;                     // type:FLOAT.0
	float                            _0xDF3A83EE;                     // type:FLOAT.0
	float                            _0x9454999F;                     // type:FLOAT.0
	float                            _0xD3847AED;                     // type:FLOAT.0
	float                            _0x6702F9D5;                     // type:FLOAT.0
	float                            _0x99FCCE38;                     // type:FLOAT.0
	uint                             _0x9B552C34;                     // type:UINT.0
};

struct _0x7463064E
{
	enum rage__InputType             Axis;                            // type:ENUM.32BIT
	enum rage__InputType             Negative;                        // type:ENUM.32BIT
	enum rage__InputType             Positive;                        // type:ENUM.32BIT
};

struct _0x747EB8EF
{
	string                           _0x268826BC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           color1;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7484D70F
{
	float                            _0x72E0DACA;                     // type:FLOAT.0
	float                            _0x863534F7;                     // type:FLOAT.0
	float                            _0xF0A55C92;                     // type:FLOAT.0
};

struct _0x748CAB7E
{
	float                            _0x13B348A1;                     // type:FLOAT.0
	float                            _0xD910C0E6;                     // type:FLOAT.0
	float                            _0xB93463C0;                     // type:FLOAT.0
	float                            _0x9DD5E67B;                     // type:FLOAT.0
	float                            _0x56F5AD33;                     // type:FLOAT.2
	float                            _0x1C606E81;                     // type:FLOAT.2
	enum _0x6BCA108F                 _0x98422B55;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x2D8F1FA4;                     // type:ENUM.32BIT
};

struct _0x749C9159
{
	array<struct _0x27DFF31E>        Verts;                           // type:ARRAY.ATARRAY
	int                              ID;                              // type:INT.0
	string                           Description;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             WasSimActive;                    // type:BOOL.0
};

struct _0x74AFF685 : _0xD94B0C5B
{
};

struct _0x74B4F76A
{
	bitset<enum _0x2904113C>         Flags;                           // type:BITSET.32BIT
	array<struct _0x844CF9E6>        IgnoreBasedOnHistory;            // type:ARRAY.ATARRAY
	array<struct _0xF39D1C3A>        RemoveInHistory;                 // type:ARRAY.ATARRAY
};

struct _0x74B5BD0E : _0x6396B884
{
};

struct _0x74CEE766
{
	string                           GroupA;                          // type:STRING.ATNONFINALHASHSTRING
	string                           GroupB;                          // type:STRING.ATNONFINALHASHSTRING
	struct _0x9BA03725               Tolerances;                      // type:STRUCT.STRUCTURE
};

struct _0x74E2DEDB
{
	string                              _0x7EFFBD94;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0xDADCC046>     MotionTypes;                     // type:MAP.ATBINARYMAP
	map<string, string>                 _0xB6DDDB6A;                     // type:MAP.ATBINARYMAP
};

struct _0x74E68873 : _0xF70F21F5
{
};

struct _0x74EB5104 : _0x1054F746
{
};

struct _0x74ED0F89 : _0x5FC8967C
{
	string                           _0x16F05454;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x24749343               clip;                            // type:STRUCT.STRUCTURE
};

struct _0x74F3FBCD : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	uint64                           minimum;                         // type:UINT64.0
	uint64                           maximum;                         // type:UINT64.0
	uint64                           default;                         // type:UINT64.0
};

struct _0x74FBD3D6
{
	enum _0xECF13885                 level;                           // type:ENUM.32BIT
	struct _0x444B7F55               collection;                      // type:STRUCT.STRUCTURE
};

struct _0x751CE4CB : _0x1FB1BCEA
{
};

struct _0x7521AF70 : CTuning
{
	float                            _0x853FD966;                     // type:FLOAT.0
	float                            StruggleTime;                    // type:FLOAT.0
	float                            _0xEC1A9607;                     // type:FLOAT.0
	float                            _0x1485244B;                     // type:FLOAT.0
	float                            _0xEB27F24E;                     // type:FLOAT.0
	uint                             _0x2D32DD0C;                     // type:UINT.0
	string                           _0x9441A583;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3898A037;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4687E759;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7130BAEE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x362A9CCA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE51036DB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1E7442E8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x75275B45
{
	array<struct _0x191C87F6>        Rows;                            // type:ARRAY.ATARRAY
};

struct _0x752EDA51 : CAICondition
{
	string                           Motion;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7531BC41 : _0x857163E6
{
};

struct _0x7535FFBE
{
	string                                    _0x65C3ECAA;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x764AA576                        _0x970789B5;                     // type:STRUCT.STRUCTURE
	struct _0x764AA576                        _0xEAF59B37;                     // type:STRUCT.POINTER
	struct _0x94BD6AEA                        _0x9F2FE162;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x94BD6AEA>           _0x4FE676A4;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x94BD6AEA>           _0x80C0439F;                     // type:MAP.ATBINARYMAP
	struct _0x0BBA48C1                        WeaponSet;                       // type:STRUCT.POINTER
	map<string, bitset<enum _0x23FFDA05>>     _0xC71B1D69;                     // type:MAP.ATBINARYMAP
	bool                                      _0x574CD8DA;                     // type:BOOL.0
};

struct _0x753F2E06 : CAICondition
{
};

struct _0x755A5081 : _0x3AB6499E
{
	float                            _0xA493009B;                     // type:FLOAT.0
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
	float                            _0x63BC1B81;                     // type:FLOAT.0
	float                            _0xAC97DE7F;                     // type:FLOAT.0
	float                            _0x2F41EA93;                     // type:FLOAT.0
	float                            _0x52FB9273;                     // type:FLOAT.0
	float                            _0x03A5C48E;                     // type:FLOAT.0
	float                            _0xC254378B;                     // type:FLOAT.0
	float                            _0x09B163CA;                     // type:FLOAT.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
	bool                             _0x9E662A0C;                     // type:BOOL.0
	bool                             _0xA556DB9A;                     // type:BOOL.0
	bool                             _0x95EC6259;                     // type:BOOL.0
	bool                             _0x8298B409;                     // type:BOOL.0
};

struct _0x756B4356
{
	bool                             _0xE86735F2;                     // type:BOOL.0
	uchar                            _0xB08F4F08;                     // type:UCHAR.0
	uchar                            _0x1B7F72CF;                     // type:UCHAR.0
	uchar                            _0x7447835D;                     // type:UCHAR.0
	uchar                            _0x89CA9C7F;                     // type:UCHAR.0
	uchar                            _0xB88CA407;                     // type:UCHAR.0
	uchar                            _0x40645943;                     // type:UCHAR.0
	float                            _0xC2DE4AFB;                     // type:FLOAT.0
	float                            _0xDDBF9A99;                     // type:FLOAT.0
	float                            _0x68B1BC4B;                     // type:FLOAT.0
	float                            _0xC89DBCEA;                     // type:FLOAT.0
	float                            _0xA522B6CF;                     // type:FLOAT.0
	float                            lightFalloffMax;                 // type:FLOAT.0
};

struct _0x756FE709 : _0x2F7DA38D
{
	matrix34V                        _0x87542FFC;                     // type:MAT34V.0
	float                            radius;                          // type:FLOAT.0
	enum _0x76187512                 modifierType;                    // type:ENUM.32BIT
	bitset<enum _0xDC3B7A2A>         _0xD14E5B27;                     // type:BITSET.32BIT
};

struct _0x7571DF83
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	bool                             _0x97C79641;                     // type:BOOL.0
};

struct _0x757B2677 : CTuning
{
	float                            TimeBetweenSpawnAttempts;        // type:FLOAT.0
};

struct _0x757DD48E : _0xA0D527C4
{
	uint64                           _0xC407AF64;                     // type:UINT64.0
	bool                             _0xC785985C;                     // type:BOOL.0
	bool                             _0x59C3481E;                     // type:BOOL.0
};

struct _0x758CC718 : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	enum _0x1F473B7C                 _0x40DE184A;                     // type:ENUM.32BIT
};

struct _0x75A967D5
{
};

struct _0x75B579EF
{
	string                           _0x8F3CDACB;                     // type:STRING.ATNSHASHSTRING
};

struct _0x75C87542
{
	map<string, struct CExtensionDefDoor>     Map;                             // type:MAP.ATMAP
};

struct _0x75CF5062
{
	uint                             TempLifeTimeLockAfterBreaking;   // type:UINT.0
	uint                             TempLifeTimePickups;             // type:UINT.0
};

struct _0x75D3CFBE : _0xD4E651AE
{
};

struct _0x75DB3CAB
{
	string                           Name;                            // type:STRING.ATFINALHASHSTRING
	array<string, 6>                 Actions;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0x75DC0EA0
{
	map<string, struct _0x096A6916>     Templates;                       // type:MAP.ATBINARYMAP
};

struct _0x75EA1CDF : _0x0A510DA9
{
};

struct _0x760E4E0B
{
	string                           RandomEventTypeName;             // type:STRING.ATNONFINALHASHSTRING
	float                            RandomEventTimeIntervalMin;      // type:FLOAT.0
	float                            RandomEventTimeIntervalMax;      // type:FLOAT.0
	float                            DeltaScaleWhenPlayerStationary;  // type:FLOAT.0
};

struct _0x7611035D
{
	float                            _0x6B81D771;                     // type:FLOAT.0
	float                            _0x177A0F29;                     // type:FLOAT.0
	float                            _0xFF442415;                     // type:FLOAT.0
	float                            _0x8809DCB7;                     // type:FLOAT.0
	float                            _0x71B08E24;                     // type:FLOAT.0
	float                            _0x0C5403D2;                     // type:FLOAT.0
	float                            _0xBFDE647A;                     // type:FLOAT.0
	float                            _0x28C33730;                     // type:FLOAT.0
	float                            _0x6522E696;                     // type:FLOAT.0
	float                            _0x9864B1AB;                     // type:FLOAT.0
	float                            _0x573DD8CB;                     // type:FLOAT.0
	float                            _0x83CBEF75;                     // type:FLOAT.0
	float                            _0x8E869378;                     // type:FLOAT.0
	float                            _0x977DA05F;                     // type:FLOAT.0
	float                            _0xABC2F0F2;                     // type:FLOAT.0
	float                            _0xE4C82D24;                     // type:FLOAT.0
	float                            _0x27BE6FDA;                     // type:FLOAT.0
	float                            _0x402928EA;                     // type:FLOAT.0
	uint                             _0xAB12E7E6;                     // type:UINT.0
	uint                             _0xA7E0401A;                     // type:UINT.0
	float                            _0xCA1DB57B;                     // type:FLOAT.0
	uint                             _0x5C78F41F;                     // type:UINT.0
	uint                             _0xDD9A7E4F;                     // type:UINT.0
	float                            _0x54AD1E1C;                     // type:FLOAT.0
	float                            _0xEF5A3244;                     // type:FLOAT.0
	float                            _0xE41E1FA5;                     // type:FLOAT.0
	float                            _0x371C2A09;                     // type:FLOAT.0
	float                            _0xAE228A27;                     // type:FLOAT.0
	float                            _0x3C0B0DE1;                     // type:FLOAT.0
	float                            _0x83FDA271;                     // type:FLOAT.0
	uint                             _0xA121774F;                     // type:UINT.0
	float                            _0x8FEF679F;                     // type:FLOAT.0
	float                            _0xA195121F;                     // type:FLOAT.0
	float                            _0x7FA5094A;                     // type:FLOAT.0
	float                            _0x20289AC3;                     // type:FLOAT.0
	float                            _0xC73F7A57;                     // type:FLOAT.0
	float                            _0xE2608C17;                     // type:FLOAT.0
	float                            _0x80075A58;                     // type:FLOAT.0
};

struct _0x7620EEC9 : CAICondition
{
	enum _0x6316D090                 _0xFB02769A;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 AnimalPed;                       // type:ENUM.32BIT
};

struct _0x7622C7F9 : _0x09C03B78
{
	enum _0xEF937F41                 _0xD1C0D432;                     // type:ENUM.32BIT
};

struct _0x7628D401 : _0x3E7AB376
{
	enum _0xBD974B10                 Type;                            // type:ENUM.32BIT
};

struct _0x7639E9E7
{
	bool                             _0x868C9D65;                     // type:BOOL.0
	bool                             _0x3AC0041D;                     // type:BOOL.0
	uint                             _0x52CD3233;                     // type:UINT.0
	float                            _0xBCC36A40;                     // type:FLOAT.0
	float                            _0xA4D75D63;                     // type:FLOAT.0
	float                            _0xF313B637;                     // type:FLOAT.0
	string                           _0xBD8B0447;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0x50903DD7;                     // type:INT.0
	float                            _0xF62E1488;                     // type:FLOAT.0
	float                            _0x98C4CCDF;                     // type:FLOAT.0
	float                            _0xFD67E0FD;                     // type:FLOAT.0
	float                            _0x98291B5D;                     // type:FLOAT.0
	float                            _0x8BB99AB2;                     // type:FLOAT.0
	float                            _0xA5BF5794;                     // type:FLOAT.0
	string                           _0xAD8714BF;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x5A515861;                     // type:BOOL.0
};

struct _0x764AA576
{
	float                            _0xAB540DFF;                     // type:FLOAT.0
	float                            BlendInDuration;                 // type:FLOAT.0
	enum _0x6BCA108F                 _0x9D34B66C;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x1F6A5AAA;                     // type:ENUM.32BIT
};

struct _0x768B6279 : _0xC286EBD7
{
};

struct _0x768E52D6
{
	array<struct _0x27FA6302>        _0x2E4EC89E;                     // type:ARRAY.ATARRAY
	array<struct _0xFB927201>        _0xE2162D24;                     // type:ARRAY.ATARRAY
};

struct _0x76AAF4BB : CTuning
{
	struct _0xB112E779               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x76DABCC2 : _0x22B199F9
{
};

struct _0x76F13DAD : uiSelectableFlowControlBehavior
{
	struct _0x4A7AD954               _0xD688880E;                     // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               SlotIndex;                       // type:STRUCT.STRUCTURE
};

struct _0x770F82BD : _0xAF24E56C
{
};

struct _0x77128A18 : _0x2F7DA38D
{
	struct _0xED16C5B0               ped;                             // type:STRUCT.STRUCTURE
	struct _0xED16C5B0               _0xC8918CE1;                     // type:STRUCT.STRUCTURE
	struct _0x8D5E1429               _0xBB5CE721;                     // type:STRUCT.STRUCTURE
	string                           weaponHash;                      // type:STRING.ATNONFINALHASHSTRING
	enum _0x8C9EBA7A                 attachPoint;                     // type:ENUM.32BIT
	enum _0xDC94E673                 action;                          // type:ENUM.32BIT
	bool                             _0x5A52924D;                     // type:BOOL.0
	bool                             _0xF8FA7771;                     // type:BOOL.0
	bool                             _0x7BBD1736;                     // type:BOOL.0
};

struct _0x77145C7D
{
	array<struct _0x0B6E5F27, 9>     Weights;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0x771536A5 : _0x2D57BE23
{
	bitset<enum _0xAD9EC051>         Flags;                           // type:BITSET.32BIT
};

struct _0x771E3577
{
	uint                             Key;                             // type:UINT.0
	array<struct _0x892CF74F>        PathNodeChildList;               // type:ARRAY.ATARRAY
};

struct _0x7734FE20 : _0xFB927201
{
	array<string>                    _0x84A81283;                     // type:ARRAY.ATARRAY
};

struct _0x7741A79C
{
	bool                             ShouldApply;                     // type:BOOL.0
	uint                             MaxDurationToTrackVehicles;      // type:UINT.0
	float                            DistanceToTestDownForVehiclesToReject; // type:FLOAT.0
};

struct _0x774BFB16
{
	string                           _0xFAFD3124;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x02346500;                     // type:FLOAT.0
	string                           _0x89FF8E4E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x14E6273A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x93993171;                     // type:FLOAT.0
	string                           _0x4AD194F5;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x7EF6937F;                     // type:FLOAT.0
};

struct _0x774C1614 : CTuning
{
	struct _0x8B772808               _0x07D63DEB;                     // type:STRUCT.STRUCTURE
	struct _0x8B772808               _0x59D768AD;                     // type:STRUCT.STRUCTURE
	struct _0xA0A8509E               _0xA2230D70;                     // type:STRUCT.STRUCTURE
	struct _0xA0A8509E               _0x98D775A7;                     // type:STRUCT.STRUCTURE
	struct _0xCCC54FC0               _0x7F9FC944;                     // type:STRUCT.STRUCTURE
	struct _0xCCC54FC0               _0x8A3B86D2;                     // type:STRUCT.STRUCTURE
	struct _0x86C85081               _0xD44097F9;                     // type:STRUCT.STRUCTURE
	struct _0x86C85081               _0x80850EE0;                     // type:STRUCT.STRUCTURE
	struct _0x38872D1B               _0x94AF804D;                     // type:STRUCT.STRUCTURE
	struct _0x38872D1B               _0x3B0DA382;                     // type:STRUCT.STRUCTURE
	struct _0xC01A4FDC               _0x2541B0B9;                     // type:STRUCT.STRUCTURE
	struct _0xC01A4FDC               _0xEFFD1845;                     // type:STRUCT.STRUCTURE
	struct _0x66EFD902               _0x43B1CDFD;                     // type:STRUCT.STRUCTURE
	float                            _0xA8FEB7EF;                     // type:FLOAT.0
};

struct _0x77610B54 : camBaseDirectorMetadata
{
	string                           _0x3C8AB6BC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA3E9D158;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCEB0CAEE;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x777A46D6
{
	int                              ArchiveCount;                    // type:INT.0
	int                              _0xEC1F6622;                     // type:INT.0
};

struct _0x778E4582
{
	float                            BlendOutDuration;                // type:FLOAT.0
	float                            AimingBlendOutDuration;          // type:FLOAT.0
};

struct _0x779794D8 : UIContainer
{
};

struct _0x779C291B : _0xAE436053
{
	vec4V                            _0xAE6CBD6D;                     // type:VEC4V.0
	scalarV                          _0x214AAB84;                     // type:SCALARV.0
};

struct _0x77A3CA98
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x48E15851                 _0x5808401C;                     // type:ENUM.32BIT
	string                           LocText;                         // type:STRING.ATNONFINALHASHSTRING
	struct _0xDC6D47C7               StatValue;                       // type:STRUCT.POINTER
	struct _0x7AD303BC               _0x9D791FE6;                     // type:STRUCT.POINTER
	struct _0xC509663E               _0xC5CC2C91;                     // type:STRUCT.POINTER
};

struct _0x77A65ED6
{
	array<struct _0xA3560B9E>        Probes;                          // type:ARRAY.ATARRAY
	array<struct _0x5840A570>        Groups;                          // type:ARRAY.ATARRAY
	array<struct _0x74CEE766>        GroupTolerances;                 // type:ARRAY.ATARRAY
	float                            MaxZDiff;                        // type:FLOAT.0
	float                            MinNormalDot;                    // type:FLOAT.0
};

struct _0x77B42CA9 : _0x1054F746
{
};

struct _0x77BAFC18 : _0x3AB6499E
{
	string                           _0x3ECD5B42;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x2316B014>        _0x644883FF;                     // type:ARRAY.ATARRAY
	struct _0xDD70AFAD               _0xA5611572;                     // type:STRUCT.STRUCTURE
	float                            _0xE985F33B;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x0457B25A;                     // type:FLOAT.0
	float                            _0x8704E875;                     // type:FLOAT.0
	float                            _0xF5C87162;                     // type:FLOAT.0
	string                           _0xE8F7661F;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x290B7022               _0x3CAE489C;                     // type:STRUCT.STRUCTURE
	string                           _0x4960070E;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x290B7022               _0xF1AC0053;                     // type:STRUCT.STRUCTURE
	struct _0xFFBEDA52               _0x1EEE7FE1;                     // type:STRUCT.STRUCTURE
	string                           _0x17F357F5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0837292C;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xDD70AFAD               _0x1AE9F02A;                     // type:STRUCT.STRUCTURE
	struct _0x290B7022               _0x2351B46E;                     // type:STRUCT.STRUCTURE
	struct _0x074646AA               _0x3D90279A;                     // type:STRUCT.STRUCTURE
	float                            _0xD220F5C9;                     // type:FLOAT.0
	string                           _0x78F50BA6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2C957C4E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4D2CCABA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x150C7E8B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x07BD9F21;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DofSettings;                     // type:STRING.ATNONFINALHASHSTRING
	vec2                             _0x9041B90E;                     // type:VECTOR2.0
	float                            _0x39897691;                     // type:FLOAT.0
	float                            _0x72523D6F;                     // type:FLOAT.0
	float                            _0x31C3A75F;                     // type:FLOAT.0
	float                            _0x0AF3BE36;                     // type:FLOAT.0
	float                            _0xDD77A187;                     // type:FLOAT.0
	float                            _0x4FA6CD4E;                     // type:FLOAT.0
	float                            _0xD4E3F16D;                     // type:FLOAT.0
	struct _0x33C328EA               _0x37ACF0E3;                     // type:STRUCT.STRUCTURE
	string                           _0x803CFD0A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x77C7BD8D : rage__phBound
{
};

struct _0x77CA3522
{
	string                           Context;                         // type:STRING.ATPARTIALHASHVALUE
	int                              iVariationOverride;              // type:INT.0
	int                              iPreDelayStartMS;                // type:INT.0
	bitset<enum _0x07B34946>         Flags;                           // type:BITSET.32BIT
	string                           InteractionSpeechType;           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x77D474BD : _0x2F7DA38D
{
	struct _0x24749343                              clip;                            // type:STRUCT.STRUCTURE
	bitset<enum eMovementTransitionHelperFlags>     _0x0466501F;                     // type:BITSET.32BIT
	bitset<enum eIkControlFlags>                    _0xEFECA458;                     // type:BITSET.32BIT
	bitset<enum _0xCE24B546>                        _0xBD916EA6;                     // type:BITSET.32BIT
	struct _0xE19E0658                              _0x03EFD81F;                     // type:STRUCT.POINTER
	string                                          _0xCF7629F7;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                            _0x3D52FE70;                     // type:BOOL.0
	bool                                            DisableCollision;                // type:BOOL.0
	bool                                            _0x46D81EF7;                     // type:BOOL.0
	enum _0x5FF9C610                                _0xE2C50156;                     // type:ENUM.32BIT
	enum _0xA43D08F1                                _0x4818D683;                     // type:ENUM.32BIT
	float                                           _0x2CB4CD95;                     // type:FLOAT.0
	float                                           _0x1E4F3DD3;                     // type:FLOAT.0
	float                                           _0x11D372C8;                     // type:FLOAT.0
	float                                           _0xC4B73095;                     // type:FLOAT.0
	float                                           _0x6B2E466B;                     // type:FLOAT.0
};

struct _0x77DE7E16
{
	string                           InteractType;                    // type:STRING.ATNONFINALHASHSTRING
	string                           AltInteractType;                 // type:STRING.ATNONFINALHASHSTRING
};

struct _0x77E5CEF4
{
	string                           name;                            // type:STRING.ATSTRING
	string                           archetypeName;                   // type:STRING.ATSTRING
	vec3                             position;                        // type:VECTOR3.0
	float                            heading;                         // type:FLOAT.0
	uint                             _0x9A80B709;                     // type:UINT.0
};

struct _0x77F3653E
{
	string                           _0x90097267;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6E3A01BF;                     // type:FLOAT.0
	bool                             Disable;                         // type:BOOL.0
	bool                             _0x3378AFD0;                     // type:BOOL.0
	bool                             _0x1EC687E6;                     // type:BOOL.0
};

struct _0x77FAF6B2 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x77FE2ED2
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    Actions;                         // type:ARRAY.ATARRAY
	array<string>                    AllowedActions;                  // type:ARRAY.ATARRAY
	array<string>                    DisallowedActions;               // type:ARRAY.ATARRAY
};

struct _0x78006B48
{
	bool                             ShouldApplyBuoyancy;             // type:BOOL.0
	uint                             MinDelayBetweenBuoyancyStateChanges; // type:UINT.0
	uint                             MinDelayOnSubmerging;            // type:UINT.0
	uint                             MinDelayOnSurfacing;             // type:UINT.0
	uint                             MinTimeSpentSwimmingToRespectMotionTask; // type:UINT.0
	float                            MaxAttachParentDepthUnderWaterToRemainBuoyant; // type:FLOAT.0
	float                            MaxAttachParentDepthUnderWaterToRemainBuoyantOut; // type:FLOAT.0
	float                            MaxCollisionFallBackBlendLevelToForceUnderWater; // type:FLOAT.0
	bool                             ShouldSetBuoyantWhenAttachParentNotFullySubmerged; // type:BOOL.0
};

struct _0x7812F67E : _0x0A698250
{
	int                              Divisor;                         // type:INT.0
};

struct _0x781C9010
{
	array<string>                    _0x105FA579;                     // type:ARRAY.ATARRAY
	string                           _0x96FA3EDD;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x568D9622;                     // type:FLOAT.0
	float                            _0x561600DE;                     // type:FLOAT.0
	float                            _0x67908B56;                     // type:FLOAT.0
	float                            _0x94DF3765;                     // type:FLOAT.0
	float                            _0xC8F7F016;                     // type:FLOAT.0
	float                            _0x0502CA59;                     // type:FLOAT.0
	float                            _0xBF97D63A;                     // type:FLOAT.0
	float                            _0xCA8E5B7D;                     // type:FLOAT.0
	struct _0xBF2BD132               _0xC978D53A;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x8ADDF98D;                     // type:STRUCT.STRUCTURE
};

struct _0x7827BE5A
{
	string                           IntroClipId;                     // type:STRING.ATNONFINALHASHSTRING
	string                           PullPinClipId;                   // type:STRING.ATNONFINALHASHSTRING
	string                           BaseClipId;                      // type:STRING.ATNONFINALHASHSTRING
	string                           ThrowLongClipId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ThrowShortClipId;                // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x5CEFF047>         Flags;                           // type:BITSET.32BIT
};

struct _0x7828BFC8 : _0xB88D6BEE
{
	struct _0x85317215               StartValue;                      // type:STRUCT.STRUCTURE
	struct _0x85317215               EndValue;                        // type:STRUCT.STRUCTURE
	bool                             OffsetTween;                     // type:BOOL.0
};

struct _0x78334E1A
{
	array<struct _0x7E6E9DAF>        Probes;                          // type:ARRAY.ATARRAY
	array<struct _0x4470E8D8>        TargetExcludeBones;              // type:ARRAY.ATARRAY
	float                            AdditionalZFromRootBoneFallback; // type:FLOAT.0
};

struct _0x78503EAE
{
	map<string, vec4V>               Map;                             // type:MAP.ATBINARYMAP
};

struct _0x785590F4 : CTuning
{
	string                           _0xF33570C8;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xD2F9E2C2;                     // type:FLOAT.0
	float                            _0x238AD37C;                     // type:FLOAT.0
};

struct _0x786CE122 : UIBehavior
{
	struct _0x9B79B490               _0x14ADCD34;                     // type:STRUCT.STRUCTURE
};

struct _0x78710AD0
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x29A23C7A>        _0x9F685CFB;                     // type:ARRAY.ATARRAY
};

struct _0x788E069A : _0xDC10377E
{
	struct _0x0D9F5312               _0xEC640783;                     // type:STRUCT.STRUCTURE
	struct _0x0D9F5312               _0x22E1A2DC;                     // type:STRUCT.STRUCTURE
	string                           LockOnEnvelopeRef;               // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB8E9EB09;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             MinBlendDurationForInitialLockOn; // type:UINT.0
	uint                             MaxBlendDurationForInitialLockOn; // type:UINT.0
	uint                             MinBlendDurationForLockOnSwitch; // type:UINT.0
	uint                             MaxBlendDurationForLockOnSwitch; // type:UINT.0
	uint                             _0xEBE9A859;                     // type:UINT.0
	uint                             _0x4D3433DC;                     // type:UINT.0
	float                            MinDistanceForLockOn;            // type:FLOAT.0
	float                            MinDistanceForFineAimScaling;    // type:FLOAT.0
	float                            MaxDistanceForFineAimScaling;    // type:FLOAT.0
	float                            MaxAngleDeltaForLockOnSwitchBlendScaling; // type:FLOAT.0
	float                            _0xE143EDFF;                     // type:FLOAT.0
	float                            _0x062F67EA;                     // type:FLOAT.0
	float                            _0x3BCAF76C;                     // type:FLOAT.0
	bool                             _0xAE52D947;                     // type:BOOL.0
	bool                             ShouldValidateLockOnTargetPosition; // type:BOOL.0
	bool                             _0x5C3E1616;                     // type:BOOL.0
	float                            _0x6134E1B8;                     // type:FLOAT.0
	float                            _0x7C6E0426;                     // type:FLOAT.0
};

struct _0x78902025
{
	struct _0x4667CE00               Situations;                      // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               AutomobileSpeedModifier;         // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               HeliSpeedModifier;               // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               MountSpeedModifier;              // type:STRUCT.STRUCTURE
};

struct _0x7891D816
{
	array<uint, 3>                   IndicesBeforeRemap;              // type:ARRAY.MEMBER
	array<uint, 3>                   Indices;                         // type:ARRAY.MEMBER
	array<vec2V, 3>                  Vertices;                        // type:ARRAY.MEMBER
};

struct _0x78970E5F
{
	int                              TranscodingSmallObjectBuffer;    // type:INT.0
	int                              TranscodingSmallObjectMaxPointers; // type:INT.0
	int                              TranscodingBuffer;               // type:INT.0
	int                              TranscodingMaxPointers;          // type:INT.0
};

struct _0x78BA7957 : _0x8A0DC979
{
};

struct _0x78CB196E
{
	map<string, struct _0x8A46F044>     WeaponData;                      // type:MAP.ATBINARYMAP
};

struct _0x78D1BB5F : _0xFB927201
{
	array<string>                    _0x84A81283;                     // type:ARRAY.ATARRAY
};

struct _0x78D40FA2 : CTuning
{
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	float                            _0x50BD451E;                     // type:FLOAT.0
	float                            _0xFF2DFE4E;                     // type:FLOAT.0
	float                            _0xC594A951;                     // type:FLOAT.0
};

struct _0x78E64982 : camBaseObjectMetadata
{
	float                            IdealHeadingOffsetForLimiting;   // type:FLOAT.0
	float                            _0xA79C296A;                     // type:FLOAT.0
	float                            _0x65A51D6C;                     // type:FLOAT.0
	float                            _0xF006ECCA;                     // type:FLOAT.0
	float                            _0xCCB6BFE8;                     // type:FLOAT.0
	float                            _0xE0FEAD56;                     // type:FLOAT.0
	float                            _0x5D2DE938;                     // type:FLOAT.0
	float                            _0xDB1C61BC;                     // type:FLOAT.0
	int                              _0xFB687EDC;                     // type:INT.0
	int                              _0x7E2FE2E2;                     // type:INT.0
	bool                             _0xE363C2DE;                     // type:BOOL.0
	bool                             _0xB749D264;                     // type:BOOL.0
	bool                             _0x04BACEAB;                     // type:BOOL.0
};

struct _0x78E82814
{
	array<enum _0xE87D0F28>          InterfaceTypes;                  // type:ARRAY.ATARRAY
	array<struct _0x8B4F5FE6>        StateChanges;                    // type:ARRAY.ATARRAY
	bool                             IsAutoRepeatEnabled;             // type:BOOL.0
};

struct _0x78EA5F79 : CTuning
{
	float                            _0x9BD42749;                     // type:FLOAT.0
};

struct _0x78EC956A
{
	string                           PromptData;                      // type:STRING.ATNONFINALHASHSTRING
	string                           AnimData;                        // type:STRING.ATNONFINALHASHSTRING
	string                           LockData;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x78EDBE9B : _0xEBB02FC9
{
};

struct _0x78EED109
{
	struct _0x77CA3522               Initial;                         // type:STRUCT.STRUCTURE
	struct _0x77CA3522               Response;                        // type:STRUCT.STRUCTURE
};

struct _0x78FBE78C
{
	struct void                      Health;                          // type:STRUCT.EXTERNAL_NAMED
	struct void                      Stamina;                         // type:STRUCT.EXTERNAL_NAMED
	struct void                      SpecialAbility;                  // type:STRUCT.EXTERNAL_NAMED
};

struct _0x790812E7 : _0x1054F746
{
};

struct _0x791F5B50 : _0x8A0DC979
{
	enum _0x5B754EBB                 Context;                         // type:ENUM.32BIT
	bool                             _0x9652BB62;                     // type:BOOL.0
};

struct _0x79216895
{
	array<struct _0xA7D52E3B>        EscapeActions;                   // type:ARRAY.ATARRAY
};

struct _0x79276CE7 : CTuning
{
	struct _0x7343B4F4               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x7927E2E9
{
	array<string>                    Files;                           // type:ARRAY.ATARRAY
};

struct _0x793386EE
{
	enum _0xDCE19B28                 DirectInputSource;               // type:ENUM.32BIT
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            Resting;                         // type:FLOAT.0
	float                            InnerDeadzone;                   // type:FLOAT.0
	float                            OuterDeadzone;                   // type:FLOAT.0
};

struct _0x7969316A
{
	bool                             _0x32A05CA0;                     // type:BOOL.0
	bool                             _0x93C14B18;                     // type:BOOL.0
	bool                             _0xC33049C9;                     // type:BOOL.0
};

struct _0x797ABD16
{
	string                           modelHashName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x79828D42 : _0x6E1BB82A
{
};

struct _0x79828E75 : camCinematicContextMetadata
{
	uint                             _0xF283DE6F;                     // type:UINT.0
	uint                             _0x923DD2FB;                     // type:UINT.0
	uint                             _0x802D8AEC;                     // type:UINT.0
};

struct _0x79848C17
{
	bool                             Enabled;                         // type:BOOL.0
	enum _0x8A367FC5                 Stage;                           // type:ENUM.32BIT
	bool                             _0xFF28DF94;                     // type:BOOL.0
	float                            _0xD1D3C28A;                     // type:FLOAT.0
	bool                             _0x4572D77D;                     // type:BOOL.0
	enum _0x5796AC37                 _0x3B8210B4;                     // type:ENUM.32BIT
	bool                             _0xA5F1CA76;                     // type:BOOL.0
	struct _0xEDF9154C               _0xE85BFFC6;                     // type:STRUCT.STRUCTURE
	bool                             _0x310426EE;                     // type:BOOL.0
	bool                             _0xF9980E6C;                     // type:BOOL.0
	float                            _0x519776D9;                     // type:FLOAT.0
	float                            _0x32175735;                     // type:FLOAT.0
	uint                             _0xCC02E22B;                     // type:UINT.1
	bool                             _0x8A9A6E46;                     // type:BOOL.0
	bool                             _0x4273D1CB;                     // type:BOOL.0
	struct _0x7F466A94               _0x86714A73;                     // type:STRUCT.STRUCTURE
	bool                             _0xF3558EC0;                     // type:BOOL.0
	float                            _0x79A017C9;                     // type:FLOAT.0
};

struct _0x799E1061
{
	bool                             _0xC39A6005;                     // type:BOOL.0
	float                            _0x41092F66;                     // type:FLOAT.0
	float                            _0xA5EF85D9;                     // type:FLOAT.0
	float                            _0xC5A4F59F;                     // type:FLOAT.0
	float                            _0x29390DBD;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	bool                             _0x3AD90D40;                     // type:BOOL.0
	float                            _0x9CE9E0DB;                     // type:FLOAT.0
	float                            _0xBBF34C48;                     // type:FLOAT.0
};

struct _0x79A4DDCE
{
	float                            _0x65DF4003;                     // type:FLOAT.0
	float                            _0x79C2D12C;                     // type:FLOAT.0
};

struct _0x79F14140
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Parent;                          // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x476BC347>        Actions;                         // type:ARRAY.ATARRAY
};

struct _0x79FE5B9B
{
	uchar                            StartHour;                       // type:UCHAR.0
	uchar                            StartMinute;                     // type:UCHAR.0
	array<struct _0x572ABC01>        Priorities;                      // type:ARRAY.ATARRAY
};

struct _0x7A09E12C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7A0EA7A4
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            Period;                          // type:FLOAT.0
	float                            Constant;                        // type:FLOAT.0
	float                            Amplitude;                       // type:FLOAT.0
	float                            Value;                           // type:FLOAT.0
	bool                             SetValue;                        // type:BOOL.0
	bool                             _0xC2FE683A;                     // type:BOOL.0
	bool                             _0xE57629DE;                     // type:BOOL.0
	bool                             _0xB87D4973;                     // type:BOOL.0
	uint                             Milliseconds;                    // type:UINT.0
	bool                             Enabled;                         // type:BOOL.0
};

struct _0x7A28F0AE
{
	struct void                      EntryPointInfo;                  // type:STRUCT.EXTERNAL_NAMED
	struct void                      EntryPointAnimInfo;              // type:STRUCT.EXTERNAL_NAMED
};

struct _0x7A3DC8D1 : _0x2F7DA38D
{
	float                            _0x09FCB95D;                     // type:FLOAT.0
	float                            _0x3AF21F31;                     // type:FLOAT.0
};

struct _0x7A3ED03A : _0xC0749003
{
};

struct _0x7A55D0D8
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           type;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5BC823FE;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x998F7A60;                     // type:ARRAY.ATARRAY
};

struct _0x7A6BC5A2 : _0x9B440548
{
};

struct _0x7A7B8A9B : CTuning
{
	float                            _0xA6D1B1A6;                     // type:FLOAT.0
};

struct _0x7A8569BE
{
	string                           AnimInfoHash;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7A8EE6B4
{
	bitset<enum _0xC901751A>            Flags;                           // type:BITSET.32BIT
	map<string, struct _0xD7929B5C>     States;                          // type:MAP.ATBINARYMAP
	map<string, struct _0xC24F7386>     Reactions;                       // type:MAP.ATBINARYMAP
};

struct _0x7A934F16
{
};

struct _0x7A9366E5 : _0x0A510DA9
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x7AAA1BB1
{
	array<struct _0x1BA712A3>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0x7AB77DEF : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x7AB9BF71 : _0xBB7A0CAE
{
	string                           EventChannel;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             IncludeBindingContext;           // type:BOOL.0
	array<struct _0xD9E84323>        Parameter;                       // type:ARRAY.ATARRAY
};

struct _0x7AC28A3D
{
	float                            _0xE0CBAB70;                     // type:FLOAT.0
	float                            _0x5CDC779B;                     // type:FLOAT.0
	float                            _0x0A84ED89;                     // type:FLOAT.0
	float                            _0x86DF1464;                     // type:FLOAT.0
	float                            _0xDC407E4D;                     // type:FLOAT.0
	float                            _0x06B86627;                     // type:FLOAT.0
	float                            _0xB947C1E7;                     // type:FLOAT.0
	float                            _0x6E293FFF;                     // type:FLOAT.0
	float                            _0xCACA03FF;                     // type:FLOAT.0
	float                            _0x46F190E3;                     // type:FLOAT.0
	float                            _0xDCB63249;                     // type:FLOAT.0
	float                            _0x1F339C61;                     // type:FLOAT.0
	float                            _0x28C26461;                     // type:FLOAT.0
	float                            _0x075618B2;                     // type:FLOAT.0
	float                            _0x49FD2A94;                     // type:FLOAT.0
	float                            _0xC7249FDC;                     // type:FLOAT.0
	float                            _0x915BABD0;                     // type:FLOAT.0
	float                            _0x333AC53D;                     // type:FLOAT.0
	float                            _0xEE8901F9;                     // type:FLOAT.0
	float                            _0xF56A7C77;                     // type:FLOAT.0
	float                            _0x20C72412;                     // type:FLOAT.0
	float                            _0xFD8CF17E;                     // type:FLOAT.0
	float                            _0xF06C8A17;                     // type:FLOAT.0
	float                            _0x25E4723D;                     // type:FLOAT.0
	float                            _0xD27BC5EF;                     // type:FLOAT.0
	float                            _0xB4B5A53A;                     // type:FLOAT.0
	float                            _0x1CD67F41;                     // type:FLOAT.0
	float                            _0x59096CBC;                     // type:FLOAT.0
	float                            _0xAAAEB43B;                     // type:FLOAT.0
	float                            _0x8926F8AC;                     // type:FLOAT.0
	float                            _0xDF80B214;                     // type:FLOAT.0
	float                            _0x4C47D4EC;                     // type:FLOAT.0
	float                            _0xD9BDA668;                     // type:FLOAT.0
	float                            _0x6E53884A;                     // type:FLOAT.0
	float                            _0x0EDE3BF7;                     // type:FLOAT.0
	float                            _0x9A9F454E;                     // type:FLOAT.0
	float                            _0xA77D8367;                     // type:FLOAT.0
	float                            _0x92F5FDE4;                     // type:FLOAT.0
	float                            _0xBAFFC17B;                     // type:FLOAT.0
	float                            _0xF7847EAB;                     // type:FLOAT.0
	float                            _0x13729D38;                     // type:FLOAT.0
	float                            _0xFA5B7294;                     // type:FLOAT.0
	float                            _0x2321E466;                     // type:FLOAT.0
	float                            _0x917030CF;                     // type:FLOAT.0
	float                            _0x2334858F;                     // type:FLOAT.0
	float                            _0xE4C46C22;                     // type:FLOAT.0
	float                            _0x8C580711;                     // type:FLOAT.0
	float                            _0xEBFBDFD5;                     // type:FLOAT.0
	float                            _0x5387B3B6;                     // type:FLOAT.0
	float                            _0x239A8274;                     // type:FLOAT.0
	float                            _0x0B91F9B0;                     // type:FLOAT.0
	float                            _0xADF14FF8;                     // type:FLOAT.0
	float                            _0x2DF1DCCA;                     // type:FLOAT.0
	float                            _0x936B18FD;                     // type:FLOAT.0
	float                            _0x568BE27B;                     // type:FLOAT.0
	float                            _0xC9AE1E8C;                     // type:FLOAT.0
	float                            _0xAF4A3414;                     // type:FLOAT.0
	float                            _0xBBA2AC37;                     // type:FLOAT.0
	float                            _0x7D575E6A;                     // type:FLOAT.0
	float                            _0x03A3DEC9;                     // type:FLOAT.0
	float                            _0x0E46DE50;                     // type:FLOAT.0
	float                            _0x158CCE87;                     // type:FLOAT.0
	float                            _0x7023C7D0;                     // type:FLOAT.0
	float                            _0x6614AA6A;                     // type:FLOAT.0
	float                            _0x5A92154C;                     // type:FLOAT.0
	float                            _0xF6ED5072;                     // type:FLOAT.0
	float                            _0xC1DD2AC7;                     // type:FLOAT.0
	float                            _0x7CE3E7AB;                     // type:FLOAT.0
	float                            _0x478F6EF1;                     // type:FLOAT.0
	float                            _0x95F090C1;                     // type:FLOAT.0
	float                            _0x55226E60;                     // type:FLOAT.0
	float                            _0xC00C0132;                     // type:FLOAT.0
	float                            _0x7C4EF819;                     // type:FLOAT.0
	float                            _0x90849830;                     // type:FLOAT.0
	float                            _0x99F4D3DD;                     // type:FLOAT.0
	float                            _0x74F14366;                     // type:FLOAT.0
	float                            _0x5DD84B80;                     // type:FLOAT.0
	float                            _0x109245C8;                     // type:FLOAT.0
	float                            _0xC22B6132;                     // type:FLOAT.0
	float                            _0x67B680A7;                     // type:FLOAT.0
	float                            _0xA29FF22C;                     // type:FLOAT.0
	float                            _0x49B50111;                     // type:FLOAT.0
	float                            _0x39C8F653;                     // type:FLOAT.0
	float                            _0xC6047DCE;                     // type:FLOAT.0
	float                            _0x51FE78CF;                     // type:FLOAT.0
	float                            _0xCF961878;                     // type:FLOAT.0
	float                            _0xE78C5758;                     // type:FLOAT.0
	float                            _0xE9F0931D;                     // type:FLOAT.0
	float                            _0xFCA081C8;                     // type:FLOAT.0
	float                            _0x806F2603;                     // type:FLOAT.0
	float                            _0xB9D7E1C8;                     // type:FLOAT.0
	float                            _0xF42F13EB;                     // type:FLOAT.0
	float                            _0x3D76B0F1;                     // type:FLOAT.0
	float                            _0x33CFF1E3;                     // type:FLOAT.0
	float                            _0x18AB2EAF;                     // type:FLOAT.0
	float                            _0xD34114B2;                     // type:FLOAT.0
	float                            _0xDE4F5996;                     // type:FLOAT.0
	float                            _0x48B118D3;                     // type:FLOAT.0
	float                            _0x75E68EAB;                     // type:FLOAT.0
	float                            _0x4A112A70;                     // type:FLOAT.0
	float                            _0x73818F0F;                     // type:FLOAT.0
	float                            _0x7C7B2F59;                     // type:FLOAT.0
	float                            _0x10C82693;                     // type:FLOAT.0
	float                            _0x9C65CF3C;                     // type:FLOAT.0
	float                            _0x9FC04948;                     // type:FLOAT.0
	float                            _0x11EE1E94;                     // type:FLOAT.0
	float                            _0x6A320E3F;                     // type:FLOAT.0
	float                            _0x1EBB5140;                     // type:FLOAT.0
	float                            _0x5E7D00D3;                     // type:FLOAT.0
	float                            _0xEAB3AB32;                     // type:FLOAT.0
	float                            _0xA86FC6EA;                     // type:FLOAT.0
	float                            _0x04E45EA7;                     // type:FLOAT.0
	float                            _0xAE9B7444;                     // type:FLOAT.0
	float                            _0x052C2DE2;                     // type:FLOAT.0
	float                            _0x5815AA76;                     // type:FLOAT.0
	float                            _0x1705D930;                     // type:FLOAT.0
	float                            _0x4DC6D6E5;                     // type:FLOAT.0
	float                            _0x4254F335;                     // type:FLOAT.0
	float                            _0x20E6A7C0;                     // type:FLOAT.0
	float                            _0x461CD501;                     // type:FLOAT.0
	float                            _0x4D0AA839;                     // type:FLOAT.0
	float                            _0x9EC8953C;                     // type:FLOAT.0
	float                            _0xFFB2FA5A;                     // type:FLOAT.0
	float                            _0x2DFF3B7F;                     // type:FLOAT.0
	float                            _0x8E4147DD;                     // type:FLOAT.0
	float                            _0xFB88FF2D;                     // type:FLOAT.0
	float                            _0x64AF6554;                     // type:FLOAT.0
	float                            _0x051E2000;                     // type:FLOAT.0
	float                            _0x7122648D;                     // type:FLOAT.0
	float                            _0xBB98E463;                     // type:FLOAT.0
	float                            _0x018E5F38;                     // type:FLOAT.0
	float                            _0xAC6FD486;                     // type:FLOAT.0
	float                            _0x411C3CA0;                     // type:FLOAT.0
	float                            _0xCCD7AA8C;                     // type:FLOAT.0
	float                            _0xC9257F50;                     // type:FLOAT.0
	float                            _0x3E76E04A;                     // type:FLOAT.0
	float                            _0x9B4754E3;                     // type:FLOAT.0
	float                            _0x969E6F99;                     // type:FLOAT.0
	float                            _0x3D472C02;                     // type:FLOAT.0
	float                            _0xBCA494DD;                     // type:FLOAT.0
	float                            _0x100B6C00;                     // type:FLOAT.0
	float                            _0x749D245A;                     // type:FLOAT.0
	float                            _0x3C26FD2E;                     // type:FLOAT.0
	float                            _0x4EA0F278;                     // type:FLOAT.0
	float                            _0x91CAECEB;                     // type:FLOAT.0
	float                            _0xFB9EAA50;                     // type:FLOAT.0
	float                            _0xD2F559B8;                     // type:FLOAT.0
	float                            _0x05987FBC;                     // type:FLOAT.0
	float                            _0x21764982;                     // type:FLOAT.0
	float                            _0x5C4D6C28;                     // type:FLOAT.0
	float                            _0x993E670C;                     // type:FLOAT.0
	float                            _0xCF7A5383;                     // type:FLOAT.0
	float                            _0x8532BEF5;                     // type:FLOAT.0
	float                            _0x6ABF90A0;                     // type:FLOAT.0
	float                            _0x19FB28CF;                     // type:FLOAT.0
	float                            _0xFFEE6C42;                     // type:FLOAT.0
	float                            _0xA8462FA7;                     // type:FLOAT.0
	float                            _0xD757659D;                     // type:FLOAT.0
	float                            _0x6DD61751;                     // type:FLOAT.0
	float                            _0x559DC08D;                     // type:FLOAT.0
	float                            _0xD8D31596;                     // type:FLOAT.0
	float                            _0x9EDE9903;                     // type:FLOAT.0
	float                            _0xA4F6D041;                     // type:FLOAT.0
	float                            _0x49B74CE4;                     // type:FLOAT.0
	float                            _0x92653CCE;                     // type:FLOAT.0
	float                            _0xAD515780;                     // type:FLOAT.0
	float                            _0x6BF9B222;                     // type:FLOAT.0
	float                            _0xD6C55610;                     // type:FLOAT.0
};

struct _0x7ACCDCE0
{
	enum _0xBEEA6142                 WheelId;                         // type:ENUM.32BIT
	array<enum _0xBEEA6142, 4>       ValidIfIntactList;               // type:ARRAY.ATFIXEDARRAY
};

struct _0x7ACDBEC8
{
	string                           ModelNameHash;                   // type:STRING.ATNONFINALHASHSTRING
	uchar                            Priority;                        // type:UCHAR.0
};

struct _0x7AD303BC
{
	array<struct _0xCB2B86FA>        _0x7DD1B564;                     // type:ARRAY.ATARRAY
};

struct _0x7AF444B5 : _0x1FB1BCEA
{
};

struct _0x7AF95C3E : _0xAEA3A4DA
{
};

struct _0x7B0CF5C6
{
	float                            min;                             // type:FLOAT.0
	float                            max;                             // type:FLOAT.0
	float                            average;                         // type:FLOAT.0
	float                            std;                             // type:FLOAT.0
};

struct _0x7B0F0ABB : _0x8A0DC979
{
};

struct _0x7B24F97F : _0x3D93D240
{
};

struct _0x7B2608D0 : _0x2F7DA38D
{
};

struct _0x7B2C198D
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	enum _0xFCE09374                 Attitude;                        // type:ENUM.32BIT
};

struct _0x7B341543 : StatsGoalUIInfo
{
	string                           toastDescriptionLabel;           // type:STRING.ATNONFINALHASHSTRING
	string                           toastOnProgressDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           toastOnCompletionDescriptionFormatLabel; // type:STRING.ATNONFINALHASHSTRING
	string                           logDescriptionFormatLabel;       // type:STRING.ATNONFINALHASHSTRING
	string                           logDescriptionLabel;             // type:STRING.ATNONFINALHASHSTRING
	enum _0x0C21CCC9                 displayType;                     // type:ENUM.32BIT
	bool                             toastOnFirstProgress;            // type:BOOL.0
};

struct _0x7B51821B : _0x560C9F87
{
	string                           WaitLoopClip;                    // type:STRING.ATNONFINALHASHSTRING
	string                           WaitBlendOutSet;                 // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7B5D4A58
{
	uint                             hashKey;                         // type:UINT.0
	float                            minX;                            // type:FLOAT.0
	float                            minY;                            // type:FLOAT.0
	float                            minZ;                            // type:FLOAT.0
	float                            maxX;                            // type:FLOAT.0
	float                            maxY;                            // type:FLOAT.0
	float                            maxZ;                            // type:FLOAT.0
	uchar                            assetType;                       // type:UCHAR.0
};

struct _0x7B684AFD
{
	map<string, struct CNmTuningSet>     sets;                            // type:MAP.ATBINARYMAP
};

struct _0x7B6D4CCA
{
	float                            _0xC291BA8A;                     // type:FLOAT.0
	float                            _0x6B97F2EF;                     // type:FLOAT.0
	float                            MinMBR;                          // type:FLOAT.0
	float                            MaxMBR;                          // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x648F6613;                     // type:FLOAT.0
	float                            _0x9A99EEB1;                     // type:FLOAT.0
	float                            _0xF41811B7;                     // type:FLOAT.0
	float                            _0xF0C3A7C7;                     // type:FLOAT.0
	float                            _0xB7654986;                     // type:FLOAT.0
	float                            _0xC89889AD;                     // type:FLOAT.0
	float                            MinRelativeHeading;              // type:FLOAT.0
	float                            MaxRelativeHeading;              // type:FLOAT.0
	float                            _0x7FE4AE50;                     // type:FLOAT.0
	float                            _0xF33176B6;                     // type:FLOAT.0
	float                            _0x4784095D;                     // type:FLOAT.0
	float                            _0x5C6813F8;                     // type:FLOAT.0
	float                            _0xC279FE61;                     // type:FLOAT.0
	float                            _0xE5177222;                     // type:FLOAT.0
	uint                             _0xB11AF519;                     // type:UINT.0
	uint                             _0xA4053C44;                     // type:UINT.0
	uint                             _0xA91F4038;                     // type:UINT.0
	uint                             _0xCD835DEC;                     // type:UINT.0
	uint                             _0x8A742D5B;                     // type:UINT.0
	uint                             _0x8C2C6535;                     // type:UINT.0
	bool                             _0x62DF3BB5;                     // type:BOOL.0
	uint                             _0xEEC1CCDD;                     // type:UINT.0
	uint                             _0x576A49E3;                     // type:UINT.0
	float                            _0x1EBDCB95;                     // type:FLOAT.0
	uint                             _0x85D68A66;                     // type:UINT.0
	uint                             _0x8D0113CE;                     // type:UINT.0
	struct _0x6BB4CABC               _0x2CE464CC;                     // type:STRUCT.STRUCTURE
	struct _0x6BB4CABC               _0xA528E6E0;                     // type:STRUCT.STRUCTURE
};

struct _0x7B854238
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x61BABF2F>         Flags;                           // type:BITSET.32BIT
};

struct _0x7B893B93 : _0xBC5F7FDF
{
};

struct _0x7B9FC494
{
	array<struct _0x8B13CB08>        _0xD53B45D3;                     // type:ARRAY.ATARRAY
};

struct _0x7BB9CD06 : CAICondition
{
	enum _0x563FBCEA                 AnimalPed;                       // type:ENUM.32BIT
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	float                            _0xEED00DFF;                     // type:FLOAT.0
	bool                             AllowScenarioRadiusOverride;     // type:BOOL.0
	bool                             Base;                            // type:BOOL.0
};

struct _0x7BEF699E
{
	vec3V                            minExtents;                      // type:VEC3V.0
	vec3V                            maxExtents;                      // type:VEC3V.0
	vec4V                            rotation;                        // type:VEC4V.0
	vec3V                            centerOffset;                    // type:VEC3V.0
	vec3V                            _0x0ED751B9;                     // type:VEC3V.0
	uchar                            _0xB835B0FA;                     // type:UCHAR.0
	guid                             guid;                            // type:GUID._0xDF7EBE85
};

struct _0x7BF2E2C3 : CTuning
{
	uint                             _0xBD9116C9;                     // type:UINT.0
	uint                             _0xE8FA9B92;                     // type:UINT.0
	uint                             _0x9421CF6F;                     // type:UINT.0
	enum _0x6BCA108F                 _0x1669FAF0;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x2D18D662;                     // type:ENUM.32BIT
	float                            _0x2669BF51;                     // type:FLOAT.0
	float                            _0x846C9E54;                     // type:FLOAT.2
	uint                             _0xCC080CD7;                     // type:UINT.0
	uint                             _0x6C4C2F6A;                     // type:UINT.0
	float                            _0x7981524B;                     // type:FLOAT.0
	float                            _0x91B09997;                     // type:FLOAT.0
	uint                             _0x71A7C955;                     // type:UINT.0
	uint                             _0x39F03E44;                     // type:UINT.0
	float                            _0x63BDF789;                     // type:FLOAT.0
	float                            _0x954EC1E0;                     // type:FLOAT.0
	float                            _0x1AE6E040;                     // type:FLOAT.0
	uint                             _0xCE0BFE06;                     // type:UINT.0
	uint                             _0x448EB1AE;                     // type:UINT.0
	uint                             _0x4D76B860;                     // type:UINT.0
	float                            _0xD870D73F;                     // type:FLOAT.0
	float                            _0xD9F384D9;                     // type:FLOAT.0
	float                            _0xA8272E50;                     // type:FLOAT.0
	float                            _0xF5FC5C0B;                     // type:FLOAT.0
	float                            _0x8D3FEBB5;                     // type:FLOAT.0
	float                            _0xE194FC94;                     // type:FLOAT.0
	float                            _0x2CEB1B62;                     // type:FLOAT.0
	float                            _0x7C62C7CA;                     // type:FLOAT.0
	float                            _0xA2B8EAFB;                     // type:FLOAT.0
	uint                             _0x49645004;                     // type:UINT.0
	uint                             _0x4F4152FB;                     // type:UINT.0
	uint                             _0xE7437B6E;                     // type:UINT.0
	uint                             _0x4073148F;                     // type:UINT.0
	uint                             _0xEE3354F5;                     // type:UINT.0
	float                            _0xF859FE6E;                     // type:FLOAT.0
	float                            _0x5A3B9BAB;                     // type:FLOAT.0
	float                            _0x38904F84;                     // type:FLOAT.0
	float                            _0x98528822;                     // type:FLOAT.0
	float                            _0x810EE82D;                     // type:FLOAT.0
	float                            _0xC7CC5D0E;                     // type:FLOAT.0
	float                            _0xF60BDD0D;                     // type:FLOAT.2
	bool                             _0xBCE7357B;                     // type:BOOL.0
	uint                             _0x5593C86B;                     // type:UINT.0
	uint                             _0x48578BC9;                     // type:UINT.0
	uint                             _0x02040DA4;                     // type:UINT.0
	float                            _0x37A5C46B;                     // type:FLOAT.0
	uint                             _0xEFAD266B;                     // type:UINT.0
	float                            _0x5EB6830D;                     // type:FLOAT.0
	float                            _0xEF8D9777;                     // type:FLOAT.0
	float                            _0x93260005;                     // type:FLOAT.0
	float                            _0x16B2EBE5;                     // type:FLOAT.0
	float                            _0xBA392D4B;                     // type:FLOAT.0
	uint                             _0x196145F0;                     // type:UINT.0
	float                            _0xA32A7129;                     // type:FLOAT.0
	float                            _0x12893696;                     // type:FLOAT.2
	uint                             _0xDA65D92D;                     // type:UINT.0
};

struct _0x7BF8A210
{
	array<struct _0x209B042C>        cacheEntries;                    // type:ARRAY.ATARRAY
};

struct _0x7C09F0ED
{
	float                            Fov;                             // type:FLOAT.0
	float                            _0x271F3B1C;                     // type:FLOAT.0
	float                            _0x74776271;                     // type:FLOAT.0
	float                            IdleCmini;                       // type:FLOAT.0
	int                              _0xD4FA5865;                     // type:INT.0
};

struct _0x7C0B2E49 : CBaseSaveObject
{
	array<struct _0x3D36DEDA>        _0x5EA993A8;                     // type:ARRAY.ATARRAY
};

struct _0x7C1B142D
{
	float                            MaxDistanceToStartFromPursue;    // type:FLOAT.0
	float                            MinDotToStartFromPursue;         // type:FLOAT.0
	float                            MinSpeedLeewayToStartFromPursue; // type:FLOAT.0
	float                            MaxTargetSteerAngleToStartFromPursue; // type:FLOAT.0
	float                            MaxDistanceToContinueFromPursue; // type:FLOAT.0
	float                            MinDotToContinueFromPursue;      // type:FLOAT.0
	float                            MaxTimeInStateToContinueFromPursue; // type:FLOAT.0
	float                            MaxTargetSteerAngleToContinueFromPursue; // type:FLOAT.0
	float                            MinDelay;                        // type:FLOAT.0
	float                            MaxDelay;                        // type:FLOAT.0
	float                            WeightToRamFromPursue;           // type:FLOAT.0
	float                            WeightToBlockFromPursue;         // type:FLOAT.0
	float                            WeightToSpinOutFromPursue;       // type:FLOAT.0
	float                            WeightToPullAlongsideFromPursue; // type:FLOAT.0
};

struct _0x7C208B54
{
	string                           Description;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Root;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x463A30CB>        Lines;                           // type:ARRAY.ATARRAY
};

struct _0x7C2B8E30
{
	vec3                             Position;                        // type:VECTOR3.0
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Group;                           // type:STRING.ATNONFINALHASHSTRING
	bool                             CanReportOnMount;                // type:BOOL.0
	bool                             CanReportInVehicle;              // type:BOOL.0
	bool                             CanReportOnFoot;                 // type:BOOL.0
	bool                             Active;                          // type:BOOL.0
	bool                             MustBeInGuardZone;               // type:BOOL.0
	array<vec3V>                     GeneratedPoints;                 // type:ARRAY.ATARRAY
};

struct _0x7C2C0742
{
	string                           _0x2D9BD604;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE67973FB;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x0B3082E8;                     // type:FLOAT.0
	float                            _0x16CACE05;                     // type:FLOAT.0
	float                            _0xD7456DFC;                     // type:FLOAT.0
	float                            _0x2120DEAA;                     // type:FLOAT.0
	float                            _0x9EECFC5B;                     // type:FLOAT.0
	float                            _0x2E482CA2;                     // type:FLOAT.0
	float                            _0x473FFB25;                     // type:FLOAT.0
	float                            _0x69FDC3AB;                     // type:FLOAT.0
	bool                             _0x06DD740D;                     // type:BOOL.0
};

struct _0x7C34909F
{
	vec3V                             _0x52793CE9;                     // type:VEC3V.0
	array<uint, 10>                   _0xFD010587;                     // type:ARRAY.ATFIXEDARRAY
	array<struct _0xF57272CF, 10>     _0xDF2D0022;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x7C631AB6
{
	uint                             idx;                             // type:UINT.0
	string                           name;                            // type:STRING.ATSTRING
	vec3V                            position;                        // type:VEC3V.0
	struct _0x017527BD               _0xB1B97AE1;                     // type:STRUCT.POINTER
	struct _0x7B0CF5C6               _0x4E390C55;                     // type:STRUCT.POINTER
	array<struct _0x8F9ECBB2>        _0x697170E4;                     // type:ARRAY.ATARRAY
	array<struct _0x143ACF4A>        _0x7CF4CC51;                     // type:ARRAY.ATARRAY
	array<struct _0xBF7FBCFE>        _0xCA18DD54;                     // type:ARRAY.ATARRAY
	array<struct _0xF0A42B6E>        _0x3D27E58C;                     // type:ARRAY.ATARRAY
	array<struct _0xDDBD388C>        _0x5A7850E2;                     // type:ARRAY.ATARRAY
	array<struct _0x2977CE63>        _0x9E53046D;                     // type:ARRAY.ATARRAY
	array<struct _0x3F1DD8F8>        _0x86F5C2B5;                     // type:ARRAY.ATARRAY
	array<struct _0x9BBC2FB4>        _0x4D0C9E45;                     // type:ARRAY.ATARRAY
	array<struct _0x381B0EA1>        _0x990F34FD;                     // type:ARRAY.ATARRAY
	array<struct _0x5A27B452>        _0xE609B36E;                     // type:ARRAY.ATARRAY
	array<struct _0xE5AA2C77>        _0x7AFEBB82;                     // type:ARRAY.ATARRAY
	array<struct _0xF91B3365>        _0x144FB17E;                     // type:ARRAY.ATARRAY
	array<struct _0x405F8C57>        _0x2BB31E52;                     // type:ARRAY.ATARRAY
	struct _0x1A332B58               _0xFF77E82C;                     // type:STRUCT.POINTER
	struct _0xDA3B8D01               _0x73D72036;                     // type:STRUCT.POINTER
	struct _0x5FE10C4C               _0x8D7F539E;                     // type:STRUCT.POINTER
	array<struct _0x6D8B37A9>        _0x9C60A742;                     // type:ARRAY.ATARRAY
};

struct _0x7C6FF6B3
{
	string                           defaultPlayerName;               // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF6EC9E82;                     // type:STRING.ATNONFINALHASHSTRING
	string                           defaultProloguePlayerName;       // type:STRING.ATNONFINALHASHSTRING
	int                              MaxBaseModelInfos;               // type:INT.0
	int                              MaxCompEntityModelInfos;         // type:INT.0
	int                              MaxMloModelInfos;                // type:INT.0
	int                              MaxPedModelInfos;                // type:INT.0
	int                              MaxTimeModelInfos;               // type:INT.0
	int                              MaxVehicleModelInfos;            // type:INT.0
	int                              MaxWeaponModelInfos;             // type:INT.0
	int                              MaxExtraVehicleModelInfos;       // type:INT.0
	int                              MaxExtraWeaponModelInfos;        // type:INT.0
	int                              _0xB3ADFA37;                     // type:INT.0
};

struct _0x7C798A8A : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
	bool                             _0x5D113BD5;                     // type:BOOL.0
};

struct _0x7C7D2C7E : uiSelectableBehaviorBase
{
	string                           _0xCB9BA653;                     // type:STRING.ATSTRING
};

struct _0x7C824302 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	enum _0xC6AB2DAA                 _0x8D810066;                     // type:ENUM.32BIT
	enum _0xC6AB2DAA                 _0xE1619970;                     // type:ENUM.32BIT
};

struct _0x7C8747C8 : _0x7EAFD12D
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7C8DE0B8 : CTuning
{
	struct _0xAD02A4BF               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x7C94A245 : _0x67C85F24
{
};

struct _0x7C9C2091
{
	float                            _0x82DB17E9;                     // type:FLOAT.0
	float                            _0x2A2E3FD4;                     // type:FLOAT.0
	float                            _0xA63864A8;                     // type:FLOAT.0
	float                            _0xCA15465C;                     // type:FLOAT.0
	float                            _0xC5D616F4;                     // type:FLOAT.0
	float                            _0x0CC1300B;                     // type:FLOAT.0
	float                            _0x6B33C8C7;                     // type:FLOAT.0
	float                            _0x86B847F6;                     // type:FLOAT.0
	float                            _0xB770D0AA;                     // type:FLOAT.0
	float                            _0x4F762EAF;                     // type:FLOAT.0
};

struct _0x7C9E2C5D : _0x3A2B2588
{
	int                              _0x5E1C2249;                     // type:INT.0
	int                              _0xB440600B;                     // type:INT.0
};

struct _0x7CA06CF1 : _0x9A93DF92
{
};

struct _0x7CAF8416
{
	enum _0x6D1BA05E                 eCameraFraming;                  // type:ENUM.32BIT
	float                            _0x3DB37EA3;                     // type:FLOAT.0
	float                            MaxAnimPhaseForCameraFraming;    // type:FLOAT.0
	string                           FirstPersonCameraSettingsNameHash; // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7CB1E419 : CAICondition
{
	bool                             IsTrue;                          // type:BOOL.0
};

struct _0x7CBDE0BD
{
	struct _0x61131A24               Setup;                           // type:STRUCT.STRUCTURE
	struct _0xAB76836B               Converter;                       // type:STRUCT.POINTER
};

struct _0x7CEECA17 : _0x8A0DC979
{
};

struct _0x7D0ABA5B : _0x68825F77
{
};

struct _0x7D4A6E85 : _0xF42FB8D1
{
	enum _0x3D035416                 PedType;                         // type:ENUM.32BIT
	enum _0x99BEFEED                 AttributeType;                   // type:ENUM.32BIT
};

struct _0x7D4CDC76 : _0x8A0DC979
{
	enum _0x5B754EBB                 Context;                         // type:ENUM.32BIT
};

struct _0x7D76DEFE : _0x7EAFD12D
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7DA685CB
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	float                            _0x35C1AE8D;                     // type:FLOAT.0
	vec3V                            _0xE535C307;                     // type:VEC3V.0
};

struct _0x7DD905A6 : _0x3AB6499E
{
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x9FC13423;                     // type:FLOAT.0
	float                            _0xDBE39B6D;                     // type:FLOAT.0
	string                           _0x51896200;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC21141B7;                     // type:FLOAT.0
	float                            _0x7B0C8FA6;                     // type:FLOAT.0
	struct _0x002F69AD               _0x3ECD5B42;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0x81D6CB8B;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0x1537DF6E;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0xA0B39AF7;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0xACAB3560;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0xE4B7D8BA;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0xF9F4BDE6;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0x0B71D62A;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0xA76C590B;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0xBAF607D4;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0x032F50CA;                     // type:STRUCT.STRUCTURE
	struct _0x002F69AD               _0xB4D4EA2E;                     // type:STRUCT.STRUCTURE
	float                            _0x56C4C14C;                     // type:FLOAT.0
	bool                             _0x2C4923DE;                     // type:BOOL.0
	vec2                             _0x79849AF6;                     // type:VECTOR2.0
	float                            _0x6BFBFD60;                     // type:FLOAT.0
	float                            _0x4D6C69E0;                     // type:FLOAT.0
	float                            _0x09A233A1;                     // type:FLOAT.0
	float                            _0x71DD38A9;                     // type:FLOAT.0
};

struct _0x7DDDFA0C
{
	struct _0x96627978               MeOffTargetOff;                  // type:STRUCT.STRUCTURE
	struct _0x96627978               MeOnTargetOff;                   // type:STRUCT.STRUCTURE
	struct _0x96627978               MeOffTargetOn;                   // type:STRUCT.STRUCTURE
	struct _0x96627978               MeOnTargetOn;                    // type:STRUCT.STRUCTURE
};

struct _0x7DE5268B
{
	string                           _0x1AC2EB33;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xF9AFC537;                     // type:FLOAT.0
};

struct _0x7DE6531A : _0x0A510DA9
{
	struct _0x7B24F97F               setting;                         // type:STRUCT.STRUCTURE
	enum _0x7EDF2A24                 action;                          // type:ENUM.32BIT
};

struct _0x7E11601B : _0xDC10377E
{
	struct _0x69B819CD               _0x2AF1829F;                     // type:STRUCT.STRUCTURE
	struct _0x25CA9D69               _0xABDFF683;                     // type:STRUCT.STRUCTURE
	struct _0x4CD7D819               _0x55095210;                     // type:STRUCT.STRUCTURE
	struct _0xB9CFC360               _0x5A216614;                     // type:STRUCT.STRUCTURE
	struct _0xB039F226               _0x5FF630A9;                     // type:STRUCT.STRUCTURE
	struct _0xD738C5C2               _0xBF47E1FE;                     // type:STRUCT.STRUCTURE
	struct _0x5A8FFD18               _0x2A818FC3;                     // type:STRUCT.STRUCTURE
};

struct _0x7E1930E0 : _0x7F0198A1
{
	ushort                           version;                         // type:USHORT.0
};

struct _0x7E2A6C5B
{
	string                           _0x8F00558D;                     // type:STRING.CONST_STRING
	string                           _0xBA6FEE7B;                     // type:STRING.CONST_STRING
	string                           _0x4863FCF1;                     // type:STRING.CONST_STRING
	string                           _0x7C724C91;                     // type:STRING.CONST_STRING
};

struct _0x7E357DCC
{
	float                            Head;                            // type:FLOAT.0
	float                            _0x1E7F9271;                     // type:FLOAT.0
	float                            _0x4693E2A5;                     // type:FLOAT.0
	float                            _0x7F9FADD5;                     // type:FLOAT.0
	float                            _0xC2B9B40C;                     // type:FLOAT.0
};

struct _0x7E40A68B
{
	enum eAnimBoneTag                HeightBlendTargetBone;           // type:ENUM.32BIT
	string                           HeightBlendTargetBone_Debug;     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7E455254 : _0xDFE4E23E
{
	enum _0x729D6EED                 Operation;                       // type:ENUM.32BIT
	int                              _0xF5264D00;                     // type:INT.0
};

struct _0x7E4CDA74
{
	float                            fDistFromHandholdToTestForNearIntersections; // type:FLOAT.0
	float                            fIntersectionDistFromHandholdToReject; // type:FLOAT.0
	float                            fClearanceToHandholdZOffset;     // type:FLOAT.0
	float                            fClearanceToHandholdMaxDistForOffset; // type:FLOAT.0
	float                            fClearanceToHandholdDirectionOffset; // type:FLOAT.0
	float                            fClearTestRadius;                // type:FLOAT.0
	float                            fClearTestOffset;                // type:FLOAT.0
	float                            fClearBackFromHandhold;          // type:FLOAT.0
	float                            fClearForward;                   // type:FLOAT.0
	float                            fDepthTestRadius;                // type:FLOAT.0
	float                            fDepthTestLength;                // type:FLOAT.0
	float                            fDepthAdjacentTestTolerance;     // type:FLOAT.0
	float                            fVaultSlopeMaxAngle;             // type:FLOAT.0
	float                            fVaultClearanceMinDepth;         // type:FLOAT.0
	float                            fMaxAutoVaultDepth;              // type:FLOAT.0
	float                            fMaxAutoVaultDropHeight;         // type:FLOAT.0
	float                            fMaxAutoVaultDropHeightWater;    // type:FLOAT.0
	float                            fMaxAutoStepUpDepth;             // type:FLOAT.0
	float                            fMaxAutoStepUpDropHeight;        // type:FLOAT.0
	float                            fMaxAutoStepUpDropHeightVehicle; // type:FLOAT.0
	float                            fMaxAutoStepUpDropHeightWater;   // type:FLOAT.0
	float                            fAutoStepUpLadderTopDistance;    // type:FLOAT.0
	float                            fHeightClearanceTestRadius;      // type:FLOAT.0
	float                            fPhysicalClearOffset;            // type:FLOAT.0
	float                            fZClearanceAdjustment;           // type:FLOAT.0
	float                            fLedgeGrabObstructionTestDistance; // type:FLOAT.0
	float                            fLedgeGrabObstructionTestHeight; // type:FLOAT.0
	float                            fMinLedgeGrabDepth;              // type:FLOAT.0
	float                            fDistanceForBreakableGlass;      // type:FLOAT.0
	float                            fMaxClimbHeightThroughGlass;     // type:FLOAT.0
	uint                             uNumHeightClearanceTests;        // type:UINT.0
	uint                             uNumDepthTests;                  // type:UINT.0
	uint                             uNumClearTests;                  // type:UINT.0
	uint                             uMinDepthTestsAutoVault;         // type:UINT.0
	bool                             bDepthThresholdTestInsideRange;  // type:BOOL.0
};

struct _0x7E503831
{
	array<struct _0x5FC88197>        Volumes;                         // type:ARRAY.ATARRAY
};

struct _0x7E6D9996
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            MultiplierForMin;                // type:FLOAT.0
	float                            MultiplierForMax;                // type:FLOAT.0
};

struct _0x7E6E9DAF
{
	vec3V                            LocalStart;                      // type:VEC3V.0
	vec3V                            LocalEnd;                        // type:VEC3V.0
	float                            CapsuleRadius;                   // type:FLOAT.0
};

struct _0x7E71A71F
{
	string                           PlayListId;                      // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x7E7D4D7B;                     // type:ARRAY.ATARRAY
};

struct _0x7E74307C : _0x8A0DC979
{
};

struct _0x7E7A48CE
{
	bool                             _0xA0DF1935;                     // type:BOOL.0
	float                            _0x2B79A614;                     // type:FLOAT.0
	float                            _0xBBFD28C7;                     // type:FLOAT.0
	float                            _0x6644978E;                     // type:FLOAT.0
	float                            _0x3B9812A9;                     // type:FLOAT.0
	float                            _0x4EC2CA24;                     // type:FLOAT.2
	vec3V                            _0x7AF3550E;                     // type:VEC3V.0
	vec3V                            _0xDD1C8F54;                     // type:VEC3V.0
	float                            _0x3CAB2C09;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x7059A6A0;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x154155DA;                     // type:ENUM.32BIT
	float                            _0xAA4CA743;                     // type:FLOAT.0
	vec3V                            _0xECF462AA;                     // type:VEC3V.0
	float                            _0x445E6A01;                     // type:FLOAT.0
	float                            _0xEEB651CC;                     // type:FLOAT.0
	float                            _0xEADE4D49;                     // type:FLOAT.0
	float                            _0x0633445B;                     // type:FLOAT.0
	float                            _0xD786AFC9;                     // type:FLOAT.0
	vec3V                            _0xA7239354;                     // type:VEC3V.0
	float                            _0xA2AFE056;                     // type:FLOAT.0
	uint                             _0x897D1F67;                     // type:UINT.0
	uint                             _0x414D17F6;                     // type:UINT.0
	float                            _0x45D540C4;                     // type:FLOAT.0
	float                            _0x73406CDD;                     // type:FLOAT.0
	vec3V                            _0x339663E1;                     // type:VEC3V.0
	vec3V                            _0x04AD7693;                     // type:VEC3V.0
	vec3V                            _0x9BA45A3C;                     // type:VEC3V.0
	vec3V                            _0xD93FAC36;                     // type:VEC3V.0
	float                            _0x568C2E44;                     // type:FLOAT.0
	vec3V                            _0x04426C2C;                     // type:VEC3V.0
	vec3V                            _0x34D768ED;                     // type:VEC3V.0
	vec3V                            _0xC59871A9;                     // type:VEC3V.0
	vec3V                            _0xDBE954AE;                     // type:VEC3V.0
	float                            _0xD7E37C64;                     // type:FLOAT.0
	float                            _0x15418BC6;                     // type:FLOAT.0
	float                            _0x9C658AAE;                     // type:FLOAT.0
	float                            _0x14735F23;                     // type:FLOAT.0
	float                            _0x381236BC;                     // type:FLOAT.0
	float                            _0xA1A546F7;                     // type:FLOAT.0
	float                            _0x71569AF4;                     // type:FLOAT.0
	float                            _0x09D95B7E;                     // type:FLOAT.0
	float                            _0x7AB73EA2;                     // type:FLOAT.0
	float                            _0x7149BA62;                     // type:FLOAT.0
	float                            _0x56CD5A69;                     // type:FLOAT.0
	float                            _0x74C15301;                     // type:FLOAT.0
	float                            _0x3C79EBCC;                     // type:FLOAT.0
	float                            _0x8EEBFDFA;                     // type:FLOAT.0
	float                            _0x86123E7C;                     // type:FLOAT.0
	float                            _0x45B78978;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xBE16B535;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xDE483FA0;                     // type:ENUM.32BIT
	float                            _0x567C9DA4;                     // type:FLOAT.0
	float                            _0x4B314A64;                     // type:FLOAT.0
	float                            _0x0E3B0F4F;                     // type:FLOAT.0
	float                            _0x7C9A5957;                     // type:FLOAT.0
	float                            _0xEF85CEDD;                     // type:FLOAT.0
	float                            _0x21C79C08;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x4612BEFF;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xC59DC568;                     // type:ENUM.32BIT
	float                            _0x9B7F9A78;                     // type:FLOAT.0
	float                            _0x1DED0AC9;                     // type:FLOAT.0
	float                            _0xBE6CB141;                     // type:FLOAT.0
	float                            _0x57D3A283;                     // type:FLOAT.0
	float                            _0x5FBF8324;                     // type:FLOAT.0
	float                            _0x6A4F34C1;                     // type:FLOAT.0
	float                            _0xE9E06ED9;                     // type:FLOAT.0
	float                            _0x23D899E4;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x65BEFBA0;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xE46B8073;                     // type:ENUM.32BIT
	float                            _0xB73CB8C3;                     // type:FLOAT.0
	float                            _0x9E519A10;                     // type:FLOAT.0
	uint                             _0xBF902170;                     // type:UINT.0
	uint                             _0xA93A39C4;                     // type:UINT.0
	float                            _0x330B19B0;                     // type:FLOAT.0
	float                            _0xD85A038E;                     // type:FLOAT.0
	float                            _0xF5385066;                     // type:FLOAT.2
	float                            _0x9C3C2176;                     // type:FLOAT.0
	float                            _0xAD856023;                     // type:FLOAT.0
	float                            _0xC66E889F;                     // type:FLOAT.0
	vec3V                            _0x2B1F0E64;                     // type:VEC3V.0
	float                            _0x7E27827D;                     // type:FLOAT.0
	float                            _0x763A3739;                     // type:FLOAT.0
	vec3V                            _0x372EEC73;                     // type:VEC3V.0
	float                            _0x55E6EDE9;                     // type:FLOAT.0
	float                            _0x736BA1CB;                     // type:FLOAT.0
	float                            _0x3696836D;                     // type:FLOAT.0
};

struct _0x7E8A86D3
{
	bool                             Enabled;                         // type:BOOL.0
	float                            TimeBefore;                      // type:FLOAT.0
	float                            Delay;                           // type:FLOAT.0
};

struct _0x7E8E3303 : uiMaskBehaviorBase
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x7E946B14
{
	vec3V                            position;                        // type:VEC3V.0
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             mintime;                         // type:UINT.0
};

struct _0x7E970137
{
	float                            _0x2B29BE43;                     // type:FLOAT.0
	float                            _0xC037E7A8;                     // type:FLOAT.0
	uint                             _0x17A75BB9;                     // type:UINT.0
};

struct _0x7EAFD12D
{
};

struct _0x7EB36ECB
{
	string                           _0x060A0F40;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1D071B4F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3FEF111F;                     // type:FLOAT.0
	float                            _0xB19CFD7D;                     // type:FLOAT.0
	float                            _0xD0455800;                     // type:FLOAT.0
	float                            _0x6E099C42;                     // type:FLOAT.0
	float                            _0xD02EFD47;                     // type:FLOAT.0
	float                            _0xDA1F0827;                     // type:FLOAT.0
	float                            _0xC5C1E970;                     // type:FLOAT.0
	float                            _0x5736BACC;                     // type:FLOAT.0
	float                            _0xEDFD3F58;                     // type:FLOAT.0
	float                            _0x8FD6F7CB;                     // type:FLOAT.0
	enum _0x8C44B731                 _0xA175187C;                     // type:ENUM.8BIT
	bool                             _0x0D688674;                     // type:BOOL.0
};

struct _0x7ED07AC9 : _0x39DE799A
{
	string                           Value;                           // type:STRING.ATSTRING
};

struct _0x7ED1475D
{
};

struct _0x7ED51238 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           WeaponType;                      // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x6E3DAC80;                     // type:UINT.0
	uchar                            AlphaThreshold;                  // type:UCHAR.0
};

struct _0x7EDF7A96
{
	array<struct _0x7EFF6C70>        _0x38C8E50B;                     // type:ARRAY.ATARRAY
	array<struct _0x029A4C1D>        _0x52A20094;                     // type:ARRAY.ATARRAY
	array<struct _0x3056B0D8>        infinateFindAndTurnInItem;       // type:ARRAY.ATARRAY
};

struct _0x7EE781B7
{
	float                            fAngularVelThreshold;            // type:FLOAT.0
	float                            fOncomingTrainInvalidDot;        // type:FLOAT.0
	float                            fHeliRotorSpeed;                 // type:FLOAT.0
	float                            fVehicleVelocityThreshold;       // type:FLOAT.0
	float                            fUnderwaterVaultThreshold;       // type:FLOAT.0
	float                            fUnderwaterVaultThresholdBoat;   // type:FLOAT.0
	float                            fMassCanPush;                    // type:FLOAT.0
	float                            fFragMassCanPush;                // type:FLOAT.0
	float                            fMaxBoundsXZSize;                // type:FLOAT.0
	float                            fDynamicObjectVelocityThresholdSq; // type:FLOAT.0
	uint                             uAutoVaultVehicleDelay;          // type:UINT.0
	bool                             bDisableAutoVaultOnUnFixedObjects; // type:BOOL.0
};

struct _0x7EE7A7AE
{
	string                               SpecificFallbackMotionType;      // type:STRING.ATNONFINALHASHSTRING
	string                               LowLODIdleAnimOverride;          // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB43E5559>            ClipSetData;                     // type:ARRAY.ATARRAY
	bitset<enum _0x4287365F>             Flags;                           // type:BITSET.32BIT
	array<struct CTransportAnimData>     MotionData;                      // type:ARRAY.ATARRAY
	array<struct _0x95FE09E6>            NetworkControllers;              // type:ARRAY.ATARRAY
};

struct _0x7EF1A999
{
	struct _0xD41612A3               AngledArea;                      // type:STRUCT.STRUCTURE
	bitset<enum _0xEE89B448>         Flags;                           // type:BITSET.32BIT
};

struct _0x7EFF6C70
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	bool                             found;                           // type:BOOL.0
};

struct _0x7F0198A1
{
	array<struct _0x7F0198A1>        SubGroups;                       // type:ARRAY.ATARRAY
	string                           id;                              // type:STRING.ATNSHASHSTRING
	array<struct _0xD6959DCC>        Settings;                        // type:ARRAY.ATARRAY
	struct _0x8E32D4D2               groupMetaData;                   // type:STRUCT.STRUCTURE
};

struct _0x7F09852F : _0x45E78B4D
{
	string                           sceneId;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1A43C2EB;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7F214AD4 : _0x3AB6499E
{
	float                            ZoomFactor;                      // type:FLOAT.0
	float                            _0x816C8B98;                     // type:FLOAT.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
};

struct _0x7F241C2B
{
	float                            Current;                         // type:FLOAT.0
};

struct _0x7F297480 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x7F29A4A5 : UIBehavior
{
	struct _0xAB76836B               _0x36F97D57;                     // type:STRUCT.POINTER
	uint                             EvaluationFreqMS;                // type:UINT.0
};

struct _0x7F35E3B4 : _0x0A510DA9
{
};

struct _0x7F3DE4F2 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Attribute;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x7F466A94
{
	vec2V                            Center;                          // type:VEC2V.0
	float                            InnerRadius;                     // type:FLOAT.0
	float                            _0xC3152138;                     // type:FLOAT.0
	enum _0x4EEED54E                 _0x07B1BFAD;                     // type:ENUM.32BIT
	float                            Rotation;                        // type:FLOAT.0
	vec2V                            _0xCB88AEA7;                     // type:VEC2V.0
};

struct _0x7F493AC2
{
	float                            BlendLevel;                      // type:FLOAT.0
	float                            ExtraCameraRelativeVerticalOffset; // type:FLOAT.0
	float                            AttachParentHeightScalingForExtraCameraRelativeVerticalOffset; // type:FLOAT.0
};

struct _0x7F540509 : _0xB88D6BEE
{
	string                           Channel;                         // type:STRING.ATNONFINALHASHSTRING
	struct uiScriptEventParsable     _0x4CC68D2B;                     // type:STRUCT.STRUCTURE
};

struct _0x7F669C0D : CAICondition
{
	struct void                      VehicleModelSet;                 // type:STRUCT.EXTERNAL_NAMED
};

struct _0x7F732FFD : CTuning
{
	float                            _0xF1A2B454;                     // type:FLOAT.0
	float                            _0x3B341642;                     // type:FLOAT.0
	float                            _0x7F3814A1;                     // type:FLOAT.0
	float                            _0x0F107C79;                     // type:FLOAT.0
	float                            _0x1ABD93DB;                     // type:FLOAT.0
	float                            _0xD9E89222;                     // type:FLOAT.0
	float                            _0xE986315D;                     // type:FLOAT.0
	float                            _0xD1331FA9;                     // type:FLOAT.0
	float                            _0xDEC8BAD4;                     // type:FLOAT.0
	float                            _0xA54447CC;                     // type:FLOAT.0
	float                            _0x1FEFD7F3;                     // type:FLOAT.0
	float                            _0x506B03A4;                     // type:FLOAT.0
	float                            _0x62BD2848;                     // type:FLOAT.0
	float                            _0x7CD1DC71;                     // type:FLOAT.0
	float                            _0xC770FF49;                     // type:FLOAT.0
	float                            _0xD07A800B;                     // type:FLOAT.0
};

struct _0x7F79FEA5
{
	uchar                            minHeight;                       // type:UCHAR.0
	uchar                            maxHeight;                       // type:UCHAR.0
	array<uint64, 2>                 _0xEE6FD589;                     // type:ARRAY.ATRANGEARRAY
};

struct _0x7F7D015F : uiGenericEventDataBase
{
	double                           data;                            // type:DOUBLE.0
};

struct _0x7F828DB6
{
	float                            _0xC2B1ED54;                     // type:FLOAT.0
	float                            BlendInTime;                     // type:FLOAT.0
	float                            BlendOutTime;                    // type:FLOAT.0
	bool                             _0x6402893C;                     // type:BOOL.0
};

struct _0x7F94B6C1
{
	float                            _0x9FCAF7C1;                     // type:FLOAT.0
	float                            _0x320B341B;                     // type:FLOAT.0
	float                            _0x26D5D674;                     // type:FLOAT.2
	float                            _0x13FA6EB4;                     // type:FLOAT.0
	float                            _0x06FCCD29;                     // type:FLOAT.0
	float                            _0xCE1E5263;                     // type:FLOAT.0
	float                            _0x244C867A;                     // type:FLOAT.0
	float                            _0x934B5792;                     // type:FLOAT.0
	float                            _0xC38B6742;                     // type:FLOAT.0
	float                            _0xDD611C34;                     // type:FLOAT.0
	float                            _0x3CEC2650;                     // type:FLOAT.0
	float                            _0xC10055CB;                     // type:FLOAT.0
	float                            _0x5C4ECA86;                     // type:FLOAT.0
	float                            _0xC0833DAA;                     // type:FLOAT.0
	float                            _0xA6053DD7;                     // type:FLOAT.0
	float                            _0xE47BAB48;                     // type:FLOAT.0
	float                            _0xC72480E5;                     // type:FLOAT.0
	float                            _0x6F1D7011;                     // type:FLOAT.0
	float                            _0xAF30B653;                     // type:FLOAT.0
	float                            _0x165AAAEB;                     // type:FLOAT.0
	float                            _0x665FD346;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x1E39F025;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x20C4C59D;                     // type:ENUM.32BIT
	enum _0x6BCA108F                 _0x6497C4D1;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x2092CC21;                     // type:ENUM.32BIT
	enum _0x6BCA108F                 _0xD78404C2;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x14470811;                     // type:ENUM.32BIT
	enum _0x6BCA108F                 _0x87FC9019;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xFCEF102E;                     // type:ENUM.32BIT
	float                            _0x440BFBCD;                     // type:FLOAT.0
	float                            _0x40913B95;                     // type:FLOAT.0
	float                            _0xB85B6601;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x5513A498;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x007793ED;                     // type:ENUM.32BIT
	float                            _0x08E67D92;                     // type:FLOAT.0
	float                            _0x20DB4F0E;                     // type:FLOAT.0
	float                            _0x9D994EE8;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xC9D3E4EA;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x0D75562E;                     // type:ENUM.32BIT
	float                            _0x9F007498;                     // type:FLOAT.0
	float                            _0xFF9353E4;                     // type:FLOAT.0
	uint                             _0x36C516E0;                     // type:UINT.0
	float                            _0xDFA30C7F;                     // type:FLOAT.0
	float                            _0x16005A2E;                     // type:FLOAT.0
	float                            _0x64CE4EC7;                     // type:FLOAT.0
	uint                             _0x3E51D391;                     // type:UINT.0
	uint                             _0x99007224;                     // type:UINT.0
	float                            _0x2FFEF730;                     // type:FLOAT.2
	uint                             _0x3362620A;                     // type:UINT.0
	uint                             _0xDBA6BDD0;                     // type:UINT.0
	float                            _0x8FB88376;                     // type:FLOAT.0
	float                            _0xF8CABF0F;                     // type:FLOAT.0
	float                            _0xD7E3A1E8;                     // type:FLOAT.0
	float                            _0x5A9AE67D;                     // type:FLOAT.0
	float                            _0x8A096C6B;                     // type:FLOAT.0
	float                            _0xF992C3C9;                     // type:FLOAT.0
	float                            _0x291658B4;                     // type:FLOAT.0
	float                            _0x062C1F40;                     // type:FLOAT.0
	float                            _0x53FF2E17;                     // type:FLOAT.0
	float                            _0xF6DBFA2E;                     // type:FLOAT.0
	float                            _0xDEEB90D5;                     // type:FLOAT.2
	float                            _0x714A7205;                     // type:FLOAT.0
	float                            _0xC6BFB219;                     // type:FLOAT.0
	float                            _0xA3E98D0A;                     // type:FLOAT.0
	float                            _0x8AE41494;                     // type:FLOAT.0
	float                            _0x7B62D908;                     // type:FLOAT.0
	float                            _0x117AE6C8;                     // type:FLOAT.0
	float                            _0x4EFB7B5D;                     // type:FLOAT.2
	float                            _0x0E9C61C3;                     // type:FLOAT.2
	float                            _0x458CF58C;                     // type:FLOAT.0
	float                            _0xB3F3E6FB;                     // type:FLOAT.0
	float                            _0xB91C073F;                     // type:FLOAT.0
	float                            _0x7D4652CE;                     // type:FLOAT.0
	float                            _0x3A2D636F;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x2BC9C4D0;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xF297CA36;                     // type:ENUM.32BIT
	float                            _0xF6153BF1;                     // type:FLOAT.0
	float                            _0x9BDD6CF2;                     // type:FLOAT.0
	float                            _0xEEB024DC;                     // type:FLOAT.0
	float                            _0xC56102A2;                     // type:FLOAT.0
	float                            _0x82C5EB4B;                     // type:FLOAT.0
	float                            _0x4E405FC7;                     // type:FLOAT.0
	float                            _0xA97B00F5;                     // type:FLOAT.0
	float                            _0x3E098F5E;                     // type:FLOAT.0
	float                            _0x398460E7;                     // type:FLOAT.0
	float                            _0x999841FD;                     // type:FLOAT.0
	float                            _0xBF9FEB79;                     // type:FLOAT.0
	float                            _0xCB09AFF7;                     // type:FLOAT.0
	float                            _0x958E2C54;                     // type:FLOAT.0
	float                            _0xAB49CF9A;                     // type:FLOAT.0
	float                            _0xA4BA580C;                     // type:FLOAT.0
	float                            _0xCC8920FF;                     // type:FLOAT.0
	float                            _0x39B81E5F;                     // type:FLOAT.0
	float                            _0x254EAB6B;                     // type:FLOAT.0
	float                            _0x4CF73D56;                     // type:FLOAT.0
	float                            _0x5624920F;                     // type:FLOAT.0
	float                            _0x2CF44171;                     // type:FLOAT.0
	float                            _0xA3B92257;                     // type:FLOAT.0
	float                            _0x679CF9B1;                     // type:FLOAT.0
	float                            _0x6AE2C55C;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x706BD73B;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x2DD03474;                     // type:ENUM.32BIT
	enum _0x6BCA108F                 _0x34C3942E;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x0A46FC0F;                     // type:ENUM.32BIT
	float                            _0x83DE1CCD;                     // type:FLOAT.2
	float                            _0xE4B20368;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xA15BA228;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x77115C96;                     // type:ENUM.32BIT
	float                            _0xB0C8B45F;                     // type:FLOAT.2
	float                            _0xB1976A95;                     // type:FLOAT.0
	float                            _0x771806C3;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x6FFA4A44;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xEBDDD671;                     // type:ENUM.32BIT
	enum _0x6BCA108F                 _0xF438395C;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x294FC022;                     // type:ENUM.32BIT
	float                            _0x9C01A987;                     // type:FLOAT.2
	float                            _0xDD340A1A;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xE641F8B9;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x11638697;                     // type:ENUM.32BIT
	float                            _0x0D93A7D8;                     // type:FLOAT.2
	float                            _0x5E5308D5;                     // type:FLOAT.0
	float                            _0x80FB7547;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x18EB9689;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xE1F2B48C;                     // type:ENUM.32BIT
	enum _0x6BCA108F                 _0x6C6638EE;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x37E0A0B4;                     // type:ENUM.32BIT
	float                            _0x46169F6A;                     // type:FLOAT.2
	float                            _0xA2464629;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xBCEBFA2F;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x09F3AEF2;                     // type:ENUM.32BIT
	float                            _0xF74983B6;                     // type:FLOAT.2
	float                            _0x1B00BAF0;                     // type:FLOAT.0
	float                            _0x5362B3E0;                     // type:FLOAT.0
	float                            _0xD771C162;                     // type:FLOAT.0
	float                            _0x30FB7FC7;                     // type:FLOAT.0
	bool                             _0xCED42C83;                     // type:BOOL.0
	uint                             _0x9FF7EF1A;                     // type:UINT.0
	uint                             _0xB66EA2C4;                     // type:UINT.0
	uint                             _0x9CA8E9C3;                     // type:UINT.0
	uint                             _0x571A7F5A;                     // type:UINT.0
	uint                             _0xF124EC7D;                     // type:UINT.0
	uint                             _0xF24681F6;                     // type:UINT.0
	uint                             _0xC44E2AB8;                     // type:UINT.0
	float                            _0x5A168FB1;                     // type:FLOAT.0
	float                            _0xEB18C732;                     // type:FLOAT.0
	float                            _0xAADFAB51;                     // type:FLOAT.0
	uint                             _0x88732096;                     // type:UINT.0
	float                            _0xB2D605DE;                     // type:FLOAT.0
	float                            _0xCEBCEF09;                     // type:FLOAT.0
	float                            _0xD66D18E6;                     // type:FLOAT.0
	uint                             _0xBD9B5412;                     // type:UINT.0
};

struct _0x7F9617DB : CTuning
{
	float                            _0x98BAB9FB;                     // type:FLOAT.0
};

struct _0x7F9C71D2
{
	array<enum eEventType>           EventsToTrack;                   // type:ARRAY.ATARRAY
};

struct _0x7FB1FE02 : _0x2E992620
{
	string                           _0x4BF77BB2;                     // type:STRING.ATSTRING
};

struct _0x7FB63AA3
{
	string                                          _0xF60988D1;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xA86F5410;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x0A6B67C9;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xED696ED1;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x7F26E234;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xB7A1D40E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x14B9E319;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x7819F0E6;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xA49391E9;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x9029166D;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x6DB9F147;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x018E1E5A;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x9E623CE3;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x3C06FFC9;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x991D1584;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                            _0xBC75A8DA;                     // type:BOOL.0
	bool                                            _0xB7083C31;                     // type:BOOL.0
	bool                                            _0xA9480421;                     // type:BOOL.0
	bool                                            _0xB53C5A33;                     // type:BOOL.0
	bool                                            _0xDD88054F;                     // type:BOOL.0
	bool                                            _0x9754158B;                     // type:BOOL.0
	bool                                            _0xB0E60034;                     // type:BOOL.0
	bool                                            _0x4E7D98BC;                     // type:BOOL.0
	bool                                            _0x01647B9E;                     // type:BOOL.0
	bool                                            _0x4A07809B;                     // type:BOOL.0
	bitset<enum eMovementTransitionHelperFlags>     _0xB18253BF;                     // type:BITSET.32BIT
	float                                           _0x3EC680DB;                     // type:FLOAT.0
	float                                           _0x1FAB9904;                     // type:FLOAT.0
	float                                           _0x9FCF5701;                     // type:FLOAT.0
	float                                           _0xE13AAC9D;                     // type:FLOAT.0
	float                                           _0xECF54876;                     // type:FLOAT.0
	float                                           _0xCCA73B22;                     // type:FLOAT.0
	float                                           _0x6047D07F;                     // type:FLOAT.0
	float                                           _0xB5A1FD7E;                     // type:FLOAT.0
	float                                           _0x66941042;                     // type:FLOAT.0
	float                                           _0xB222DD67;                     // type:FLOAT.0
	float                                           _0x0556AE31;                     // type:FLOAT.0
	array<struct _0xE80E8DB0>                       _0xD00D7B04;                     // type:ARRAY.ATARRAY
	array<struct _0xE80E8DB0>                       _0x7BFF8A69;                     // type:ARRAY.ATARRAY
	array<struct _0xE80E8DB0>                       _0x98CD966D;                     // type:ARRAY.ATARRAY
	array<struct _0xE80E8DB0>                       _0x5E6C5E6F;                     // type:ARRAY.ATARRAY
	map<string, struct _0xCA9A08F6>                 _0xCA9A08F6;                     // type:MAP.ATBINARYMAP
	vec2V                                           _0x5D923575;                     // type:VEC2V.0
	vec2V                                           _0x63512BD7;                     // type:VEC2V.0
	map<enum _0x540BC42B, struct _0xDA1401B8>       _0x11703C3E;                     // type:MAP.ATBINARYMAP
	float                                           _0xD3ECE815;                     // type:FLOAT.0
	float                                           _0xF58C4DD0;                     // type:FLOAT.0
	float                                           _0x1198BCA8;                     // type:FLOAT.0
	float                                           _0xB8B7B137;                     // type:FLOAT.0
	float                                           _0x8F174488;                     // type:FLOAT.0
	float                                           _0xEFE4A811;                     // type:FLOAT.0
	float                                           _0x6E419A76;                     // type:FLOAT.0
	float                                           _0xF8F75504;                     // type:FLOAT.0
	bool                                            _0xAC3CD8C9;                     // type:BOOL.0
};

struct _0x7FB7EDFF
{
	array<struct _0x4BCCC0AF, 9>     Weights;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0x7FC06F64
{
	string                           Tag;                             // type:STRING.ATNONFINALHASHSTRING
	string                           PlantTag;                        // type:STRING.ATNONFINALHASHSTRING
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	float16                          Spacing;                         // type:FLOAT16.0
	float16                          MinXRotation;                    // type:FLOAT16.0
	float16                          MaxXRotation;                    // type:FLOAT16.0
	float16                          MinYRotation;                    // type:FLOAT16.0
	float16                          MaxYRotation;                    // type:FLOAT16.0
	float16                          MinZRotation;                    // type:FLOAT16.0
	float16                          MaxZRotation;                    // type:FLOAT16.0
	float16                          MinScale;                        // type:FLOAT16.0
	float16                          MaxScale;                        // type:FLOAT16.0
	float16                          MinScaleZ;                       // type:FLOAT16.0
	float16                          MaxScaleZ;                       // type:FLOAT16.0
	float16                          MinZOffset;                      // type:FLOAT16.0
	float16                          MaxZOffset;                      // type:FLOAT16.0
	float16                          MinDistance;                     // type:FLOAT16.0
	float16                          MaxDistance;                     // type:FLOAT16.0
	uchar                            MinTintPalette;                  // type:UCHAR.0
	uchar                            MaxTintPalette;                  // type:UCHAR.0
	bitset<enum _0x38FFB219>         Flags;                           // type:BITSET.8BIT
};

struct _0x7FC926A9 : UIBehavior
{
};

struct _0x7FE1ADF1 : _0x8A0DC979
{
	struct _0x9111B57E               Overrides;                       // type:STRUCT.STRUCTURE
};

struct _0x7FE564D4
{
	struct _0xE28ECBE1               Scoring;                         // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               ChancesToForceWaitInFront;       // type:STRUCT.STRUCTURE
};

struct _0x7FF18F96 : _0x4DE833E2
{
};

struct _0x8000B9F4 : _0x3AB6499E
{
	struct _0x3B4C37F6               _0x4DEE23DA;                     // type:STRUCT.STRUCTURE
	struct _0x8841F7D9               _0x6C7EDD6F;                     // type:STRUCT.STRUCTURE
};

struct _0x8004210B : _0x0A510DA9
{
	enum _0xA17A58C9                 _0x2BD94F04;                     // type:ENUM.32BIT
};

struct _0x801563D3 : CAICondition
{
	float                            Range;                           // type:FLOAT.0
};

struct _0x801932D4 : CBaseSaveObject
{
	uint                                 codeVersion;                     // type:UINT.0
	uint                                 _0x950E5D41;                     // type:UINT.0
	bool                                 _0x651419F5;                     // type:BOOL.0
	struct _0xD5FF0435                   _0xA194AA94;                     // type:STRUCT.STRUCTURE
	array<struct CSaveChallengeBase>     _0x272D68AD;                     // type:ARRAY.ATARRAY
	array<struct _0x4C93E445>            _0x7CEBE57F;                     // type:ARRAY.ATARRAY
	struct _0xBCD5CE8E                   _0xE35C2493;                     // type:STRUCT.POINTER
};

struct _0x801B14B0
{
	int                              MinLookAtArmWoundTime;           // type:INT.0
	int                              MaxLookAtArmWoundTime;           // type:INT.0
	float                            UpperArmImpulseCap;              // type:FLOAT.0
	float                            LowerArmImpulseCap;              // type:FLOAT.0
	float                            ClavicleImpulseScale;            // type:FLOAT.0
	float                            UpperArmNoTorsoHitImpulseCap;    // type:FLOAT.0
	float                            LowerArmNoTorseHitImpulseCap;    // type:FLOAT.0
};

struct _0x801ED486 : _0x2CC15C40
{
	enum _0xBDE72CD8                 Operation;                       // type:ENUM.32BIT
};

struct _0x80456568 : _0xBC6A0384
{
	enum _0x73FC6A58                 CompareType;                     // type:ENUM.32BIT
};

struct _0x8047EFCD
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6978C5D6;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x31FB567E>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0x804F186A : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x805AA785
{
	array<struct _0x002B40A1>        ClothCustomEdges;                // type:ARRAY.ATARRAY
};

struct _0x806C8265 : CTuning
{
};

struct _0x80772CDC
{
	string                           sDefName;                        // type:STRING.CONST_STRING
	uchar                            uDefid;                          // type:UCHAR.0
	float                            fDefAttractionRadius;            // type:FLOAT.0
	float                            fDefInnerRadius;                 // type:FLOAT.0
	float                            fDefPermissivity;                // type:FLOAT.0
	float                            fDefMBRChangePermissivity;       // type:FLOAT.0
	float                            fDefAngleOvertureBias;           // type:FLOAT.0
	float                            fDefStoppingOverture;            // type:FLOAT.0
	float                            _0x94DB0D1B;                     // type:FLOAT.0
	float                            _0x0E0BAAEE;                     // type:FLOAT.0
	float                            _0x02E5A616;                     // type:FLOAT.0
	float                            _0xA62F0015;                     // type:FLOAT.0
	float                            _0xBA4F9347;                     // type:FLOAT.0
	float                            _0xB02C7FCB;                     // type:FLOAT.0
	float                            _0x45580209;                     // type:FLOAT.0
	bool                             bDefReposPedToCenter;            // type:BOOL.0
	bool                             _0x5106D2E3;                     // type:BOOL.0
};

struct _0x808BE4CC
{
	float                            ValueForMin;                     // type:FLOAT.0
	float                            ValueForMax;                     // type:FLOAT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0x809354D7
{
	string                           Cloth;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8096CB69
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           Flag;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x80BB8F56
{
	array<float, 3>                  vPosition;                       // type:ARRAY.MEMBER
	struct _0x936F849B               qOrientation;                    // type:STRUCT.STRUCTURE
	string                           id;                              // type:STRING.ATHASHVALUE
	string                           _0x31131807;                     // type:STRING.ATHASHVALUE
	array<uint64, 2>                 _0xC3D616E9;                     // type:ARRAY.MEMBER
	uchar                            _0xBD1C02A9;                     // type:UCHAR.0
	short                            _0x768CBB53;                     // type:SHORT.0
};

struct _0x80EF8D1E : CTuning
{
	float                            _0x15EF1BC3;                     // type:FLOAT.0
};

struct _0x810637E9 : _0x17D63CD1
{
	map<string, struct _0x17D63CD1>     ChildNodes;                      // type:MAP.ATBINARYMAP
	string                              DefaultValue;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x810993C9 : FeedMessageTemplate
{
	string                           _0xE08BF5E1;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x81146419 : _0xA7FB0217
{
};

struct _0x811C03CF
{
	uint                             InteriorProxyHash;               // type:UINT.0
	int                              PortalIdx;                       // type:INT.0
	int                              RoomIdx;                         // type:INT.0
	uint                             DestInteriorHash;                // type:UINT.0
	int                              DestRoomIdx;                     // type:INT.0
	array<struct _0xF6624EF9>        PortalEntityList;                // type:ARRAY.ATARRAY
};

struct _0x813453EE
{
	array<struct _0xA6922C70>        _0x79B1908C;                     // type:ARRAY.ATARRAY
};

struct _0x8148C135
{
};

struct _0x814DB860
{
	array<struct _0x814DB860>        children;                        // type:ARRAY.ATARRAY
	array<struct _0xA9994D94>        SpecializedLayoutParams;         // type:ARRAY.ATARRAY
	struct _0x8148C135               LayoutParams;                    // type:STRUCT.POINTER
	string                           name;                            // type:STRING.ATNSHASHSTRING
	string                           typeName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x81817E6E : _0xAF24E56C
{
};

struct _0x81907918
{
	bool                             IsBox;                           // type:BOOL.0
	bool                             AdditiveBlend;                   // type:BOOL.0
	vec3V                            Position;                        // type:VEC3V.0
	vec3V                            PositionOffset;                  // type:VEC3V.0
	vec3V                            Scale;                           // type:VEC3V.0
	float                            Falloff;                         // type:FLOAT.0
	float                            FalloffCurve;                    // type:FLOAT.0
	matrix33V                        Transformation;                  // type:MAT33V.0
	float                            AmbientIntensity;                // type:FLOAT.0
	float                            GlobalEmissive;                  // type:FLOAT.0
	vec2V                            NoiseParams;                     // type:VEC2V.0
	vec3V                            Scattering;                      // type:VEC3V.0
	float                            Density;                         // type:FLOAT.0
	float                            Anisotropy;                      // type:FLOAT.0
	float                            WaterDropletDensity;             // type:FLOAT.0
	uint64                           uuid;                            // type:UINT64.0
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x81A5B004
{
	vec3V                            AutoOpenVolumeOffset;            // type:VEC3V.0
	vec3V                            _0xE4A2EC71;                     // type:VEC3V.0
	float                            _0x1111119D;                     // type:FLOAT.0
	bitset<enum _0xA77304C3>         Flags;                           // type:BITSET.32BIT
	float                            AutoOpenRadiusModifier;          // type:FLOAT.0
	float                            AutoOpenRate;                    // type:FLOAT.0
	float                            AutoOpenCosineAngleBetweenThreshold; // type:FLOAT.0
	bool                             AutoOpenCloseRateTaper;          // type:BOOL.0
	bool                             UseAutoOpenTriggerBox;           // type:BOOL.0
	bool                             CustomTriggerBox;                // type:BOOL.0
	struct rage__spdAABB             TriggerBoxMinMax;                // type:STRUCT.STRUCTURE
	bool                             BreakableByVehicle;              // type:BOOL.0
	float                            BreakingImpulse;                 // type:FLOAT.0
	bool                             ShouldLatchShut;                 // type:BOOL.0
	float                            MassMultiplier;                  // type:FLOAT.0
	float                            _0x45501168;                     // type:FLOAT.0
	float                            _0xBEBD6678;                     // type:FLOAT.0
	float                            WeaponImpulseMultiplier;         // type:FLOAT.0
	float                            RotationLimitAngle;              // type:FLOAT.0
	float                            TorqueAngularVelocityLimit;      // type:FLOAT.0
	float                            _0x1C5DFC9F;                     // type:FLOAT.0
	enum StdDoorRotDir               StdDoorRotDir;                   // type:ENUM.32BIT
};

struct _0x81ACA8F2
{
	int                              MaxDoorExtensions;               // type:INT.0
	int                              MaxLightExtensions;              // type:INT.0
	int                              MaxSpawnPointOverrideExtensions; // type:INT.0
	int                              MaxExpressionExtensions;         // type:INT.0
	int                              MaxClothCollisionsExtensions;    // type:INT.0
	int                              _0x4D751670;                     // type:INT.0
	int                              _0x6C56CA7E;                     // type:INT.0
	int                              _0x356D175D;                     // type:INT.0
};

struct _0x81B3F73F : _0x3BA4E73C
{
	string                           _0xB15D630D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4396A83C;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x9C68AE0C                 TriggerType;                     // type:ENUM.32BIT
};

struct _0x81DC733B
{
	string                           _0xB8E9EB09;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6134E1B8;                     // type:FLOAT.0
	bool                             _0x52CA6C66;                     // type:BOOL.0
	bool                             _0xE4B5BD9C;                     // type:BOOL.0
	bool                             _0xE1BB7FC6;                     // type:BOOL.0
	bool                             _0x3EAEA21D;                     // type:BOOL.0
	bool                             _0xC0D77194;                     // type:BOOL.0
	bool                             _0xFF130C0F;                     // type:BOOL.0
	bool                             _0x1F4A959B;                     // type:BOOL.0
	float                            _0x552270DC;                     // type:FLOAT.0
	bool                             _0x7B570B7C;                     // type:BOOL.0
	float                            _0x270B77FD;                     // type:FLOAT.0
	bool                             _0xEDDA2C26;                     // type:BOOL.0
	uint                             _0xF8F631A6;                     // type:UINT.0
	uint                             _0x98384411;                     // type:UINT.0
	uint                             _0xFAE2D796;                     // type:UINT.0
	float                            _0x3FECF75B;                     // type:FLOAT.0
	float                            _0xF70E1475;                     // type:FLOAT.0
};

struct _0x81F1EAB6
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           RuleSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x81F99C77
{
	string                           boneName;                        // type:STRING.ATSTRING
	enum eAnimBoneTag                boneId;                          // type:ENUM.32BIT
};

struct _0x82018A3E : uiEventDataBase
{
	string                           data;                            // type:STRING.ATNSHASHSTRING
};

struct _0x820D3C93 : _0x2F7DA38D
{
	string                           _0x657F4EE8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x82190370 : CTuning
{
	float                            _0x8CEF3541;                     // type:FLOAT.0
	float                            _0xB6B13173;                     // type:FLOAT.0
	float                            _0x7C4FAC9D;                     // type:FLOAT.0
	float                            _0x489A2DB0;                     // type:FLOAT.0
	float                            _0x0E0209E6;                     // type:FLOAT.0
};

struct _0x8244CA58 : _0x8A0DC979
{
};

struct _0x824B5CDA : _0xD4BF5556
{
	enum eTimeStringFormat           StringFormat;                    // type:ENUM.32BIT
	bool                             FullMilliseconds;                // type:BOOL.0
};

struct _0x8250CB03
{
	string                                                         modelName;                       // type:STRING.CONST_STRING
	string                                                         txdName;                         // type:STRING.CONST_STRING
	string                                                         handlingId;                      // type:STRING.CONST_STRING
	string                                                         gameName;                        // type:STRING.CONST_STRING
	string                                                         vehicleMakeName;                 // type:STRING.CONST_STRING
	string                                                         animConvRoofDictName;            // type:STRING.CONST_STRING
	string                                                         animConvRoofName;                // type:STRING.CONST_STRING
	string                                                         ptfxAssetName;                   // type:STRING.CONST_STRING
	string                                                         statName;                        // type:STRING.ATNSHASHSTRING
	string                                                         ExpressionSetName;               // type:STRING.ATNONFINALHASHSTRING
	string                                                         wheelFrontModelName;             // type:STRING.ATNONFINALHASHSTRING
	string                                                         wheelRearModelName;              // type:STRING.ATNONFINALHASHSTRING
	string                                                         audioNameHash;                   // type:STRING.ATNONFINALHASHSTRING
	string                                                         layout;                          // type:STRING.ATNONFINALHASHSTRING
	string                                                         POVTuningInfo;                   // type:STRING.ATNONFINALHASHSTRING
	string                                                         coverBoundOffsets;               // type:STRING.ATNONFINALHASHSTRING
	string                                                         explosionInfo;                   // type:STRING.ATNONFINALHASHSTRING
	string                                                         scenarioLayout;                  // type:STRING.ATNONFINALHASHSTRING
	string                                                         vfxInfoName;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                                                  firstPersonDrivebyData;          // type:ARRAY.ATARRAY
	string                                                         draftAnimalModelSetName;         // type:STRING.ATNONFINALHASHSTRING
	vec3                                                           FirstPersonDriveByIKOffset;      // type:VECTOR3.0
	vec3                                                           FirstPersonDriveByUnarmedIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonDriveByLeftPassengerIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonDriveByRightPassengerIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonDriveByRightRearPassengerIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonDriveByLeftPassengerUnarmedIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonDriveByRightPassengerUnarmedIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonProjectileDriveByIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonProjectileDriveByPassengerIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonProjectileDriveByRearLeftIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonProjectileDriveByRearRightIKOffset; // type:VECTOR3.0
	vec3                                                           FirstPersonMobilePhoneOffset;    // type:VECTOR3.0
	vec3                                                           FirstPersonPassengerMobilePhoneOffset; // type:VECTOR3.0
	array<struct _0x309C3B9F>                                      FirstPersonMobilePhoneSeatIKOffset; // type:ARRAY.ATARRAY
	string                                                         ladderLayout;                    // type:STRING.ATNONFINALHASHSTRING
	string                                                         particleEffectLayout;            // type:STRING.ATNONFINALHASHSTRING
	string                                                         explosionLayout;                 // type:STRING.ATNONFINALHASHSTRING
	string                                                         lootableVehicleConfig;           // type:STRING.ATNONFINALHASHSTRING
	string                                                         breakableVehicleLockConditions;  // type:STRING.ATNONFINALHASHSTRING
	bool                                                           AllowPretendOccupants;           // type:BOOL.0
	bool                                                           AllowJoyriding;                  // type:BOOL.0
	bool                                                           AllowSundayDriving;              // type:BOOL.0
	bool                                                           AllowBodyColorMapping;           // type:BOOL.0
	array<uint64>                                                  amvIds;                          // type:ARRAY.ATARRAY
	array<uint64>                                                  fogVolumeIds;                    // type:ARRAY.ATARRAY
	float                                                          wheelScale;                      // type:FLOAT.0
	float                                                          wheelScaleRear;                  // type:FLOAT.0
	float                                                          dirtLevelMin;                    // type:FLOAT.0
	float                                                          dirtLevelMax;                    // type:FLOAT.0
	float                                                          envEffScaleMin;                  // type:FLOAT.0
	float                                                          envEffScaleMax;                  // type:FLOAT.0
	float                                                          envEffScaleMin2;                 // type:FLOAT.0
	float                                                          envEffScaleMax2;                 // type:FLOAT.0
	float                                                          damageMapScale;                  // type:FLOAT.0
	float                                                          damageOffsetScale;               // type:FLOAT.0
	uint                                                           diffuseTint;                     // type:UINT.1
	float                                                          steerWheelMult;                  // type:FLOAT.0
	float                                                          firstPersonSteerWheelMult;       // type:FLOAT.0
	float                                                          HDTextureDist;                   // type:FLOAT.0
	array<float, 6>                                                lodDistances;                    // type:ARRAY.MEMBER
	ushort                                                         frequency;                       // type:USHORT.0
	enum eSwankness                                                swankness;                       // type:ENUM.32BIT
	ushort                                                         maxNum;                          // type:USHORT.0
	bitset<enum _0x7498802B>                                       flags;                           // type:BITSET.32BIT
	enum VehicleType                                               type;                            // type:ENUM.32BIT
	enum eVehiclePlateType                                         plateType;                       // type:ENUM.32BIT
	enum eVehicleDashboardType                                     dashboardType;                   // type:ENUM.32BIT
	enum eVehicleClass                                             vehicleClass;                    // type:ENUM.32BIT
	array<string>                                                  trailers;                        // type:ARRAY.ATARRAY
	array<string>                                                  additionalTrailers;              // type:ARRAY.ATARRAY
	array<struct _0xE57DD5FD>                                      propsets;                        // type:ARRAY.ATARRAY
	array<struct _0xE57DD5FD>                                      lantern_propsets;                // type:ARRAY.ATARRAY
	array<string>                                                  danglyPartProps;                 // type:ARRAY.ATARRAY
	array<struct _0xE57DD5FD>                                      anim_propsets;                   // type:ARRAY.ATARRAY
	array<struct _0xF490B1A8>                                      animatedProps;                   // type:ARRAY.ATARRAY
	array<struct _0x65C80F67>                                      drivers;                         // type:ARRAY.ATARRAY
	array<bitset<enum _0xF575C67D>>                                extraIncludes;                   // type:ARRAY.ATARRAY
	array<struct _0xF7AB507E>                                      extraAdditionInfo;               // type:ARRAY.ATARRAY
	array<struct _0x3FA05BD8>                                      vfxExtraInfos;                   // type:ARRAY.ATARRAY
	bitset<enum _0xF575C67D>                                       requiredExtras;                  // type:BITSET.32BIT
	enum eVehicleWheelType                                         wheelType;                       // type:ENUM.32BIT
	bitset<enum _0xF575C67D>                                       canopyExtras;                    // type:BITSET.32BIT
	array<enum eDoorId>                                            doorsWithCollisionWhenClosed;    // type:ARRAY.ATARRAY
	array<enum eDoorId>                                            driveableDoors;                  // type:ARRAY.ATARRAY
	array<enum eWindowId>                                          animConvRoofWindowsAffected;     // type:ARRAY.ATARRAY
	array<struct _0xC8FC9A0A>                                      doorJointInfo;                   // type:ARRAY.ATARRAY
	uchar                                                          identicalModelSpawnDistance;     // type:UCHAR.0
	uchar                                                          maxNumOfSameColor;               // type:UCHAR.0
	float                                                          defaultBodyHealth;               // type:FLOAT.0
	float                                                          pretendOccupantsScale;           // type:FLOAT.0
	float                                                          visibleSpawnDistScale;           // type:FLOAT.0
	array<string>                                                  rewards;                         // type:ARRAY.ATARRAY
	string                                                         NmBraceOverrideSet;              // type:STRING.ATNONFINALHASHSTRING
	vec3                                                           buoyancySphereOffset;            // type:VECTOR3.0
	float                                                          buoyancySphereSizeScale;         // type:FLOAT.0
	array<struct _0x99AB9848>                                      additionalVfxWaterSamples;       // type:ARRAY.ATARRAY
	float                                                          trackerPathWidth;                // type:FLOAT.0
	float                                                          vegPushStrength;                 // type:FLOAT.0
	bool                                                           vegPushFromWheelsBBX;            // type:BOOL.0
	bool                                                           vegPushUnderWheels;              // type:BOOL.0
	float                                                          vegClipScaleMinor;               // type:FLOAT.0
	float                                                          vegClipScaleMajor;               // type:FLOAT.0
	float                                                          vegClipMinHeight;                // type:FLOAT.0
	float                                                          vegClipMaxHeight;                // type:FLOAT.0
	float                                                          weaponForceMult;                 // type:FLOAT.0
	bool                                                           bumpersNeedToCollideWithMap;     // type:BOOL.0
	bool                                                           needsRopeTexture;                // type:BOOL.0
	struct CVehicleModelInfo__CVehicleOverrideRagdollThreshold     pOverrideRagdollThreshold;       // type:STRUCT.POINTER
	float                                                          maxSteeringWheelAngle;           // type:FLOAT.0
	float                                                          _0x67A1548B;                     // type:FLOAT.0
	float                                                          minSeatHeight;                   // type:FLOAT.0
	int                                                            ReinsDefinitionIndex;            // type:INT.0
	vec3                                                           ReinsOffset;                     // type:VECTOR3.0
	vec3                                                           lockOnPositionOffset;            // type:VECTOR3.0
	array<string>                                                  ModelDependencies;               // type:ARRAY.ATARRAY
	vec3V                                                          UIEnterPromptOverrideOffset;     // type:VEC3V.0
	float                                                          UIEnterPromptOverrideRadius;     // type:FLOAT.0
	array<enum _0xBEEA6142>                                        _0xC0BE9603;                     // type:ARRAY.ATARRAY
	float                                                          initialDamageLevelMin;           // type:FLOAT.0
	float                                                          initialDamageLevelMax;           // type:FLOAT.0
	float                                                          maxSuspensionDamageSkew;         // type:FLOAT.0
	array<struct _0xF5F9F610>                                      ropeSecuredCargo;                // type:ARRAY.ATARRAY
	struct _0x8EAE8F47                                             CameraInfo;                      // type:STRUCT.STRUCTURE
	array<vec3>                                                    PlayerNavigationHelpers;         // type:ARRAY.ATARRAY
	bool                                                           UseOBBforHDUpgrade;              // type:BOOL.0
	float                                                          BoundOffsetForHD;                // type:FLOAT.0
	bool                                                           supportsFlooding;                // type:BOOL.0
	bool                                                           hasNoWaterStencil;               // type:BOOL.0
	bool                                                           floodingFromBulletHoles;         // type:BOOL.0
	bool                                                           skipWaterOcclusion;              // type:BOOL.0
	float                                                          _0xE04206C1;                     // type:FLOAT.0
	float                                                          floodedWaterOffset;              // type:FLOAT.0
	float                                                          _0xD57D5AD6;                     // type:FLOAT.0
	float                                                          entryExitForceMult;              // type:FLOAT.0
	vec3V                                                          floatingVegOcclusionScale;       // type:VEC3V.0
	float                                                          floatingVegOcclusionOffset;      // type:FLOAT.0
	vec3V                                                          vehicleStowMTHOffset;            // type:VEC3V.0
};

struct _0x8254EAFD
{
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           ParamId;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8275D61F
{
	string                           _0xBFBD3404;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB406D6A6;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x54D89C1E>        streaks;                         // type:ARRAY.ATARRAY
};

struct _0x8277295E
{
	string                           _0xB1344853;                     // type:STRING.ATFINALHASHSTRING
	float                            alphaCurve;                      // type:FLOAT.0
	float                            _0xA13FF7B3;                     // type:FLOAT.0
	float                            _0x931E2049;                     // type:FLOAT.0
	float                            _0xB625E42A;                     // type:FLOAT.0
	float                            _0x70B43CA1;                     // type:FLOAT.0
	float                            _0xC4A5A462;                     // type:FLOAT.0
	float                            _0xEAA71EB8;                     // type:FLOAT.0
	float                            _0x76A65E20;                     // type:FLOAT.0
	float                            _0xD6D97132;                     // type:FLOAT.0
	float                            _0x90A9BC24;                     // type:FLOAT.0
	float                            _0xEA402F68;                     // type:FLOAT.0
	float                            _0x567DA4FE;                     // type:FLOAT.0
	float                            normalScale;                     // type:FLOAT.0
	float                            _0xE4BE3B70;                     // type:FLOAT.0
	float                            _0x26E5D460;                     // type:FLOAT.0
	float                            metallic;                        // type:FLOAT.0
	float                            _0xFA131CDE;                     // type:FLOAT.0
	float                            _0xF15917F3;                     // type:FLOAT.0
	string                           _0x663364A3;                     // type:STRING.ATFINALHASHSTRING
	string                           _0x83DC66DA;                     // type:STRING.ATFINALHASHSTRING
	string                           _0xD7B8D0D8;                     // type:STRING.ATFINALHASHSTRING
};

struct _0x827D8F9A : _0x22B199F9
{
	float                            Time;                            // type:FLOAT.0
};

struct _0x827F07E9 : _0x9776DF94
{
};

struct _0x8293073B
{
	string                           _0xA85A14C1;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x0592E85D                 _0xB624013E;                     // type:ENUM.32BIT
	enum _0x38BCED34                 _0x4450F287;                     // type:ENUM.32BIT
	string                           _0x08D23800;                     // type:STRING.ATHASHVALUE16U
	string                           _0xB5418080;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xC80228CF                 _0x0F22A8C1;                     // type:ENUM.32BIT
	enum _0x2504D01F                 _0x12B11293;                     // type:ENUM.32BIT
	enum _0xEF5B223A                 _0xE68A0ADE;                     // type:ENUM.32BIT
	enum _0x724E2DCC                 _0x74138AB4;                     // type:ENUM.32BIT
	enum _0xF26C492D                 _0x1BEEECC9;                     // type:ENUM.32BIT
};

struct _0x829A2B08 : _0x0A510DA9
{
};

struct _0x82A307C0 : uiDataAdjustableBehaviorBase
{
	struct _0x8FE1DED2               Value;                           // type:STRUCT.STRUCTURE
	struct _0x8FE1DED2               Step;                            // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               StepBindingContext;              // type:STRUCT.STRUCTURE
};

struct _0x82A61E68
{
	string                           _0x0C414BB5;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x8D6B858F;                     // type:BOOL.0
	bool                             _0xF7F47CD3;                     // type:BOOL.0
	bool                             _0xC46F073A;                     // type:BOOL.0
	bool                             _0x7275868E;                     // type:BOOL.0
	bool                             _0xA6DEA766;                     // type:BOOL.0
	bool                             _0xD660DCF4;                     // type:BOOL.0
	bool                             _0x5201B6A4;                     // type:BOOL.0
	bool                             _0x894B8520;                     // type:BOOL.0
	bool                             _0xF6160FB7;                     // type:BOOL.0
	bool                             _0xC21A7D85;                     // type:BOOL.0
	uchar                            Priority;                        // type:UCHAR.0
	bool                             Loop;                            // type:BOOL.0
	enum _0xDACF69C7                 _0x09B920BD;                     // type:ENUM.32BIT
	string                           _0xDEF3D25C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC6F0A000;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xD95D5CF9                 _0x238AF217;                     // type:ENUM.32BIT
	bool                             _0x33E5E207;                     // type:BOOL.0
	bool                             _0xE0FB2D26;                     // type:BOOL.0
	bool                             _0x040BDB15;                     // type:BOOL.0
	float                            _0x5680F10A;                     // type:FLOAT.0
	float                            _0x079CFBAB;                     // type:FLOAT.0
	float                            _0x42B38B47;                     // type:FLOAT.0
	bool                             _0xEEA1A0F5;                     // type:BOOL.0
	uint                             _0x726BDD47;                     // type:UINT.0
	float                            _0x75F06D85;                     // type:FLOAT.0
	float                            _0x6B30E172;                     // type:FLOAT.0
	float                            _0xD53F57F1;                     // type:FLOAT.0
	uint                             TintColor;                       // type:UINT.1
	int                              _0xA69B6DDD;                     // type:INT.0
};

struct _0x82B1D4DA
{
	bool                             _0xF34BD310;                     // type:BOOL.0
	float                            _0x94720DEC;                     // type:FLOAT.0
	float                            Red;                             // type:FLOAT.0
	float                            Blue;                            // type:FLOAT.0
	float                            Green;                           // type:FLOAT.0
};

struct _0x82D5B4A9 : uiDataAdjustableBehaviorBase
{
	struct _0x5BF3C96A               Value;                           // type:STRUCT.STRUCTURE
	struct _0x5BF3C96A               Step;                            // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               StepBindingContext;              // type:STRUCT.STRUCTURE
};

struct _0x82F7198E : _0x0A510DA9
{
	string                           context;                         // type:STRING.ATNONFINALHASHSTRING
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xA0889763               data;                            // type:STRUCT.POINTER
};

struct _0x8332873A : _0x0A510DA9
{
};

struct _0x83361866
{
	bool                             Enabled;                         // type:BOOL.0
	float                            X;                               // type:FLOAT.0
	float                            Y;                               // type:FLOAT.0
	float                            Z;                               // type:FLOAT.0
};

struct _0x834F097F
{
	string                               clientSystemName;                // type:STRING.ATNONFINALHASHSTRING
	string                               tileTextureNamePrefix;           // type:STRING.ATSTRING
	string                               tileTextureNameSuffix;           // type:STRING.ATSTRING
	vec3                                 origin;                          // type:VECTOR3.0
	uint                                 width;                           // type:UINT.0
	uint                                 height;                          // type:UINT.0
	uint                                 tileSize;                        // type:UINT.0
	float                                streamRadius;                    // type:FLOAT.0
	float                                zInflation;                      // type:FLOAT.0
	array<int>                           overrideIndices;                 // type:ARRAY.ATARRAY
	array<struct GridSectorOverride>     sectorOverrides;                 // type:ARRAY.ATARRAY
	enum _0x78CC718A                     type;                            // type:ENUM.32BIT
};

struct _0x834F3BF2 : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	string                           Preset;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x835A7F21 : _0x412FE519
{
	struct _0x4A7AD954               MinBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               MaxBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               Min;                             // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               Max;                             // type:STRUCT.STRUCTURE
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
};

struct _0x83623B47 : CTuning
{
	float                            MaxDistance;                     // type:FLOAT.0
	float                            _0x00486937;                     // type:FLOAT.0
	float                            CloseDistance;                   // type:FLOAT.0
	float                            _0xD0B50680;                     // type:FLOAT.0
	float                            _0x886E2289;                     // type:FLOAT.0
};

struct _0x83749E13 : _0x184818A1
{
};

struct _0x8392FE6B : _0x2D57BE23
{
};

struct _0x839EA38D : _0x84163146
{
	enum ePedResetFlags              _0x6E100FF4;                     // type:ENUM.32BIT
};

struct _0x83A630F8 : _0x15C825D1
{
};

struct _0x83A6D56C
{
	float                            BurstDurationMin;                // type:FLOAT.0
	float                            BurstDurationMax;                // type:FLOAT.0
	int                              BurstSeqCount;                   // type:INT.0
	float                            RootOrbitXVariance;              // type:FLOAT.0
	float                            _0xA2B100FC;                     // type:FLOAT.0
	float                            _0x76740643;                     // type:FLOAT.0
	float                            DelayMin;                        // type:FLOAT.0
	float                            DelayMax;                        // type:FLOAT.0
	float                            SizeMin;                         // type:FLOAT.0
	float                            SizeMax;                         // type:FLOAT.0
};

struct _0x83B12E77
{
	string                           uLayerKey;                       // type:STRING.ATNONFINALHASHSTRING
	float                            fRevealSize;                     // type:FLOAT.0
	float                            fRevealHotSpot;                  // type:FLOAT.0
	float                            fRevealIntensity;                // type:FLOAT.0
	float                            fBlipRevealSize;                 // type:FLOAT.0
	float                            fBlipRevealIntensity;            // type:FLOAT.0
	float                            fVolumeRevealIntensity;          // type:FLOAT.0
	float                            fMoveStep;                       // type:FLOAT.0
};

struct _0x83B6678B : _0x032DA011
{
	enum _0x36661C65                 _0xB417EB2E;                     // type:ENUM.32BIT
	array<struct _0x3B902546>        _0x49A82BFE;                     // type:ARRAY.ATARRAY
	struct _0x688710E1               _0xC0237FE5;                     // type:STRUCT.STRUCTURE
};

struct _0x83BDB18D : _0x4DE5602F
{
	string                           _0xAEF57FD7;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x83BE83FD
{
	string                           Condition;                       // type:STRING.ATNONFINALHASHSTRING
	string                           DisabledTextId;                  // type:STRING.ATNONFINALHASHSTRING
};

struct _0x83C16C3B
{
	string                           _0x1B983112;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x0D339683;                     // type:FLOAT.0
	string                           _0x81043C42;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x14945F63;                     // type:FLOAT.0
};

struct _0x83EA8975 : _0xE0935F17
{
};

struct _0x840088DE : UIBehavior
{
};

struct _0x84008D98 : CAICondition
{
	bool                             _0xEE91B123;                     // type:BOOL.0
};

struct _0x8414DBE6 : _0x8DCC010D
{
	struct _0xED16C5B0               _0x66945EF4;                     // type:STRUCT.STRUCTURE
};

struct _0x841522E5 : CTuning
{
	float                            _0x40513252;                     // type:FLOAT.0
	float                            _0xC8D234A9;                     // type:FLOAT.0
	float                            _0x2A0BA0A3;                     // type:FLOAT.0
	float                            _0x72AF3B60;                     // type:FLOAT.0
	float                            _0x728932BF;                     // type:FLOAT.0
	float                            _0xD10A6526;                     // type:FLOAT.0
	float                            _0x3A158E31;                     // type:FLOAT.0
	float                            _0x6A2C2E19;                     // type:FLOAT.0
	float                            _0xD3C31AC1;                     // type:FLOAT.0
};

struct _0x84163146 : _0x5604AFA2
{
	bool                             Enable;                          // type:BOOL.0
};

struct _0x8416DCAB
{
	array<struct _0x696B3585>        sets;                            // type:ARRAY.ATARRAY
};

struct _0x841AC52D
{
	string                           FishingConfigDataHash;           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x841BCF61 : _0x61D1AAB0
{
};

struct _0x841DA14C
{
	float                            fDropDownMinDistance;            // type:FLOAT.0
	float                            fDropDownMaxDistance;            // type:FLOAT.0
	float                            fDropDownBestDistanceMin;        // type:FLOAT.0
	float                            fDropDownBestDistanceMax;        // type:FLOAT.0
};

struct _0x841F381E
{
	string                           _0x7EFFBD94;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE532732B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x84216D89 : _0xDCC3E830
{
};

struct _0x8433B49A
{
	float                            sampleSize;                      // type:FLOAT.0
	float                            boneSize;                        // type:FLOAT.0
	bool                             _0xB23F0FCC;                     // type:BOOL.0
	bool                             splashInPtFxEnabled;             // type:BOOL.0
	bool                             splashOutPtFxEnabled;            // type:BOOL.0
	bool                             splashWadePtFxEnabled;           // type:BOOL.0
	bool                             splashTrailPtFxEnabled;          // type:BOOL.0
	bool                             _0x97B43F80;                     // type:BOOL.0
	float                            splashInPtFxRange;               // type:FLOAT.0
	float                            splashOutPtFxRange;              // type:FLOAT.0
	float                            splashWadePtFxRange;             // type:FLOAT.0
	float                            splashTrailPtFxRange;            // type:FLOAT.0
	float                            _0x444FD301;                     // type:FLOAT.0
	string                           _0xA6CA5CE5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x84065A77;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB9346BF4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x49F1FF02;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x843A7335 : CTuning
{
	float                            _0xDC593FE5;                     // type:FLOAT.0
	uint                             _0x5E1BCB76;                     // type:UINT.0
	float                            _0x572F6674;                     // type:FLOAT.0
	float                            _0x19E380FA;                     // type:FLOAT.0
	uint                             _0xFFFB3645;                     // type:UINT.0
	uint                             _0x3101D275;                     // type:UINT.0
	uint                             _0xBDF0E27E;                     // type:UINT.0
	uint                             _0xFCC8CFF1;                     // type:UINT.0
};

struct _0x8446DD4C : CTuning
{
	float                            _0x30E48A26;                     // type:FLOAT.0
	float                            _0x68685DA5;                     // type:FLOAT.0
	float                            _0x255EAF42;                     // type:FLOAT.0
	float                            _0xC3917AF9;                     // type:FLOAT.0
	uint                             _0xA1D4CE24;                     // type:UINT.0
	int                              _0x2558A3C7;                     // type:INT.0
	int                              _0x4AE843D2;                     // type:INT.0
	int                              _0x7159A75E;                     // type:INT.0
	int                              _0x5EC64CBC;                     // type:INT.0
	int                              _0x36212574;                     // type:INT.0
	int                              _0xCAC540DE;                     // type:INT.0
	int                              _0x43D176F0;                     // type:INT.0
	int                              _0x217BE9A8;                     // type:INT.0
	int                              _0xD7F97D92;                     // type:INT.0
	int                              _0x649FE668;                     // type:INT.0
	int                              _0x54F33492;                     // type:INT.0
	int                              _0x40A1BA6D;                     // type:INT.0
	int                              _0xE995A07B;                     // type:INT.0
	int                              _0x983E1F4A;                     // type:INT.0
	int                              _0x78694103;                     // type:INT.0
	int                              _0x9E730594;                     // type:INT.0
	int                              _0xF9999424;                     // type:INT.0
	int                              _0xD5FC9D0F;                     // type:INT.0
	int                              _0x651ABCB6;                     // type:INT.0
	int                              _0xE9E18E08;                     // type:INT.0
	int                              _0x80764066;                     // type:INT.0
	int                              _0x7D9763A2;                     // type:INT.0
	int                              _0x584193BF;                     // type:INT.0
	int                              _0x09989218;                     // type:INT.0
	int                              _0x63365151;                     // type:INT.0
	string                           _0x34A88E5F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x62CE6AAA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5D595FC0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0B233B55;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8447597E : _0x0A510DA9
{
	string                           _0x2FB70373;                     // type:STRING.ATNSHASHSTRING
	bool                             _0x6D2A0C8C;                     // type:BOOL.0
};

struct _0x844C34AD
{
	string                           Reaction;                        // type:STRING.ATNONFINALHASHSTRING
	float                            Weight;                          // type:FLOAT.0
};

struct _0x844CF9E6
{
	string                           Crime;                           // type:STRING.ATNONFINALHASHSTRING
	float                            MaxTime;                         // type:FLOAT.0
	bitset<enum _0xC1F5DDC4>         Flags;                           // type:BITSET.8BIT
};

struct _0x84518386
{
	struct _0x514A8625               metadata;                        // type:STRUCT.STRUCTURE
	array<struct _0x36EC4E5D>        nodes;                           // type:ARRAY._0x2087BB00
};

struct _0x84611D35
{
};

struct _0x8462386D : _0x4198511D
{
};

struct _0x8475A16C
{
	string                           weatherName;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x6115BB07               temperatureSettings;             // type:STRUCT.STRUCTURE
};

struct _0x8489A8F3 : _0x032DA011
{
	string                           _0x6136149B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9C7EFE84;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x84B8A2C4 : _0x23232399
{
	bool                             _0x3C694000;                     // type:BOOL.0
};

struct _0x84BD36A0 : CAmbientModelSet
{
};

struct _0x84E24733
{
	uchar                            _0x3387B9C6;                     // type:UCHAR.0
	uchar                            _0xF91B44EA;                     // type:UCHAR.0
	uchar                            _0x511674DF;                     // type:UCHAR.0
	uchar                            _0xDD5F6C73;                     // type:UCHAR.0
	uchar                            _0xE65FFE7C;                     // type:UCHAR.0
	uchar                            _0xB8DCA36A;                     // type:UCHAR.0
	uchar                            _0x008EA669;                     // type:UCHAR.0
	uchar                            _0x5E8CE26C;                     // type:UCHAR.0
	uchar                            _0x236C6C30;                     // type:UCHAR.0
	uchar                            _0x74D41D55;                     // type:UCHAR.0
	uchar                            _0xD7DCE369;                     // type:UCHAR.0
	uchar                            _0x562CE003;                     // type:UCHAR.0
	uchar                            _0x90793D62;                     // type:UCHAR.0
	uchar                            _0x4BC8B3FE;                     // type:UCHAR.0
	uchar                            _0x74508515;                     // type:UCHAR.0
	uchar                            _0x170E5A1C;                     // type:UCHAR.0
	uchar                            _0x7DD427A6;                     // type:UCHAR.0
	uchar                            _0xF2C49185;                     // type:UCHAR.0
	uchar                            _0x4B2AA3BC;                     // type:UCHAR.0
	uchar                            _0xF5B6F8D2;                     // type:UCHAR.0
	uchar                            _0xEF346BE5;                     // type:UCHAR.0
	uchar                            _0x5D86BC01;                     // type:UCHAR.0
	uchar                            _0xB131635D;                     // type:UCHAR.0
	uchar                            _0x306D61D3;                     // type:UCHAR.0
	uchar                            _0x79D4B14F;                     // type:UCHAR.0
	uchar                            _0x99FB71D8;                     // type:UCHAR.0
	uchar                            _0x8C58D693;                     // type:UCHAR.0
	uchar                            _0x5C676017;                     // type:UCHAR.0
	uchar                            _0x185257F2;                     // type:UCHAR.0
	uchar                            _0xAAEE7B10;                     // type:UCHAR.0
	uchar                            _0x9D23A96C;                     // type:UCHAR.0
	uchar                            _0x4D19895D;                     // type:UCHAR.0
	uchar                            _0x78EDE105;                     // type:UCHAR.0
	uchar                            _0xD6659033;                     // type:UCHAR.0
	uchar                            _0x20A7A4B2;                     // type:UCHAR.0
	uchar                            _0xC5CFEF1C;                     // type:UCHAR.0
	float                            _0x3EB1B259;                     // type:FLOAT.0
	float                            _0x69CB4986;                     // type:FLOAT.0
};

struct _0x84E3B91C : _0x8A0DC979
{
	enum _0x168462FD                 _0xC49AB9C2;                     // type:ENUM.32BIT
	enum _0x168462FD                 _0xAB309DA2;                     // type:ENUM.32BIT
};

struct _0x84EA1D10 : CTuning
{
	struct CNmTuningSet               Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet               Update;                          // type:STRUCT.STRUCTURE
	array<struct CNmTuningSet, 5>     Gait;                            // type:ARRAY.MEMBER
	struct CNmTuningSet               _0x057802D3;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet               _0x1763DCE8;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet               _0xAA94947C;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet               _0xA08F962C;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet               _0xD905995A;                     // type:STRUCT.STRUCTURE
	struct _0xDF771251                BlendOutThreshold;               // type:STRUCT.STRUCTURE
	struct _0xDF771251                _0x725F6660;                     // type:STRUCT.STRUCTURE
};

struct _0x85317215
{
	struct _0x4FA6E5D7               Value;                           // type:STRUCT.POINTER
	struct _0x4FA6E5D7               OffsetMultiplier;                // type:STRUCT.POINTER
	string                           ValueSolver;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ContextSolver;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x855090E0 : _0x8A0DC979
{
};

struct _0x8562BCB1 : _0x22B199F9
{
	float                            Set;                             // type:FLOAT.0
	float                            Add;                             // type:FLOAT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0x857163E6
{
};

struct _0x857A8370
{
	uint                             NameHash;                        // type:UINT.0
	bool                             Discovered;                      // type:BOOL.0
	bool                             _0xB801023C;                     // type:BOOL.0
	bool                             Skinned;                         // type:BOOL.0
};

struct _0x858C8DF5
{
	float                            StunnedHeadingSpringConstant;    // type:FLOAT.0
	float                            StunnedHeadingSpringDampingRatio; // type:FLOAT.0
	float                            StunnedPitchSpringConstant;      // type:FLOAT.0
	float                            StunnedPitchSpringDampingRatio;  // type:FLOAT.0
	float                            StunnedDistanceSpringConstant;   // type:FLOAT.0
	float                            StunnedDistanceSpringDampingRatio; // type:FLOAT.0
};

struct _0x859C879B
{
	float                            _0x179E083A;                     // type:FLOAT.0
	float                            _0xAF25C779;                     // type:FLOAT.0
	float                            _0xDE524C17;                     // type:FLOAT.0
	float                            _0xCA1B2C62;                     // type:FLOAT.0
	float                            _0x81473A58;                     // type:FLOAT.0
	float                            _0x45E81367;                     // type:FLOAT.0
	float                            _0xF213DC27;                     // type:FLOAT.0
	float                            _0xD43B8016;                     // type:FLOAT.0
	float                            _0x6DCF98CF;                     // type:FLOAT.0
	float                            _0x2ED0C093;                     // type:FLOAT.0
	float                            _0xB651A805;                     // type:FLOAT.0
	float                            MaxAngularVelocity;              // type:FLOAT.0
	float                            _0xB083DC53;                     // type:FLOAT.0
	float                            _0x803637DC;                     // type:FLOAT.0
	float                            _0x1555138E;                     // type:FLOAT.0
	float                            _0x01A8BC5A;                     // type:FLOAT.0
	float                            _0xBEC58658;                     // type:FLOAT.0
	float                            _0xD364B924;                     // type:FLOAT.0
	float                            _0xD28710B2;                     // type:FLOAT.0
	float                            _0x0BFBA37D;                     // type:FLOAT.0
	float                            _0x95B3A7DA;                     // type:FLOAT.0
	float                            _0x0B96BBB6;                     // type:FLOAT.0
	float                            _0x4E262287;                     // type:FLOAT.0
	float                            _0x6BA1216E;                     // type:FLOAT.0
	float                            _0xB71BE8A4;                     // type:FLOAT.0
	float                            _0xA09DEE8B;                     // type:FLOAT.0
	float                            _0x34427402;                     // type:FLOAT.0
	float                            _0x66629CFF;                     // type:FLOAT.0
	float                            _0x6F03913A;                     // type:FLOAT.0
	float                            _0x07DD4617;                     // type:FLOAT.0
	float                            _0xC3691BEB;                     // type:FLOAT.0
	float                            _0xA383E4E2;                     // type:FLOAT.0
	float                            _0xB7735B88;                     // type:FLOAT.0
	float                            _0x0F71A964;                     // type:FLOAT.0
	float                            _0xCC2EBD85;                     // type:FLOAT.0
};

struct _0x85AFA7F3
{
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
	struct void                      BaseBoneOffsetSet;               // type:STRUCT.EXTERNAL_NAMED
};

struct _0x85B4C631
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           valueHash;                       // type:STRING.ATNONFINALHASHSTRING
	uint                             contentIndex;                    // type:UINT.0
	enum _0xA8CB5D89                 contentType;                     // type:ENUM.8BIT
	bool                             isEnabled;                       // type:BOOL.0
};

struct _0x85B647CD
{
	bool                             _0x0BD2BB2C;                     // type:BOOL.0
	vec3V                            _0xA0AA08E3;                     // type:VEC3V.0
	vec3V                            _0xAEC76FE7;                     // type:VEC3V.0
	int                              _0xBA1DFDD1;                     // type:INT.0
	int                              _0x75D148DD;                     // type:INT.0
	float                            _0xBFA71F72;                     // type:FLOAT.0
	float                            _0x4D51836F;                     // type:FLOAT.0
	float                            _0x5FDB2884;                     // type:FLOAT.0
	int                              _0x008C4A26;                     // type:INT.0
	float                            _0x096A29F8;                     // type:FLOAT.0
	float                            _0xE9F02FC3;                     // type:FLOAT.0
	float                            _0x9469FF72;                     // type:FLOAT.0
	float                            _0x023F4A3E;                     // type:FLOAT.0
	float                            _0x05BCA09F;                     // type:FLOAT.0
	float                            _0xC571B6AB;                     // type:FLOAT.0
	float                            _0x255DD2F2;                     // type:FLOAT.0
	float                            _0xFE2BD735;                     // type:FLOAT.0
	float                            _0xEC173740;                     // type:FLOAT.0
	float                            _0xCC57E6D9;                     // type:FLOAT.0
	float                            _0xD5566B96;                     // type:FLOAT.0
	float                            _0x84EC9350;                     // type:FLOAT.0
	float                            _0x79A5E0C9;                     // type:FLOAT.0
	float                            _0xDC110489;                     // type:FLOAT.0
	float                            _0x46567DE1;                     // type:FLOAT.0
	float                            _0xEE0D0B73;                     // type:FLOAT.0
};

struct _0x85B72D5C : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            _0x9D6558B6;                     // type:FLOAT.0
	float                            _0x2A083726;                     // type:FLOAT.0
};

struct _0x85B7B5BF
{
	struct _0x0A510DA9               _0x54F7B815;                     // type:STRUCT.POINTER
	struct _0x0A510DA9               _0x009FD3C2;                     // type:STRUCT.POINTER
	struct _0x0A510DA9               _0x67A6FDD8;                     // type:STRUCT.POINTER
	map<enum _0xB677E3DD, bool>      _0x3B1CCDF4;                     // type:MAP.ATMAP
};

struct _0x85B984FB : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x85D93C5C
{
	struct _0x808BE4CC               BadRoute;                        // type:STRUCT.STRUCTURE
	float                            LineOfSight;                     // type:FLOAT.0
	float                            Nearby;                          // type:FLOAT.0
	float                            NearbyAndCloser;                 // type:FLOAT.0
	float                            OutsideAttackWindow;             // type:FLOAT.0
	float                            WeaponBlocked;                   // type:FLOAT.0
	float                            _0xAAC6AFE5;                     // type:FLOAT.0
};

struct _0x85DD8603 : _0x14229900
{
	enum _0x563FBCEA                 PedToReactTo;                    // type:ENUM.32BIT
};

struct _0x85EE5677 : camBaseCameraMetadata
{
	float                            _0x5678036E;                     // type:FLOAT.0
	float                            BaseNearClip;                    // type:FLOAT.0
	array<struct _0x7C09F0ED>        _0x7EDC6D98;                     // type:ARRAY.ATARRAY
	float                            HeightSpringConstant;            // type:FLOAT.0
	float                            _0xF889FF2E;                     // type:FLOAT.0
	float                            _0x798B1B7A;                     // type:FLOAT.0
	float                            _0x0B2DE07D;                     // type:FLOAT.0
	float                            _0xDFC9DBF9;                     // type:FLOAT.0
	float                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                            MinHeightAboveWater;             // type:FLOAT.0
	float                            _0x8E1646A3;                     // type:FLOAT.0
	bool                             _0x6692839F;                     // type:BOOL.0
	float                            _0x2FA1C672;                     // type:FLOAT.0
	float                            _0x66149460;                     // type:FLOAT.0
	bool                             _0x44332EE8;                     // type:BOOL.0
	uint                             _0xBBF791B8;                     // type:UINT.0
	float                            _0x1F98A12A;                     // type:FLOAT.0
	float                            _0x55225614;                     // type:FLOAT.0
	float                            _0xEDAE9807;                     // type:FLOAT.0
	float                            _0xEDEB4A5A;                     // type:FLOAT.0
};

struct _0x85FAE4DE : CBaseSaveObject
{
	struct PedVariationSaveData      data;                            // type:STRUCT.STRUCTURE
	uint                             version;                         // type:UINT.0
};

struct _0x8601509D
{
	string                           _0xEC658483;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF06B888F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7D0BE2FD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x233CEB84;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x94BEC8B1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCF20CFCB;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xB9C35000;                     // type:FLOAT.0
	float                            _0x551F9A33;                     // type:FLOAT.0
	float                            _0x80C0641D;                     // type:FLOAT.0
	float                            _0x900507A2;                     // type:FLOAT.0
	uchar                            _0x027205B9;                     // type:UCHAR.0
	uchar                            _0xBC88756F;                     // type:UCHAR.0
	float                            _0x7F4F5CE1;                     // type:FLOAT.0
	float                            _0x93F2A4D3;                     // type:FLOAT.0
	float                            _0xD9C4B076;                     // type:FLOAT.0
	float                            _0xBC5E72C9;                     // type:FLOAT.0
	float                            _0x471C2EF7;                     // type:FLOAT.0
	float                            _0x0AC81FEC;                     // type:FLOAT.0
	float                            _0x0271AA1B;                     // type:FLOAT.0
	float                            _0x81CB8714;                     // type:FLOAT.0
	float                            _0xEEE53128;                     // type:FLOAT.0
	float                            _0x468C9543;                     // type:FLOAT.0
	float                            _0x82AA5434;                     // type:FLOAT.0
	float                            _0x8B824934;                     // type:FLOAT.0
	float                            _0x6AE26E4D;                     // type:FLOAT.0
	float                            _0xC9D57669;                     // type:FLOAT.0
	float                            _0xE588588A;                     // type:FLOAT.0
	float                            _0xCCACC2FD;                     // type:FLOAT.0
	float                            _0xC20348B2;                     // type:FLOAT.0
	struct _0x9C07C204               _0xED2F5BD7;                     // type:STRUCT.STRUCTURE
};

struct _0x8619C873
{
	struct _0x11AD3051               _0x8B6D4306;                     // type:STRUCT.POINTER
	map<string, array<uchar>>        _0xC2E3FD87;                     // type:MAP.ATBINARYMAP
};

struct _0x861A2DEA
{
	array<string>                    Value;                           // type:ARRAY.ATARRAY
	bool                             IsBlacklist;                     // type:BOOL.0
};

struct _0x86225D6E : CTuning
{
	struct _0x93A3D773               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x86377D23 : CTuning
{
	struct _0x9DAD3FE6               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x86433D70
{
	float                            _0x35FD4136;                     // type:FLOAT.0
	float                            PriorityCoverWeighting;          // type:FLOAT.0
	float                            AngleToCameraWeighting;          // type:FLOAT.0
	float                            AngleToDynamicCoverWeighting;    // type:FLOAT.0
	float                            DistanceWeighting;               // type:FLOAT.0
	float                            AngleToCoverWeighting;           // type:FLOAT.0
	float                            AngleOfCoverWeighting;           // type:FLOAT.0
	float                            EdgeWeighting;                   // type:FLOAT.0
	float                            NetworkBlendOutDurationRun;      // type:FLOAT.0
	float                            NetworkBlendOutDurationRunStart; // type:FLOAT.0
	float                            NetworkBlendOutDuration;         // type:FLOAT.0
	float                            MaxPlayerToCoverDist;            // type:FLOAT.0
	float                            MaxAngularDiffBetweenDynamicAndStaticCover; // type:FLOAT.0
	float                            RangeToUseDynamicCoverPointMin;  // type:FLOAT.0
	float                            RangeToUseDynamicCoverPointMax;  // type:FLOAT.0
	float                            MinDistToCoverAnyDir;            // type:FLOAT.0
	float                            MinDistToPriorityCoverToForce;   // type:FLOAT.0
	float                            MinDistToCoverSpecificDir;       // type:FLOAT.0
	float                            BehindPedToCoverCosTolerance;    // type:FLOAT.0
	float                            SearchToCoverCosTolerance;       // type:FLOAT.0
	float                            CapsuleZOffset;                  // type:FLOAT.0
	float                            _0x4FF70EC5;                     // type:FLOAT.0
	float                            TimeBetweenTestSpheresIntersectingRoute; // type:FLOAT.0
	float                            MaxDistToCoverWhenPlayerIsClose; // type:FLOAT.0
	float                            MinCoverToPlayerCoverDist;       // type:FLOAT.0
	float                            MinMoveToCoverDistForCoverMeAudio; // type:FLOAT.0
	float                            _0x59F6E8AF;                     // type:FLOAT.0
	float                            _0xF8A8DFFC;                     // type:FLOAT.0
	float                            _0x64784410;                     // type:FLOAT.0
	float                            _0xF8E5E1C9;                     // type:FLOAT.0
	float                            MaxSecondsAsTopLevelTask;        // type:FLOAT.0
	float                            _0xEA541944;                     // type:FLOAT.0
	bool                             _0xD30B7C6C;                     // type:BOOL.0
	bool                             ForceStreamingFailure;           // type:BOOL.0
	bool                             _0xB2B2B56D;                     // type:BOOL.0
	bool                             _0x8EE95C87;                     // type:BOOL.0
	bool                             _0xF718F742;                     // type:BOOL.0
	bool                             _0xEB4ECB72;                     // type:BOOL.0
	bool                             _0x9C68B527;                     // type:BOOL.0
	bool                             _0x5BA2A71A;                     // type:BOOL.0
	bool                             _0x51F02F7E;                     // type:BOOL.0
	bool                             _0xECC80CD6;                     // type:BOOL.0
	bool                             _0x2993329E;                     // type:BOOL.0
	string                           StreamedOneHandedCoverMovementClipSetId; // type:STRING.ATNONFINALHASHSTRING
	string                           CoreWeaponClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	struct _0x314FCC0D               _0x314FCC0D;                     // type:STRUCT.STRUCTURE
	struct _0xCC2FAB9C               _0xCC2FAB9C;                     // type:STRUCT.STRUCTURE
	uint                             _0x8CE03329;                     // type:UINT.0
	uint                             _0xFE60E972;                     // type:UINT.0
	float                            _0xB3C8D199;                     // type:FLOAT.0
	float                            _0x11C573A4;                     // type:FLOAT.0
	float                            _0x1FACF709;                     // type:FLOAT.0
	bool                             _0xE271BB98;                     // type:BOOL.0
	float                            _0x1A190B84;                     // type:FLOAT.0
	float                            _0x934A4E32;                     // type:FLOAT.0
	float                            _0x6A4E196F;                     // type:FLOAT.0
	float                            _0xE0B2F149;                     // type:FLOAT.0
	uint                             _0xE16D55DF;                     // type:UINT.0
	uint                             _0x2C0E137C;                     // type:UINT.0
	struct _0x0B500CE7               _0xB777B1E5;                     // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0x8806B94C;                     // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0x73A7F57D;                     // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0xE35BA1D8;                     // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0x0A22313B;                     // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0x6DDAA482;                     // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0x92005CE3;                     // type:STRUCT.STRUCTURE
	float                            _0x36851DF6;                     // type:FLOAT.0
	float                            _0x22530245;                     // type:FLOAT.0
	float                            _0xDD20D403;                     // type:FLOAT.0
	float                            _0xA26AECF6;                     // type:FLOAT.0
	float                            _0x20181762;                     // type:FLOAT.0
	float                            _0x98CA417E;                     // type:FLOAT.0
	float                            _0xE2919BE5;                     // type:FLOAT.0
	float                            _0x52A767DE;                     // type:FLOAT.0
	uint                             _0xE4469105;                     // type:UINT.0
	uint                             _0xBFF85285;                     // type:UINT.0
	float                            _0xB0B8F991;                     // type:FLOAT.0
	float                            _0xA7C6E76B;                     // type:FLOAT.0
};

struct _0x865451B7 : _0x98B6594B
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xA5B1359C;                     // type:BOOL.0
};

struct _0x86601F81 : _0xBB7A0CAE
{
	enum eUiEventChannels            EventChannel;                    // type:ENUM.32BIT
	struct uiEventDataBase           EventData;                       // type:STRUCT.POINTER
};

struct _0x8661D580 : CExtensionDef
{
	array<string>                    _0xC0B52CBA;                     // type:ARRAY.ATARRAY
};

struct _0x86645E8E
{
	float                            _0x7603A1E2;                     // type:FLOAT.0
	float                            _0xF4151FCC;                     // type:FLOAT.0
	int                              _0xEF81DFE0;                     // type:INT.0
	float                            _0xAC95D1FB;                     // type:FLOAT.0
	float                            _0x64EBE6C5;                     // type:FLOAT.0
	int                              _0xCDE036EB;                     // type:INT.0
	float                            _0x1E7E872F;                     // type:FLOAT.0
	float                            _0xD537B400;                     // type:FLOAT.0
	float                            _0x7B70F182;                     // type:FLOAT.0
	float                            _0x0103941E;                     // type:FLOAT.0
	int                              _0x27938C9D;                     // type:INT.0
};

struct _0x866FDEA0
{
	array<struct _0x1D9AB0C9>        _0x6BC97260;                     // type:ARRAY.ATARRAY
};

struct _0x8693F24D
{
	array<struct _0xAB789466>        Actions;                         // type:ARRAY.ATARRAY
	string                           Text;                            // type:STRING.ATNONFINALHASHSTRING
	enum rage__InputType             Input;                           // type:ENUM.32BIT
	enum ePromptPriority             Priority;                        // type:ENUM.32BIT
	struct _0xB385BC70               Transition;                      // type:STRUCT.STRUCTURE
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct CAICondition              GrayOutCondition;                // type:STRUCT.POINTER
	bitset<enum _0x14CD81F9>         Flags;                           // type:BITSET.32BIT
	enum _0xBAB4018D                 Result;                          // type:ENUM.32BIT
	float                            HoldDuration;                    // type:FLOAT.0
	float                            HeldPlaybackRate;                // type:FLOAT.0
	float                            UnheldPlaybackRate;              // type:FLOAT.0
	float                            AutoFillDuration;                // type:FLOAT.0
	uint                             MashCount;                       // type:UINT.0
};

struct _0x869CC3B6 : _0xDBC921F3
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0x86A5EAEE
{
	string                           _0x8F00558D;                     // type:STRING.CONST_STRING
	string                           _0xBA6FEE7B;                     // type:STRING.CONST_STRING
	string                           _0x4863FCF1;                     // type:STRING.CONST_STRING
	string                           _0x7C724C91;                     // type:STRING.CONST_STRING
	array<struct _0x7E2A6C5B>        _0xE1AEC20B;                     // type:ARRAY.ATARRAY
};

struct _0x86B6C35B
{
	string                           name;                            // type:STRING.CONST_STRING
};

struct _0x86BB867F : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	string                           Region;                          // type:STRING.ATNONFINALHASHSTRING
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct _0x86C85081
{
	float                            _0xF6843848;                     // type:FLOAT.0
	float                            _0xC14B01D7;                     // type:FLOAT.0
	float                            _0x64831807;                     // type:FLOAT.0
	float                            _0x9D7D46B9;                     // type:FLOAT.0
	float                            _0xDF3F7596;                     // type:FLOAT.0
	float                            _0x9F3ECA7A;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x9FCEF7F6;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x56FF8BF9;                     // type:ENUM.32BIT
	float                            _0x47F0311D;                     // type:FLOAT.2
	float                            _0x836771D1;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x418A0E4A;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xE93A3809;                     // type:ENUM.32BIT
	float                            _0x0F24AC3F;                     // type:FLOAT.2
	float                            _0x5F494300;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xC9229374;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x871FEDDE;                     // type:ENUM.32BIT
};

struct _0x86CED2F3
{
	float                            _0xBD298EAD;                     // type:FLOAT.0
	float                            _0x7BBB97F7;                     // type:FLOAT.0
	float                            _0xBB558586;                     // type:FLOAT.0
	float                            _0x9878F4F3;                     // type:FLOAT.0
	float                            _0xF4209C65;                     // type:FLOAT.0
	float                            _0xD67DC405;                     // type:FLOAT.0
	float                            _0x32823589;                     // type:FLOAT.0
	float                            _0x946C6918;                     // type:FLOAT.0
	float                            _0x6AE581A6;                     // type:FLOAT.0
	bool                             _0x629CC9DD;                     // type:BOOL.0
};

struct _0x86D1BA52 : _0xEA4C09BF
{
	double                           Min;                             // type:DOUBLE.0
	double                           Max;                             // type:DOUBLE.0
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
	bool                             _0x60323A5F;                     // type:BOOL.0
	bool                             _0x11DCAB40;                     // type:BOOL.0
};

struct _0x86D596F3
{
	float                            fDistanceFactor;                 // type:FLOAT.0
	float                            fHeadingFactor;                  // type:FLOAT.0
	float                            fHeightFactor;                   // type:FLOAT.0
	float                            fStepUpHeightFactor;             // type:FLOAT.0
	float                            fNormalZFactor;                  // type:FLOAT.0
	float                            fNormalZDot;                     // type:FLOAT.0
	float                            fDotToMerge;                     // type:FLOAT.0
	float                            fDotToMergeContiguousSegments;   // type:FLOAT.0
	float                            fDotToMergeContiguousSmallSegments; // type:FLOAT.0
	float                            fContiguousDistance;             // type:FLOAT.0
	float                            fSmallSegmentLength;             // type:FLOAT.0
	float                            fGapHeightTolerance;             // type:FLOAT.0
	float                            fDistanceTolerance;              // type:FLOAT.0
	float                            fHeadingTolerance;               // type:FLOAT.0
	float                            fInvalidHorizontalIntersectionDot; // type:FLOAT.0
	float                            fBehindScorePenalty;             // type:FLOAT.0
	float                            fBehindScoreMinDistance;         // type:FLOAT.0
	float                            fMinStepUpPenalty;               // type:FLOAT.0
};

struct _0x86EDB96D
{
	struct _0x1F269BEE               _0xEF43FD0A;                     // type:STRUCT.STRUCTURE
};

struct _0x86F36C4E : _0x18C05852
{
	bool                             _0xE47FED46;                     // type:BOOL.0
};

struct _0x870B4019
{
	enum eAnimBoneTag                _0x79E96797;                     // type:ENUM.32BIT
	vec3                             _0x80AB8E4C;                     // type:VECTOR3.0
	vec3                             _0x23437B02;                     // type:VECTOR3.0
	vec3                             _0xB441A25A;                     // type:VECTOR3.0
	float                            _0xEAD9EB5F;                     // type:FLOAT.0
	float                            _0x64546E3E;                     // type:FLOAT.0
};

struct _0x870B8BFC : _0x2F7DA38D
{
	struct _0xED16C5B0               targetEntity;                    // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                _0xB700CB13;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x28534F8C;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0xF0563B39;                     // type:ENUM.32BIT
	vec3V                            positionOffset;                  // type:VEC3V.0
	float                            blendInDuration;                 // type:FLOAT.0
	float                            blendOutDuration;                // type:FLOAT.0
	bitset<enum _0x3C0C1FEE>         _0xEE26A20D;                     // type:BITSET.32BIT
};

struct _0x87229DDD : CTuning
{
	float                            _0x3F486590;                     // type:FLOAT.0
	float                            _0x7D127F80;                     // type:FLOAT.0
	float                            _0xB389BEAF;                     // type:FLOAT.0
	float                            _0xEC9ADA49;                     // type:FLOAT.0
	float                            _0xD1B4E90D;                     // type:FLOAT.0
	float                            _0x425D15D7;                     // type:FLOAT.0
	float                            _0x297CFE4A;                     // type:FLOAT.0
	float                            _0x4E0C03B7;                     // type:FLOAT.0
};

struct _0x8734E5E1 : _0x0AD780FE
{
};

struct _0x8740BFA4 : CTuning
{
	float                            _0x715B6F2F;                     // type:FLOAT.0
	float                            _0x8E4EAD18;                     // type:FLOAT.0
	float                            _0x78B8E9FF;                     // type:FLOAT.0
};

struct _0x87446492 : _0x8A0DC979
{
};

struct _0x8753F7ED : _0x06627157
{
};

struct _0x875A8560 : _0x0A510DA9
{
};

struct _0x8760D913 : uiDownloadableBehaviorBase
{
};

struct _0x8760E325
{
	array<string>                    _0xD7C42AB2;                     // type:ARRAY.ATARRAY
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           SlotId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4C9AE3D3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8B004ED2;                     // type:STRING.ATNSHASHSTRING
	enum _0x07890291                 WeaponSlot;                      // type:ENUM.32BIT
	enum _0x07890291                 _0x73F5D748;                     // type:ENUM.32BIT
	bool                             _0xD3A9F71D;                     // type:BOOL.0
	enum rage__InputType             _0xFB7FC02F;                     // type:ENUM.32BIT
};

struct _0x876A7096
{
	uint                             dataVersion;                     // type:UINT.0
	array<struct _0xB06C1886>        _0xD5BCA0C5;                     // type:ARRAY.ATARRAY
	struct _0xEBAFE4E9               _0x3A448C2E;                     // type:STRUCT.STRUCTURE
};

struct _0x876D45F8 : CTuning
{
	struct _0x6282A6DB               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x876F8B8B : _0x14229900
{
};

struct _0x877A8A90 : _0x14229900
{
};

struct _0x87A73BA2
{
	vec3                             _0xD73FC833;                     // type:VECTOR3.0
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3AB01102;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0x620A083E;                     // type:FLOAT.0
	float                            _0x028FC1D3;                     // type:FLOAT.0
	float                            _0x4AF8E2EB;                     // type:FLOAT.0
	float                            _0x14FA34FE;                     // type:FLOAT.0
	float                            _0xED013AB4;                     // type:FLOAT.0
	float                            _0xAB329AF0;                     // type:FLOAT.0
	float                            _0x28953A29;                     // type:FLOAT.0
	float                            _0x7B0D67AC;                     // type:FLOAT.0
};

struct _0x87BB7748 : _0x1054F746
{
};

struct _0x87C3CB24 : uiGenericEventDataBase
{
	bool                             data;                            // type:BOOL.0
};

struct _0x87CB5775 : CTuning
{
	struct _0x14887F0B               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x87CB7DBA
{
};

struct _0x87CC8612 : _0x1054F746
{
};

struct _0x87D49FD5
{
	array<struct _0xB88D6BEE>        Operations;                      // type:ARRAY.ATARRAY
};

struct _0x87DE0E31 : _0x9DE34E05
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
	bool                             _0x60323A5F;                     // type:BOOL.0
	bool                             _0x11DCAB40;                     // type:BOOL.0
};

struct _0x87E2B4DF
{
	short                            iPosX;                           // type:SHORT.0
	short                            iPosY;                           // type:SHORT.0
	short                            iPosZ;                           // type:SHORT.0
};

struct _0x87E7C597 : _0x2F7DA38D
{
	vec4V                            _0xB6902640;                     // type:VEC4V.0
};

struct _0x87F503B5 : _0x7DE6531A
{
	uint                             targetValue;                     // type:UINT.0
	uint                             targetValueMin;                  // type:UINT.0
	uint                             targetValueMax;                  // type:UINT.0
};

struct _0x87F6F8E5
{
	array<struct _0xBA3EEB17, 11>     Weights;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0x88127A6D
{
	float                            InterpolationRate;               // type:FLOAT.0
	float                            MinYawLimit;                     // type:FLOAT.0
	float                            MaxYawLimit;                     // type:FLOAT.0
	float                            MinYawScaleLimit;                // type:FLOAT.0
	float                            MaxYawScaleLimit;                // type:FLOAT.0
	float                            MinPitchLimit;                   // type:FLOAT.0
	float                            MaxPitchLimit;                   // type:FLOAT.0
	float                            MinPitchScaleLimit;              // type:FLOAT.0
	float                            MaxPitchScaleLimit;              // type:FLOAT.0
	float                            MinArmYawLimit;                  // type:FLOAT.0
	float                            MaxArmYawLimit;                  // type:FLOAT.0
	float                            LowerBodyWeight;                 // type:FLOAT.0
	float                            LegCounterWeight;                // type:FLOAT.0
};

struct _0x881F364C
{
	uint                             _0x2CD6120B;                     // type:UINT.0
	float                            ExtraOffsetForGroundCheck;       // type:FLOAT.0
	float                            _0xB5A1FD7E;                     // type:FLOAT.0
	float                            _0x03F0DAF4;                     // type:FLOAT.0
	float                            _0x0AF0FD04;                     // type:FLOAT.0
	float                            _0x48C0756A;                     // type:FLOAT.0
	float                            _0x7A6F33FB;                     // type:FLOAT.0
};

struct _0x88202699
{
	vec3V                              Pos;                             // type:VEC3V.0
	array<struct _0xADFE64D5, 128>     Tris;                            // type:ARRAY.ATFIXEDARRAY
};

struct _0x882DCED7 : _0x840088DE
{
};

struct _0x8841F7D9
{
	bool                             _0x777691D4;                     // type:BOOL.0
	uint                             _0xDEF239C1;                     // type:UINT.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0xDEE7571B;                     // type:FLOAT.0
	float                            _0xD1AA043A;                     // type:FLOAT.0
	float                            _0xD170E08F;                     // type:FLOAT.0
	float                            _0x816C8B98;                     // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
};

struct _0x884F817B : _0x476BC347
{
	enum rage__InputGroup            inputGroup;                      // type:ENUM.32BIT
	array<struct _0x476BC347>        elements;                        // type:ARRAY.ATARRAY
};

struct _0x884FE22B
{
	float                            RangeStart;                      // type:FLOAT.0
	float                            RangeEnd;                        // type:FLOAT.0
	float                            PowerCurve;                      // type:FLOAT.0
	float                            TargetAtStart;                   // type:FLOAT.0
	float                            TargetAtEnd;                     // type:FLOAT.0
	float                            FlattenAtStart;                  // type:FLOAT.0
	float                            FlattenAtEnd;                    // type:FLOAT.0
	float                            OffsetAtStart;                   // type:FLOAT.0
	float                            OffsetAtEnd;                     // type:FLOAT.0
};

struct _0x8859595F : _0x0A698250
{
};

struct _0x888C5C46
{
	float                            _0x873BFB90;                     // type:FLOAT.0
};

struct _0x88910BEE : _0xB74AC865
{
};

struct _0x88972F54 : _0x2F7DA38D
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	matrix34V                        transformation;                  // type:MAT34V.0
	vec3V                            scale;                           // type:VEC3V.0
	bitset<enum _0x5682D9BC>         _0xA40849F0;                     // type:BITSET.32BIT
	bitset<enum _0xE1DB7764>         _0xFD609C33;                     // type:BITSET.32BIT
	bitset<enum _0x7FF22249>         _0x38E127A6;                     // type:BITSET.32BIT
	vec3V                            _0x4A98FFD9;                     // type:VEC3V.0
	float                            _0xE37F6B37;                     // type:FLOAT.0
	bitset<enum _0xF2E1CB4A>         _0xB09DA810;                     // type:BITSET.32BIT
	vec3V                            _0xEDE386F3;                     // type:VEC3V.0
	float                            _0xA625603A;                     // type:FLOAT.0
};

struct _0x889E7138
{
	struct _0xC13D47F6               _0xFFA8144F;                     // type:STRUCT.STRUCTURE
};

struct _0x88A163F5 : _0x6F0C770E
{
	struct _0x18927999               _0x6AAF715F;                     // type:STRUCT.STRUCTURE
	struct _0x18927999               _0xC5BA70C6;                     // type:STRUCT.STRUCTURE
};

struct _0x88A212D8
{
	float                            _0x13F3AB16;                     // type:FLOAT.0
	float                            _0xBE712A63;                     // type:FLOAT.0
	float                            _0x68169938;                     // type:FLOAT.0
	float                            _0x4D889C52;                     // type:FLOAT.2
	float                            _0x603AE21C;                     // type:FLOAT.0
	uint                             _0xC28035B7;                     // type:UINT.0
};

struct _0x88A3D78C : _0x4DA163F4
{
	string                           _0xC3C9224B;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x8C9EBA7A                 attachPoint;                     // type:ENUM.32BIT
	bool                             _0x76E03FB8;                     // type:BOOL.0
};

struct _0x88A435D9 : _0x22B199F9
{
	float                            Set;                             // type:FLOAT.0
	float                            Add;                             // type:FLOAT.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0x88A9AAD1 : CTuning
{
	float                            TimeBetweenSpawnAttempts;        // type:FLOAT.0
	float                            _0xF64933E8;                     // type:FLOAT.0
	float                            _0x7E3377D3;                     // type:FLOAT.0
};

struct _0x88B37827
{
	array<struct _0xFB1912C7>        _0xBDA800FB;                     // type:ARRAY.ATARRAY
	array<struct _0xFB1912C7>        _0xEF8E2D9B;                     // type:ARRAY.ATARRAY
};

struct _0x88CA8831
{
	array<struct _0x54F499FD>        Data;                            // type:ARRAY.ATARRAY
};

struct _0x88D7B02E : _0x0A510DA9
{
	string                           Context;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x88D891F7 : _0xC7B02A2F
{
	float                            Start;                           // type:FLOAT.0
	float                            End;                             // type:FLOAT.0
};

struct _0x88DAE459 : _0x2F7DA38D
{
	string                           sceneName;                       // type:STRING.ATSTRING
	bool                             _0xA1341737;                     // type:BOOL.0
	bool                             _0x68D0E581;                     // type:BOOL.0
	bool                             _0xCFBE3C5B;                     // type:BOOL.0
	bool                             _0xEDEF8CCC;                     // type:BOOL.0
	int                              _0xDE0C9679;                     // type:INT.0
	int                              _0xCF3ED0FA;                     // type:INT.0
	int                              _0xE5C47020;                     // type:INT.0
	int                              _0x9C0970F9;                     // type:INT.0
};

struct _0x88E4014F
{
	float                            _0x1DC0ADB9;                     // type:FLOAT.0
	float                            _0x83F13DAA;                     // type:FLOAT.0
	float                            _0xB8D098A0;                     // type:FLOAT.0
	float                            _0x0A4CFDA9;                     // type:FLOAT.0
	float                            _0x16B6F250;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x09EDFA9F;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x88B29686;                     // type:ENUM.32BIT
	float                            _0x520861A4;                     // type:FLOAT.0
	float                            _0xACDAAF69;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x3BC9523D;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x7BF522BF;                     // type:ENUM.32BIT
	float                            _0x2EF9E2CA;                     // type:FLOAT.2
	float                            _0x9FCF7283;                     // type:FLOAT.2
	enum _0x6BCA108F                 _0x27B239E2;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xE304901E;                     // type:ENUM.32BIT
	float                            _0x60CDD36A;                     // type:FLOAT.2
	float                            _0x85AEB54F;                     // type:FLOAT.2
	enum _0x6BCA108F                 _0xA49DFD8F;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x034A3AE1;                     // type:ENUM.32BIT
};

struct _0x88F1ED5A
{
	array<struct _0xFEE6A87B>        MorphData;                       // type:ARRAY.ATARRAY
};

struct _0x8900668A
{
};

struct _0x89085001
{
	array<struct CScenarioPoint>     Array;                           // type:ARRAY.ATARRAY
};

struct _0x8908B3E2 : _0x732D18D5
{
};

struct _0x89164127 : _0xB91B3562
{
};

struct _0x891B2A0F
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           toState;                         // type:STRING.ATNONFINALHASHSTRING
	struct _0x4B852C44               conditionSet;                    // type:STRUCT.STRUCTURE
};

struct _0x8926B425 : _0xDC10377E
{
	struct camFirstPersonShooterCameraMetadataOrientationSpring     OrientationSpring;               // type:STRUCT.STRUCTURE
	float                                                           LSAcceleration;                  // type:FLOAT.0
	float                                                           LSDeceleration;                  // type:FLOAT.0
	float                                                           LSDeadZoneAngle;                 // type:FLOAT.0
	struct _0x8E50AEC3                                              _0xF792EB93;                     // type:STRUCT.STRUCTURE
	struct _0x8E50AEC3                                              _0x01D5D458;                     // type:STRUCT.STRUCTURE
	float                                                           _0xE7214A6D;                     // type:FLOAT.0
	bool                                                            _0x599AB69E;                     // type:BOOL.0
	bool                                                            _0xC6FF35E0;                     // type:BOOL.0
	float                                                           _0x5BB56E4B;                     // type:FLOAT.0
	float                                                           _0x7DCB4063;                     // type:FLOAT.0
	float                                                           _0x24BC6366;                     // type:FLOAT.0
	float                                                           _0xD342C2C4;                     // type:FLOAT.0
	uint                                                            _0x01568CB1;                     // type:UINT.0
	bool                                                            ShouldUseGameTime;               // type:BOOL.0
	bool                                                            _0x0160E438;                     // type:BOOL.0
	bool                                                            _0x8976D1BC;                     // type:BOOL.0
	string                                                          InputEnvelopeRef;                // type:STRING.ATNONFINALHASHSTRING
	vec2                                                            AimSensitivityScalingLimits;     // type:VECTOR2.0
	vec2                                                            _0x5E3B75C5;                     // type:VECTOR2.0
	vec2                                                            _0x52ACEED3;                     // type:VECTOR2.0
	vec2                                                            _0x14A09526;                     // type:VECTOR2.0
	struct _0x6A7B9953                                              PrecisionAimSettings;            // type:STRUCT.STRUCTURE
};

struct _0x892CF74F
{
	uint                             PathNodeKey;                     // type:UINT.0
	int                              PortalInfoIdx;                   // type:INT.0
};

struct _0x8932045A
{
	enum _0x3876818C                 connectionMode;                  // type:ENUM.8BIT
};

struct _0x89498BE4 : _0x9B440548
{
};

struct _0x89550336
{
	enum _0x843DA0C0                 FacialOneShot;                   // type:ENUM.32BIT
	enum _0xE02F3066                 FacialMood;                      // type:ENUM.32BIT
	enum _0x7777E5B4                 FacialMoodPriority;              // type:ENUM.32BIT
};

struct _0x895F938D : CAICondition
{
	float                            MinimumWaitTime;                 // type:FLOAT.0
};

struct _0x8972CE7B : _0x6EBB1EEA
{
};

struct _0x898A07FD : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x8998E492
{
	float                            DistanceMin;                     // type:FLOAT.0
	float                            DistanceMax;                     // type:FLOAT.0
	float                            _0x4F79C159;                     // type:FLOAT.0
	float                            _0x72C1112B;                     // type:FLOAT.0
	float                            _0x5C8B41C6;                     // type:FLOAT.0
	float                            _0xA4143C5B;                     // type:FLOAT.0
};

struct _0x89A16C5F : _0x31FB567E
{
	uint                             Rank;                            // type:UINT.0
};

struct _0x89C3FA1C
{
	uint                             modelNameHash;                   // type:UINT.0
	bool                             _0x5D124A44;                     // type:BOOL.0
};

struct _0x89D0D131
{
	array<struct _0xD41612A3>        AngledAreas;                     // type:ARRAY.ATARRAY
	array<struct _0x4FA0E646>        Spheres;                         // type:ARRAY.ATARRAY
};

struct _0x89F201F6
{
	bool                             ForceUseRightHandleAnims;        // type:BOOL.0
	bool                             ForceUseRightHandAnims;          // type:BOOL.0
	struct _0x4B94BFD7               HandleRight;                     // type:STRUCT.STRUCTURE
	struct _0x4B94BFD7               HandleLeft;                      // type:STRUCT.STRUCTURE
};

struct _0x8A0DC979
{
};

struct _0x8A1083A3 : _0x8A0DC979
{
};

struct _0x8A376258
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xBD613368                 Category;                        // type:ENUM.32BIT
	array<struct _0x2F918841, 6>     Layers;                          // type:ARRAY.ATFIXEDARRAY
	array<string, 4>                 Tags;                            // type:ARRAY.ATFIXEDARRAY
	float                            _0xB8E5A48E;                     // type:FLOAT.0
};

struct _0x8A3C2709
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x9F79C322               FXStack;                         // type:STRUCT.STRUCTURE
	uchar                            Priority;                        // type:UCHAR.0
	array<string, 4>                 Tags;                            // type:ARRAY.ATFIXEDARRAY
};

struct _0x8A46F044
{
	array<struct _0xF1A5C6B9>        CleanlinessResults;              // type:ARRAY.ATARRAY
};

struct _0x8A49ABEB
{
	vec2V                            _0x83AB50F3;                     // type:VEC2V.0
	vec2V                            _0x6D4129E1;                     // type:VEC2V.0
	float                            _0xD4829CB5;                     // type:FLOAT.0
	float                            _0xB9A1ABBB;                     // type:FLOAT.0
	float                            _0x86ED554C;                     // type:FLOAT.0
	float                            _0xCD9E4329;                     // type:FLOAT.0
	float                            _0x23EF8751;                     // type:FLOAT.0
	float                            _0x97AE2C2A;                     // type:FLOAT.0
	float                            _0x99391B52;                     // type:FLOAT.0
	float                            _0xCE13D682;                     // type:FLOAT.0
};

struct _0x8A4BBC60 : _0x1054F746
{
};

struct _0x8A59FAA4 : CTuning
{
	struct _0x26D9F1A8               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x8A5DBDE0 : _0x499E1BE4
{
	string                           _0x07A4AE8F;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xDF5077D4;                     // type:BOOL.0
	string                           _0x1AC2EB33;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x549E6E51;                     // type:FLOAT.0
};

struct _0x8A5EA609
{
	struct _0x572A5491               Base;                            // type:STRUCT.STRUCTURE
	struct _0x572A5491               Neck;                            // type:STRUCT.STRUCTURE
	struct _0x572A5491               Torso;                           // type:STRUCT.STRUCTURE
	struct _0x572A5491               Feet;                            // type:STRUCT.STRUCTURE
};

struct _0x8A65BC90 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             _0x1193FB5F;                     // type:BOOL.0
};

struct _0x8A6E3315
{
	array<struct _0x0C65497E>        Actions;                         // type:ARRAY.ATARRAY
	struct _0x5B85AD61               HookedEntityAttachmentData;      // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                BobberAttachBone;                // type:ENUM.32BIT
	enum eAnimBoneTag                HookAttachBone;                  // type:ENUM.32BIT
	float                            UnhookReelRate;                  // type:FLOAT.0
	vec2V                            TargetRodBend;                   // type:VEC2V.0
	float                            UnhookDeadTime;                  // type:FLOAT.0
	bitset<enum _0x91EBDC19>         Flags;                           // type:BITSET.32BIT
};

struct _0x8A6F9D4C : _0x275C775B
{
	array<struct _0x17206478>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0x8A721DF4
{
	array<struct _0xDC2B8426>        _0xBBA22F8B;                     // type:ARRAY.ATARRAY
};

struct _0x8A722C91 : _0xEAD3D77F
{
};

struct _0x8A81D4ED : _0xDE795AEA
{
};

struct _0x8AA02D84
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             AttachToCamera;                  // type:BOOL.0
	array<struct _0xC1850771>        PrimitiveVolumes;                // type:ARRAY.ATARRAY
};

struct _0x8AA74EAE
{
	float                            _0x9CEEA596;                     // type:FLOAT.0
	float                            _0x403E82CA;                     // type:FLOAT.0
	float                            _0xF2B6320D;                     // type:FLOAT.0
	float                            _0x6C726E71;                     // type:FLOAT.0
	float                            _0xA55B48E9;                     // type:FLOAT.0
	float                            _0x164DD4F8;                     // type:FLOAT.0
};

struct _0x8ABF7D16 : _0xC509663E
{
};

struct _0x8AE20C28
{
	array<struct _0x64C21672>        CarriableVfxDatas;               // type:ARRAY.ATARRAY
};

struct _0x8AE3BD8C : camBaseCameraMetadata
{
	struct _0x3A05C551               _0x65D55DE8;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               _0x235538B0;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               _0x25A88AA4;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               _0x2EBD0A8B;                     // type:STRUCT.STRUCTURE
	struct _0x5063A41A               _0x31641358;                     // type:STRUCT.STRUCTURE
	struct _0xA18363F1               _0xB8FB230D;                     // type:STRUCT.STRUCTURE
	struct _0xD5186822               CollisionSettings;               // type:STRUCT.STRUCTURE
};

struct _0x8AEADFE0
{
	float                            MagnitudeModifier;               // type:FLOAT.0
	float                            MaxDuration;                     // type:FLOAT.0
	float                            DurationModifier;                // type:FLOAT.0
	float                            IntervalAtMaximum;               // type:FLOAT.0
	float                            BoneDelay;                       // type:FLOAT.0
	float                            MaxDistanceFromBone;             // type:FLOAT.0
};

struct _0x8B019C36 : _0xF84BA9C5
{
	uint                             _0x63F061D1;                     // type:UINT.0
};

struct _0x8B01F713 : _0x0A510DA9
{
	string                           _0x2FB70373;                     // type:STRING.ATNSHASHSTRING
	enum _0x99BEFEED                 AttributeType;                   // type:ENUM.32BIT
	bool                             _0xD74A9ACF;                     // type:BOOL.0
};

struct _0x8B12E8A7 : _0x2F7DA38D
{
	bool                             _0x811A5E42;                     // type:BOOL.0
	string                           _0x518DFA06;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA4CA81C8;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x31234849;                     // type:BOOL.0
	float                            _0x1E2D8B40;                     // type:FLOAT.0
};

struct _0x8B13CB08
{
	array<ushort>                    _0x85B20BCB;                     // type:ARRAY.ATARRAY
	uint64                           _0x09DD80C6;                     // type:UINT64.0
	string                           minigameType;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8B4F5FE6
{
	uint                             Time;                            // type:UINT.0
	array<struct _0xE80C9214>        States;                          // type:ARRAY.ATARRAY
};

struct _0x8B534D55
{
	enum _0x1AA49AED                 _0x3F81554C;                     // type:ENUM.32BIT
	struct _0x0A510DA9               Condition;                       // type:STRUCT.POINTER
};

struct _0x8B560FE0 : _0xB74AC865
{
};

struct _0x8B59D105 : _0x6072C7BA
{
	struct _0xCE064FC1               Path;                            // type:STRUCT.STRUCTURE
};

struct _0x8B627479
{
	array<struct _0x40004624>        PedVariations;                   // type:ARRAY.ATARRAY
};

struct _0x8B772808
{
	float                            _0xA2ED4F5A;                     // type:FLOAT.0
	float                            _0x6DC6346E;                     // type:FLOAT.0
	float                            _0x64831807;                     // type:FLOAT.0
	float                            _0x9D7D46B9;                     // type:FLOAT.0
	float                            _0xDC13812D;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xF3AD55C8;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xDC1A422A;                     // type:ENUM.32BIT
};

struct _0x8B781B13 : _0x4A8ADA17
{
};

struct _0x8BA07525 : CTuning
{
	float                            _0x83B98C8E;                     // type:FLOAT.0
	float                            _0xB2BA9160;                     // type:FLOAT.0
};

struct _0x8BA17D6C
{
	bool                             Enable;                          // type:BOOL.0
	float                            _0x937E5E92;                     // type:FLOAT.0
	float                            _0x5A874644;                     // type:FLOAT.0
	float                            _0x52EEED84;                     // type:FLOAT.0
	float                            _0x31AB9BE2;                     // type:FLOAT.0
	float                            _0xC49069E9;                     // type:FLOAT.0
	float                            _0x1BC8CBCB;                     // type:FLOAT.0
};

struct _0x8BA18FD2
{
	float                            HealthRatioLimit;                // type:FLOAT.0
	float                            WallProbeRadius;                 // type:FLOAT.0
	float                            WallProbeDistance;               // type:FLOAT.0
	float                            ProbeHeightAbovePelvis;          // type:FLOAT.0
	float                            ImpulseMult;                     // type:FLOAT.0
	float                            MaxWallAngle;                    // type:FLOAT.0
};

struct _0x8BA21C1D
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3V                            Offset;                          // type:VEC3V.0
};

struct _0x8BC7ECFC : _0x6BFCA598
{
	string                           typeName;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x2EF8C08D;                     // type:BOOL.0
	array<string>                    events;                          // type:ARRAY.ATARRAY
	bitset<enum _0x901737E6>         _0xAA2789E2;                     // type:BITSET.32BIT
};

struct _0x8BCD5B9A
{
	struct _0xA19E0D9F               _0x4EFDC83D;                     // type:STRUCT.STRUCTURE
	struct _0xA19E0D9F               _0xC39132F3;                     // type:STRUCT.STRUCTURE
};

struct _0x8BDC4108
{
	string                           ActionClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClip;                      // type:STRING.ATNONFINALHASHSTRING
	string                           BasePairedLootClips;             // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	float                            Score;                           // type:FLOAT.0
	float                            CustomBaseCrossBlendDuration;    // type:FLOAT.0
	float                            CustomFinishBlendDuration;       // type:FLOAT.0
	enum _0x41DA6081                 VisibleLootSlot;                 // type:ENUM.32BIT
	bitset<enum _0x39794E0A>         Flags;                           // type:BITSET.32BIT
};

struct _0x8BEC3296
{
	bool                             _0x45A0805A;                     // type:BOOL.0
	bool                             _0x59925CF5;                     // type:BOOL.0
};

struct _0x8BEC7F54
{
	string                           Name;                            // type:STRING.ATSTRING
	array<string>                    _0x05378C31;                     // type:ARRAY.ATARRAY
	array<struct _0x8BEC7F54>        Groups;                          // type:ARRAY.ATARRAY
};

struct _0x8BFAE6B4
{
	struct _0xA25541A2               _0x2E89519E;                     // type:STRUCT.STRUCTURE
	struct _0xEA6D6AA2               _0x8642286D;                     // type:STRUCT.STRUCTURE
};

struct _0x8C0C49E5
{
	bool                             _0xB812563E;                     // type:BOOL.0
	float                            _0xAC07131A;                     // type:FLOAT.0
	float                            _0x47D458BC;                     // type:FLOAT.0
	float                            _0x92BDD858;                     // type:FLOAT.0
	float                            _0xB21FB3A5;                     // type:FLOAT.0
	float                            _0xFE3C96D8;                     // type:FLOAT.0
	float                            _0x3DE32733;                     // type:FLOAT.0
	float                            _0x5DDDF7F0;                     // type:FLOAT.0
	float                            _0x683A3600;                     // type:FLOAT.0
	float                            _0x3DE7985E;                     // type:FLOAT.0
	float                            _0x01172FDD;                     // type:FLOAT.0
};

struct _0x8C10699C : _0x3AB6499E
{
	struct _0xCE7F18D0               DefaultSettings;                 // type:STRUCT.STRUCTURE
	float                            _0xA587AB65;                     // type:FLOAT.0
	float                            _0x966E9B0E;                     // type:FLOAT.0
	enum _0x0100F80E                 _0x70280C64;                     // type:ENUM.32BIT
	float                            _0x441DE2D5;                     // type:FLOAT.0
	float                            _0x05B07AD7;                     // type:FLOAT.0
	float                            _0x8962E7EF;                     // type:FLOAT.0
	float                            _0x88F2F85C;                     // type:FLOAT.0
	float                            _0x1D641F56;                     // type:FLOAT.0
	float                            _0x760AD8CD;                     // type:FLOAT.0
	float                            _0x300590DF;                     // type:FLOAT.0
	float                            _0x5D3E3838;                     // type:FLOAT.0
	float                            _0x4CE7147E;                     // type:FLOAT.0
	float                            _0x80F1F326;                     // type:FLOAT.0
	float                            _0x531B6AC7;                     // type:FLOAT.0
	enum _0x0100F80E                 _0x27067B1A;                     // type:ENUM.32BIT
	float                            _0xA2C13266;                     // type:FLOAT.0
	float                            _0x3DBE7085;                     // type:FLOAT.0
	float                            _0x76442241;                     // type:FLOAT.0
	float                            _0xB05BC76E;                     // type:FLOAT.0
	float                            _0xE17C5B8E;                     // type:FLOAT.0
	float                            _0x7DA49586;                     // type:FLOAT.0
};

struct _0x8C189988 : CTuning
{
	string                           FxName;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7A35DA33;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x15B88C39;                     // type:STRING.ATNONFINALHASHSTRING
	vec2                             _0x6926170F;                     // type:VECTOR2.0
	float                            _0x42E13625;                     // type:FLOAT.0
	float                            _0xA0E7093E;                     // type:FLOAT.0
	float                            _0xC38502B9;                     // type:FLOAT.0
	float                            _0x53F9332A;                     // type:FLOAT.0
	float                            _0x8CFC1878;                     // type:FLOAT.0
	float                            _0x7BA31780;                     // type:FLOAT.0
	float                            _0x75BE1F4D;                     // type:FLOAT.0
	float                            _0xA4F95C7D;                     // type:FLOAT.0
	float                            _0x5218ADBD;                     // type:FLOAT.0
	float                            _0xCD7DE0DB;                     // type:FLOAT.0
	float                            _0x31548303;                     // type:FLOAT.0
	float                            _0x62943C4E;                     // type:FLOAT.0
	float                            _0x889C6F0B;                     // type:FLOAT.0
	float                            _0x2A9D1E39;                     // type:FLOAT.0
	float                            _0x1051ACCB;                     // type:FLOAT.0
	float                            _0x86CE670F;                     // type:FLOAT.0
	float                            _0xB6BE9C1D;                     // type:FLOAT.0
	bool                             _0x4E6D16C1;                     // type:BOOL.0
};

struct _0x8C1D122A
{
	float                            MinTimeSinceLastSpotted;         // type:FLOAT.0
	float                            MaxTimeSinceLastSpotted;         // type:FLOAT.0
	float                            _0x4BAC0E9D;                     // type:FLOAT.0
	float                            _0x625A3D76;                     // type:FLOAT.0
	float                            MaxRadiusForMinTimeSinceLastSpotted; // type:FLOAT.0
	float                            MaxRadiusForMaxTimeSinceLastSpotted; // type:FLOAT.0
	float                            MaxHeight;                       // type:FLOAT.0
	float                            MaxAngle;                        // type:FLOAT.0
	bool                             UseLastSeenPosition;             // type:BOOL.0
	bool                             UseByDefault;                    // type:BOOL.0
	bool                             UseEnclosedSearchRegions;        // type:BOOL.0
	bool                             _0xAC6FDC37;                     // type:BOOL.0
	bool                             _0x20B4563F;                     // type:BOOL.0
	bool                             _0x502D2E4D;                     // type:BOOL.0
};

struct _0x8C1DBA38
{
	array<string>                    _0x4E3FFAB9;                     // type:ARRAY.ATARRAY
};

struct _0x8C2AB6B8 : _0x84216D89
{
};

struct _0x8C354D49
{
};

struct _0x8C381869 : CTuning
{
	float                            _0x9150FC54;                     // type:FLOAT.0
	float                            _0xBB4D966B;                     // type:FLOAT.0
	float                            _0xFB14FB8B;                     // type:FLOAT.0
	vec3V                            ReinsOffset;                     // type:VEC3V.0
	float                            _0x43442373;                     // type:FLOAT.0
};

struct _0x8C401129
{
	bitset<enum _0xCAC6AC9F>            Flags;                           // type:BITSET.32BIT
	struct _0x74B4F76A                  Moderator;                       // type:STRUCT.STRUCTURE
	struct _0x505A40C8                  Confrontation;                   // type:STRUCT.STRUCTURE
	float                               ImmediateDetectionRange;         // type:FLOAT.0
	float                               Timeout;                         // type:FLOAT.0
	float                               MinTimeBeforeNotifyLawEnforcement; // type:FLOAT.0
	int                                 OccurrencesBeforeEscalatingSeverity; // type:INT.0
	enum _0x655601C3                    EscalationSeverity;              // type:ENUM.32BIT
	int                                 OccurrencesResetTime;            // type:INT.0
	bool                                Disabled;                        // type:BOOL.0
	int                                 CrimeValue;                      // type:INT.0
	int                                 PunishingCrimeValue;             // type:INT.0
	int                                 ForcedWantedLevelIncreaseSP;     // type:INT.0
	int                                 ForcedWantedLevelIncreaseMP;     // type:INT.0
	int                                 MinWantedLevelSP;                // type:INT.0
	int                                 MinWantedLevelMP;                // type:INT.0
	enum _0x6449EEE7                    MemoryVerb;                      // type:ENUM.32BIT
	struct _0x4FD1156B                  WitnessInformation;              // type:STRUCT.STRUCTURE
	enum _0x655601C3                    Severity;                        // type:ENUM.32BIT
	map<string, struct _0x119F369B>     RegionalOverrides;               // type:MAP.ATBINARYMAP
	map<string, struct _0x119F369B>     RegionTypeOverrides;             // type:MAP.ATBINARYMAP
};

struct _0x8C502B52
{
	uchar                            Component;                       // type:UCHAR.0
	uint                             DrawableId;                      // type:UINT.0
	uint                             DrawableAltId;                   // type:UINT.0
};

struct _0x8C701A64
{
	float                            RadiusMin;                       // type:FLOAT.0
	float                            RadiusMax;                       // type:FLOAT.0
	struct _0xBF2BD132               RadiusPerAngleKF;                // type:STRUCT.STRUCTURE
};

struct _0x8C7CB742 : _0x8A0DC979
{
	string                           Scene;                           // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7F4314B2;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             restoreOnExit;                   // type:BOOL.0
};

struct _0x8C8958C6
{
	float                            _0x3D2705DF;                     // type:FLOAT.0
	float                            _0xCD9E9F55;                     // type:FLOAT.0
	float                            _0xE3C6D484;                     // type:FLOAT.0
	float                            _0x78570C16;                     // type:FLOAT.0
	float                            _0x94AB406A;                     // type:FLOAT.0
	bool                             _0xAB84E7AC;                     // type:BOOL.0
	enum _0x0100F80E                 _0xDBD8A511;                     // type:ENUM.32BIT
	bool                             _0x45CAE770;                     // type:BOOL.0
	float                            _0xB3418C67;                     // type:FLOAT.0
	bool                             _0x51377FE8;                     // type:BOOL.0
	bool                             _0x298BDFB6;                     // type:BOOL.0
	bool                             _0x95072430;                     // type:BOOL.0
	float                            _0x25BF5209;                     // type:FLOAT.0
	int                              _0xF0C247F2;                     // type:INT.0
	int                              _0x3355895F;                     // type:INT.0
	float                            _0x45E97E19;                     // type:FLOAT.0
	vec3V                            _0x07550E9D;                     // type:VEC3V.0
	float                            _0x6870BC59;                     // type:FLOAT.0
	float                            _0xFF4D44F5;                     // type:FLOAT.0
};

struct _0x8C89FB16
{
	float                            Base;                            // type:FLOAT.0
	struct _0x7F241C2B               Bonus;                           // type:STRUCT.STRUCTURE
	struct _0x85D93C5C               Penalty;                         // type:STRUCT.STRUCTURE
	array<struct _0x93C15105>        LinearScores;                    // type:ARRAY.ATARRAY
	array<struct _0xCAB05532>        StatusModifiers;                 // type:ARRAY.ATARRAY
};

struct _0x8C90F95E : CAICondition
{
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct _0x8C99099B : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8CA49813
{
	array<enum _0xE4221B43>          _0xDF11307D;                     // type:ARRAY.ATARRAY
};

struct _0x8CB021E1
{
	map<string, string>              Map;                             // type:MAP.ATBINARYMAP
};

struct _0x8CC6DD1A
{
	bool                             bControlledByPlayerSprintInput;  // type:BOOL.0
	float                            fMinArmAmplitude;                // type:FLOAT.0
	float                            fMaxArmAmplitude;                // type:FLOAT.0
	float                            fMinArmStiffness;                // type:FLOAT.0
	float                            fMaxArmStiffness;                // type:FLOAT.0
	float                            fMinArmPeriod;                   // type:FLOAT.0
	float                            fMaxArmPeriod;                   // type:FLOAT.0
	float                            fMinStroke;                      // type:FLOAT.0
	float                            fMaxStroke;                      // type:FLOAT.0
	float                            fMinBuoyancy;                    // type:FLOAT.0
	float                            fMaxBuoyancy;                    // type:FLOAT.0
};

struct _0x8CD40155 : _0xAF24E56C
{
	string                           _0x5F7CBD98;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8CD59F7B
{
	string                           GripClipSet;                     // type:STRING.ATNONFINALHASHSTRING
	string                           GripClip;                        // type:STRING.ATNONFINALHASHSTRING
	string                           GripFilter;                      // type:STRING.ATNONFINALHASHSTRING
	float                            ActivateGripPhase;               // type:FLOAT.0
};

struct _0x8CDFF0CA : _0x11AD3051
{
	string                           _0x8AAA888A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8CE148A2 : _0xDE795AEA
{
};

struct _0x8CE53393
{
	uint                             BlendInDuration;                 // type:UINT.0
	uint                             BlendOutDuration;                // type:UINT.0
	enum _0x0100F80E                 _0x31E7B674;                     // type:ENUM.32BIT
	float                            _0xCCB6BFE8;                     // type:FLOAT.0
	float                            _0x831DA7C0;                     // type:FLOAT.0
	float                            _0x5AEBC6DC;                     // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
	float                            _0x2DDD9765;                     // type:FLOAT.0
	string                           DofSettings;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8D070486
{
	string                           DefaultBlip;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ObjectiveBlip;                   // type:STRING.ATNONFINALHASHSTRING
	string                           LegendaryModifier;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8D2EA915 : _0x2F7DA38D
{
	float                            _0x7A7162B5;                     // type:FLOAT.0
};

struct _0x8D3B018D
{
	float                            MaxDistanceFromCameraForViewportChecks; // type:FLOAT.0
	float                            RadiusForViewportCheck;          // type:FLOAT.0
};

struct _0x8D40EDCD : CCompendiumItemFish
{
};

struct _0x8D5E1429 : _0x11AD3051
{
	array<struct _0xE966BC22>        inventory;                       // type:ARRAY.ATARRAY
};

struct _0x8D7888C0
{
	array<struct SavegameInventoryItem>     items;                           // type:ARRAY.ATARRAY
	array<uint>                             ownedWeapons;                    // type:ARRAY.ATARRAY
};

struct _0x8D865FE1
{
	struct _0xC9C5A880               _0x0EDDBC0B;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               _0xCFBD1BF0;                     // type:STRUCT.STRUCTURE
	struct camEnvelopeMetadata       _0xD065BB88;                     // type:STRUCT.STRUCTURE
};

struct _0x8D88126A : CAICondition
{
	uint                             Count;                           // type:UINT.0
};

struct _0x8DB560C0 : _0x7B341543
{
};

struct _0x8DBB9306
{
	vec3V                            WorldPosition;                   // type:VEC3V.0
	string                           Linkage;                         // type:STRING.ATNONFINALHASHSTRING
	float                            Width;                           // type:FLOAT.0
	float                            Height;                          // type:FLOAT.0
	float                            Alpha;                           // type:FLOAT.0
	bool                             UseSDF;                          // type:BOOL.0
};

struct _0x8DC00C7A : _0x2F7DA38D
{
	struct _0x24749343               clip;                            // type:STRUCT.STRUCTURE
};

struct _0x8DCC010D : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x84B954E7;                     // type:STRUCT.STRUCTURE
	string                           _0x0F7EFF2E;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8DCE67A8 : _0xE046EA8D
{
};

struct _0x8DD60B6F
{
	struct _0x96B34ADF               Distance;                        // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               Direction;                       // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               Randomness;                      // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               Preferred;                       // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               History;                         // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               _0xCFC27361;                     // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               _0x7ACF4907;                     // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               _0x18CC35D7;                     // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               _0x50878F5C;                     // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               _0x38A00A7F;                     // type:STRUCT.STRUCTURE
};

struct _0x8DD69A98
{
	float                            StraightLineDistance;            // type:FLOAT.0
	float                            MinTargetSpeedToStartFromPursue; // type:FLOAT.0
	float                            MinTargetSpeedToContinueFromPursue; // type:FLOAT.0
};

struct _0x8DED6E96 : _0x8760E325
{
	array<string, 5>                 _0x91CA8F3C;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x8DEEFEAD : _0xEAE4BA5A
{
	enum _0x113E295E                 Channel;                         // type:ENUM.32BIT
};

struct _0x8DF2CCCB
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	string                           _0x9CA16305;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFA77BDD3;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8DF49F7E : _0x6BFCA598
{
	string                           typeName;                        // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x2EF8C08D;                     // type:BOOL.0
	bool                             _0xB8EAD420;                     // type:BOOL.0
	float                            _0xB3CE7628;                     // type:FLOAT.0
	enum _0x5C04D65B                 _0x7A287F3A;                     // type:ENUM.32BIT
	array<string>                    _0x034C0639;                     // type:ARRAY.ATARRAY
	enum _0x5C04D65B                 _0x4DFB1F49;                     // type:ENUM.32BIT
	array<string>                    _0xCEEF6AD9;                     // type:ARRAY.ATARRAY
	bitset<enum _0x901737E6>         _0xAA2789E2;                     // type:BITSET.32BIT
};

struct _0x8E0341B6
{
	vec3V                            Min;                             // type:VEC3V.0
	vec3V                            Max;                             // type:VEC3V.0
};

struct _0x8E32D4D2
{
	string                           id;                              // type:STRING.ATNSHASHSTRING
	string                           displayName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           description;                     // type:STRING.ATNONFINALHASHSTRING
	string                           profileStatId;                   // type:STRING.ATFINALHASHSTRING
	string                           transition;                      // type:STRING.ATNONFINALHASHSTRING
	enum _0x9D5B14E0                 displayStyle;                    // type:ENUM.32BIT
	string                           infoBox;                         // type:STRING.ATNONFINALHASHSTRING
	string                           tipText;                         // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x86CB6B4B>         flags;                           // type:BITSET.32BIT
	float                            step;                            // type:FLOAT.0
	struct _0xB74AC865               minEvaluator;                    // type:STRUCT.POINTER
	struct _0xB74AC865               maxEvaluator;                    // type:STRUCT.POINTER
	struct _0xB74AC865               defaultEvaluator;                // type:STRUCT.POINTER
	array<struct _0xA381C82A>        dependencyConditions;            // type:ARRAY.ATARRAY
};

struct _0x8E34687F : camCinematicShotMetadata
{
	struct _0x9C0851A2               Trigger;                         // type:STRUCT.STRUCTURE
	matrix34V                        Transform;                       // type:MAT34V.0
	array<string>                    Cameras;                         // type:ARRAY.ATARRAY
	int                              _0xA38A4F56;                     // type:INT.0
	bool                             _0x92F9CAC8;                     // type:BOOL.0
	bool                             _0x9B7DB2D7;                     // type:BOOL.0
	bool                             _0x0CEC8E74;                     // type:BOOL.0
	bool                             IsDisabled;                      // type:BOOL.0
};

struct _0x8E354B7F
{
	float                            TargetArriveDist;                // type:FLOAT.0
	float                            CruiseSpeed;                     // type:FLOAT.0
	float                            _0xD6912C7D;                     // type:FLOAT.0
	float                            MaxDistanceToConsiderClose;      // type:FLOAT.0
	float                            CruiseSpeedWhenClose;            // type:FLOAT.0
	float                            CruiseSpeedWhenObstructedByLawEnforcementPed; // type:FLOAT.0
	float                            CruiseSpeedWhenObstructedByLawEnforcementVehicle; // type:FLOAT.0
	float                            _0x48020AB9;                     // type:FLOAT.0
	float                            _0xEF8E7991;                     // type:FLOAT.0
	float                            _0x959DE104;                     // type:FLOAT.0
	int                              _0x749105C5;                     // type:INT.0
	int                              _0x905D96A3;                     // type:INT.0
};

struct _0x8E41FDEE
{
	array<struct _0xF4495B2C>        _0xCEE2F413;                     // type:ARRAY.ATARRAY
};

struct _0x8E440AFD
{
	bool                                            _0xF4D6D773;                     // type:BOOL.0
	bool                                            _0xE10178AD;                     // type:BOOL.0
	bitset<enum eMovementTransitionHelperFlags>     _0xB18253BF;                     // type:BITSET.32BIT
	float                                           _0x93B50362;                     // type:FLOAT.0
	float                                           _0x6318CE71;                     // type:FLOAT.0
	string                                          _0x3B9A65B6;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xC5B2B11D;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x9D52BE2D;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x4B2D4558;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8E50AEC3
{
	float                            MaxHeadingSpeed;                 // type:FLOAT.0
	float                            MaxPitchSpeed;                   // type:FLOAT.0
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            Acceleration;                    // type:FLOAT.0
	float                            Deceleration;                    // type:FLOAT.0
	float                            _0x9083DE41;                     // type:FLOAT.0
	float                            _0x1347DA8F;                     // type:FLOAT.0
	float                            _0x0764DB8B;                     // type:FLOAT.0
	float                            _0xF46508B8;                     // type:FLOAT.0
};

struct _0x8E64405F
{
	struct _0xA2CB7B84               Path;                            // type:STRUCT.STRUCTURE
	bool                             _0x571E7C02;                     // type:BOOL.0
	bool                             _0xABA73669;                     // type:BOOL.0
};

struct _0x8E7CF5A6 : _0x1054F746
{
};

struct _0x8E82246C : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x088531F0;                     // type:STRUCT.STRUCTURE
	bool                             _0x47B47045;                     // type:BOOL.0
};

struct _0x8E8357AC
{
	bool                             _0x9668BFB4;                     // type:BOOL.0
	float                            _0x9DF183C1;                     // type:FLOAT.0
	float                            _0x8977B80E;                     // type:FLOAT.0
	float                            _0xB17935C8;                     // type:FLOAT.0
	float                            _0x17584B91;                     // type:FLOAT.2
	float                            _0x374BB779;                     // type:FLOAT.2
	bool                             _0x4499C7C5;                     // type:BOOL.0
	float                            _0x8D6A8A75;                     // type:FLOAT.0
	struct _0xE62F2784               _0x8845CEA6;                     // type:STRUCT.POINTER
	uint                             _0x9C8C06AB;                     // type:UINT.0
	struct _0x0041542F               _0xB4CCF71D;                     // type:STRUCT.STRUCTURE
	struct _0x0041542F               _0x75E635F4;                     // type:STRUCT.STRUCTURE
	bool                             _0xC6FCA009;                     // type:BOOL.0
	bool                             _0x999A706A;                     // type:BOOL.0
	float                            _0x1805C514;                     // type:FLOAT.2
	float                            _0x5BFBB50D;                     // type:FLOAT.0
	float                            _0xC02BE783;                     // type:FLOAT.0
	bool                             _0x92104596;                     // type:BOOL.0
	bool                             _0x20FC2720;                     // type:BOOL.0
	string                           _0xC503678F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xE69E1979;                     // type:FLOAT.0
	float                            _0xAB3CB824;                     // type:FLOAT.0
	float                            _0x6B3962D8;                     // type:FLOAT.0
	float                            CoverEntryRatePlayer;            // type:FLOAT.0
	float                            CoverEntryRateAI;                // type:FLOAT.0
	float                            CoverEntryShortDistanceAI;       // type:FLOAT.0
	float                            CoverEntryShortDistancePlayer;   // type:FLOAT.0
	float                            CoverEntryStandDistance;         // type:FLOAT.0
	float                            CoverEntryStandStrafeDistance;   // type:FLOAT.0
	float                            CoverEntryMinDistance;           // type:FLOAT.0
	float                            CoverEntryMaxDistance;           // type:FLOAT.0
	float                            CoverEntryMinDistanceAI;         // type:FLOAT.0
	float                            CoverEntryMaxDistanceAI;         // type:FLOAT.0
	float                            CoverEntryMaxDirectDistance;     // type:FLOAT.0
	int                              CoverEntryMinTimeNavigatingAI;   // type:INT.0
	float                            CoverEntryMinAngleToScale;       // type:FLOAT.0
	float                            CoverEntryHeadingReachedTol;     // type:FLOAT.0
	float                            CoverEntryPositionReachedTol;    // type:FLOAT.0
	float                            _0xC74D4EB5;                     // type:FLOAT.0
	float                            FromCoverExitDistance;           // type:FLOAT.0
	float                            NetworkBlendInDuration;          // type:FLOAT.0
	float                            DistFromCoverToAllowReloadCache; // type:FLOAT.0
	bool                             WaitForFootPlant;                // type:BOOL.0
	bool                             ForceToTarget;                   // type:BOOL.0
	bool                             EnableInitialHeadingBlend;       // type:BOOL.0
	bool                             EnableTranslationScaling;        // type:BOOL.0
	bool                             EnableRotationScaling;           // type:BOOL.0
	bool                             PreventTranslationOvershoot;     // type:BOOL.0
	bool                             PreventRotationOvershoot;        // type:BOOL.0
	bool                             DoInitialHeadingBlend;           // type:BOOL.0
	bool                             DoFinalHeadingFixUp;             // type:BOOL.0
	float                            MinDistToPlayEntryAnim;          // type:FLOAT.0
	float                            MinDistToScale;                  // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
	float                            MaxRotSpeed;                     // type:FLOAT.0
	float                            MinTransScale;                   // type:FLOAT.0
	float                            MaxTransScale;                   // type:FLOAT.0
	float                            MinRotScale;                     // type:FLOAT.0
	float                            MaxRotScale;                     // type:FLOAT.0
	float                            DeltaTolerance;                  // type:FLOAT.0
	float                            MinRotDelta;                     // type:FLOAT.0
	float                            MaxAngleToSetDirectly;           // type:FLOAT.0
	float                            AiEntryHalfAngleTolerance;       // type:FLOAT.0
	bool                             EnableNewAICoverEntry;           // type:BOOL.0
	bool                             EnableUseSwatClipSet;            // type:BOOL.0
	bool                             UseShortDistAngleRotation;       // type:BOOL.0
	bool                             DisableAiCoverEntryStreamCheck;  // type:BOOL.0
	float                            DistToUseShortestRotation;       // type:FLOAT.0
	float                            InCoverTolerance;                // type:FLOAT.0
	float                            DotThresholdForCenterEnter;      // type:FLOAT.0
	float                            AiEntryMinRate;                  // type:FLOAT.0
	float                            AiEntryMaxRate;                  // type:FLOAT.0
	float                            PlayerSprintEntryRate;           // type:FLOAT.0
	float                            DefaultPlayerStandEntryStartMovementPhase; // type:FLOAT.0
	float                            DefaultPlayerStandEntryEndMovementPhase; // type:FLOAT.0
	float                            MaxAngleToBeginRotationScale;    // type:FLOAT.0
	float                            MaxDefaultAngularVelocity;       // type:FLOAT.0
	float                            EnterCoverInterruptMinTime;      // type:FLOAT.0
	float                            EnterCoverInterruptDistanceTolerance; // type:FLOAT.0
	float                            EnterCoverInterruptHeadingTolerance; // type:FLOAT.0
	float                            EnterCoverAimInterruptDistanceTolerance; // type:FLOAT.0
	float                            EnterCoverAimInterruptHeadingTolerance; // type:FLOAT.0
	bool                             _0x8A3A2E13;                     // type:BOOL.0
	bool                             _0xA30FC937;                     // type:BOOL.0
	bool                             _0x20368945;                     // type:BOOL.0
	float                            _0xA1374C7D;                     // type:FLOAT.0
	bool                             _0x55DB5F52;                     // type:BOOL.0
	float                            _0xB992D950;                     // type:FLOAT.0
	bool                             _0x08017E30;                     // type:BOOL.0
	float                            _0x9F37562C;                     // type:FLOAT.0
	float                            _0xA7006C23;                     // type:FLOAT.0
	struct _0x2C13A1BA               _0xFDA86F83;                     // type:STRUCT.STRUCTURE
	struct _0x2C13A1BA               _0xF0FC7270;                     // type:STRUCT.STRUCTURE
	struct _0x2C13A1BA               _0x342F5B66;                     // type:STRUCT.STRUCTURE
	struct _0x2C13A1BA               _0x15C58967;                     // type:STRUCT.STRUCTURE
	struct _0x2C13A1BA               _0xBA47D275;                     // type:STRUCT.STRUCTURE
	struct _0x2C13A1BA               _0x5B08A831;                     // type:STRUCT.STRUCTURE
	float                            _0x94D12FAA;                     // type:FLOAT.0
	float                            _0x8C5D5555;                     // type:FLOAT.0
	float                            _0x2E3B25EC;                     // type:FLOAT.0
	float                            _0x9EF1639A;                     // type:FLOAT.0
	float                            _0xC8942F87;                     // type:FLOAT.2
	struct _0x2C13A1BA               _0x7B54351C;                     // type:STRUCT.STRUCTURE
	struct _0x2C13A1BA               _0x3F0BC6CC;                     // type:STRUCT.STRUCTURE
	float                            _0xFA63AC51;                     // type:FLOAT.0
	float                            _0x969DC9ED;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x4F199D22;                     // type:STRUCT.STRUCTURE
	float                            _0x11017C89;                     // type:FLOAT.0
	float                            _0x1A740485;                     // type:FLOAT.0
	struct _0xBF2BD132               _0xAD05AD07;                     // type:STRUCT.STRUCTURE
	float                            _0xD301B5C5;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x3CA8328C;                     // type:STRUCT.STRUCTURE
	float                            _0x18B8615E;                     // type:FLOAT.0
	float                            _0xEBEA2EC4;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x116A2836;                     // type:STRUCT.STRUCTURE
	float                            _0x498A2D95;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x064402F2;                     // type:STRUCT.STRUCTURE
	float                            _0xADF23823;                     // type:FLOAT.0
	struct _0xBF2BD132               _0xEC5C3242;                     // type:STRUCT.STRUCTURE
	float                            _0x60BB4BB4;                     // type:FLOAT.0
	float                            _0xDE43F5B2;                     // type:FLOAT.0
	float                            _0x3C0EC954;                     // type:FLOAT.0
	float                            _0xDF1F58C5;                     // type:FLOAT.0
	float                            _0x4FF72492;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x56A8D4EE;                     // type:STRUCT.STRUCTURE
	float                            _0x23B71179;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x41288433;                     // type:STRUCT.STRUCTURE
	float                            _0xABA9EFA2;                     // type:FLOAT.0
	float                            _0x01E22AEF;                     // type:FLOAT.0
	float                            _0x791FC763;                     // type:FLOAT.0
	array<struct _0x3A6C3BC6>        _0x1F86FA1B;                     // type:ARRAY.ATARRAY
	float                            _0xA118438B;                     // type:FLOAT.0
	float                            _0x5CE43188;                     // type:FLOAT.0
	float                            _0x63C5FBAF;                     // type:FLOAT.0
	float                            _0x28CB7373;                     // type:FLOAT.0
	float                            _0x657FA8CB;                     // type:FLOAT.0
	float                            _0x0C9D98F2;                     // type:FLOAT.0
	float                            _0xA451B5EE;                     // type:FLOAT.0
	float                            _0x84BC7333;                     // type:FLOAT.0
	float                            _0xCD5C4E44;                     // type:FLOAT.0
	float                            _0x88FF8B48;                     // type:FLOAT.0
	float                            _0x17C4DF86;                     // type:FLOAT.2
	float                            _0xD118E57A;                     // type:FLOAT.0
	float                            _0xDB8FE51E;                     // type:FLOAT.0
	float                            _0x5307F7D0;                     // type:FLOAT.0
	float                            _0xC0A780F4;                     // type:FLOAT.0
	struct _0xBF2BD132               _0xC38065E9;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x33758A0D;                     // type:STRUCT.STRUCTURE
	float                            _0xD1F73E82;                     // type:FLOAT.0
	struct _0xBF2BD132               _0xF40E1FFE;                     // type:STRUCT.STRUCTURE
	float                            _0x70944842;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x4CA0D8C4;                     // type:STRUCT.STRUCTURE
	float                            _0x5726AA2C;                     // type:FLOAT.0
	struct _0xBF2BD132               _0x13F97174;                     // type:STRUCT.STRUCTURE
	uint                             _0x77EF7A9A;                     // type:UINT.0
	float                            _0x3BA7830F;                     // type:FLOAT.0
	float                            _0x584CB52C;                     // type:FLOAT.0
	float                            _0x1AEB7310;                     // type:FLOAT.2
	float                            _0xC9F08D60;                     // type:FLOAT.2
	float                            _0x2CB73F56;                     // type:FLOAT.0
	bool                             _0xADC8ED6D;                     // type:BOOL.0
	bool                             _0xBE1A96DE;                     // type:BOOL.0
	float                            _0xA9BD73AE;                     // type:FLOAT.0
	float                            _0xDF077F29;                     // type:FLOAT.0
	float                            _0xC52BCFCD;                     // type:FLOAT.0
	bool                             _0xEA7E9E39;                     // type:BOOL.0
	vec3V                            _0x23D91AF5;                     // type:VEC3V.0
	float                            _0x1B8F6312;                     // type:FLOAT.0
	float                            _0xECA04FEA;                     // type:FLOAT.0
	vec3V                            _0xAF3333C0;                     // type:VEC3V.0
	float                            _0xAC85C74C;                     // type:FLOAT.0
	float                            _0xBC308333;                     // type:FLOAT.0
	float                            _0xDDA0DEF6;                     // type:FLOAT.0
	float                            _0x87A97C5F;                     // type:FLOAT.0
	float                            _0x063E42F2;                     // type:FLOAT.0
};

struct _0x8E9E33E8
{
	float                            _0x9DAC0067;                     // type:FLOAT.0
	uint                             _0x61FAD479;                     // type:UINT.0
	float                            _0xF533E760;                     // type:FLOAT.0
	uint                             _0x5C67FF19;                     // type:UINT.0
	float                            _0xBFA51EDF;                     // type:FLOAT.0
	float                            _0x6CE53758;                     // type:FLOAT.0
	float                            _0x4C266378;                     // type:FLOAT.0
	float                            _0x6243EB3F;                     // type:FLOAT.0
	float                            _0xE0533210;                     // type:FLOAT.0
	float                            _0x78EBF099;                     // type:FLOAT.0
	bool                             _0x85798324;                     // type:BOOL.0
};

struct _0x8EAE8F47
{
	string                           cameraDictionary;                // type:STRING.ATNONFINALHASHSTRING
	string                           cameraName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           passengerCameraDictionary;       // type:STRING.ATNONFINALHASHSTRING
	string                           passengerCameraName;             // type:STRING.ATNONFINALHASHSTRING
	string                           aimCameraDictionary;             // type:STRING.ATNONFINALHASHSTRING
	string                           aimCameraName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           firstPersonCameraDictionary;     // type:STRING.ATNONFINALHASHSTRING
	string                           firstPersonCameraName;           // type:STRING.ATNONFINALHASHSTRING
	string                           bonnetCameraDictionary;          // type:STRING.ATNONFINALHASHSTRING
	string                           bonnetCameraName;                // type:STRING.ATNONFINALHASHSTRING
	bool                             shouldUseCinematicViewMode;      // type:BOOL.0
	bool                             shouldForceOcclusionTest;        // type:BOOL.0
	bool                             shouldCameraIgnoreExiting;       // type:BOOL.0
	bool                             shouldUseVehicleAimCameraForIlo; // type:BOOL.0
	string                           _0x7F7B7C3D;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    cinematicPartCameras;            // type:ARRAY.ATARRAY
};

struct _0x8EAFF605
{
	bitset<enum _0x392297FE>         ScriptEventFlags;                // type:BITSET.8BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x990F9373>        PhaseCombatInfoOverride;         // type:ARRAY.ATARRAY
	struct _0x2B9F834A               DispatchPeds;                    // type:STRUCT.STRUCTURE
	array<struct _0xA3E4F916>        NextPhases;                      // type:ARRAY.ATARRAY
	struct _0xA697DCA7               PhaseEndConditions;              // type:STRUCT.STRUCTURE
	array<struct _0x4B7C425C>        ConditionalSpawnDelays;          // type:ARRAY.ATARRAY
	float                            GroupMultiplier;                 // type:FLOAT.0
	float                            SpawnDelay;                      // type:FLOAT.0
	float                            _0x19C43C89;                     // type:FLOAT.0
	float                            _0x0F3A9E7E;                     // type:FLOAT.0
};

struct _0x8EB3D397 : _0x05C33D80
{
	struct _0x6FEC1103               params;                          // type:STRUCT.STRUCTURE
};

struct _0x8EC8C9FC : _0x3AB6499E
{
	string                           _0xC31F2A30;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xA4FC129E;                     // type:FLOAT.0
	float                            _0xCB6C0CA6;                     // type:FLOAT.0
	struct _0x03916DEA               _0x053D3320;                     // type:STRUCT.STRUCTURE
	float                            _0x56C4C14C;                     // type:FLOAT.0
	struct _0x03916DEA               _0x34890357;                     // type:STRUCT.STRUCTURE
};

struct _0x8ECFB47F : _0x5BF975CF
{
};

struct _0x8EDEB4E3
{
	bitset<enum _0x8A1FC2E5>         Flags;                           // type:BITSET.8BIT
};

struct _0x8F122E3F
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8F1A309F : CAICondition
{
	struct StatId                    StatId;                          // type:STRUCT.STRUCTURE
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           LabelHash;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8F1BF76B
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xB4D0EF97               element;                         // type:STRUCT.STRUCTURE
};

struct _0x8F202515
{
	vec2V                            Center;                          // type:VEC2V.0
	bool                             _0x3D4F0943;                     // type:BOOL.0
};

struct _0x8F2E87B9 : _0x8A0DC979
{
};

struct _0x8F3B3870 : _0xA26E1113
{
	float16                          value;                           // type:FLOAT16.0
};

struct _0x8F3DDF6F : CTuning
{
	struct _0x6C1D7764               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x8F43BE42 : _0xF57D322B
{
};

struct _0x8F4A224D : uiSelectableBehaviorBase
{
	string                           _0xECF43C39;                     // type:STRING.ATSTRING
};

struct _0x8F4C4751 : CTuning
{
	struct _0x4C6342F5               _0x11BFB742;                     // type:STRUCT.STRUCTURE
	float                            _0xCBD9ED0A;                     // type:FLOAT.0
	float                            _0xC3D36D74;                     // type:FLOAT.0
	float                            _0x8E8EFB49;                     // type:FLOAT.0
	float                            _0x15912530;                     // type:FLOAT.0
};

struct _0x8F545125
{
	vec3V                            Position;                        // type:VEC3V.0
	bool                             _0x3D964570;                     // type:BOOL.0
};

struct _0x8F58E89A
{
	string                           _0xB52DFDEF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x05724996;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x8F5A468D : CTuning
{
	string                           _0x0A192EE8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x85F3FBEF;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC9AB9034;                     // type:FLOAT.0
	float                            _0xD92583C4;                     // type:FLOAT.0
	float                            _0x10EEEB31;                     // type:FLOAT.0
	array<struct _0x8E0341B6>        Volumes;                         // type:ARRAY.ATARRAY
};

struct _0x8F5DEFB0
{
	array<float, 24>                 HourlyModifiers;                 // type:ARRAY.ATFIXEDARRAY
};

struct _0x8F62E55D : camBaseObjectMetadata
{
	string                           AnimName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB4ABA05B;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x8E4FE6CD;                     // type:BOOL.0
	vec3                             _0x9F7A2FD5;                     // type:VECTOR3.0
	bool                             _0x5E94574A;                     // type:BOOL.0
	vec3                             _0x6CD5666E;                     // type:VECTOR3.0
	bool                             _0x10A2ADAD;                     // type:BOOL.0
	bool                             _0xDACB3BB5;                     // type:BOOL.0
	bool                             _0x4B2BFDC3;                     // type:BOOL.0
	int                              _0x7488508A;                     // type:INT.0
	int                              _0x509E9A61;                     // type:INT.0
	int                              _0x60D76485;                     // type:INT.0
	enum _0xDF8E19B8                 _0x859FC601;                     // type:ENUM.32BIT
};

struct _0x8F6B4E58
{
	bool                             _0x8CEF65C7;                     // type:BOOL.0
	float                            _0x8E55E5FF;                     // type:FLOAT.2
	bool                             _0xAC1523C9;                     // type:BOOL.0
	enum _0xD7844572                 _0xF7D10B20;                     // type:ENUM.32BIT
	bool                             _0xA1021274;                     // type:BOOL.0
	enum _0x99C9CD27                 _0x324AB422;                     // type:ENUM.32BIT
	bool                             _0xC9353B40;                     // type:BOOL.0
	float                            _0x683D75FB;                     // type:FLOAT.0
	float                            _0x4466E8FF;                     // type:FLOAT.0
	bool                             _0xF59F8E44;                     // type:BOOL.0
	float                            _0x5D8888C6;                     // type:FLOAT.0
	float                            _0x46D1A0B8;                     // type:FLOAT.0
	float                            _0x717A5224;                     // type:FLOAT.0
	float                            _0xE178B9EB;                     // type:FLOAT.0
};

struct _0x8F720542
{
	bitset<enum _0xA62EB687>         Default;                         // type:BITSET.32BIT
	array<struct _0x53C5296C>        ConditionOverrideFlags;          // type:ARRAY.ATARRAY
};

struct _0x8F860633 : _0x0A510DA9
{
};

struct _0x8F8E4271
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	array<struct CAICondition>       Conditions;                      // type:ARRAY.ATARRAY
	struct void                      Models;                          // type:STRUCT.EXTERNAL_NAMED
	float                            SpawnProbability;                // type:FLOAT.0
	bitset<enum _0x92A6C82E>         Flags;                           // type:BITSET.32BIT
};

struct _0x8F9894F2 : _0x17E2C108
{
	uint                             currentIndex;                    // type:UINT.0
	array<struct _0x720FAD40>        messages;                        // type:ARRAY.ATARRAY
};

struct _0x8F9ECBB2
{
	string                           name;                            // type:STRING.ATSTRING
	array<float>                     values;                          // type:ARRAY.ATARRAY
};

struct _0x8FC63622
{
	bool                             _0xCF863188;                     // type:BOOL.0
	bool                             _0x7BFC01AA;                     // type:BOOL.0
	float                            _0xD6CB6E63;                     // type:FLOAT.0
	float                            _0xF99996C5;                     // type:FLOAT.0
	float                            _0x5C3CFA77;                     // type:FLOAT.0
	bool                             _0xF77AFB49;                     // type:BOOL.0
	bool                             _0xA869DEB4;                     // type:BOOL.0
};

struct _0x8FCEAB89
{
	vec2                             HeadingLimitsLeft;               // type:VECTOR2.0
	vec2                             HeadingLimitsRight;              // type:VECTOR2.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
	vec2                             PitchOffset;                     // type:VECTOR2.0
	vec2                             WheelAngleLimits;                // type:VECTOR2.0
	vec2                             WheelAngleOffset;                // type:VECTOR2.0
	float                            MaxWheelOffsetY;                 // type:FLOAT.0
	float                            WheelClipLerpInRate;             // type:FLOAT.0
	float                            WheelClipLerpOutRate;            // type:FLOAT.0
};

struct _0x8FD3BBB5 : _0x18C05852
{
	bool                             RestoreOnUnfocus;                // type:BOOL.0
};

struct _0x8FD4EF58
{
	array<struct _0x7375C2C5>        _0x6FE36588;                     // type:ARRAY.ATARRAY
};

struct _0x8FD83238 : CTuning
{
	struct _0x3AD7BA05               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x8FE1DED2 : _0x27A262B3
{
};

struct _0x8FEFF479 : CTuning
{
	struct _0x3CDEAA2D               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x8FF6FB02 : _0x3AB6499E
{
	string                           _0xD524F18E;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x889B0C09;                     // type:UINT.0
	float                            _0xA54B4EC2;                     // type:FLOAT.0
	bool                             _0x2007E611;                     // type:BOOL.0
	vec3                             _0xE4B0326A;                     // type:VECTOR3.0
	float                            _0xB1315A6C;                     // type:FLOAT.0
	float                            _0xA38990A8;                     // type:FLOAT.0
	float                            _0x1B62F2CC;                     // type:FLOAT.0
	float                            _0xF3F8FA0A;                     // type:FLOAT.0
	float                            _0x3D48A56C;                     // type:FLOAT.0
	vec2                             _0x99AC880F;                     // type:VECTOR2.0
	float                            _0x3E116ABE;                     // type:FLOAT.0
	float                            _0xA5337EE1;                     // type:FLOAT.0
	float                            _0x31993116;                     // type:FLOAT.0
	float                            _0x4FBED43C;                     // type:FLOAT.0
	vec2                             _0x47E0063C;                     // type:VECTOR2.0
	string                           _0x5223A783;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x9281ECB1;                     // type:FLOAT.0
	float                            _0x7E18B1DC;                     // type:FLOAT.0
	float                            _0x3EAF86E5;                     // type:FLOAT.0
	float                            _0xEA0F0B59;                     // type:FLOAT.0
	float                            _0xBD2BFEEB;                     // type:FLOAT.0
	float                            _0x26F37BC4;                     // type:FLOAT.0
	float                            _0x53E4D791;                     // type:FLOAT.0
};

struct _0x90037E35
{
	float                            _0xF763652D;                     // type:FLOAT.0
	float                            _0x09DD33C1;                     // type:FLOAT.0
	float                            _0xE4BE3B70;                     // type:FLOAT.0
	float                            _0x26E5D460;                     // type:FLOAT.0
	string                           _0x7E26B8F4;                     // type:STRING.POINTER
};

struct _0x900AEE8B : _0x6992EBA1
{
};

struct _0x90203E04
{
	array<uint>                      editorNodeCount;                 // type:ARRAY.ATARRAY
	array<uint64>                    editorNodeId;                    // type:ARRAY.ATARRAY
	array<float>                     editorNodePositionX;             // type:ARRAY.ATARRAY
	array<float>                     editorNodePositionY;             // type:ARRAY.ATARRAY
	array<uint64>                    editorLinkId;                    // type:ARRAY.ATARRAY
	array<uint64>                    editorFromNodeId;                // type:ARRAY.ATARRAY
	array<uint64>                    editorToNodeId;                  // type:ARRAY.ATARRAY
};

struct _0x904AC1CF
{
	enum _0x9DB65C31                 _0x6CC3A318;                     // type:ENUM.32BIT
	bool                             _0xA8B02AEB;                     // type:BOOL.0
	bool                             _0x061652EB;                     // type:BOOL.0
	float                            _0x23B08426;                     // type:FLOAT.0
	float                            _0x7AF40977;                     // type:FLOAT.0
	float                            _0x5F17FAE6;                     // type:FLOAT.0
};

struct _0x906508CE
{
};

struct _0x907AE27F : CAICondition
{
	string                           _0x58BB3A29;                     // type:STRING.ATNSHASHSTRING
	uint                             _0x44D60910;                     // type:UINT.0
};

struct _0x90989C26
{
	string                           _0xDF07882E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x83817F5B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4C9020AD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9098A950 : uiDynamicItemVirtualizedSource
{
};

struct _0x909C4CAA : CTuning
{
	float                            BlendOutDelta;                   // type:FLOAT.0
	float                            _0x774FEB86;                     // type:FLOAT.0
	struct _0xDD0A17E0               _0x1F773FC5;                     // type:STRUCT.STRUCTURE
};

struct _0x90A2610E : _0x6396FD8D
{
};

struct _0x90AA218B : _0x2F7DA38D
{
	enum _0xBEEA6142                 _0xA89A7CD6;                     // type:ENUM.32BIT
	bool                             turnOff;                         // type:BOOL.0
};

struct _0x90AE7536
{
	bool                             _0x4546649E;                     // type:BOOL.0
	float                            _0x1453EE52;                     // type:FLOAT.0
	float                            _0xC16BBDCB;                     // type:FLOAT.0
	float                            _0xD9EBE747;                     // type:FLOAT.0
	bool                             _0x55EB6061;                     // type:BOOL.0
	float                            _0x0D771049;                     // type:FLOAT.0
	float                            _0x334721B8;                     // type:FLOAT.0
	float                            _0xE88DA90E;                     // type:FLOAT.0
	float                            _0x721ED755;                     // type:FLOAT.0
	float                            _0x7374EC8D;                     // type:FLOAT.0
	float                            _0xFFB15931;                     // type:FLOAT.0
	float                            _0xEBAE0B1F;                     // type:FLOAT.0
	float                            _0x5FFFF93C;                     // type:FLOAT.0
	int                              _0x12D05056;                     // type:INT.0
	int                              _0xB77FA5A2;                     // type:INT.0
	float                            _0x57DFDE90;                     // type:FLOAT.0
	float                            _0x5E645FE6;                     // type:FLOAT.0
	bool                             _0xEE6BD30A;                     // type:BOOL.0
	float                            _0x1A127013;                     // type:FLOAT.0
	float                            _0x9904323C;                     // type:FLOAT.0
	float                            _0x8EEEE32E;                     // type:FLOAT.0
	bool                             _0xB1596C1F;                     // type:BOOL.0
	float                            _0x9D19570C;                     // type:FLOAT.0
	float                            _0xEE2D8B49;                     // type:FLOAT.0
	float                            _0x66EEF9D5;                     // type:FLOAT.0
	float                            _0x061BE29C;                     // type:FLOAT.0
	bool                             _0xF31F9410;                     // type:BOOL.0
	float                            _0x80F56355;                     // type:FLOAT.0
	int                              _0x1735B9E3;                     // type:INT.0
	float                            _0xC8B33850;                     // type:FLOAT.0
	vec3V                            _0x32925C91;                     // type:VEC3V.0
	int                              _0x53175A91;                     // type:INT.0
	float                            _0xC41223FC;                     // type:FLOAT.0
	float                            _0xD4A8E605;                     // type:FLOAT.0
	float                            _0xC883C82B;                     // type:FLOAT.0
	bool                             _0xE7685F4C;                     // type:BOOL.0
	int                              _0x2E04AE35;                     // type:INT.0
	float                            _0xDB23B66F;                     // type:FLOAT.0
	float                            _0x857C24EF;                     // type:FLOAT.0
	float                            _0xB231689D;                     // type:FLOAT.0
	int                              _0xB9BCDC5D;                     // type:INT.0
	int                              _0x32943649;                     // type:INT.0
	bool                             _0x4E441F4A;                     // type:BOOL.0
	bool                             _0x910BE90A;                     // type:BOOL.0
	bool                             _0xDBD91609;                     // type:BOOL.0
	bool                             _0x53849A39;                     // type:BOOL.0
	bool                             _0x726401A8;                     // type:BOOL.0
};

struct _0x90BE6244 : CTuning
{
	struct _0xC9B86D65               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x90DFC33B
{
	vec3V                            _0x02158716;                     // type:VEC3V.0
	vec3V                            _0xEA522F7E;                     // type:VEC3V.0
};

struct _0x90E46354 : uiEventDataBase
{
};

struct _0x90E59256 : uiPromptedInputBehaviorBase
{
	struct _0x51B38E82               _0x6FD5CD8B;                     // type:STRUCT.STRUCTURE
	struct _0xE0CC4C41               _0x9EB86EA9;                     // type:STRUCT.STRUCTURE
	enum eInputNavigationStyle       InputStyle;                      // type:ENUM.32BIT
	enum _0xF105E94C                 DataType;                        // type:ENUM.32BIT
	enum _0x0FEF5327                 _0x53B513A9;                     // type:ENUM.32BIT
	string                           ScriptEventChannel;              // type:STRING.ATNONFINALHASHSTRING
	enum eUiEventChannels            CodeEventChannel;                // type:ENUM.32BIT
	struct _0x4198511D               _0xAE0AB7F6;                     // type:STRUCT.POINTER
	struct _0x61131A24               _0x7C3F392B;                     // type:STRUCT.STRUCTURE
	struct _0x61131A24               _0xDD3D58F0;                     // type:STRUCT.STRUCTURE
	struct _0x61131A24               _0xE5A13741;                     // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               CurrentIndex;                    // type:STRUCT.STRUCTURE
	bool                             Wrap;                            // type:BOOL.0
	struct _0xCE064FC1               _0xAC810495;                     // type:STRUCT.STRUCTURE
};

struct _0x90E9B700 : camBaseObjectMetadata
{
	struct _0xA1F6240A               _0x2F5AC396;                     // type:STRUCT.STRUCTURE
	bool                             _0x43C4E726;                     // type:BOOL.0
	array<string>                    Shots;                           // type:ARRAY.ATARRAY
};

struct _0x90EB189F : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eDamageType                 DamageType;                      // type:ENUM.32BIT
};

struct _0x90EBE89B
{
	float                            X;                               // type:FLOAT.0
	float                            Y;                               // type:FLOAT.0
	float                            Z;                               // type:FLOAT.0
};

struct _0x910DA6DE : _0x0A510DA9
{
	bitset<enum _0xBEE5FA60>         Property;                        // type:BITSET.32BIT
};

struct _0x9111B57E
{
	string                           ID;                              // type:STRING.ATNONFINALHASHSTRING
	map<string, string>              Overrides;                       // type:MAP.ATMAP
};

struct _0x91140770 : _0xC0749003
{
};

struct _0x9121E19E : _0xED23B004
{
	quatV                            Value;                           // type:QUATV.0
};

struct _0x91291654
{
	array<struct _0x42548FF3>        _0xEBFB44FB;                     // type:ARRAY.ATARRAY
};

struct _0x91425837
{
	enum _0xC24536B3                 _0x5D896B70;                     // type:ENUM.32BIT
	float                            _0xE642CBF5;                     // type:FLOAT.0
	float                            _0xC2BB5F2B;                     // type:FLOAT.0
	float                            _0x9A79A433;                     // type:FLOAT.0
};

struct _0x9153FCE2 : CTuning
{
	int                              _0x5C2DF49D;                     // type:INT.0
	int                              _0x57BC3AC2;                     // type:INT.0
	float                            fTimeBetweenUpdates;             // type:FLOAT.0
	float                            _0xC1EB7165;                     // type:FLOAT.0
	float                            _0xDCD11F4F;                     // type:FLOAT.0
	float                            _0xB5403441;                     // type:FLOAT.0
	float                            _0x094118D2;                     // type:FLOAT.0
	float                            _0x231A7E58;                     // type:FLOAT.0
};

struct _0x915EB48B
{
	float                            Intensity;                       // type:FLOAT.0
	enum _0x4EEED54E                 _0x6527C9EF;                     // type:ENUM.32BIT
	bool                             _0x2642F925;                     // type:BOOL.0
	int                              _0x339E2CC0;                     // type:INT.0
	float                            _0x96B0FC56;                     // type:FLOAT.0
	float                            _0x222315E8;                     // type:FLOAT.0
	enum _0x4EEED54E                 _0xA68C6C6B;                     // type:ENUM.32BIT
	enum _0x4EEED54E                 _0xB4F8C91F;                     // type:ENUM.32BIT
	bool                             _0xB1B0C9D1;                     // type:BOOL.0
	uchar                            _0x14C900CB;                     // type:UCHAR.0
	bool                             _0x1F209FCD;                     // type:BOOL.0
	enum _0x4EEED54E                 _0xA385395F;                     // type:ENUM.32BIT
	enum _0x061B806C                 _0x83F737AF;                     // type:ENUM.32BIT
	bool                             _0x6BA90FDD;                     // type:BOOL.0
	bool                             _0x3707D55D;                     // type:BOOL.0
};

struct _0x9162D6CB : _0xF70F21F5
{
	uint                             _0x267D4AF2;                     // type:UINT.0
	string                           _0xBC2E14C4;                     // type:STRING.ATSTRING
	string                           _0x36FACB4F;                     // type:STRING.ATSTRING
	string                           ModelHashName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9166BAB3
{
	string                           from;                            // type:STRING.ATNONFINALHASHSTRING
	string                           to;                              // type:STRING.ATNONFINALHASHSTRING
};

struct _0x916CE5D4 : _0x2F7DA38D
{
	bool                             _0xBC9BAF05;                     // type:BOOL.0
};

struct _0x91A198F8
{
	uint                             _0x42F69320;                     // type:UINT.0
	uint                             _0xC9CE243B;                     // type:UINT.0
	float                            _0x630E909A;                     // type:FLOAT.0
	float                            _0x63B5A729;                     // type:FLOAT.0
	float                            _0x728BC7A7;                     // type:FLOAT.0
	float                            _0xC2E65EE7;                     // type:FLOAT.0
};

struct _0x91A75AD3
{
	array<uint, 4>                   Data;                            // type:ARRAY.MEMBER
};

struct _0x91B047AE : _0x7EAFD12D
{
};

struct _0x91B88340 : _0xED23B004
{
	vec3V                            Value;                           // type:VEC3V.0
};

struct _0x91D75D27 : _0x87CB7DBA
{
	string                           _0x1A1BE541;                     // type:STRING.ATNONFINALHASHSTRING
	string                           MountModelSet;                   // type:STRING.ATNONFINALHASHSTRING
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct _0x91E5834F : UIBehavior
{
};

struct _0x920BB738 : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
};

struct _0x925DD576 : CTuning
{
	string                           LowLodBaseClipSetId;             // type:STRING.ATNONFINALHASHSTRING
	float                            DefaultChanceOfStandingWhileMoving; // type:FLOAT.0
	float                            DefaultTimeBetweenIdles;         // type:FLOAT.0
	float                            TimeAfterGunshotToPlayIdles;     // type:FLOAT.0
	float                            TimeAfterGunshotForPlayerToPlayIdles; // type:FLOAT.0
	float                            SecondsSinceInWaterThatCountsAsWet; // type:FLOAT.0
	float                            MaxVehicleVelocityForAmbientIdles; // type:FLOAT.0
	float                            _0x90E8D780;                     // type:FLOAT.0
	float                            MaxSteeringAngleForAmbientIdles; // type:FLOAT.0
	uint                             MaxTimeSinceGetUpForAmbientIdles; // type:UINT.0
};

struct _0x926CBE25 : _0xF70F21F5
{
	enum fwSpeechSubtitleType        _0xE8D0BBF5;                     // type:ENUM.32BIT
};

struct _0x92716C09
{
	int                              inputIconHeight;                 // type:INT.0
	int                              inputIconBorder;                 // type:INT.0
	int                              inputIconGap;                    // type:INT.0
	int                              inputIconPlusGap;                // type:INT.0
};

struct _0x928D27E5
{
	float                            DistanceMin;                     // type:FLOAT.0
	float                            DistanceMax;                     // type:FLOAT.0
	float                            ChangeMin;                       // type:FLOAT.0
	float                            ChangeMax;                       // type:FLOAT.0
};

struct _0x92951889
{
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x218C7C16;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x92B09143 : _0x1054F746
{
};

struct _0x92BDDB6F
{
	vec2                             HeadingLimits;                   // type:VECTOR2.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
};

struct _0x92D0B910 : _0xA26E1113
{
	bool                             value;                           // type:BOOL.0
};

struct _0x92D611F5
{
	float                            Radius;                          // type:FLOAT.0
	float                            PartDeletionChance;              // type:FLOAT.0
};

struct _0x92D6C704
{
	int                              Seat;                            // type:INT.0
	string                           ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
	float                            Chances;                         // type:FLOAT.0
};

struct _0x92E81058
{
	string                           ExitToAimClipsName;              // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xF06982C8>        ClipSets;                        // type:ARRAY.ATARRAY
	enum _0x43CF1CF9                 SeatPosition;                    // type:ENUM.32BIT
};

struct _0x92FF280A : CTuning
{
	struct _0xF521737E               _0x696DBFFF;                     // type:STRUCT.STRUCTURE
	float                            _0xF899BF3C;                     // type:FLOAT.0
	float                            _0x97B075AC;                     // type:FLOAT.0
	int                              _0xA6A13D40;                     // type:INT.0
};

struct _0x9304938D : _0x74EB5104
{
};

struct _0x9310AFF5 : uiEventDataBase
{
};

struct _0x9338FABC
{
	uchar                            Component;                       // type:UCHAR.0
	array<uint>                      DrawableIds;                     // type:ARRAY.ATARRAY
};

struct _0x93390009 : _0x8DB560C0
{
};

struct _0x933BEEB5 : SaveChallengeGoalParamBase
{
	array<struct SaveChallengeGoalParamBase>     _0xA0F018C6;                     // type:ARRAY.ATARRAY
};

struct _0x9353283C
{
	bool                             _0x720100B4;                     // type:BOOL.0
	bool                             _0xEEDD257C;                     // type:BOOL.0
	float                            _0x98F11959;                     // type:FLOAT.0
	uint                             _0x869E6F41;                     // type:UINT.0
	bool                             _0x8FD59DA7;                     // type:BOOL.0
	bool                             _0x8D25E383;                     // type:BOOL.0
	float                            _0xDC73E8ED;                     // type:FLOAT.0
	float                            _0x51A99187;                     // type:FLOAT.0
	float                            _0xE935D697;                     // type:FLOAT.0
	float                            CapsuleLength;                   // type:FLOAT.0
	float                            _0x02BE51DD;                     // type:FLOAT.0
};

struct _0x936422A6
{
	array<struct _0x05C33D80>        Properties;                      // type:ARRAY.ATARRAY
	bitset<enum _0xCCEDDF91>         _0xC5D72606;                     // type:BITSET.16BIT
	enum _0xCCA77E07                 _0x7C3938A2;                     // type:ENUM.32BIT
};

struct _0x9365FE87 : _0xE4AECA2C
{
	bool                             Data;                            // type:BOOL.0
};

struct _0x936AC1BC
{
	enum _0x1A5EDBD6                 _0xCE20AB2B;                     // type:ENUM.32BIT
	bool                             _0x04622B14;                     // type:BOOL.0
};

struct _0x936F849B
{
	uint                             quaternion;                      // type:UINT.0
	ushort                           boneId;                          // type:USHORT.0
};

struct _0x93708B4E : CAICondition
{
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0x9370E3C3 : CTuning
{
	float                            _0xF468B0D4;                     // type:FLOAT.0
	float                            _0x4BC6D691;                     // type:FLOAT.0
	float                            _0x17D104E9;                     // type:FLOAT.0
	float                            _0x61DE2966;                     // type:FLOAT.0
	float                            _0x92F44CC1;                     // type:FLOAT.0
};

struct _0x937F087C : _0x8A0DC979
{
};

struct _0x9381267C : _0x75A967D5
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x08DBCEDC                 Mod;                             // type:ENUM.32BIT
	uint                             Duration;                        // type:UINT.0
};

struct _0x9384CB0F
{
};

struct _0x93A066BF
{
	string                           ClipSet1H;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet2H;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetDual;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Clip;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x93A0B562 : _0x4CD8E3A4
{
	bool                             _0xE73B09D5;                     // type:BOOL.0
};

struct _0x93A3D773
{
	float                            _0x13A24439;                     // type:FLOAT.0
};

struct _0x93AF6B88
{
	array<float>                     SpineStiffness;                  // type:ARRAY.ATARRAY
	float                            IntervalAtMaximum;               // type:FLOAT.0
	float                            BoneDelay;                       // type:FLOAT.0
};

struct _0x93C15105
{
	enum _0x3A23CC9F                 Measure;                         // type:ENUM.32BIT
	bool                             Abs;                             // type:BOOL.0
	bool                             Limit;                           // type:BOOL.0
	float                            InputA;                          // type:FLOAT.0
	float                            InputB;                          // type:FLOAT.0
	float                            ScoreA;                          // type:FLOAT.0
	float                            ScoreB;                          // type:FLOAT.0
	float                            FailScore;                       // type:FLOAT.0
};

struct _0x93DC364E
{
	float                            maxForce;                        // type:FLOAT.0
	float                            maxFwdAccel;                     // type:FLOAT.0
	float                            maxFwdDecel;                     // type:FLOAT.0
	float                            minFwdForceRatio;                // type:FLOAT.0
	float                            fwdForceSpeedExp;                // type:FLOAT.0
	float                            minBrakeForceRatio;              // type:FLOAT.0
	float                            maxSpeed;                        // type:FLOAT.0
	float                            maxReverseSpeed;                 // type:FLOAT.0
	float                            minLatForceRatio;                // type:FLOAT.0
	float                            minDriftTurnLatForceRatio;       // type:FLOAT.0
	float                            latForceExponent;                // type:FLOAT.0
	float                            maxSlipAngle;                    // type:FLOAT.0
	float                            maxYawForce;                     // type:FLOAT.0
	float                            yawForceSpeedExp;                // type:FLOAT.0
	float                            maxYawSpeedError;                // type:FLOAT.0
	float                            yawSpeedErrorExp;                // type:FLOAT.0
	float                            steerSpeedSlow;                  // type:FLOAT.0
	float                            steerSpeedFast;                  // type:FLOAT.0
	float                            steerSpeedDrift;                 // type:FLOAT.0
	float                            steerCentreSpeed;                // type:FLOAT.0
};

struct _0x93DD8863
{
	bitset<enum _0xD705E99D>            Flags;                           // type:BITSET.8BIT
	float                               MinDistanceFromSameType;         // type:FLOAT.0
	float                               MinDistanceFromAnyType;          // type:FLOAT.0
	float                               _0x6BC3D120;                     // type:FLOAT.0
	float                               _0x6A28599E;                     // type:FLOAT.0
	float                               CompletionRadius;                // type:FLOAT.0
	float                               ChanceToUseSearchLoco;           // type:FLOAT.0
	bool                                SetLocoBeforeFacingPoint;        // type:BOOL.0
	struct _0x04B31BA6                  ValidityConditions;              // type:STRUCT.STRUCTURE
	map<string, struct _0xC112F204>     InteractionStateParams;          // type:MAP.ATBINARYMAP
	array<struct _0xB6DDA2FF>           ConditionalSearchLocoBools;      // type:ARRAY.ATARRAY
};

struct _0x93F492CB
{
	float                            _0x024957B3;                     // type:FLOAT.0
	float                            _0x35A02ADA;                     // type:FLOAT.0
	bool                             _0x645BAE7F;                     // type:BOOL.0
};

struct _0x93F54ED4 : camCinematicContextMetadata
{
};

struct _0x94020DC9 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x9408E296
{
	bool                             UseCapsuleTests;                 // type:BOOL.0
	float                            CapsuleRadius;                   // type:FLOAT.0
};

struct _0x94093AA7 : CTuning
{
	struct _0x28E854D0               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x940B34F5 : _0x3795142C
{
	string                           Filter;                          // type:STRING.ATNONFINALHASHSTRING
	string                           UpperBodyTemplate;               // type:STRING.ATNONFINALHASHSTRING
	uchar                            _0xF512EF16;                     // type:UCHAR.0
	enum _0x5E3F44A7                 _0x8E1FA7ED;                     // type:ENUM.32BIT
	enum _0x0BA1B8E0                 _0x721B7AE2;                     // type:ENUM.32BIT
	bool                             _0x9DA267DA;                     // type:BOOL.0
	bool                             UseLeftHandIk;                   // type:BOOL.0
	bool                             _0xD06E4F86;                     // type:BOOL.0
	float                            _0x59CB9C17;                     // type:FLOAT.0
	float                            _0x80167DCB;                     // type:FLOAT.0
	float                            _0x387AD4F2;                     // type:FLOAT.0
	float                            _0x0A914FB6;                     // type:FLOAT.0
	float                            _0x8583F504;                     // type:FLOAT.0
	float                            _0x738296F0;                     // type:FLOAT.0
	float                            _0x0553CEFF;                     // type:FLOAT.0
	float                            _0x87264FD3;                     // type:FLOAT.0
	float                            _0xA7085D95;                     // type:FLOAT.0
	float                            _0x9CFF18EF;                     // type:FLOAT.0
};

struct _0x94183E18 : _0x0A698250
{
};

struct _0x9423383D : _0xF4456AAB
{
};

struct _0x942A35C1 : _0x499E1BE4
{
};

struct _0x94516D7E : _0x09D8AA6B
{
	bitset<enum _0x9AE3F8CA>         Value;                           // type:BITSET.32BIT
};

struct _0x945C9CD3
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	struct rage__spdAABB             aabb;                            // type:STRUCT.STRUCTURE
	array<uint>                      culledContainerHashes;           // type:ARRAY.ATARRAY
	bool                             bEnabled;                        // type:BOOL.0
};

struct _0x946E33FB : _0x0A510DA9
{
	float                            MinValue;                        // type:FLOAT.0
	float                            MaxValue;                        // type:FLOAT.0
};

struct _0x949EA679
{
};

struct _0x94AAFEE8 : CTuning
{
	struct _0xDBD068C1               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x94ADF38A : _0x443C5282
{
};

struct _0x94B21BC7
{
	enum _0xEFCB3863                 Type;                            // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0x94BD6AEA
{
	string                           Filter;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x88D85A18;                     // type:STRING.ATNONFINALHASHSTRING
	float                            BlendDuration;                   // type:FLOAT.0
	string                           _0xC061B82D;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xEF424EDC;                     // type:FLOAT.0
};

struct _0x94CB7630 : _0x74EB5104
{
};

struct _0x94CC9DE1
{
	string                           BoatName;                        // type:STRING.ATNONFINALHASHSTRING
	float                            KickAheadThrottle;               // type:FLOAT.0
	uint                             KickAheadTime;                   // type:UINT.0
	float                            ShortKickAheadThrottle;          // type:FLOAT.0
	uint                             ShortKickAheadTime;              // type:UINT.0
	float                            KickAsternThrottle;              // type:FLOAT.0
	uint                             KickAsternTime;                  // type:UINT.0
	float                            ShortKickAsternThrottle;         // type:FLOAT.0
	uint                             ShortKickAsternTime;             // type:UINT.0
};

struct _0x94D12D71
{
	array<uint, 4>                   IndicesBeforeRemap;              // type:ARRAY.MEMBER
	array<uint, 4>                   Indices;                         // type:ARRAY.MEMBER
	array<vec3V, 4>                  Vertices;                        // type:ARRAY.MEMBER
};

struct _0x94F33EB5
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct Location>           locations;                       // type:ARRAY.ATARRAY
};

struct _0x9502455E
{
	array<struct _0x48334981, 15>     damageTypes;                     // type:ARRAY.MEMBER
};

struct _0x95035E93 : _0x3ABDED0D
{
	string                           _0x056F1B40;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xA64034D1>        _0x97F2D30E;                     // type:ARRAY.ATARRAY
};

struct _0x950C1F92 : uiGenericEventDataBase
{
	string                           data;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x951442E6 : CMissionCategory
{
};

struct _0x952BF3FA
{
	string                           _0x5E2CBBB8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x384BC1C6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x007161A6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA0CEFE89;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x28192F17;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2FEB8F7F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD1270DD9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6BCA1D04;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9560EC48 : _0x3AB6499E
{
	float                            _0x1CBFEF98;                     // type:FLOAT.0
	float                            _0x3E671AD9;                     // type:FLOAT.0
	uint                             _0xB528161A;                     // type:UINT.0
	float                            _0xB966F808;                     // type:FLOAT.0
	float                            _0xACB38785;                     // type:FLOAT.0
	float                            _0xA918A393;                     // type:FLOAT.0
	vec2                             _0xFE60400E;                     // type:VECTOR2.0
};

struct _0x95B6C1C4 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
};

struct _0x95D9BC70 : _0xF7040A6C
{
};

struct _0x95D9C532
{
	float                            _0xBA3DACA6;                     // type:FLOAT.0
	float                            _0xE6E9CB50;                     // type:FLOAT.0
};

struct _0x95E59A7E : _0xAB76836B
{
	struct _0xA0889763               TargetValue;                     // type:STRUCT.POINTER
	enum _0xF4439461                 Operator;                        // type:ENUM.32BIT
	bool                             Invert;                          // type:BOOL.0
};

struct _0x95E7AC64 : _0x1054F746
{
};

struct _0x95F4B1F8 : CTuning
{
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Passive;                         // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Armoured;                        // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnStairs;                        // type:STRUCT.STRUCTURE
	struct CNmTuningSet              BoundAnkles;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              FatallyInjured;                  // type:STRUCT.STRUCTURE
	struct CNmTuningSet              PlayerDeath;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Seated;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Mounted;                         // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailed;                 // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailedStairs;           // type:STRUCT.STRUCTURE
	struct _0xC47799F2               _0x4BA523D1;                     // type:STRUCT.STRUCTURE
	struct _0xC47799F2               _0x62CF4D26;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0xBE82D29C;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0x0A5FDA7F;                     // type:STRUCT.STRUCTURE
	struct _0x7225432F               _0xEC633B18;                     // type:STRUCT.STRUCTURE
	struct _0x7B684AFD               WeaponSets;                      // type:STRUCT.STRUCTURE
	struct _0x7B684AFD               ActionSets;                      // type:STRUCT.STRUCTURE
	bool                             RandomiseLeadingHand;            // type:BOOL.0
	int                              MinLeanInDirectionTime;          // type:INT.0
	int                              MaxLeanInDirectionTime;          // type:INT.0
	float                            fImpulseReductionScaleMax;       // type:FLOAT.0
	float                            fSpecialAbilityRageKickImpulseModifier; // type:FLOAT.0
	float                            fCounterImpulseScale;            // type:FLOAT.0
};

struct _0x95FE09E6
{
};

struct _0x960C1D5F
{
	float                            _0xB1D65CFF;                     // type:FLOAT.0
	float                            _0x58F522E3;                     // type:FLOAT.0
	float                            _0xBE0FCEE4;                     // type:FLOAT.0
	float                            _0x146FFEBC;                     // type:FLOAT.0
	float                            _0xA1005AAC;                     // type:FLOAT.0
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0xE8F09A00;                     // type:BOOL.0
};

struct _0x961DA0C6
{
	uchar                            numDecalsMin;                    // type:UCHAR.0
	uchar                            numDecalsMax;                    // type:UCHAR.0
	float                            dimensionScaleX;                 // type:FLOAT.0
	float                            dimensionScaleY;                 // type:FLOAT.0
	float                            dimensionScaleZ;                 // type:FLOAT.0
	string                           renderSettingsGroup;             // type:STRING.ATNONFINALHASHSTRING
};

struct _0x96286BB4 : _0x673DCB64
{
};

struct _0x962C1ECE : _0x45531AE9
{
};

struct _0x962E63F6
{
	vec2V                            WorldAABBMin;                    // type:VEC2V.0
	vec2V                            WorldAABBMax;                    // type:VEC2V.0
	enum RegionType                  TintMapType;                     // type:ENUM.32BIT
	string                           RegionTintMapFilename;           // type:STRING.ATSTRING
	string                           channelRed;                      // type:STRING.ATNONFINALHASHSTRING
	string                           channelGreen;                    // type:STRING.ATNONFINALHASHSTRING
	string                           channelBlue;                     // type:STRING.ATNONFINALHASHSTRING
	string                           channelAlpha;                    // type:STRING.ATNONFINALHASHSTRING
	struct _0xD8EB148A               settings;                        // type:STRUCT.STRUCTURE
};

struct _0x963099B0
{
	bitset<enum _0x20AA3B37>         Flags;                           // type:BITSET.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x9633B518
{
	array<struct _0xA86EC008>        DirectSwapEntries;               // type:ARRAY.ATARRAY
	array<struct _0x12D1991C>        SwapEntries;                     // type:ARRAY.ATARRAY
};

struct _0x963D369C
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33C1E27F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF5181D0A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x57058FB8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x963EBEBE : _0xE9505B40
{
	struct _0xEFAEA34C               Low;                             // type:STRUCT.POINTER
	struct _0xEFAEA34C               High;                            // type:STRUCT.POINTER
};

struct _0x96627978
{
	float                            PointOff;                        // type:FLOAT.0
	float                            PointOn;                         // type:FLOAT.0
};

struct _0x96839258 : MeasurementValueConverterBase
{
};

struct _0x968DCBDB : CTuning
{
	bool                             _0xB16F1F79;                     // type:BOOL.0
	bool                             _0xAE4888F5;                     // type:BOOL.0
	float                            _0xA95A7093;                     // type:FLOAT.0
	float                            _0x3980E12D;                     // type:FLOAT.0
	float                            _0x9A50F918;                     // type:FLOAT.0
	float                            _0xE5594169;                     // type:FLOAT.0
	float                            _0x0ADC8FF5;                     // type:FLOAT.0
	float                            _0xD04C6A90;                     // type:FLOAT.0
	float                            _0x034E1A2A;                     // type:FLOAT.0
	float                            _0xA747C1C6;                     // type:FLOAT.0
	float                            _0x4A055FED;                     // type:FLOAT.0
	float                            _0x72F92C8B;                     // type:FLOAT.0
	float                            _0xD0107778;                     // type:FLOAT.0
	float                            _0x44EFBA1D;                     // type:FLOAT.0
	float                            _0xA9E43BB9;                     // type:FLOAT.0
	float                            _0xF8B0DD81;                     // type:FLOAT.0
	float                            _0x36A336A6;                     // type:FLOAT.0
	float                            _0x6291A02F;                     // type:FLOAT.0
	float                            _0x5D78687E;                     // type:FLOAT.0
	float                            _0xA7D2C42D;                     // type:FLOAT.0
	float                            _0x3E9E7BE4;                     // type:FLOAT.0
	float                            _0x0C231171;                     // type:FLOAT.0
	float                            ExitVehicleMaxDistance;          // type:FLOAT.0
	float                            ExitVehicleRouteMinDistance;     // type:FLOAT.0
	float                            TimeBetweenExitVehicleDueToRouteChecks; // type:FLOAT.0
	float                            TimeToCower;                     // type:FLOAT.0
	float                            MinDelayTimeForExitVehicle;      // type:FLOAT.0
	float                            MaxDelayTimeForExitVehicle;      // type:FLOAT.0
	float                            ChanceToDeleteOnExitVehicle;     // type:FLOAT.0
	float                            MinDistFromPlayerToDeleteOnExitVehicle; // type:FLOAT.0
	float                            MinDistFromTargetWhenCoweringToCheckForExit; // type:FLOAT.0
	float                            FleeTargetTooCloseDistance;      // type:FLOAT.0
	float                            _0xEF823AB3;                     // type:FLOAT.0
	float                            _0x1CA57A49;                     // type:FLOAT.0
	float                            _0x35969F0E;                     // type:FLOAT.0
	float                            _0x385ACE3A;                     // type:FLOAT.0
	float                            _0x3632B103;                     // type:FLOAT.0
	float                            _0xBCDC03DA;                     // type:FLOAT.0
	uint                             _0x1A3087CC;                     // type:UINT.0
	float                            _0x1BD7A8E3;                     // type:FLOAT.0
	float                            _0x3A10636D;                     // type:FLOAT.0
	float                            _0xF72F4042;                     // type:FLOAT.0
	float                            _0x176515A0;                     // type:FLOAT.0
	float                            _0x35C3FD0A;                     // type:FLOAT.0
	float                            _0x899244A9;                     // type:FLOAT.0
	float                            _0xA753845B;                     // type:FLOAT.0
	float                            _0xE41BE978;                     // type:FLOAT.0
	float                            _0x7F5A6751;                     // type:FLOAT.0
	float                            _0xE8F2F38F;                     // type:FLOAT.0
	float                            _0x3EC78F3F;                     // type:FLOAT.0
	float                            _0xA4406EEC;                     // type:FLOAT.0
	float                            _0xB07B0D9A;                     // type:FLOAT.0
	float                            _0xD770078B;                     // type:FLOAT.0
	float                            _0xF9E3CA34;                     // type:FLOAT.0
	float                            _0x3DCD21E2;                     // type:FLOAT.0
	float                            _0x5B113661;                     // type:FLOAT.0
	float                            _0x7028E6A3;                     // type:FLOAT.0
	float                            _0xE1DF4282;                     // type:FLOAT.0
	float                            _0xA5C0CD33;                     // type:FLOAT.0
	float                            _0x7BFF7484;                     // type:FLOAT.0
	float                            _0xE91140E8;                     // type:FLOAT.0
	bool                             _0xC503782F;                     // type:BOOL.0
	float                            _0xA7E4074C;                     // type:FLOAT.0
	uint                             _0x085EA06A;                     // type:UINT.0
	float                            _0xDC78E780;                     // type:FLOAT.0
	float                            _0x592BFF81;                     // type:FLOAT.0
	int                              _0xCF53DADE;                     // type:INT.0
	int                              _0x6FBA25CE;                     // type:INT.0
	uint                             _0xAF9E0F58;                     // type:UINT.0
	uint                             _0xE75E224B;                     // type:UINT.0
	uint                             _0x7F48C4F3;                     // type:UINT.0
	float                            _0x19B10C45;                     // type:FLOAT.0
	float                            _0x66FA275A;                     // type:FLOAT.0
	float                            _0x7433A28B;                     // type:FLOAT.0
};

struct _0x968FCA98 : CTuning
{
	float                            _0xF852F2FC;                     // type:FLOAT.0
};

struct _0x9691F72D : _0xE55F63FA
{
};

struct _0x9693704B : _0xF8449058
{
	array<struct _0x051AC946>        Actions;                         // type:ARRAY.ATARRAY
	array<string>                    FallbackCutActions;              // type:ARRAY.ATARRAY
};

struct _0x9699DE47 : _0xB8A8B4A7
{
};

struct _0x969B3D90
{
	float                            _0x52EEED84;                     // type:FLOAT.0
	float                            _0x31AB9BE2;                     // type:FLOAT.0
	float                            _0xCC802A8E;                     // type:FLOAT.0
	float                            _0x0DE486AF;                     // type:FLOAT.0
	float                            _0x02E85FBE;                     // type:FLOAT.0
	float                            _0x4ACDCC63;                     // type:FLOAT.0
	float                            MinRelativeHeading;              // type:FLOAT.0
	float                            MaxRelativeHeading;              // type:FLOAT.0
	float                            _0x7F50373A;                     // type:FLOAT.0
	float                            _0xDB26763D;                     // type:FLOAT.0
	float                            _0x2C4FB274;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0x969D1B29
{
	array<struct _0x4BFD8B90, 6>     BreakableLockObjects;            // type:ARRAY.ATFIXEDARRAY
	enum _0xBEEA6142                 VehicleDoorBone;                 // type:ENUM.32BIT
	enum _0xBEEA6142                 AdditionalDoorBone;              // type:ENUM.32BIT
	vec3V                            CustomShootLockGoToOffsetFromVehicle; // type:VEC3V.0
	vec3V                            FallbackTargettingBoundingBoxMin; // type:VEC3V.0
	vec3V                            FallbackTargettingBoundingBoxMax; // type:VEC3V.0
	array<struct _0x7ACCDCE0, 4>     RequiredWheelCombinations;       // type:ARRAY.ATFIXEDARRAY
	bitset<enum _0x34F069D5>         Flags;                           // type:BITSET.32BIT
	float                            ConsiderOpenTolerance;           // type:FLOAT.0
	uint                             BreakDoorTimeout;                // type:UINT.0
};

struct _0x969DE41A : CBaseSaveObject
{
	uint                             codeVersion;                     // type:UINT.0
	array<struct _0x226E795D>        _0x7F3D589D;                     // type:ARRAY.ATARRAY
};

struct _0x969F6D91
{
	string                           drawable;                        // type:STRING.ATNONFINALHASHSTRING
	string                           albedo;                          // type:STRING.ATNONFINALHASHSTRING
	string                           normal;                          // type:STRING.ATNONFINALHASHSTRING
	string                           material;                        // type:STRING.ATNONFINALHASHSTRING
	uchar                            numToSpawnMin;                   // type:UCHAR.0
	uchar                            numToSpawnMax;                   // type:UCHAR.0
};

struct _0x96A66104 : _0x2F7DA38D
{
	struct _0xED16C5B0               object;                          // type:STRUCT.STRUCTURE
};

struct _0x96B34ADF
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            ValueForMin;                     // type:FLOAT.0
	float                            ValueForMax;                     // type:FLOAT.0
};

struct _0x96FDE05F
{
	string                           SyncType;                        // type:STRING.ATNONFINALHASHSTRING
	string                           Filter;                          // type:STRING.ATNONFINALHASHSTRING
	float                            BlendDuration;                   // type:FLOAT.0
	float                            FastBlendDuration;               // type:FLOAT.0
};

struct _0x970644E1 : _0x857163E6
{
	array<struct _0x857163E6>        Scorers;                         // type:ARRAY.ATARRAY
};

struct _0x970DD337 : _0x8A0DC979
{
	string                           ContentType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x97181982
{
	int                              _0x5A267B0E;                     // type:INT.0
	float                            _0xFA2F80B0;                     // type:FLOAT.0
	float                            _0x333EA5AD;                     // type:FLOAT.0
	int                              _0xB80B958E;                     // type:INT.0
	int                              _0xF96750A4;                     // type:INT.0
	int                              _0x72028B00;                     // type:INT.0
	array<int, 4>                    _0x30E78D5F;                     // type:ARRAY.MEMBER
};

struct _0x9719549E
{
	float                            _0x58EC67C0;                     // type:FLOAT.0
	float                            _0xC0D3F1D0;                     // type:FLOAT.0
	float                            _0x67FB2A49;                     // type:FLOAT.0
	float                            PlayerMoveAccel;                 // type:FLOAT.0
	float                            PlayerMoveDecel;                 // type:FLOAT.0
	float                            PedMoveAccel;                    // type:FLOAT.0
	float                            PedMoveDecel;                    // type:FLOAT.0
	float                            FromOnFootAccelerationMod;       // type:FLOAT.0
	float                            WalkAngAccel;                    // type:FLOAT.0
	float                            RunAngAccel;                     // type:FLOAT.0
	float                            _0x1E15D4B4;                     // type:FLOAT.0
	float                            _0x540858BD;                     // type:FLOAT.0
	float                            Turn180ActivationAngle;          // type:FLOAT.0
	float                            Turn180ConsistentAngleTolerance; // type:FLOAT.0
	float                            _0xCD756AA3;                     // type:FLOAT.0
	float                            PlayerIdleIntroAnimRate;         // type:FLOAT.0
	float                            MovingWalkAnimRateMin;           // type:FLOAT.0
	float                            MovingWalkAnimRateMax;           // type:FLOAT.0
	float                            MovingWalkAnimRateAcceleration;  // type:FLOAT.0
	float                            _0x78C1601F;                     // type:FLOAT.0
	float                            _0xB2880480;                     // type:FLOAT.0
	float                            _0xCC5B4B42;                     // type:FLOAT.0
	float                            _0xCAF91FB6;                     // type:FLOAT.0
	float                            _0xA4C07FFD;                     // type:FLOAT.0
	float                            _0x2F43243A;                     // type:FLOAT.0
	float                            _0xB6E5AAF2;                     // type:FLOAT.0
	float                            _0xA445B5EF;                     // type:FLOAT.0
	float                            _0x62CD2C76;                     // type:FLOAT.0
	float                            _0x44FBA6D2;                     // type:FLOAT.0
	float                            _0x243B4185;                     // type:FLOAT.0
	float                            _0x7B169212;                     // type:FLOAT.0
	float                            _0xD52FE42A;                     // type:FLOAT.0
	float                            _0x3637DAAC;                     // type:FLOAT.0
	float                            _0xB58364FB;                     // type:FLOAT.0
	float                            _0xAB967766;                     // type:FLOAT.0
	float                            _0x3C60C81E;                     // type:FLOAT.0
	float                            _0x1BA5AF00;                     // type:FLOAT.0
	float                            _0x0C4CA9BA;                     // type:FLOAT.0
	float                            _0x755C7392;                     // type:FLOAT.0
	float                            _0xEA14616D;                     // type:FLOAT.0
	float                            MovingInWaterWalkAnimRateMin;    // type:FLOAT.0
	float                            MovingInWaterWalkAnimRateMax;    // type:FLOAT.0
	float                            MovingInDeepWaterWalkAnimRateMax; // type:FLOAT.0
	float                            MovingInWaterRunAnimRateMult;    // type:FLOAT.0
	float                            _0x872C5207;                     // type:FLOAT.0
	float                            _0xDAA86FB2;                     // type:FLOAT.0
	float                            _0xC2FF7F0A;                     // type:FLOAT.0
	float                            _0xC58BFACB;                     // type:FLOAT.0
	float                            _0xA3E9C771;                     // type:FLOAT.0
	float                            _0xD32D9B00;                     // type:FLOAT.0
	float                            _0x26FDF833;                     // type:FLOAT.0
	float                            _0x4D6D06E8;                     // type:FLOAT.0
	struct _0x6C173FD1               Velocity;                        // type:STRUCT.STRUCTURE
	float                            DampenRootTargetWeight;          // type:FLOAT.0
	float                            DampenRootTargetHeight;          // type:FLOAT.0
};

struct _0x971E8898
{
	string                           nameId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           changeSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                           changeSetGroupToExecuteWith;     // type:STRING.ATNONFINALHASHSTRING
	char                             version;                         // type:CHAR.0
};

struct _0x97438126
{
	uint                             Key;                             // type:UINT.0
	array<uint>                      AIGroupMemberships;              // type:ARRAY.ATARRAY
	array<struct _0x1A80B78B>        _0x0661955F;                     // type:ARRAY.ATARRAY
};

struct _0x975518A0 : _0x857163E6
{
	float                            _0x1786C336;                     // type:FLOAT.0
	float                            _0xDA9C310B;                     // type:FLOAT.0
};

struct _0x9776DF94 : _0x067F1305
{
	struct uiScreenInputCodeEventOperation       CodeEventOp;                     // type:STRUCT.SIMPLE_POINTER
	struct uiScreenInputScriptEventOperation     ScriptEventOp;                   // type:STRUCT.SIMPLE_POINTER
};

struct _0x977AE837 : CTuning
{
	struct _0x9905D892               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x977D9A7F
{
	enum eExplosionTag               explosionTag;                    // type:ENUM.32BIT
	float                            damageAtCentre;                  // type:FLOAT.0
	float                            damageAtEdge;                    // type:FLOAT.0
	float                            _0x177FA84C;                     // type:FLOAT.0
	float                            _0xD91D4AAE;                     // type:FLOAT.0
	float                            _0xFDD7C56F;                     // type:FLOAT.0
	float                            _0xF6B2F87B;                     // type:FLOAT.0
	float                            endRadius;                       // type:FLOAT.0
	float                            initSpeed;                       // type:FLOAT.0
	float                            decayFactor;                     // type:FLOAT.0
	float                            forceFactor;                     // type:FLOAT.0
	float                            fRagdollForceModifier;           // type:FLOAT.0
	float                            fSelfForceModifier;              // type:FLOAT.0
	float                            directedWidth;                   // type:FLOAT.0
	float                            directedLifeTime;                // type:FLOAT.0
	float                            camShake;                        // type:FLOAT.0
	float                            camShakeRollOffScaling;          // type:FLOAT.0
	float                            shockingEventVisualRangeOverride; // type:FLOAT.0
	float                            shockingEventAudioRangeOverride; // type:FLOAT.0
	float                            fragDamage;                      // type:FLOAT.0
	bool                             minorExplosion;                  // type:BOOL.0
	bool                             bAppliesContinuousDamage;        // type:BOOL.0
	enum _0x1030AEB6                 _0x5EEE0358;                     // type:ENUM.32BIT
	bool                             bPostProcessCollisionsWithNoForce; // type:BOOL.0
	bool                             bDamageVehicles;                 // type:BOOL.0
	bool                             bDamageObjects;                  // type:BOOL.0
	bool                             _0x8103E1F0;                     // type:BOOL.0
	bool                             bOnlyAffectsLivePeds;            // type:BOOL.0
	bool                             bIgnoreExplodingEntity;          // type:BOOL.0
	bool                             bNoOcclusion;                    // type:BOOL.0
	bool                             _0xB8D12498;                     // type:BOOL.0
	bool                             explodeAttachEntityWhenFinished; // type:BOOL.0
	float                            _0x7B15924E;                     // type:FLOAT.0
	bool                             bSuppressCrime;                  // type:BOOL.0
	bool                             bPreventWaterExplosionVFX;       // type:BOOL.0
	bool                             _0x93715CE6;                     // type:BOOL.0
	string                           camShakeName;                    // type:STRING.ATNONFINALHASHSTRING
	string                           vfxTagHashName;                  // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA670A3FC;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9791D1C4 : _0x3795142C
{
};

struct _0x97A4C4BB : CTuning
{
	float                            _0x7B786A0D;                     // type:FLOAT.0
	float                            _0x170298BF;                     // type:FLOAT.0
};

struct _0x97B0C6D3 : CCompendiumItemHorse
{
};

struct _0x97C54B17 : CAICondition
{
};

struct _0x97C6EC11
{
	enum _0x705A8B9B                 Motivation;                      // type:ENUM.32BIT
	float                            Value;                           // type:FLOAT.0
	float                            DecayRate;                       // type:FLOAT.0
};

struct _0x97D8B41D : _0x22B199F9
{
};

struct _0x97DB41E6 : _0xCDF97B9D
{
};

struct _0x980F6D2A : _0xF70F21F5
{
	struct _0xE19E0658               _0x2C935844;                     // type:STRUCT.STRUCTURE
	struct _0xBF6AB023               _0xEADD2534;                     // type:STRUCT.STRUCTURE
	bitset<enum _0x45638A53>         flags;                           // type:BITSET.32BIT
	float                            _0x71AE3998;                     // type:FLOAT.0
	float                            _0xBA37AEE2;                     // type:FLOAT.0
	struct _0x7438E446               _0xDA3E6D0E;                     // type:STRUCT.STRUCTURE
	struct _0x3B0D96EC               _0xBE309D78;                     // type:STRUCT.POINTER
	struct _0x3B0D96EC               _0x78D0516F;                     // type:STRUCT.POINTER
	string                           _0x2489B944;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA43A3EC8;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xBC847232               _0x4492111E;                     // type:STRUCT.STRUCTURE
};

struct _0x980F7231
{
};

struct _0x983C5616
{
	uint                             _0xEADE0014;                     // type:UINT.0
	uint                             _0xAAE5CF42;                     // type:UINT.0
	uint                             _0xAC3B3EB5;                     // type:UINT.0
	uint                             _0x2EA69CA9;                     // type:UINT.0
	uint                             _0x87606708;                     // type:UINT.0
	uint                             _0x5667F806;                     // type:UINT.0
	uint                             _0xA0C8C81A;                     // type:UINT.0
	uint                             _0xA5D4A564;                     // type:UINT.0
	string                           _0xC3F28334;                     // type:STRING.ATSTRING
	string                           _0xEE3355E8;                     // type:STRING.ATSTRING
	string                           _0x644C506D;                     // type:STRING.ATSTRING
	string                           _0x5D0A470A;                     // type:STRING.ATSTRING
	string                           _0x24F40F0B;                     // type:STRING.ATSTRING
	array<struct _0xA79E3D31>        _0x3D3E0F42;                     // type:ARRAY.ATARRAY
};

struct _0x983F0276
{
	map<string, struct _0xF1DA7B1F>     Events;                          // type:MAP.ATBINARYMAP
	array<struct _0xA63CA67E>           _0xC6D2C707;                     // type:ARRAY.ATARRAY
};

struct _0x984EAD3E
{
	vec3V                            offset;                          // type:VEC3V.0
	quatV                            rot;                             // type:QUATV.0
	bitset<enum eCollisionFlags>     typeFlags;                       // type:BITSET.64BIT
	bitset<enum eCollisionFlags>     includeFlags;                    // type:BITSET.64BIT
	string                           collisionModel;                  // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                attachBone;                      // type:ENUM.32BIT
	enum _0x90FA2358                 type;                            // type:ENUM.32BIT
	bool                             enableOnPed;                     // type:BOOL.0
	bool                             _0x20564C8D;                     // type:BOOL.0
	array<vec3V, 4>                  _0x120F33A7;                     // type:ARRAY.MEMBER
	array<vec4V, 4>                  _0x803678E8;                     // type:ARRAY.MEMBER
};

struct _0x985DEF3B : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0x9865E151
{
	float                            BurstIntensityMin;               // type:FLOAT.0
	float                            BurstIntensityMax;               // type:FLOAT.0
	float                            LightSourceExponentFalloff;      // type:FLOAT.0
	float                            _0x0BD8A8D6;                     // type:FLOAT.0
	struct _0x83A6D56C               CloudBurstCommonSettings;        // type:STRUCT.STRUCTURE
};

struct _0x986A0759
{
	string                           _0xDBD57085;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x94F2E5F8;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x0592E85D                 _0xBBCC8547;                     // type:ENUM.32BIT
	enum _0x38BCED34                 targetType;                      // type:ENUM.32BIT
	enum _0xF26C492D                 _0x1BEEECC9;                     // type:ENUM.32BIT
	string                           _0x8A1BBC51;                     // type:STRING.ATHASHVALUE16U
};

struct _0x987E2B51 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            _0xCAEEAB3E;                     // type:FLOAT.0
};

struct _0x988C66FF
{
	bool                             Enabled;                         // type:BOOL.0
};

struct _0x9892E5F5
{
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
	string                           Title;                           // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA5425FDA;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             IsInfiniteStreak;                // type:BOOL.0
	struct _0xB4A4AC8A               IconTextureData;                 // type:STRUCT.STRUCTURE
};

struct _0x989572EA
{
	float                            MinDistanceFromFootToRoot;       // type:FLOAT.0
};

struct _0x98B6594B : _0x2F7DA38D
{
	struct _0xED16C5B0               _0x84B954E7;                     // type:STRUCT.STRUCTURE
	string                           _0xC7CF1919;                     // type:STRING.ATNONFINALHASHSTRING
	string                           SoundName;                       // type:STRING.ATNONFINALHASHSTRING
	float                            _0x9055E356;                     // type:FLOAT.0
	bool                             _0x8F23A822;                     // type:BOOL.0
	bool                             _0x4C4A3860;                     // type:BOOL.0
	bool                             _0xDDB12FE3;                     // type:BOOL.0
	bool                             _0xE5F31F59;                     // type:BOOL.0
	array<struct _0x8F545125>        0x1CA8;                          // type:ARRAY.ATARRAY
};

struct _0x98B9A916 : _0x1054F746
{
};

struct _0x98BE7E21
{
	array<struct _0x176E9B89>        _0x61C4871D;                     // type:ARRAY.ATARRAY
};

struct _0x98C9E890 : _0x9BC9BC99
{
};

struct _0x98CA566D
{
	string                           displayName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           typeName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           toolTip;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0x77FE0CCD;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xA5B09C08;                     // type:BOOL.0
};

struct _0x98CF5A90
{
	struct _0xECC05A2C               Pistol;                          // type:STRUCT.STRUCTURE
	struct _0xECC05A2C               Rifle;                           // type:STRUCT.STRUCTURE
	struct _0xECC05A2C               MicroSMG;                        // type:STRUCT.STRUCTURE
};

struct _0x98D69541
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x581B0854               Interesting;                     // type:STRUCT.STRUCTURE
	struct _0x581B0854               Dangerous;                       // type:STRUCT.STRUCTURE
	struct _0x581B0854               Frightening;                     // type:STRUCT.STRUCTURE
};

struct _0x990230CF : CTuning
{
	struct _0x61784794               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x9905D892
{
	float                            _0xE4786B2B;                     // type:FLOAT.0
	float                            _0x5ED441F1;                     // type:FLOAT.0
	float                            _0xA0BFCB41;                     // type:FLOAT.0
	float                            _0xF3F98924;                     // type:FLOAT.0
	float                            _0xF4855F55;                     // type:FLOAT.0
	float                            _0x14F9604B;                     // type:FLOAT.0
	float                            _0xD0C75BFE;                     // type:FLOAT.0
	vec3V                            JackOffsetPosition;              // type:VEC3V.0
	vec3V                            _0xA021E957;                     // type:VEC3V.0
	float                            _0x19CAA468;                     // type:FLOAT.0
	bool                             _0x34202212;                     // type:BOOL.0
	bool                             _0xC3EFBE8F;                     // type:BOOL.0
	bool                             _0x4CC84730;                     // type:BOOL.0
	struct _0xCF66FD63               _0x03554280;                     // type:STRUCT.STRUCTURE
	struct _0xCF66FD63               _0x7BE31801;                     // type:STRUCT.STRUCTURE
	struct _0xCF66FD63               _0x00D28619;                     // type:STRUCT.STRUCTURE
	struct _0xCF66FD63               _0xDDCDA331;                     // type:STRUCT.STRUCTURE
	struct _0xCF66FD63               _0xCD948106;                     // type:STRUCT.STRUCTURE
	struct _0xCF66FD63               _0x2D6F3B1F;                     // type:STRUCT.STRUCTURE
	struct _0xBB913196               _0xFFFCD894;                     // type:STRUCT.STRUCTURE
};

struct _0x990F9373
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0x99101B9B : _0x49EB915C
{
	size_t                           Min;                             // type:SIZET.0
	size_t                           Max;                             // type:SIZET.0
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
	bool                             _0x60323A5F;                     // type:BOOL.0
	bool                             _0x11DCAB40;                     // type:BOOL.0
};

struct _0x9913824C
{
	struct _0x6FF78ABB               _0xDCDB4460;                     // type:STRUCT.STRUCTURE
	struct _0xE409C28E               _0x0410B0D9;                     // type:STRUCT.STRUCTURE
	struct _0xE409C28E               O;                               // type:STRUCT.STRUCTURE
};

struct _0x9914C6A1 : _0xF51D5F09
{
	struct _0xA3A6919D               _0xDFCF1423;                     // type:STRUCT.STRUCTURE
	string                           DescriptionText;                 // type:STRING.ATNONFINALHASHSTRING
	string                           SatchelItem;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Texture;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Txd;                             // type:STRING.ATNONFINALHASHSTRING
	string                           MenuLink;                        // type:STRING.ATNONFINALHASHSTRING
	string                           ToastAppID;                      // type:STRING.ATNSHASHSTRING
	string                           ToastEntryPoint;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ToastTextureName;                // type:STRING.ATNONFINALHASHSTRING
	string                           ToastTxd;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9920C241 : _0x0A510DA9
{
	array<struct _0x0A510DA9>        Conditions;                      // type:ARRAY.ATARRAY
};

struct _0x994A44C6
{
	string                           IntroClipId;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           ClipIdNoLoot;                    // type:STRING.ATNONFINALHASHSTRING
	string                           FacialClipId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           PropId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           SatchelItemInfo;                 // type:STRING.ATNONFINALHASHSTRING
	string                           CarryConfigAtEnd;                // type:STRING.ATNONFINALHASHSTRING
	string                           AttachParentBoneName;            // type:STRING.CONST_STRING
	string                           DebugOnlyModifiableAttachParentBoneName; // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                ExchangeAttachParentBone;        // type:ENUM.32BIT
	string                           NamedAttachParent;               // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponName;                      // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x704E2130>         Flags;                           // type:BITSET.32BIT
};

struct _0x994BDB66
{
	map<string, struct _0xC81A6215>     MotionTypes;                     // type:MAP.ATBINARYMAP
};

struct _0x99517C91
{
	vec4                             vTime;                           // type:VECTOR4.0
	vec4                             vValue;                          // type:VECTOR4.0
};

struct _0x9982B35E : _0xBB84BF68
{
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
};

struct _0x99885DD2
{
	array<uchar, 4>                  indices;                         // type:ARRAY.MEMBER
	array<bool, 25>                  liveries;                        // type:ARRAY.MEMBER
};

struct _0x998F5802 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	uint                             _0x825F6018;                     // type:UINT.0
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0x9997A51C
{
	bool                             Enabled;                         // type:BOOL.0
	enum _0x9B2DCF16                 _0x9B2DCF16;                     // type:ENUM.32BIT
	vec2V                            Center;                          // type:VEC2V.0
	float                            InnerRadius;                     // type:FLOAT.0
	float                            _0xC3152138;                     // type:FLOAT.0
	enum _0x4EEED54E                 _0x07B1BFAD;                     // type:ENUM.32BIT
	float                            Rotation;                        // type:FLOAT.0
	vec2V                            _0xCB88AEA7;                     // type:VEC2V.0
	float                            Opacity;                         // type:FLOAT.0
	uint                             TintColor;                       // type:UINT.1
	int                              _0xA69B6DDD;                     // type:INT.0
	bool                             _0xD2A869CC;                     // type:BOOL.0
	bool                             _0xF0061E66;                     // type:BOOL.0
};

struct _0x99A5B4C8 : _0xC509663E
{
	enum _0xA2309A7B                 Type;                            // type:ENUM.32BIT
	bool                             _0xF6EFBA60;                     // type:BOOL.0
};

struct _0x99AB9848
{
	vec3                             position;                        // type:VECTOR3.0
	float                            size;                            // type:FLOAT.0
	int                              component;                       // type:INT.0
};

struct _0x99ABC726
{
	float                            fPronePedKickImpulse;            // type:FLOAT.0
	float                            _0x3431F499;                     // type:FLOAT.0
};

struct _0x99B17305 : _0xAC081F94
{
};

struct _0x99C4A91E
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           weather;                         // type:STRING.ATNONFINALHASHSTRING
	int                              time;                            // type:INT.0
};

struct _0x99D1D558
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0x99FBD500 : CBaseSaveObject
{
	uint                             _0x70F21403;                     // type:UINT.0
	uint                             _0x2CAF1315;                     // type:UINT.0
	int                              _0xB5BA93A9;                     // type:INT.0
	uint                             dataVersion;                     // type:UINT.0
	map<string, uint>                _0x51F64286;                     // type:MAP.ATBINARYMAP
};

struct _0x9A040B1B : _0x76F13DAD
{
};

struct _0x9A0418C5
{
	float                            fTestRadius;                     // type:FLOAT.0
	float                            fMinHeight;                      // type:FLOAT.0
	float                            fMinClearanceDistance;           // type:FLOAT.0
	float                            fMaxClearanceDistance;           // type:FLOAT.0
	float                            fMaxHandholdThickness;           // type:FLOAT.0
	float                            fDistanceUnderMaxThickness;      // type:FLOAT.0
};

struct _0x9A1991B4 : CPickupRewardWeapon
{
	float                            _0x9632E957;                     // type:FLOAT.0
	float                            _0x9318DA27;                     // type:FLOAT.0
};

struct _0x9A228B01 : UIBehavior
{
	enum _0x3F1B7D74                 _0x4B862338;                     // type:ENUM.32BIT
};

struct _0x9A45B2F1
{
	float                            _0x1391EE90;                     // type:FLOAT.0
	float                            _0xCBF8457D;                     // type:FLOAT.0
	float                            _0x1B504C21;                     // type:FLOAT.0
	float                            _0xFACE2B51;                     // type:FLOAT.0
	float                            _0xEED4D378;                     // type:FLOAT.0
	float                            _0x33B89E9C;                     // type:FLOAT.0
	float                            _0x9C2299B7;                     // type:FLOAT.0
	float                            _0x862FAEB2;                     // type:FLOAT.0
	float                            _0xCBFD5F34;                     // type:FLOAT.0
	float                            _0xB32423DB;                     // type:FLOAT.0
	float                            _0xCFD0D5FC;                     // type:FLOAT.0
	float                            _0xD4455EAC;                     // type:FLOAT.0
	bool                             _0x6D1397C2;                     // type:BOOL.0
	float                            _0x62268507;                     // type:FLOAT.0
	bool                             _0x4C56A8A3;                     // type:BOOL.0
	float                            _0x1E05FFE0;                     // type:FLOAT.0
	float                            _0xB035BC65;                     // type:FLOAT.0
	int                              _0x6879861B;                     // type:INT.0
	float                            _0x02019C5C;                     // type:FLOAT.0
	bool                             _0xDD504022;                     // type:BOOL.0
	float                            _0x98736A2B;                     // type:FLOAT.0
	float                            _0xEEF1F816;                     // type:FLOAT.0
	float                            _0xF1825AEB;                     // type:FLOAT.0
	float                            _0x0CB0F4F9;                     // type:FLOAT.0
	int                              _0x2791CD98;                     // type:INT.0
	int                              _0xA5E63113;                     // type:INT.0
	float                            _0x99E0F972;                     // type:FLOAT.0
	float                            _0x29FD64FF;                     // type:FLOAT.0
	float                            _0xEE2D1906;                     // type:FLOAT.0
	float                            _0x92DAA03C;                     // type:FLOAT.0
	float                            _0xB6E085CA;                     // type:FLOAT.0
	float                            _0x285E2C07;                     // type:FLOAT.0
};

struct _0x9A483DB4 : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
};

struct _0x9A484670 : CTuning
{
	struct _0x49C02F3A               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0x9A5D323D
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           PlayerVolume;                    // type:STRING.ATNONFINALHASHSTRING
	string                           SpawnVolume;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             Disabled;                        // type:BOOL.0
};

struct _0x9A64B2CF
{
	float                            _0xE19CD641;                     // type:FLOAT.0
	float                            _0x848C01B1;                     // type:FLOAT.0
	float                            _0xC2AD511C;                     // type:FLOAT.0
	float                            _0xEEBCB140;                     // type:FLOAT.0
	float                            _0x598BDD9C;                     // type:FLOAT.0
	float                            _0x83A69C09;                     // type:FLOAT.0
	float                            _0x164F4E58;                     // type:FLOAT.0
	float                            _0xA7D5063F;                     // type:FLOAT.0
	float                            _0x3DF58A2E;                     // type:FLOAT.0
	float                            _0xF1E2DAC5;                     // type:FLOAT.0
	float                            _0xC341F14A;                     // type:FLOAT.0
	float                            _0xE876A976;                     // type:FLOAT.0
	float                            _0xCBEB276D;                     // type:FLOAT.0
	float                            _0x3B9E9D63;                     // type:FLOAT.0
	float                            _0xC130DFB3;                     // type:FLOAT.0
	float                            _0xB74CCD21;                     // type:FLOAT.0
	float                            _0x300590DF;                     // type:FLOAT.0
	float                            _0xB515F815;                     // type:FLOAT.0
	float                            _0x509F8EBF;                     // type:FLOAT.0
	float                            _0xB910CEE8;                     // type:FLOAT.0
	float                            _0x36CC7EDE;                     // type:FLOAT.0
	float                            _0xB9664CCA;                     // type:FLOAT.0
	float                            _0x57AC790E;                     // type:FLOAT.0
	float                            _0xA6535896;                     // type:FLOAT.0
	float                            _0xAA1FD933;                     // type:FLOAT.0
	float                            _0x25568322;                     // type:FLOAT.0
	float                            _0xB38382D7;                     // type:FLOAT.0
};

struct _0x9A694844
{
	bitset<enum _0xA76BAD4D>         Flags;                           // type:BITSET.32BIT
};

struct _0x9A6F69A6 : _0x0A510DA9
{
};

struct _0x9A8B6E2F : _0x11AD3051
{
	struct _0xED16C5B0               entity;                          // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                boneId;                          // type:ENUM.32BIT
	vec3V                            offset;                          // type:VEC3V.0
};

struct _0x9A93DF92 : _0xAB76836B
{
	bool                             ApplyDefault;                    // type:BOOL.0
	string                           Default;                         // type:STRING.ATNONFINALHASHSTRING
	map<int, string>                 Dictionary;                      // type:MAP.ATMAP
};

struct _0x9AA21833
{
	array<struct _0x02244FEA>        challenges;                      // type:ARRAY.ATARRAY
	struct _0xD5FF0435               _0xA194AA94;                     // type:STRUCT.STRUCTURE
	uint                             _0xE9C148BA;                     // type:UINT.0
	uint                             fileVersion;                     // type:UINT.0
	bool                             _0x651419F5;                     // type:BOOL.0
	bool                             _0xA4E89823;                     // type:BOOL.0
};

struct _0x9AA3D143
{
	float                            _0x2047A63D;                     // type:FLOAT.0
	float                            _0x0B951F43;                     // type:FLOAT.0
	float                            _0x2614DCFA;                     // type:FLOAT.0
	float                            LengthMin;                       // type:FLOAT.0
	float                            LengthMax;                       // type:FLOAT.0
};

struct _0x9AA53AC5 : CTuning
{
	float                            _0xD58A813C;                     // type:FLOAT.0
	float                            _0x63640003;                     // type:FLOAT.0
};

struct _0x9ABC08AD : _0xC56B37C5
{
	string                           QuitPromptText;                  // type:STRING.ATNONFINALHASHSTRING
	string                           QuitPromptGroupText;             // type:STRING.ATNONFINALHASHSTRING
	enum rage__InputType             QuitInputType;                   // type:ENUM.32BIT
	float                            QuitPromptWeight;                // type:FLOAT.0
	float                            QuitPromptDelay;                 // type:FLOAT.0
	float                            TimeoutSeconds;                  // type:FLOAT.0
	float                            QuitPromptHoldDuration;          // type:FLOAT.0
	string                           QuitHoldTimeType;                // type:STRING.ATNONFINALHASHSTRING
	bool                             QuitPromptOnlyWhenFullyActive;   // type:BOOL.0
	bool                             VisibleQuitPrompt;               // type:BOOL.0
	bool                             RegisterQuitPromptToFrontend;    // type:BOOL.0
	bool                             _0x2623765B;                     // type:BOOL.0
	bool                             CreateOnlyInIlo;                 // type:BOOL.0
	bool                             UseItemInteractionPromptGroupForQuit; // type:BOOL.0
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           InvalidText;                     // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              InvalidCondition;                // type:STRUCT.POINTER
};

struct _0x9AC43A5E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           CombatInfo;                      // type:STRING.ATNONFINALHASHSTRING
	string                           MountedChasingProfileOverride;   // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xAB0F1B79>        Loadouts;                        // type:ARRAY.ATARRAY
};

struct _0x9AC46B35
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9ACCFE12 : _0x8A0DC979
{
	bool                             Enable;                          // type:BOOL.0
	bool                             _0xD1A27966;                     // type:BOOL.0
	enum _0xDED930E4                 Context;                         // type:ENUM.32BIT
};

struct _0x9AD9DC27
{
	string                           objectName;                      // type:STRING.ATNONFINALHASHSTRING
	float                            objectStrength;                  // type:FLOAT.0
	array<struct _0xA4FFA5A2>        DeformableBones;                 // type:ARRAY.ATARRAY
};

struct _0x9AE64F9E
{
	string                           _0x476C74E7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Filter;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9AE8A3E3
{
	bool                             AlignMTHToDoorCentre;            // type:BOOL.0
	bool                             MTHDoorForwardsTowardsPed;       // type:BOOL.0
	bool                             ForceUseRightHandleAnims;        // type:BOOL.0
	bool                             ForceUseRightHandAnims;          // type:BOOL.0
	bool                             OpenDoorKnobGeneric;             // type:BOOL.0
	bool                             OpenDoorKnobDouble;              // type:BOOL.0
	bool                             OpenDoorDouble;                  // type:BOOL.0
	bool                             OpenDoorShoulder;                // type:BOOL.0
	bool                             OpenDoorCrouch;                  // type:BOOL.0
	bool                             OpenDoorStealth;                 // type:BOOL.0
	bool                             BargeDoorGeneric;                // type:BOOL.0
	bool                             BargeDoorCrouch;                 // type:BOOL.0
	bool                             DoorKick;                        // type:BOOL.0
	bool                             DoorKnock;                       // type:BOOL.0
	enum _0x815B5E32                 PedConstraintType;               // type:ENUM.32BIT
	struct _0x500C0D4F               HandleRight;                     // type:STRUCT.STRUCTURE
	struct _0x500C0D4F               HandleLeft;                      // type:STRUCT.STRUCTURE
};

struct _0x9B03B63C : _0xB74C7BC6
{
	string                           lockedSlotText;                  // type:STRING.ATNONFINALHASHSTRING
	string                           rankItemId;                      // type:STRING.ATNONFINALHASHSTRING
	struct _0x48EA7C70               LogInfo;                         // type:STRUCT.STRUCTURE
};

struct _0x9B07AB77
{
	string                           Key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           NonCombatClipSetHash;            // type:STRING.ATNONFINALHASHSTRING
	string                           HitReactKnockbackClipSetHash;    // type:STRING.ATNONFINALHASHSTRING
	string                           HitReactStationaryClipSetHash;   // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipSetHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           CombatClipSetHash;               // type:STRING.ATNONFINALHASHSTRING
	string                           CombatVaritionClipSetHash;       // type:STRING.ATNONFINALHASHSTRING
	string                           CombatBlockClipSetHash;          // type:STRING.ATNONFINALHASHSTRING
	enum _0xE02F3066                 FacialMood;                      // type:ENUM.32BIT
	enum _0xE02F3066                 InjuredFacialMood;               // type:ENUM.32BIT
	bool                             AlwaysApplyGripFilter;           // type:BOOL.0
	bool                             DisableActionApproach;           // type:BOOL.0
};

struct _0x9B18BB38
{
	float                            _0x1DC0ADB9;                     // type:FLOAT.0
	float                            _0x83F13DAA;                     // type:FLOAT.0
};

struct _0x9B1DA25A
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    TVVideoInfoNames;                // type:ARRAY.ATARRAY
};

struct _0x9B20B488
{
	int                              _0xDA04837F;                     // type:INT.0
	int                              _0x54446420;                     // type:INT.0
	int                              _0x9D81C7C1;                     // type:INT.0
	int                              _0x355158C6;                     // type:INT.0
	int                              _0xD9609F35;                     // type:INT.0
	int                              _0xD81BE44B;                     // type:INT.0
	int                              _0x4AAF0C16;                     // type:INT.0
	int                              _0xD2742501;                     // type:INT.0
	int                              _0xC0B9818C;                     // type:INT.0
	int                              _0x665BCCD2;                     // type:INT.0
	int                              _0x54962947;                     // type:INT.0
	int                              _0xB428C31E;                     // type:INT.0
	int                              _0xE3CD8E7F;                     // type:INT.0
	int                              _0xA4D85179;                     // type:INT.0
	int                              _0xFCD8CBD7;                     // type:INT.0
	int                              _0x39B3A887;                     // type:INT.0
	int                              _0x62EEEC02;                     // type:INT.0
	int                              _0x09901C89;                     // type:INT.0
	int                              _0xE9288EC8;                     // type:INT.0
	int                              _0x95FB54CD;                     // type:INT.0
	int                              _0xFE14A537;                     // type:INT.0
};

struct _0x9B440548 : _0x1054F746
{
	char                             value;                           // type:CHAR.0
};

struct _0x9B4E52E7
{
	bool                             useWetness;                      // type:BOOL.0
};

struct _0x9B5D785F
{
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
	bool                             UseSpeechRulesForInit;           // type:BOOL.0
	bool                             ReplyToPrevious;                 // type:BOOL.0
};

struct _0x9B62A1DA : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x48E15851                 StatType;                        // type:ENUM.32BIT
	bool                             IsTrue;                          // type:BOOL.0
	bool                             _0x1193FB5F;                     // type:BOOL.0
};

struct _0x9B6A46BE : _0x0A510DA9
{
	string                           ContentType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9B79B490 : _0x6035F569
{
};

struct _0x9B7B8D6F : _0x8A0DC979
{
};

struct _0x9B8C003A
{
};

struct _0x9B9E7F24 : _0xF70F21F5
{
	array<struct _0xE245BD1C>        _0x91B14099;                     // type:ARRAY.ATARRAY
	string                           _0x62ADE224;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA5E7A3A7;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x7E71A71F>        _0x2BA84559;                     // type:ARRAY.ATARRAY
};

struct _0x9BA03725
{
	float                            MaxZDiff;                        // type:FLOAT.0
	float                            MinNormalDot;                    // type:FLOAT.0
};

struct _0x9BA61C08 : _0xC031AE20
{
	array<struct _0xD805E227>        Selectors;                       // type:ARRAY.ATARRAY
	array<struct _0xFD4AC72D>        ClipGroups;                      // type:ARRAY.ATARRAY
};

struct _0x9BAA3031 : StateUIObjectSceneBase
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0x9BBC2FB4
{
	string                            _0x3A39EE90;                     // type:STRING.ATSTRING
	array<struct _0x4ABDAC5B, 10>     categories;                      // type:ARRAY.MEMBER
};

struct _0x9BBFB55F
{
	float                            probability;                     // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	float                            _0xA8B4F2CC;                     // type:FLOAT.0
	float                            _0x32FD1056;                     // type:FLOAT.0
	float                            _0xCF2C8A24;                     // type:FLOAT.0
	float                            _0xE1B1CA2A;                     // type:FLOAT.0
	float                            _0xC11AD5A5;                     // type:FLOAT.0
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5EF41EDD;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x94F11E4D;                     // type:UINT.0
	uint                             _0x0418F40B;                     // type:UINT.0
	string                           _0xE44BE671;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x42FBB897;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9BC9BC99 : _0x60EA96EA
{
	string                           ElementID;                       // type:STRING.ATNSHASHSTRING
};

struct _0x9BCA9E00
{
	array<struct CLootMatrixDefMap>     Collection;                      // type:ARRAY.ATARRAY
};

struct _0x9BE4F05A : _0xDC10377E
{
	bool                             ShouldUseZoomInput;              // type:BOOL.0
	bool                             ShouldUseDiscreteZoomControl;    // type:BOOL.0
	bool                             _0x84BBB509;                     // type:BOOL.0
	bool                             ShouldUseGameTime;               // type:BOOL.0
	bool                             _0x04C6DC61;                     // type:BOOL.0
	float                            MinFov;                          // type:FLOAT.0
	float                            MinFovForNetworkPlay;            // type:FLOAT.0
	float                            MaxFov;                          // type:FLOAT.0
	float                            _0x3F074F00;                     // type:FLOAT.0
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            Acceleration;                    // type:FLOAT.0
	float                            Deceleration;                    // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
	array<struct _0xE1131924>        _0xBA835BDE;                     // type:ARRAY.ATARRAY
};

struct _0x9BE5BE11 : _0xDC10377E
{
	float                            MinPitch;                        // type:FLOAT.0
	float                            LadderPitch;                     // type:FLOAT.0
	float                            _0x64AD5484;                     // type:FLOAT.0
	float                            _0x9C76ACF3;                     // type:FLOAT.0
	float                            _0xBB48CAF5;                     // type:FLOAT.0
	float                            _0x97FCD298;                     // type:FLOAT.0
	float                            _0x62650788;                     // type:FLOAT.0
	float                            _0xCF49589C;                     // type:FLOAT.0
	float                            _0x04F79C8F;                     // type:FLOAT.0
};

struct _0x9BE5E2A2
{
	array<enum eWeaponEffectGroup>     _0xEB87C61E;                     // type:ARRAY.ATARRAY
	array<enum eDamageType>            _0x7136E3FC;                     // type:ARRAY.ATARRAY
	int                                _0x9B572075;                     // type:INT.0
	enum _0x1786EF75                   _0x1210B23D;                     // type:ENUM.32BIT
};

struct _0x9BE88B89
{
	string                           ParamId;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xDA7CF521>         Flags;                           // type:BITSET.32BIT
};

struct _0x9BE93492
{
	char                             drawableId;                      // type:CHAR.0
	char                             textureId;                       // type:CHAR.0
	char                             _0x1B637E04;                     // type:CHAR.0
	bool                             _0xB8D7C3B5;                     // type:BOOL.0
};

struct _0x9BFC3D66 : _0x94ADF38A
{
	struct uiScreenInputOperationBase     Operation;                       // type:STRUCT.POINTER
};

struct _0x9BFF3E83 : _0x5D496F4E
{
	enum _0xBDE72CD8                 Operation;                       // type:ENUM.32BIT
	float                            fValue;                          // type:FLOAT.0
};

struct _0x9BFFD28E : _0xDC10377E
{
	string                           EnvelopeRef;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x201FD643;                     // type:FLOAT.0
	float                            _0x5B4B3E83;                     // type:FLOAT.0
};

struct _0x9C07C204
{
	uchar                            colR;                            // type:UCHAR.0
	uchar                            colG;                            // type:UCHAR.0
	uchar                            colB;                            // type:UCHAR.0
};

struct _0x9C07E6A0
{
	array<struct _0xC444B90D>        markers;                         // type:ARRAY.ATARRAY
	array<struct _0xB1B5043D>        _0xECFB7AD2;                     // type:ARRAY.ATARRAY
	string                           _0x5ACB5A20;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9C0851A2
{
	enum _0xCD879F4C                 Type;                            // type:ENUM.32BIT
	vec3V                            _0x161AC50C;                     // type:VEC3V.0
	array<struct _0x5ED92B2B>        Events;                          // type:ARRAY.ATARRAY
};

struct _0x9C16E5DF
{
	int                              event;                           // type:INT.0
	int                              value;                           // type:INT.0
};

struct _0x9C3773CC : CAICondition
{
	string                           Motion;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9C569608 : _0x2F7DA38D
{
	struct _0x4B852C44               conditions;                      // type:STRUCT.POINTER
	enum _0x659ABAA3                 _0xCE881158;                     // type:ENUM.32BIT
};

struct _0x9C5BAEA5 : _0x29583E42
{
};

struct _0x9C651567
{
	string                           profileName;                     // type:STRING.ATNONFINALHASHSTRING
	float                            triggerProbability;              // type:FLOAT.0
	float                            minVelocity;                     // type:FLOAT.0
	float                            maxVelocity;                     // type:FLOAT.0
	uint                             triggerInterval;                 // type:UINT.0
	ushort                           durationMin;                     // type:USHORT.0
	ushort                           durationMax;                     // type:USHORT.0
	uchar                            minVelocityFrequency;            // type:UCHAR.0
	uchar                            frequencyMin_1;                  // type:UCHAR.0
	uchar                            frequencyMax_1;                  // type:UCHAR.0
	uchar                            frequencyMin_2;                  // type:UCHAR.0
	uchar                            frequencyMax_2;                  // type:UCHAR.0
};

struct _0x9C7793A8 : _0x5604AFA2
{
};

struct _0x9C834886
{
	int                              x;                               // type:INT.0
	int                              y;                               // type:INT.0
	uint                             Version;                         // type:UINT.0
	uint                             _0x8FAB3F0B;                     // type:UINT.0
};

struct _0x9C8E7A88 : _0x22B199F9
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xBCD3081A;                     // type:BOOL.0
};

struct _0x9C954D2D
{
	bool                             Enabled;                         // type:BOOL.0
	float                            _0x7EDB2BAE;                     // type:FLOAT.0
	float                            _0xBFE877C7;                     // type:FLOAT.0
	float                            _0xBD52DD8B;                     // type:FLOAT.0
	float                            _0x760B8883;                     // type:FLOAT.0
	float                            _0xFB5ADDB2;                     // type:FLOAT.0
	float                            _0x26BD3760;                     // type:FLOAT.0
	float                            _0x7A88D873;                     // type:FLOAT.0
	float                            _0x59CD29FB;                     // type:FLOAT.0
	float                            _0x2C12888A;                     // type:FLOAT.0
};

struct _0x9C958807 : _0xFECF2F24
{
};

struct _0x9CC7287C : _0x478AE1AC
{
	struct _0x8ECFB47F               _0xD9B6568C;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0xD730011E;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x3CAB3E3B;                     // type:STRUCT.STRUCTURE
};

struct _0x9CD9613A : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
	bool                             FailIfNotFound;                  // type:BOOL.0
};

struct _0x9CD9F5B3 : _0x09D8AA6B
{
	float                            _0xA689AC19;                     // type:FLOAT.0
};

struct _0x9CE8A89B : CTuning
{
	string                           _0x9740E9A2;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9CE8E8EF
{
	map<enum _0x3B1F0870, string>     _0xEAD0183C;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, string>     _0x69C3BEEA;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, string>     _0xBABB06B1;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, string>     _0x81D8791A;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, string>     _0xF49E35DC;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, string>     _0x7D99690D;                     // type:MAP.ATBINARYMAP
};

struct _0x9CFC3811 : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
	float                            Chances;                         // type:FLOAT.0
};

struct _0x9CFCB135
{
	array<struct _0x51168F8F>        Actions;                         // type:ARRAY.ATARRAY
	float                            PoseThreshold;                   // type:FLOAT.0
	string                           ActionScoringWeightTable;        // type:STRING.ATNONFINALHASHSTRING
	string                           PerformingStreamClipset;         // type:STRING.ATNONFINALHASHSTRING
	string                           TargetStreamClipSet;             // type:STRING.ATNONFINALHASHSTRING
	float                            VerticalHeightBlendRangeMin;     // type:FLOAT.0
	float                            VerticalHeightBlendRangeMax;     // type:FLOAT.0
	float                            VerticalHeightProbeTolerance;    // type:FLOAT.0
	string                           BlendWeightProbeData;            // type:STRING.ATNONFINALHASHSTRING
	float                            PedCapsuleOverride;              // type:FLOAT.0
	float                            MaxSlopeTolerance;               // type:FLOAT.0
	array<enum eAnimBoneTag, 2>      ArmIkSocketBones;                // type:ARRAY.ATFIXEDARRAY
	struct _0xFEA05F30               BlendDurations;                  // type:STRUCT.STRUCTURE
	float                            WaterAboveGroundHeightTolerance; // type:FLOAT.0
	float                            WaterAboveGroundHeightTolerancePrompt; // type:FLOAT.0
	string                           LootComponentProbabilities;      // type:STRING.ATNONFINALHASHSTRING
	string                           AnimRateSelector;                // type:STRING.ATNONFINALHASHSTRING
	string                           OverlaySelector;                 // type:STRING.ATNONFINALHASHSTRING
	string                           RequiredAIConditions;            // type:STRING.ATNONFINALHASHSTRING
	string                           FixedEntryOffsetsGroup;          // type:STRING.ATNONFINALHASHSTRING
	string                           SlopeProbes;                     // type:STRING.ATNONFINALHASHSTRING
	vec3V                            CameraSceneOriginOffset;         // type:VEC3V.0
	string                           CameraOrbitSelector;             // type:STRING.ATNONFINALHASHSTRING
	vec3V                            OverrideGroundPositionOffset;    // type:VEC3V.0
	string                           LootMiniGameValues;              // type:STRING.ATNONFINALHASHSTRING
	float                            RestrictLootPromptAngleToRootUp; // type:FLOAT.0
	float                            _0x30F40D6F;                     // type:FLOAT.0
	float                            RestrictLootPromptAngleToRootForward; // type:FLOAT.0
	float                            _0x557417C8;                     // type:FLOAT.0
	float                            _0x6F2866AC;                     // type:FLOAT.0
	float                            TargetScaleMax;                  // type:FLOAT.0
	enum _0x4C293EFA                 StackedCarriableType;            // type:ENUM.32BIT
	bitset<enum _0x1A00FE65>         Flags;                           // type:BITSET.32BIT
};

struct _0x9D072C9E : _0x32C0AB5B
{
};

struct _0x9D1EA5C5 : _0xC509663E
{
};

struct _0x9D393085 : _0xA26E1113
{
	array<float, 4>                  value;                           // type:ARRAY.ATRANGEARRAY
};

struct _0x9D6EB5B9 : _0x2F7DA38D
{
	uint                             colour;                          // type:UINT.1
	float                            intensity;                       // type:FLOAT.0
	float                            SSAOStrength;                    // type:FLOAT.0
	float                            wrapAmount;                      // type:FLOAT.0
	float                            nonDirectionality;               // type:FLOAT.0
	float                            falloff;                         // type:FLOAT.0
	float                            falloffExponent;                 // type:FLOAT.0
	float                            falloffBias;                     // type:FLOAT.0
	float                            _0x3F4C1BB0;                     // type:FLOAT.0
	float                            _0x9C23D4E9;                     // type:FLOAT.0
	float                            coneInnerAngle;                  // type:FLOAT.0
	float                            coneOuterAngle;                  // type:FLOAT.0
	float                            roughnessMod;                    // type:FLOAT.0
	uchar                            shadowBlur;                      // type:UCHAR.0
	uchar                            shadowOpacity;                   // type:UCHAR.0
	uchar                            shadowFadeDistance;              // type:UCHAR.0
	uchar                            dynamicShadowFadeDistance;       // type:UCHAR.0
	float                            _0xA968034C;                     // type:FLOAT.0
	bool                             injectsIntoVoxels;               // type:BOOL.0
	float                            volIntensity;                    // type:FLOAT.0
	float                            volSizeScale;                    // type:FLOAT.0
	uint                             volOuterColour;                  // type:UINT.1
	float                            volOuterIntensity;               // type:FLOAT.0
	float                            volOuterExponent;                // type:FLOAT.0
	bitset<enum _0x45638A53>         _0x82560A49;                     // type:BITSET.32BIT
	bitset<enum _0x45638A53>         _0xD269560A;                     // type:BITSET.32BIT
	bitset<enum _0x103B2B6B>         flags;                           // type:BITSET.32BIT
};

struct _0x9D75A5A6 : CExtensionDef
{
	float                            angleMin;                        // type:FLOAT.0
	float                            angleMax;                        // type:FLOAT.0
};

struct _0x9D7BD5D6 : _0x3AB6499E
{
	vec3                             _0x9FA4E3ED;                     // type:VECTOR3.0
	float                            _0x6FA50095;                     // type:FLOAT.0
	float                            _0x9FE81F1B;                     // type:FLOAT.0
	float                            _0xD404B445;                     // type:FLOAT.0
	float                            _0x884C7250;                     // type:FLOAT.0
	float                            _0xB879775C;                     // type:FLOAT.0
	float                            _0x1CAA62D0;                     // type:FLOAT.0
	float                            _0x8FB5BDF6;                     // type:FLOAT.0
	float                            _0xF0633C42;                     // type:FLOAT.0
	float                            _0xC865310C;                     // type:FLOAT.0
	float                            _0xDD3FA8EC;                     // type:FLOAT.0
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x5A9152C3;                     // type:FLOAT.0
	float                            _0x90AB6977;                     // type:FLOAT.0
	float                            _0xBF46E9AE;                     // type:FLOAT.0
	float                            _0x68F42F32;                     // type:FLOAT.0
	float                            _0x8791EC0B;                     // type:FLOAT.0
	float                            _0x4ADFFE9B;                     // type:FLOAT.0
	float                            _0x4EB6D2CD;                     // type:FLOAT.0
	float                            _0x5096F466;                     // type:FLOAT.0
	float                            _0x416E33F0;                     // type:FLOAT.0
	float                            _0x8A745033;                     // type:FLOAT.0
	float                            _0x936517E2;                     // type:FLOAT.0
	float                            _0xA878E8A9;                     // type:FLOAT.0
	float                            _0x93C6D4B2;                     // type:FLOAT.0
	float                            _0xBC440869;                     // type:FLOAT.0
	float                            _0x3408F774;                     // type:FLOAT.0
	float                            _0x39E3DA4E;                     // type:FLOAT.0
	float                            _0xBA9E8C30;                     // type:FLOAT.0
	float                            _0x1D35EB0F;                     // type:FLOAT.0
	float                            _0x391C0626;                     // type:FLOAT.0
	float                            _0x6A0E71D8;                     // type:FLOAT.0
	float                            _0x7212538F;                     // type:FLOAT.0
	float                            _0x4C1BF742;                     // type:FLOAT.0
	float                            _0xDF06A564;                     // type:FLOAT.0
	enum _0x0100F80E                 _0xB84968C4;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x85307799;                     // type:ENUM.32BIT
	bool                             _0xEC5C31A1;                     // type:BOOL.0
	bool                             _0xC8CBFADA;                     // type:BOOL.0
	bool                             _0x8F6766C8;                     // type:BOOL.0
	bool                             _0xD8926184;                     // type:BOOL.0
	bool                             _0x2681EB08;                     // type:BOOL.0
	bool                             _0x500C2D7F;                     // type:BOOL.0
};

struct _0x9D80AB02 : CTuning
{
	float                            _0xD8939FD7;                     // type:FLOAT.0
};

struct _0x9D898439
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<enum _0xBEEA6142>          RequiredEnabledExtras;           // type:ARRAY.ATARRAY
	array<enum _0xBEEA6142>          RequiredDisabledExtras;          // type:ARRAY.ATARRAY
};

struct _0x9D90073C : _0x2F7DA38D
{
	bitset<enum _0x1AE479A9>         _0xF9E3435C;                     // type:BITSET.32BIT
	bool                             _0xC8C1C238;                     // type:BOOL.0
	struct _0xED16C5B0               targetEntity;                    // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                _0x28534F8C;                     // type:ENUM.32BIT
	vec3V                            targetOffset;                    // type:VEC3V.0
	enum _0x8C9EBA7A                 weaponAttachPoint;               // type:ENUM.32BIT
};

struct _0x9D920AA1
{
	struct _0xFA3E7C39               _0x8795246F;                     // type:STRUCT.STRUCTURE
};

struct _0x9D9BBB81 : _0xAB76836B
{
	bool                             ApplyDefault;                    // type:BOOL.0
	float                            Default;                         // type:FLOAT.0
	map<int, float>                  Dictionary;                      // type:MAP.ATMAP
};

struct _0x9DA2F921 : uiTextModifyBehaviorBase
{
	array<struct _0xCA20961F>        _0x40CF5B3E;                     // type:ARRAY.ATARRAY
};

struct _0x9DA98FAD : CBaseSaveObject
{
	float                            _0x2D2C7D8C;                     // type:FLOAT.0
	int                              _0x2E4A1CDA;                     // type:INT.0
	int                              _0x0C725385;                     // type:INT.0
};

struct _0x9DAD3FE6
{
	struct _0x608767C1               _0x561D4978;                     // type:STRUCT.STRUCTURE
	struct _0x608767C1               _0xC32755CB;                     // type:STRUCT.STRUCTURE
	struct _0x3B745589               _0xDBF6F4CA;                     // type:STRUCT.STRUCTURE
	struct _0x3B745589               _0xFA96DE6F;                     // type:STRUCT.STRUCTURE
	struct _0xCB0763FC               _0xDFD4926B;                     // type:STRUCT.STRUCTURE
	struct _0xCB0763FC               _0x2ECE7AAF;                     // type:STRUCT.STRUCTURE
	struct _0xCB0763FC               _0xB777E82F;                     // type:STRUCT.STRUCTURE
	struct _0xCB0763FC               _0x19104948;                     // type:STRUCT.STRUCTURE
	struct _0xCB0763FC               _0x8CC4BF3A;                     // type:STRUCT.STRUCTURE
	struct _0xCB0763FC               _0xBAFFAC06;                     // type:STRUCT.STRUCTURE
	array<struct _0xFEEDE448>        _0x1A8D3B38;                     // type:ARRAY.ATARRAY
	struct _0x1AD3F658               _0x3AA098D8;                     // type:STRUCT.STRUCTURE
	struct _0x1AD3F658               _0xB1CF7A9B;                     // type:STRUCT.STRUCTURE
	struct _0xEA674AFF               _0x02600170;                     // type:STRUCT.STRUCTURE
	struct _0x02150C4F               _0xBCC97099;                     // type:STRUCT.STRUCTURE
	struct _0xA1667C31               _0xF4C184A0;                     // type:STRUCT.STRUCTURE
	struct _0x583E63D2               _0xE3E198A6;                     // type:STRUCT.STRUCTURE
	array<struct _0xAEC03571>        _0x3738DE42;                     // type:ARRAY.ATARRAY
	struct _0xA98C52B5               _0xB4796C7C;                     // type:STRUCT.STRUCTURE
	struct _0xA98C52B5               _0x40192B28;                     // type:STRUCT.STRUCTURE
	struct _0xA98C52B5               _0x3A9F9E32;                     // type:STRUCT.STRUCTURE
	struct _0xA98C52B5               _0x84D9C0A8;                     // type:STRUCT.STRUCTURE
	struct _0xA98C52B5               _0x3FBD4027;                     // type:STRUCT.STRUCTURE
	struct _0xE76652D2               _0xE0E9AD2B;                     // type:STRUCT.STRUCTURE
	struct _0xB0E59CA4               _0xDE5276BC;                     // type:STRUCT.STRUCTURE
	struct _0xF4FFD05A               _0x447F411B;                     // type:STRUCT.STRUCTURE
	array<struct _0x5EFD1120>        _0x468D0920;                     // type:ARRAY.ATARRAY
};

struct _0x9DB0308F : _0x95E59A7E
{
	string                           OnTrue;                          // type:STRING.ATNONFINALHASHSTRING
	string                           OnFalse;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9DB2ADDD : _0xA6283223
{
	bitset<enum _0x8361A2DA>         vehicleFlags;                    // type:BITSET.32BIT
};

struct _0x9DB65D06
{
	array<struct _0x9D898439>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0x9DBB1D2D : _0x0A510DA9
{
};

struct _0x9DC3CDF6
{
	enum _0xCAB27585                 _0x2084C29C;                     // type:ENUM.32BIT
	enum _0xCAB27585                 _0x323F6611;                     // type:ENUM.32BIT
	float                            _0x4B726D55;                     // type:FLOAT.0
	float                            _0x85C6BD7A;                     // type:FLOAT.0
};

struct _0x9DC65250
{
	float                            _0x555127A7;                     // type:FLOAT.0
	float                            _0xB675F348;                     // type:FLOAT.0
	float                            _0x6CC8E216;                     // type:FLOAT.0
};

struct _0x9DD0D1EC
{
	string                           Unarmed;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Weapon_1H;                       // type:STRING.ATNONFINALHASHSTRING
	string                           Weapon_2H;                       // type:STRING.ATNONFINALHASHSTRING
	string                           Weapon_2H_Melee;                 // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9DD310A8 : CTuning
{
	struct _0x4C7DA5C2               _0x343B7C36;                     // type:STRUCT.STRUCTURE
	struct _0x4C7DA5C2               _0x02699893;                     // type:STRUCT.STRUCTURE
	struct _0x4C7DA5C2               _0xD78D42D7;                     // type:STRUCT.STRUCTURE
	struct _0x4C7DA5C2               _0xEDDF6F7B;                     // type:STRUCT.STRUCTURE
	struct _0x4C7DA5C2               _0x7E8490BF;                     // type:STRUCT.STRUCTURE
	float                            _0x1CA3D8D2;                     // type:FLOAT.0
	float                            _0xBAAF378F;                     // type:FLOAT.0
	float                            _0xA0CB93B4;                     // type:FLOAT.0
	float                            _0x894FA96B;                     // type:FLOAT.0
	float                            _0xFBDA2800;                     // type:FLOAT.0
};

struct _0x9DDCB211 : _0x3AB6499E
{
	struct _0x81DC733B               _0x29FC8729;                     // type:STRUCT.STRUCTURE
	struct _0xA55CA0EA               _0x6579358E;                     // type:STRUCT.STRUCTURE
	struct _0xCE9FEE90               _0xE8B75C8F;                     // type:STRUCT.STRUCTURE
	struct _0x6F611A53               _0xFAECA38A;                     // type:STRUCT.STRUCTURE
};

struct _0x9DE1FB8C
{
	vec4                             sphereOffsetAndRadius;           // type:VECTOR4.0
	vec4                             backgroundRectXYWH;              // type:VECTOR4.0
	vec3                             rotationXYZ;                     // type:VECTOR3.0
	bool                             enabled;                         // type:BOOL.0
};

struct _0x9DE34E05 : uiScreenInputDataAdjustableBehaviorBase
{
	float                            Value;                           // type:FLOAT.0
	float                            Step;                            // type:FLOAT.0
};

struct _0x9E0B95DB : CTuning
{
};

struct _0x9E0D3CAB
{
	array<struct _0x4ECD7879>        _0x3D44373C;                     // type:ARRAY.ATARRAY
};

struct _0x9E16AFC8
{
	float                            _0x44B24E79;                     // type:FLOAT.0
	float                            _0x5B746556;                     // type:FLOAT.0
	float                            _0x1F260192;                     // type:FLOAT.0
	float                            Unused;                          // type:FLOAT.0
	float                            _0xBB30C24E;                     // type:FLOAT.0
	float                            _0xDB8DF471;                     // type:FLOAT.0
	float                            _0xECFD12C9;                     // type:FLOAT.0
	float                            _0x2A6BEABA;                     // type:FLOAT.0
	float                            _0xB0CC8258;                     // type:FLOAT.0
	float                            _0xFEAA1994;                     // type:FLOAT.0
	float                            _0x1028DD03;                     // type:FLOAT.0
	float                            _0x099D2721;                     // type:FLOAT.0
	float                            _0x783128A1;                     // type:FLOAT.0
	float                            _0x32EB03F3;                     // type:FLOAT.0
	float                            _0x5DD253BF;                     // type:FLOAT.0
	float                            _0x15DF7349;                     // type:FLOAT.0
	float                            _0xC2E6328D;                     // type:FLOAT.0
	float                            _0xCC35699D;                     // type:FLOAT.0
	float                            _0x5DDE162A;                     // type:FLOAT.0
	float                            _0x617370C8;                     // type:FLOAT.0
	float                            _0x51CBABE5;                     // type:FLOAT.0
	float                            _0x93238037;                     // type:FLOAT.0
	float                            _0xFFE5E756;                     // type:FLOAT.0
	float                            _0xB4B5C66E;                     // type:FLOAT.0
	float                            _0x6C8B906B;                     // type:FLOAT.0
	float                            _0x72EFC056;                     // type:FLOAT.0
	float                            _0x7ABF3104;                     // type:FLOAT.0
	float                            _0x72C1112B;                     // type:FLOAT.0
	float                            _0x4F79C159;                     // type:FLOAT.0
	float                            _0xE5E5B045;                     // type:FLOAT.0
	float                            _0x061B0814;                     // type:FLOAT.0
	float                            _0x17A387ED;                     // type:FLOAT.0
	float                            _0x145674EB;                     // type:FLOAT.0
	float                            _0x8973116C;                     // type:FLOAT.0
	float                            _0x0023E406;                     // type:FLOAT.0
	float                            _0x72C5A1D5;                     // type:FLOAT.0
	float                            _0xFC760797;                     // type:FLOAT.0
	float                            _0xCD1B7057;                     // type:FLOAT.0
	float                            _0xD81B9387;                     // type:FLOAT.0
};

struct _0x9E19504E : CBaseSaveObject
{
	array<string, 2000>              _0x3D41A182;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0x9E559412 : _0x8A0DC979
{
};

struct _0x9E615C86 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           Species;                         // type:STRING.ATNONFINALHASHSTRING
	uint                             MaxPedsToCheck;                  // type:UINT.0
	float                            Radius;                          // type:FLOAT.0
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
};

struct _0x9E8903E0 : _0x4FA6E5D7
{
	float                            Value;                           // type:FLOAT.0
};

struct _0x9EB925A0 : _0xA26E1113
{
	float                            value;                           // type:FLOAT.0
};

struct _0x9EC68681 : _0x768B6279
{
	string                           _0x380B4149;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3F4BD799;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9EDC790E : _0x0A510DA9
{
	enum _0xCCA77E07                 _0xFAD836D5;                     // type:ENUM.32BIT
	enum _0xF4439461                 _0xF364B92E;                     // type:ENUM.32BIT
};

struct _0x9EEDB5AB : _0x1FB1BCEA
{
};

struct _0x9EF02B9D
{
	bool                             Enabled;                         // type:BOOL.0
	enum _0x9B2DCF16                 _0x9B2DCF16;                     // type:ENUM.32BIT
	struct _0x1BB854E2               _0x18F95829;                     // type:STRUCT.STRUCTURE
	struct _0x2045A21C               _0xE924CAC3;                     // type:STRUCT.STRUCTURE
	float                            Gamma;                           // type:FLOAT.0
};

struct _0x9EF10D31 : _0x89164127
{
	int                              Rank;                            // type:INT.0
	enum _0x57D8293B                 ComparisonType;                  // type:ENUM.32BIT
};

struct _0x9EF3C36D : CTuning
{
	float                            _0x9645D6C7;                     // type:FLOAT.0
	float                            _0x79ADB4CE;                     // type:FLOAT.0
	float                            _0x06AC74C4;                     // type:FLOAT.0
};

struct _0x9F0B45EA : _0xCDF97B9D
{
};

struct _0x9F110F0A : _0xD3B61E0D
{
	array<float>                     columnWidths;                    // type:ARRAY.ATARRAY
	array<float>                     rowHeights;                      // type:ARRAY.ATARRAY
};

struct _0x9F1824AA
{
	uint                             _0xFEB00F65;                     // type:UINT.0
};

struct _0x9F19103C : _0xAE1C5728
{
};

struct _0x9F1EF45E
{
	enum rage__InputType             inputType;                       // type:ENUM.32BIT
	char                             data;                            // type:CHAR.0
};

struct _0x9F26A868 : _0x7EAFD12D
{
	struct _0x5B275EDA               Value;                           // type:STRUCT.STRUCTURE
};

struct _0x9F3DF6AF : CTuning
{
	float                            _0xD748AD25;                     // type:FLOAT.0
	float                            _0x4D06E3C0;                     // type:FLOAT.0
	float                            _0x60A389BD;                     // type:FLOAT.0
	float                            _0x0BB7D65F;                     // type:FLOAT.0
	float                            _0x037BBD2B;                     // type:FLOAT.0
	float                            _0xAC8CC9F5;                     // type:FLOAT.0
	float                            _0x04BCB875;                     // type:FLOAT.0
	float                            _0x2BF8F2C4;                     // type:FLOAT.0
	float                            _0xBABDFF8D;                     // type:FLOAT.0
	float                            _0x85F2C28F;                     // type:FLOAT.0
	float                            _0xC9D35847;                     // type:FLOAT.0
	float                            _0x6D84D932;                     // type:FLOAT.0
	float                            _0x532D751B;                     // type:FLOAT.0
	float                            _0x28AD7BCE;                     // type:FLOAT.0
	float                            _0x3B0BF581;                     // type:FLOAT.0
	float                            _0xB4A48981;                     // type:FLOAT.0
	float                            _0xCD61F1D8;                     // type:FLOAT.0
	float                            _0x0FBA9108;                     // type:FLOAT.0
	float                            _0x3EFD994D;                     // type:FLOAT.0
};

struct _0x9F3ED86E
{
	bool                             _0xA9CC87DB;                     // type:BOOL.0
	uint                             StealthNoisePeriodMS;            // type:UINT.0
	uint                             _0x3942235E;                     // type:UINT.0
	uint                             _0xE85ACF97;                     // type:UINT.0
	float                            _0xEB521B55;                     // type:FLOAT.0
	float                            _0xADA3CD9E;                     // type:FLOAT.0
	float                            _0x09163491;                     // type:FLOAT.0
	float                            _0x31187814;                     // type:FLOAT.0
	float                            _0x1197DF4E;                     // type:FLOAT.0
	float                            _0xF3D12F0C;                     // type:FLOAT.0
	float                            StealthSpeedThresholdLow;        // type:FLOAT.0
	float                            StealthSpeedThresholdHigh;       // type:FLOAT.0
	float                            StealthVehicleTypeFactorBicycles; // type:FLOAT.0
	float                            MinPlayerJumpOutSpeedBike;       // type:FLOAT.0
	float                            MinPlayerJumpOutSpeedCar;        // type:FLOAT.0
	float                            TimeBetweenAddingDangerousVehicleEvents; // type:FLOAT.0
	bool                             _0x7F056303;                     // type:BOOL.0
	float                            _0xF79FF9D7;                     // type:FLOAT.0
};

struct _0x9F43B9D3
{
	map<string, string>              renderFeatures;                  // type:MAP.ATBINARYMAP
};

struct _0x9F564133
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xE3B545C0                 _0x4872309F;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0x0B7EC3C2;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0x7983DAE5;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0xFD5698CC;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0x68D1E360;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0xCBF2564F;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0x71420211;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0xBDCD30CF;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0x785388D1;                     // type:ENUM.32BIT
	enum _0xE3B545C0                 _0x705467D1;                     // type:ENUM.32BIT
};

struct _0x9F73630D : _0x61DEA3ED
{
};

struct _0x9F79C322
{
	array<struct AnimatedPostFX, 6>     Layers;                          // type:ARRAY.ATFIXEDARRAY
	bool                                CanBePaused;                     // type:BOOL.0
	enum _0x813B6C49                    EventType;                       // type:ENUM.32BIT
	uint                                _0xF9736A90;                     // type:UINT.0
	uint                                _0x76AE4AF2;                     // type:UINT.0
	int                                 GroupId;                         // type:INT.0
	int                                 _0x0B0F8E7A;                     // type:INT.0
	bool                                _0x27C8B151;                     // type:BOOL.0
	uint                                _0x1D82F931;                     // type:UINT.0
	enum _0x42902953                    _0x244E6529;                     // type:ENUM.32BIT
	bool                                _0x20BC2167;                     // type:BOOL.0
	bool                                _0xC36B4EEB;                     // type:BOOL.0
	bool                                _0x7E7913BC;                     // type:BOOL.0
	bool                                _0x57A96EB3;                     // type:BOOL.0
	bool                                _0xC9F69291;                     // type:BOOL.0
	bool                                _0xDC6CB830;                     // type:BOOL.0
};

struct _0x9F8B917D
{
};

struct _0x9FA03917 : CTuning
{
	float                            _0x8DD292FC;                     // type:FLOAT.0
	string                           _0x38B8F2C5;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0x9FA1145B
{
	string                           ScannerSearch;                   // type:STRING.ATNONFINALHASHSTRING
	bool                             Negated;                         // type:BOOL.0
	int                              Radius;                          // type:INT.0
};

struct _0x9FAEA6A0
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	bool                             value;                           // type:BOOL.0
};

struct _0x9FB643A5
{
	enum _0x99BEFEED                 Type;                            // type:ENUM.32BIT
	int                              _0xF9027882;                     // type:INT.0
};

struct _0x9FBD13E1 : _0x5C1CB98F
{
};

struct _0x9FC8D813 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0x9FCDC8F0
{
	map<string, string>              _0xB6CCB443;                     // type:MAP.ATBINARYMAP
	string                           _0x1BA521C1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x210B1F0B;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x601AC212;                     // type:BOOL.0
	array<struct _0xDE62D83B>        _0x40BABBAF;                     // type:ARRAY.ATARRAY
};

struct _0x9FD1B354 : _0xC0749003
{
};

struct _0x9FE74C2B : _0x3795142C
{
};

struct _0x9FFBD7A2 : _0x84163146
{
	enum ePedScriptResetFlags        _0x6E100FF4;                     // type:ENUM.32BIT
};

struct _0x9FFC3E87
{
	enum DispatchType                              DispatchType;                    // type:ENUM.32BIT
	uint                                           _0xFB4C9D3C;                     // type:UINT.0
	uint                                           _0x0EBF5FF5;                     // type:UINT.0
	uint                                           _0x8CDA4464;                     // type:UINT.0
	uint                                           _0x47AE9B4C;                     // type:UINT.0
	uchar                                          _0x2BD4F853;                     // type:UCHAR.0
	uchar                                          _0xBFD848F6;                     // type:UCHAR.0
	uchar                                          _0xAC3E6520;                     // type:UCHAR.0
	float                                          _0x324A452F;                     // type:FLOAT.0
	uchar                                          _0x1DFC9B67;                     // type:UCHAR.0
	uchar                                          _0x0E061F08;                     // type:UCHAR.0
	uchar                                          _0xBF61C56D;                     // type:UCHAR.0
	uchar                                          _0xAB2D0782;                     // type:UCHAR.0
	uchar                                          _0x28B14198;                     // type:UCHAR.0
	uchar                                          _0x8F164240;                     // type:UCHAR.0
	uchar                                          _0x045A2402;                     // type:UCHAR.0
	float                                          _0xDFE044B7;                     // type:FLOAT.0
	float                                          _0xF90C8537;                     // type:FLOAT.0
	float                                          _0x40828D8C;                     // type:FLOAT.0
	float                                          _0xAFC1434A;                     // type:FLOAT.0
	float                                          _0xBF8559CE;                     // type:FLOAT.0
	float                                          _0x56A05CC4;                     // type:FLOAT.0
	float                                          _0x654F3B36;                     // type:FLOAT.0
	char                                           _0xEED37B2F;                     // type:CHAR.0
	char                                           _0x6F30ADFE;                     // type:CHAR.0
	char                                           _0x4652336D;                     // type:CHAR.0
	float                                          SpawnDelay;                      // type:FLOAT.0
	float                                          _0x2311F2A1;                     // type:FLOAT.0
	float                                          _0xE8619D90;                     // type:FLOAT.0
	float                                          _0xF99C5E49;                     // type:FLOAT.0
	float                                          _0xE39AE4C9;                     // type:FLOAT.0
	float                                          RandomWeight;                    // type:FLOAT.0
	bool                                           _0xCA7B2DB8;                     // type:BOOL.0
	bool                                           _0xFFC825AC;                     // type:BOOL.0
	array<string>                                  DispatchVehicleSets;             // type:ARRAY.ATARRAY
	struct _0x162319B8                             _0x8D907F91;                     // type:STRUCT.STRUCTURE
	struct _0x162319B8                             _0x42321052;                     // type:STRUCT.STRUCTURE
	map<enum DispatchType, struct _0x60AB4219>     _0x4BB5E5B4;                     // type:MAP.ATBINARYMAP
	array<struct _0xAB0F1B79>                      _0xA9E96804;                     // type:ARRAY.ATARRAY
	bitset<enum _0xA549EF3B>                       Flags;                           // type:BITSET.8BIT
};

struct _0xA00B192A
{
	bool                             _0x6126AD04;                     // type:BOOL.0
	float                            _0x4871D005;                     // type:FLOAT.2
	float                            _0x28915E62;                     // type:FLOAT.2
	float                            _0x88B71323;                     // type:FLOAT.2
	float                            _0x2FA60818;                     // type:FLOAT.0
};

struct _0xA0122ECB
{
	struct _0x7FE564D4               Spawning;                        // type:STRUCT.STRUCTURE
	struct _0x5F88006B               Despawning;                      // type:STRUCT.STRUCTURE
	struct _0xBF49F087               Peds;                            // type:STRUCT.STRUCTURE
	struct _0xE4E3FAC7               Dispatch;                        // type:STRUCT.STRUCTURE
};

struct _0xA0252EC6 : _0xEBB02FC9
{
};

struct _0xA04FE0A1 : CTuning
{
	float                            _0x33E8CB04;                     // type:FLOAT.0
	float                            _0xF660274C;                     // type:FLOAT.0
	float                            _0xB59B578B;                     // type:FLOAT.0
	float                            _0x0FBC646F;                     // type:FLOAT.0
	float                            _0xF651D960;                     // type:FLOAT.0
	float                            _0xA19F474D;                     // type:FLOAT.0
};

struct _0xA05C0959 : _0xA709E487
{
	enum _0xF8B3DF51                 _0x37015220;                     // type:ENUM.32BIT
	int                              value;                           // type:INT.0
};

struct _0xA06088D2 : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0xA0889763 : _0x08C6D3C5
{
};

struct _0xA09093CE : _0x8A0DC979
{
	string                           _0x9898A5CD;                     // type:STRING.CONST_STRING
	string                           Category;                        // type:STRING.CONST_STRING
};

struct _0xA0A44E21
{
	array<uchar, 3>                  _0xDE1BBBE9;                     // type:ARRAY.ATRANGEARRAY
	uchar                            _0xC4E28EBE;                     // type:UCHAR.0
	uchar                            _0x0AE08340;                     // type:UCHAR.0
	uchar                            _0xEF84AE44;                     // type:UCHAR.0
	uchar                            _0x0C998748;                     // type:UCHAR.0
	uchar                            _0x35A914E6;                     // type:UCHAR.0
	uchar                            maxWaterDepth;                   // type:UCHAR.0
	uchar                            _0xC9EB4BE7;                     // type:UCHAR.0
	uchar                            _0xC203592A;                     // type:UCHAR.0
};

struct _0xA0A8509E
{
	float                            _0xF7FDA978;                     // type:FLOAT.2
	float                            _0xB0C2AE78;                     // type:FLOAT.2
	float                            _0x276460DF;                     // type:FLOAT.0
	float                            _0x76621A09;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x5850AA48;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xF88FA933;                     // type:ENUM.32BIT
	float                            _0x59F18B2B;                     // type:FLOAT.2
	float                            _0xE35BFCE3;                     // type:FLOAT.2
	float                            _0x93A66784;                     // type:FLOAT.0
	float                            _0x5460CA19;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x6CED177B;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x6FC360B2;                     // type:ENUM.32BIT
};

struct _0xA0AC223D
{
	float                            _0xAE3A8FB0;                     // type:FLOAT.0
	float                            _0xA4A9EF6C;                     // type:FLOAT.0
	float                            _0xBC21F739;                     // type:FLOAT.0
	float                            _0x19E698E0;                     // type:FLOAT.0
	float                            _0xFD4AA86E;                     // type:FLOAT.0
};

struct _0xA0D527C4 : _0x226E795D
{
	uint                             _0xCFE64BCC;                     // type:UINT.0
};

struct _0xA0D7A426
{
	bool                             EnableSeekingHorsebackMP;        // type:BOOL.0
	bool                             EnableSeekingOnFootMP;           // type:BOOL.0
	bool                             EnableSeekingHorsebackSP;        // type:BOOL.0
	bool                             EnableSeekingOnFootSP;           // type:BOOL.0
	float                            MaxSeekingAngleDeltaMP;          // type:FLOAT.0
	float                            MaxSeekingSpeedDeltaMP;          // type:FLOAT.0
	float                            MaxSeekingLifeTimeAngleDeltaMP;  // type:FLOAT.0
	float                            MaxSeekingAngleDeltaSP;          // type:FLOAT.0
	float                            MaxSeekingSpeedDeltaSP;          // type:FLOAT.0
	float                            MaxSeekingLifeTimeAngleDeltaSP;  // type:FLOAT.0
	float                            SeekTargetNearInterpDistance;    // type:FLOAT.0
	float                            SeekTargetFarInterpDistance;     // type:FLOAT.0
	float                            SeekTargetTransverseNearInterpSpeedMP; // type:FLOAT.0
	float                            SeekTargetTransverseFarInterpSpeedMP; // type:FLOAT.0
	float                            SeekTargetLongitudinalNearInterpSpeedMP; // type:FLOAT.0
	float                            SeekTargetLongitudinalFarInterpSpeedMP; // type:FLOAT.0
	float                            SeekTargetTransverseNearInterpSpeedSP; // type:FLOAT.0
	float                            SeekTargetTransverseFarInterpSpeedSP; // type:FLOAT.0
	float                            SeekTargetLongitudinalNearInterpSpeedSP; // type:FLOAT.0
	float                            SeekTargetLongitudinalFarInterpSpeedSP; // type:FLOAT.0
};

struct _0xA0E3609C : _0x1FB1BCEA
{
};

struct _0xA0E6232E : _0x393B9BF2
{
};

struct _0xA0EB7031
{
	string                           StartTime;                       // type:STRING.ATSTRING
	string                           _0x8F8D450D;                     // type:STRING.ATNONFINALHASHSTRING
	float                            SpawnDistance;                   // type:FLOAT.0
	float                            _0x46486DF3;                     // type:FLOAT.0
	float                            _0x1118DC05;                     // type:FLOAT.0
	bool                             _0x5C000805;                     // type:BOOL.0
	string                           VehicleSetName;                  // type:STRING.ATNONFINALHASHSTRING
	int                              _0x9412C080;                     // type:INT.0
	bool                             _0x6788FC5D;                     // type:BOOL.0
	string                           _0xDB052711;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8FE72D7A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA0EF0BAB : CAICondition
{
	string                           SceneId;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA112C3D6
{
	enum _0xC93A7A62                 _0x10E64641;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x9F865B5D;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x5E553E09;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x46C0D7A1;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x448F8972;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x417BA55A;                     // type:ENUM.32BIT
	uint                             _0xBE376E84;                     // type:UINT.0
	uint                             _0xE8A84B6A;                     // type:UINT.0
	uint                             _0xDF1399EC;                     // type:UINT.0
	uint                             _0xEBCF7498;                     // type:UINT.0
	uint                             _0x75ABFD73;                     // type:UINT.0
	float                            _0xEEAE87A9;                     // type:FLOAT.0
	float                            _0x49A51B2C;                     // type:FLOAT.0
	float                            _0xC2BF9B4F;                     // type:FLOAT.0
	float                            _0xFC047D24;                     // type:FLOAT.0
	float                            _0x3638CDC5;                     // type:FLOAT.0
	float                            _0xB84A242F;                     // type:FLOAT.0
};

struct _0xA11E83E5
{
	vec3                             min;                             // type:VECTOR3.0
	vec3                             max;                             // type:VECTOR3.0
	vec3                             _0x56892E3F;                     // type:VECTOR3.0
	enum _0x9F874F86                 _0xEFDCADA0;                     // type:ENUM.32BIT
};

struct _0xA126DA69 : _0x1054F746
{
};

struct _0xA135B60D
{
	string                           SceneId;                         // type:STRING.ATNONFINALHASHSTRING
	string                           AltSceneId;                      // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x5967281C>        SceneEntities;                   // type:ARRAY.ATARRAY
	struct _0xC81F8273               CarriableData;                   // type:STRUCT.STRUCTURE
	bitset<enum _0xE9831392>         SceneFlags;                      // type:BITSET.32BIT
	map<string, string>              InGameSceneEntitiesMap;          // type:MAP.ATBINARYMAP
	array<struct _0xF211B895>        DeadPoseData;                    // type:ARRAY.ATARRAY
	array<struct _0xABB144BE>        AnimSceneBoolData;               // type:ARRAY.ATARRAY
	string                           ForcedPlaybackList;              // type:STRING.ATNONFINALHASHSTRING
	string                           TargetForcedSceneId;             // type:STRING.ATNONFINALHASHSTRING
	string                           ProbesSet;                       // type:STRING.ATNONFINALHASHSTRING
	enum _0x580314CC                 AttachSlot;                      // type:ENUM.32BIT
};

struct _0xA142E87F : UIBehavior
{
	int                              _0x161A4417;                     // type:INT.0
};

struct _0xA14FF3A8
{
	string                           DefaultPairedLootClipsSet;       // type:STRING.ATNONFINALHASHSTRING
	string                           ConditionalPairedLootClipsLookup; // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA1510CCD : _0x2F7DA38D
{
	enum eAnimBoneTag                _0x28534F8C;                     // type:ENUM.32BIT
	bool                             _0xA70772E1;                     // type:BOOL.0
	bool                             _0xC7E7ED4E;                     // type:BOOL.0
};

struct _0xA157E7B1 : _0x1B26FDB1
{
	int                              Value;                           // type:INT.0
};

struct _0xA15F529D
{
	vec3                             position;                        // type:VECTOR3.0
	float                            width;                           // type:FLOAT.0
	float                            depth;                           // type:FLOAT.0
	float                            height;                          // type:FLOAT.0
	vec3                             forward;                         // type:VECTOR3.0
	vec3                             right;                           // type:VECTOR3.0
};

struct _0xA1667C31
{
	bool                             _0xA9E92AF8;                     // type:BOOL.0
	float                            _0x7D96716F;                     // type:FLOAT.0
	float                            _0x1985A9A1;                     // type:FLOAT.0
	float                            _0xD21CF1DA;                     // type:FLOAT.0
	float                            _0x721BD157;                     // type:FLOAT.0
	float                            _0x928228D4;                     // type:FLOAT.0
};

struct _0xA16FA08A
{
	array<struct _0x58BD789F>        _0xD227F943;                     // type:ARRAY.ATARRAY
};

struct _0xA1835D3E : _0x906508CE
{
	bool                             _0xCB4861BA;                     // type:BOOL.0
	bool                             _0x78917A7B;                     // type:BOOL.0
	string                           _0x4BF77BB2;                     // type:STRING.ATSTRING
	array<struct _0x81F99C77>        _0x9524F034;                     // type:ARRAY.ATARRAY
};

struct _0xA18363F1
{
	struct _0xC9C5A880               _0x0EDDBC0B;                     // type:STRUCT.STRUCTURE
	struct _0x35CBCCBF               FovLimits;                       // type:STRUCT.STRUCTURE
};

struct _0xA199D0AF
{
	bool                             _0xC329527D;                     // type:BOOL.0
	struct _0x28CE2FBC               _0x7705AF29;                     // type:STRUCT.STRUCTURE
	float                            MaxWaitTime;                     // type:FLOAT.0
	bool                             _0xF6EF2E97;                     // type:BOOL.0
	bool                             _0x2AF81D58;                     // type:BOOL.0
};

struct _0xA19E0D9F
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	vec3                             Offset;                          // type:VECTOR3.0
	float                            ZoomFactor;                      // type:FLOAT.0
	uint                             BlendInTime;                     // type:UINT.0
	uint                             BlendOutTime;                    // type:UINT.0
};

struct _0xA1B9A635 : uiSelectableBehaviorBase
{
	struct _0x4A7AD954               Target;                          // type:STRUCT.STRUCTURE
};

struct _0xA1BCDF14 : rage__fwExtensionDef
{
	array<struct _0xDA78A922>        AttachmentDef;                   // type:ARRAY.ATARRAY
};

struct _0xA1C2BAD7 : _0x85B7B5BF
{
	enum _0x4F69766B                 _0xDF387BCF;                     // type:ENUM.32BIT
};

struct _0xA1C3450B : CTuning
{
	struct _0xF8D16938               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xA1CD78E2 : CTuning
{
	float                            _0xB4282A77;                     // type:FLOAT.0
	float                            _0x4BF5ADB6;                     // type:FLOAT.0
};

struct _0xA1D4BCF5
{
	float                            fImpulseReductionPerShot;        // type:FLOAT.0
	float                            fImpulseRecoveryPerSecond;       // type:FLOAT.0
	float                            fMaxImpulseModifier;             // type:FLOAT.0
	float                            fMinImpulseModifier;             // type:FLOAT.0
	float                            fCounterImpulseRatio;            // type:FLOAT.0
	float                            fTempInitialStiffnessWhenShot;   // type:FLOAT.0
	float                            fAnimalMassMult;                 // type:FLOAT.0
	float                            fAnimalImpulseMultMin;           // type:FLOAT.0
	float                            fAnimalImpulseMultMax;           // type:FLOAT.0
	float                            fInitialHitImpulseMult;          // type:FLOAT.0
};

struct _0xA1D7BE60
{
	array<struct _0x904AC1CF>        _0x89305991;                     // type:ARRAY.ATARRAY
};

struct _0xA1DB485F
{
	array<struct _0x166AC204>        Attributes;                      // type:ARRAY.ATARRAY
	uint                             Type;                            // type:UINT.0
	uint                             Signature;                       // type:UINT.0
};

struct _0xA1DF1AF0 : CAICondition
{
	enum _0xE5DDD0D4                 _0xE745026B;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
};

struct _0xA1F6240A
{
	vec3V                            Min;                             // type:VEC3V.0
	vec3V                            Max;                             // type:VEC3V.0
	matrix34V                        Transform;                       // type:MAT34V.0
};

struct _0xA2156BB0
{
	string                           Type;                            // type:STRING.ATNONFINALHASHSTRING
	ushort                           Count;                           // type:USHORT.0
	uchar                            MaxCreatedRemovedPerFrame;       // type:UCHAR.0
};

struct _0xA22C51AC
{
	float                            BumpedByCar;                     // type:FLOAT.0
	float                            BumpedByCarFriendly;             // type:FLOAT.0
	float                            PlayerBumpedByCar;               // type:FLOAT.0
	float                            MinVehicleWarning;               // type:FLOAT.0
	float                            BumpedByPedMinVel;               // type:FLOAT.0
	float                            _0x82ABB5A6;                     // type:FLOAT.0
	float                            BumpedByPedMinDotVel;            // type:FLOAT.0
	float                            BumpedByPed;                     // type:FLOAT.0
	float                            BumpedByPlayerRagdoll;           // type:FLOAT.0
	float                            BumpedByPedRagdoll;              // type:FLOAT.0
	float                            BumpedByPedFriendly;             // type:FLOAT.0
	float                            BumpedByPedIsQuadruped;          // type:FLOAT.0
	float                            BumpedByObject;                  // type:FLOAT.0
	float                            Walking;                         // type:FLOAT.0
	float                            Running;                         // type:FLOAT.0
	float                            Sprinting;                       // type:FLOAT.0
	float                            MaxPlayerActivationLimit;        // type:FLOAT.0
	float                            MaxAiActivationLimit;            // type:FLOAT.0
};

struct _0xA239025B
{
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            _0xA7927AEC;                     // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x17214A7D;                     // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
	float                            _0xDEE7571B;                     // type:FLOAT.0
	float                            _0x74776271;                     // type:FLOAT.0
	float                            IdleCmini;                       // type:FLOAT.0
};

struct _0xA25541A2
{
	struct _0x4324AAC6               _0x150BE453;                     // type:STRUCT.STRUCTURE
	struct _0x4324AAC6               _0xAA15E40E;                     // type:STRUCT.STRUCTURE
	struct _0x4324AAC6               _0x9CEFDEFA;                     // type:STRUCT.STRUCTURE
	struct _0x4324AAC6               _0xF7FF476D;                     // type:STRUCT.STRUCTURE
};

struct _0xA26E1113
{
	string                           id;                              // type:STRING.ATNSHASHSTRING
	enum _0x8914530F                 type;                            // type:ENUM.32BIT
};

struct _0xA2801F78 : CTuning
{
	array<struct _0xCB33FE51>        _0x9B8CE538;                     // type:ARRAY.ATARRAY
	struct _0x056E124F               _0x07B3F484;                     // type:STRUCT.STRUCTURE
	struct _0x91425837               _0x8DDC03E1;                     // type:STRUCT.STRUCTURE
	array<struct _0x1E24BE45, 4>     _0xA11136AA;                     // type:ARRAY.ATFIXEDARRAY
	float                            _0x6B7D76E1;                     // type:FLOAT.0
	float                            _0x2BFA6037;                     // type:FLOAT.0
	float                            _0x55054AA9;                     // type:FLOAT.0
	float                            _0xDBB79E69;                     // type:FLOAT.0
	float                            _0x5C40D6E4;                     // type:FLOAT.0
	float                            _0x93D9059B;                     // type:FLOAT.0
	float                            _0xE48838E2;                     // type:FLOAT.0
	float                            _0x7E2F3D2E;                     // type:FLOAT.0
	float                            _0xC3A40558;                     // type:FLOAT.0
	float                            _0x839B6D88;                     // type:FLOAT.0
	float                            _0x904BC681;                     // type:FLOAT.0
	float                            _0x8AEFE056;                     // type:FLOAT.0
	float                            _0x9F43CB1B;                     // type:FLOAT.0
	float                            _0xBDDB026C;                     // type:FLOAT.0
	uint                             _0xFAA56131;                     // type:UINT.0
	uint                             _0xFEABDDC5;                     // type:UINT.0
	uint                             _0x41856A56;                     // type:UINT.0
	uint                             _0xEF61C8FD;                     // type:UINT.0
	uint                             _0x893883FF;                     // type:UINT.0
};

struct _0xA288166D : _0xAB76836B
{
};

struct _0xA288A66E
{
	array<struct _0x1DF4F1CA, 6>     _0x5905980B;                     // type:ARRAY.ATFIXEDARRAY
	bool                             _0x466665B8;                     // type:BOOL.0
	bool                             _0xC1DD6401;                     // type:BOOL.0
	bool                             _0xEBBFB2E4;                     // type:BOOL.0
	bool                             _0xCFF59BA8;                     // type:BOOL.0
};

struct _0xA2905954
{
	array<struct _0x686C9D78>        _0xE5DDC13E;                     // type:ARRAY._0x2087BB00
};

struct _0xA298EB03 : _0x8A0DC979
{
	enum eUiEventChannels            EventChannel;                    // type:ENUM.32BIT
	string                           EventType;                       // type:STRING.ATNSHASHSTRING
};

struct _0xA29C7FAB
{
	bool                             _0x7D49D545;                     // type:BOOL.0
	float                            _0x9D92AEAC;                     // type:FLOAT.0
	float                            _0xFC03D639;                     // type:FLOAT.0
	float                            _0xA0094B78;                     // type:FLOAT.0
	float                            _0x78A749E1;                     // type:FLOAT.0
};

struct _0xA2AD6D6B : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xA2C3618D
{
	struct _0x42E9AE1B                  _0x9A683B87;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x42E9AE1B>     _0xDFE3813B;                     // type:MAP.ATBINARYMAP
};

struct _0xA2CB7B84
{
	enum _0x6BCA108F                 _0x54437846;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xBB6CE933;                     // type:ENUM.32BIT
};

struct _0xA2CDC1F6 : CTuning
{
	float                            _0x97A6D110;                     // type:FLOAT.0
	float                            _0x5359B004;                     // type:FLOAT.0
	float                            _0x9296917F;                     // type:FLOAT.0
	struct _0xEAA4214A               _0x5670EF36;                     // type:STRUCT.STRUCTURE
	struct _0xEAA4214A               _0x43C0CB11;                     // type:STRUCT.STRUCTURE
	array<float>                     _0x4C347C4D;                     // type:ARRAY.ATARRAY
};

struct _0xA2D09560 : _0xE62F2784
{
	struct _0xBF2BD132               _0x79B1A322;                     // type:STRUCT.STRUCTURE
};

struct _0xA2DD50F4 : CTuning
{
	struct _0x155C8726               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xA2E225BD
{
	array<struct _0x2A737CC3>        Regions;                         // type:ARRAY.ATARRAY
	array<struct _0xCEDFBF2E>        Bounds;                          // type:ARRAY.ATARRAY
};

struct _0xA2F7716A
{
	float                            size;                            // type:FLOAT.0
	float                            minSize;                         // type:FLOAT.0
	float                            maxSize;                         // type:FLOAT.0
	enum _0x62078C03                 type;                            // type:ENUM.32BIT
};

struct _0xA2F97C23
{
	array<struct _0x891B2A0F>        initialTransitions;              // type:ARRAY.ATARRAY
	array<struct _0xDD71C9B4>        states;                          // type:ARRAY.ATARRAY
	struct _0x90203E04               editorData;                      // type:STRUCT.POINTER
};

struct _0xA2FE6973
{
	vec4V                            weights;                         // type:VEC4V.0
	ushort                           vtxIndex;                        // type:USHORT.0
	ushort                           index0;                          // type:USHORT.0
	ushort                           index1;                          // type:USHORT.0
	ushort                           index2;                          // type:USHORT.0
	ushort                           index3;                          // type:USHORT.0
	ushort                           index4;                          // type:USHORT.0
	ushort                           index5;                          // type:USHORT.0
	ushort                           index6;                          // type:USHORT.0
	vec3V                            vtxPosition;                     // type:VEC3V.0
};

struct _0xA303C489
{
	vec3V                            _0x7AF3550E;                     // type:VEC3V.0
	float                            _0x07DA9869;                     // type:FLOAT.0
	float                            _0xBA072C5E;                     // type:FLOAT.2
	float                            _0x57A6F432;                     // type:FLOAT.2
};

struct _0xA30410E1
{
	string                           Key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3CE1926D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0CF9C56E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE30C534B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA31983BA : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xA3252AA9 : CBaseSaveObject
{
	uint                             dataVersion;                     // type:UINT.0
	struct _0x633C8069               id;                              // type:STRUCT.STRUCTURE
	array<struct _0x00D9C43E>        _0x83CC65E7;                     // type:ARRAY.ATARRAY
	uint                             GameClockHour;                   // type:UINT.0
	uint                             GameClockMinute;                 // type:UINT.0
	uint                             GameClockSecond;                 // type:UINT.0
	uint                             GameClockDay;                    // type:UINT.0
	uint                             GameClockMonth;                  // type:UINT.0
	uint                             GameClockYear;                   // type:UINT.0
};

struct _0xA3253E11 : uiEventDataBase
{
};

struct _0xA340C2F7
{
	array<struct _0xF479EE77>        Archetypes;                      // type:ARRAY.ATARRAY
	array<struct _0x4FC603BE>        _0xE3621EAF;                     // type:ARRAY.ATARRAY
};

struct _0xA34B0703
{
	float                            ReachHeight;                     // type:FLOAT.0
	float                            ReachHeightVariation;            // type:FLOAT.0
	float                            ReachDepth;                      // type:FLOAT.0
	float                            MaxReachAngle;                   // type:FLOAT.0
	float                            MaxReachRange;                   // type:FLOAT.0
	array<string>                    AllowedItems;                    // type:ARRAY.ATARRAY
	string                           IsAboutToRansackIdleType;        // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                AttachBone;                      // type:ENUM.32BIT
	string                           PromptText;                      // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xCB1AB63D>         _0x7CD9771B;                     // type:BITSET.32BIT
};

struct _0xA35432B6
{
	uint                             CountMax;                        // type:UINT.0
	float                            DelayMin;                        // type:FLOAT.0
	float                            DelayMax;                        // type:FLOAT.0
	float                            _0x47F139A7;                     // type:FLOAT.0
};

struct _0xA3560B9E
{
	vec3V                            LocalStart;                      // type:VEC3V.0
	vec3V                            LocalEnd;                        // type:VEC3V.0
	float                            CapsuleRadius;                   // type:FLOAT.0
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x855C8490>         Flags;                           // type:BITSET.32BIT
};

struct _0xA3614D9D
{
	float                            _0xCC7175FA;                     // type:FLOAT.0
	float                            _0x90FE14C4;                     // type:FLOAT.0
	float                            _0x934C7E33;                     // type:FLOAT.0
};

struct _0xA36FB31B
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD46C0F26;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x351DD53D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xABA06698;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x8CF12DDC                 SpawnType;                       // type:ENUM.32BIT
	enum _0x50751CBA                 Priority;                        // type:ENUM.32BIT
	enum _0x5CD2D67C                 _0xC00DA261;                     // type:ENUM.32BIT
	string                           RelationshipGroup;               // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x2436FAFC;                     // type:BOOL.0
	bool                             _0x02929B91;                     // type:BOOL.0
};

struct _0xA381BF68
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            ImpulseMultiplier;               // type:FLOAT.0
	float                            WeaponImpulseMultiplier;         // type:FLOAT.0
	float                            HumanMinimumSpeedImpulseMultiplier; // type:FLOAT.0
	float                            HumanMaximumSpeedImpulseMultiplier; // type:FLOAT.0
	float                            HorseMinimumSpeedImpulseMultiplier; // type:FLOAT.0
	float                            HorseMaximumSpeedImpulseMultiplier; // type:FLOAT.0
	float                            ObjectMinimumSpeedImpulseMultiplier; // type:FLOAT.0
	float                            ObjectMaximumSpeedImpulseMultiplier; // type:FLOAT.0
	enum SoftBoundType               SoftBoundType;                   // type:ENUM.32BIT
};

struct _0xA381C82A
{
	enum _0xF4289B39                 displayType;                     // type:ENUM.32BIT
	struct _0x0A510DA9               condition;                       // type:STRUCT.POINTER
};

struct _0xA38642CA : _0x17DBDAA9
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0xA3A48573 : CTuning
{
	int                              _0x6FB993D5;                     // type:INT.0
	float                            _0xF4718FBE;                     // type:FLOAT.0
	float                            _0xA369F0D8;                     // type:FLOAT.0
};

struct _0xA3A6919D
{
	string                           AppID;                           // type:STRING.ATNSHASHSTRING
	string                           EntryPoint;                      // type:STRING.ATNONFINALHASHSTRING
	string                           TextureName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Txd;                             // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA3C55222
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetIdFemale;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           FilterId;                        // type:STRING.ATNONFINALHASHSTRING
	string                           PartialBodyFilterId;             // type:STRING.ATNONFINALHASHSTRING
	string                           PartialBodyAndHeadFilterId;      // type:STRING.ATNONFINALHASHSTRING
	string                           TargetClipId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ProbesSet;                       // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x57648AD4>         Flags;                           // type:BITSET.32BIT
	enum _0x580314CC                 AttachSlot;                      // type:ENUM.32BIT
	float                            DefaultBlendOutDuration;         // type:FLOAT.0
	float                            ForcedDetachPhase;               // type:FLOAT.0
};

struct _0xA3CC2B5A
{
	array<struct _0x2F78405A>        MotionTypesByPriority;           // type:ARRAY.ATARRAY
};

struct _0xA3CF2D56 : _0xF643E290
{
	string                           _0x43AC121D;                     // type:STRING.ATSTRING
	string                           component;                       // type:STRING.ATNONFINALHASHSTRING
	float                            value;                           // type:FLOAT.0
};

struct _0xA3D6EB84 : CTuning
{
	float                            _0xE27A2280;                     // type:FLOAT.0
	float                            _0xE8E46AA8;                     // type:FLOAT.0
	float                            _0x8D2BE8AD;                     // type:FLOAT.0
	float                            _0x1A5FD9B6;                     // type:FLOAT.0
	float                            _0x8B74F9C4;                     // type:FLOAT.0
	bool                             _0x95AE31D6;                     // type:BOOL.0
	float                            _0x9A54A9E3;                     // type:FLOAT.0
	float                            _0xC33C7756;                     // type:FLOAT.0
	float                            _0xEA62E51F;                     // type:FLOAT.0
	float                            _0xB4F986BB;                     // type:FLOAT.0
	float                            _0x05CA8B3B;                     // type:FLOAT.0
};

struct _0xA3E4F916
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0xA41F7A20
{
	vec3V                            vStartPosition;                  // type:VEC3V.0
	vec3V                            _0xA45AC973;                     // type:VEC3V.0
	vec3V                            _0x33F8306B;                     // type:VEC3V.0
	float                            _0x05449D15;                     // type:FLOAT.0
	int                              _0xDF1C7EE9;                     // type:INT.0
	uint                             _0x1863CE8E;                     // type:UINT.0
	bool                             _0x008BE39D;                     // type:BOOL.0
	string                           _0xF24B0F26;                     // type:STRING.ATSTRING
};

struct _0xA4409430 : CTuning
{
	float                            _0x38147EBD;                     // type:FLOAT.0
	float                            _0x0795BEF7;                     // type:FLOAT.0
	float                            _0xD9506940;                     // type:FLOAT.0
	float                            _0x0860C6C9;                     // type:FLOAT.0
	float                            _0x1E392384;                     // type:FLOAT.0
	float                            _0x3BCA76D9;                     // type:FLOAT.0
	float                            _0xEA57E65B;                     // type:FLOAT.0
	float                            _0x238D0C4C;                     // type:FLOAT.0
	float                            _0x25E0A14D;                     // type:FLOAT.0
	float                            _0xC2EE7EB7;                     // type:FLOAT.0
};

struct _0xA4537302
{
	vec3V                            Pos;                             // type:VEC3V.0
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Region;                          // type:STRING.ATNONFINALHASHSTRING
	bool                             MustBeInGuardZone;               // type:BOOL.0
};

struct _0xA469EE3D
{
	string                           damageName;                      // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0xA714B880;                     // type:ARRAY.ATARRAY
	array<vec4V>                     _0xD2BF46A4;                     // type:ARRAY.ATARRAY
	float                            _0x29562933;                     // type:FLOAT.0
	float                            _0xCFCFD4C1;                     // type:FLOAT.0
	float                            _0xC16F216F;                     // type:FLOAT.0
	float                            _0xD0C31537;                     // type:FLOAT.0
	float                            _0xC33EDCC4;                     // type:FLOAT.0
	float                            _0xC4AD68ED;                     // type:FLOAT.0
	float                            _0x86DA680D;                     // type:FLOAT.0
	float                            _0x2B9D6150;                     // type:FLOAT.0
};

struct _0xA46E3B1A : UIBehavior
{
	uint                             Delay;                           // type:UINT.0
	enum _0xA26483B4                 Direction;                       // type:ENUM.32BIT
};

struct _0xA4723B41 : CTuning
{
	float                            _0xCE4C3F63;                     // type:FLOAT.0
	float                            _0xFD7B6470;                     // type:FLOAT.0
	float                            _0x30A96989;                     // type:FLOAT.0
	float                            _0xAAF5EECD;                     // type:FLOAT.0
};

struct _0xA4857667 : _0xF206AE70
{
	string                           _0x643916D9;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 _0x9F894189;                     // type:ENUM.32BIT
	string                           _0x5058BF1A;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 _0x16061F02;                     // type:ENUM.32BIT
	string                           _0xA63AA698;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 _0x1F67D783;                     // type:ENUM.32BIT
};

struct _0xA4A122D1 : _0x5BA1A146
{
	enum _0x7A4B2B1E                 Timer;                           // type:ENUM.32BIT
	enum _0xC1B2D080                 RestoreMode;                     // type:ENUM.32BIT
};

struct _0xA4BAFFF2
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7F5D466C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8F0A3ADB;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xAE30BA59                 Phase;                           // type:ENUM.32BIT
	array<string>                    _0xE91F2022;                     // type:ARRAY.ATARRAY
	int                              _0x97B976E5;                     // type:INT.0
};

struct _0xA4F06CAB
{
	string                           VfxAmmoBloodInfoHashName;        // type:STRING.ATNONFINALHASHSTRING
	string                           VfxAmmoWeaponImpactInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	string                           VfxAmmoTracerInfoHashName;       // type:STRING.ATNONFINALHASHSTRING
	string                           VfxAmmoMuzzleFlashInfoHashName;  // type:STRING.ATNONFINALHASHSTRING
	string                           VfxAmmoShellInfoHashName;        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA4FFA5A2
{
	string                           boneName;                        // type:STRING.ATSTRING
	float                            strength;                        // type:FLOAT.0
	float                            radius;                          // type:FLOAT.0
	float                            damageVelThreshold;              // type:FLOAT.0
};

struct _0xA50A773D
{
	int                              _0xCD0F138E;                     // type:INT.0
	uint                             _0x3B38507E;                     // type:UINT.0
};

struct _0xA51BC359
{
	struct _0x20C48CEA               VelocityInheritance;             // type:STRUCT.STRUCTURE
	float                            PhaseToBlendOut;                 // type:FLOAT.0
	float                            BlendOutDelta;                   // type:FLOAT.0
	float                            _0xD5C64673;                     // type:FLOAT.0
	string                           _0xF7FA7B7F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA6FDC808;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x78E1F7E3;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA52181F3 : _0xE360F0CE
{
};

struct _0xA52C9432 : _0xB60BDAA8
{
	bitset<enum _0xEA122A7F>         _0x50BAA60B;                     // type:BITSET.32BIT
};

struct _0xA53476B3
{
	float                            DefaultFriction;                 // type:FLOAT.0
	float                            FrictionAfterNonGroundHit;       // type:FLOAT.0
	float                            FrictionAfterGroundHitParallel;  // type:FLOAT.0
	float                            FrictionAfterGroundHitPerpendicular; // type:FLOAT.0
	float                            ElasticityAfterNonGroundHit;     // type:FLOAT.0
	float                            ElasticityAfterGroundHitParallel; // type:FLOAT.0
	float                            ElasticityAfterGroundHitPerpendicular; // type:FLOAT.0
	float                            MaxGroundBounceOffSpeed;         // type:FLOAT.0
	float                            MaxWallBounceOffSpeed;           // type:FLOAT.0
};

struct _0xA55010A3 : _0x2F7DA38D
{
};

struct _0xA559CA99 : _0x9B03B63C
{
};

struct _0xA55CA0EA
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0x2DC99F4D;                     // type:BOOL.0
	bool                             _0xCB567576;                     // type:BOOL.0
	bool                             _0x52CA6C66;                     // type:BOOL.0
	float                            _0x5F2C8F8B;                     // type:FLOAT.0
	float                            _0x9D360064;                     // type:FLOAT.0
	float                            _0x9E1F1DC6;                     // type:FLOAT.0
	float                            _0xAA1D04F7;                     // type:FLOAT.0
	float                            _0x622B4E68;                     // type:FLOAT.0
	float                            _0x52E30477;                     // type:FLOAT.0
	bool                             _0x7687E4F1;                     // type:BOOL.0
	uint                             _0x38A7D42C;                     // type:UINT.0
	bool                             _0x0BE73D63;                     // type:BOOL.0
	bool                             _0x835F20A4;                     // type:BOOL.0
	bool                             _0x8DF320B3;                     // type:BOOL.0
	bool                             _0x2F6CDA64;                     // type:BOOL.0
	float                            _0xF6C9A76E;                     // type:FLOAT.0
	float                            _0xFD2F6403;                     // type:FLOAT.0
	float                            _0x5B1904D5;                     // type:FLOAT.0
	float                            _0x832182FD;                     // type:FLOAT.0
	float                            _0xC66EEDF3;                     // type:FLOAT.0
	bool                             _0xCBB229CB;                     // type:BOOL.0
	float                            _0xCA2739FC;                     // type:FLOAT.0
	float                            _0x13F11811;                     // type:FLOAT.0
	float                            _0x72EEE9A7;                     // type:FLOAT.0
	float                            _0xA3291698;                     // type:FLOAT.0
	float                            _0x2FB49529;                     // type:FLOAT.0
	bool                             _0xB581BC17;                     // type:BOOL.0
	float                            _0xAB2A9D82;                     // type:FLOAT.0
	float                            _0x4CDB8103;                     // type:FLOAT.0
	float                            _0xC9007047;                     // type:FLOAT.0
	bool                             _0x07906908;                     // type:BOOL.0
	float                            _0xA6DC18EC;                     // type:FLOAT.0
	float                            _0x57645F2E;                     // type:FLOAT.0
	bool                             _0x5D9D206F;                     // type:BOOL.0
	float                            _0xBACC8570;                     // type:FLOAT.0
	bool                             _0xC16063D4;                     // type:BOOL.0
	float                            _0xA29B64B3;                     // type:FLOAT.0
	float                            _0x35D5DA2D;                     // type:FLOAT.0
};

struct _0xA562D8F4 : CTuning
{
	float                            _0x6BC3D120;                     // type:FLOAT.0
	float                            _0x6A28599E;                     // type:FLOAT.0
	float                            _0x1E52626E;                     // type:FLOAT.0
	float                            _0x25E6A243;                     // type:FLOAT.0
	float                            _0x193EADA6;                     // type:FLOAT.0
	float                            _0xD3D6CCBB;                     // type:FLOAT.0
	float                            _0x3A2DC1EB;                     // type:FLOAT.0
	float                            _0xFF38DF9F;                     // type:FLOAT.0
	float                            _0x5D97FEFF;                     // type:FLOAT.0
	float                            _0x3705EB8C;                     // type:FLOAT.0
	float                            _0xD3531F7E;                     // type:FLOAT.0
	float                            _0x41C111B8;                     // type:FLOAT.0
	float                            _0x48C127FB;                     // type:FLOAT.0
	float                            _0x07DC1F5B;                     // type:FLOAT.0
	float                            _0x3A158E31;                     // type:FLOAT.0
	float                            _0xF6A363F7;                     // type:FLOAT.0
	float                            _0x6BB90924;                     // type:FLOAT.0
	uint                             _0x27DE6329;                     // type:UINT.0
	uint                             _0xDC3014D1;                     // type:UINT.0
	uint                             _0x242D8C69;                     // type:UINT.0
};

struct _0xA57BA3ED
{
	string                           Type;                            // type:STRING.ATSTRING
};

struct _0xA5818652
{
	bool                             _0xED5B2E2B;                     // type:BOOL.0
	string                           _0xEF84865C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x52CD2D18;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6E5177B2;                     // type:FLOAT.0
	float                            _0x208995DF;                     // type:FLOAT.0
	float                            _0x177A9E41;                     // type:FLOAT.0
	float                            _0x8AC2495A;                     // type:FLOAT.0
	float                            _0x2DD99886;                     // type:FLOAT.0
};

struct _0xA588DCC3
{
	array<struct _0x1FC5ADD8, 2>     _0x3653A9F9;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0xA58DFA0C
{
	array<struct _0x6C6B5587>        _0xFD28A5FD;                     // type:ARRAY.ATARRAY
	array<struct _0x6C6B5587>        _0xE6F4E230;                     // type:ARRAY.ATARRAY
	float                            _0x66E63103;                     // type:FLOAT.0
	float                            _0xA05C7648;                     // type:FLOAT.0
};

struct _0xA5AEF5E0
{
	array<struct _0x3F3514D9>        QualityMapItems;                 // type:ARRAY.ATARRAY
	array<struct _0xBE1B0044>        Items;                           // type:ARRAY.ATARRAY
	array<struct _0x3F3514D9>        _0x56585988;                     // type:ARRAY.ATARRAY
	array<struct _0xBE1B0044>        MPItems;                         // type:ARRAY.ATARRAY
};

struct _0xA5C0FF6B
{
	array<struct _0xCA4C219E>        Species;                         // type:ARRAY.ATARRAY
};

struct _0xA5D4CB80 : CAICondition
{
};

struct _0xA5D52F80 : _0x6F0C770E
{
	float                            _0x59AC0E95;                     // type:FLOAT.0
	float                            _0xEBF56C2C;                     // type:FLOAT.0
};

struct _0xA5E7358F : uiEventDataBase
{
};

struct _0xA6283223 : _0x5EFEBD79
{
	struct _0xE19E0658               _0x03EFD81F;                     // type:STRUCT.POINTER
	bool                             _0xE825C15F;                     // type:BOOL.0
	bool                             createEntity;                    // type:BOOL.0
	bitset<enum _0xEA2382FC>         _0x22C683CA;                     // type:BITSET.32BIT
	struct _0xED16C5B0               _0x94E46079;                     // type:STRUCT.STRUCTURE
};

struct _0xA63CA67E
{
	enum _0xDB93DAF7                 GameMode;                        // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	enum _0x5E57473B                 Mode;                            // type:ENUM.32BIT
	string                           Event;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA63E3429 : _0xED23B004
{
	ushort                           Value;                           // type:USHORT.0
};

struct _0xA64034D1
{
	string                           _0x056F1B40;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Time;                            // type:FLOAT.0
};

struct _0xA6598018
{
	string                           RandomEventName;                 // type:STRING.ATNONFINALHASHSTRING
	enum _0xE27BD161                 RandomEventType;                 // type:ENUM.32BIT
};

struct _0xA65C1565 : _0x940B34F5
{
};

struct _0xA662FF19 : CTuning
{
	struct TaskInCoverTunables       TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xA6679FF8
{
	struct CCoverPointNode           _0x89F1605A;                     // type:STRUCT.STRUCTURE
	vec3V                            _0x82F5D32D;                     // type:VEC3V.0
	string                           ObjectName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA6922C70
{
	float                            _0xB50637BC;                     // type:FLOAT.0
	int                              _0x21E0FB8A;                     // type:INT.0
	int                              numFrames;                       // type:INT.0
};

struct _0xA693B90A : StatsGoalScoreSourceGroupBase
{
	enum eCompendiumCategories       category;                        // type:ENUM.32BIT
	string                           subcategory;                     // type:STRING.ATNONFINALHASHSTRING
	string                           BaseId;                          // type:STRING.ATNSHASHSTRING
};

struct _0xA697DCA7
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0xA6994B2C
{
	map<string, struct _0x6F5398EE>     _0x4FBF409B;                     // type:MAP.ATBINARYMAP
	bool                                _0x0B5129B0;                     // type:BOOL.0
	bool                                _0x1B455641;                     // type:BOOL.0
	bool                                _0x98BEC0D5;                     // type:BOOL.0
	bool                                _0x78051566;                     // type:BOOL.0
	uint                                _0x217BC7AE;                     // type:UINT.0
	uint                                _0xDAC44429;                     // type:UINT.0
	float                               _0x753F5205;                     // type:FLOAT.0
	float                               _0x1271CEF6;                     // type:FLOAT.0
	float                               _0x4319B91B;                     // type:FLOAT.0
	float                               _0xF6B89040;                     // type:FLOAT.0
	float                               _0xD3014193;                     // type:FLOAT.0
	float                               _0x0E99E6E0;                     // type:FLOAT.0
	float                               _0x2B874268;                     // type:FLOAT.0
	float                               _0x4CE6FE52;                     // type:FLOAT.0
};

struct _0xA69C4A4C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            HearingRange;                    // type:FLOAT.0
	float                            SmellingRangeNoWind;             // type:FLOAT.0
	float                            SmellingRangeWind;               // type:FLOAT.0
	float                            SeeingRangeMin;                  // type:FLOAT.0
	float                            SeeingRangeMax;                  // type:FLOAT.0
	float                            SeeingRangePeripheralMin;        // type:FLOAT.0
	float                            SeeingRangePeripheralMax;        // type:FLOAT.0
	float                            IdentificationRangeMin;          // type:FLOAT.0
	float                            IdentificationRangeMax;          // type:FLOAT.0
	float                            VisualFieldMinAzimuthAngle;      // type:FLOAT.0
	float                            VisualFieldMaxAzimuthAngle;      // type:FLOAT.0
	float                            VisualFieldMinElevationAngle;    // type:FLOAT.0
	float                            VisualFieldMaxElevationAngle;    // type:FLOAT.0
	float                            CentreFieldOfGazeMaxAngle;       // type:FLOAT.0
	uint                             MovementDetectionTime;           // type:UINT.0
	float                            VelocityThresholdClose;          // type:FLOAT.0
	float                            VelocityThresholdCloseCrouched;  // type:FLOAT.0
	float                            VelocityThresholdFar;            // type:FLOAT.0
	float                            VelocityThresholdFarCrouched;    // type:FLOAT.0
	string                           PerceptionRangeModifierHash;     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA6A1FDF0
{
	enum _0x9DB65C31                 _0x6CC3A318;                     // type:ENUM.32BIT
	uint                             _0x08D7A12A;                     // type:UINT.0
	float                            _0xD4E57378;                     // type:FLOAT.0
	array<struct _0x3CFA8C79>        _0xD0E5E15C;                     // type:ARRAY.ATARRAY
};

struct _0xA6B8916E
{
	struct _0xF7380478               LogTextureData;                  // type:STRUCT.STRUCTURE
	string                           AwardId;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA6D36313 : _0xDE795AEA
{
};

struct _0xA709E487 : _0x01843326
{
	string                           _0x0484B0AB;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA7184F51
{
	vec2V                            ApproachRadius;                  // type:VEC2V.0
	vec2V                            AttackProbability;               // type:VEC2V.0
	vec2V                            PreventGrappleProbability;       // type:VEC2V.0
	vec2V                            ChokeProbability;                // type:VEC2V.0
	vec2V                            CounterProbability;              // type:VEC2V.0
	vec2V                            ChokeLengthInMs;                 // type:VEC2V.0
	vec2V                            StruggleStageLengthInMs;         // type:VEC2V.0
	vec2V                            BreakoutTimeoutRangeInMs;        // type:VEC2V.0
	float                            StruggleDurationInSec;           // type:FLOAT.0
	bool                             CanGrappleAsAI;                  // type:BOOL.0
};

struct _0xA72CDC8B : _0xE3C64D0E
{
};

struct _0xA75DE73E : _0xBC5F7FDF
{
	uint64                           UniqueId;                        // type:UINT64.0
	struct _0x4A7AD954               _0xEE690195;                     // type:STRUCT.STRUCTURE
};

struct _0xA76D1305
{
	float                            VelocityMin;                     // type:FLOAT.0
	float                            VelocityMax;                     // type:FLOAT.0
	float                            ForceAtMinVelocity;              // type:FLOAT.0
	float                            ForceAtMaxVelocity;              // type:FLOAT.0
	bool                             ScaleWithUpright;                // type:BOOL.0
};

struct _0xA785C4C2 : _0x8A0DC979
{
};

struct _0xA79E3D31
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xDA608364                 Type;                            // type:ENUM.32BIT
	float                            RadiusMin;                       // type:FLOAT.0
	float                            RadiusMax;                       // type:FLOAT.0
	float                            _0x8EA315D1;                     // type:FLOAT.0
	float                            _0x07FE1175;                     // type:FLOAT.0
	float                            RotationMin;                     // type:FLOAT.0
	float                            RotationMax;                     // type:FLOAT.0
	float                            _0x9B13A30D;                     // type:FLOAT.0
	bool                             _0x9677F12B;                     // type:BOOL.0
	float                            _0xF2114F58;                     // type:FLOAT.0
	float                            _0x830C51F7;                     // type:FLOAT.0
	float                            _0x0B635EEF;                     // type:FLOAT.0
	float                            _0x74850296;                     // type:FLOAT.0
	float                            Displacement;                    // type:FLOAT.0
	float                            _0xC5D7A7C4;                     // type:FLOAT.0
	float                            _0x35F4535F;                     // type:FLOAT.0
	struct _0x03E3A9D0               Skin;                            // type:STRUCT.STRUCTURE
	struct _0x03E3A9D0               Cloth;                           // type:STRUCT.STRUCTURE
	struct _0x03E3A9D0               _0x3D222159;                     // type:STRUCT.STRUCTURE
	float                            RejectRadius;                    // type:FLOAT.0
	vec3V                            _0x1BA0D168;                     // type:VEC3V.0
	float                            _0x273277B0;                     // type:FLOAT.0
	float                            FadeInTime;                      // type:FLOAT.0
	float                            FadeOutTime;                     // type:FLOAT.0
	float                            FadeOutStartTime;                // type:FLOAT.0
	float                            _0x7F81DC95;                     // type:FLOAT.0
	float                            _0xDC08D9B9;                     // type:FLOAT.0
	float                            _0xEB5E5445;                     // type:FLOAT.0
	float                            _0xAA31E08C;                     // type:FLOAT.0
	float                            ScaleStart;                      // type:FLOAT.0
	float                            _0xF8E4EE2C;                     // type:FLOAT.0
	float                            _0x4BBDEF84;                     // type:FLOAT.0
	bitset<enum _0xC5EADBF2>         Flags;                           // type:BITSET.32BIT
	float                            _0x2D68B677;                     // type:FLOAT.0
	float                            _0x075EAAFF;                     // type:FLOAT.0
	float                            _0x03A0D328;                     // type:FLOAT.0
	float                            _0x048E4C9D;                     // type:FLOAT.0
	float                            _0x8A602F14;                     // type:FLOAT.0
	float                            _0x0379C210;                     // type:FLOAT.0
	float                            _0x9733F1A6;                     // type:FLOAT.0
	float                            _0xFB96FFAC;                     // type:FLOAT.0
	float                            _0x4C042979;                     // type:FLOAT.0
	float                            _0xEE357BFB;                     // type:FLOAT.0
	float                            _0x99490FED;                     // type:FLOAT.0
	float                            _0x178AC469;                     // type:FLOAT.0
	array<struct _0x3F630F1E>        compositeSettings;               // type:ARRAY.ATARRAY
	struct _0x71360BE5               _0x186BAD8E;                     // type:STRUCT.STRUCTURE
};

struct _0xA7BA3891 : _0x1FB1BCEA
{
};

struct _0xA7D52E3B
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           SceneTerrainData;                // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA7D663F0
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           slotid;                          // type:STRING.ATNONFINALHASHSTRING
	bool                             equipped;                        // type:BOOL.0
	int                              quantity;                        // type:INT.0
	array<struct _0xA7D663F0>        items;                           // type:ARRAY.ATARRAY
};

struct _0xA7E37FBA
{
	bool                             _0x6F246043;                     // type:BOOL.0
};

struct _0xA7FB0217 : _0x1054F746
{
};

struct _0xA8067440 : _0x32C0AB5B
{
};

struct _0xA8202F7A
{
	struct _0x9F43B9D3               renderFeatureSet;                // type:STRUCT.STRUCTURE
	bool                             isDefault;                       // type:BOOL.0
	string                           shaderName;                      // type:STRING.ATSTRING
	string                           techniqueName;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA8216D1F : uiSelectableBehaviorBase
{
};

struct _0xA831A788 : camBaseObjectMetadata
{
	struct _0x8E9E33E8               _0x0AB726EA;                     // type:STRUCT.STRUCTURE
	struct _0xD6A9AF78               _0xE8294186;                     // type:STRUCT.STRUCTURE
	vec2                             _0x456B36AE;                     // type:VECTOR2.0
	vec2                             _0xE4FB5618;                     // type:VECTOR2.0
	vec2                             _0xC4BCFD56;                     // type:VECTOR2.0
	vec3                             RelativeOffset;                  // type:VECTOR3.0
	bool                             _0xE1D39CA4;                     // type:BOOL.0
	vec2                             _0xFE2A0E4E;                     // type:VECTOR2.0
	float                            _0xFA1A6461;                     // type:FLOAT.0
	enum _0x0100F80E                 _0x698B932F;                     // type:ENUM.32BIT
	bool                             _0x825970EA;                     // type:BOOL.0
	bool                             _0x5513E4A1;                     // type:BOOL.0
	enum eAnimBoneTag                _0x36111C77;                     // type:ENUM.32BIT
	bool                             _0xFBD9304B;                     // type:BOOL.0
	float                            _0xE1E40779;                     // type:FLOAT.0
	bool                             _0x4B9602A2;                     // type:BOOL.0
	bool                             _0x11051142;                     // type:BOOL.0
	bool                             _0x04C274CB;                     // type:BOOL.0
	float                            _0x47CC2E0E;                     // type:FLOAT.0
	float                            _0xCC26F5C7;                     // type:FLOAT.0
	bool                             _0x5EFB99B8;                     // type:BOOL.0
	float                            _0x1EA49EC8;                     // type:FLOAT.0
	float                            _0xDCD5E091;                     // type:FLOAT.0
};

struct _0xA848AF02 : _0x1DE1294D
{
	enum _0x4D6A9426                 Operation;                       // type:ENUM.32BIT
};

struct _0xA857C640 : CNmParameter
{
	int                              Priority;                        // type:INT.0
};

struct _0xA866E29F
{
};

struct _0xA86EC008
{
	enum _0x99BEE274                 Stance;                          // type:ENUM.32BIT
	enum _0xFB8561BD                 HolsteringWeaponType;            // type:ENUM.32BIT
	enum eWeaponAttachPoint          HolsteringWeaponAttachPoint;     // type:ENUM.32BIT
	enum _0xFB8561BD                 EquippingWeaponType;             // type:ENUM.32BIT
	enum eWeaponAttachPoint          EquippingWeaponAttachPoint;      // type:ENUM.32BIT
	enum _0x3528E310                 Type;                            // type:ENUM.32BIT
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA881D421
{
	string                           Suitability;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DisplayText;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, uint>                Lures;                           // type:MAP.ATMAP
};

struct _0xA8C4C75E
{
	enum _0xF9EF54FC                 Type;                            // type:ENUM.32BIT
	float                            Value;                           // type:FLOAT.0
};

struct _0xA8E6719B
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xDDDC7AC5                 State;                           // type:ENUM.32BIT
	int                              Priority;                        // type:INT.0
};

struct _0xA8EAEA58 : _0x8A0DC979
{
};

struct _0xA8FB03FC
{
	string                           InventoryItemId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ItemInteractionScriptId;         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA9051938 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0xA907BE14 : _0x0A510DA9
{
};

struct _0xA90B7F7E : _0x11AD3051
{
	array<string>                    sections;                        // type:ARRAY.ATARRAY
};

struct _0xA91E668E : _0x906508CE
{
};

struct _0xA92344E1 : _0x8A0DC979
{
};

struct _0xA92DF781 : CBaseSaveObject
{
	array<uint>                      _0x379DB246;                     // type:ARRAY.ATARRAY
	array<uint>                      _0x27A470C4;                     // type:ARRAY.ATARRAY
};

struct _0xA9321569 : _0x3F8365DA
{
	bool                             Wildcard;                        // type:BOOL.0
	int                              _0x22747DD8;                     // type:INT.0
};

struct _0xA93417F2
{
	array<struct _0xDACB86CA, 3>     CarryingMovementData;            // type:ARRAY.ATFIXEDARRAY
};

struct _0xA93F9D9B
{
	string                           tcLightningCloudBurst;           // type:STRING.ATNONFINALHASHSTRING
	string                           tcLightningStrikeOnly;           // type:STRING.ATNONFINALHASHSTRING
	string                           tcLightningDirectionalBurstWithStrike; // type:STRING.ATNONFINALHASHSTRING
};

struct _0xA9466596
{
	enum _0xA49E2473                 _0xB747EBEB;                     // type:ENUM.32BIT
	float                            _0x03979623;                     // type:FLOAT.0
	float                            _0xE4F761D3;                     // type:FLOAT.0
	float                            _0xB831DC90;                     // type:FLOAT.0
	float                            _0xFEE6F1DD;                     // type:FLOAT.0
	float                            _0xDCFE520D;                     // type:FLOAT.0
};

struct _0xA9519E08
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x78D43D56;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x4F8D066D;                     // type:FLOAT.0
	float                            _0x246069A0;                     // type:FLOAT.0
};

struct _0xA95E2621
{
	string                            name;                            // type:STRING.CONST_STRING
	string                            filter;                          // type:STRING.CONST_STRING
	string                            rumbleProfile;                   // type:STRING.ATNONFINALHASHSTRING
	string                            reactWeaponType;                 // type:STRING.ATNONFINALHASHSTRING
	string                            softBoundTuning;                 // type:STRING.ATNONFINALHASHSTRING
	enum _0x3B1F0870                  vfxGroup;                        // type:ENUM.32BIT
	enum _0xD1A12B2E                  vfxDisturbanceType;              // type:ENUM.32BIT
	enum _0x4FC2BB16                  terrainDifficulty;               // type:ENUM.32BIT
	enum DeepSurfaceViscosityType     deepSurfaceViscosityType;        // type:ENUM.32BIT
	float                             friction;                        // type:FLOAT.0
	float                             elasticity;                      // type:FLOAT.0
	float                             density;                         // type:FLOAT.0
	float                             tireGrip;                        // type:FLOAT.0
	float                             wetGripMult;                     // type:FLOAT.0
	float                             tireDrag;                        // type:FLOAT.0
	float                             topSpeedMult;                    // type:FLOAT.0
	float                             softness;                        // type:FLOAT.0
	float                             _0xC3AE5F59;                     // type:FLOAT.0
	float                             penetrationResistance;           // type:FLOAT.0
	float                             yield;                           // type:FLOAT.0
	float                             creep;                           // type:FLOAT.0
	float                             maxPlasticity;                   // type:FLOAT.0
	float                             poisson;                         // type:FLOAT.0
	float                             youngMPa;                        // type:FLOAT.0
	float                             visibilityScore;                 // type:FLOAT.0
	bitset<enum _0x9D1CACA9>          flags;                           // type:BITSET.32BIT
};

struct _0xA9606439
{
	bool                             Enabled;                         // type:BOOL.0
	float                            MinTimeSinceLastHostileAction;   // type:FLOAT.0
};

struct _0xA97154B9 : _0xE453720A
{
	int                              sector;                          // type:INT.0
	int                              sectorSpan;                      // type:INT.0
	int                              anchorOffsetX;                   // type:INT.0
	int                              anchorOffsetY;                   // type:INT.0
	float                            radialMargin;                    // type:FLOAT.0
};

struct _0xA973CF13 : _0xCF886463
{
};

struct _0xA9849ACB : _0x7EAFD12D
{
	bool                             Value;                           // type:BOOL.0
};

struct _0xA98C52B5
{
	float                            _0xAEC422BE;                     // type:FLOAT.0
	float                            _0x7ED9BCD2;                     // type:FLOAT.0
};

struct _0xA9926BD0
{
	bool                             UsesSpeechType;                  // type:BOOL.0
	bool                             IsNegative;                      // type:BOOL.0
	bool                             IsHostileAction;                 // type:BOOL.0
	bool                             IsIgnorable;                     // type:BOOL.0
	bool                             IsInput;                         // type:BOOL.0
	bool                             IsSupport;                       // type:BOOL.0
	bool                             IsMinorOffense;                  // type:BOOL.0
	bool                             IsInterrupting;                  // type:BOOL.0
	array<string>                    NegativeSpeechTypes;             // type:ARRAY.ATARRAY
	array<string>                    SupportSpeechTypes;              // type:ARRAY.ATARRAY
};

struct _0xA992C843
{
	float                            _0xFBAB49B7;                     // type:FLOAT.0
	float                            _0x6AF2C185;                     // type:FLOAT.0
	float                            MinTimeBetweenHitReacts;         // type:FLOAT.0
	float                            _0x6631589E;                     // type:FLOAT.0
};

struct _0xA995F7C3 : _0x224A5A64
{
	struct _0x19E46457               _0x537987FD;                     // type:STRUCT.STRUCTURE
	float                            _0xBF5769D1;                     // type:FLOAT.0
	bool                             _0x33CE21EA;                     // type:BOOL.0
	float                            _0x9CDABE1A;                     // type:FLOAT.0
};

struct _0xA9994D94
{
};

struct _0xA9A62128 : _0x27380F7A
{
};

struct _0xA9BDFC99
{
	struct _0xF030E31E               Forward;                         // type:STRUCT.STRUCTURE
	struct _0xF030E31E               Backward;                        // type:STRUCT.STRUCTURE
	struct _0xF030E31E               Right;                           // type:STRUCT.STRUCTURE
	struct _0xF030E31E               Left;                            // type:STRUCT.STRUCTURE
	float                            MinWalk;                         // type:FLOAT.0
};

struct _0xA9E96484
{
	struct _0x00DE4E3E               BadRoute;                        // type:STRUCT.STRUCTURE
	float                            NoCoverClosestThreat;            // type:FLOAT.0
	float                            LineOfSight;                     // type:FLOAT.0
	float                            Nearby;                          // type:FLOAT.0
	float                            NearbyAndCloser;                 // type:FLOAT.0
	float                            _0x3A9E5E9D;                     // type:FLOAT.0
	float                            OutsideAttackWindow;             // type:FLOAT.0
	float                            WeaponBlocked;                   // type:FLOAT.0
	float                            _0xD78A6906;                     // type:FLOAT.0
	float                            _0x90F5BFF6;                     // type:FLOAT.0
	float                            CoverUnprotected;                // type:FLOAT.0
	float                            _0xAAC6AFE5;                     // type:FLOAT.0
};

struct _0xAA0F4CE8
{
	array<string>                    Attachments;                     // type:ARRAY.ATARRAY
	string                           DefaultAttachment;               // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x5980A5DE>        ClothCollision;                  // type:ARRAY.ATARRAY
	struct _0x01686E3A               AttachingStartPoint;             // type:STRUCT.STRUCTURE
	float                            AttachingStartLoopRadius;        // type:FLOAT.0
	float                            AttachingStartVariationDistance; // type:FLOAT.0
	struct _0x01686E3A               AttachingFallbackTargetPoint;    // type:STRUCT.STRUCTURE
	struct _0x01686E3A               AttachingInterpolationTargetPoint; // type:STRUCT.STRUCTURE
	float                            AttachingInterpolationTargetLoopRadius; // type:FLOAT.0
	string                           PullForwardClipSetId;            // type:STRING.ATNONFINALHASHSTRING
	float                            MeleeActionRange;                // type:FLOAT.0
	float                            MinDistance;                     // type:FLOAT.0
	float                            MinTension;                      // type:FLOAT.0
	float                            MaxTension;                      // type:FLOAT.0
	float                            StruggleTime;                    // type:FLOAT.0
	bool                             PauseStruggleTimerWhileReeling;  // type:BOOL.0
};

struct _0xAA28D7FA
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x93011991;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             Enable;                          // type:BOOL.0
	enum _0x1A5EDBD6                 _0xCE20AB2B;                     // type:ENUM.32BIT
	enum _0x73295438                 _0xEC504D77;                     // type:ENUM.32BIT
	float                            _0x31830FF3;                     // type:FLOAT.0
	bitset<enum _0x720FB831>         _0xC58D8267;                     // type:BITSET.32BIT
	bitset<enum _0x5F961ADC>         _0x53B5A022;                     // type:BITSET.32BIT
	bitset<enum _0x349D9EF4>         _0x7E2CB8FB;                     // type:BITSET.32BIT
	float                            _0x65644F9D;                     // type:FLOAT.0
	float                            _0xB3D9F5C3;                     // type:FLOAT.0
	struct _0x46214E38               _0xF670D197;                     // type:STRUCT.STRUCTURE
	struct _0x46214E38               _0xCE851377;                     // type:STRUCT.STRUCTURE
	struct _0x0B500CE7               _0x48402092;                     // type:STRUCT.STRUCTURE
	struct _0xA2CB7B84               _0x634695DA;                     // type:STRUCT.STRUCTURE
	struct _0xA2CB7B84               _0x42CA0814;                     // type:STRUCT.STRUCTURE
};

struct _0xAA32F0E8
{
	bool                             _0x6402893C;                     // type:BOOL.0
	bool                             _0x5C7B56A9;                     // type:BOOL.0
	bool                             _0x283BFD0F;                     // type:BOOL.0
	enum eAnimBoneTag                _0xFF7401FE;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x5CC83CBE;                     // type:ENUM.32BIT
	vec3V                            _0x8E3B12A0;                     // type:VEC3V.0
	vec3V                            _0xF915BBB1;                     // type:VEC3V.0
	float                            _0xD00AC533;                     // type:FLOAT.0
	float                            _0x39A24512;                     // type:FLOAT.0
	float                            _0x4EB7A2B0;                     // type:FLOAT.0
	float                            _0xD1ADB693;                     // type:FLOAT.0
};

struct _0xAA3E8EED : CAICondition
{
};

struct _0xAA5C42E5 : _0xB4712173
{
	float                            _0xAF6C7D9F;                     // type:FLOAT.0
	float                            _0xEB316C80;                     // type:FLOAT.0
};

struct _0xAA5EF9DD
{
	bool                                            _0x48E5FEC0;                     // type:BOOL.0
	bool                                            _0x7F76BC90;                     // type:BOOL.0
	bool                                            _0xA4C72190;                     // type:BOOL.0
	bool                                            _0x35D4C7CD;                     // type:BOOL.0
	bool                                            _0x95137E00;                     // type:BOOL.0
	bool                                            _0x5401F8C0;                     // type:BOOL.0
	bool                                            _0x33ED01DD;                     // type:BOOL.0
	bool                                            _0x3E73A9D9;                     // type:BOOL.0
	bool                                            _0x30A54C8E;                     // type:BOOL.0
	bool                                            _0x99294FD0;                     // type:BOOL.0
	bool                                            _0x05F4292D;                     // type:BOOL.0
	bool                                            _0x39CF76F9;                     // type:BOOL.0
	bool                                            _0xA8D31001;                     // type:BOOL.0
	bool                                            _0xB0B2775E;                     // type:BOOL.0
	float                                           _0x8C9DB832;                     // type:FLOAT.0
	float                                           _0x7DE82811;                     // type:FLOAT.0
	float                                           _0x623BEF5A;                     // type:FLOAT.0
	float                                           _0xBF535C8A;                     // type:FLOAT.0
	float                                           _0xEE463A7D;                     // type:FLOAT.0
	float                                           _0xBDB72FDC;                     // type:FLOAT.0
	float                                           _0xAF7F1E59;                     // type:FLOAT.0
	float                                           _0x16DD658A;                     // type:FLOAT.0
	float                                           _0xB60A3EF9;                     // type:FLOAT.0
	bool                                            _0x4958C9C8;                     // type:BOOL.0
	float                                           _0x922628D6;                     // type:FLOAT.2
	string                                          _0x39D66753;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x495C5703;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xA03B9ECF;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x2DF9F0AB;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                            _0x17FEC92A;                     // type:BOOL.0
	float                                           _0x65C83CDA;                     // type:FLOAT.0
	float                                           _0x3177EA4D;                     // type:FLOAT.0
	float                                           _0x67156654;                     // type:FLOAT.0
	float                                           _0xCCE2EAF7;                     // type:FLOAT.0
	float                                           _0x6EAABFAA;                     // type:FLOAT.0
	float                                           _0xE336F473;                     // type:FLOAT.0
	float                                           _0xF595EE38;                     // type:FLOAT.0
	float                                           _0xF79137B8;                     // type:FLOAT.0
	float                                           _0xA85498A7;                     // type:FLOAT.0
	float                                           _0x9FEE6C9A;                     // type:FLOAT.0
	float                                           _0x1734A4B2;                     // type:FLOAT.0
	float                                           _0xA2855528;                     // type:FLOAT.0
	float                                           _0xC1ADC466;                     // type:FLOAT.0
	float                                           _0x54D7D1B9;                     // type:FLOAT.0
	float                                           _0x8BAAC539;                     // type:FLOAT.2
	float                                           _0xD1CE8830;                     // type:FLOAT.0
	string                                          _0x21DD4741;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x5D3B5644;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x341EDC24;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xD9FC9369;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                            _0x231B4CA4;                     // type:BOOL.0
	float                                           _0x5FFE4220;                     // type:FLOAT.0
	bitset<enum _0x85C15257>                        _0x794FFC5F;                     // type:BITSET.16BIT
	float                                           _0x9636D71F;                     // type:FLOAT.0
	bool                                            _0x53181667;                     // type:BOOL.0
	float                                           _0xFAB5E099;                     // type:FLOAT.0
	float                                           _0x653CA4F5;                     // type:FLOAT.0
	bool                                            _0x80AB078F;                     // type:BOOL.0
	float                                           _0x88F51971;                     // type:FLOAT.0
	float                                           _0x81BBD4E8;                     // type:FLOAT.0
	float                                           _0x677C8B1B;                     // type:FLOAT.0
	float                                           _0xF649AC53;                     // type:FLOAT.0
	float                                           _0x34E2ACC3;                     // type:FLOAT.0
	float                                           _0x1C710390;                     // type:FLOAT.0
	bool                                            _0xAC967E5A;                     // type:BOOL.0
	bitset<enum eMovementTransitionHelperFlags>     _0x4F365AC1;                     // type:BITSET.32BIT
	bitset<enum eMovementTransitionHelperFlags>     _0x61933EF5;                     // type:BITSET.32BIT
	bitset<enum eMovementTransitionHelperFlags>     _0x0D15F59D;                     // type:BITSET.32BIT
	bitset<enum eMovementTransitionHelperFlags>     _0xA4ABAAAF;                     // type:BITSET.32BIT
	bitset<enum eMovementTransitionHelperFlags>     _0x5125FC0C;                     // type:BITSET.32BIT
	bitset<enum eMovementTransitionHelperFlags>     _0xAA9C0F09;                     // type:BITSET.32BIT
	string                                          _0xDB441390;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xCE41747D;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xC85A300D;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x46E27697;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x122CDF42;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xB6B12A16;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0x94BD6AEA>                 _0xC2C5DBA7;                     // type:MAP.ATBINARYMAP
	string                                          _0x492F6D37;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x94BD6AEA                              _0x9F2FE162;                     // type:STRUCT.STRUCTURE
	struct _0x94BD6AEA                              _0x537CDCB9;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x94BD6AEA>                 _0x4FE676A4;                     // type:MAP.ATBINARYMAP
	struct _0x94BD6AEA                              _0x09B35F1B;                     // type:STRUCT.STRUCTURE
	struct _0x94BD6AEA                              _0xA445FDB0;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x94BD6AEA>                 _0xD5909350;                     // type:MAP.ATBINARYMAP
	struct _0x94BD6AEA                              _0xA87F8CC2;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x94BD6AEA>                 _0x9E2AAE15;                     // type:MAP.ATBINARYMAP
	string                                          _0x1F4A0821;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x893284B7;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x4EF30E53                              _0x31CE67BD;                     // type:STRUCT.STRUCTURE
	float                                           _0xDD907F69;                     // type:FLOAT.0
	float                                           _0xFFD0ACD6;                     // type:FLOAT.0
	float                                           _0xCD7FA9DF;                     // type:FLOAT.0
	float                                           _0x57876C39;                     // type:FLOAT.0
	float                                           _0xA927D8FE;                     // type:FLOAT.0
	bool                                            _0x1D25592B;                     // type:BOOL.0
	bool                                            _0x752928B5;                     // type:BOOL.0
	bool                                            _0x25CB5B20;                     // type:BOOL.0
	bool                                            _0x1C6FA230;                     // type:BOOL.0
	bool                                            _0x6BA23C5B;                     // type:BOOL.0
	bool                                            _0xDC1B8EE3;                     // type:BOOL.0
	bool                                            _0xA5429914;                     // type:BOOL.0
	bool                                            _0xE22D0D82;                     // type:BOOL.0
	bool                                            _0xD3FD2E8A;                     // type:BOOL.0
	float                                           _0x07511F5E;                     // type:FLOAT.0
	float                                           _0xB58E27FB;                     // type:FLOAT.0
	float                                           _0xD9D7AAC6;                     // type:FLOAT.0
	float                                           _0x61715A90;                     // type:FLOAT.0
	float                                           _0x54D691EA;                     // type:FLOAT.0
	float                                           _0x853B1F1C;                     // type:FLOAT.0
	float                                           _0xDBA36E14;                     // type:FLOAT.0
	float                                           _0x5F0F5A18;                     // type:FLOAT.0
	float                                           _0xAC818F9A;                     // type:FLOAT.0
	float                                           _0x31CDD2EC;                     // type:FLOAT.0
	float                                           _0x67791434;                     // type:FLOAT.0
	struct _0x2D8896BE                              _0xE12E689D;                     // type:STRUCT.STRUCTURE
	struct _0x2D8896BE                              _0xD9CF2CF1;                     // type:STRUCT.STRUCTURE
	struct _0x2D8896BE                              _0x743CECE7;                     // type:STRUCT.STRUCTURE
	struct _0x2D8896BE                              _0x2F3C46FE;                     // type:STRUCT.STRUCTURE
	struct _0x2D8896BE                              _0x9BF019E2;                     // type:STRUCT.STRUCTURE
	float                                           _0xBD5C8591;                     // type:FLOAT.0
	float                                           _0x21802F76;                     // type:FLOAT.0
	float                                           _0x8DDADC33;                     // type:FLOAT.0
	float                                           _0xC31E0EC8;                     // type:FLOAT.0
	float                                           _0x4EE74EA0;                     // type:FLOAT.0
	float                                           _0xC9344206;                     // type:FLOAT.0
	float                                           _0x831D1334;                     // type:FLOAT.0
	float                                           _0xFF555104;                     // type:FLOAT.0
	float                                           _0xF833DF5C;                     // type:FLOAT.0
	float                                           _0xE31F5A16;                     // type:FLOAT.0
	float                                           _0x8A619850;                     // type:FLOAT.0
	bool                                            _0xAF6D6F9E;                     // type:BOOL.0
	float                                           _0x2C0E1D6C;                     // type:FLOAT.0
};

struct _0xAA6E4C18
{
	float                            fPlayerMoveDistToResetLoiterPosition; // type:FLOAT.0
	uint                             uDistanceCheckPeriodMS;          // type:UINT.0
};

struct _0xAA7A4F5B : _0x8A0DC979
{
};

struct _0xAA7C51F9 : _0x7EAFD12D
{
	float                            MaxRadius;                       // type:FLOAT.0
	float                            MinAlpha;                        // type:FLOAT.0
	float                            MaxAlpha;                        // type:FLOAT.0
	int                              _0xB06256C5;                     // type:INT.0
};

struct _0xAA90BC7E
{
	array<struct _0xAE3855E8, 4>     MMap;                            // type:ARRAY.ATRANGEARRAY
	array<array<ushort>, 4>          IMap;                            // type:ARRAY.ATRANGEARRAY
	int                              PolyCount;                       // type:INT.0
};

struct _0xAAD11FE9
{
	map<string, struct _0x64692028>     _0x6E49CBC8;                     // type:MAP.ATBINARYMAP
};

struct _0xAAD79D83
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x480A91D7>        _0xF2433183;                     // type:ARRAY.ATARRAY
};

struct _0xAADA7FB1
{
	map<enum _0x216B90AA, struct _0x781C9010>     _0x62A61A8F;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xC0DC8B34>               _0x4A7C9C9B;                     // type:MAP.ATBINARYMAP
	struct _0x797ABD16                            modelInfo;                       // type:STRUCT.STRUCTURE
	struct _0x87A73BA2                            _0xCA7C9F70;                     // type:STRUCT.STRUCTURE
	struct _0x087CF742                            _0x38120A04;                     // type:STRUCT.STRUCTURE
};

struct _0xAAE00B09 : _0x48F155B4
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xAAE20F40
{
	float                            _0x44A8D67A;                     // type:FLOAT.0
};

struct _0xAB0709B4
{
	float                            size;                            // type:FLOAT.0
	enum _0x0C8D297B                 type;                            // type:ENUM.32BIT
};

struct _0xAB0F1B79
{
	string                           LoadoutName;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x19627DE9;                     // type:FLOAT.0
	float                            _0x989E4EDF;                     // type:FLOAT.0
	float                            RandomWeight;                    // type:FLOAT.0
};

struct _0xAB1832C6
{
	uint                             HoldDuration;                    // type:UINT.0
};

struct _0xAB1A4C3A : CTuning
{
	map<string, struct _0xA58DFA0C>     _0x75305A61;                     // type:MAP.ATBINARYMAP
	struct _0xA58DFA0C                  _0xCD12F00F;                     // type:STRUCT.STRUCTURE
	float                               _0x1692EFBF;                     // type:FLOAT.0
	float                               _0xFA74B419;                     // type:FLOAT.0
};

struct _0xAB2E6B10
{
	string                           regionName;                      // type:STRING.ATNONFINALHASHSTRING
	vec2V                            regionCenterPosition;            // type:VEC2V.0
	float                            regionHumidity;                  // type:FLOAT.0
	array<struct _0x8475A16C>        temperatureModifiers;            // type:ARRAY.ATARRAY
};

struct _0xAB36DACC
{
	enum _0x90482250                 _0x2EFDEEA2;                     // type:ENUM.32BIT
	float                            _0x6F2E2FA3;                     // type:FLOAT.0
	float                            _0xFF83504B;                     // type:FLOAT.0
	float                            _0x2ACF26E6;                     // type:FLOAT.0
};

struct _0xAB3F19B2 : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            _0x1C008FD1;                     // type:FLOAT.0
	string                           _0xB8B04F18;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC1833043;                     // type:FLOAT.0
	string                           _0x37B61B62;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x41AC9C93;                     // type:FLOAT.0
	float                            _0x1C9EB44E;                     // type:FLOAT.0
};

struct _0xAB5AA353
{
	array<struct _0x20836C0E>        properties;                      // type:ARRAY.ATARRAY
};

struct _0xAB695B15 : _0xCDF97B9D
{
};

struct _0xAB76836B
{
};

struct _0xAB789466
{
	enum rage__InputType             Input;                           // type:ENUM.32BIT
	struct _0xB385BC70               Transition;                      // type:STRUCT.STRUCTURE
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0xAB79B6FA : _0x29583E42
{
	float                            CriticalChance;                  // type:FLOAT.0
	float                            CriticalDamageModifier;          // type:FLOAT.0
};

struct _0xABA19832 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Distance;                        // type:FLOAT.0
};

struct _0xABB144BE
{
	string                           BoolEntityId;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             BoolEntityValue;                 // type:BOOL.0
};

struct _0xABB312BA : CBaseSaveObject
{
	array<uint>                      Discovered;                      // type:ARRAY.ATARRAY
	array<uint>                      _0x2C7D7F9E;                     // type:ARRAY.ATARRAY
};

struct _0xABB31B99
{
};

struct _0xABB3F5CC
{
	array<struct _0xBF4F48BD>        _0xB1449BC7;                     // type:ARRAY.ATARRAY
};

struct _0xABCE9682
{
	float                            MaxTimeSeconds;                  // type:FLOAT.0
	float                            MinTimeSeconds;                  // type:FLOAT.0
	float                            CooldownSeconds;                 // type:FLOAT.0
	float                            MinFlockStrength;                // type:FLOAT.0
	float                            DistanceContagious;              // type:FLOAT.0
	array<struct _0x9FA1145B>        AmbientScannerParameters;        // type:ARRAY.ATARRAY
	float                            MinDistance;                     // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct _0xABD180EA : uiSelectableBehaviorBase
{
	struct _0x4A7AD954               _0xCA639BA9;                     // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               _0x7ED55D3B;                     // type:STRUCT.STRUCTURE
};

struct _0xABD32B62 : CAICondition
{
	uint                             Count;                           // type:UINT.0
};

struct _0xABDDF43A : uiScrollTargetBehavior
{
};

struct _0xABF7F973
{
	string                              filename;                        // type:STRING.ATSTRING
	bool                                _0x538A3671;                     // type:BOOL.0
	map<string, struct _0x43C832A2>     _0xCE585614;                     // type:MAP.ATBINARYMAP
};

struct _0xAC081F94 : _0xFECF2F24
{
};

struct _0xAC0B3335 : camBaseObjectMetadata
{
	array<struct _0x7571DF83, 8>     _0x10FDC882;                     // type:ARRAY.MEMBER
	float                            _0xD8A9C8AA;                     // type:FLOAT.0
	bool                             _0x939BA81C;                     // type:BOOL.0
	float                            _0x0A15D4BB;                     // type:FLOAT.0
	bool                             _0x8BE0558C;                     // type:BOOL.0
	float                            _0x361F8FB0;                     // type:FLOAT.0
	float                            _0x86792895;                     // type:FLOAT.0
};

struct _0xAC0D1039 : _0x14229900
{
};

struct _0xAC1748DD : CTuning
{
	uint                             _0x34879BCB;                     // type:UINT.0
	uint                             _0x1C7C30C3;                     // type:UINT.0
	uint                             _0xAD6A6FF0;                     // type:UINT.0
	uint                             _0xF48CC209;                     // type:UINT.0
};

struct _0xAC1B64B9 : UIBehavior
{
};

struct _0xAC35C78E
{
	array<struct _0xA8E6719B>        Tags;                            // type:ARRAY.ATARRAY
};

struct _0xAC3664B9
{
	string                           AnimName;                        // type:STRING.ATNONFINALHASHSTRING
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0xAC3D6228 : SaveChallengeGoalParamBase
{
	float                            score;                           // type:FLOAT.0
	string                           _0x371C022C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xAC45465B : CAICondition
{
};

struct _0xAC46FDA5
{
	map<string, bool>                AttributeMap;                    // type:MAP.ATBINARYMAP
};

struct _0xAC4BE47F : StateStreamedScriptBase
{
};

struct _0xAC4D1CDD : _0x7CBDE0BD
{
};

struct _0xAC674925 : CAICondition
{
	enum _0x563FBCEA                 Entity;                          // type:ENUM.32BIT
};

struct _0xAC6B5263
{
	struct _0xB4A4AC8A               TextureData;                     // type:STRUCT.STRUCTURE
	struct _0xB76FCD44               Sound;                           // type:STRUCT.STRUCTURE
	struct _0xB9EC3F9B               AppLink;                         // type:STRUCT.STRUCTURE
	string                           Title;                           // type:STRING.ATNONFINALHASHSTRING
	string                           Text;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xAC71B965 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x48E15851                 StatType;                        // type:ENUM.32BIT
	int                              Min;                             // type:INT.0
	int                              Max;                             // type:INT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
	bool                             _0x1193FB5F;                     // type:BOOL.0
};

struct _0xAC7FE161
{
	array<float>                     SpineStiffness;                  // type:ARRAY.ATARRAY
	array<float>                     NeckStiffness;                   // type:ARRAY.ATARRAY
	float                            PelvisStiffness;                 // type:FLOAT.0
	float                            RootStiffness;                   // type:FLOAT.0
	float                            ArmWeight;                       // type:FLOAT.0
	float                            WeaponGroupModifierShotgun;      // type:FLOAT.0
};

struct _0xAC8F7043 : UIBehavior
{
	struct _0xAB76836B               Converter;                       // type:STRUCT.POINTER
	string                           Property;                        // type:STRING.ATNSHASHSTRING
};

struct _0xAC947F5A
{
	array<struct _0xA469EE3D>        _0xA9207A5D;                     // type:ARRAY.ATARRAY
};

struct _0xACD69B91 : _0x6002A167
{
};

struct _0xACF47418 : CTuning
{
};

struct _0xAD02A4BF
{
	struct _0xA00B192A               _0xE504BD1A;                     // type:STRUCT.STRUCTURE
	float                            MinStickInputToEnableCoverToCover; // type:FLOAT.0
	float                            MinStickInputToMoveAroundCorner; // type:FLOAT.0
	float                            _0x7C7BAB89;                     // type:FLOAT.0
	float                            _0x18AC1E89;                     // type:FLOAT.0
	float                            _0x6BF40378;                     // type:FLOAT.0
	float                            _0xFACB93E3;                     // type:FLOAT.0
	float                            _0xFD86F471;                     // type:FLOAT.0
	float                            _0xF37C38E1;                     // type:FLOAT.0
	float                            _0xEF50DCEC;                     // type:FLOAT.0
	bool                             _0xE02107BF;                     // type:BOOL.0
	int                              _0x3A0A4FCE;                     // type:INT.0
	int                              _0x097DF0AC;                     // type:INT.0
	float                            _0xE344BD41;                     // type:FLOAT.0
	float                            _0x000258B8;                     // type:FLOAT.0
	float                            _0x304EB192;                     // type:FLOAT.0
	float                            _0x2A0C61C2;                     // type:FLOAT.0
	bool                             _0xEAF3D446;                     // type:BOOL.0
	bool                             _0xCAF6A8E2;                     // type:BOOL.0
	float                            _0xFA63AC51;                     // type:FLOAT.0
	float                            _0x929AE0FC;                     // type:FLOAT.0
	bool                             _0xADB908D8;                     // type:BOOL.0
	float                            _0xDDC86DD1;                     // type:FLOAT.0
	bool                             _0x61899DEC;                     // type:BOOL.0
	bool                             _0xE077B757;                     // type:BOOL.0
	bool                             _0xCB8FBEDA;                     // type:BOOL.0
	bool                             _0xF0CAD9C0;                     // type:BOOL.0
	enum _0xA5488A03                 _0x44F9435A;                     // type:ENUM.32BIT
	float                            _0xDA7F1451;                     // type:FLOAT.0
	float                            _0x5F4B3437;                     // type:FLOAT.0
	float                            _0x67AEBD0C;                     // type:FLOAT.0
	float                            _0xF8417460;                     // type:FLOAT.2
	float                            _0xF9D8C06A;                     // type:FLOAT.2
	float                            _0x5A8E6100;                     // type:FLOAT.2
	float                            _0xF0430A2E;                     // type:FLOAT.2
	float                            _0x48040FE9;                     // type:FLOAT.2
	struct _0xD54A5D84               _0x6F966D8C;                     // type:STRUCT.STRUCTURE
	struct _0xD54A5D84               _0x00149821;                     // type:STRUCT.STRUCTURE
	struct _0xD54A5D84               _0xA5CADC1B;                     // type:STRUCT.STRUCTURE
	float                            _0xC8E1C594;                     // type:FLOAT.0
	float                            _0xC20F9E24;                     // type:FLOAT.0
	float                            DistanceToWallStanding;          // type:FLOAT.0
	float                            _0xC2953671;                     // type:FLOAT.0
	float                            _0x7AA07C24;                     // type:FLOAT.0
	float                            DistanceToWallCrouching;         // type:FLOAT.0
	float                            _0x1EF51040;                     // type:FLOAT.0
	float                            _0x0E314DBE;                     // type:FLOAT.0
	float                            _0xE41AB03F;                     // type:FLOAT.0
	float                            DistanceToWallCoverToCover;      // type:FLOAT.0
	float                            _0x01B34907;                     // type:FLOAT.0
	float                            _0x8997BD08;                     // type:FLOAT.0
	float                            _0x00E3C793;                     // type:FLOAT.0
	float                            _0x65CC01D0;                     // type:FLOAT.0
	float                            _0x93558323;                     // type:FLOAT.0
	float                            _0xAD5D5748;                     // type:FLOAT.0
	float                            _0xD61603AF;                     // type:FLOAT.0
	float                            _0x8A82316C;                     // type:FLOAT.0
	float                            _0x61CE0825;                     // type:FLOAT.0
	float                            _0x94D09A90;                     // type:FLOAT.0
	float                            _0x7F5D30C5;                     // type:FLOAT.0
	float                            _0x1A52558E;                     // type:FLOAT.0
	float                            _0xDC9321FE;                     // type:FLOAT.0
	float                            _0xC418DF7D;                     // type:FLOAT.0
	float                            _0x43F39CD0;                     // type:FLOAT.0
	float                            _0x5BA7FBBC;                     // type:FLOAT.0
	float                            _0x7B1E17B1;                     // type:FLOAT.0
	float                            _0x310580BE;                     // type:FLOAT.0
	float                            _0x0C0792D6;                     // type:FLOAT.0
	float                            _0x4B5F89FC;                     // type:FLOAT.0
	float                            _0x1E00728C;                     // type:FLOAT.0
	float                            _0xE8059EEE;                     // type:FLOAT.0
	float                            _0x2080C2C9;                     // type:FLOAT.0
	float                            _0x58573BD8;                     // type:FLOAT.0
	float                            _0x596CF4BB;                     // type:FLOAT.0
	float                            _0x2C51BE22;                     // type:FLOAT.0
	float                            _0x70E48C09;                     // type:FLOAT.0
	float                            _0x0BCA97BF;                     // type:FLOAT.0
	float                            _0x18AC5669;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xD46D8A2A;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x7ACF7360;                     // type:ENUM.32BIT
	bool                             _0x2B2BCC28;                     // type:BOOL.0
	bool                             _0xD7948228;                     // type:BOOL.0
	float                            _0xCA2B4220;                     // type:FLOAT.0
	float                            _0x60FE16BE;                     // type:FLOAT.0
	float                            _0x4E078571;                     // type:FLOAT.0
	float                            _0x853BACF5;                     // type:FLOAT.0
	float                            _0xD69F6C22;                     // type:FLOAT.0
	float                            _0x5426D47F;                     // type:FLOAT.0
	float                            _0x4B1FE32D;                     // type:FLOAT.0
	float                            _0x39F7ADCA;                     // type:FLOAT.0
	float                            _0x00DFC509;                     // type:FLOAT.0
	float                            _0xBEE59A99;                     // type:FLOAT.0
	float                            _0xF54B6425;                     // type:FLOAT.0
	float                            _0x705BA9D0;                     // type:FLOAT.0
	float                            _0x24FA043A;                     // type:FLOAT.0
	float                            _0xAB7139E4;                     // type:FLOAT.0
	uint                             _0x37456045;                     // type:UINT.0
	bool                             _0x9015F80D;                     // type:BOOL.0
	float                            _0xE5334972;                     // type:FLOAT.0
	float                            _0x482FF90F;                     // type:FLOAT.0
	float                            _0xF3D880C0;                     // type:FLOAT.0
	float                            _0x0BDC44C5;                     // type:FLOAT.0
	float                            _0x1E7356D7;                     // type:FLOAT.0
	float                            _0x17983177;                     // type:FLOAT.0
	float                            _0x1811A6F9;                     // type:FLOAT.0
	float                            _0x2D5E959B;                     // type:FLOAT.0
	float                            _0x2ED1F047;                     // type:FLOAT.0
	float                            _0x996395A6;                     // type:FLOAT.0
	float                            _0x815BBAD1;                     // type:FLOAT.0
	uint                             _0xFFD016A9;                     // type:UINT.0
	bool                             _0xB50CC7AE;                     // type:BOOL.0
	float                            _0x1A477600;                     // type:FLOAT.0
	float                            _0xF265F5AC;                     // type:FLOAT.0
	uint                             _0x0549A3D8;                     // type:UINT.0
	uint                             _0x3B55E331;                     // type:UINT.0
	float                            _0x790BBF9F;                     // type:FLOAT.0
	vec3V                            _0x5197325A;                     // type:VEC3V.0
	float                            _0x4397E1E0;                     // type:FLOAT.0
	float                            _0x87E38F44;                     // type:FLOAT.0
	struct _0xB1D8BF52               _0xAA558CC9;                     // type:STRUCT.STRUCTURE
	struct _0xB1D8BF52               _0x6DE706D7;                     // type:STRUCT.STRUCTURE
};

struct _0xAD041E85
{
	float                            _0x94EEF550;                     // type:FLOAT.0
	float                            _0x3B41C78B;                     // type:FLOAT.0
	float                            _0x1C8A55EF;                     // type:FLOAT.0
};

struct _0xAD112116
{
	string                                   MaleClipset;                     // type:STRING.ATNONFINALHASHSTRING
	string                                   FemaleClipset;                   // type:STRING.ATNONFINALHASHSTRING
	float                                    BlendOutDuration;                // type:FLOAT.0
	string                                   OnFootBodyBlendFilter;           // type:STRING.ATNONFINALHASHSTRING
	string                                   OnFootBodyBlendFilterTemplate;   // type:STRING.ATNONFINALHASHSTRING
	string                                   _0xB055F9FB;                     // type:STRING.ATNONFINALHASHSTRING
	string                                   OnFootHeavyCarryingBodyBlendFilterTemplate; // type:STRING.ATNONFINALHASHSTRING
	string                                   InVehicleBodyBlendFilter;        // type:STRING.ATNONFINALHASHSTRING
	string                                   InVehicleBodyBlendFilterTemplate; // type:STRING.ATNONFINALHASHSTRING
	string                                   OnHorseBodyBlendFilter;          // type:STRING.ATNONFINALHASHSTRING
	string                                   OnHorseBodyBlendFilterTemplate;  // type:STRING.ATNONFINALHASHSTRING
	string                                   IntroBaseClipName;               // type:STRING.ATNONFINALHASHSTRING
	float                                    IntroBaseClipWeight;             // type:FLOAT.0
	array<struct EmoteClipVariationInfo>     IntroVariations;                 // type:ARRAY.ATARRAY
	string                                   LoopBaseClipName;                // type:STRING.ATNONFINALHASHSTRING
	float                                    LoopBaseClipWeight;              // type:FLOAT.0
	array<struct EmoteClipVariationInfo>     LoopVariations;                  // type:ARRAY.ATARRAY
	string                                   ActionBaseClipName;              // type:STRING.ATNONFINALHASHSTRING
	float                                    ActionBlendInDuration;           // type:FLOAT.0
	float                                    ActionBlendOutDuration;          // type:FLOAT.0
	float                                    ActionBaseClipWeight;            // type:FLOAT.0
	array<struct EmoteClipVariationInfo>     ActionVariations;                // type:ARRAY.ATARRAY
	string                                   OutroBaseClipName;               // type:STRING.ATNONFINALHASHSTRING
	float                                    OutroBaseClipWeight;             // type:FLOAT.0
	array<struct EmoteClipVariationInfo>     OutroVariations;                 // type:ARRAY.ATARRAY
};

struct _0xAD49F41F
{
	vec3V                            Min;                             // type:VEC3V.0
	vec3V                            Max;                             // type:VEC3V.0
	ushort                           BoneId;                          // type:USHORT.0
};

struct _0xAD5DFE3C
{
	vec3V                            startPos;                        // type:VEC3V.0
	vec4                             _0xE20C27D0;                     // type:VECTOR4.0
	float                            startTime;                       // type:FLOAT.0
	vec3V                            endPos;                          // type:VEC3V.0
	vec4                             _0x50CC3319;                     // type:VECTOR4.0
	float                            endTime;                         // type:FLOAT.0
};

struct _0xAD66FEC1
{
	string                           _0xD3735635;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x745894F7;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xCE3A7C97;                     // type:BOOL.0
	bool                             _0xD8F8831C;                     // type:BOOL.0
	float                            Duration;                        // type:FLOAT.0
	struct _0xA2CB7B84               _0x2C8CE372;                     // type:STRUCT.STRUCTURE
};

struct _0xAD724E25 : _0x2F7DA38D
{
	struct MetaPedDefExplicitAsset     _0x4F77277F;                     // type:STRUCT.STRUCTURE
	string                             tag;                             // type:STRING.ATNONFINALHASHSTRING
	bool                               removeTag;                       // type:BOOL.0
	bool                               _0x59B92C03;                     // type:BOOL.0
};

struct _0xAD8485A5
{
	map<string, float>                _0x2A2C79C5;                     // type:MAP.ATBINARYMAP
	map<string, enum _0x0F55412F>     _0xEA6E26E5;                     // type:MAP.ATBINARYMAP
	map<string, string>               _0x82DEB62B;                     // type:MAP.ATBINARYMAP
};

struct _0xAD8A4056 : _0x1054F746
{
};

struct _0xAD9BC2D3 : _0x8A0DC979
{
	struct _0x4494B15E               _0x3CC85AA4;                     // type:STRUCT.STRUCTURE
	bool                             _0x8B33133E;                     // type:BOOL.0
	bool                             _0x9652BB62;                     // type:BOOL.0
};

struct _0xAD9F8C0E : _0xDBE512DA
{
};

struct _0xADC10FC8 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xADCE38C1 : UIBehavior
{
	int                              _0x97BA6D61;                     // type:INT.0
};

struct _0xADCE8784
{
	array<struct _0x4183745C>        Probes;                          // type:ARRAY.ATARRAY
};

struct _0xADDCFAB7 : _0x2F7DA38D
{
};

struct _0xADDFBF21
{
	enum _0xC93A7A62                 _0x2AA1DE4A;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xA89FC160;                     // type:ENUM.32BIT
	uint                             _0xBE376E84;                     // type:UINT.0
	uint                             _0xE8A84B6A;                     // type:UINT.0
	float                            _0x6D813ECB;                     // type:FLOAT.0
	float                            _0xAD9A9B6B;                     // type:FLOAT.0
	float                            _0x0AFB03BF;                     // type:FLOAT.0
	float                            _0xE579EF38;                     // type:FLOAT.0
	float                            _0xB84A242F;                     // type:FLOAT.0
	float                            _0x7328D555;                     // type:FLOAT.0
	float                            _0x9C74FE75;                     // type:FLOAT.0
};

struct _0xADE15FC7 : _0x1054F746
{
};

struct _0xADE9DEF0
{
	enum _0xB5826767                 _0x72C933C1;                     // type:ENUM.32BIT
	float                            _0x0067515F;                     // type:FLOAT.0
	float                            _0x0282DE06;                     // type:FLOAT.0
	float                            Height;                          // type:FLOAT.0
};

struct _0xADFE64D5
{
	vec3V                            A;                               // type:VEC3V.0
	vec3V                            B;                               // type:VEC3V.0
	vec3V                            C;                               // type:VEC3V.0
	int                              why;                             // type:INT.0
};

struct _0xAE0BD803 : CTuning
{
	struct _0x34132473               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xAE1C5728 : _0x6F8CD2FE
{
};

struct _0xAE1C7AAE : _0x8A0DC979
{
};

struct _0xAE22C423
{
	vec3V                            Min;                             // type:VEC3V.0
	vec3V                            Max;                             // type:VEC3V.0
	ushort                           BoneId;                          // type:USHORT.0
};

struct _0xAE2501F2
{
	ushort                              version;                         // type:USHORT.0
	map<uint64, struct _0xA0889763>     map;                             // type:MAP.ATMAP
};

struct _0xAE35F641 : CTuning
{
	float                            _0x2AC140E7;                     // type:FLOAT.0
	float                            _0x97BBF169;                     // type:FLOAT.0
	float                            _0x4840560F;                     // type:FLOAT.0
	float                            _0xC7054A26;                     // type:FLOAT.0
	float                            _0xD947EEAB;                     // type:FLOAT.0
	float                            _0xB7C6D45B;                     // type:FLOAT.0
	float                            _0x5044A48F;                     // type:FLOAT.0
	float                            _0x6CB0ED2F;                     // type:FLOAT.0
	float                            _0x84FB3920;                     // type:FLOAT.0
	bool                             _0x3C88EEA6;                     // type:BOOL.0
	bool                             _0xD28156F9;                     // type:BOOL.0
};

struct _0xAE3855E8
{
	array<struct _0xA2FE6973>        Data;                            // type:ARRAY.ATARRAY
};

struct _0xAE3DB173 : _0xA26E1113
{
	array<uchar, 3>                  value;                           // type:ARRAY.ATRANGEARRAY
};

struct _0xAE436053
{
	bitset<enum _0x6EA4D604>         Flags;                           // type:BITSET.32BIT
	enum _0x7B9552F4                 Type;                            // type:ENUM.32BIT
};

struct _0xAE460724
{
	float                            SniperPointScoreMultiplier;      // type:FLOAT.0
	float                            ExternalPointScoreMultiplier;    // type:FLOAT.0
	float                            BreachPointScoreMultiplier;      // type:FLOAT.0
};

struct _0xAE6C7B97 : _0x476BC347
{
	enum rage__InputGroup            inputGroup;                      // type:ENUM.32BIT
	array<struct _0x9F1EF45E>        _0xDD70D18E;                     // type:ARRAY.ATARRAY
	array<struct _0x9F1EF45E>        _0x1CA218C1;                     // type:ARRAY.ATARRAY
};

struct _0xAE756957
{
	struct _0x1D8B900F               Memory;                          // type:STRUCT.STRUCTURE
	struct _0x26B0ABCD               GlyphCache;                      // type:STRUCT.STRUCTURE
	struct _0x07EC986C               MeshCache;                       // type:STRUCT.STRUCTURE
	struct _0x2F0CEE45               ToleranceParams;                 // type:STRUCT.STRUCTURE
};

struct _0xAE8211EF
{
	float                            _0xF59D07FF;                     // type:FLOAT.0
	float                            _0x30358FD2;                     // type:FLOAT.0
	float                            _0x52E8D4B8;                     // type:FLOAT.0
	float                            _0x7EC114BE;                     // type:FLOAT.0
};

struct _0xAE93604B : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x48E15851                 StatType;                        // type:ENUM.32BIT
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
	bool                             _0x1193FB5F;                     // type:BOOL.0
};

struct _0xAE939079 : camBaseObjectMetadata
{
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x8DA0353D;                     // type:FLOAT.0
	float                            _0xBDA4AC23;                     // type:FLOAT.0
	float                            _0x5FAF8CA7;                     // type:FLOAT.0
};

struct _0xAE9E2024 : _0xDD140D06
{
	float                            fValue;                          // type:FLOAT.0
};

struct _0xAEA3A4DA : _0x3BA4E73C
{
	bool                             _0xB15D630D;                     // type:BOOL.0
	bool                             _0x4396A83C;                     // type:BOOL.0
	enum _0x9C68AE0C                 TriggerType;                     // type:ENUM.32BIT
};

struct _0xAEAA4892
{
	array<struct _0xE9DA7018>           _0x16E21CE1;                     // type:ARRAY.ATARRAY
	map<string, struct _0xB8B52ABB>     _0x1BA2BECD;                     // type:MAP.ATBINARYMAP
	map<string, string>                 _0xB2D7A8CB;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x6FB3A09F>     _0xFF541C94;                     // type:MAP.ATBINARYMAP
};

struct _0xAEADD7C6 : _0x8A0DC979
{
};

struct _0xAEB623D8
{
	int                              x;                               // type:INT.0
	int                              y;                               // type:INT.0
	int                              z;                               // type:INT.0
};

struct _0xAEC03571 : _0xA98C52B5
{
	float                            _0xD664A561;                     // type:FLOAT.0
};

struct _0xAEC2EF8C : _0xF4966086
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xAE300DE1                 _0x95CD5D0E;                     // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct _0x4E375ED3               _0x4DCC36CD;                     // type:STRUCT.STRUCTURE
	float                            Score;                           // type:FLOAT.0
	array<string>                    _0xD0F8AE6B;                     // type:ARRAY.ATARRAY
};

struct _0xAECBB61C
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            waitTimeMin;                     // type:FLOAT.0
	float                            waitTimeMax;                     // type:FLOAT.0
	float                            posX;                            // type:FLOAT.0
	float                            posY;                            // type:FLOAT.0
	array<struct _0xDB1689F7>        links;                           // type:ARRAY.ATARRAY
};

struct _0xAED288CB
{
	array<string>                    ShortArmClipSets;                // type:ARRAY.ATARRAY
	array<string>                    ShortArmUnderFireClipSets;       // type:ARRAY.ATARRAY
	array<string>                    LongArmClipSets;                 // type:ARRAY.ATARRAY
	array<string>                    LongArmUnderFireClipSets;        // type:ARRAY.ATARRAY
	array<string>                    DualWieldClipSets;               // type:ARRAY.ATARRAY
	array<string>                    DualWieldUnderFireClipSets;      // type:ARRAY.ATARRAY
	array<string>                    ShotgunClipSets;                 // type:ARRAY.ATARRAY
	array<string>                    ShotgunUnderFireClipSets;        // type:ARRAY.ATARRAY
};

struct _0xAED86D72
{
	enum _0x98F88440                 type;                            // type:ENUM.32BIT
	enum MinigameType                minigameType;                    // type:ENUM.32BIT
	int                              _0x3D220AAB;                     // type:INT.0
	int                              _0x8F802F7C;                     // type:INT.0
	struct MinigameTableId           _0xE3107118;                     // type:STRUCT.STRUCTURE
};

struct _0xAEE128BA : _0x39DE799A
{
	int64                            Value;                           // type:INT64.0
};

struct _0xAF013D30
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	float                            density;                         // type:FLOAT.0
	float                            anisotropy;                      // type:FLOAT.0
	uint                             scattering;                      // type:UINT.1
	float                            ambientIntensity;                // type:FLOAT.0
	float                            globalEmissive;                  // type:FLOAT.0
	float                            falloff;                         // type:FLOAT.0
	float                            falloffCurve;                    // type:FLOAT.0
	bool                             additiveBlend;                   // type:BOOL.0
	bool                             _0xB56075CA;                     // type:BOOL.0
	vec2V                            _0xD163327C;                     // type:VEC2V.0
	enum _0x37A91502                 _0x5BC00EF4;                     // type:ENUM.32BIT
	string                           _0xF5D69C4B;                     // type:STRING.ATFINALHASHSTRING
	uint                             iplHash;                         // type:UINT.0
};

struct _0xAF060404
{
	array<float>                     SpineStiffness;                  // type:ARRAY.ATARRAY
	float                            PelvisStiffness;                 // type:FLOAT.0
	float                            RootStiffness;                   // type:FLOAT.0
	float                            RootLimit;                       // type:FLOAT.0
	float                            IntervalAtMaximum;               // type:FLOAT.0
	float                            BoneDelay;                       // type:FLOAT.0
	float                            LegWeight;                       // type:FLOAT.0
	float                            DistanceModifier;                // type:FLOAT.0
};

struct _0xAF0CC4D6
{
	uint                             _0x3F9E7EAE;                     // type:UINT.0
	uint                             _0x904FBBB7;                     // type:UINT.0
};

struct _0xAF24E56C : _0x8C354D49
{
	string                           Name;                            // type:STRING.CONST_STRING
	bool                             IsPlatformAsset;                 // type:BOOL.0
};

struct _0xAF288EE7 : GameplayHelpers__ClipsetLeafNode
{
	int                              FireTagsCount;                   // type:INT.0
};

struct _0xAF321002
{
	array<struct _0x24E3AA6D>        VerletAnchorsDefinitions;        // type:ARRAY.ATARRAY
};

struct _0xAF365801
{
	string                           File;                            // type:STRING.ATSTRING
	string                           MountPoint;                      // type:STRING.ATSTRING
};

struct _0xAF59CF31 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
	enum _0x705A8B9B                 _0xA2AA240A;                     // type:ENUM.32BIT
	enum _0x705A8B9B                 _0xEEB4B27B;                     // type:ENUM.32BIT
	bool                             UseDirectedMotivation;           // type:BOOL.0
};

struct _0xAF5BEB55 : _0x8A0DC979
{
	enum _0x4D469B72                 _0xC0715C2C;                     // type:ENUM.32BIT
};

struct _0xAF61C8DB
{
	struct _0x51B38E82               StringData;                      // type:STRUCT.STRUCTURE
};

struct _0xAF629DAA
{
	vec3V                            position;                        // type:VEC3V.0
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           waypointrecording;               // type:STRING.ATNONFINALHASHSTRING
	string                           srl;                             // type:STRING.ATSTRING
};

struct _0xAF715C58
{
	string                           drawable;                        // type:STRING.ATNONFINALHASHSTRING
	string                           albedo;                          // type:STRING.ATNONFINALHASHSTRING
	string                           normal;                          // type:STRING.ATNONFINALHASHSTRING
	string                           material;                        // type:STRING.ATNONFINALHASHSTRING
	string                           palette;                         // type:STRING.ATNONFINALHASHSTRING
	uchar                            tint0;                           // type:UCHAR.0
	uchar                            tint1;                           // type:UCHAR.0
	uchar                            tint2;                           // type:UCHAR.0
};

struct _0xAF7D7777
{
	float                            _0xA51AD345;                     // type:FLOAT.0
	float                            _0x562F9692;                     // type:FLOAT.0
	float                            _0xB2BE715D;                     // type:FLOAT.0
	float                            _0xF626D758;                     // type:FLOAT.0
	float                            _0x2D7F6C58;                     // type:FLOAT.0
	float                            _0x15E4585E;                     // type:FLOAT.0
	float                            _0x7D271B48;                     // type:FLOAT.0
	float                            _0x58B21385;                     // type:FLOAT.0
};

struct _0xAF8114A1 : _0x7EAFD12D
{
	array<struct _0x01C57A62>        Ranges;                          // type:ARRAY.ATARRAY
};

struct _0xAF8B1F4C : _0x74EB5104
{
};

struct _0xAF92BC85
{
	string                           ParamId;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	int                              ClipSetVariationIndex;           // type:INT.0
};

struct _0xAF92FA28
{
	array<struct _0x94B21BC7, 16>     Weights;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0xAF950A72
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xF7A7F505>        RevivedVfx;                      // type:ARRAY.ATARRAY
};

struct _0xAFB6443E : _0xF51D5F09
{
	struct _0xA3A6919D               _0xDFCF1423;                     // type:STRUCT.STRUCTURE
	string                           DescriptionText;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ToastTitle;                      // type:STRING.ATNONFINALHASHSTRING
	string                           _0x58682EE7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x763EBC49;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Texture;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Txd;                             // type:STRING.ATNONFINALHASHSTRING
	string                           MenuLink;                        // type:STRING.ATNONFINALHASHSTRING
	string                           _0x82C221F7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0E8AD855;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x78FB6D70;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1951FD31;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB3649278;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Unlock;                          // type:STRING.ATNSHASHSTRING
};

struct _0xAFC83C2D : _0xE046EA8D
{
	string                           Animation;                       // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xA4094C3B;                     // type:BOOL.0
	struct _0x4A7AD954               _0x4C557E69;                     // type:STRUCT.STRUCTURE
};

struct _0xAFCCCD61
{
};

struct _0xAFF0FC86
{
	array<struct _0x485B120B>        Satchel;                         // type:ARRAY.ATARRAY
	array<struct _0x485B120B>        Pickup;                          // type:ARRAY.ATARRAY
	array<struct _0x485B120B>        _0xADD58EA9;                     // type:ARRAY.ATARRAY
	array<struct _0x485B120B>        Hold;                            // type:ARRAY.ATARRAY
};

struct _0xAFFCB244 : _0xC509663E
{
	array<string>                    Outfits;                         // type:ARRAY.ATARRAY
};

struct _0xAFFE19FB
{
	vec2                             vMin;                            // type:VECTOR2.0
	vec2                             vMax;                            // type:VECTOR2.0
	int                              ZoneKey;                         // type:INT.0
};

struct _0xB0054392 : _0x0A510DA9
{
};

struct _0xB00FF1A7
{
	array<struct _0x72BB00EF>        _0xE6CBEF5D;                     // type:ARRAY.ATARRAY
};

struct _0xB0219B6B : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct _0xB033014C
{
	float                            PelvisBlendRate;                 // type:FLOAT.0
	float                            PelvisWeightBow;                 // type:FLOAT.0
	float                            PelvisCounterWeightBow;          // type:FLOAT.0
	float                            PelvisLocoWeightBow;             // type:FLOAT.0
	float                            PelvisTurnWeightBow;             // type:FLOAT.0
};

struct _0xB034FFFD : _0xB7587A55
{
	uchar                            _0x9D74EEEB;                     // type:UCHAR.0
	uchar                            _0x9E9369DF;                     // type:UCHAR.0
	bool                             _0x289885CB;                     // type:BOOL.0
	bool                             _0xA66B759B;                     // type:BOOL.0
	bool                             _0xEDC36393;                     // type:BOOL.0
	uchar                            _0xB7550A93;                     // type:UCHAR.0
	bool                             _0x25C3A25F;                     // type:BOOL.0
	uchar                            _0xAFFDD6E6;                     // type:UCHAR.0
	string                           _0x5FBD29F0;                     // type:STRING.ATHASHVALUE
	struct _0xB8E3D843               _0xB3F1A670;                     // type:STRUCT.STRUCTURE
	array<struct _0x80BB8F56>        _0x5484DB63;                     // type:ARRAY.ATARRAY
};

struct _0xB039F226
{
	vec2                             _0x834436C7;                     // type:VECTOR2.0
	vec2                             _0x00D1B981;                     // type:VECTOR2.0
	vec2                             _0xA52C2EFB;                     // type:VECTOR2.0
	bool                             _0x75231781;                     // type:BOOL.0
	bool                             _0x23F5F4FB;                     // type:BOOL.0
	bool                             _0x9985D887;                     // type:BOOL.0
	bool                             _0xD47740D9;                     // type:BOOL.0
	string                           _0x30E2FCA3;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x0FFB3CD6;                     // type:FLOAT.0
	float                            _0xE7903535;                     // type:FLOAT.0
	float                            _0x63BAA0E1;                     // type:FLOAT.0
	struct _0x0DA7A42C               _0xED731A10;                     // type:STRUCT.STRUCTURE
};

struct _0xB03A99BF
{
	float                            MinDotToStartFromAnalyze;        // type:FLOAT.0
	float                            MinDotToContinueFromAnalyze;     // type:FLOAT.0
	float                            IdealDistance;                   // type:FLOAT.0
};

struct _0xB041D6A3 : _0xDC6D47C7
{
	struct _0x63948AEA               Compute;                         // type:STRUCT.POINTER
	struct _0x64F382F8               StatusModifiers;                 // type:STRUCT.STRUCTURE
};

struct _0xB067D6E8 : CTuning
{
	struct _0xD682DC60               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xB06C1886
{
	enum eCompendiumCategories       category;                        // type:ENUM.32BIT
	string                           subcategory;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xE1CC4086>        items;                           // type:ARRAY.ATARRAY
};

struct _0xB075E2F3 : CTuning
{
	struct _0x881F364C               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xB08DC1CF : _0xA57BA3ED
{
};

struct _0xB08FFA08 : _0x14229900
{
	struct _0x14229900               _0x89640067;                     // type:STRUCT.POINTER
	uint                             MinTimeMS;                       // type:UINT.0
	uint                             MaxTimeMS;                       // type:UINT.0
};

struct _0xB0963873 : _0xDC10377E
{
	float                            _0xE4337AEB;                     // type:FLOAT.0
	float                            _0x0F467483;                     // type:FLOAT.0
	float                            _0xF39B7B62;                     // type:FLOAT.0
	float                            _0x315AC6E4;                     // type:FLOAT.0
	uint                             _0xB40AD20A;                     // type:UINT.0
	uint                             _0xE4076C1D;                     // type:UINT.0
	uint                             _0xABF48771;                     // type:UINT.0
	uint                             _0x603F929D;                     // type:UINT.0
	uint                             _0x8146C97B;                     // type:UINT.0
	enum _0x0100F80E                 _0x0C74641D;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x730278A1;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x10E7F540;                     // type:ENUM.32BIT
};

struct _0xB0980E99
{
	float                            Verification;                    // type:FLOAT.0
	float                            DistanceFromCriminalToChallenge; // type:FLOAT.0
	float                            DistanceFromCrimeToChallenge;    // type:FLOAT.0
	float                            DistanceFromCriminalToCrimeToChallenge; // type:FLOAT.0
	float                            Spook;                           // type:FLOAT.0
	float                            Support;                         // type:FLOAT.0
	float                            Investigation;                   // type:FLOAT.0
	float                            ConfirmationRadius;              // type:FLOAT.0
	float                            CrimeProximity;                  // type:FLOAT.0
	float                            CrimeSceneRadiusBuffer;          // type:FLOAT.0
	float                            Flee;                            // type:FLOAT.0
	float                            TellLawPed;                      // type:FLOAT.0
	float                            TellLawPedRunningRadius;         // type:FLOAT.0
	float                            TellLawPedTargetRadius;          // type:FLOAT.0
	float                            TellLawPointTargetRadius;        // type:FLOAT.0
};

struct _0xB0AA70CB : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xB0B11D26
{
	float                            probability;                     // type:FLOAT.0
	float                            _0x754A5815;                     // type:FLOAT.0
	array<struct _0x9BBFB55F>        _0xBA2A4191;                     // type:ARRAY.ATARRAY
};

struct _0xB0B2588A : UIBehavior
{
	enum eUiEventChannels            EventChannel;                    // type:ENUM.32BIT
	struct uiEventDataBase           EventData;                       // type:STRUCT.POINTER
	string                           Message;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB0C43A9E
{
	array<struct _0xCB4497B5>        cacheEntries;                    // type:ARRAY.ATARRAY
};

struct _0xB0C5F255
{
	bitset<enum _0x9A0DAE83>         FilterFlags;                     // type:BITSET.32BIT
	struct _0x8C401129               CrimeInformation;                // type:STRUCT.STRUCTURE
};

struct _0xB0CE37FE : _0x5C1CB98F
{
	string                           Channel;                         // type:STRING.ATNONFINALHASHSTRING
	struct uiScriptEventParsable     Event;                           // type:STRUCT.STRUCTURE
	bool                             _0x9DA74B34;                     // type:BOOL.0
};

struct _0xB0DCB3AB : _0xA26E1113
{
	uchar                            value;                           // type:UCHAR.0
};

struct _0xB0E13FA5
{
	bitset<enum _0xF5A6ADBA>         _0x1996FE81;                     // type:BITSET.16BIT
	bitset<enum _0xF5A6ADBA>         _0x680FBF46;                     // type:BITSET.16BIT
	bitset<enum _0xF5A6ADBA>         _0x2287836E;                     // type:BITSET.16BIT
	bitset<enum _0xF5A6ADBA>         _0x146D7DF7;                     // type:BITSET.16BIT
	bitset<enum _0xF5A6ADBA>         _0x6EF8A78A;                     // type:BITSET.16BIT
	bitset<enum _0xF5A6ADBA>         _0x2EEB56BF;                     // type:BITSET.16BIT
	bitset<enum _0xF5A6ADBA>         _0x7A146B3F;                     // type:BITSET.16BIT
};

struct _0xB0E59CA4
{
	float                            _0x5F73393A;                     // type:FLOAT.0
	float                            _0xBEBD4B0F;                     // type:FLOAT.0
};

struct _0xB0E844D3
{
	float                            fChargeGoalBehindCoverCentralOffset; // type:FLOAT.0
	float                            fChargeGoalLateralOffset;        // type:FLOAT.0
	float                            fChargeGoalRearOffset;           // type:FLOAT.0
	float                            fChargeGoalMaxAdjustRadius;      // type:FLOAT.0
	float                            fPlayerMoveDistToResetChargeGoals; // type:FLOAT.0
};

struct _0xB0E8F326 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
};

struct _0xB0F7EE59 : CTuning
{
	float                            _0x68BB0E3E;                     // type:FLOAT.0
	float                            _0x18699837;                     // type:FLOAT.0
	float                            _0xED026011;                     // type:FLOAT.0
	float                            _0xF87C055F;                     // type:FLOAT.0
	float                            _0x8A2F314A;                     // type:FLOAT.0
	float                            _0x2D4F5490;                     // type:FLOAT.0
	float                            _0xC7CD0483;                     // type:FLOAT.0
	float                            _0xC31F181D;                     // type:FLOAT.0
	float                            _0x9EBF0358;                     // type:FLOAT.0
	float                            _0xDAD4C336;                     // type:FLOAT.0
	float                            _0x3F6FE2D6;                     // type:FLOAT.0
	float                            _0xFF18225D;                     // type:FLOAT.0
	float                            _0x73ECF5FD;                     // type:FLOAT.0
	float                            _0x9158F50B;                     // type:FLOAT.0
	float                            _0x00FE5BD4;                     // type:FLOAT.0
	float                            _0x2C92E130;                     // type:FLOAT.0
	float                            _0x86F52A6F;                     // type:FLOAT.0
	float                            _0x94A93043;                     // type:FLOAT.0
	float                            _0x9890D09B;                     // type:FLOAT.0
	float                            _0xDF009D13;                     // type:FLOAT.0
	float                            _0x2BCED0A1;                     // type:FLOAT.0
	float                            _0x1CA88228;                     // type:FLOAT.0
	float                            _0xCB6CAA3D;                     // type:FLOAT.0
	float                            _0x17290520;                     // type:FLOAT.0
	float                            _0x5A6DF71F;                     // type:FLOAT.0
	float                            _0xC06C30E1;                     // type:FLOAT.0
	float                            _0x5351D9FB;                     // type:FLOAT.0
	float                            _0x069487F6;                     // type:FLOAT.0
	float                            _0xFE233D36;                     // type:FLOAT.0
	float                            _0xA6663FD6;                     // type:FLOAT.0
	float                            _0x23810FAF;                     // type:FLOAT.0
	float                            _0xCE35839B;                     // type:FLOAT.0
	float                            _0xE4A6CBF9;                     // type:FLOAT.0
	float                            _0x1AC21E0A;                     // type:FLOAT.0
	float                            _0xD77AEF36;                     // type:FLOAT.0
	float                            _0xCA8EA485;                     // type:FLOAT.0
	float                            _0xC3DA2DA9;                     // type:FLOAT.0
	float                            _0x169714DD;                     // type:FLOAT.0
	float                            _0x5D1D139D;                     // type:FLOAT.0
	float                            _0x636D2FA6;                     // type:FLOAT.0
	float                            _0x4AA4BE9D;                     // type:FLOAT.0
	float                            _0xBF790EA6;                     // type:FLOAT.0
	float                            _0xCC7A0568;                     // type:FLOAT.0
	float                            _0xED17F576;                     // type:FLOAT.0
	float                            _0x0251C9DF;                     // type:FLOAT.0
	float                            _0xDEF8953B;                     // type:FLOAT.0
	float                            _0xE827CFED;                     // type:FLOAT.0
	float                            _0x69F7D8A6;                     // type:FLOAT.0
	float                            _0x861A07D8;                     // type:FLOAT.0
	float                            _0xAEB05D84;                     // type:FLOAT.0
	float                            _0x074E9DCE;                     // type:FLOAT.0
	float                            _0x26E97901;                     // type:FLOAT.0
	float                            _0xB1172878;                     // type:FLOAT.0
	float                            _0xE5C394F2;                     // type:FLOAT.0
	float                            _0xAEFD28C6;                     // type:FLOAT.0
	float                            _0xD826558E;                     // type:FLOAT.0
	float                            _0x9FA62890;                     // type:FLOAT.0
	float                            _0xE8E345FF;                     // type:FLOAT.0
	float                            _0xF7AA8FA9;                     // type:FLOAT.0
	float                            _0x82B1667A;                     // type:FLOAT.0
	float                            _0x08803CD5;                     // type:FLOAT.0
	float                            _0x80B7E36A;                     // type:FLOAT.0
	float                            _0x27357A1A;                     // type:FLOAT.0
	float                            _0x75F97AB6;                     // type:FLOAT.0
	float                            _0xCA4DBE04;                     // type:FLOAT.0
	float                            _0x5D9214D4;                     // type:FLOAT.0
	float                            _0x2EF34EC0;                     // type:FLOAT.0
	float                            _0xF2E990A8;                     // type:FLOAT.0
	float                            _0x25F496F8;                     // type:FLOAT.0
	float                            _0x1780D142;                     // type:FLOAT.0
	float                            _0x24893477;                     // type:FLOAT.0
	float                            _0xC33D9384;                     // type:FLOAT.0
	float                            _0xA433606B;                     // type:FLOAT.0
	float                            _0xF8DA7632;                     // type:FLOAT.0
	float                            _0x12E5106F;                     // type:FLOAT.0
	float                            _0x65B18246;                     // type:FLOAT.0
	float                            _0xEE0005F3;                     // type:FLOAT.0
	float                            _0xD561FB51;                     // type:FLOAT.0
	float                            _0xB557F32F;                     // type:FLOAT.0
	float                            _0x228CD08E;                     // type:FLOAT.0
	float                            _0xA6A9F3BB;                     // type:FLOAT.0
	float                            _0x8E6B9630;                     // type:FLOAT.0
	float                            _0x6AB151E7;                     // type:FLOAT.0
	float                            _0x8F8316F4;                     // type:FLOAT.0
	float                            _0x31F0A337;                     // type:FLOAT.0
	float                            _0x3D5C088D;                     // type:FLOAT.0
	float                            _0xD2500F9D;                     // type:FLOAT.0
	float                            _0x6FF500B3;                     // type:FLOAT.0
	float                            _0xED98EF6E;                     // type:FLOAT.0
	float                            _0x585B876A;                     // type:FLOAT.0
	float                            _0x5B20E861;                     // type:FLOAT.0
	float                            _0x7D3215AF;                     // type:FLOAT.0
	float                            _0xA36C383F;                     // type:FLOAT.0
	float                            _0xD0FE1A58;                     // type:FLOAT.0
	float                            _0x82C1E9B5;                     // type:FLOAT.0
	float                            _0x00A18C99;                     // type:FLOAT.0
	float                            _0x5A034D43;                     // type:FLOAT.0
	float                            _0x4E38C196;                     // type:FLOAT.0
	float                            _0x53867138;                     // type:FLOAT.0
	float                            _0xAC9F94DE;                     // type:FLOAT.0
	float                            _0xC2CBE5D0;                     // type:FLOAT.0
	float                            _0x15D18A1B;                     // type:FLOAT.0
	float                            _0x2B6F1957;                     // type:FLOAT.0
	float                            _0x06F44B7F;                     // type:FLOAT.0
	float                            _0x6E9B5ECB;                     // type:FLOAT.0
	float                            _0xA2F5B10B;                     // type:FLOAT.0
	float                            _0xAFAFC115;                     // type:FLOAT.0
	float                            _0x09EE5C26;                     // type:FLOAT.0
	float                            _0x7A334E24;                     // type:FLOAT.0
	float                            _0xB4F10CAC;                     // type:FLOAT.0
	float                            _0x77297F8F;                     // type:FLOAT.0
	float                            _0xC5225007;                     // type:FLOAT.0
	float                            _0x12BB5961;                     // type:FLOAT.0
	float                            _0xEAD5CDE0;                     // type:FLOAT.0
	float                            _0x104296E4;                     // type:FLOAT.0
	float                            _0x650F3D05;                     // type:FLOAT.0
	float                            _0xC747F4F0;                     // type:FLOAT.0
	float                            _0x653DBCC1;                     // type:FLOAT.0
	float                            _0xE9EA7657;                     // type:FLOAT.0
	float                            _0x9265A455;                     // type:FLOAT.0
	float                            _0x82E63B78;                     // type:FLOAT.0
	float                            _0x37EA4654;                     // type:FLOAT.0
	float                            _0x0813FE04;                     // type:FLOAT.0
	float                            _0x23F4611C;                     // type:FLOAT.0
	float                            _0x1F453176;                     // type:FLOAT.0
	float                            _0xB842F4EA;                     // type:FLOAT.0
	float                            _0xD4647287;                     // type:FLOAT.0
	float                            _0xC56078D3;                     // type:FLOAT.0
	float                            _0x11171925;                     // type:FLOAT.0
	float                            _0x56629B17;                     // type:FLOAT.0
	float                            _0x206EB5E9;                     // type:FLOAT.0
	float                            _0x0A132381;                     // type:FLOAT.0
	float                            _0xDD1AD72B;                     // type:FLOAT.0
	float                            _0xA1FA6073;                     // type:FLOAT.0
	float                            _0xAD572188;                     // type:FLOAT.0
	float                            _0xB7F1EF1A;                     // type:FLOAT.0
	float                            _0x7586700B;                     // type:FLOAT.0
	float                            _0x76A2830D;                     // type:FLOAT.0
	float                            _0xFF0596B1;                     // type:FLOAT.0
	float                            _0xA631096F;                     // type:FLOAT.0
	float                            _0x58891D9D;                     // type:FLOAT.0
	float                            _0xE44C9E06;                     // type:FLOAT.0
	float                            _0x429B3831;                     // type:FLOAT.0
	float                            _0xD61EEB65;                     // type:FLOAT.0
	float                            _0xE6A999A6;                     // type:FLOAT.0
	float                            _0x040D1654;                     // type:FLOAT.0
	float                            _0x7DDCECD2;                     // type:FLOAT.0
	float                            _0xEBA14AB4;                     // type:FLOAT.0
	float                            _0xDAAB6C41;                     // type:FLOAT.0
	float                            _0xE7D609C7;                     // type:FLOAT.0
	float                            _0xBFF837FD;                     // type:FLOAT.0
	float                            _0x0BA3F653;                     // type:FLOAT.0
	float                            _0x61540E1A;                     // type:FLOAT.0
	float                            _0x8B210965;                     // type:FLOAT.0
	float                            _0x328515F3;                     // type:FLOAT.0
	float                            _0x8819AC46;                     // type:FLOAT.0
	float                            _0x94CCB57D;                     // type:FLOAT.0
	float                            _0x7CC5F3AB;                     // type:FLOAT.0
	float                            _0x0560E003;                     // type:FLOAT.0
	float                            _0xE0F89CA4;                     // type:FLOAT.0
	float                            _0x68DC1283;                     // type:FLOAT.0
	float                            _0x7964B12E;                     // type:FLOAT.0
	float                            _0x8742ED30;                     // type:FLOAT.0
	float                            _0xC3C27141;                     // type:FLOAT.0
	float                            _0x0ACF4AF0;                     // type:FLOAT.0
	float                            _0x346F1D62;                     // type:FLOAT.0
	float                            _0x8B0997D9;                     // type:FLOAT.0
	float                            _0xE7A2D424;                     // type:FLOAT.0
	float                            _0x8DD12DED;                     // type:FLOAT.0
	float                            _0xBBBE5866;                     // type:FLOAT.0
	float                            _0x7FD0F44A;                     // type:FLOAT.0
	float                            _0x54DCD34F;                     // type:FLOAT.0
	float                            _0x33C73EBE;                     // type:FLOAT.0
	float                            _0x65F3A8C0;                     // type:FLOAT.0
	float                            _0xBF4BC9CE;                     // type:FLOAT.0
	float                            _0x347EC7E9;                     // type:FLOAT.0
	float                            _0xE5A8E584;                     // type:FLOAT.0
	float                            _0x50F6654F;                     // type:FLOAT.0
	int                              _0xE16B6FD8;                     // type:INT.0
	int                              _0x6F240EFE;                     // type:INT.0
	int                              _0x1FBA9989;                     // type:INT.0
	int                              _0xDED843C8;                     // type:INT.0
	int                              _0xFB3A7B84;                     // type:INT.0
	int                              _0x22FA4D8A;                     // type:INT.0
	float                            _0xA26441E4;                     // type:FLOAT.0
	float                            _0x5D4B4EF0;                     // type:FLOAT.0
	float                            _0x4B61290E;                     // type:FLOAT.0
	float                            _0xA8FE0845;                     // type:FLOAT.0
	float                            _0xF9490867;                     // type:FLOAT.0
	float                            _0x2B01121A;                     // type:FLOAT.0
	float                            _0xE1AEC050;                     // type:FLOAT.0
	float                            _0x1EF52421;                     // type:FLOAT.0
	float                            _0x15E9D28A;                     // type:FLOAT.0
};

struct _0xB1009877 : _0x0FC1398F
{
};

struct _0xB112E779
{
	float                            _0x14251905;                     // type:FLOAT.0
	float                            _0x27608B1C;                     // type:FLOAT.0
	bool                             _0xB49FA0E4;                     // type:BOOL.0
	struct _0x0E4BCD35               _0x65F7E398;                     // type:STRUCT.STRUCTURE
	struct _0x0E4BCD35               _0x070253E0;                     // type:STRUCT.STRUCTURE
	array<float>                     _0x4C347C4D;                     // type:ARRAY.ATARRAY
	float                            _0x2CD13A84;                     // type:FLOAT.0
	float                            _0xEB13A9E2;                     // type:FLOAT.0
	float                            _0x17FF5010;                     // type:FLOAT.0
};

struct _0xB11350B7 : CAICondition
{
	string                           Context;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB126632D : _0x8A0DC979
{
};

struct _0xB12740AC
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           GameValueName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB12B1418
{
	float                            MaxCollisionRootSpeedToPausePullBack; // type:FLOAT.0
	float                            MaxPreCollisionCameraSpeedToPausePullBack; // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            _0xCA3D44CB;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0xDE9460EB;                     // type:FLOAT.0
	float                            MaxDistanceErrorToIgnore;        // type:FLOAT.0
};

struct _0xB137CC7A : _0xA4857667
{
	enum _0x729D6EED                 Operation;                       // type:ENUM.32BIT
};

struct _0xB14EDCCA
{
	enum _0xC93A7A62                 _0xC50E845F;                     // type:ENUM.32BIT
	float                            _0xFBC2A935;                     // type:FLOAT.2
	float                            _0xD8370E86;                     // type:FLOAT.2
	float                            _0x8169C370;                     // type:FLOAT.2
	bool                             _0x0309B028;                     // type:BOOL.0
};

struct _0xB15D23D3 : camCinematicContextMetadata
{
	bool                             IsEnabled;                       // type:BOOL.0
	string                           _0x8193B502;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x7852718E;                     // type:UINT.0
	string                           _0xE22A77CE;                     // type:STRING.ATNONFINALHASHSTRING
	vec2                             _0x479EC2F0;                     // type:VECTOR2.0
	float                            _0x503F0D73;                     // type:FLOAT.0
	uint                             _0x95D1207A;                     // type:UINT.0
	uint                             _0x753C03CA;                     // type:UINT.0
	float                            _0x53BB1131;                     // type:FLOAT.0
};

struct _0xB161476C
{
	float                            _0xCD463612;                     // type:FLOAT.0
	array<struct _0xF35C8C5B, 3>     Layers;                          // type:ARRAY.MEMBER
	float                            _0x758E90DE;                     // type:FLOAT.0
	float                            _0x82B5C53D;                     // type:FLOAT.0
	float                            _0xED7B7BA2;                     // type:FLOAT.0
	float                            _0x5A157625;                     // type:FLOAT.0
};

struct _0xB178AE41
{
	array<struct _0xEBBC845F>        _0x702EFBD1;                     // type:ARRAY.ATARRAY
};

struct _0xB18227ED : CAICondition
{
	enum _0x563FBCEA                 DamagedPed;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xD434FEDC;                     // type:ENUM.32BIT
	string                           Group;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB18FE96F
{
	struct void                      pCondition;                      // type:STRUCT.EXTERNAL_NAMED
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	enum eGesturePriority            Priority;                        // type:ENUM.32BIT
};

struct _0xB193952E : _0x940B34F5
{
	bool                             _0xD782DCA3;                     // type:BOOL.0
};

struct _0xB199F70A
{
	uint                             Pctg;                            // type:UINT.0
	string                           ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB1A45B8F
{
	float                            _0x58FE5E23;                     // type:FLOAT.0
};

struct _0xB1A712DB
{
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            angleMin;                        // type:FLOAT.0
	float                            angleMax;                        // type:FLOAT.0
	float                            _0xA718C2BE;                     // type:FLOAT.0
	float                            _0xBFDC57C5;                     // type:FLOAT.0
	float                            _0xC53D8F0C;                     // type:FLOAT.0
	float                            _0x611FABE6;                     // type:FLOAT.0
};

struct _0xB1A9CB71 : CAICondition
{
};

struct _0xB1B0768B : uiRenderTargetBehaviorBase
{
	string                           _0x472B376D;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0x708370A1;                     // type:INT.0
	string                           _0x50420860;                     // type:STRING.ATSTRING
	matrix34V                        _0x4F32E7E0;                     // type:MAT34V.0
	float                            _0xD098388A;                     // type:FLOAT.0
	float                            _0xE281DC5D;                     // type:FLOAT.0
	float                            _0xB25C5064;                     // type:FLOAT.0
	float                            _0x64BC3521;                     // type:FLOAT.0
	bool                             _0x6B0F2421;                     // type:BOOL.0
};

struct _0xB1B5043D
{
	string                           _0x47AEE370;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x84F2E290;                     // type:BOOL.0
};

struct _0xB1C8D131 : _0x9B8C003A
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	float                            _0x1692EFBF;                     // type:FLOAT.0
	float                            _0xFA74B419;                     // type:FLOAT.0
	float                            _0xD2AD7A8E;                     // type:FLOAT.0
	float                            _0x2087DDB1;                     // type:FLOAT.0
	float                            _0xBCF296C8;                     // type:FLOAT.0
	string                           FilterId;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB1D2AF6A : CAICondition
{
};

struct _0xB1D8BF52
{
	float                            _0x2F5D6699;                     // type:FLOAT.0
	float                            _0x87A24E1E;                     // type:FLOAT.0
	float                            _0x9DD5E67B;                     // type:FLOAT.0
	float                            _0x6EE18DA0;                     // type:FLOAT.0
};

struct _0xB1D9A7FE : _0x1FB1BCEA
{
};

struct _0xB1DBDAA0
{
	array<struct _0x503BDAD3>        _0xAA79F10B;                     // type:ARRAY.ATARRAY
};

struct _0xB1F683FC : _0x8C354D49
{
	array<struct _0x8C354D49>        Resources;                       // type:ARRAY.ATARRAY
	array<struct _0x8C354D49>        OrderedResources;                // type:ARRAY.ATARRAY
};

struct _0xB21A7AC8 : _0xA57BA3ED
{
};

struct _0xB230FB19 : uiNavigationBehaviorBase
{
	bool                             _0xA182B4AE;                     // type:BOOL.0
	bool                             _0x38FE4B36;                     // type:BOOL.0
};

struct _0xB2476597
{
};

struct _0xB2512452 : _0x68BFBC75
{
	int64                            _0xCF0B6AEB;                     // type:INT64.0
	struct ItemDatabaseAwardDef      awarddef;                        // type:STRUCT.STRUCTURE
};

struct _0xB25EE510
{
	map<string, struct _0x75275B45>     Tables;                          // type:MAP.ATBINARYMAP
};

struct _0xB2743163 : _0xF5CD8B85
{
};

struct _0xB279BBD7 : uiEventDataBase
{
};

struct _0xB27E6751 : _0x36EECFB6
{
	enum _0x18DAC2FA                 action;                          // type:ENUM.32BIT
};

struct _0xB281167C
{
	uint                             adapterIndex;                    // type:UINT.0
	uint                             outputIndex;                     // type:UINT.0
	uint                             resolutionIndex;                 // type:UINT.0
	uint                             screenWidth;                     // type:UINT.0
	uint                             screenHeight;                    // type:UINT.0
	uint                             refreshRateIndex;                // type:UINT.0
	uint                             refreshRateNumerator;            // type:UINT.0
	uint                             refreshRateDenominator;          // type:UINT.0
	uint                             windowed;                        // type:UINT.0
	int                              vSync;                           // type:INT.0
	bool                             _0x492F95E8;                     // type:BOOL.0
	bool                             pauseOnFocusLoss;                // type:BOOL.0
	bool                             _0xF6AD7D9B;                     // type:BOOL.0
};

struct _0xB2861832 : _0x8A0DC979
{
};

struct _0xB286EFA8
{
	struct _0x188B79A1               GoldData;                        // type:STRUCT.STRUCTURE
	struct _0x188B79A1               _0x05F225C5;                     // type:STRUCT.STRUCTURE
	struct _0xA6B8916E               TreasureMap;                     // type:STRUCT.STRUCTURE
	array<struct _0x9892E5F5>        Streaks;                         // type:ARRAY.ATARRAY
};

struct _0xB2AB4E59 : _0x14229900
{
};

struct _0xB2B0054D
{
	float                            fMinEdgeLengthForMaxClimbAngle;  // type:FLOAT.0
	float                            fHighClimbHeightThreshold;       // type:FLOAT.0
	float                            fLowClimbMaxAngle;               // type:FLOAT.0
	float                            fHighClimbMaxAngle;              // type:FLOAT.0
};

struct _0xB2B34F13
{
	enum _0x08DBCEDC                 StyleMod;                        // type:ENUM.32BIT
	float                            FormationModifierMinDistanceFromUserToLeaveCover; // type:FLOAT.0
	float                            FormationModifierUnderFire;      // type:FLOAT.0
	float                            FormationModifierLeaderInCover;  // type:FLOAT.0
	float                            FormationModifierRunningAndGunning; // type:FLOAT.0
	float                            FormationModifierRequestFollowScore; // type:FLOAT.0
	float                            FormationMaxDistanceFromLeaderInCover; // type:FLOAT.0
	float                            FormationMaxDistanceFromLeaderNotInCover; // type:FLOAT.0
	float                            FormationPositionOffsetForward;  // type:FLOAT.0
	float                            FormationPositionOffsetSideways; // type:FLOAT.0
	array<float, 5>                  FormationTimeToMovePositionAmbient; // type:ARRAY.ATFIXEDARRAY
	array<float, 5>                  FormationTimeToMovePositionAlerted; // type:ARRAY.ATFIXEDARRAY
	array<float, 5>                  FormationTimeToMovePositionCombat; // type:ARRAY.ATFIXEDARRAY
	float                            PositionModifierFromSourceToMoveToLocationMin; // type:FLOAT.0
	float                            PositionModifierFromSourceToMoveToLocationMax; // type:FLOAT.0
	float                            PositionModifierFromThreatToMoveToLocationMin; // type:FLOAT.0
	float                            PositionModifierFromThreatToMoveToLocationMax; // type:FLOAT.0
	float                            PositionModifierDistanceOutsideDesiredRangeFromThreat; // type:FLOAT.0
	float                            PositionModifierDistanceOutsideDesiredRangeFromSource; // type:FLOAT.0
	float                            PositionModifierDistanceFromFormationToMoveToScaleMovingFast; // type:FLOAT.0
	float                            PositionModifierDistanceOutsideCurrentWeaponRange; // type:FLOAT.0
	float                            PositionModifierDistanceOutsideAllWeaponsRange; // type:FLOAT.0
	float                            PositionModifierCloseToOtherGroupMembers; // type:FLOAT.0
	float                            PositionModifierSourceToThreatDirScale; // type:FLOAT.0
	float                            PositionModifierSourceToThreatDirScaleAttacking; // type:FLOAT.0
	float                            PositionModifierSourceToThreatDirScaleRetreating; // type:FLOAT.0
	float                            CoverPointModifierDistanceFromUserToCoverLocationMin; // type:FLOAT.0
	float                            CoverPointModifierDistanceFromUserToCoverLocationMax; // type:FLOAT.0
	float                            CoverPointModifierDistanceFromUserDesired; // type:FLOAT.0
	float                            CoverPointModifierInitialWeightScale; // type:FLOAT.0
	float                            CoverPointModifierThreatAnalyzerScale; // type:FLOAT.0
	float                            CoverPointModifierNoLosCurrentCoverPointScale; // type:FLOAT.0
	float                            CoverPointModifierUserToCoverProjectedCoverDirScaleRetreating; // type:FLOAT.0
	float                            CoverPointModifierUserToCoverProjectedCoverDirScaleAttacking; // type:FLOAT.0
	float                            CoverPointModifierCurrentCoverPointBonus; // type:FLOAT.0
	float                            CoverPointModifierCurrentCoverPointBonusFirst5Seconds; // type:FLOAT.0
	float                            CoverPointModifierCurrentCoverPointBonusCombatFirst5Seconds; // type:FLOAT.0
	float                            CoverPointModifierCurrentCoverPointBonusLeaderApproaching; // type:FLOAT.0
	float                            CoverPointModifierPreviousCoverPointPenalty; // type:FLOAT.0
	float                            CoverPointModifierOnScreenBonus; // type:FLOAT.0
	float                            CoverPointModifierLinkedWithLeaderCoverPoint; // type:FLOAT.0
	float                            CoverPointModifierPoorAICover;   // type:FLOAT.0
	uint                             InjuredMaxDuration;              // type:UINT.0
	uint                             InjuredMinDurationSinceDamaged;  // type:UINT.0
	uint                             InjuredCoolDown;                 // type:UINT.0
	struct _0x3BD461D2               TacticalTuning;                  // type:STRUCT.STRUCTURE
};

struct _0xB2DF2E13 : camBaseDirectorMetadata
{
	string                           _0xA3E9D158;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5F37F67D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD8C38330;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7E42E10B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB2FC9566
{
	string                           _0x048BD163;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8CDCB53E;                     // type:STRING.ATNONFINALHASHSTRING
	uchar                            percentage;                      // type:UCHAR.0
	bool                             _0x1C902F24;                     // type:BOOL.0
	bool                             _0x88508D42;                     // type:BOOL.0
	bool                             _0xF152651A;                     // type:BOOL.0
};

struct _0xB2FCABFE
{
	int                              iRelativeZoomRange;              // type:INT.0
};

struct _0xB2FCD3E8 : _0x1054F746
{
};

struct _0xB3275BE3 : _0x1054F746
{
};

struct _0xB350FD39 : CTuning
{
	float                            _0x5D079C91;                     // type:FLOAT.0
	float                            _0x691B5089;                     // type:FLOAT.0
	int                              _0xBD87DCB0;                     // type:INT.0
	int                              _0x876628F2;                     // type:INT.0
	int                              _0xB6E90D25;                     // type:INT.0
	float                            _0x5CCD3B7B;                     // type:FLOAT.0
	float                            _0xEF92EA88;                     // type:FLOAT.0
	float                            _0x3C2E43FA;                     // type:FLOAT.0
	float                            _0x306EE5B6;                     // type:FLOAT.0
	float                            _0x026E37E5;                     // type:FLOAT.0
	int                              _0x1BFF5D4A;                     // type:INT.0
	int                              _0x205CD176;                     // type:INT.0
	float                            _0x3B05F96F;                     // type:FLOAT.0
	float                            _0x8F7C707B;                     // type:FLOAT.0
	float                            _0x2B3CD308;                     // type:FLOAT.0
	float                            _0xF56D308D;                     // type:FLOAT.0
	float                            _0xDB94248F;                     // type:FLOAT.0
	float                            _0x1D156B9C;                     // type:FLOAT.0
	float                            _0xFA4798AC;                     // type:FLOAT.0
	float                            _0xA4BB2CC6;                     // type:FLOAT.0
	float                            _0xC1D3A752;                     // type:FLOAT.0
	float                            _0x272F9DD5;                     // type:FLOAT.0
	float                            _0xBAD9AF20;                     // type:FLOAT.0
	float                            _0x2E8C9540;                     // type:FLOAT.0
	float                            _0x72E3034B;                     // type:FLOAT.0
	float                            _0x4CA03E7E;                     // type:FLOAT.0
	float                            _0xCAB99E40;                     // type:FLOAT.0
	float                            _0x46D03D09;                     // type:FLOAT.0
	float                            _0xBB88600B;                     // type:FLOAT.0
	float                            _0x15EB2F81;                     // type:FLOAT.0
	float                            _0x388AE561;                     // type:FLOAT.0
	float                            _0xA211995C;                     // type:FLOAT.0
	float                            _0x4AA0CB50;                     // type:FLOAT.0
	float                            _0x511C42EF;                     // type:FLOAT.0
	float                            _0x0C81DD78;                     // type:FLOAT.0
	float                            _0x13CD8B8A;                     // type:FLOAT.0
	float                            _0x403B350A;                     // type:FLOAT.0
	float                            _0x5363880F;                     // type:FLOAT.0
	float                            _0x50C35C6E;                     // type:FLOAT.0
	float                            _0x0F80754D;                     // type:FLOAT.0
	float                            _0xF20B0DB8;                     // type:FLOAT.0
	float                            _0x83AEFABE;                     // type:FLOAT.0
	float                            _0x4A972743;                     // type:FLOAT.0
	float                            _0x928D9669;                     // type:FLOAT.0
	int                              _0x39826612;                     // type:INT.0
};

struct _0xB35DC974
{
	vec3V                            PlayerPos;                       // type:VEC3V.0
	matrix34V                        CameraMtx;                       // type:MAT34V.0
	string                           Name;                            // type:STRING.ATSTRING
	struct _0x2481A03B               _0x2481A03B;                     // type:STRUCT.STRUCTURE
};

struct _0xB36C8609 : _0xB74AC865
{
};

struct _0xB385BC70
{
	string                           State;                           // type:STRING.ATNONFINALHASHSTRING
	float                            BlendDuration;                   // type:FLOAT.0
};

struct _0xB390E44D : _0xC6E687F5
{
	array<struct _0x4365821B>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0xB3936BF5 : _0xB390E44D
{
};

struct _0xB3A6BF23
{
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
	float                            _0xEEEA793F;                     // type:FLOAT.0
	float                            _0xCD593ECE;                     // type:FLOAT.0
	float                            _0xF230144E;                     // type:FLOAT.0
};

struct _0xB3B944A4
{
	vec3                             vStart;                          // type:VECTOR3.0
	vec3                             vEnd;                            // type:VECTOR3.0
};

struct _0xB3CC7D49
{
	struct _0xB2FCABFE               Zoom;                            // type:STRUCT.STRUCTURE
	struct _0x585D704A               Display;                         // type:STRUCT.STRUCTURE
	struct _0xD7AF813B               Helper;                          // type:STRUCT.STRUCTURE
};

struct _0xB3D3834F
{
	float                            _0x200AC9FD;                     // type:FLOAT.2
	float                            _0xDAAF8EA3;                     // type:FLOAT.2
	enum _0x6BCA108F                 _0x1C141290;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xBAF24A2C;                     // type:ENUM.32BIT
	float                            _0xFA3302C1;                     // type:FLOAT.0
	float                            _0x1D02A7D4;                     // type:FLOAT.0
	float                            _0x0F8317E5;                     // type:FLOAT.0
	uint                             _0x991C4BA1;                     // type:UINT.0
	uint                             _0xDFAC7ABF;                     // type:UINT.0
	uint                             _0x631E5CEE;                     // type:UINT.0
	uint                             _0xE6C0D913;                     // type:UINT.0
	uint                             _0xB414561A;                     // type:UINT.0
	enum _0x6BCA108F                 _0x2B18D7D9;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x4C18AB8C;                     // type:ENUM.32BIT
	float                            _0xCA495772;                     // type:FLOAT.0
	float                            _0xF322CA34;                     // type:FLOAT.2
	float                            _0x88C26736;                     // type:FLOAT.0
	float                            _0x2B9B0EC7;                     // type:FLOAT.0
	float                            _0x6A1FFAE3;                     // type:FLOAT.2
	float                            _0xCEF8A7FB;                     // type:FLOAT.2
	float                            _0x0D23E935;                     // type:FLOAT.2
	struct _0x18320175               Wagon;                           // type:STRUCT.STRUCTURE
	struct _0x18320175               _0xF721C38D;                     // type:STRUCT.STRUCTURE
	struct _0x30B3AC89               _0x13629A88;                     // type:STRUCT.STRUCTURE
	struct _0x30B3AC89               _0x48685D07;                     // type:STRUCT.STRUCTURE
};

struct _0xB3D3F4E9 : _0xC509663E
{
};

struct _0xB3EF21B5
{
	enum eAnimBoneTag                AttachmentBone;                  // type:ENUM.32BIT
	vec3V                            AttachmentOffset;                // type:VEC3V.0
	vec3V                            AttachmentRotation;              // type:VEC3V.0
};

struct _0xB408AD02
{
	array<struct _0x9338FABC>        Wearing;                         // type:ARRAY.ATARRAY
	struct _0x8C502B52               ScubaGearWithLightsOn;           // type:STRUCT.STRUCTURE
	struct _0x8C502B52               ScubaGearWithLightsOff;          // type:STRUCT.STRUCTURE
};

struct _0xB41333A2
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC9CD649F;                     // type:STRING.CONST_STRING
	string                           _0x57132ED9;                     // type:STRING.CONST_STRING
	array<enum _0x9AD7FC8D>          Timers;                          // type:ARRAY.ATARRAY
};

struct _0xB4145F7D
{
	float                            _0xF05DD1F6;                     // type:FLOAT.0
	float                            _0x7A744F07;                     // type:FLOAT.0
	float                            _0xEF7AE6E3;                     // type:FLOAT.0
	float                            _0x4270C95E;                     // type:FLOAT.2
	float                            _0x37A16EAC;                     // type:FLOAT.2
	float                            _0x9AE2F57C;                     // type:FLOAT.2
	float                            _0x37B59647;                     // type:FLOAT.0
	float                            _0x31534205;                     // type:FLOAT.0
	float                            _0x767C4336;                     // type:FLOAT.0
	bool                             _0x41E8AE87;                     // type:BOOL.0
	float                            _0x7F98D166;                     // type:FLOAT.0
	float                            _0xAE0371F8;                     // type:FLOAT.0
	float                            _0x92FC4363;                     // type:FLOAT.0
	float                            _0x593AE8E5;                     // type:FLOAT.0
	vec3V                            _0xF9E121F1;                     // type:VEC3V.0
	vec3V                            _0x6DD9620C;                     // type:VEC3V.0
	vec3V                            _0x08BA2F32;                     // type:VEC3V.0
	float                            _0xCFD23D58;                     // type:FLOAT.0
	float                            _0x6A1A0336;                     // type:FLOAT.0
	float                            _0x8859D411;                     // type:FLOAT.0
	float                            _0x79EEF0A4;                     // type:FLOAT.0
	float                            _0xBF0E8665;                     // type:FLOAT.0
	float                            _0x74A09706;                     // type:FLOAT.0
	float                            _0x2D491E18;                     // type:FLOAT.0
	float                            _0x6891F1F3;                     // type:FLOAT.2
	float                            _0x4AA54135;                     // type:FLOAT.0
	float                            _0x6DC9A232;                     // type:FLOAT.0
	uint                             _0x3738DD61;                     // type:UINT.0
};

struct _0xB41B16A1 : _0xAEE128BA
{
};

struct _0xB429AAE8 : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0xB43E5559
{
	string                           PedClipSet;                      // type:STRING.ATNONFINALHASHSTRING
	string                           TransportClipSet;                // type:STRING.ATNONFINALHASHSTRING
	string                           ClipName;                        // type:STRING.ATNONFINALHASHSTRING
	enum _0xC6AB2DAA                 PreferredGait;                   // type:ENUM.32BIT
	enum _0x90098237                 ToGait;                          // type:ENUM.32BIT
	enum _0x1D0E2A5B                 PreferredAngleType;              // type:ENUM.32BIT
	enum _0xC6AB2DAA                 ForcedGaitForNextMotion;         // type:ENUM.32BIT
	bitset<enum _0x0DE234D3>         TriggerConditionFlags;           // type:BITSET.32BIT
	bitset<enum _0x0DE234D3>         ExcludedTriggerConditionFlags;   // type:BITSET.32BIT
	bitset<enum _0xDCF816E1>         PreStreamConditionFlags;         // type:BITSET.32BIT
	bitset<enum _0xDCF816E1>         _0x36375A80;                     // type:BITSET.32BIT
	enum eStreamingPriority          PreStreamPriority;               // type:ENUM.32BIT
	string                           NetworkDefId;                    // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xDF0DA4F6>         Flags;                           // type:BITSET.32BIT
};

struct _0xB43E5DEF : CTuning
{
	array<struct _0x8C1D122A>        Constraints;                     // type:ARRAY.ATARRAY
	array<struct _0x8C1D122A>        _0x4BBC8DE6;                     // type:ARRAY.ATARRAY
	float                            _0x21D7A4A7;                     // type:FLOAT.0
	float                            _0x61243E88;                     // type:FLOAT.0
	float                            _0xDC851920;                     // type:FLOAT.0
	float                            _0x8A9709F5;                     // type:FLOAT.0
	float                            _0x2CE98F46;                     // type:FLOAT.0
	float                            _0x541AD63D;                     // type:FLOAT.0
	float                            _0x9A342EB8;                     // type:FLOAT.0
};

struct _0xB43EDFF8 : CTuning
{
	float                            _0x9F33C96C;                     // type:FLOAT.0
	float                            _0xB8691205;                     // type:FLOAT.0
	float                            _0x162D50CD;                     // type:FLOAT.0
	float                            _0xE4CC7FCA;                     // type:FLOAT.0
	float                            _0xAE26224D;                     // type:FLOAT.0
	float                            _0x05386330;                     // type:FLOAT.0
	float                            _0x47434756;                     // type:FLOAT.0
	float                            _0x72457998;                     // type:FLOAT.0
	float                            _0x2FC3DBEE;                     // type:FLOAT.0
	bool                             _0x538BA213;                     // type:BOOL.0
	bool                             _0x4AAC9410;                     // type:BOOL.0
	bool                             _0xCB754AFA;                     // type:BOOL.0
	bool                             _0x5D339A8B;                     // type:BOOL.0
	uint                             _0xA3856948;                     // type:UINT.0
	uint                             _0x496C27D7;                     // type:UINT.0
};

struct _0xB4448DBC : _0x8A0DC979
{
};

struct _0xB444ACAE : _0x1054F746
{
};

struct _0xB44DF574 : _0x23DAEDEE
{
	struct _0x1054F746               _0xB575AA56;                     // type:STRUCT.POINTER
};

struct _0xB4712173
{
	float                            DefaultEnergy;                   // type:FLOAT.0
	float                            CoreEnergy;                      // type:FLOAT.0
	float                            OverPowerEnergy;                 // type:FLOAT.0
	float                            GoldCoreEnergy;                  // type:FLOAT.0
	float                            TimeUnitForOverpowered;          // type:FLOAT.0
	struct _0xF315338A               EnergyReserveProperties;         // type:STRUCT.STRUCTURE
};

struct _0xB473FE0D
{
	vec4                             FontExtents;                     // type:VECTOR4.0
	vec2                             MaxLettersOnPlate;               // type:VECTOR2.0
	vec2                             FontOutlineMinMaxDepth;          // type:VECTOR2.0
	string                           TextureSetName;                  // type:STRING.ATNONFINALHASHSTRING
	string                           DiffuseMapName;                  // type:STRING.ATNONFINALHASHSTRING
	string                           NormalMapName;                   // type:STRING.ATNONFINALHASHSTRING
	uint                             FontColor;                       // type:UINT.1
	uint                             FontOutlineColor;                // type:UINT.1
	bool                             IsFontOutlineEnabled;            // type:BOOL.0
};

struct _0xB47A5F50 : _0xFABD9DF5
{
};

struct _0xB486663A
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            Priority;                        // type:FLOAT.0
	bitset<enum _0x1C304BFE>         Mode;                            // type:BITSET.32BIT
};

struct _0xB488D635
{
	enum _0x3B810919                 CalculationStyle;                // type:ENUM.32BIT
	float                            HeightDifferenceMultiplierMin;   // type:FLOAT.0
	float                            HeightDifferenceMultiplierMax;   // type:FLOAT.0
	float                            HeightDifferenceForArrow;        // type:FLOAT.0
	float                            HeightThresholdClose;            // type:FLOAT.0
	float                            HeightThresholdFar;              // type:FLOAT.0
	float                            HeightThresholdDistance;         // type:FLOAT.0
};

struct _0xB4A4AC8A
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Txd;                             // type:STRING.ATNONFINALHASHSTRING
	string                           Color;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB4A4BBFA
{
	string                           CameraType;                      // type:STRING.ATNONFINALHASHSTRING
	vec3                             TargetOriginOffset;              // type:VECTOR3.0
	float                            fMaxMBR;                         // type:FLOAT.0
	float                            fOutOfBoundsAutoMoveMBR;         // type:FLOAT.0
	float                            fForwardAngle;                   // type:FLOAT.0
	float                            fActivationTimeSeconds;          // type:FLOAT.0
	float                            MaxDistanceToProjectPotentialPosition; // type:FLOAT.0
	float                            MinDistanceToMove;               // type:FLOAT.0
	float                            TimeToLive;                      // type:FLOAT.0
	float                            fMaxZDiff;                       // type:FLOAT.0
	bool                             bForceCrouch;                    // type:BOOL.0
	bool                             bUseCameraLockOn;                // type:BOOL.0
	bool                             bUseFacing;                      // type:BOOL.0
	bool                             bUseHeadingRelativeForward;      // type:BOOL.0
	bool                             bUseOutOfBoundsAutoMove;         // type:BOOL.0
	bool                             bAllowToLeaveOuterBounds;        // type:BOOL.0
	bool                             bForceActive;                    // type:BOOL.0
	bool                             bForceInteractionLockOnTarget;   // type:BOOL.0
	bool                             bAllowToUseInteractionLockon;    // type:BOOL.0
	enum _0x40AD64D7                 InteractionLockOnPositionSmoothingLevel; // type:ENUM.32BIT
	bool                             bUseSpeedMatching;               // type:BOOL.0
	bool                             bForceTightCameraFraming;        // type:BOOL.0
	bool                             bHideFooterIconInIlo;            // type:BOOL.0
	bool                             bAlwaysShowInteractionPrompts;   // type:BOOL.0
	bool                             bExtendInteractionRange;         // type:BOOL.0
	bool                             bTurnToTargetOnNoStickInput;     // type:BOOL.0
	bool                             bPreferTurnTowardsFocus;         // type:BOOL.0
	enum _0x5EA6FA6E                 ILOConversationCamPrefferedSide; // type:ENUM.32BIT
};

struct _0xB4A66F44
{
	array<struct _0x4C3FAEBB>        Probes;                          // type:ARRAY.ATARRAY
	float                            MaxDiffZBetweenGroundProbes;     // type:FLOAT.0
	float                            MaxDiffAngleAndGroundNormal;     // type:FLOAT.0
};

struct _0xB4A9A425 : CTuning
{
	string                           _0xEE2D08AF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7FA54576;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3510D6B7;                     // type:FLOAT.0
	float                            _0xC5E64009;                     // type:FLOAT.0
	float                            _0x326D76A3;                     // type:FLOAT.0
	float                            _0x12EC75EE;                     // type:FLOAT.0
	float                            _0xFD50A2AA;                     // type:FLOAT.0
	float                            _0x74FB6896;                     // type:FLOAT.0
	float                            _0x5B1DBFF7;                     // type:FLOAT.0
	float                            _0xF66F6B5A;                     // type:FLOAT.0
	float                            _0x33B9F4FA;                     // type:FLOAT.0
	float                            _0x180659A0;                     // type:FLOAT.0
	float                            _0xF4D90846;                     // type:FLOAT.0
	float                            _0x2FA998DE;                     // type:FLOAT.0
};

struct _0xB4B211D7 : _0x940B34F5
{
};

struct _0xB4B3A2E1
{
	map<enum _0x937C6715, string>     SoundSets;                       // type:MAP.ATBINARYMAP
	map<string, string>               Sounds;                          // type:MAP.ATBINARYMAP
};

struct _0xB4BB0CE3 : _0x713D63A6
{
};

struct _0xB4C6EAE6 : CTuning
{
	uint                             _0x862B510D;                     // type:UINT.0
	uint                             _0xE270EDD2;                     // type:UINT.0
	uint                             _0xD5F6A845;                     // type:UINT.0
	int                              _0x29921AEE;                     // type:INT.0
};

struct _0xB4D0EF97
{
	vec3V                            frequency;                       // type:VEC3V.0
	vec3V                            amplitude;                       // type:VEC3V.0
	vec3V                            base;                            // type:VEC3V.0
	vec3V                            min;                             // type:VEC3V.0
	vec3V                            max;                             // type:VEC3V.0
	float                            persistence;                     // type:FLOAT.0
	float                            separation;                      // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	float                            phase;                           // type:FLOAT.0
	float                            kelvinRange;                     // type:FLOAT.0
	string                           positionAnim;                    // type:STRING.ATNONFINALHASHSTRING
	string                           dampingBlend;                    // type:STRING.ATNONFINALHASHSTRING
	string                           windBlend;                       // type:STRING.ATNONFINALHASHSTRING
	string                           curveBlend;                      // type:STRING.ATNONFINALHASHSTRING
	string                           brokenAnim;                      // type:STRING.ATNONFINALHASHSTRING
	float                            turb;                            // type:FLOAT.0
	float                            octaves;                         // type:FLOAT.0
	float                            invert;                          // type:FLOAT.0
	float                            sinwave;                         // type:FLOAT.0
	bool                             temperature;                     // type:BOOL.0
	bool                             overrideColor;                   // type:BOOL.0
	bool                             applyToStaticShadows;            // type:BOOL.0
};

struct _0xB4E72C13 : _0x2F7DA38D
{
	string                           _0xFA288610;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB4ED5FA1
{
	string                           ptFxName;                        // type:STRING.ATNONFINALHASHSTRING
	uchar                            _0x25F1384F;                     // type:UCHAR.0
	uchar                            _0xE5B837DA;                     // type:UCHAR.0
	uchar                            _0x19749F52;                     // type:UCHAR.0
};

struct _0xB4F17D60 : _0x6BA40A2D
{
};

struct _0xB514EAE2 : _0x23D256ED
{
	enum _0x0100F80E                 EasingType;                      // type:ENUM.32BIT
	string                           CustomCurveArchiveName;          // type:STRING.ATNONFINALHASHSTRING
	string                           CustomCurveRef;                  // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB535E7DA : _0x8A0DC979
{
	string                           ContextType;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             restoreOnExit;                   // type:BOOL.0
};

struct _0xB539C562
{
	struct SFleeStyle__SetSimpleMemory     SetMemory;                       // type:STRUCT.POINTER
	struct CAICondition                    Condition;                       // type:STRUCT.POINTER
	float                                  CheckFreqMin;                    // type:FLOAT.0
	float                                  CheckFreqMax;                    // type:FLOAT.0
	float                                  DistanceMin;                     // type:FLOAT.0
	float                                  DistanceMax;                     // type:FLOAT.0
	float                                  DistanceBuffer;                  // type:FLOAT.0
	float                                  TimeMin;                         // type:FLOAT.0
	float                                  TimeMax;                         // type:FLOAT.0
	enum _0x244E919F                       To;                              // type:ENUM.32BIT
	bool                                   Quit;                            // type:BOOL.0
};

struct _0xB5634E29
{
	struct _0xBF2BD132               _0xEB6562D4;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0xF3F736CC;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x08B74473;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x9E744183;                     // type:STRUCT.STRUCTURE
	float                            _0x0D12E4BA;                     // type:FLOAT.0
};

struct _0xB56B1493 : CAICondition
{
	float                            MaxTime;                         // type:FLOAT.0
};

struct _0xB5829B05
{
	array<struct CStreamingRequestRecord>     Sections;                        // type:ARRAY.ATARRAY
};

struct _0xB595C465
{
	string                           UpperBodyMotionType;             // type:STRING.ATNONFINALHASHSTRING
	enum eWeaponAttachPoint          AttachPoint;                     // type:ENUM.32BIT
};

struct _0xB5A7E7DA
{
	float                            _0xF814C86F;                     // type:FLOAT.0
	float                            _0x79000951;                     // type:FLOAT.0
	float                            _0xD336CF47;                     // type:FLOAT.0
	float                            _0xA24639E6;                     // type:FLOAT.0
	float                            _0xB75C5830;                     // type:FLOAT.0
	float                            _0xCF8A46C2;                     // type:FLOAT.0
	float                            RollSpringConstant;              // type:FLOAT.0
	float                            _0xA955FFFD;                     // type:FLOAT.0
	float                            _0x68B299A6;                     // type:FLOAT.0
	float                            _0x8FAD1D64;                     // type:FLOAT.0
	float                            _0xB51925C0;                     // type:FLOAT.0
	float                            _0x99824816;                     // type:FLOAT.0
	float                            _0x306F3F98;                     // type:FLOAT.0
	float                            _0x77F9F634;                     // type:FLOAT.0
	float                            _0x54B36A3F;                     // type:FLOAT.0
	float                            _0xDB41D609;                     // type:FLOAT.0
	float                            _0xBF4214F6;                     // type:FLOAT.0
	float                            _0x0083F613;                     // type:FLOAT.0
	float                            _0x58A8D45F;                     // type:FLOAT.0
	float                            _0x0C7492FC;                     // type:FLOAT.0
	float                            _0x344FA607;                     // type:FLOAT.0
	float                            _0x3A827361;                     // type:FLOAT.0
	float                            _0x56103CED;                     // type:FLOAT.0
	float                            _0x1209823C;                     // type:FLOAT.0
	float                            _0x860A0895;                     // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	uint                             _0xA10F9575;                     // type:UINT.0
	uint                             _0xEA3300FD;                     // type:UINT.0
	uint                             _0xC06B7BFC;                     // type:UINT.0
	enum _0x0100F80E                 _0xED3F9E04;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x2C89299E;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x0B208F2E;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x27ACC225;                     // type:ENUM.32BIT
	float                            _0x58AABA89;                     // type:FLOAT.0
	float                            _0x854816DF;                     // type:FLOAT.0
	float                            _0x725BDD56;                     // type:FLOAT.0
	float                            _0xAF74183C;                     // type:FLOAT.0
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            _0xBDE8E7FF;                     // type:FLOAT.0
};

struct _0xB5B6D38B : _0x39DE799A
{
};

struct _0xB5CFEB25
{
	string                           Key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           BaseClipSetHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           CoreClipSetHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           VariationClipSetHash;            // type:STRING.ATNONFINALHASHSTRING
	string                           AttackerLocoClipSetHash;         // type:STRING.ATNONFINALHASHSTRING
	enum _0xE02F3066                 AttackerFacialMood;              // type:ENUM.32BIT
	string                           VictimLocoClipSetHash;           // type:STRING.ATNONFINALHASHSTRING
	enum _0xE02F3066                 VictimFacialMood;                // type:ENUM.32BIT
	bool                             AllowTurns;                      // type:BOOL.0
	bool                             AllowMovement;                   // type:BOOL.0
	bool                             AllowStrafe;                     // type:BOOL.0
	bool                             AllowAttachment;                 // type:BOOL.0
	bool                             AllowNavMeshLos;                 // type:BOOL.0
	bool                             AttackerHasPredominantIK;        // type:BOOL.0
	bool                             AllowCombatInstantKO;            // type:BOOL.0
	string                           ChokePromptHash;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ReleasePromptHash;               // type:STRING.ATNONFINALHASHSTRING
	string                           AttackPromptHash;                // type:STRING.ATNONFINALHASHSTRING
	string                           ExecutePromptHash;               // type:STRING.ATNONFINALHASHSTRING
	string                           StruggleAttPromptHash;           // type:STRING.ATNONFINALHASHSTRING
	string                           StruggleVicPromptHash;           // type:STRING.ATNONFINALHASHSTRING
	string                           BlockVicPromptHash;              // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB5EE0546
{
	bool                             SpinClockwiseDuringReload;       // type:BOOL.0
	bool                             SpinClockwiseDuringFire;         // type:BOOL.0
	int                              BulletOffset;                    // type:INT.0
	int                              _0xAE36D114;                     // type:INT.0
};

struct _0xB600907C
{
	map<string, struct _0xC0786063>     _0x7AA5EA4F;                     // type:MAP.ATBINARYMAP
};

struct _0xB6029A68
{
	array<struct _0x5AD1191D>        videos;                          // type:ARRAY.ATARRAY
};

struct _0xB60484C1
{
	map<uint, struct _0xC7B02A2F>     Properties;                      // type:MAP.ATMAP
};

struct _0xB60BDAA8 : _0x2F7DA38D
{
};

struct _0xB627C2AA
{
	array<struct _0xBCACB077>           _0x2DD09308;                     // type:ARRAY.ATARRAY
	map<string, struct _0x2055FAC1>     _0x1D11FE5F;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xA1D7BE60>     _0x6B3CAE5F;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x8FD4EF58>     _0x0BC5999E;                     // type:MAP.ATBINARYMAP
	array<struct _0xA6A1FDF0>           _0x6CC14CFA;                     // type:ARRAY.ATARRAY
};

struct _0xB62FA1B9 : CAICondition
{
};

struct _0xB634406D : _0x2F7DA38D
{
	float                            fStartTime;                      // type:FLOAT.0
};

struct _0xB63EC1F3
{
	float                            MinOnFootOrderDistance;          // type:FLOAT.0
	float                            MaxOnFootOrderDistance;          // type:FLOAT.0
	float                            OnFootVelocityThreshold;         // type:FLOAT.0
	float                            MinInVehicleOrderDistance;       // type:FLOAT.0
	float                            MaxInVehicleOrderDistance;       // type:FLOAT.0
	float                            InVehicleVelocityThreshold;      // type:FLOAT.0
	float                            MinOnMountOrderDistance;         // type:FLOAT.0
	float                            MaxOnMountOrderDistance;         // type:FLOAT.0
	float                            OnMountVelocityThreshold;        // type:FLOAT.0
	uint                             MinOrderLifetimeMS;              // type:UINT.0
	float                            MinEscapingPlayerVelocity;       // type:FLOAT.0
	float                            MinFleeingPlayerVelocity;        // type:FLOAT.0
	float                            MinFleeingPlayerTime;            // type:FLOAT.0
	float                            MinTimeChasingToCull;            // type:FLOAT.0
	float                            MinFleeingPlayerCullDistance;    // type:FLOAT.0
	float                            MaxDotBehindEscapingPlayer;      // type:FLOAT.0
	float                            MaxDotBehindFleeingPlayer;       // type:FLOAT.0
	uint                             MinTimeBetweenCullingPedsBehindPlayerMS; // type:UINT.0
	uchar                            MinPedsBehindFleeingPlayerToCull; // type:UCHAR.0
};

struct _0xB656D1E1 : _0x3AB6499E
{
	string                           EnvelopeRef;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB67D1B2D : camBaseObjectMetadata
{
	map<string, string>              Map;                             // type:MAP.ATBINARYMAP
};

struct _0xB6862DFA
{
	uint                             xenonLightColor;                 // type:UINT.1
	uint                             xenonCoronaColor;                // type:UINT.1
	float                            xenonLightIntensityModifier;     // type:FLOAT.0
	float                            xenonCoronaIntensityModifier;    // type:FLOAT.0
};

struct _0xB69694B9
{
	map<string, struct _0xD78EAC03>     _0x45BE91A4;                     // type:MAP.ATBINARYMAP
	map<int, struct _0xC3EBAEBF>        _0x70346209;                     // type:MAP.ATBINARYMAP
};

struct _0xB6BD37A1
{
	array<string>                    Weapons;                         // type:ARRAY.ATARRAY
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB6BE0EC3
{
	string                           _0xFF1A7F25;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF879D446;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB6DDA2FF
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           Hash;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB6EA09BE
{
	uint                             _0x68C841EA;                     // type:UINT.0
	float                            _0xE5DF40B5;                     // type:FLOAT.0
};

struct _0xB7113FA6 : _0x3AB6499E
{
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            Acceleration;                    // type:FLOAT.0
	float                            Deceleration;                    // type:FLOAT.0
	float                            MaxHeadingSpeed;                 // type:FLOAT.0
	float                            MaxPitchSpeed;                   // type:FLOAT.0
	float                            _0x9083DE41;                     // type:FLOAT.0
	float                            _0x1347DA8F;                     // type:FLOAT.0
	float                            _0x0764DB8B;                     // type:FLOAT.0
	float                            _0xF46508B8;                     // type:FLOAT.0
	float                            _0xE7214A6D;                     // type:FLOAT.0
	bool                             _0x599AB69E;                     // type:BOOL.0
	bool                             _0xC6FF35E0;                     // type:BOOL.0
	float                            _0x5BB56E4B;                     // type:FLOAT.0
	float                            _0x7DCB4063;                     // type:FLOAT.0
	uint                             _0x01568CB1;                     // type:UINT.0
	bool                             ShouldUseGameTime;               // type:BOOL.0
	bool                             _0x0160E438;                     // type:BOOL.0
	string                           InputEnvelopeRef;                // type:STRING.ATNONFINALHASHSTRING
	bool                             ShouldApplyAimSensitivityPref;   // type:BOOL.0
	vec2                             AimSensitivityScalingLimits;     // type:VECTOR2.0
	struct _0x6A7B9953               PrecisionAimSettings;            // type:STRUCT.STRUCTURE
};

struct _0xB7323E10
{
	struct _0xDE202ECD               OnFoot;                          // type:STRUCT.STRUCTURE
	struct _0xDE202ECD               OnMount;                         // type:STRUCT.STRUCTURE
	struct _0xDE202ECD               InVehicle;                       // type:STRUCT.STRUCTURE
};

struct _0xB73400A8 : _0xCD9BCB7D
{
	bool                             _0x703CFEEA;                     // type:BOOL.0
};

struct _0xB74710D5
{
	float                            Root;                            // type:FLOAT.0
	float                            _0xB056C425;                     // type:FLOAT.0
	float                            _0xA94F7303;                     // type:FLOAT.0
	float                            Spine0;                          // type:FLOAT.0
	float                            Spine1;                          // type:FLOAT.0
	float                            Spine2;                          // type:FLOAT.0
	float                            Spine3;                          // type:FLOAT.0
	float                            Neck;                            // type:FLOAT.0
	float                            _0x6244E0B9;                     // type:FLOAT.0
	float                            _0x3B998EDB;                     // type:FLOAT.0
	float                            Tail;                            // type:FLOAT.0
	float                            _0x5C8F9F27;                     // type:FLOAT.0
	float                            _0x34F0BD0B;                     // type:FLOAT.0
};

struct _0xB74AC865
{
};

struct _0xB74C7BC6 : StatsChallengeUIInfo
{
};

struct _0xB7587A55 : _0xA50A773D
{
	uint                             hash;                            // type:UINT.0
	array<float, 3>                  position;                        // type:ARRAY.MEMBER
	quatV                            rotation;                        // type:QUATV.0
};

struct _0xB75DE0AC : _0x1054F746
{
};

struct _0xB76095BB : _0xBF9602D8
{
};

struct _0xB76589A6 : CBaseSaveObject
{
	uint                             _0xB5DE5B10;                     // type:UINT.0
	uint                             _0xEFE1B221;                     // type:UINT.0
	array<struct SUnlockInfo>        _0x33136664;                     // type:ARRAY.ATARRAY
};

struct _0xB76D0EC2
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x8F5DEFB0               TimeOfDaySeeingRangeModifiers;   // type:STRUCT.STRUCTURE
	array<struct _0xEDB90460, 5>     aWeatherPerceptionSeeingInfo;    // type:ARRAY.ATFIXEDARRAY
	array<struct _0xEDB90460, 5>     aWeatherPerceptionHearingInfo;   // type:ARRAY.ATFIXEDARRAY
};

struct _0xB76F0E85
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xF2E3729A               _0x288AB300;                     // type:STRUCT.STRUCTURE
	struct _0x227902DE               _0xB79CEF1F;                     // type:STRUCT.STRUCTURE
	string                           _0x43E45516;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB76FCD44
{
	string                           SoundSet;                        // type:STRING.ATNONFINALHASHSTRING
	string                           SoundName;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB7756A02 : _0x4AD37C0A
{
	array<struct _0x4D8E6813>        _0x83CC65E7;                     // type:ARRAY.ATARRAY
};

struct _0xB77B5B87 : _0xB9E5BFAA
{
};

struct _0xB7AA21E0
{
	vec2V                            Center;                          // type:VEC2V.0
	float                            InnerRadius;                     // type:FLOAT.0
	float                            _0xC3152138;                     // type:FLOAT.0
	enum _0x4EEED54E                 _0x07B1BFAD;                     // type:ENUM.32BIT
	float                            Rotation;                        // type:FLOAT.0
	vec2V                            _0xCB88AEA7;                     // type:VEC2V.0
};

struct _0xB7B6BD27
{
	map<string, struct _0x96FDE05F>     TransitionsTo;                   // type:MAP.ATBINARYMAP
};

struct _0xB7BDB1C9
{
	struct _0x24749343               clip;                            // type:STRUCT.STRUCTURE
	float                            duration;                        // type:FLOAT.0
	array<struct _0x2F87123E>        tags;                            // type:ARRAY.ATARRAY
};

struct _0xB7C29AE1 : _0xDADCC046
{
	float                                        _0xF74246AB;                     // type:FLOAT.0
	float                                        _0x7513533E;                     // type:FLOAT.0
	array<struct Loco__UpperBodyFidgetTimer>     _0x4E4116B1;                     // type:ARRAY.ATARRAY
};

struct _0xB7C36703
{
	array<struct _0x713227F6>           InteriorOverrides;               // type:ARRAY.ATARRAY
	map<string, struct _0x1C594B3D>     InteriorStore;                   // type:MAP.ATBINARYMAP
};

struct _0xB7D123AA : uiScreenAdjustableBehaviorBase
{
};

struct _0xB7EE2C6C : _0xCDE68793
{
};

struct _0xB7FD9BCD : _0x0A510DA9
{
	struct _0xCE064FC1               Path;                            // type:STRUCT.STRUCTURE
};

struct _0xB82D6E86
{
	int                              _0x57E24036;                     // type:INT.0
	int                              _0x790CC0BB;                     // type:INT.0
};

struct _0xB834358C
{
	float                            _0x46BA8296;                     // type:FLOAT.0
	float                            _0x0F998571;                     // type:FLOAT.0
	float                            _0xCCBD7C18;                     // type:FLOAT.0
	float                            _0x0010FB7E;                     // type:FLOAT.0
	float                            _0xD9546D7E;                     // type:FLOAT.0
	float                            _0x12FFE716;                     // type:FLOAT.0
	float                            _0x8E737D0A;                     // type:FLOAT.0
	float                            _0x3A86B686;                     // type:FLOAT.0
	float                            _0x99BEEF35;                     // type:FLOAT.0
	float                            _0x88D5124C;                     // type:FLOAT.0
	float                            _0x38468CE9;                     // type:FLOAT.0
	float                            _0xD95015DA;                     // type:FLOAT.0
	float                            _0x03477EC0;                     // type:FLOAT.0
	float                            _0x87CA64C7;                     // type:FLOAT.0
	float                            _0x5DE338BF;                     // type:FLOAT.0
};

struct _0xB839570B : CTuning
{
	struct _0x06D6AD56               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xB83F2ECC : CTuning
{
	float                            _0x5D0FD4A1;                     // type:FLOAT.0
	float                            _0x660741CE;                     // type:FLOAT.0
	float                            _0x6FA905FE;                     // type:FLOAT.0
	float                            _0xCABE5454;                     // type:FLOAT.0
	float                            _0xEA27CC6D;                     // type:FLOAT.0
	float                            _0x3116440B;                     // type:FLOAT.0
	float                            _0xBF49BFE0;                     // type:FLOAT.0
	float                            _0xE5321C6E;                     // type:FLOAT.0
	float                            _0x19423758;                     // type:FLOAT.0
	float                            _0xC11A6DD3;                     // type:FLOAT.0
	float                            _0xC4F2172D;                     // type:FLOAT.0
	float                            _0xBF90CC76;                     // type:FLOAT.0
	float                            _0x14D571A2;                     // type:FLOAT.0
	float                            _0xE5BE47CF;                     // type:FLOAT.0
	float                            _0xDF65272C;                     // type:FLOAT.0
	float                            _0x802EB7D2;                     // type:FLOAT.0
	int                              _0xD2EDC2E6;                     // type:INT.0
	bool                             _0xB6F341A1;                     // type:BOOL.0
};

struct _0xB83FE8C0
{
	array<struct _0x4183745C>        Probes;                          // type:ARRAY.ATARRAY
};

struct _0xB845626C : CTuning
{
	float                            _0x02A9CF25;                     // type:FLOAT.0
	float                            _0x99A20CEB;                     // type:FLOAT.0
	uint                             _0x19E182AC;                     // type:UINT.0
};

struct _0xB849E6EF
{
	float                            Dist;                            // type:FLOAT.0
	struct CAISpeed                  Speed;                           // type:STRUCT.STRUCTURE
};

struct _0xB8540E18
{
	string                           _0x4310E38A;                     // type:STRING.ATNONFINALHASHSTRING
	int                              _0xA2B54B35;                     // type:INT.0
};

struct _0xB86F7860
{
	string                                          _0xC94835F0;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x9FE3AC91;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x14B9E8C8;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x5AAD5DE6;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x9B2D32E2;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x5517855B;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x418CD058;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x670A7C56;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xDC2BBF98;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x0FE0DE23;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x54D91FF0;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x9C548DB4;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x3EE1ADF0;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x14C75C72;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x156A4AF7;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                            _0x7C5573F3;                     // type:BOOL.0
	bool                                            _0xCBA179A4;                     // type:BOOL.0
	bool                                            _0x0D03D30C;                     // type:BOOL.0
	bool                                            _0x12D5A77B;                     // type:BOOL.0
	bool                                            _0x66CDEEB4;                     // type:BOOL.0
	bool                                            _0xE9C4C8E2;                     // type:BOOL.0
	bool                                            _0x64AEB95E;                     // type:BOOL.0
	bool                                            _0xDB8390FC;                     // type:BOOL.0
	bitset<enum eMovementTransitionHelperFlags>     _0xB18253BF;                     // type:BITSET.32BIT
	float                                           _0xB5A1FD7E;                     // type:FLOAT.0
	float                                           _0x8068EDF7;                     // type:FLOAT.0
	float                                           _0x257B6BFB;                     // type:FLOAT.0
	float                                           _0x60E8DA66;                     // type:FLOAT.0
	struct _0xE7AE10CB                              _0x584ED3D3;                     // type:STRUCT.STRUCTURE
	struct _0x51B93A98                              _0xDF0AC379;                     // type:STRUCT.STRUCTURE
	struct _0x5FD5510F                              _0x5E0E10FE;                     // type:STRUCT.STRUCTURE
	float                                           _0xE7AD7B16;                     // type:FLOAT.0
	float                                           _0xDC6D417A;                     // type:FLOAT.0
	float                                           _0xA2739EAA;                     // type:FLOAT.0
	float                                           _0x88A2EC79;                     // type:FLOAT.0
	float                                           _0x8FBAEC4D;                     // type:FLOAT.0
	float                                           _0x3905620D;                     // type:FLOAT.0
	float                                           _0xF4C36BDC;                     // type:FLOAT.0
	array<struct _0xE80E8DB0>                       _0x441676BB;                     // type:ARRAY.ATARRAY
	array<struct _0xE80E8DB0>                       _0x317FBC3E;                     // type:ARRAY.ATARRAY
	array<struct _0xE80E8DB0>                       _0xCA50F22E;                     // type:ARRAY.ATARRAY
	string                                          _0xECF54779;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x564412A7;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xF343233B;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x9C77A16E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xEA941CD8;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x8492677E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xE9A4A4DE;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x550F0AD2;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x4D332E2E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x550EE6FC;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xCBB71F75;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x1D744910;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0x4F1F88F3;                     // type:STRING.ATNONFINALHASHSTRING
	vec2V                                           _0x5D923575;                     // type:VEC2V.0
	bool                                            _0x28C9BDBD;                     // type:BOOL.0
	bool                                            _0x65C48928;                     // type:BOOL.0
	bool                                            _0xCE44423A;                     // type:BOOL.0
	float                                           _0xE47AC5B2;                     // type:FLOAT.0
	float                                           _0xBB5FDDE5;                     // type:FLOAT.0
	bool                                            _0xAFF0F9B3;                     // type:BOOL.0
	float                                           _0xA913C8F2;                     // type:FLOAT.0
};

struct _0xB87279B4 : _0x2F7DA38D
{
	struct _0x88D891F7               tag;                             // type:STRUCT.POINTER
};

struct _0xB87A7DE0
{
	array<struct _0x1ABDF96A>        _0x05F4C50B;                     // type:ARRAY.ATARRAY
};

struct _0xB87C1272 : _0xA26E1113
{
	uint                             value;                           // type:UINT.0
};

struct _0xB88D6BEE
{
	string                           TargetPathSolver;                // type:STRING.ATNONFINALHASHSTRING
	string                           Duration;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB89C4C40 : _0x6277482B
{
	array<struct _0x478AE1AC>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0xB8A3F5A4 : _0x8A0DC979
{
};

struct _0xB8A8B4A7 : _0xEAE4BA5A
{
	bool                             _0x05AA3F9C;                     // type:BOOL.0
	enum _0x4F69766B                 Channel;                         // type:ENUM.32BIT
};

struct _0xB8AEB071 : CTuning
{
	float                            _0xE8C2030C;                     // type:FLOAT.0
};

struct _0xB8B15067 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xB8B52ABB
{
	map<enum _0xBEEA6142, struct _0x2CEC6053>     _0xAAD0BC3D;                     // type:MAP.ATBINARYMAP
};

struct _0xB8C46CEA : _0x0A510DA9
{
};

struct _0xB8D37414
{
};

struct _0xB8DDDFF4 : _0x14229900
{
};

struct _0xB8E0E271
{
	bool                             _0xB855CED5;                     // type:BOOL.0
	float                            _0x67893FA6;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0xB8E3D843
{
	array<struct _0x936F849B>        _0xEEB79858;                     // type:ARRAY.ATARRAY
	array<struct _0xCA5D17D0>        position;                        // type:ARRAY.ATARRAY
	array<struct _0xE2E60A2C>        scale;                           // type:ARRAY.ATARRAY
};

struct _0xB8EDA7BD
{
	enum _0xEDF064FF                 Base;                            // type:ENUM.32BIT
	enum _0xEDF064FF                 OnMount;                         // type:ENUM.32BIT
	enum _0xEDF064FF                 InVehicle;                       // type:ENUM.32BIT
};

struct _0xB8F1DECE : _0x8A0DC979
{
};

struct _0xB8F6490B : _0x222CAA2C
{
	float                            VerticalClearDistance;           // type:FLOAT.0
	float                            HorizontalClearDistance;         // type:FLOAT.0
	float                            MaxDropHeight;                   // type:FLOAT.0
};

struct _0xB91B3562
{
};

struct _0xB934FC25
{
	uchar                            NormalFleeThreshhold;            // type:UCHAR.0
	uchar                            NormalKnockoutThreshold;         // type:UCHAR.0
	enum _0x9E90B5BD                 BeforeFleeCritBehaviour;         // type:ENUM.32BIT
	enum _0x9E90B5BD                 WhileFleeCritBehaviour;          // type:ENUM.32BIT
	bool                             ShouldInstakill;                 // type:BOOL.0
	float                            TimeToReset;                     // type:FLOAT.0
	uint                             CollapseTimeMin;                 // type:UINT.0
	uint                             CollapseTimeMax;                 // type:UINT.0
	uint                             CollapseTimeReductionPerShot;    // type:UINT.0
	uint                             CollapseTimeReductionLimit;      // type:UINT.0
};

struct _0xB9627A49 : _0x23DAEDEE
{
	enum _0x921E537F                 _0xB270B4C8;                     // type:ENUM.32BIT
};

struct _0xB9636B19
{
	string                           _0x48A51A01;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x24DAA64F;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB998A553 : _0xBB9C0AD5
{
	bool                             InitialValue;                    // type:BOOL.0
};

struct _0xB9A7C64D : _0xDBE512DA
{
};

struct _0xB9B50B62 : CTuning
{
	float                            _0xD2F9E2C2;                     // type:FLOAT.0
	float                            _0xEE7F00F9;                     // type:FLOAT.0
	float                            _0x1DEB830E;                     // type:FLOAT.0
	float                            _0xF9912902;                     // type:FLOAT.0
	float                            _0xE890956A;                     // type:FLOAT.0
};

struct _0xB9B6D775
{
	bool                             _0xA6FD8245;                     // type:BOOL.0
	bool                             _0xABFB2364;                     // type:BOOL.0
	bool                             _0x2F84F148;                     // type:BOOL.0
	float                            _0x0A1F688D;                     // type:FLOAT.0
	float                            _0x9140DBFC;                     // type:FLOAT.0
	float                            _0x920BF07F;                     // type:FLOAT.0
	bool                             _0x7790EC09;                     // type:BOOL.0
	bool                             _0x48D9E0DF;                     // type:BOOL.0
	bool                             _0x344F6C3D;                     // type:BOOL.0
	bool                             _0x4B294291;                     // type:BOOL.0
	bool                             _0x6BDCF96B;                     // type:BOOL.0
};

struct _0xB9CB4052 : _0x1054F746
{
};

struct _0xB9CFC360
{
	bool                             _0x9AB68884;                     // type:BOOL.0
	bool                             _0xC80D8840;                     // type:BOOL.0
	float                            _0x40C6D1F9;                     // type:FLOAT.0
	float                            _0x9C200302;                     // type:FLOAT.0
	float                            _0x90BB44A0;                     // type:FLOAT.0
	uint                             _0x56633E7C;                     // type:UINT.0
	bool                             _0x00C2A4ED;                     // type:BOOL.0
	bool                             _0x20FA4526;                     // type:BOOL.0
	struct _0x0DF38D1F               _0x9D91E3F3;                     // type:STRUCT.STRUCTURE
	struct _0x7E970137               _0xE12B6719;                     // type:STRUCT.STRUCTURE
};

struct _0xB9E5BFAA : _0xFECF2F24
{
};

struct _0xB9EAC064 : _0x3AB6499E
{
	float                            _0x1B316886;                     // type:FLOAT.0
	float                            _0x3B6D35C4;                     // type:FLOAT.0
	float                            _0x6E2CBEDB;                     // type:FLOAT.0
	float                            _0x4D050FBE;                     // type:FLOAT.0
	float                            _0x967462E2;                     // type:FLOAT.0
	float                            _0x45C96807;                     // type:FLOAT.0
	float                            _0x5DD4E0E5;                     // type:FLOAT.0
	float                            _0xE0C3D03D;                     // type:FLOAT.0
	float                            _0x588589D4;                     // type:FLOAT.0
	bool                             _0x9B828FFE;                     // type:BOOL.0
	bool                             _0x126AE85E;                     // type:BOOL.0
	float                            _0x352A3C76;                     // type:FLOAT.0
	float                            _0x49C4E5DE;                     // type:FLOAT.0
	float                            _0x858E2DF4;                     // type:FLOAT.0
	float                            _0x8F95E6FE;                     // type:FLOAT.0
	float                            MaxZoomFactor;                   // type:FLOAT.0
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x7DF32D6F;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x4F515357;                     // type:FLOAT.0
	bool                             _0xB10B2101;                     // type:BOOL.0
	float                            _0x0457B25A;                     // type:FLOAT.0
};

struct _0xB9EC3F9B
{
	string                           AppId;                           // type:STRING.ATNSHASHSTRING
	string                           EntryPointId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           PromptText;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0xB9FB25D3
{
	enum _0xF56BB41B                 type;                            // type:ENUM.32BIT
	vec2                             pos;                             // type:VECTOR2.0
	vec2                             startPos;                        // type:VECTOR2.0
	vec2                             endPos;                          // type:VECTOR2.0
	float                            radius;                          // type:FLOAT.0
	float                            startRadius;                     // type:FLOAT.0
	float                            endRadius;                       // type:FLOAT.0
	float                            minZ;                            // type:FLOAT.0
	float                            maxZ;                            // type:FLOAT.0
	float                            waterZ;                          // type:FLOAT.0
};

struct _0xB9FC5D5A
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x4434951E                 LocationType;                    // type:ENUM.32BIT
	enum _0xD0600B57                 PointType;                       // type:ENUM.32BIT
	vec3                             Position;                        // type:VECTOR3.0
	float                            Heading;                         // type:FLOAT.0
	string                           BoneName;                        // type:STRING.ATSTRING
};

struct _0xBA16CA07
{
	array<struct _0x4A5D8685>        Points;                          // type:ARRAY.ATARRAY
};

struct _0xBA2E1790
{
	float                            CallOut;                         // type:FLOAT.0
	float                            CallOutKnown;                    // type:FLOAT.0
	float                            HostileCallOut;                  // type:FLOAT.0
	float                            HostileCallOutKnown;             // type:FLOAT.0
};

struct _0xBA3EEB17
{
	enum _0x4DE89281                 WeightType;                      // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0xBA4512DD : CTuning
{
	struct _0xDED4C939               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xBA49702B
{
	enum _0x3A23CC9F                 Measure;                         // type:ENUM.32BIT
	float                            MinValue;                        // type:FLOAT.0
	float                            MaxValue;                        // type:FLOAT.0
};

struct _0xBA4BE0CB : _0x1FB1BCEA
{
	string                           _0x4BF77BB2;                     // type:STRING.ATSTRING
};

struct _0xBA530F19 : _0x11AD3051
{
	enum _0x4636156D                 mode;                            // type:ENUM.32BIT
	float                            rate;                            // type:FLOAT.0
};

struct _0xBA567DB9
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x45183F3D               directionalData;                 // type:STRUCT.STRUCTURE
	array<struct _0xCD5C05CA, 4>     lights;                          // type:ARRAY.ATFIXEDARRAY
};

struct _0xBA63D52C : uiMultiDataBindingTriggerBehaviorBase
{
	string                           _0x02EF2558;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Sound;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBA8C1EFE : CTuning
{
	string                           _0xEE2D08AF;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3510D6B7;                     // type:FLOAT.0
	float                            _0xC5E64009;                     // type:FLOAT.0
	float                            _0x8834EC7F;                     // type:FLOAT.0
	float                            _0xEFD7F941;                     // type:FLOAT.0
	uint                             _0xA4CCC609;                     // type:UINT.0
	uint                             _0xF5D8BA8B;                     // type:UINT.0
};

struct _0xBAA247B9 : _0x2F7DA38D
{
	array<struct _0xCDAFF092, 3>     _0x44E7B4EE;                     // type:ARRAY.ATRANGEARRAY
	array<struct _0xCDAFF092, 3>     _0x94A2A788;                     // type:ARRAY.ATRANGEARRAY
};

struct _0xBADBE5DC
{
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            _0xCD5DA30B;                     // type:FLOAT.0
	float                            _0x716B7988;                     // type:FLOAT.0
	string                           SyncType;                        // type:STRING.ATNONFINALHASHSTRING
	struct _0x053B3B12               _0x2C8CE372;                     // type:STRUCT.POINTER
};

struct _0xBAE15EC2 : _0xF70F21F5
{
	float                            defaultValue;                    // type:FLOAT.0
	float                            maxValue;                        // type:FLOAT.0
	float                            minValue;                        // type:FLOAT.0
	bool                             _0xBAC8E518;                     // type:BOOL.0
	struct _0xBA530F19               _0xEB8898F4;                     // type:STRUCT.POINTER
};

struct _0xBAEBA90E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct rage__spdAABB             Extents;                         // type:STRUCT.STRUCTURE
	array<string>                    Models;                          // type:ARRAY.ATARRAY
	int                              Version;                         // type:INT.0
};

struct _0xBAEDEDBA : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0xD7B98920;                     // type:BOOL.0
	bool                             _0x2700DAFD;                     // type:BOOL.0
	bool                             _0xCE73FBFC;                     // type:BOOL.0
};

struct _0xBAF602D7
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<enum _0x6524BC8D>          _0x82939609;                     // type:ARRAY.ATARRAY
};

struct _0xBAFFFC5E
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
};

struct _0xBB01AF6C : _0xAFC83C2D
{
	float                            NormalizedValue;                 // type:FLOAT.0
};

struct _0xBB0FCAE3 : SavegameInventoryItem
{
	string                           Name;                            // type:STRING.MEMBER
};

struct _0xBB13E039 : _0x1054F746
{
};

struct _0xBB1EB87E
{
	bitset<enum _0x3B4F6F6C>         Flags;                           // type:BITSET.8BIT
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBB1F1FCF
{
	float                            IntroRate;                       // type:FLOAT.0
	float                            StartRate;                       // type:FLOAT.0
	float                            LoopRate;                        // type:FLOAT.0
	float                            FailRate;                        // type:FLOAT.0
	float                            EndRate;                         // type:FLOAT.0
	float                            OutroRate;                       // type:FLOAT.0
	float                            AimIntroRate;                    // type:FLOAT.0
	float                            FastRateModifier;                // type:FLOAT.0
	float                            FailChance;                      // type:FLOAT.0
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            BlendInDurationFromAim;          // type:FLOAT.0
	float                            TimeBetweenBulletsInLoop;        // type:FLOAT.0
	float                            AIReloadRepositionWindowMin;     // type:FLOAT.0
	float                            AIReloadRepositionWindowMax;     // type:FLOAT.0
};

struct _0xBB2A9B47
{
	string                           SwipeClipSetId;                  // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBB490E27
{
	map<string, struct _0x699135E0>     LootExitAnimInfoConditions;      // type:MAP.ATBINARYMAP
};

struct _0xBB6023D6
{
	enum _0xF9EF54FC                 Type;                            // type:ENUM.32BIT
	float                            Value;                           // type:FLOAT.0
	float                            MinValue;                        // type:FLOAT.0
	float                            MaxValue;                        // type:FLOAT.0
	float                            _0xC4B27EAB;                     // type:FLOAT.0
};

struct _0xBB75791F : _0x8A0DC979
{
};

struct _0xBB7A0CAE : uiPromptedInputBehaviorBase
{
	string                           Message;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBB813E16 : _0x3ABDED0D
{
	int                              _0x87E46FDA;                     // type:INT.0
	int                              _0x75FFFFA0;                     // type:INT.0
};

struct _0xBB84BF68 : _0xB91B3562
{
};

struct _0xBB913196
{
	float                            _0xD13C01F0;                     // type:FLOAT.0
	float                            _0x78DC7BBE;                     // type:FLOAT.0
	float                            _0xB925E2C1;                     // type:FLOAT.0
	struct _0xD58E1E96               _0xA9716BD8;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x0075983F;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x3F10C611;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x2056D7C7;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x11549514;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x7CB0DC3F;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x3F073DB0;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x2971925D;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0x294529D1;                     // type:STRUCT.STRUCTURE
	struct _0xD58E1E96               _0xC9AFD33A;                     // type:STRUCT.STRUCTURE
};

struct _0xBB99C743
{
	bool                             remove;                          // type:BOOL.0
	uchar                            tint0;                           // type:UCHAR.0
	uchar                            tint1;                           // type:UCHAR.0
	uchar                            tint2;                           // type:UCHAR.0
};

struct _0xBB9C0AD5 : _0xC0749003
{
};

struct _0xBBA1B9AC : CAICondition
{
	float                            Health;                          // type:FLOAT.0
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0xBBB63A5E
{
	array<struct _0x4117EA94>        MotivationImpacts;               // type:ARRAY.ATARRAY
};

struct _0xBBDF9424 : _0x4A7E9558
{
	string                           ScenarioName;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x9BB2611B;                     // type:BOOL.0
	string                           _0xDB052711;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC94714B0;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x39ABFCC1;                     // type:BOOL.0
	enum _0x9F507E0C                 SetPedDrunk;                     // type:ENUM.32BIT
	bool                             _0x88D5AC6C;                     // type:BOOL.0
};

struct _0xBBEABAAE
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xAB647188;                     // type:BOOL.0
	bool                             _0x8DC7EBF1;                     // type:BOOL.0
};

struct _0xBBF8EB1C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBBFBD9AB
{
	array<struct _0x20696AC6>        SequenceItems;                   // type:ARRAY.ATARRAY
	int                              LoopReturnIndex;                 // type:INT.0
	bool                             AbsoluteMode;                    // type:BOOL.0
};

struct _0xBC06FD2D : _0x74EB5104
{
};

struct _0xBC0DC68B : _0x1054F746
{
};

struct _0xBC3ED0F3
{
	uint                             Duration;                        // type:UINT.0
	float                            Intensity;                       // type:FLOAT.0
	float                            IntensityTrigger;                // type:FLOAT.0
	uint                             DurationFPS;                     // type:UINT.0
	float                            IntensityFPS;                    // type:FLOAT.0
};

struct _0xBC413444
{
	vec3                             color;                           // type:VECTOR3.0
	vec2                             position;                        // type:VECTOR2.0
	float                            scale;                           // type:FLOAT.0
	float                            intensity;                       // type:FLOAT.0
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBC48F5B5 : CTuning
{
	float                            _0x498D5113;                     // type:FLOAT.0
	float                            _0x853FD966;                     // type:FLOAT.0
	float                            _0x50968463;                     // type:FLOAT.0
	float                            RetreatDistance;                 // type:FLOAT.0
	float                            _0xF24E7AEB;                     // type:FLOAT.0
	float                            _0xF49E8405;                     // type:FLOAT.0
	float                            _0xC981B658;                     // type:FLOAT.0
};

struct _0xBC5F7FDF : uiHoverableBehavior
{
};

struct _0xBC60C26B : _0xA831A788
{
	float                            _0x6D597789;                     // type:FLOAT.0
	vec3                             _0x85288CDF;                     // type:VECTOR3.0
};

struct _0xBC6A0384
{
};

struct _0xBC847232
{
	array<struct _0x5C853176>        _0x68421529;                     // type:ARRAY.ATARRAY
	array<struct _0x9EB925A0>        _0xDD743B89;                     // type:ARRAY.ATARRAY
	array<struct _0xB87C1272>        _0x85D6AE3D;                     // type:ARRAY.ATARRAY
	array<struct _0x0C7B8101>        _0xA471A079;                     // type:ARRAY.ATARRAY
	array<struct _0x8F3B3870>        _0x10722474;                     // type:ARRAY.ATARRAY
	array<struct _0xB0DCB3AB>        _0x6BC7E9FF;                     // type:ARRAY.ATARRAY
	array<struct _0x92D0B910>        _0xBB42C5D1;                     // type:ARRAY.ATARRAY
	array<struct _0xAE3DB173>        _0xDF601693;                     // type:ARRAY.ATARRAY
	array<struct _0x0FE066BD>        _0xA8C746FD;                     // type:ARRAY.ATARRAY
	array<struct _0x9D393085>        _0x17E5B141;                     // type:ARRAY.ATARRAY
};

struct _0xBC87B2C5 : UIContainer
{
};

struct _0xBC882F78
{
	string                           RegionType;                      // type:STRING.ATNONFINALHASHSTRING
	string                           InitialPOISearchSituation;       // type:STRING.ATNONFINALHASHSTRING
	vec3                             CenterPosition;                  // type:VECTOR3.0
	float                            Radius;                          // type:FLOAT.0
	float                            _0x90DFE984;                     // type:FLOAT.0
	float                            _0x44BEE48D;                     // type:FLOAT.0
	float                            MinSpawnDistance;                // type:FLOAT.0
	float                            IdealSpawnDistance;              // type:FLOAT.0
	float                            MaxSpawnDistance;                // type:FLOAT.0
	int                              MaxReports;                      // type:INT.0
	int                              MaxLawInvestigators;             // type:INT.0
	int                              MaxReportsInMP;                  // type:INT.0
	uchar                            MaxLawDuringIncident;            // type:UCHAR.0
	bitset<enum _0xC8334DDA>         Flags;                           // type:BITSET.16BIT
};

struct _0xBC975A08 : CTuning
{
	float                            _0xBC1460FC;                     // type:FLOAT.0
	float                            _0x009BB8C8;                     // type:FLOAT.0
};

struct _0xBC99CBFF : _0x7EAFD12D
{
	float                            Value;                           // type:FLOAT.0
	float                            EdgeValue;                       // type:FLOAT.0
	float                            EmbeddedValue;                   // type:FLOAT.0
};

struct _0xBCACB077
{
	enum _0x9DB65C31                 _0x6CC3A318;                     // type:ENUM.32BIT
	bool                             _0xEAFF26E4;                     // type:BOOL.0
	bool                             _0xCA329AE8;                     // type:BOOL.0
	bool                             _0x7AFBCE49;                     // type:BOOL.0
	bool                             _0xA3D64CB9;                     // type:BOOL.0
	float                            _0xD589F0A0;                     // type:FLOAT.0
};

struct _0xBCAE6F4C
{
	string                           groupName;                       // type:STRING.ATNONFINALHASHSTRING
	array<uint64>                    ids;                             // type:ARRAY.ATARRAY
	float                            expand;                          // type:FLOAT.0
};

struct _0xBCC799F1 : _0xB88D6BEE
{
	struct _0x85317215               Value;                           // type:STRUCT.STRUCTURE
};

struct _0xBCD5CE8E
{
};

struct _0xBCF39D0C : CTuning
{
	bool                             _0x7D3579AB;                     // type:BOOL.0
	bool                             _0xF7AEE7ED;                     // type:BOOL.0
	bool                             _0x8DACD248;                     // type:BOOL.0
};

struct _0xBCFD3061 : _0xDC6D47C7
{
	struct _0xBB84BF68               Compute;                         // type:STRUCT.POINTER
};

struct _0xBD0AD460
{
	struct _0x6AAAEDC1               Hearing;                         // type:STRUCT.STRUCTURE
	struct _0x67D4591D               Seeing;                          // type:STRUCT.STRUCTURE
};

struct _0xBD1F3905
{
	string                           _0xCD892E4B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF557779C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBD27203E
{
	string                           _0xED6C671D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC31F2A30;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBD73D575 : CAICondition
{
};

struct _0xBD899112
{
	array<struct _0x4AD8C6EA>        WeaponSlots;                     // type:ARRAY.ATARRAY
};

struct _0xBD9AB8DE
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBDCCFA04 : _0x0A698250
{
};

struct _0xBDF1CFC4 : _0x31FB567E
{
	uint                             _0xBFA6783C;                     // type:UINT.0
	uint                             _0xC89ED7BC;                     // type:UINT.0
};

struct _0xBDFA77D3 : _0x54C95141
{
};

struct _0xBE1471A7
{
	uint                             MaxCapsuleTests;                 // type:UINT.0
};

struct _0xBE1B0044
{
	enum _0x1786EF75                 DamageQuality;                   // type:ENUM.32BIT
	enum _0x7B293473                 SkinQuality;                     // type:ENUM.32BIT
	string                           OutfitFilter;                    // type:STRING.ATNONFINALHASHSTRING
	string                           SatchelItem;                     // type:STRING.ATNONFINALHASHSTRING
	uchar                            Quantity;                        // type:UCHAR.0
};

struct _0xBE1D0A0A : _0x8A0DC979
{
};

struct _0xBE1FFB5C : CAICondition
{
	float                            Threshold;                       // type:FLOAT.0
};

struct _0xBE4C7F5C
{
	float                            MaxHealthImpulseMult;            // type:FLOAT.0
	float                            MinHealthImpulseMult;            // type:FLOAT.0
	float                            MaxDamageTakenImpulseMult;       // type:FLOAT.0
	float                            MinDamageTakenImpulseMult;       // type:FLOAT.0
	float                            MaxDamageTakenThreshold;         // type:FLOAT.0
	float                            MinDamageTakenThreshold;         // type:FLOAT.0
	float                            DefaultKillShotImpulseMult;      // type:FLOAT.0
	float                            DefaultMPKillShotImpulseMult;    // type:FLOAT.0
};

struct _0xBE784F56
{
	uchar                            channel;                         // type:UCHAR.0
	float                            probability;                     // type:FLOAT.0
};

struct _0xBE8F2D95 : _0x5BD857F6
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           EntryPoint;                      // type:STRING.ATNONFINALHASHSTRING
	enum _0x039DE455                 HostingMode;                     // type:ENUM.32BIT
};

struct _0xBE944B14
{
	string                           Identifier;                      // type:STRING.ATNONFINALHASHSTRING
	string                           PedSet;                          // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponSet;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xBEA3524C : _0x1A0DB377
{
};

struct _0xBEA8E997 : _0x6C351FEE
{
	enum _0x5F27E7A1                 TimeFormat;                      // type:ENUM.32BIT
};

struct _0xBEA9889E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct rage__spdAABB             AABB;                            // type:STRUCT.STRUCTURE
	string                           SwapName;                        // type:STRING.ATNONFINALHASHSTRING
	int                              _0xD0A257D2;                     // type:INT.0
	uint                             _0xFAB25F7D;                     // type:UINT.0
	bitset<enum _0xB1CF92B0>         Flags;                           // type:BITSET.32BIT
};

struct _0xBEB08A23 : _0xD23CA9CB
{
};

struct _0xBEC47760 : CTuning
{
	int                              _0x2AC2FAE1;                     // type:INT.0
};

struct _0xBEC7F421 : StatsGoalParamBaseContainer
{
	array<string>                    _0x98E4768F;                     // type:ARRAY.ATARRAY
};

struct _0xBECA49CE
{
	array<struct _0xA3C55222>        Actions;                         // type:ARRAY.ATARRAY
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetFemale;                   // type:STRING.ATNONFINALHASHSTRING
	string                           AnimRateSelector;                // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x2B52F641>         Flags;                           // type:BITSET.32BIT
};

struct _0xBEDB8C65
{
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x9C07C204               col;                             // type:STRUCT.STRUCTURE
};

struct _0xBEE73036 : _0x3AB6499E
{
};

struct _0xBF08D866 : _0x9A228B01
{
	map<enum _0x1AA49AED, struct _0x4C804BE5>     Animations;                      // type:MAP.ATMAP
	bool                                          _0x4F254970;                     // type:BOOL.0
};

struct _0xBF258689 : _0x8A0DC979
{
};

struct _0xBF2BD132
{
	array<struct _0x99517C91>        entries;                         // type:ARRAY.ATARRAY
};

struct _0xBF37328A
{
	map<string, array<struct CharacterRange>>     _0x48DAED07;                     // type:MAP.ATBINARYMAP
};

struct _0xBF49F087
{
	struct _0x78902025               Cops;                            // type:STRUCT.STRUCTURE
	struct _0x78902025               Swat;                            // type:STRUCT.STRUCTURE
	struct _0x78902025               Army;                            // type:STRUCT.STRUCTURE
};

struct _0xBF4F48BD
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC159B6E1;                     // type:FLOAT.0
	float                            _0xF5146146;                     // type:FLOAT.0
	float                            _0xA6706B71;                     // type:FLOAT.0
	float                            _0x53520B51;                     // type:FLOAT.0
	float                            spawnProbability;                // type:FLOAT.0
	float                            _0xBE6B3297;                     // type:FLOAT.0
	float                            _0x5ABB73FD;                     // type:FLOAT.0
	float                            _0xE4F1A7CE;                     // type:FLOAT.0
	float                            _0x3E576360;                     // type:FLOAT.0
	float                            _0x4DD3750B;                     // type:FLOAT.0
	float                            _0x27B7B208;                     // type:FLOAT.0
	float                            _0x9E593D51;                     // type:FLOAT.0
	bool                             enabled;                         // type:BOOL.0
};

struct _0xBF502C27
{
	enum _0x5705A365                 DeviceSource;                    // type:ENUM.32BIT
	enum _0xDCE19B28                 DirectInputSource;               // type:ENUM.32BIT
	enum _0xD75A283E                 Type;                            // type:ENUM.32BIT
};

struct _0xBF61B263
{
	array<struct _0x7C34909F>        _0x2D6802E2;                     // type:ARRAY.ATARRAY
};

struct _0xBF657BEB
{
	string                                    label;                           // type:STRING.CONST_STRING
	string                                    name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct MetaPedDefExplicitAsset>     assets;                          // type:ARRAY.ATARRAY
	array<struct _0x1188BEB4>                 onAddTriggers;                   // type:ARRAY.ATARRAY
	array<struct _0x1188BEB4>                 onRemoveTriggers;                // type:ARRAY.ATARRAY
};

struct _0xBF685BD3 : _0x22B199F9
{
	enum _0x563FBCEA                 BlockerPed;                      // type:ENUM.32BIT
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct _0xBF6AB023
{
	array<float, 3>                  posn;                            // type:ARRAY.MEMBER
	array<uchar, 3>                  colour;                          // type:ARRAY.MEMBER
	uchar                            flashiness;                      // type:UCHAR.0
	float                            intensity;                       // type:FLOAT.0
	uint                             flags;                           // type:UINT.0
	short                            boneTag;                         // type:SHORT.0
	uchar                            lightType;                       // type:UCHAR.0
	uchar                            groupId;                         // type:UCHAR.0
	uint                             timeFlags;                       // type:UINT.0
	float                            falloff;                         // type:FLOAT.0
	float                            falloffExponent;                 // type:FLOAT.0
	array<float, 4>                  cullingPlane;                    // type:ARRAY.MEMBER
	array<float, 4>                  _0xF48DB3A6;                     // type:ARRAY.MEMBER
	uchar                            shadowBlur;                      // type:UCHAR.0
	uchar                            shadowOpacity;                   // type:UCHAR.0
	short                            padding2;                        // type:SHORT.0
	float                            roughnessMod;                    // type:FLOAT.0
	float                            volIntensity;                    // type:FLOAT.0
	float                            volSizeScale;                    // type:FLOAT.0
	array<uchar, 3>                  volOuterColour;                  // type:ARRAY.MEMBER
	uchar                            lightHash;                       // type:UCHAR.0
	float                            volOuterIntensity;               // type:FLOAT.0
	bool                             injectsIntoVoxels;               // type:BOOL.0
	float                            coronaSize;                      // type:FLOAT.0
	float                            volOuterExponent;                // type:FLOAT.0
	uchar                            lightFadeDistance;               // type:UCHAR.0
	uchar                            shadowFadeDistance;              // type:UCHAR.0
	uchar                            specularFadeDistance;            // type:UCHAR.0
	uchar                            volumetricFadeDistance;          // type:UCHAR.0
	float                            shadowNearClip;                  // type:FLOAT.0
	float16                          _0x4855CDE5;                     // type:FLOAT16.0
	float16                          _0x0DA3D86E;                     // type:FLOAT16.0
	float                            coronaIntensity;                 // type:FLOAT.0
	float                            coronaZBias;                     // type:FLOAT.0
	string                           _0x93C52D2C;                     // type:STRING.ATNONFINALHASHSTRING
	vec3V                            _0x52A89335;                     // type:VEC3V.0
	float                            emitterSize;                     // type:FLOAT.0
	float                            emitterIntensityMult;            // type:FLOAT.0
	float                            emitterTintDesaturation;         // type:FLOAT.0
	array<float, 3>                  direction;                       // type:ARRAY.MEMBER
	array<float, 3>                  tangent;                         // type:ARRAY.MEMBER
	float                            coneInnerAngle;                  // type:FLOAT.0
	float                            coneOuterAngle;                  // type:FLOAT.0
	float                            squareAspectRatio;               // type:FLOAT.0
	array<float, 3>                  extents;                         // type:ARRAY.MEMBER
	uint                             projectedTextureKey;             // type:UINT.0
	float                            SSAOStrength;                    // type:FLOAT.0
	uint                             _0x684C08C5;                     // type:UINT.0
	float                            falloffBias;                     // type:FLOAT.0
	float                            _0x3F4C1BB0;                     // type:FLOAT.0
	float                            _0x9C23D4E9;                     // type:FLOAT.0
	float                            wrapAmount;                      // type:FLOAT.0
	float                            nonDirectionality;               // type:FLOAT.0
	float                            _0x5B239A55;                     // type:FLOAT.0
	float                            _0xA968034C;                     // type:FLOAT.0
	uchar                            _0x5148E7B3;                     // type:UCHAR.0
	bool                             _0x83161CBE;                     // type:BOOL.0
	float                            _0xC11AF51B;                     // type:FLOAT.0
	float                            _0x53A339C3;                     // type:FLOAT.0
	float                            _0x0F06E05A;                     // type:FLOAT.0
	float                            _0x724AE3FF;                     // type:FLOAT.0
	float                            _0x73D8B6CB;                     // type:FLOAT.0
	float                            _0x2EBE653A;                     // type:FLOAT.0
	float                            _0x208D587D;                     // type:FLOAT.0
	float                            _0x2E0E4E3C;                     // type:FLOAT.0
	float                            _0xB4B05CF2;                     // type:FLOAT.0
	float                            _0x0963B563;                     // type:FLOAT.0
	float                            dynamicShadowFadeDistance;       // type:FLOAT.0
	uint                             _0x66657D69;                     // type:UINT.0
	float                            blendTime;                       // type:FLOAT.0
	float                            offset;                          // type:FLOAT.0
	vec3                             _0x30ECA388;                     // type:VECTOR3.0
	uint                             _0xCED22A4C;                     // type:UINT.0
};

struct _0xBF7FBCFE
{
	uint                             idx;                             // type:UINT.0
	string                           name;                            // type:STRING.ATSTRING
	float                            time;                            // type:FLOAT.0
};

struct _0xBF9602D8 : _0xED23B004
{
	enum _0x047D513A                 StatType;                        // type:ENUM.32BIT
};

struct _0xBF9C8608
{
	enum _0x812799B4                 eCompanionRole;                  // type:ENUM.32BIT
	float                            fFormationSpacing_Near;          // type:FLOAT.0
	float                            fFormationSpacing_Far;           // type:FLOAT.0
	float                            fFormationSpacing_Far_NoCombat;  // type:FLOAT.0
	float                            fFormationSpacing_InterCompanion; // type:FLOAT.0
	float                            fAdvanceCoverSearchBoxWidth;     // type:FLOAT.0
	float                            fAdvanceCoverSearchBoxDepth;     // type:FLOAT.0
	float                            fPinningIncreaseScale;           // type:FLOAT.0
	float                            fPinningDecreaseScale;           // type:FLOAT.0
	float                            fBulletEventResistanceDecrement; // type:FLOAT.0
	float                            fCompanionDamageModifier;        // type:FLOAT.0
	float                            fCommunicatorSelectionWeight;    // type:FLOAT.0
	float                            fStealCreditForKillProbability;  // type:FLOAT.0
	uint                             iAdvanceDurationInMiliseconds;   // type:UINT.0
	string                           BehaviorRuleSetType;             // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBEC58B1F;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             WillJoinSubgroup;                // type:BOOL.0
	bool                             AllowSubgroups;                  // type:BOOL.0
};

struct _0xBFB5076E : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0xBFB97F23
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xD4C4DBED>        NodeSpeeds;                      // type:ARRAY.ATARRAY
};

struct _0xBFCA0988 : _0x1A0DB377
{
	enum _0x0FFD8D53                 _0x20FE6756;                     // type:ENUM.32BIT
};

struct _0xBFCA850F
{
	vec3V                            Min;                             // type:VEC3V.0
	vec3V                            Max;                             // type:VEC3V.0
	ushort                           BoneId;                          // type:USHORT.0
};

struct _0xBFE11256 : _0xE360F0CE
{
};

struct _0xBFF8652A
{
	array<struct _0xE4C50D6A>        ExitAnimInfoGroups;              // type:ARRAY.ATARRAY
};

struct _0xBFFDF730 : _0x2F7DA38D
{
	array<uint>                      _0x59A76E78;                     // type:ARRAY.ATARRAY
	array<uint>                      _0x8B6E9D14;                     // type:ARRAY.ATARRAY
};

struct _0xC00A9417 : _0x9B7B8D6F
{
};

struct _0xC01A4FDC
{
	float                            _0x9F82EA4F;                     // type:FLOAT.0
	float                            _0x16F0B33A;                     // type:FLOAT.0
	float                            _0xC2657670;                     // type:FLOAT.0
	float                            _0xB419490C;                     // type:FLOAT.0
	float                            _0x96A8A04B;                     // type:FLOAT.0
	float                            _0x0EFE0395;                     // type:FLOAT.0
	float                            _0x761D66D1;                     // type:FLOAT.0
	float                            _0xA9358C74;                     // type:FLOAT.0
	float                            _0x86B5E8C7;                     // type:FLOAT.0
	float                            _0xAD8F1545;                     // type:FLOAT.0
};

struct _0xC02E841A
{
	float                            _0x53FE5F82;                     // type:FLOAT.0
	float                            _0xF310B05B;                     // type:FLOAT.0
	float                            _0x19928E3B;                     // type:FLOAT.0
};

struct _0xC031AE20
{
	string                           Name;                            // type:STRING.ATSTRING
	string                           TimeStamp;                       // type:STRING.ATSTRING
	uint                             MotionSignature;                 // type:UINT.0
	uint                             ClipsSignature;                  // type:UINT.0
	guid                             MotionGuid;                      // type:GUID._0xDF7EBE85
	string                           Type;                            // type:STRING.ATSTRING
	struct _0x622362A8               ExampleMappingAfterFirstDeduplication; // type:STRUCT.STRUCTURE
	struct _0x622362A8               ExampleMapping;                  // type:STRUCT.STRUCTURE
};

struct _0xC033CDFC : _0xFABD9DF5
{
};

struct _0xC03E255D
{
	vec2                             GroundHeightRange;               // type:VECTOR2.0
	vec3                             DistanceRange;                   // type:VECTOR3.0
	vec2                             PlanarAngularRange;              // type:VECTOR2.0
	vec2                             HeightRange;                     // type:VECTOR2.0
	float                            SlopeDotThreshold;               // type:FLOAT.0
	bitset<enum _0xF393B0AB>         RelativeRangeAttrs;              // type:BITSET.32BIT
};

struct _0xC0423FC3 : _0x0A510DA9
{
	enum _0x1F17C8B0                 Context;                         // type:ENUM.32BIT
};

struct _0xC062479E
{
	string                           PropId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           Model;                           // type:STRING.ATNONFINALHASHSTRING
	string                           Item;                            // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                AttachBone;                      // type:ENUM.32BIT
	bitset<enum _0x207ED402>         Flags;                           // type:BITSET.8BIT
};

struct _0xC0749003 : _0xCD9BCB7D
{
};

struct _0xC0786063
{
	array<struct _0xF464196A>        renderSettings;                  // type:ARRAY.ATARRAY
};

struct _0xC078ADAF : _0x0A510DA9
{
	enum _0xF01A9A60                 _0xFCDF7249;                     // type:ENUM.32BIT
};

struct _0xC0873B4E : CCompendiumCategoryBase
{
};

struct _0xC098F5A7 : _0xA0889763
{
	string                           value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC09AF161
{
	float                            _0xB8238C82;                     // type:FLOAT.0
	float                            _0x6A858C3B;                     // type:FLOAT.0
	float                            _0xA95B5565;                     // type:FLOAT.0
	float                            _0xF9ADDA3A;                     // type:FLOAT.0
	uint                             _0xE0B0315B;                     // type:UINT.0
	enum _0xC93A7A62                 _0x9E6E7AC8;                     // type:ENUM.32BIT
	float                            _0xCDF8D092;                     // type:FLOAT.0
	float                            _0xC080C69B;                     // type:FLOAT.0
	uint                             _0x1F30EEA1;                     // type:UINT.0
	float                            _0x66E7864A;                     // type:FLOAT.0
};

struct _0xC09F2F8B
{
	struct _0x07BC9DC3               _0x2E89519E;                     // type:STRUCT.STRUCTURE
	struct _0x112DC488               _0x8642286D;                     // type:STRUCT.STRUCTURE
};

struct _0xC0AE68AA
{
	bool                             ShouldApply;                     // type:BOOL.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0xDEE7571B;                     // type:FLOAT.0
	float                            _0xD1AA043A;                     // type:FLOAT.0
	float                            _0x816C8B98;                     // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
};

struct _0xC0AEFB8A
{
	bitset<enum _0x49C88786>         AddVariation;                    // type:BITSET.32BIT
	bitset<enum _0x49C88786>         _0xD4964660;                     // type:BITSET.32BIT
	enum _0xC3572DCB                 _0x696CA0D0;                     // type:ENUM.32BIT
};

struct _0xC0BCA3EB
{
	string                           SequenceName;                    // type:STRING.ATFINALHASHSTRING
	array<struct _0x3B2CFD66>        Mappings;                        // type:ARRAY.ATARRAY
};

struct _0xC0DC8B34
{
	array<struct _0x069BBEFD, 10>     _0xE8A49E9D;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0xC0FADA9E
{
	float                            _0xA314FA77;                     // type:FLOAT.0
};

struct _0xC112F204
{
	string                           SpeechContext;                   // type:STRING.ATPARTIALHASHVALUE
};

struct _0xC12D8605
{
	array<struct _0xC7F1452C>        _0x40BABBAF;                     // type:ARRAY.ATARRAY
};

struct _0xC1316795
{
	array<string>                    DamagePacksToApply;              // type:ARRAY.ATARRAY
	string                           OnMountDamagePackToApply;        // type:STRING.ATNONFINALHASHSTRING
	float                            DecompPeriodMultiplierMin;       // type:FLOAT.0
	float                            DecompPeriodMultiplierMax;       // type:FLOAT.0
	float                            DirtTargetIntensity;             // type:FLOAT.0
	uchar                            DirtColorRed;                    // type:UCHAR.0
	uchar                            DirtColorGreen;                  // type:UCHAR.0
	uchar                            DirtColorBlue;                   // type:UCHAR.0
	uchar                            DirtColorAlpha;                  // type:UCHAR.0
	float                            DirtColorContribution;           // type:FLOAT.0
	float                            CorpseVfxEvo;                    // type:FLOAT.0
	bool                             IsConsideredDecomposed;          // type:BOOL.0
};

struct _0xC13D47F6
{
	array<struct _0xCB90FF42>        keyFrames;                       // type:ARRAY.ATARRAY
	int                              frameCount;                      // type:INT.0
};

struct _0xC141262C : _0x499E1BE4
{
	float                            _0xE827432B;                     // type:FLOAT.0
	float                            _0x8EE135BB;                     // type:FLOAT.0
	float                            _0x626A3D6E;                     // type:FLOAT.0
	float                            _0x388E7270;                     // type:FLOAT.0
	bool                             isAttached;                      // type:BOOL.0
};

struct _0xC1439F1D
{
	array<ushort, 2>                 vertIndices;                     // type:ARRAY.MEMBER
	float                            EdgeLength2;                     // type:FLOAT.0
	float                            Weight0;                         // type:FLOAT.0
	float                            CompressionWeight;               // type:FLOAT.0
	float                            StretchWeight;                   // type:FLOAT.0
};

struct _0xC1512307 : uiLinearNavigationBehavior
{
	struct _0x51B38E82               _0xFE49D40F;                     // type:STRUCT.STRUCTURE
};

struct _0xC153E0EB
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xBF2BD132               AccumKeyFrames;                  // type:STRUCT.STRUCTURE
	uint                             Color;                           // type:UINT.1
};

struct _0xC1562CEB : _0x01E6DBE8
{
	float                            _0xC5123927;                     // type:FLOAT.0
	float                            _0xAC80BB5E;                     // type:FLOAT.0
};

struct _0xC159B717
{
	string                           AIMemoryLongTermFilterSet;       // type:STRING.ATNONFINALHASHSTRING
	enum _0xF9A5DFAA                 HomeLocation;                    // type:ENUM.32BIT
};

struct _0xC16D79DE
{
	array<struct _0xB35DC974>        Locations;                       // type:ARRAY.ATARRAY
};

struct _0xC16E6360 : _0x8A0DC979
{
	array<enum rlPresenceEvents>     Messages;                        // type:ARRAY.ATARRAY
	bool                             _0xE9513EC1;                     // type:BOOL.0
	bool                             _0xE8EF3D9C;                     // type:BOOL.0
	bool                             _0x8038E65F;                     // type:BOOL.0
};

struct _0xC1751A4A
{
	bool                             _0xA5AA322C;                     // type:BOOL.0
	int                              _0xAC57CBE9;                     // type:INT.0
	int                              _0x50F84FD7;                     // type:INT.0
	array<struct _0x12B6E142>        _0xB9FC499E;                     // type:ARRAY.ATARRAY
	struct _0xE28C2125               _0x6BE11299;                     // type:STRUCT.POINTER
};

struct _0xC1850771
{
	enum EVolumeType                 VolumeType;                      // type:ENUM.32BIT
	vec3V                            Position;                        // type:VEC3V.0
	vec3V                            Orientation;                     // type:VEC3V.0
	vec3V                            Scale;                           // type:VEC3V.0
};

struct _0xC19D52B0 : _0x8A0DC979
{
};

struct _0xC1A92DE4
{
	enum _0xFF842F1B                 ZoneType;                        // type:ENUM.32BIT
	enum _0x6F76F55E                 GameType;                        // type:ENUM.32BIT
	enum _0xEDE6033A                 _0xEDE6033A;                     // type:ENUM.32BIT
	bool                             IsMutuallyExclusive;             // type:BOOL.0
	array<string>                    VehicleModels;                   // type:ARRAY.ATARRAY
	array<string>                    PedModels;                       // type:ARRAY.ATARRAY
	array<string>                    ObjectModels;                    // type:ARRAY.ATARRAY
	array<string>                    ClipSets;                        // type:ARRAY.ATARRAY
};

struct _0xC1B39685
{
	array<struct _0x54A1CEB0>        AngledAreas;                     // type:ARRAY.ATARRAY
	array<struct _0xE30C80F3>        Spheres;                         // type:ARRAY.ATARRAY
};

struct _0xC1B5D5EF
{
	array<struct _0x34729F9F>        Sets;                            // type:ARRAY.ATARRAY
};

struct _0xC1C266CC : CTuning
{
	struct _0x61046C23               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xC1C3C7A2
{
	int                              Override;                        // type:INT.0
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0xC1EF38FF
{
	string                           _0xC652378B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x44FE726D;                     // type:FLOAT.0
	float                            _0xFE4443B5;                     // type:FLOAT.0
	float                            _0xFB64B5BA;                     // type:FLOAT.0
	float                            _0xE8FF1ADF;                     // type:FLOAT.0
	float                            _0x82961B3A;                     // type:FLOAT.0
	struct _0x9C07C204               _0xED2F5BD7;                     // type:STRUCT.STRUCTURE
	uchar                            _0xFD99F35C;                     // type:UCHAR.0
	uchar                            _0x6F9472F7;                     // type:UCHAR.0
	uchar                            _0xCD1FDB23;                     // type:UCHAR.0
	uchar                            _0x62C90F7F;                     // type:UCHAR.0
	float                            decalLife;                       // type:FLOAT.0
	float                            _0xC9D57669;                     // type:FLOAT.0
	bool                             _0x4834C1C6;                     // type:BOOL.0
};

struct _0xC20538BE : _0xB88D6BEE
{
	struct uiSoundFeebackAnimationInfo     Sound;                           // type:STRUCT.STRUCTURE
};

struct _0xC209962D
{
	array<struct _0x6ADB4F54>        RuleArray;                       // type:ARRAY.ATARRAY
};

struct _0xC2148C15
{
	uchar                            _0xFAA3E0FF;                     // type:UCHAR.0
	uchar                            _0x22399482;                     // type:UCHAR.0
	float                            _0x2AD1258F;                     // type:FLOAT.0
	float                            _0x7F61808B;                     // type:FLOAT.0
	float                            _0x3F25557D;                     // type:FLOAT.0
	uint                             _0x04876200;                     // type:UINT.1
	uint                             _0xA9744657;                     // type:UINT.1
	uchar                            _0x5C4B017E;                     // type:UCHAR.0
	uchar                            _0x78DA8D6D;                     // type:UCHAR.0
	uchar                            _0x62E03BCD;                     // type:UCHAR.0
	uchar                            _0x73F6A066;                     // type:UCHAR.0
};

struct _0xC21D9790 : CTuning
{
	uint                             _0xDB330D2D;                     // type:UINT.0
	float                            _0xD64664E5;                     // type:FLOAT.0
	float                            _0x8A770C19;                     // type:FLOAT.0
};

struct _0xC22083AE : CScenarioAction
{
	uint                             _0xD453328A;                     // type:UINT.0
	bool                             _0x86B7213A;                     // type:BOOL.0
	bool                             blockCover;                      // type:BOOL.0
};

struct _0xC22C6D91 : CTuning
{
	bool                             _0x3C10960B;                     // type:BOOL.0
	float                            _0x27559FAE;                     // type:FLOAT.0
	float                            _0xBB2990A3;                     // type:FLOAT.0
	float                            _0xAFE41BA3;                     // type:FLOAT.0
	float                            _0x9854937F;                     // type:FLOAT.0
	float                            _0xFEBCBF3C;                     // type:FLOAT.0
	float                            _0x079AE15B;                     // type:FLOAT.0
	float                            _0xEA8A7A12;                     // type:FLOAT.0
	float                            _0x74B644E5;                     // type:FLOAT.0
	float                            _0x43523EC9;                     // type:FLOAT.0
	float                            _0xFC133D52;                     // type:FLOAT.0
	float                            _0x1D7C931D;                     // type:FLOAT.0
	float                            _0x38B8D02C;                     // type:FLOAT.0
	int                              _0x350472D0;                     // type:INT.0
	int                              _0xBA31C795;                     // type:INT.0
};

struct _0xC23AB24D : CTuning
{
	float                            _0x5B52C772;                     // type:FLOAT.0
};

struct _0xC24F7386
{
	struct CAICondition                      Condition;                       // type:STRUCT.POINTER
	struct _0x22B199F9                       Action;                          // type:STRUCT.POINTER
	struct CInteractionActionConditional     ConditionalAction;               // type:STRUCT.STRUCTURE
	string                                   State;                           // type:STRING.ATNONFINALHASHSTRING
	float                                    Anger;                           // type:FLOAT.0
	float                                    OfferItem;                       // type:FLOAT.0
	float                                    Suspicion;                       // type:FLOAT.0
	float                                    Fear;                            // type:FLOAT.0
	string                                   _0x8B5ECAF2;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xC6E5CDA3                       Say;                             // type:STRUCT.STRUCTURE
	struct _0x113FCE3E                       ConditionalSay;                  // type:STRUCT.STRUCTURE
	array<struct _0x113FCE3E>                ConditionalSays;                 // type:ARRAY.ATARRAY
	bitset<enum _0x7DFC0C11>                 Flags;                           // type:BITSET.8BIT
};

struct _0xC27FB6B5 : uiDynamicItemVirtualizedSource
{
};

struct _0xC286EBD7 : UIBehavior
{
	string                           AnimationIn;                     // type:STRING.ATNONFINALHASHSTRING
	string                           AnimationOut;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x7C24FB34;                     // type:BOOL.0
};

struct _0xC2924337 : _0x184818A1
{
	bool                             _0xACFF4C4D;                     // type:BOOL.0
};

struct _0xC2951628 : _0x0A510DA9
{
};

struct _0xC29B9A65
{
	vec3                             Position;                        // type:VECTOR3.0
	vec3                             Size;                            // type:VECTOR3.0
	float                            Heading;                         // type:FLOAT.0
	float                            _0xA17ED88A;                     // type:FLOAT.0
	bool                             _0x3FBD74E0;                     // type:BOOL.0
};

struct _0xC2A10B40 : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0xC2A67265 : _0x0A510DA9
{
	struct _0x3D93D240               Context;                         // type:STRUCT.STRUCTURE
};

struct _0xC2B406F6
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x8CD10F26;                     // type:ARRAY.ATARRAY
};

struct _0xC2C71236 : CTuning
{
	float                            _0x8239A682;                     // type:FLOAT.0
};

struct _0xC2DEEAEB : _0xEECC24AD
{
};

struct _0xC2EA0AE7 : uiSelectableBehaviorBase
{
	string                           App;                             // type:STRING.ATNSHASHSTRING
	string                           EntryPoint;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xC3DEF966;                     // type:BOOL.0
};

struct _0xC2EE552A : _0x8A0DC979
{
	string                           Message;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xAFCF2CDD;                     // type:BOOL.0
};

struct _0xC2EEB95C : _0x3ABDED0D
{
	string                           _0x5E85676A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9A01FCBE;                     // type:STRING.ATNONFINALHASHSTRING
	vec3                             Offset;                          // type:VECTOR3.0
	vec2                             OrbitPitchLimits;                // type:VECTOR2.0
	float                            ZoomFactor;                      // type:FLOAT.0
	float                            _0xE8308C4F;                     // type:FLOAT.0
	float                            PitchOffset;                     // type:FLOAT.0
	float                            SideOffset;                      // type:FLOAT.0
	float                            VerticalOffset;                  // type:FLOAT.0
	int                              _0x59D2C814;                     // type:INT.0
	float                            _0x0E285989;                     // type:FLOAT.0
	float                            _0x317BBC89;                     // type:FLOAT.0
	int                              Duration;                        // type:INT.0
	uint                             _0x41CA02F8;                     // type:UINT.0
	uint                             InterpolateOutDuration;          // type:UINT.0
	uint                             _0x46B8E3CA;                     // type:UINT.0
	uint                             _0xDAB2BD7A;                     // type:UINT.0
	float                            MinDistanceForLockOn;            // type:FLOAT.0
	bool                             _0x459D0FB0;                     // type:BOOL.0
	bool                             _0x7EB9E2F4;                     // type:BOOL.0
	bool                             _0xD8438D22;                     // type:BOOL.0
	bool                             _0xC32A34B6;                     // type:BOOL.0
	bool                             _0x3EADC09B;                     // type:BOOL.0
};

struct _0xC33484BF : _0x4198511D
{
};

struct _0xC3397DC8 : _0xB4712173
{
	float                            DefaultTiredThreshold;           // type:FLOAT.0
	float                            DefaultRecoveryThreshold;        // type:FLOAT.0
	float                            MaxSwimEnergy;                   // type:FLOAT.0
	float                            TiredThresholdInSwim;            // type:FLOAT.0
	float                            DrowningThresholdInSwim;         // type:FLOAT.0
	float                            SwimEnergyDrainStill;            // type:FLOAT.0
	float                            SwimEnergyDrainSprint;           // type:FLOAT.0
	float                            SwimEnergyRecovery;              // type:FLOAT.0
	float                            StaminaDrainOnSwimStill;         // type:FLOAT.0
	float                            StaminaDrainOnSwimSprint;        // type:FLOAT.0
	bool                             ImmediateStaminaDecreaseInWater; // type:BOOL.0
	bool                             UseHalfMaxStaminaIfRecoveryThresholdIsBeyondLimit; // type:BOOL.0
	struct _0xE1B0AC6F               RechargeProperties;              // type:STRUCT.STRUCTURE
	struct _0x677A48FC               _0xB37FF8CD;                     // type:STRUCT.STRUCTURE
};

struct _0xC34A33E2
{
	float                            _0x986A0443;                     // type:FLOAT.0
	float                            _0xB351F332;                     // type:FLOAT.0
	float                            _0x476B1B53;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xC876B603;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xD1B29331;                     // type:ENUM.32BIT
	float                            _0x5A522E59;                     // type:FLOAT.0
	float                            _0xC35C5160;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x9B0DD484;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x7772DCE0;                     // type:ENUM.32BIT
	float                            _0x08FFD20E;                     // type:FLOAT.0
	float                            _0xAAC29C74;                     // type:FLOAT.0
	float                            _0x599748F8;                     // type:FLOAT.0
	float                            _0x90F63EAE;                     // type:FLOAT.0
	float                            _0x04FA7E29;                     // type:FLOAT.0
};

struct _0xC35DB68E : _0x2F7DA38D
{
};

struct _0xC36072FA : _0x1054F746
{
};

struct _0xC3609FA6 : _0xEF840C38
{
	struct _0x4A7AD954               MinBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               MaxBindingContext;               // type:STRUCT.STRUCTURE
	struct _0x9B79B490               Min;                             // type:STRUCT.STRUCTURE
	struct _0x9B79B490               Max;                             // type:STRUCT.STRUCTURE
	bool                             Wrap;                            // type:BOOL.0
	bool                             MaxIsInclusive;                  // type:BOOL.0
};

struct _0xC36708F2 : UIBehavior
{
	struct _0x6D03A7A6               TargetContext;                   // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               _0x4B2FA32B;                     // type:STRUCT.STRUCTURE
};

struct _0xC37F03AC : _0x8DB560C0
{
};

struct _0xC37F3C13
{
	float                            MinTemporaryStickingTime;        // type:FLOAT.0
	float                            MaxTemporaryStickingTime;        // type:FLOAT.0
};

struct _0xC37F6C21 : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	float                            minimum;                         // type:FLOAT.0
	float                            maximum;                         // type:FLOAT.0
	float                            default;                         // type:FLOAT.0
};

struct _0xC39E3C76
{
	float                            fStartMinZoom;                   // type:FLOAT.0
	float                            fMinZoom;                        // type:FLOAT.0
	float                            fStartMaxZoom;                   // type:FLOAT.0
	float                            fMaxZoom;                        // type:FLOAT.0
	uint                             SDFColor0;                       // type:UINT.1
	uint                             SDFColor1;                       // type:UINT.1
	float                            fSDFMidPoint;                    // type:FLOAT.0
	float                            fSDFStep;                        // type:FLOAT.0
	enum _0x5B68D667                 uRenderingMode;                  // type:ENUM.32BIT
	string                           uFogLayerKey;                    // type:STRING.ATNONFINALHASHSTRING
	string                           TileSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC3A8426A : uiSelectableBehaviorBase
{
	string                           EventChannel;                    // type:STRING.ATNONFINALHASHSTRING
	int                              _0xCB765785;                     // type:INT.0
	string                           HashParameter;                   // type:STRING.ATNONFINALHASHSTRING
	int                              IntParameter;                    // type:INT.0
};

struct _0xC3BDE86A
{
	float                            MinSpeedDifferenceForPowerAdjustment; // type:FLOAT.0
	float                            MaxSpeedDifferenceForPowerAdjustment; // type:FLOAT.0
	float                            PowerForMinAdjustment;           // type:FLOAT.0
	float                            PowerForMaxAdjustment;           // type:FLOAT.0
	float                            destroySuppressor;               // type:FLOAT.0
};

struct _0xC3C3B3FF
{
	bool                             _0xD8B40D19;                     // type:BOOL.0
	struct _0x56861D60               Heading;                         // type:STRUCT.STRUCTURE
	struct _0x56861D60               Pitch;                           // type:STRUCT.STRUCTURE
	struct _0x56861D60               Roll;                            // type:STRUCT.STRUCTURE
};

struct _0xC3C5F606
{
	vec3V                            _0xE3D66BCE;                     // type:VEC3V.0
	float                            _0xEF219F41;                     // type:FLOAT.0
	float                            InnerRadius;                     // type:FLOAT.0
	float                            _0x41133600;                     // type:FLOAT.0
	float                            _0x1F22A012;                     // type:FLOAT.0
	float                            _0xF636D87A;                     // type:FLOAT.0
	float                            _0xFA6029EC;                     // type:FLOAT.0
	float                            _0xDC19738E;                     // type:FLOAT.0
	float                            _0x4727C959;                     // type:FLOAT.0
	float                            _0xC4DFAFC1;                     // type:FLOAT.0
	float                            _0x164FD09A;                     // type:FLOAT.0
	float                            _0x97A5197B;                     // type:FLOAT.0
	float                            _0xBA6CA1BB;                     // type:FLOAT.0
	float                            _0xF93105F2;                     // type:FLOAT.0
	bool                             _0xA91AD7F8;                     // type:BOOL.0
};

struct _0xC3CB182C : _0x7DE6531A
{
	enum _0xEB8DD8AD                 targetValue;                     // type:ENUM.32BIT
	enum _0xEB8DD8AD                 targetValueMin;                  // type:ENUM.32BIT
	enum _0xEB8DD8AD                 targetValueMax;                  // type:ENUM.32BIT
};

struct _0xC3CFA262
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x6D51D3F2>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0xC3EBAEBF
{
	string                           VerbName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC412730C
{
	string                           _0x9B967921;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x79915C76;                     // type:FLOAT.0
	float                            _0x9C0E1DE4;                     // type:FLOAT.0
	float                            _0xDA799DB1;                     // type:FLOAT.0
	float                            _0x4EB2FB0D;                     // type:FLOAT.0
	float                            _0x287A1310;                     // type:FLOAT.0
	float                            _0x5FF73790;                     // type:FLOAT.0
	float                            _0x50A6B80D;                     // type:FLOAT.0
	float                            _0xFB3FB4EA;                     // type:FLOAT.0
	float                            _0x14FD151C;                     // type:FLOAT.0
	string                           _0xB07F4C6B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xE590EFD1;                     // type:FLOAT.0
	float                            _0x8089C7D6;                     // type:FLOAT.0
	float                            _0x093984AB;                     // type:FLOAT.0
	string                           _0xC1BCCE65;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xFE41A7FB;                     // type:FLOAT.0
	string                           _0x52813554;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xBB68EF73;                     // type:FLOAT.0
	float                            _0x1143F1B3;                     // type:FLOAT.0
	float                            _0xE916965D;                     // type:FLOAT.0
	float                            _0x5EC39FAA;                     // type:FLOAT.0
	float                            _0x24A746FE;                     // type:FLOAT.0
	float                            _0x3AC78578;                     // type:FLOAT.0
	float                            _0x922C98E1;                     // type:FLOAT.0
	string                           _0xA9F054D3;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xADAC5337;                     // type:FLOAT.0
	float                            _0x9F37E773;                     // type:FLOAT.0
	float                            _0x1700CDDB;                     // type:FLOAT.0
};

struct _0xC437E8EC : _0x6F0C770E
{
	bool                             _0xF9B2476B;                     // type:BOOL.0
	struct _0x01E5527C               _0xD7C595C1;                     // type:STRUCT.STRUCTURE
	float                            _0xE9CDB657;                     // type:FLOAT.0
	struct _0xFB3F42E2               _0x3DB99AE4;                     // type:STRUCT.STRUCTURE
};

struct _0xC4391BAA : _0x8C354D49
{
	string                           MapData;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             UseCurrentLocation;              // type:BOOL.0
	string                           TypeKey;                         // type:STRING.ATNONFINALHASHSTRING
	string                           InstanceName;                    // type:STRING.ATFINALHASHSTRING
	enum _0x707E0345                 ShapeType;                       // type:ENUM.32BIT
	float                            InitialZoom;                     // type:FLOAT.0
	bool                             _0x4B01B496;                     // type:BOOL.0
};

struct _0xC444B90D
{
	vec3                             direction;                       // type:VECTOR3.0
	vec3                             rotation;                        // type:VECTOR3.0
	vec3                             scale;                           // type:VECTOR3.0
	vec3                             _0xA718C2BE;                     // type:VECTOR3.0
	string                           _0x08968968;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xF03FE773                 _0x56ED7553;                     // type:ENUM.32BIT
	float                            _0xE1102904;                     // type:FLOAT.0
	float                            _0xC761263A;                     // type:FLOAT.0
	float                            _0x17E6584A;                     // type:FLOAT.0
	float                            _0xD696F06A;                     // type:FLOAT.0
	float                            _0xB5FB9A19;                     // type:FLOAT.0
	vec3                             offset;                          // type:VECTOR3.0
	vec3                             _0x865BB986;                     // type:VECTOR3.0
	string                           _0x1DDC42A2;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x3E7E5D56;                     // type:BOOL.0
	bool                             _0x8B53E9A0;                     // type:BOOL.0
	bool                             _0x237FF16D;                     // type:BOOL.0
	bool                             _0x9F91D636;                     // type:BOOL.0
	bool                             faceCamera;                      // type:BOOL.0
	bool                             _0x834307CB;                     // type:BOOL.0
	bool                             _0x0CBA09CC;                     // type:BOOL.0
	bool                             _0x1D05AA63;                     // type:BOOL.0
	bool                             _0x334ED6F5;                     // type:BOOL.0
	bool                             _0xEC5EA04F;                     // type:BOOL.0
};

struct _0xC4561C6C
{
	bitset<enum _0x82BDC697>         BodyPose;                        // type:BITSET.32BIT
	bitset<enum _0xFC1A65E2>         WeaponPose;                      // type:BITSET.32BIT
	bitset<enum _0xEFE9F25D>         WeaponGroup;                     // type:BITSET.32BIT
	bitset<enum _0x3B52EB76>         Intensity;                       // type:BITSET.32BIT
	bitset<enum _0xC2C58377>         Injury;                          // type:BITSET.32BIT
	bitset<enum _0xB49B6697>         CombatMode;                      // type:BITSET.32BIT
	bitset<enum _0xECB2AF1A>         CameraMode;                      // type:BITSET.32BIT
	bitset<enum _0x222E87B7>         Control;                         // type:BITSET.32BIT
	bitset<enum _0xFF2B6848>         State;                           // type:BITSET.32BIT
	bitset<enum _0x3AAC80E3>         Multiplayer;                     // type:BITSET.32BIT
};

struct _0xC4664C58
{
	struct _0x4B852C44               _0x49E92584;                     // type:STRUCT.POINTER
	string                           _0xC3C9224B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC4678F57
{
	map<string, struct _0xC57ECA1D>     _0xA00ACE8D;                     // type:MAP.ATBINARYMAP
};

struct _0xC46F7DD8
{
	string                            Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x0082334E, 12>     _0x41E6B822;                     // type:ARRAY.MEMBER
};

struct _0xC47799F2
{
	float                            _0xAFAAE115;                     // type:FLOAT.0
	float                            _0x1EE3ACDB;                     // type:FLOAT.0
	float                            MinValue;                        // type:FLOAT.0
	float                            MaxValue;                        // type:FLOAT.0
};

struct _0xC477CDA3
{
	int                              Status;                          // type:INT.0
	int                              ms;                              // type:INT.0
	struct _0x081C7761               Result;                          // type:STRUCT.STRUCTURE
};

struct _0xC47ACE9D : CAICondition
{
};

struct _0xC48C1FCA : _0x906508CE
{
	bool                             _0xCB4861BA;                     // type:BOOL.0
	string                           uri;                             // type:STRING.ATSTRING
	array<string>                    array;                           // type:ARRAY.ATARRAY
};

struct _0xC4998533
{
	float                            fPlayerMoveDistToResetLoiterPosition; // type:FLOAT.0
	float                            _0x6052F35F;                     // type:FLOAT.0
	float                            _0x6A2B1243;                     // type:FLOAT.0
	uint                             uDistanceCheckPeriodMS;          // type:UINT.0
};

struct _0xC4A24F51 : camBaseCameraMetadata
{
	float                                            _0xE6B95912;                     // type:FLOAT.0
	struct _0x655D5A02                               _0x704961FD;                     // type:STRUCT.STRUCTURE
	array<struct _0x655D5A02>                        _0x7EDC6D98;                     // type:ARRAY.ATARRAY
	float                                            _0x29C723E8;                     // type:FLOAT.0
	float                                            _0x15BD06A1;                     // type:FLOAT.0
	float                                            _0x2EE88CAA;                     // type:FLOAT.0
	float                                            _0x2E117B0A;                     // type:FLOAT.0
	float                                            _0xAEC8EB61;                     // type:FLOAT.0
	float                                            _0x32D08817;                     // type:FLOAT.0
	struct camSpeedRelativeShakeSettingsMetadata     _0xDC81C39B;                     // type:STRUCT.STRUCTURE
	vec2                                             _0x5443E66A;                     // type:VECTOR2.0
	vec2                                             _0x2114477E;                     // type:VECTOR2.0
	float                                            _0x430EA6A1;                     // type:FLOAT.0
	vec2                                             WorldPitchLimits;                // type:VECTOR2.0
	float                                            _0xB75C5830;                     // type:FLOAT.0
	float                                            _0xCF8A46C2;                     // type:FLOAT.0
	uint                                             MaxTimeToSpendOccluded;          // type:UINT.0
	float                                            CollisionRadius;                 // type:FLOAT.0
	float                                            _0xED6AF816;                     // type:FLOAT.0
	float                                            RadiusScalingForOcclusionTest;   // type:FLOAT.0
	float                                            RadiusScalingForClippingTest;    // type:FLOAT.0
	float                                            _0x805ECB7E;                     // type:FLOAT.0
	float                                            _0x2DA26BB0;                     // type:FLOAT.0
	float                                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                                            MinHeightAboveWater;             // type:FLOAT.0
	float                                            _0xA3CABB8B;                     // type:FLOAT.0
	float                                            _0x0A6BADF5;                     // type:FLOAT.0
	float                                            _0x42EE3757;                     // type:FLOAT.0
	float                                            _0x5260CEDE;                     // type:FLOAT.0
	float                                            _0x552E9D57;                     // type:FLOAT.0
};

struct _0xC4AB34F0
{
	struct _0x4C35CE5D               _0x75EB6D80;                     // type:STRUCT.STRUCTURE
};

struct _0xC4B9FD26
{
	string                           ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
	float                            Weight;                          // type:FLOAT.0
	float                            HeadingOffset;                   // type:FLOAT.0
	float                            PositionOffset;                  // type:FLOAT.0
};

struct _0xC4DEA28B
{
	string                           VehicleName;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x57D15D58>        _0xC4720DD2;                     // type:ARRAY.ATARRAY
};

struct _0xC4DF1BE6
{
	uint                             _0x8C410CBD;                     // type:UINT.0
};

struct _0xC4FB9521 : _0x53CE36AE
{
};

struct _0xC509663E
{
};

struct _0xC51A77D5
{
	string                           _0x215B8DB4;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x03A8F0D3;                     // type:ARRAY.ATARRAY
};

struct _0xC53A265A
{
	struct _0x62243022               _0x36519888;                     // type:STRUCT.STRUCTURE
	struct _0xEC0385E8               _0x88E35355;                     // type:STRUCT.STRUCTURE
	struct _0x1F269BEE               _0xEF43FD0A;                     // type:STRUCT.STRUCTURE
	float                            _0x34774524;                     // type:FLOAT.0
	float                            _0x7833C86F;                     // type:FLOAT.0
	float                            _0x1728E380;                     // type:FLOAT.0
	bool                             _0x155CC6A3;                     // type:BOOL.0
	bool                             _0x0B344C24;                     // type:BOOL.0
};

struct _0xC53D46D7
{
	float                            StraightLineDistance;            // type:FLOAT.0
	float                            MinTargetSpeedToStartFromPursue; // type:FLOAT.0
	float                            MinTargetSpeedToContinueFromPursue; // type:FLOAT.0
};

struct _0xC542DAFF : CAICondition
{
	bitset<enum _0x0E0ECBB5>         FilterFlags;                     // type:BITSET.8BIT
	float                            _0x9EE546FD;                     // type:FLOAT.0
};

struct _0xC543CA81 : uiEventDataBase
{
	enum rage__InputType             InputType;                       // type:ENUM.32BIT
	uchar                            _0x80470812;                     // type:UCHAR.0
};

struct _0xC5501758 : _0xF70F21F5
{
	string                           _0xD157F9C9;                     // type:STRING.ATNONFINALHASHSTRING
	vec3V                            location;                        // type:VEC3V.0
	float                            radius;                          // type:FLOAT.0
};

struct _0xC56B37C5
{
	vec3V                            UseContextOffset;                // type:VEC3V.0
	string                           PromptText;                      // type:STRING.ATNONFINALHASHSTRING
	string                           PromptGroupText;                 // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponPickupPropId;              // type:STRING.ATNONFINALHASHSTRING
	enum rage__InputType             InputType;                       // type:ENUM.32BIT
	enum ePromptPriority             Priority;                        // type:ENUM.32BIT
	float                            DirectionWeight;                 // type:FLOAT.0
	float                            FixedWeight;                     // type:FLOAT.0
	float                            InteractionRadius;               // type:FLOAT.0
	float                            PointDirectionWeight;            // type:FLOAT.0
	float                            PointDirectionHeading;           // type:FLOAT.0
	float                            PointDirectionHalfAngle;         // type:FLOAT.0
	float                            AbsolutePointHeadingWeight;      // type:FLOAT.0
	float                            AbsolutePointHeading;            // type:FLOAT.0
	float                            AbsolutePointHeadingHalfAngle;   // type:FLOAT.0
	float                            CamLookAngle;                    // type:FLOAT.0
	float                            CloseRadius;                     // type:FLOAT.0
	float                            HoldTime;                        // type:FLOAT.0
	string                           HoldTimeType;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             HoldAsPrimaryAction;             // type:BOOL.0
	bool                             VisiblePrompt;                   // type:BOOL.0
	float                            _0x1538458B;                     // type:FLOAT.0
	int                              _0x84DEFFB3;                     // type:INT.0
};

struct _0xC57ECA1D
{
	array<string>                    _0x6ED90957;                     // type:ARRAY.ATARRAY
	enum _0x8A993643                 _0xA7720120;                     // type:ENUM.32BIT
};

struct _0xC592168C
{
	string                           _0x136B2A66;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0x35EE7472;                     // type:ARRAY.ATARRAY
	struct _0xA588DCC3               _0x0EDDBC0B;                     // type:STRUCT.STRUCTURE
};

struct _0xC5A6CFC2
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	string                           Response;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC5AA3369 : _0x478AE1AC
{
	int                              _0x161A4417;                     // type:INT.0
};

struct _0xC5EE13F7 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xC5F25150
{
	float                            _0xB46693EE;                     // type:FLOAT.0
	float                            _0xD54F81AB;                     // type:FLOAT.0
	float                            _0xB2D07CB3;                     // type:FLOAT.0
};

struct _0xC6079AF0
{
	array<struct _0x450BE532, 3>     LootComponentProbabilities;      // type:ARRAY.ATRANGEARRAY
};

struct _0xC60C96D4 : _0x33C5054B
{
};

struct _0xC6408A81
{
	struct _0x98CF5A90               Surprised;                       // type:STRUCT.STRUCTURE
	struct _0x98CF5A90               Sniper;                          // type:STRUCT.STRUCTURE
	struct _0x98CF5A90               None;                            // type:STRUCT.STRUCTURE
};

struct _0xC645464E
{
	vec3V                            RelativeOffset;                  // type:VEC3V.0
	float                            RelativeHeadingLimitCentre;      // type:FLOAT.0
	float                            MinOrbitHeadingDegrees;          // type:FLOAT.0
	float                            MaxOrbitHeadingDegrees;          // type:FLOAT.0
	float                            MinOrbitPitchDegrees;            // type:FLOAT.0
	float                            MaxOrbitPitchDegrees;            // type:FLOAT.0
	float                            CustomOrbitDistance;             // type:FLOAT.0
	float                            CustomBlendInDuration;           // type:FLOAT.0
	float                            CustomBlendOutDuration;          // type:FLOAT.0
	bitset<enum _0xE4A99EB7>         Flags;                           // type:BITSET.32BIT
};

struct _0xC67E5A42 : _0x7EAFD12D
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
	uint                             TimeToLive;                      // type:UINT.0
};

struct _0xC690E005
{
	array<struct _0xA2156BB0>        Components;                      // type:ARRAY.ATARRAY
};

struct _0xC6924900 : CTuning
{
	struct _0x8FC63622               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xC69B6884 : CAICondition
{
	enum _0x563FBCEA                 PedWithHorse;                    // type:ENUM.32BIT
	string                           DecoratorToMatch;                // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC6CD0B56 : uiDrawableBehaviorBase
{
	string                           _0x5F7CBD98;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Volume;                          // type:FLOAT.0
	bool                             UsePausableTimer;                // type:BOOL.0
	bool                             _0xD550AE22;                     // type:BOOL.0
	bool                             _0x5D01FD90;                     // type:BOOL.0
	bool                             _0xD0F106A2;                     // type:BOOL.0
	bool                             _0x4EBF7CB0;                     // type:BOOL.0
	bool                             _0x09C2DB6A;                     // type:BOOL.0
};

struct _0xC6DB57BA : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 _0xE1A9337A;                     // type:ENUM.32BIT
	float                            MaxDistance;                     // type:FLOAT.0
};

struct _0xC6DC2FB0 : _0x8A0DC979
{
	bool                             _0x1462EAB8;                     // type:BOOL.0
};

struct _0xC6DCDC5E : _0x2F7DA38D
{
};

struct _0xC6DD1006 : _0xB88D6BEE
{
	enum _0x0BF250D0                 _0xB56E9FC6;                     // type:ENUM.32BIT
	uint                             _0x2EC7C73B;                     // type:UINT.1
	string                           _0xDA405271;                     // type:STRING.ATFINALHASHSTRING
};

struct _0xC6E5CDA3
{
	struct _0x77CA3522               Audio;                           // type:STRUCT.STRUCTURE
	array<struct _0x77CA3522>        Audios;                          // type:ARRAY.ATARRAY
	enum InteractionType             InteractionType;                 // type:ENUM.32BIT
	bitset<enum _0x219EE3F3>         Flags;                           // type:BITSET.16BIT
};

struct _0xC6E687F5 : _0x4198511D
{
};

struct _0xC6E99E81
{
	enum _0x1E3AF77C                 _0x7F59EC82;                     // type:ENUM.32BIT
	string                           displayName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33171E8D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           groupId;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             isReadOnly;                      // type:BOOL.0
	bool                             _0xB4C0E736;                     // type:BOOL.0
	bool                             _0x8996B339;                     // type:BOOL.0
	bool                             _0x056AC54D;                     // type:BOOL.0
	bool                             _0xDD9A3B3A;                     // type:BOOL.0
	short                            priority;                        // type:SHORT.0
	vec3V                            _0xD0D015CB;                     // type:VEC3V.0
	struct _0x0A47BB00               _0xD91EDBA2;                     // type:STRUCT.POINTER
};

struct _0xC6F838CB
{
	enum _0x82E48DDD                 EventType;                       // type:ENUM.32BIT
	enum _0x1259F53A                 Priority;                        // type:ENUM.32BIT
	bool                             IsEnabled;                       // type:BOOL.0
};

struct _0xC6F9C7A2
{
	array<struct _0xA4537302>        Destinations;                    // type:ARRAY.ATARRAY
};

struct _0xC6FA58DD : _0x3AB6499E
{
	string                           _0xC31F2A30;                     // type:STRING.ATNONFINALHASHSTRING
	vec2                             OrbitPitchLimits;                // type:VECTOR2.0
	vec2                             _0x6282C8E9;                     // type:VECTOR2.0
	float                            _0xE5F2F235;                     // type:FLOAT.0
	float                            _0xFC0E1E49;                     // type:FLOAT.0
	float                            _0x60987621;                     // type:FLOAT.0
	float                            _0x7A19A89C;                     // type:FLOAT.0
	float                            _0x2BF96FEF;                     // type:FLOAT.0
	bool                             _0x30E4FFF1;                     // type:BOOL.0
};

struct _0xC7043E38 : CTuning
{
	float                            _0x68BB0E3E;                     // type:FLOAT.0
	float                            _0x18699837;                     // type:FLOAT.0
	float                            _0xED026011;                     // type:FLOAT.0
	float                            _0xF87C055F;                     // type:FLOAT.0
	float                            _0x8A2F314A;                     // type:FLOAT.0
	float                            _0x2D4F5490;                     // type:FLOAT.0
	float                            _0xC7CD0483;                     // type:FLOAT.0
	float                            _0xC31F181D;                     // type:FLOAT.0
	float                            _0x9EBF0358;                     // type:FLOAT.0
	float                            _0xDAD4C336;                     // type:FLOAT.0
	float                            _0x3F6FE2D6;                     // type:FLOAT.0
	float                            _0xFF18225D;                     // type:FLOAT.0
	float                            _0x73ECF5FD;                     // type:FLOAT.0
	float                            _0x9158F50B;                     // type:FLOAT.0
	float                            _0x00FE5BD4;                     // type:FLOAT.0
	float                            _0x2C92E130;                     // type:FLOAT.0
	float                            _0x86F52A6F;                     // type:FLOAT.0
	float                            _0x94A93043;                     // type:FLOAT.0
	float                            _0x9890D09B;                     // type:FLOAT.0
	float                            _0xDF009D13;                     // type:FLOAT.0
	float                            _0x2BCED0A1;                     // type:FLOAT.0
	float                            _0x1CA88228;                     // type:FLOAT.0
	float                            _0xCB6CAA3D;                     // type:FLOAT.0
	float                            _0x17290520;                     // type:FLOAT.0
	float                            _0x5A6DF71F;                     // type:FLOAT.0
	float                            _0xC06C30E1;                     // type:FLOAT.0
	float                            _0x5351D9FB;                     // type:FLOAT.0
	float                            _0x069487F6;                     // type:FLOAT.0
	float                            _0xFE233D36;                     // type:FLOAT.0
	float                            _0xA6663FD6;                     // type:FLOAT.0
	float                            _0x23810FAF;                     // type:FLOAT.0
	float                            _0xCE35839B;                     // type:FLOAT.0
	float                            _0xE4A6CBF9;                     // type:FLOAT.0
	float                            _0x1AC21E0A;                     // type:FLOAT.0
	float                            _0xD77AEF36;                     // type:FLOAT.0
	float                            _0xCA8EA485;                     // type:FLOAT.0
	float                            _0xC3DA2DA9;                     // type:FLOAT.0
	float                            _0x169714DD;                     // type:FLOAT.0
	float                            _0x5D1D139D;                     // type:FLOAT.0
	float                            _0x636D2FA6;                     // type:FLOAT.0
	float                            _0x4AA4BE9D;                     // type:FLOAT.0
	float                            _0xBF790EA6;                     // type:FLOAT.0
	float                            _0xCC7A0568;                     // type:FLOAT.0
	float                            _0xED17F576;                     // type:FLOAT.0
	float                            _0x0251C9DF;                     // type:FLOAT.0
	float                            _0xDEF8953B;                     // type:FLOAT.0
	float                            _0xE827CFED;                     // type:FLOAT.0
	float                            _0x69F7D8A6;                     // type:FLOAT.0
	float                            _0x861A07D8;                     // type:FLOAT.0
	float                            _0xAEB05D84;                     // type:FLOAT.0
	float                            _0x074E9DCE;                     // type:FLOAT.0
	float                            _0x26E97901;                     // type:FLOAT.0
	float                            _0xB1172878;                     // type:FLOAT.0
	float                            _0xE5C394F2;                     // type:FLOAT.0
	float                            _0xAEFD28C6;                     // type:FLOAT.0
	float                            _0xD826558E;                     // type:FLOAT.0
	float                            _0x9FA62890;                     // type:FLOAT.0
	float                            _0xE8E345FF;                     // type:FLOAT.0
	float                            _0xF7AA8FA9;                     // type:FLOAT.0
	float                            _0x82B1667A;                     // type:FLOAT.0
	float                            _0x08803CD5;                     // type:FLOAT.0
	float                            _0x80B7E36A;                     // type:FLOAT.0
	float                            _0x27357A1A;                     // type:FLOAT.0
	float                            _0x75F97AB6;                     // type:FLOAT.0
	float                            _0xCA4DBE04;                     // type:FLOAT.0
	float                            _0x5D9214D4;                     // type:FLOAT.0
	float                            _0x2EF34EC0;                     // type:FLOAT.0
	float                            _0xF2E990A8;                     // type:FLOAT.0
	float                            _0x25F496F8;                     // type:FLOAT.0
	float                            _0x1780D142;                     // type:FLOAT.0
	float                            _0x24893477;                     // type:FLOAT.0
	float                            _0xC33D9384;                     // type:FLOAT.0
	float                            _0xA433606B;                     // type:FLOAT.0
	float                            _0xF8DA7632;                     // type:FLOAT.0
	float                            _0x12E5106F;                     // type:FLOAT.0
	float                            _0x65B18246;                     // type:FLOAT.0
	float                            _0xEE0005F3;                     // type:FLOAT.0
	float                            _0xD561FB51;                     // type:FLOAT.0
	float                            _0xB557F32F;                     // type:FLOAT.0
	float                            _0x228CD08E;                     // type:FLOAT.0
	float                            _0xA6A9F3BB;                     // type:FLOAT.0
	float                            _0x8E6B9630;                     // type:FLOAT.0
	float                            _0x6AB151E7;                     // type:FLOAT.0
	float                            _0x8F8316F4;                     // type:FLOAT.0
	float                            _0x31F0A337;                     // type:FLOAT.0
	float                            _0x3D5C088D;                     // type:FLOAT.0
	float                            _0xD2500F9D;                     // type:FLOAT.0
	float                            _0x6FF500B3;                     // type:FLOAT.0
	float                            _0xED98EF6E;                     // type:FLOAT.0
	float                            _0x585B876A;                     // type:FLOAT.0
	float                            _0x5B20E861;                     // type:FLOAT.0
	float                            _0x7D3215AF;                     // type:FLOAT.0
	float                            _0xA36C383F;                     // type:FLOAT.0
	float                            _0xD0FE1A58;                     // type:FLOAT.0
	float                            _0x82C1E9B5;                     // type:FLOAT.0
	float                            _0x00A18C99;                     // type:FLOAT.0
	float                            _0x5A034D43;                     // type:FLOAT.0
	float                            _0x4E38C196;                     // type:FLOAT.0
	float                            _0x53867138;                     // type:FLOAT.0
	float                            _0xAC9F94DE;                     // type:FLOAT.0
	float                            _0xC2CBE5D0;                     // type:FLOAT.0
	float                            _0x15D18A1B;                     // type:FLOAT.0
	float                            _0x2B6F1957;                     // type:FLOAT.0
	float                            _0x06F44B7F;                     // type:FLOAT.0
	float                            _0x6E9B5ECB;                     // type:FLOAT.0
	float                            _0xA2F5B10B;                     // type:FLOAT.0
	float                            _0xAFAFC115;                     // type:FLOAT.0
	float                            _0x09EE5C26;                     // type:FLOAT.0
	float                            _0x7A334E24;                     // type:FLOAT.0
	float                            _0xB4F10CAC;                     // type:FLOAT.0
	float                            _0x77297F8F;                     // type:FLOAT.0
	float                            _0xC5225007;                     // type:FLOAT.0
	float                            _0x12BB5961;                     // type:FLOAT.0
	float                            _0xEAD5CDE0;                     // type:FLOAT.0
	float                            _0x104296E4;                     // type:FLOAT.0
	float                            _0x650F3D05;                     // type:FLOAT.0
	float                            _0xC747F4F0;                     // type:FLOAT.0
	float                            _0x653DBCC1;                     // type:FLOAT.0
	float                            _0xE9EA7657;                     // type:FLOAT.0
	float                            _0x9265A455;                     // type:FLOAT.0
	float                            _0x82E63B78;                     // type:FLOAT.0
	float                            _0x37EA4654;                     // type:FLOAT.0
	float                            _0x0813FE04;                     // type:FLOAT.0
	float                            _0x23F4611C;                     // type:FLOAT.0
	float                            _0x1F453176;                     // type:FLOAT.0
	float                            _0xB842F4EA;                     // type:FLOAT.0
	float                            _0xD4647287;                     // type:FLOAT.0
	float                            _0xC56078D3;                     // type:FLOAT.0
	float                            _0x11171925;                     // type:FLOAT.0
	float                            _0x56629B17;                     // type:FLOAT.0
	float                            _0x206EB5E9;                     // type:FLOAT.0
	float                            _0x0A132381;                     // type:FLOAT.0
	float                            _0xDD1AD72B;                     // type:FLOAT.0
	float                            _0xA1FA6073;                     // type:FLOAT.0
	float                            _0xAD572188;                     // type:FLOAT.0
	float                            _0xB7F1EF1A;                     // type:FLOAT.0
	float                            _0x7586700B;                     // type:FLOAT.0
	float                            _0x76A2830D;                     // type:FLOAT.0
	float                            _0xFF0596B1;                     // type:FLOAT.0
	float                            _0xA631096F;                     // type:FLOAT.0
	float                            _0x58891D9D;                     // type:FLOAT.0
	float                            _0xE44C9E06;                     // type:FLOAT.0
	float                            _0x429B3831;                     // type:FLOAT.0
	float                            _0xD61EEB65;                     // type:FLOAT.0
	float                            _0xE6A999A6;                     // type:FLOAT.0
	float                            _0x040D1654;                     // type:FLOAT.0
	float                            _0x7DDCECD2;                     // type:FLOAT.0
	float                            _0xEBA14AB4;                     // type:FLOAT.0
	float                            _0xDAAB6C41;                     // type:FLOAT.0
	float                            _0xE7D609C7;                     // type:FLOAT.0
	float                            _0xBFF837FD;                     // type:FLOAT.0
	float                            _0x0BA3F653;                     // type:FLOAT.0
	float                            _0x61540E1A;                     // type:FLOAT.0
	float                            _0x8B210965;                     // type:FLOAT.0
	float                            _0x328515F3;                     // type:FLOAT.0
	float                            _0x8819AC46;                     // type:FLOAT.0
	float                            _0x94CCB57D;                     // type:FLOAT.0
	float                            _0x7CC5F3AB;                     // type:FLOAT.0
	float                            _0x0560E003;                     // type:FLOAT.0
	float                            _0xE0F89CA4;                     // type:FLOAT.0
	float                            _0x68DC1283;                     // type:FLOAT.0
	float                            _0x7964B12E;                     // type:FLOAT.0
	float                            _0x8742ED30;                     // type:FLOAT.0
	float                            _0xC3C27141;                     // type:FLOAT.0
	float                            _0x0ACF4AF0;                     // type:FLOAT.0
	float                            _0x346F1D62;                     // type:FLOAT.0
	float                            _0x8B0997D9;                     // type:FLOAT.0
	float                            _0xE7A2D424;                     // type:FLOAT.0
	float                            _0x8DD12DED;                     // type:FLOAT.0
	float                            _0xBBBE5866;                     // type:FLOAT.0
	float                            _0x7FD0F44A;                     // type:FLOAT.0
	float                            _0x54DCD34F;                     // type:FLOAT.0
	float                            _0x33C73EBE;                     // type:FLOAT.0
	float                            _0x65F3A8C0;                     // type:FLOAT.0
	float                            _0xBF4BC9CE;                     // type:FLOAT.0
	float                            _0x347EC7E9;                     // type:FLOAT.0
	float                            _0xE5A8E584;                     // type:FLOAT.0
	float                            _0x50F6654F;                     // type:FLOAT.0
	int                              _0xE16B6FD8;                     // type:INT.0
	int                              _0x6F240EFE;                     // type:INT.0
	int                              _0x1FBA9989;                     // type:INT.0
	int                              _0xDED843C8;                     // type:INT.0
	int                              _0xFB3A7B84;                     // type:INT.0
	int                              _0x22FA4D8A;                     // type:INT.0
	float                            _0xA26441E4;                     // type:FLOAT.0
	float                            _0x5D4B4EF0;                     // type:FLOAT.0
	float                            _0x4B61290E;                     // type:FLOAT.0
	float                            _0xA8FE0845;                     // type:FLOAT.0
	float                            _0xF9490867;                     // type:FLOAT.0
	float                            _0x2B01121A;                     // type:FLOAT.0
	float                            _0xE1AEC050;                     // type:FLOAT.0
	float                            _0x1EF52421;                     // type:FLOAT.0
	float                            _0x15E9D28A;                     // type:FLOAT.0
};

struct _0xC70EAC16 : UIBehavior
{
};

struct _0xC716C487
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<enum rage__InputType>      Inputs;                          // type:ARRAY.ATARRAY
};

struct _0xC71D14C2
{
	enum _0xF0423EA7                 GameMode;                        // type:ENUM.32BIT
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct _0x63703EA3               _0x4C951D7D;                     // type:STRUCT.STRUCTURE
};

struct _0xC71D1C39
{
	struct _0xC8A3B509               _0xDC49D9B9;                     // type:STRUCT.STRUCTURE
	struct _0xC8A3B509               _0xF0CDAF61;                     // type:STRUCT.STRUCTURE
};

struct _0xC71F7A38 : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct _0xC744C8E7
{
	string                           ParentFilterSet;                 // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xABB31B99>        FactFilterList;                  // type:ARRAY.ATARRAY
};

struct _0xC74A6405
{
	bitset<enum _0x5F56C3DA>         Flags;                           // type:BITSET.8BIT
};

struct _0xC76AD845
{
	struct CAICondition                 Condition;                       // type:STRUCT.POINTER
	map<string, struct _0x7EE7A7AE>     Motions;                         // type:MAP.ATBINARYMAP
};

struct _0xC7A24C9B : _0x74EB5104
{
};

struct _0xC7A5F7BD
{
	enum _0x23036FEE                 _0x6307F7EF;                     // type:ENUM.32BIT
	float                            _0xD0E55D59;                     // type:FLOAT.0
	float                            _0x22E4C343;                     // type:FLOAT.0
};

struct _0xC7B02A2F : _0xA1DB485F
{
	struct _0x05C033C3               Name;                            // type:STRUCT.STRUCTURE
};

struct _0xC7B38A98 : _0x4AD37C0A
{
	array<struct _0x60285E82>        _0x83CC65E7;                     // type:ARRAY.ATARRAY
	array<struct _0x89C3FA1C>        _0x2F2882BB;                     // type:ARRAY.ATARRAY
};

struct _0xC7B3CA9F : _0x90A2610E
{
};

struct _0xC7CDF22D : _0x8C354D49
{
};

struct _0xC7DA0371
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           FilterId;                        // type:STRING.ATNONFINALHASHSTRING
	string                           BodyBlendId;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC7EF0365
{
	float                            _0x3D2631AF;                     // type:FLOAT.0
	float                            _0x1B12C971;                     // type:FLOAT.0
	float                            _0x92BB31E6;                     // type:FLOAT.0
	float                            _0x36D8C51D;                     // type:FLOAT.0
	float                            _0x1990E985;                     // type:FLOAT.0
	uint                             _0x56389E43;                     // type:UINT.0
	uint                             _0x34640822;                     // type:UINT.0
};

struct _0xC7F1452C
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxRange;                       // type:FLOAT.0
	float                            _0xD67B6389;                     // type:FLOAT.0
	float                            _0xAE9E88D0;                     // type:FLOAT.0
	float                            _0xAEC80023;                     // type:FLOAT.0
	float                            _0x67E7DF30;                     // type:FLOAT.0
	float                            _0xDF1DB31E;                     // type:FLOAT.0
};

struct _0xC8098303
{
	struct _0x7E6D9996               Distance;                        // type:STRUCT.STRUCTURE
	float                            _0x67DA425A;                     // type:FLOAT.0
	float                            Player;                          // type:FLOAT.0
};

struct _0xC80B7BDC : _0xE24A5D09
{
};

struct _0xC81A6215
{
	string                              FallbackMotionType;              // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0xC76AD845>     EnterMotions;                    // type:MAP.ATBINARYMAP
	map<string, struct _0xC76AD845>     InSeatMotions;                   // type:MAP.ATBINARYMAP
	map<string, struct _0xC76AD845>     ExitMotions;                     // type:MAP.ATBINARYMAP
};

struct _0xC81DCD23
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           VolumeName;                      // type:STRING.ATNONFINALHASHSTRING
	string                           _0x267E8F00;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x4A7E9558>        Tasks;                           // type:ARRAY.ATARRAY
};

struct _0xC81F8273
{
	string                           TargetSceneParticipantId;        // type:STRING.ATNONFINALHASHSTRING
	string                           WarpParentSceneParticipantId;    // type:STRING.ATNONFINALHASHSTRING
	string                           CarriableConfigToUse;            // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultSatchelItemInfo;          // type:STRING.ATNONFINALHASHSTRING
	bool                             AssignTextureFromTarget;         // type:BOOL.0
	bool                             CalcSatchelItemFromTargetConditions; // type:BOOL.0
};

struct _0xC828BE80 : CAICondition
{
};

struct _0xC849F299 : _0x8A0DC979
{
	enum _0xC2606788                 _0xF3E4609D;                     // type:ENUM.32BIT
};

struct _0xC853BCC7 : _0x1054F746
{
};

struct _0xC8862B14
{
	uint                             _0x646AC6AE;                     // type:UINT.0
	uchar                            _0x6C40D231;                     // type:UCHAR.0
	uchar                            _0x8BEA058A;                     // type:UCHAR.0
	char                             Priority;                        // type:CHAR.0
};

struct _0xC88C9AE7 : _0xB74AC865
{
};

struct _0xC8967734 : camBaseCameraMetadata
{
	float                            ForwardAcceleration;             // type:FLOAT.0
	float                            VerticalAcceleration;            // type:FLOAT.0
	float                            _0x19ABF108;                     // type:FLOAT.0
	float                            HeadingAcceleration;             // type:FLOAT.0
	float                            PitchAcceleration;               // type:FLOAT.0
	float                            RollAcceleration;                // type:FLOAT.0
	float                            _0x3B1D1624;                     // type:FLOAT.0
	float                            FovAcceleration;                 // type:FLOAT.0
	float                            _0x87AFAFDB;                     // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	vec3                             _0x589360C2;                     // type:VECTOR3.0
	vec3                             _0xCA85BC30;                     // type:VECTOR3.0
	vec2                             _0x9C919D73;                     // type:VECTOR2.0
	float                            _0x34EA6BE9;                     // type:FLOAT.0
	vec2                             _0x389C4257;                     // type:VECTOR2.0
	float                            _0xF53B6D6A;                     // type:FLOAT.0
	vec2                             _0xDA530256;                     // type:VECTOR2.0
	float                            _0x0759220C;                     // type:FLOAT.0
};

struct _0xC89DE540 : uiScreenAdjustableBehaviorBase
{
};

struct _0xC8A267CF : _0x8A0DC979
{
	bool                             OnEnter;                         // type:BOOL.0
	bool                             OnExit;                          // type:BOOL.0
};

struct _0xC8A3B509
{
	string                           PedSet;                          // type:STRING.ATNONFINALHASHSTRING
	string                           WeaponSet;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC8ACCB9A : _0x3AB6499E
{
	string                           _0xC607587A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB37F05A3;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x48C2E905;                     // type:FLOAT.0
	float                            _0x80F47819;                     // type:FLOAT.0
	float                            _0xDD3DB8F0;                     // type:FLOAT.0
	float                            _0x0E285989;                     // type:FLOAT.0
	float                            _0x317BBC89;                     // type:FLOAT.0
	float                            _0x8F7090F7;                     // type:FLOAT.0
	float                            _0x7E2A9DA3;                     // type:FLOAT.0
	float                            _0xAE958C2A;                     // type:FLOAT.0
	float                            _0xD8B28594;                     // type:FLOAT.0
	float                            _0xB297266F;                     // type:FLOAT.0
	float                            _0x5EA4175C;                     // type:FLOAT.0
	float                            _0x10165D52;                     // type:FLOAT.0
	float                            _0xE91353DE;                     // type:FLOAT.0
	float                            _0x88C72A0D;                     // type:FLOAT.0
	float                            _0xBDD44641;                     // type:FLOAT.0
	float                            _0xFF9E4861;                     // type:FLOAT.0
	float                            _0x2C3266B4;                     // type:FLOAT.0
	float                            _0x6633805D;                     // type:FLOAT.0
	float                            _0x897ADDEB;                     // type:FLOAT.0
	float                            _0x99DF0DD2;                     // type:FLOAT.0
	uint                             _0x44B42611;                     // type:UINT.0
	uint                             _0x547ED7A6;                     // type:UINT.0
	uint                             _0x0BA8A37C;                     // type:UINT.0
	array<struct _0x1E3B35D7>        _0xE1060459;                     // type:ARRAY.ATARRAY
	float                            _0xE1B5D5FF;                     // type:FLOAT.0
	float                            _0xDDCB9496;                     // type:FLOAT.0
	float                            _0x897D98F7;                     // type:FLOAT.0
	float                            _0x3E5B81EB;                     // type:FLOAT.0
	float                            _0x755E5646;                     // type:FLOAT.0
	float                            _0x635E8D11;                     // type:FLOAT.0
	float                            _0xFF4C3E06;                     // type:FLOAT.0
	float                            _0xE3D5C01F;                     // type:FLOAT.0
	float                            _0x358914DE;                     // type:FLOAT.0
	float                            _0x5DEECE9D;                     // type:FLOAT.0
	float                            _0x00A502E8;                     // type:FLOAT.0
	float                            _0x16BDAA9B;                     // type:FLOAT.0
	float                            _0x96E2B394;                     // type:FLOAT.0
};

struct _0xC8B8DEB4 : uiEventDataBase
{
};

struct _0xC8C7396A : _0x0A510DA9
{
	string                           TaskHash;                        // type:STRING.ATNONFINALHASHSTRING
	array<string>                    TaskList;                        // type:ARRAY.ATARRAY
	bool                             MustBeActive;                    // type:BOOL.0
};

struct _0xC8CD13A0
{
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9553B3C7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE06FD7C2;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xC8D51B9E : _0x45E78B4D
{
	array<string>                    _0x379A4935;                     // type:ARRAY.ATARRAY
};

struct _0xC8DD0B20 : CTuning
{
	uint                             _0xA7F2130D;                     // type:UINT.0
	uint                             _0x2887D053;                     // type:UINT.0
	uint                             _0x92039660;                     // type:UINT.0
};

struct _0xC8FC9A0A
{
	enum eDoorId                     doorId;                          // type:ENUM.32BIT
	float                            stiffness;                       // type:FLOAT.0
	float                            _0x65FA7BD4;                     // type:FLOAT.0
	float                            maxSpeed;                        // type:FLOAT.0
	float                            _0x51F33133;                     // type:FLOAT.0
	float                            _0xCD71202B;                     // type:FLOAT.0
};

struct _0xC9018CCE : _0xA709E487
{
	bitset<enum _0x068001B8>         _0xA687EEFA;                     // type:BITSET.32BIT
};

struct _0xC90278D2
{
	string                           id;                              // type:STRING.ATFINALHASHSTRING
	enum _0x025A6DC5                 _0xFE27FFDE;                     // type:ENUM.32BIT
	vec3V                            position;                        // type:VEC3V.0
	vec3V                            orientation;                     // type:VEC3V.0
	vec3V                            scale;                           // type:VEC3V.0
};

struct _0xC92F6559
{
	map<string, struct _0x9CE8E8EF>     _0x43DFCCDB;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x35665B76>     _0x3061CE6D;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xC1EF38FF>     _0xAB862775;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xC412730C>     _0xCD97836A;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x756B4356>     _0xB242CDB0;                     // type:MAP.ATBINARYMAP
};

struct _0xC9885F5A
{
	enum _0x244E919F                 DefaultResponse;                 // type:ENUM.32BIT
	array<struct _0x238E27A7>        Responses;                       // type:ARRAY.ATARRAY
};

struct _0xC98B7129 : _0x7DE6531A
{
	enum _0x37A82382                 targetValue;                     // type:ENUM.32BIT
	enum _0x37A82382                 targetValueMin;                  // type:ENUM.32BIT
	enum _0x37A82382                 targetValueMax;                  // type:ENUM.32BIT
};

struct _0xC98CF90B : CTuning
{
	uint                             _0xBABAD372;                     // type:UINT.0
	uint                             _0xF80A267A;                     // type:UINT.0
	uint                             _0xE03324CD;                     // type:UINT.0
	uint                             _0x4A0DE888;                     // type:UINT.0
	uint                             _0x79B8DB1C;                     // type:UINT.0
	uint                             _0xAC9F8109;                     // type:UINT.0
	uint                             _0x2852F5CE;                     // type:UINT.0
	uint                             _0x16F12976;                     // type:UINT.0
	uint                             _0x299A21E4;                     // type:UINT.0
	uint                             _0x9E00AEA2;                     // type:UINT.0
	uint                             _0x3181C195;                     // type:UINT.0
	uint                             _0x266F59EA;                     // type:UINT.0
	float                            _0x7BF0180C;                     // type:FLOAT.0
	float                            _0x7C486A24;                     // type:FLOAT.0
	float                            _0x66BE73E8;                     // type:FLOAT.0
	float                            _0x9EDC8421;                     // type:FLOAT.0
	float                            _0x9BAA59F3;                     // type:FLOAT.0
	float                            _0x6B92BF61;                     // type:FLOAT.0
	int                              _0x49D4786E;                     // type:INT.0
	int                              _0xE2574DAC;                     // type:INT.0
	int                              _0x9B7C7B33;                     // type:INT.0
	int                              _0xCB5339F2;                     // type:INT.0
	uint                             _0xB540A10B;                     // type:UINT.0
	uint                             _0xE6E47369;                     // type:UINT.0
	uint                             _0xF30C8035;                     // type:UINT.0
	uint                             _0x8821F380;                     // type:UINT.0
	uint                             _0xF4A56446;                     // type:UINT.0
	float                            _0xD595BCB0;                     // type:FLOAT.0
	float                            _0xD38A305B;                     // type:FLOAT.0
	float                            _0x4EDCB7D4;                     // type:FLOAT.0
	float                            _0x072711D7;                     // type:FLOAT.0
	float                            _0x2631ABD8;                     // type:FLOAT.0
	float                            _0x6B65FE56;                     // type:FLOAT.0
	float                            _0x6FB85AE5;                     // type:FLOAT.0
	float                            _0x5D187062;                     // type:FLOAT.0
	float                            _0x9000BFDB;                     // type:FLOAT.0
	float                            _0x5DDE8B6B;                     // type:FLOAT.0
	float                            _0x3CC47831;                     // type:FLOAT.0
	float                            _0x56EE2246;                     // type:FLOAT.0
	uint                             _0x26303FF1;                     // type:UINT.0
	uint                             _0xA7AED8BE;                     // type:UINT.0
	uint                             _0xB788CF5D;                     // type:UINT.0
	uint                             _0x8A7B19B4;                     // type:UINT.0
	uint                             _0xDCC33903;                     // type:UINT.0
	float                            _0xABB36E72;                     // type:FLOAT.0
	float                            _0x06E22B49;                     // type:FLOAT.0
	float                            _0x14F8565C;                     // type:FLOAT.0
	float                            _0xCFCA2300;                     // type:FLOAT.0
	uint                             _0x5BA3CDF5;                     // type:UINT.0
	uint                             _0x0C3EBF10;                     // type:UINT.0
	uint                             _0x93FEFE1A;                     // type:UINT.0
	uint                             _0x231EDF57;                     // type:UINT.0
	float                            _0x87CC0BA9;                     // type:FLOAT.0
	uint                             _0x8C7A59E7;                     // type:UINT.0
	uint                             _0xADC8770F;                     // type:UINT.0
	uint                             _0xA95D7B3F;                     // type:UINT.0
	float                            _0xC92AE5DB;                     // type:FLOAT.0
	uint                             _0x6529EAA3;                     // type:UINT.0
	uint                             _0x9E53C5BD;                     // type:UINT.0
	uint                             _0x4D411EB5;                     // type:UINT.0
	uint                             _0x7CA83F3C;                     // type:UINT.0
	uint                             _0x49870B25;                     // type:UINT.0
	uint                             _0x86C80EE6;                     // type:UINT.0
	float                            _0xE652327C;                     // type:FLOAT.0
	uint                             _0xF5896BAA;                     // type:UINT.0
	uint                             _0x7A65B7FD;                     // type:UINT.0
	uint                             _0x1A74F915;                     // type:UINT.0
	uint                             _0xB8A9AF59;                     // type:UINT.0
	uint                             _0xF8BF555E;                     // type:UINT.0
	uint                             _0x90AE71F9;                     // type:UINT.0
	uint                             _0xA3F19458;                     // type:UINT.0
	uint                             _0xB768CB81;                     // type:UINT.0
	uint                             _0x6661BDE6;                     // type:UINT.0
	uint                             _0xEDB35F1F;                     // type:UINT.0
	uint                             _0x266EB529;                     // type:UINT.0
	float                            _0xA26F076C;                     // type:FLOAT.0
	float                            _0x4CCB88C7;                     // type:FLOAT.0
	uint                             _0x1ED707E4;                     // type:UINT.0
	float                            _0x63EDC260;                     // type:FLOAT.0
	float                            _0x00AEA442;                     // type:FLOAT.0
	float                            _0x9E3F796F;                     // type:FLOAT.0
	float                            _0x25F5597F;                     // type:FLOAT.0
	uint                             _0xAA126112;                     // type:UINT.0
	uint                             _0x3F65765D;                     // type:UINT.0
	uint                             _0x876F8D31;                     // type:UINT.0
	uint                             _0x43003BF3;                     // type:UINT.0
	uchar                            _0x6FE97EBA;                     // type:UCHAR.0
	float                            _0xC3F7C806;                     // type:FLOAT.0
	float                            _0xA4AD882F;                     // type:FLOAT.0
	float                            _0x0257ECCA;                     // type:FLOAT.0
	float                            _0xDD121DF7;                     // type:FLOAT.0
	uint                             _0x5FBA515C;                     // type:UINT.0
	uint                             _0x1333B044;                     // type:UINT.0
	uint                             _0xAAF0DA09;                     // type:UINT.0
	uint                             _0x39BCD539;                     // type:UINT.0
	uint                             _0xB752902B;                     // type:UINT.0
	uint                             _0xEFB4AF60;                     // type:UINT.0
	uint                             _0x4477B4F3;                     // type:UINT.0
	uint                             _0x651AAEEC;                     // type:UINT.0
	uint                             _0x799B0BB1;                     // type:UINT.0
	uint                             _0x3791F10F;                     // type:UINT.0
	uint                             _0x830A9EBF;                     // type:UINT.0
	uint                             _0x9100DD1D;                     // type:UINT.0
	uint                             _0x02EF5DB1;                     // type:UINT.0
	uint                             _0x772D60F7;                     // type:UINT.0
	uint                             _0x7E17BA50;                     // type:UINT.0
	uint                             _0x26156E8E;                     // type:UINT.0
	uint                             _0xC3597E90;                     // type:UINT.0
	uint                             _0xBF56D1C2;                     // type:UINT.0
	uint                             _0x8C7BFAA0;                     // type:UINT.0
	uint                             _0x8302443F;                     // type:UINT.0
	uint                             _0xCD4E930F;                     // type:UINT.0
	float                            _0x91D4A074;                     // type:FLOAT.0
	float                            _0x228279C3;                     // type:FLOAT.0
	uint                             _0x61C2A5DF;                     // type:UINT.0
	float                            _0x68B811C0;                     // type:FLOAT.0
	float                            _0x55F764D0;                     // type:FLOAT.0
	uint                             _0xA6365CF0;                     // type:UINT.0
	float                            _0xB1D71C03;                     // type:FLOAT.0
	float                            _0xFBDE2B70;                     // type:FLOAT.0
	float                            _0x8A9F6465;                     // type:FLOAT.0
	float                            _0x9C924CE5;                     // type:FLOAT.0
	uint                             _0x518C2FD9;                     // type:UINT.0
	uint                             _0xA655C3AB;                     // type:UINT.0
	uint                             _0xCDE11345;                     // type:UINT.0
	uint                             _0xFF8FF677;                     // type:UINT.0
	uint                             _0xBE952A4A;                     // type:UINT.0
	uint                             _0x9321029C;                     // type:UINT.0
	uint                             _0x28F45505;                     // type:UINT.0
	uint                             _0x64F69CEE;                     // type:UINT.0
	uint                             _0x2C6FEF0E;                     // type:UINT.0
	uint                             _0x2D87D19D;                     // type:UINT.0
	string                           _0xB60353A2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x55F5B0E1;                     // type:FLOAT.0
	float                            _0xCE88005D;                     // type:FLOAT.0
	float                            _0xF002E846;                     // type:FLOAT.0
	float                            _0xF96AA544;                     // type:FLOAT.0
	float                            _0xB651BA8F;                     // type:FLOAT.0
	uint                             _0x375DAB2B;                     // type:UINT.0
	uint                             _0xCC26A2DF;                     // type:UINT.0
	uint                             _0x708899E6;                     // type:UINT.0
	uint                             _0x3A67EB33;                     // type:UINT.0
	uint                             _0x922AF3DA;                     // type:UINT.0
	uint                             _0x2B512B5D;                     // type:UINT.0
	uint                             _0xD6C39A4A;                     // type:UINT.0
	float                            _0x3F2C339E;                     // type:FLOAT.0
	float                            _0x67CF5345;                     // type:FLOAT.0
	uint                             _0x28616EDF;                     // type:UINT.0
	uint                             _0xFB787E49;                     // type:UINT.0
	uint                             _0x96B6FC05;                     // type:UINT.0
	uint                             _0x112ECB25;                     // type:UINT.0
	uint                             _0x026FD37C;                     // type:UINT.0
	uint                             _0x9D4B8268;                     // type:UINT.0
	uint                             _0xDA1442F5;                     // type:UINT.0
	uint                             _0xFE78EAB6;                     // type:UINT.0
	uint                             _0x83F7B25E;                     // type:UINT.0
	uint                             _0xF70B87AB;                     // type:UINT.0
	float                            _0x9ACFE54E;                     // type:FLOAT.0
	float                            _0x0F572D32;                     // type:FLOAT.0
	float                            _0x5DC4D4F1;                     // type:FLOAT.0
	float                            _0xB4FAD788;                     // type:FLOAT.0
	float                            _0x60BFB4AB;                     // type:FLOAT.0
	float                            _0x83C78AAB;                     // type:FLOAT.0
	float                            _0x6003C9BA;                     // type:FLOAT.0
	uint                             _0x29F6DFF8;                     // type:UINT.0
	uint                             _0x0D83408E;                     // type:UINT.0
	uint                             _0x1A3C6532;                     // type:UINT.0
	uint                             _0xBA365AA2;                     // type:UINT.0
	uint                             _0x6D684489;                     // type:UINT.0
	float                            _0x2F8986F6;                     // type:FLOAT.0
	uint                             _0xED90C673;                     // type:UINT.0
	uint                             _0x5A18BC47;                     // type:UINT.0
	uint                             _0x36D5C463;                     // type:UINT.0
	uint                             _0x63BD5036;                     // type:UINT.0
	uint                             _0x98FF3FBD;                     // type:UINT.0
	uint                             _0xFE73A4DF;                     // type:UINT.0
	uint                             _0x3FCB03EE;                     // type:UINT.0
	uint                             _0x22D86A7C;                     // type:UINT.0
	uint                             _0x22FED793;                     // type:UINT.0
	uint                             _0xADB708C8;                     // type:UINT.0
	uint                             _0xCF4DE58D;                     // type:UINT.0
	float                            _0xDBC4A3B6;                     // type:FLOAT.0
	float                            _0x29805D00;                     // type:FLOAT.0
	uint                             _0x39390776;                     // type:UINT.0
	uint                             _0x14446988;                     // type:UINT.0
	uint                             _0xBE966F92;                     // type:UINT.0
	uint                             _0xC4346B22;                     // type:UINT.0
	uint                             _0x9F0B06FD;                     // type:UINT.0
	uint                             _0x2D5C17C9;                     // type:UINT.0
	uint                             _0x90E20938;                     // type:UINT.0
	float                            _0xCE46EB86;                     // type:FLOAT.0
	uint                             _0xA29EF47E;                     // type:UINT.0
	uint                             _0xCBC941B7;                     // type:UINT.0
	uint                             _0x2057B4CB;                     // type:UINT.0
	uint                             _0xFC456609;                     // type:UINT.0
	float                            _0x206A4237;                     // type:FLOAT.0
	float                            _0x11DC0265;                     // type:FLOAT.0
	uint                             _0x1B156C2C;                     // type:UINT.0
	uint                             _0x2405DD87;                     // type:UINT.0
	uint                             _0x5E6DA131;                     // type:UINT.0
	uint                             _0xD02F1807;                     // type:UINT.0
	uint                             _0x4D0FFEC6;                     // type:UINT.0
	uint                             _0x7D9BEC41;                     // type:UINT.0
	uint                             _0x690B2D34;                     // type:UINT.0
	uint                             _0x1E529C68;                     // type:UINT.0
	uint                             _0xE08A3B6C;                     // type:UINT.0
	uint                             _0x3692F8C8;                     // type:UINT.0
	uint                             _0x87829343;                     // type:UINT.0
	uint                             _0x2FFFFA47;                     // type:UINT.0
	float                            _0x56D8AA44;                     // type:FLOAT.0
	uint                             _0xFFBC5330;                     // type:UINT.0
	uint                             _0x33A89C37;                     // type:UINT.0
	uint                             _0x23A10EAA;                     // type:UINT.0
	uint                             _0x24F0B72A;                     // type:UINT.0
	uint                             _0xAD754A1A;                     // type:UINT.0
	uint                             _0x4FA62430;                     // type:UINT.0
	uint                             _0x0123C059;                     // type:UINT.0
	uint                             _0x679B6E3D;                     // type:UINT.0
	float                            _0x93559E86;                     // type:FLOAT.0
	float                            _0xCC05F062;                     // type:FLOAT.0
	float                            _0x6AAE7A93;                     // type:FLOAT.0
	uint                             _0x5B50DB84;                     // type:UINT.0
	uint                             _0x310D69BF;                     // type:UINT.0
	uint                             _0xC8134ADC;                     // type:UINT.0
	uint                             _0x8F5552DC;                     // type:UINT.0
};

struct _0xC991122A
{
	int                              Opacity;                         // type:INT.0
	float                            Position;                        // type:FLOAT.0
};

struct _0xC9A7A8AC : _0x1B26FDB1
{
	uint64                           Value;                           // type:UINT64.0
};

struct _0xC9B86D65
{
	float                            AdditiveBlend;                   // type:FLOAT.0
};

struct _0xC9C5A880
{
	struct _0xA588DCC3               Inputs;                          // type:STRUCT.STRUCTURE
	struct _0xD37A994E               Controls;                        // type:STRUCT.STRUCTURE
};

struct _0xC9C63EC0 : _0x14229900
{
	enum _0x563FBCEA                 _0x1658DC52;                     // type:ENUM.32BIT
	bool                             DisableAimIntro;                 // type:BOOL.0
};

struct _0xC9CC4ED4 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0xC089E079                 SpeechType;                      // type:ENUM.32BIT
};

struct _0xC9D80B7E : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xC9DFF80F
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             wasObserved;                     // type:BOOL.0
	bool                             wasDiscovered;                   // type:BOOL.0
};

struct _0xC9F31B66
{
	string                           _0x07D8BA66;                     // type:STRING.ATFINALHASHSTRING
	array<struct _0xBE784F56>        channels;                        // type:ARRAY.ATARRAY
};

struct _0xC9F9E736
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            MinBreathsPerMinuteAtZeroExertion; // type:FLOAT.0
	float                            MaxBreathsPerMinuteAtZeroExertion; // type:FLOAT.0
	float                            MinBreathsPerMinuteAtFullExertion; // type:FLOAT.0
	float                            MaxBreathsPerMinuteAtFullExertion; // type:FLOAT.0
	float                            TiredBpm;                        // type:FLOAT.0
	ushort                           TimeToMaxBreathRateAtZeroFatigueMs; // type:USHORT.0
	ushort                           TimeToMaxBreathRateAtFullFatigueMs; // type:USHORT.0
	ushort                           TimeToMinBreathRateAtZeroFatigueMs; // type:USHORT.0
	ushort                           TimeToMinBreathRateAtFullFatigueMs; // type:USHORT.0
};

struct _0xC9FB0191 : _0xE6BB869D
{
	struct _0xBF2BD132               _0x06E1B4D0;                     // type:STRUCT.STRUCTURE
};

struct _0xCA042935
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xD37D8693>        Groups;                          // type:ARRAY.ATARRAY
};

struct _0xCA09694E : _0x2F7DA38D
{
	uchar                            bodyColour1;                     // type:UCHAR.0
	uchar                            bodyColour2;                     // type:UCHAR.0
	uchar                            bodyColour3;                     // type:UCHAR.0
	uchar                            bodyColour4;                     // type:UCHAR.0
	int                              liveryId;                        // type:INT.0
	float                            _0x634F7827;                     // type:FLOAT.0
	string                           propset;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBE35A016;                     // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x20CEAC2B>         flags;                           // type:BITSET.32BIT
};

struct _0xCA1EBA09 : CAICondition
{
	string                           _0x3C0AC16A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCA20961F
{
	string                           Search;                          // type:STRING.CONST_STRING
	string                           Replace;                         // type:STRING.CONST_STRING
};

struct _0xCA42D3F1 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xCA460AD5
{
	array<struct _0x5333FAA1>        _0x8AD48F66;                     // type:ARRAY.ATARRAY
};

struct _0xCA4C219E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x12673732                 _0x6FA8AE4A;                     // type:ENUM.32BIT
	array<struct _0xE4D932E8>        _0xF2032650;                     // type:ARRAY.ATARRAY
};

struct _0xCA5D17D0
{
	array<short, 3>                  Position;                        // type:ARRAY.MEMBER
	ushort                           boneId;                          // type:USHORT.0
};

struct _0xCA5DE135 : _0x7DE6531A
{
	bool                             targetValue;                     // type:BOOL.0
};

struct _0xCA66E6F9
{
	struct _0x94BD6AEA                  _0x9F2FE162;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x94BD6AEA>     _0x4FE676A4;                     // type:MAP.ATBINARYMAP
};

struct _0xCA69A4B2 : camCinematicShotMetadata
{
	bool                             _0xE5E22EF0;                     // type:BOOL.0
	bool                             _0x2064CB96;                     // type:BOOL.0
};

struct _0xCA772304 : uiMaskBehavior
{
};

struct _0xCA7E46C9
{
	struct void                      pCondition;                      // type:STRUCT.EXTERNAL_NAMED
	string                           BodyBlendTemplateId;             // type:STRING.ATNONFINALHASHSTRING
	enum eGesturePriority            Priority;                        // type:ENUM.32BIT
};

struct _0xCA8B3924 : _0x1054F746
{
};

struct _0xCA8DAFDA : _0x8A0DC979
{
	enum _0x4E359FFA                 DefragMode;                      // type:ENUM.32BIT
	bool                             RestoreOnExit;                   // type:BOOL.0
};

struct _0xCA97D576
{
	struct BreakoutClipData          pBreakoutClip;                   // type:STRUCT.POINTER
	struct OptionalMotionState       pMotionState;                    // type:STRUCT.POINTER
	struct OptionalBlendout          pBlendoutDuration;               // type:STRUCT.POINTER
	struct OptionalScenario          pScenario;                       // type:STRUCT.POINTER
	struct OptionalBlendoutSet       pBlendOutSet;                    // type:STRUCT.POINTER
};

struct _0xCA9A08F6
{
	string                           Name;                            // type:STRING.ATSTRING
	float                            Heading;                         // type:FLOAT.0
	bool                             _0x6B1B7AFA;                     // type:BOOL.0
};

struct _0xCA9AD1EC : EmoteClipVariationInfo
{
	bool                             _0xFA3E32EF;                     // type:BOOL.0
	float                            _0x317E4F60;                     // type:FLOAT.0
	float                            _0x376485DC;                     // type:FLOAT.0
	float                            _0x5112C011;                     // type:FLOAT.0
	string                           _0xAD1BB54C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCAAA9299 : _0x8A0DC979
{
	string                           ContentType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCAAD7E2F : CAICondition
{
	float                            Angle1Degrees;                   // type:FLOAT.0
	float                            Angle2Degrees;                   // type:FLOAT.0
};

struct _0xCAB05532
{
	bitset<enum _0x498CBB3B>         Flags;                           // type:BITSET.32BIT
	bitset<enum _0x498CBB3B>         NotFlags;                        // type:BITSET.32BIT
	float                            Modifier;                        // type:FLOAT.0
};

struct _0xCAB953C8 : CScenarioAction
{
	enum AmbientEventType            _0x5DA94C11;                     // type:ENUM.32BIT
	float                            TimeTillBlendout;                // type:FLOAT.0
};

struct _0xCAC90DA3 : _0xA831A788
{
	float                            _0x959DD8EC;                     // type:FLOAT.0
	float                            _0xB71B6E42;                     // type:FLOAT.0
	float                            OrbitDistance;                   // type:FLOAT.0
	bool                             _0x3EB483E0;                     // type:BOOL.0
	float                            _0xF11D6DCC;                     // type:FLOAT.0
	bool                             _0xDC8283C5;                     // type:BOOL.0
};

struct _0xCACC79BA : _0x2F7DA38D
{
	struct _0xED16C5B0               ped;                             // type:STRUCT.STRUCTURE
	enum _0xBC690253                 motionState;                     // type:ENUM.32BIT
	bool                             _0xE35B6E9D;                     // type:BOOL.0
};

struct _0xCAF89876
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCAFEA326 : _0x7EE7A7AE
{
};

struct _0xCB0763FC
{
	float                            _0xE55EE13F;                     // type:FLOAT.0
	float                            _0x59E1F339;                     // type:FLOAT.0
	float                            _0x3B521C9F;                     // type:FLOAT.0
	float                            _0xB93BA87C;                     // type:FLOAT.0
	float                            _0x67C5EC99;                     // type:FLOAT.0
	float                            _0xBFBD87EF;                     // type:FLOAT.0
	float                            _0xF9FD0E4D;                     // type:FLOAT.0
	float                            _0xED95EC56;                     // type:FLOAT.0
	float                            _0x681F24C0;                     // type:FLOAT.0
	float                            _0x73842606;                     // type:FLOAT.0
	float                            _0xE73386BF;                     // type:FLOAT.0
	float                            _0x8B13AE19;                     // type:FLOAT.0
	bool                             _0x7934908C;                     // type:BOOL.0
	bool                             _0x87C3CCA3;                     // type:BOOL.0
	float                            _0x3266B952;                     // type:FLOAT.0
	float                            _0x4154A2B0;                     // type:FLOAT.0
	float                            _0xBE35AEEE;                     // type:FLOAT.0
	float                            _0xF6AA4E92;                     // type:FLOAT.0
	float                            _0x37198902;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x0998F46F;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x5BB914EC;                     // type:ENUM.32BIT
	float                            _0x9E529040;                     // type:FLOAT.0
	struct _0x8C0C49E5               _0xA00CEDC5;                     // type:STRUCT.STRUCTURE
	struct _0x8C0C49E5               _0x35F9F6BC;                     // type:STRUCT.STRUCTURE
	struct _0x2F41B1CE               _0xDED3A8A4;                     // type:STRUCT.STRUCTURE
	struct _0xCECE0E75               _0x5E0032B5;                     // type:STRUCT.STRUCTURE
	struct _0xCECE0E75               _0x921417C1;                     // type:STRUCT.STRUCTURE
};

struct _0xCB18C954 : _0x2F7DA38D
{
	bool                             _0xCCB2F310;                     // type:BOOL.0
	bool                             _0xA4C0E41C;                     // type:BOOL.0
	int                              startHour;                       // type:INT.0
	int                              startMinute;                     // type:INT.0
	int                              endHour;                         // type:INT.0
	int                              endMinute;                       // type:INT.0
	string                           _0xECF53E20;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCB1B742F
{
	short                            minX;                            // type:SHORT.0
	short                            minY;                            // type:SHORT.0
	short                            maxX;                            // type:SHORT.0
	short                            maxY;                            // type:SHORT.0
	float                            Amplitude;                       // type:FLOAT.0
	float                            Frequency;                       // type:FLOAT.0
	float                            Speed;                           // type:FLOAT.0
	float                            XDirection;                      // type:FLOAT.0
	float                            YDirection;                      // type:FLOAT.0
};

struct _0xCB2B86FA
{
	struct _0xDC6D47C7               Stat;                            // type:STRUCT.POINTER
	enum _0x0BA7EC54                 Op;                              // type:ENUM.32BIT
};

struct _0xCB33FE51
{
	float                            _0x0623903D;                     // type:FLOAT.0
	float                            fMaxRange;                       // type:FLOAT.0
	float                            _0x035E28D8;                     // type:FLOAT.0
	float                            _0x979C292D;                     // type:FLOAT.0
	float                            _0x3B924C63;                     // type:FLOAT.0
	float                            _0x9843DAE8;                     // type:FLOAT.0
	float                            _0x017F5AC7;                     // type:FLOAT.0
	float                            _0x99E12A4F;                     // type:FLOAT.0
	float                            _0x521A70D7;                     // type:FLOAT.0
	enum _0xC24536B3                 _0x6238EDF2;                     // type:ENUM.32BIT
	enum _0x660753BC                 _0xB9EBF64F;                     // type:ENUM.32BIT
	enum eEventType                  EventType;                       // type:ENUM.32BIT
	uint                             _0x27C79B14;                     // type:UINT.0
	uint                             _0xDA3C7B67;                     // type:UINT.0
	uint                             _0x77DDC9D5;                     // type:UINT.0
	uint                             _0x31109187;                     // type:UINT.0
	uint                             _0x440E7DBE;                     // type:UINT.0
	uint                             _0xE576EF42;                     // type:UINT.0
	uint                             _0xE6153CD6;                     // type:UINT.0
	enum _0x23036FEE                 _0x33BA99DB;                     // type:ENUM.32BIT
	bool                             _0x7F2741FD;                     // type:BOOL.0
	bool                             _0x83403FB8;                     // type:BOOL.0
	bool                             _0x7139A581;                     // type:BOOL.0
	bool                             _0x75001139;                     // type:BOOL.0
	bool                             _0x38CE7387;                     // type:BOOL.0
	bool                             _0x91200C90;                     // type:BOOL.0
	bool                             _0xAB80337F;                     // type:BOOL.0
	bool                             _0xEBB27DCE;                     // type:BOOL.0
	bool                             _0x9E6F4CD3;                     // type:BOOL.0
	bool                             _0x2D4791A1;                     // type:BOOL.0
	bool                             _0xF8B032F0;                     // type:BOOL.0
	bool                             _0x56AFA08F;                     // type:BOOL.0
	bool                             _0x5710F670;                     // type:BOOL.0
	bool                             _0x14C931A2;                     // type:BOOL.0
	bool                             _0x148C9EFA;                     // type:BOOL.0
	bool                             _0x4A7B58D4;                     // type:BOOL.0
	bool                             _0x477C0F3E;                     // type:BOOL.0
	bool                             _0xE6A1A949;                     // type:BOOL.0
	bool                             _0xF5A527B3;                     // type:BOOL.0
	bool                             _0x5E456106;                     // type:BOOL.0
	bool                             _0xF09D10EC;                     // type:BOOL.0
	bool                             _0x2EB8EC4F;                     // type:BOOL.0
	bool                             _0x5342A8B1;                     // type:BOOL.0
};

struct _0xCB3EB8B1
{
	array<struct _0x730AE350>        _0x57069339;                     // type:ARRAY.ATARRAY
};

struct _0xCB4497B5
{
	uint                             nameHash;                        // type:UINT.0
	uint                             parentNameHash;                  // type:UINT.0
	uint                             contentFlags;                    // type:UINT.0
	float                            strMinX;                         // type:FLOAT.0
	float                            strMinY;                         // type:FLOAT.0
	float                            strMinZ;                         // type:FLOAT.0
	float                            strMaxX;                         // type:FLOAT.0
	float                            strMaxY;                         // type:FLOAT.0
	float                            strMaxZ;                         // type:FLOAT.0
	float                            phyMinX;                         // type:FLOAT.0
	float                            phyMinY;                         // type:FLOAT.0
	float                            phyMinZ;                         // type:FLOAT.0
	float                            phyMaxX;                         // type:FLOAT.0
	float                            phyMaxY;                         // type:FLOAT.0
	float                            phyMaxZ;                         // type:FLOAT.0
	bool                             bDynamicStreaming;               // type:BOOL.0
	bool                             bContainsBlockInfo;              // type:BOOL.0
	bool                             bIsParent;                       // type:BOOL.0
	struct _0xCE90E335               blockInfo;                       // type:STRUCT.STRUCTURE
};

struct _0xCB72A3E3
{
	bool                             _0xF34BD310;                     // type:BOOL.0
	float                            _0x94720DEC;                     // type:FLOAT.0
	float                            Red;                             // type:FLOAT.0
	float                            Blue;                            // type:FLOAT.0
	float                            Green;                           // type:FLOAT.0
};

struct _0xCB737F5F
{
	string                           _0x2A16039E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7FA8F852;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC9DA4D9A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x18248747;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCB777BD3
{
	float                            MinMBR;                          // type:FLOAT.0
	float                            MaxMBR;                          // type:FLOAT.0
	float                            _0x88884D6E;                     // type:FLOAT.0
	float                            _0xAB381B2D;                     // type:FLOAT.0
};

struct _0xCB800B12 : CBaseSaveObject
{
	array<struct _0x97438126>        _0xB6015FF9;                     // type:ARRAY.ATARRAY
};

struct _0xCB8AA441
{
	int                              hour;                            // type:INT.0
	int                              minutes;                         // type:INT.0
	int                              seconds;                         // type:INT.0
};

struct _0xCB90FF42 : _0x222CA523
{
};

struct _0xCBAC5FFF : _0x09D8AA6B
{
	enum eAnimBoneTag                Value;                           // type:ENUM.32BIT
};

struct _0xCBB7012B : _0x5BA1A146
{
	enum _0x7A4B2B1E                 Timer;                           // type:ENUM.32BIT
	enum _0xC1B2D080                 RestoreMode;                     // type:ENUM.32BIT
};

struct _0xCBC0FDA0 : CTuning
{
	float                            _0x1D1FE4AC;                     // type:FLOAT.0
	float                            _0x60F5333E;                     // type:FLOAT.0
	float                            _0x00AA37E4;                     // type:FLOAT.0
	float                            _0x7AE2C5A1;                     // type:FLOAT.0
	float                            _0xDFAD3C40;                     // type:FLOAT.0
	float                            _0xDA199A69;                     // type:FLOAT.0
	uint                             _0x72FB09B4;                     // type:UINT.0
	uint                             _0x175C940C;                     // type:UINT.0
};

struct _0xCBEC0F91
{
	vec3V                            OnFootIKOffset;                  // type:VEC3V.0
	vec3V                            OnHorsebackIKOffset;             // type:VEC3V.0
	vec2V                            OnHorsebackYawIKLimits;          // type:VEC2V.0
	vec3V                            InVehicleIKOffset;               // type:VEC3V.0
	vec2V                            InVehicleYawIKLimits;            // type:VEC2V.0
};

struct _0xCBF28020 : _0xA157E7B1
{
};

struct _0xCC01D37F : _0x2F7DA38D
{
	string                           _0x309F70D0;                     // type:STRING.ATNONFINALHASHSTRING
	array<float>                     _0x0D0756B2;                     // type:ARRAY.ATARRAY
	array<float>                     _0x8B3B3827;                     // type:ARRAY.ATARRAY
};

struct _0xCC043204 : SaveChallengeGoalParamBase
{
	struct StatId                    _0x371C022C;                     // type:STRUCT.STRUCTURE
};

struct _0xCC0635FD
{
	map<string, struct _0x8DBB9306>     DiscoverableCollection;          // type:MAP.ATBINARYMAP
	struct _0x25A4E268                  DiscoverableZoomData;            // type:STRUCT.STRUCTURE
	struct _0xEEC4B8E8                  DiscoverableRenderData;          // type:STRUCT.STRUCTURE
};

struct _0xCC099708
{
	string                           _0xC44716E0;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x40AD49EE;                     // type:UINT.0
};

struct _0xCC0AE480 : _0xA7FB0217
{
};

struct _0xCC17C467
{
	float                            _0x8801F6D6;                     // type:FLOAT.0
};

struct _0xCC25B245 : _0xFF8FFE07
{
	string                           _0x7E44F6C0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x851C4C4A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCC282806 : _0x1054F746
{
};

struct _0xCC2FAB9C
{
	float                            _0xD8F3A517;                     // type:FLOAT.0
	uint                             _0x54182EDB;                     // type:UINT.0
};

struct _0xCC37DA5C : _0x0F81917B
{
	uint                             rank;                            // type:UINT.0
};

struct _0xCC47D798 : CAICondition
{
	enum _0x563FBCEA                 EntitySlot;                      // type:ENUM.32BIT
	enum _0xAB7ABDC2                 _0x47CE9053;                     // type:ENUM.32BIT
};

struct _0xCC4E879B : _0x507E5FA3
{
};

struct _0xCC563C70 : _0x1054F746
{
};

struct _0xCC5C37CC
{
	float                            _GlintIntensity;                 // type:FLOAT.0
	float                            _FadeInStartDist;                // type:FLOAT.0
	float                            _FadeInEndDist;                  // type:FLOAT.0
	float                            _FadeOutStartDist;               // type:FLOAT.0
	float                            _FadeOutEndDist;                 // type:FLOAT.0
	float                            _TileAmount;                     // type:FLOAT.0
	float                            _AliasScale;                     // type:FLOAT.0
};

struct _0xCC6C9624 : _0xA0889763
{
	vec2                             value;                           // type:VECTOR2.0
};

struct _0xCC7762ED
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	int                              Ped;                             // type:INT.0
	int                              Section;                         // type:INT.0
};

struct _0xCC7B0EE2
{
	uint                             _0x72D6F5B1;                     // type:UINT.0
	uint                             _0xE5D77609;                     // type:UINT.0
	ushort                           _0xB2BDAE44;                     // type:USHORT.0
	ushort                           _0x4A571DDC;                     // type:USHORT.0
};

struct _0xCC940891
{
	map<string, struct _0x9502455E>     damageTemplates;                 // type:MAP.ATBINARYMAP
};

struct _0xCCA41165
{
	string                              drawable;                        // type:STRING.ATNONFINALHASHSTRING
	map<string, struct _0x689AFA2B>     textures;                        // type:MAP.ATBINARYMAP
};

struct _0xCCA64EF0
{
	string                           Walk;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Run;                             // type:STRING.ATNONFINALHASHSTRING
	string                           Sprint;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCCBD5C73
{
	uint                             _0x6B967ACE;                     // type:UINT.0
	uint                             _0xDD40E416;                     // type:UINT.0
	float                            _0x96D67C94;                     // type:FLOAT.0
	float                            _0x41EC22BE;                     // type:FLOAT.0
	float                            _0x2711E2E4;                     // type:FLOAT.0
	float                            _0x94B85C99;                     // type:FLOAT.0
};

struct _0xCCC54FC0
{
	float                            _0xE5C41CDD;                     // type:FLOAT.0
	float                            _0xE088B233;                     // type:FLOAT.0
	float                            _0x4B17263C;                     // type:FLOAT.0
	float                            _0xAEE11A19;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x9EB9E332;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x855310E3;                     // type:ENUM.32BIT
	float                            _0x722E6202;                     // type:FLOAT.2
	float                            _0x4803AFCF;                     // type:FLOAT.2
	float                            _0x9C9837C1;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x58A14BF7;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xD5CD9E7C;                     // type:ENUM.32BIT
	float                            _0xA557B712;                     // type:FLOAT.2
	float                            _0x8FF39437;                     // type:FLOAT.2
	float                            _0x28F2E75D;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x13922645;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xAB71B660;                     // type:ENUM.32BIT
};

struct _0xCCCD2F07
{
	struct _0xD22F3945               lowWind;                         // type:STRUCT.STRUCTURE
	struct _0xD22F3945               highWind;                        // type:STRUCT.STRUCTURE
};

struct _0xCCD69154
{
	string                              _0x9C826911;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xDC9E128A;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xE798E400;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                fangularaccelerationcoeff;       // type:BOOL.0
	bitset<enum _0xF5A6ADBA>            _0x8AA99B42;                     // type:BITSET.16BIT
	bool                                _0x6D01C3C0;                     // type:BOOL.0
	bool                                _0x116B3F29;                     // type:BOOL.0
	struct _0xF0CB5B74                  _0x62A08525;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x0009123A>     Personalities;                   // type:MAP.ATBINARYMAP
};

struct _0xCCD7D8EA : _0x2F7DA38D
{
	string                              ContextName;                     // type:STRING.MEMBER
	string                              _0xB2A5A79B;                     // type:STRING.ATNONFINALHASHSTRING
	enum fwSpeechAnimEventVoiceMode     _0x01C1B82A;                     // type:ENUM.32BIT
	int                                 Variation;                       // type:INT.0
	string                              _0xD11EFDD8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCCE019D4
{
	float                            fMaxDefensiveAreaRadiousAllowed; // type:FLOAT.0
};

struct _0xCCE27413
{
	struct _0x8CDFF0CA               clipSet;                         // type:STRUCT.STRUCTURE
	string                           _0xF82A367D;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCCF2FC18
{
	string                           _0x9DF264D5;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x774BFB16>        _0x42FC8D18;                     // type:ARRAY.ATARRAY
};

struct _0xCCFE7AD6
{
	float                            HonorThresholdForGraph;          // type:FLOAT.0
	float                            HonorThresholdForWeatherChange;  // type:FLOAT.0
	float                            HonorDecreaseWaitTime;           // type:FLOAT.0
	float                            HonorWeatherChangeTime;          // type:FLOAT.0
};

struct _0xCD11E23C
{
	string                           id;                              // type:STRING.ATSTRING
	string                           templateId;                      // type:STRING.ATNSHASHSTRING
	uint                             _0xF77D88F7;                     // type:UINT.0
	string                           startTime;                       // type:STRING.ATSTRING
	string                           endTime;                         // type:STRING.ATSTRING
	array<struct _0x13FB0F39>        challenges;                      // type:ARRAY.ATARRAY
	struct _0x8275D61F               awardData;                       // type:STRUCT.STRUCTURE
};

struct _0xCD18BA53
{
	enum _0x2B1DC075                 _0x83D4D6B4;                     // type:ENUM.32BIT
	enum _0x750EA65B                 _0x19349695;                     // type:ENUM.32BIT
};

struct _0xCD19E20D
{
	string                           VariableClipID;                  // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x74303333;                     // type:BOOL.0
};

struct _0xCD2A47B4
{
	float                            TimeEvadingForMaxValue;          // type:FLOAT.0
	float                            MaxValue;                        // type:FLOAT.0
	bool                             DisableWhenOffMission;           // type:BOOL.0
};

struct _0xCD3BDF2E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           GameValueName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           Section;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCD5B8CFC : CTuning
{
	float                            TimeToLive;                      // type:FLOAT.0
};

struct _0xCD5C05CA
{
	vec3                             position;                        // type:VECTOR3.0
	float                            intensity;                       // type:FLOAT.0
	float                            radius;                          // type:FLOAT.0
	float                            falloff;                         // type:FLOAT.0
	uint                             color;                           // type:UINT.1
};

struct _0xCD9BCB7D : _0x4EF178E2
{
	struct _0xCE064FC1               Path;                            // type:STRUCT.STRUCTURE
	string                           ElementID;                       // type:STRING.ATNSHASHSTRING
};

struct _0xCDAFF092 : _0x23D256ED
{
	enum _0xE9464157                 InterpolationType;               // type:ENUM.32BIT
	array<struct _0x175B6EEB>        KeyFrames;                       // type:ARRAY.ATARRAY
};

struct _0xCDB92675 : _0x0A510DA9
{
	string                           _0x2FB70373;                     // type:STRING.ATNSHASHSTRING
	bool                             _0x6D2A0C8C;                     // type:BOOL.0
};

struct _0xCDBD505B : _0xF42FB8D1
{
};

struct _0xCDC88326
{
	array<struct _0x6EDE6748>        _0x40254994;                     // type:ARRAY.ATARRAY
};

struct _0xCDC8C77D : _0x1054F746
{
};

struct _0xCDC8F321 : CBaseSaveObject
{
	array<struct _0x691F06F0>        _0xDFD5C4D5;                     // type:ARRAY.ATARRAY
};

struct _0xCDCAA06A
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             LocationForNearestCarNodeOverrides; // type:BOOL.0
	bool                             EnclosedSearchRegions;           // type:BOOL.0
	bool                             BlockingAreas;                   // type:BOOL.0
};

struct _0xCDD0B36E : _0x14229900
{
};

struct _0xCDD3005A
{
	string                           PropModelSet;                    // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x2B7A9AFB>        Volumes;                         // type:ARRAY.ATARRAY
	array<struct _0x79FE5B9B>        TimeSlots;                       // type:ARRAY.ATARRAY
};

struct _0xCDE68793 : _0x202E0598
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0xCDF97B9D : _0xE24A5D09
{
};

struct _0xCE064FC1
{
	array<string, 24>                pathElements;                    // type:ARRAY.ATFIXEDARRAY
};

struct _0xCE1BAB06
{
	enum _0xF945C864                 Context;                         // type:ENUM.32BIT
	array<struct _0xF2B234D5>        _0x547A5452;                     // type:ARRAY.ATARRAY
};

struct _0xCE40A357
{
};

struct _0xCE4491BE : uiDynamicItemCreationContainerPolicyBase
{
	uint                             _0x00F5228A;                     // type:UINT.0
	enum _0xC4589894                 ArrangeOrder;                    // type:ENUM.32BIT
};

struct _0xCE7ED6F5 : _0x4A52B7E5
{
	struct _0x128AA31B               CurveData;                       // type:STRUCT.POINTER
};

struct _0xCE7F18D0 : camBaseObjectMetadata
{
	uint                             _0xEE8E841D;                     // type:UINT.0
	uint                             _0xC27E800D;                     // type:UINT.0
	float                            _0x2FE12A89;                     // type:FLOAT.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
	vec2                             _0x51E58A37;                     // type:VECTOR2.0
	vec2                             _0xA9880475;                     // type:VECTOR2.0
	vec2                             _0xF8D13DF9;                     // type:VECTOR2.0
	vec3                             _0x2741661A;                     // type:VECTOR3.0
	float                            _0x815BAA4A;                     // type:FLOAT.0
	vec3                             _0x23D49DA2;                     // type:VECTOR3.0
	float                            _0x60D6B5E8;                     // type:FLOAT.0
	struct _0x729C0185               _0xAF6647B0;                     // type:STRUCT.STRUCTURE
	struct _0x729C0185               _0x2C428C98;                     // type:STRUCT.STRUCTURE
	struct _0x729C0185               SideOffset;                      // type:STRUCT.STRUCTURE
	struct _0x729C0185               _0x91814088;                     // type:STRUCT.STRUCTURE
	struct _0x729C0185               _0xDF728CE0;                     // type:STRUCT.STRUCTURE
	float                            _0x6D7C89F5;                     // type:FLOAT.0
};

struct _0xCE8D54DC : CAICondition
{
};

struct _0xCE90E335
{
	uint                             flags;                           // type:UINT.0
	string                           _0x26EA1379;                     // type:STRING.MEMBER
};

struct _0xCE9FEE90
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0x52CA6C66;                     // type:BOOL.0
	float                            _0xF233D7E8;                     // type:FLOAT.0
	float                            _0xB203483F;                     // type:FLOAT.0
	float                            _0xDB7A24CE;                     // type:FLOAT.0
	float                            _0x7D6057DF;                     // type:FLOAT.0
	vec3                             _0xE0E59CC1;                     // type:VECTOR3.0
	float                            _0xD336CF47;                     // type:FLOAT.0
	float                            _0xA24639E6;                     // type:FLOAT.0
	float                            _0xB75C5830;                     // type:FLOAT.0
	float                            _0xCF8A46C2;                     // type:FLOAT.0
	float                            BlendOutDuration;                // type:FLOAT.0
	float                            _0x4EFF58EB;                     // type:FLOAT.0
	float                            _0x99DF70CC;                     // type:FLOAT.0
};

struct _0xCEB6ADC1 : _0x2F7DA38D
{
	string                           _0xBFF2958D;                     // type:STRING.ATNONFINALHASHSTRING
	matrix34V                        _0x87542FFC;                     // type:MAT34V.0
	float                            fWidth;                          // type:FLOAT.0
	float                            fHeight;                         // type:FLOAT.0
	float                            _0xB1F991AC;                     // type:FLOAT.0
	float                            fLifeTime;                       // type:FLOAT.0
	uint                             Colour;                          // type:UINT.1
	bool                             _0xC80C33A2;                     // type:BOOL.0
	bool                             _0x18865255;                     // type:BOOL.0
	enum _0xA3D283AD                 Direction;                       // type:ENUM.32BIT
	bool                             _0xB5B39278;                     // type:BOOL.0
};

struct _0xCECE0E75
{
	float                            _0x55E38AB8;                     // type:FLOAT.0
	float                            _0x0E1B8997;                     // type:FLOAT.0
	float                            _0xEA7D0444;                     // type:FLOAT.0
	float                            _0x89A8B900;                     // type:FLOAT.0
	float                            _0xD4CF7BD3;                     // type:FLOAT.0
	float                            _0x6B8B3FB9;                     // type:FLOAT.0
	float                            _0x4D48C8DA;                     // type:FLOAT.0
	float                            _0x08BD6317;                     // type:FLOAT.0
	float                            _0xCF51C232;                     // type:FLOAT.0
	float                            _0x10AA7E2F;                     // type:FLOAT.0
	bool                             _0xFDBB85DC;                     // type:BOOL.0
	bool                             _0x39EF9688;                     // type:BOOL.0
};

struct _0xCEDFBF2E
{
	vec2                             Min;                             // type:VECTOR2.0
	vec2                             Max;                             // type:VECTOR2.0
};

struct _0xCEE583D4
{
	bool                             ShouldApply;                     // type:BOOL.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	enum _0x0100F80E                 EasingType;                      // type:ENUM.32BIT
	float                            _0xC12652AB;                     // type:FLOAT.0
	float                            _0xC96C42D5;                     // type:FLOAT.0
	float                            _0xBF070CA9;                     // type:FLOAT.0
	float                            _0x806E9B6E;                     // type:FLOAT.0
};

struct _0xCEEEEBD6 : UIBehavior
{
};

struct _0xCEFFAD73
{
	float                            fSearchRadiusXYForPointValidation; // type:FLOAT.0
	float                            fSearchDistZForPointValidation;  // type:FLOAT.0
	float                            fDefaultClearRadiusForPointValidation; // type:FLOAT.0
	float                            fOptionalMinimumRadiusForPointValidation; // type:FLOAT.0
	int                              iNumResultsForPointValidation;   // type:INT.0
	float                            fResultsMinSpacingForPointValidation; // type:FLOAT.0
	uint                             iTimeToReattemptToMoveToTheSideOfTheRoadInMs; // type:UINT.0
	uint                             iTimeBetweenRoadNodeSearchesInMs; // type:UINT.0
	float                            AdditionalClearAreaTrainTracks;  // type:FLOAT.0
};

struct _0xCF1632CA
{
	float                            SPRate;                          // type:FLOAT.0
	float                            MPRate;                          // type:FLOAT.0
};

struct _0xCF25E178 : _0x0A510DA9
{
	struct _0xCE064FC1               Path;                            // type:STRUCT.STRUCTURE
	int                              CompareValue;                    // type:INT.0
};

struct _0xCF3FD097
{
	float                            _0xA319798F;                     // type:FLOAT.0
	float                            _0x83F51704;                     // type:FLOAT.0
	float                            _0x5720EAAA;                     // type:FLOAT.0
	float                            _0x151D3FD9;                     // type:FLOAT.0
	float                            _0xCDD48602;                     // type:FLOAT.0
	float                            _0xC326FFAE;                     // type:FLOAT.0
	float                            _0x8B0DB0AC;                     // type:FLOAT.0
};

struct _0xCF46BEC6
{
	float                            _0xA718C2BE;                     // type:FLOAT.0
	float                            _0xBFDC57C5;                     // type:FLOAT.0
	float                            _0x2420DAD1;                     // type:FLOAT.0
	float                            _0x229F4E87;                     // type:FLOAT.0
};

struct _0xCF4F55C1 : _0x801932D4
{
	struct _0x9AA21833               _0x72626470;                     // type:STRUCT.STRUCTURE
};

struct _0xCF515FE2
{
	vec2                             _0xC236C988;                     // type:VECTOR2.0
	vec2                             _0xF70136E7;                     // type:VECTOR2.0
	vec2                             _0x1F2232C0;                     // type:VECTOR2.0
	vec2                             _0x1A3B9BB6;                     // type:VECTOR2.0
	vec2                             _0xE274F199;                     // type:VECTOR2.0
	uint                             _0x18F96073;                     // type:UINT.0
	bool                             _0x1243E46C;                     // type:BOOL.0
	bool                             _0x0F80FDB1;                     // type:BOOL.0
	bool                             _0x80D4EA74;                     // type:BOOL.0
	bool                             _0x1223937B;                     // type:BOOL.0
	bool                             _0xFD6746D8;                     // type:BOOL.0
	bool                             _0x2C616DE2;                     // type:BOOL.0
	vec2                             _0x71575042;                     // type:VECTOR2.0
	vec2                             _0xAEBA6BA9;                     // type:VECTOR2.0
};

struct _0xCF66FD63
{
	string                           Up;                              // type:STRING.ATNONFINALHASHSTRING
	string                           Mid;                             // type:STRING.ATNONFINALHASHSTRING
	string                           Down;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCF70EFCE
{
	float                            _0x55D89E0E;                     // type:FLOAT.0
	float                            _0xD9DCA332;                     // type:FLOAT.0
	float                            _0xA2D25867;                     // type:FLOAT.0
	float                            _0xC5A0361A;                     // type:FLOAT.0
	float                            _0x8663DC3E;                     // type:FLOAT.0
	float                            _0x2A2512FB;                     // type:FLOAT.0
	float                            _0x99B63C69;                     // type:FLOAT.0
	float                            _0x8A932997;                     // type:FLOAT.0
	float                            _0xDE3E985A;                     // type:FLOAT.0
	float                            _0x4C7B06CB;                     // type:FLOAT.0
	float                            _0x0242F53A;                     // type:FLOAT.0
	float                            _0xBF3857CA;                     // type:FLOAT.0
	float                            _0xF458AB38;                     // type:FLOAT.0
	float                            _0x82CD07B6;                     // type:FLOAT.0
	float                            _0x75086B5B;                     // type:FLOAT.0
	float                            _0x6ECBD124;                     // type:FLOAT.0
	float                            _0x1624E8C8;                     // type:FLOAT.0
	float                            _0x96B2CC7C;                     // type:FLOAT.0
	float                            _0x86075A86;                     // type:FLOAT.0
	float                            _0xBE6AA2B5;                     // type:FLOAT.0
	float                            _0xE43AA0E2;                     // type:FLOAT.0
	float                            _0x0CDE38A5;                     // type:FLOAT.0
	float                            _0x5CAA453E;                     // type:FLOAT.0
	uint                             _0xA43BCB38;                     // type:UINT.0
	string                           _0xDEBFF9B5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x122CB95A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD9C95184;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF5AAE0F0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x36A76725;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x638033EB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x69CF8ECE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDCC5D50B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x10D39BCA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x219D0F71;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x614280FE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC3629F99;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x698C7F30, 3>     Speeds;                          // type:ARRAY.ATFIXEDARRAY
};

struct _0xCF7183D7 : _0x8A0DC979
{
};

struct _0xCF886463 : _0xE7CBDA9F
{
	array<string>                    goalSlotUnlocks;                 // type:ARRAY.ATARRAY
	string                           metaChallenge;                   // type:STRING.ATNSHASHSTRING
};

struct _0xCF8C9E50
{
	enum _0x90482250                 _0xE9DB91FB;                     // type:ENUM.32BIT
	float                            _0x12DC2804;                     // type:FLOAT.0
	float                            _0xF0C9C40B;                     // type:FLOAT.0
	float                            _0xE81845F3;                     // type:FLOAT.0
	float                            _0xA5DABFF8;                     // type:FLOAT.0
};

struct _0xCFA09DD3 : _0x810637E9
{
	enum _0xD923E8AF                 ConditionTestType;               // type:ENUM.32BIT
};

struct _0xCFA90D88 : _0x7DE6531A
{
	uint64                           targetValue;                     // type:UINT64.0
	uint64                           targetValueMin;                  // type:UINT64.0
	uint64                           targetValueMax;                  // type:UINT64.0
};

struct _0xCFB6AA4F
{
	string                           Guid;                            // type:STRING.MEMBER
	array<struct _0x793386EE, 8>     InputCalibrations;               // type:ARRAY.ATRANGEARRAY
};

struct _0xCFB7FC35 : _0xBF9602D8
{
	string                           StatName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCFBF9292 : CTuning
{
	float                            _0x3C80B15D;                     // type:FLOAT.0
	float                            _0xCBDEDB07;                     // type:FLOAT.0
	float                            _0x1BB2DD83;                     // type:FLOAT.0
	float                            _0x3A332781;                     // type:FLOAT.0
	float                            _0x214D49D9;                     // type:FLOAT.0
	float                            _0x93769783;                     // type:FLOAT.0
	float                            _0x8C4A404F;                     // type:FLOAT.0
	float                            _0x2FF3AEE1;                     // type:FLOAT.0
	float                            _0x1FA7E543;                     // type:FLOAT.0
	float                            _0x2FF3F1C5;                     // type:FLOAT.0
	float                            _0xFCA9C187;                     // type:FLOAT.0
	float                            _0x521EB616;                     // type:FLOAT.0
	float                            _0xDDA54B4A;                     // type:FLOAT.0
	float                            _0x77196275;                     // type:FLOAT.0
	float                            _0xBA1450B0;                     // type:FLOAT.0
	float                            _0x11D80EF5;                     // type:FLOAT.0
	float                            _0x9F024346;                     // type:FLOAT.0
	float                            _0x028081DF;                     // type:FLOAT.0
	string                           _0xBDA660EC;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xF113DBED;                     // type:FLOAT.0
	float                            _0xB91A04C3;                     // type:FLOAT.0
	float                            _0x08AACDC8;                     // type:FLOAT.0
	float                            _0xAC690667;                     // type:FLOAT.0
	float                            _0x7E9E6140;                     // type:FLOAT.0
	float                            _0xBECE99CD;                     // type:FLOAT.0
	float                            _0x7187DEB8;                     // type:FLOAT.0
	float                            _0x9080366A;                     // type:FLOAT.0
	float                            _0xC50D2797;                     // type:FLOAT.0
	float                            _0x47146822;                     // type:FLOAT.0
	float                            _0x3953D597;                     // type:FLOAT.0
	float                            _0x80496ED9;                     // type:FLOAT.0
	float                            _0x5358549A;                     // type:FLOAT.0
	float                            _0x9FECC1C2;                     // type:FLOAT.0
	float                            _0x431DADE7;                     // type:FLOAT.0
	float                            _0x2FDA41E2;                     // type:FLOAT.0
	float                            _0x53EE8D4A;                     // type:FLOAT.0
	float                            _0xA275B9AB;                     // type:FLOAT.0
	float                            _0xAD5FDC7A;                     // type:FLOAT.0
	float                            _0x1D07605B;                     // type:FLOAT.0
	float                            _0xE020B6EF;                     // type:FLOAT.0
	float                            _0x29B81270;                     // type:FLOAT.0
	float                            _0x04918867;                     // type:FLOAT.0
	float                            _0x910C0CB9;                     // type:FLOAT.0
	float                            _0x768C9CE5;                     // type:FLOAT.0
	float                            _0x70E44A68;                     // type:FLOAT.0
	float                            _0x7A01C8F6;                     // type:FLOAT.0
	float                            _0x8CAF1989;                     // type:FLOAT.0
	float                            _0x96947D3C;                     // type:FLOAT.0
	float                            _0xFCBDDC73;                     // type:FLOAT.0
	float                            _0x8811C189;                     // type:FLOAT.0
};

struct _0xCFC15DEB : _0x198F1FC4
{
	array<struct _0x29323BD0>        Resources;                       // type:ARRAY.ATARRAY
};

struct _0xCFC1DA15 : _0xA9994D94
{
	string                           templateName;                    // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCFC4C28A : _0xDE795AEA
{
};

struct _0xCFD62657 : uiEventDataBase
{
	enum eQuickSelectProviderId      _0xA6F6FA7C;                     // type:ENUM.32BIT
};

struct _0xCFD64FEE : _0x9B440548
{
};

struct _0xCFE39F5E
{
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFDCDFC22;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xCFFAE5AE : CTuning
{
	float                            _0x06371723;                     // type:FLOAT.0
	float                            _0x9D3E4733;                     // type:FLOAT.0
	float                            _0x952379E3;                     // type:FLOAT.0
	float                            _0xF75A5E85;                     // type:FLOAT.0
	float                            _0x67BE4C1B;                     // type:FLOAT.0
	float                            _0xD9FFA442;                     // type:FLOAT.0
	float                            _0xBBDDD703;                     // type:FLOAT.0
	float                            _0xBEF0A4EF;                     // type:FLOAT.0
};

struct _0xCFFCBFD4
{
	enum _0x1D3FCEAF                 Mode;                            // type:ENUM.32BIT
	enum _0x1D3FCEAF                 Fallback;                        // type:ENUM.32BIT
	float                            Time;                            // type:FLOAT.0
};

struct _0xD0029EDD
{
	int                              ForcedEntryExitPoint;            // type:INT.0
	string                           OpenDoorClipOverride;            // type:STRING.ATNONFINALHASHSTRING
	string                           DoorAlreadyOpenClipOverride;     // type:STRING.ATNONFINALHASHSTRING
	string                           BreakDoorOpenClipOverride;       // type:STRING.ATNONFINALHASHSTRING
	string                           BreakDoorProp;                   // type:STRING.ATNONFINALHASHSTRING
	string                           RequiredSatchelItem;             // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                BreakDoorPropAttachBone;         // type:ENUM.32BIT
};

struct _0xD004EEEE
{
	string                           Personality;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Weight;                          // type:FLOAT.0
};

struct _0xD00D898F
{
	bool                             Enabled;                         // type:BOOL.0
	float                            _0x9AA9B926;                     // type:FLOAT.0
	float                            _0x12383BF1;                     // type:FLOAT.0
	bool                             _0x3821332C;                     // type:BOOL.0
	float                            _0x2BF4DB45;                     // type:FLOAT.0
	float                            MaxRadius;                       // type:FLOAT.0
	bool                             _0xBD7ACACA;                     // type:BOOL.0
	float                            MinLength;                       // type:FLOAT.0
	float                            MaxLength;                       // type:FLOAT.0
	float                            SideOffset;                      // type:FLOAT.0
	float                            _0xD407016A;                     // type:FLOAT.0
	float                            NoiseScale1;                     // type:FLOAT.0
	float                            NoiseScale2;                     // type:FLOAT.0
	float                            NoiseThreshold;                  // type:FLOAT.0
	float                            _0x60F8286C;                     // type:FLOAT.0
	bool                             _0x1BB0FACA;                     // type:BOOL.0
	float                            _0x6F278DEC;                     // type:FLOAT.0
	float                            _0x563A3A7B;                     // type:FLOAT.0
	float                            _0xB8829C7A;                     // type:FLOAT.0
	float                            _0x178340E8;                     // type:FLOAT.0
	float                            _0xB5ACA649;                     // type:FLOAT.0
	float                            _0x0E99E160;                     // type:FLOAT.0
	float                            _0x2A70954D;                     // type:FLOAT.0
	float                            _0xDED9B366;                     // type:FLOAT.0
};

struct _0xD0121EEB
{
	float                            NMBodyScale;                     // type:FLOAT.0
	float                            HumanBodyScale;                  // type:FLOAT.0
	float                            HumanPelvisScale;                // type:FLOAT.0
	float                            HumanSpine0Scale;                // type:FLOAT.0
	float                            HumanSpine1Scale;                // type:FLOAT.0
	float                            AnimalBodyScale;                 // type:FLOAT.0
	float                            AnimalPelvisScale;               // type:FLOAT.0
	float                            StrongBlastMagnitude;            // type:FLOAT.0
	float                            FastMovingPedSpeed;              // type:FLOAT.0
	float                            MaxDistanceAbovePedPositionToClampPitch; // type:FLOAT.0
	float                            PitchClampMin;                   // type:FLOAT.0
	float                            PitchClampMax;                   // type:FLOAT.0
	float                            MagnitudeClamp;                  // type:FLOAT.0
	float                            SideScale;                       // type:FLOAT.0
	float                            PitchSideAngle;                  // type:FLOAT.0
	float                            PitchTorqueMin;                  // type:FLOAT.0
	float                            PitchTorqueMax;                  // type:FLOAT.0
	float                            BlanketForceScale;               // type:FLOAT.0
	float                            ExtraTorqueTwistMax;             // type:FLOAT.0
	float                            DisableInjuredBehaviorImpulseLimit; // type:FLOAT.0
	float                            DisableInjuredBehaviorDistLimit; // type:FLOAT.0
};

struct _0xD0244E20 : _0x970644E1
{
};

struct _0xD033B7D4 : _0x2BA61B73
{
};

struct _0xD03F0170 : CTuning
{
	float                            Weight;                          // type:FLOAT.0
	float                            _0x5BBE8D3C;                     // type:FLOAT.0
	float                            _0x703DC93B;                     // type:FLOAT.0
	float                            _0xF5D1CC32;                     // type:FLOAT.0
	float                            _0x3DFC3BA4;                     // type:FLOAT.0
	float                            _0xAF39BBD2;                     // type:FLOAT.0
	float                            _0xD21E84C0;                     // type:FLOAT.0
	float                            _0xFBB10805;                     // type:FLOAT.0
	float                            _0xEE044DFC;                     // type:FLOAT.0
	float                            _0x6B88809E;                     // type:FLOAT.0
	float                            _0xD45AE0FB;                     // type:FLOAT.0
	float                            MaxRouteLengthForCower;          // type:FLOAT.0
	float                            _0xD39C298E;                     // type:FLOAT.0
	uint                             _0xDA6BD6C1;                     // type:UINT.0
};

struct _0xD06EFBB9 : _0xF42FB8D1
{
	bool                             ForceFocusRestore;               // type:BOOL.0
};

struct _0xD07C5A07
{
	float                            _0xC82663F3;                     // type:FLOAT.0
	float                            _0xB21F1503;                     // type:FLOAT.0
	float                            _0x416420E0;                     // type:FLOAT.0
	float                            _0xAB6220A0;                     // type:FLOAT.0
	float                            _0x80793C56;                     // type:FLOAT.0
	float                            MaxTimeInBulletReactionState;    // type:FLOAT.0
	uint                             MinTimeBetweenOverheadBulletReactions; // type:UINT.0
};

struct _0xD08C8D32
{
	ushort                           _0x6508CEA9;                     // type:USHORT.0
	ushort                           _0xA00B0663;                     // type:USHORT.0
	ushort                           _0x857DBF78;                     // type:USHORT.0
	ushort                           _0x15018BD0;                     // type:USHORT.0
	array<struct _0xBAF602D7>        _0x6A8F4A34;                     // type:ARRAY.ATARRAY
	array<struct _0xB41333A2>        _0x19A580D1;                     // type:ARRAY.ATARRAY
	array<struct _0xA4BAFFF2>        _0xC6ECE4A4;                     // type:ARRAY.ATARRAY
	array<struct _0x9F564133>        _0x9015D972;                     // type:ARRAY.ATARRAY
};

struct _0xD0949F53
{
	float                            SnowIntensity;                   // type:FLOAT.0
	float                            SnowWrap;                        // type:FLOAT.0
	float                            SnowSpecInt;                     // type:FLOAT.0
	float                            SnowRoughness;                   // type:FLOAT.0
	float                            SnowBumpScale;                   // type:FLOAT.0
	float                            SnowSharpness;                   // type:FLOAT.0
	float                            SnowNormalBlend;                 // type:FLOAT.0
	float                            SnowFadeStart;                   // type:FLOAT.0
	float                            SnowFadeEnd;                     // type:FLOAT.0
	float                            NoiseScale1;                     // type:FLOAT.0
	float                            NoiseScale2;                     // type:FLOAT.0
	float                            Threshold;                       // type:FLOAT.0
	uint                             NoiseOff;                        // type:UINT.0
	enum _0x8AECF4A3                 Season;                          // type:ENUM.32BIT
	enum _0x497DBFCD                 Channel;                         // type:ENUM.32BIT
	float                            GrassGlobalUpNormalModifier;     // type:FLOAT.0
};

struct _0xD09D26E6
{
	string                           TextureDictionary;               // type:STRING.ATFINALHASHSTRING
	string                           Texture;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ItemTypeTextureDictionary;       // type:STRING.ATFINALHASHSTRING
	string                           ItemTypeTexture;                 // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD09EDCAC : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xD0AE15A1
{
	bool                             _0xA7786135;                     // type:BOOL.0
	bool                             _0x83351C2D;                     // type:BOOL.0
	bool                             _0x1DB50B7A;                     // type:BOOL.0
	bool                             _0xC7D6922C;                     // type:BOOL.0
};

struct _0xD0AE939E : _0x7EAFD12D
{
	float                            TargetRangeDropOff;              // type:FLOAT.0
	bool                             Value;                           // type:BOOL.0
	bitset<enum _0x09928D65>         GpsFlags;                        // type:BITSET.16BIT
};

struct _0xD0B14299
{
	string                           ClipSetVarId;                    // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD0CFA8BF
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	int                              _0x90B3A4A7;                     // type:INT.0
	int                              _0x78646548;                     // type:INT.0
	string                           _0x2E47310A;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x44B0D705>        Volumes;                         // type:ARRAY.ATARRAY
	array<struct _0xF6F994E2>        Routes;                          // type:ARRAY.ATARRAY
	array<struct _0xC81DCD23>        Tasks;                           // type:ARRAY.ATARRAY
	array<struct _0xA0EB7031>        _0x1848847B;                     // type:ARRAY.ATARRAY
	struct _0x4BDE9574               _0x60977C68;                     // type:STRUCT.STRUCTURE
};

struct _0xD0D581B5
{
	array<struct SEventContextDefinition>     eventContextDefinitions;         // type:ARRAY.ATARRAY
};

struct _0xD0DF1E98
{
	array<struct _0x7B5D4A58>        cacheEntries;                    // type:ARRAY.ATARRAY
};

struct _0xD0E881B2 : CTuning
{
	float                            _0x35935095;                     // type:FLOAT.0
	float                            _0xB721BB28;                     // type:FLOAT.0
	float                            _0x01A72412;                     // type:FLOAT.0
};

struct _0xD1153528
{
	string                           VfxProjectileFuseInfoHashName;   // type:STRING.ATNONFINALHASHSTRING
	string                           VfxProjectileTrailInfoHashName;  // type:STRING.ATNONFINALHASHSTRING
	string                           VfxProjectileGroundDisturbInfoHashName; // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD12A599F
{
	map<string, struct _0x19261257>     Collections;                     // type:MAP.ATBINARYMAP
};

struct _0xD140120B
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             owned;                           // type:BOOL.0
};

struct _0xD16536C2
{
	struct _0xF084A722               Visibility;                      // type:STRUCT.STRUCTURE
	struct _0x51B38E82               _0x178FB2AD;                     // type:STRUCT.STRUCTURE
	struct _0x51B38E82               _0x5AA6987D;                     // type:STRUCT.STRUCTURE
	struct _0x51B38E82               _0x2D203383;                     // type:STRUCT.STRUCTURE
	struct _0x51B38E82               _0xD1A6AE10;                     // type:STRUCT.STRUCTURE
	struct _0x9B79B490               Opacity;                         // type:STRUCT.STRUCTURE
	struct _0x9B79B490               _0xDB2FC578;                     // type:STRUCT.STRUCTURE
	struct _0x9B79B490               _0x35CD56C2;                     // type:STRUCT.STRUCTURE
	struct _0x8ECFB47F               _0x161A4417;                     // type:STRUCT.STRUCTURE
	struct _0xE0CC4C41               _0xF097B2E5;                     // type:STRUCT.STRUCTURE
	struct _0xE0CC4C41               _0x4AB3C799;                     // type:STRUCT.STRUCTURE
	struct _0xE0CC4C41               Color;                           // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x32E4BA4F;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x097337CE;                     // type:STRUCT.STRUCTURE
};

struct _0xD19AF744 : _0x4198511D
{
};

struct _0xD19B0613 : _0xFECF2F24
{
};

struct _0xD1BFD5DA : CTuning
{
	struct _0x7E7A48CE               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xD1C11D0D
{
	uint                             _0x3FAEA392;                     // type:UINT.0
	uint                             _0x8E411612;                     // type:UINT.0
	float                            _0x60242202;                     // type:FLOAT.0
	float                            MaxAngularVelocity;              // type:FLOAT.0
	uint                             _0xC7710795;                     // type:UINT.0
};

struct _0xD1D34635 : CTuning
{
	string                           _0x3C87DFCF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA71D194F;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD1E05992 : _0xE6BB869D
{
	struct _0xBF2BD132               _0x0B0C98D1;                     // type:STRUCT.STRUCTURE
	float                            _0xFE2306A0;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0x54437846;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0xBB6CE933;                     // type:ENUM.32BIT
};

struct _0xD1E51183
{
	enum _0x6C20E79D                 id;                              // type:ENUM.32BIT
	string                           material;                        // type:STRING.ATNONFINALHASHSTRING
	string                           engravingMaterial0;              // type:STRING.ATNONFINALHASHSTRING
	string                           engravingMaterial1;              // type:STRING.ATNONFINALHASHSTRING
	string                           engravingMaterial2;              // type:STRING.ATNONFINALHASHSTRING
	string                           engravingMaterial3;              // type:STRING.ATNONFINALHASHSTRING
	string                           engravingMaterial4;              // type:STRING.ATNONFINALHASHSTRING
	string                           engravingMaterial5;              // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFF6A69A2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x532CB38F;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             enableEngravingBump;             // type:BOOL.0
	bool                             enableSecondaryEngravingRedBump; // type:BOOL.0
	bool                             enableSecondaryEngravingGreenBump; // type:BOOL.0
	bool                             enableSecondaryEngravingBlueBump; // type:BOOL.0
	bool                             _0xFA46AE4C;                     // type:BOOL.0
	uchar                            _0x593B09B0;                     // type:UCHAR.0
};

struct _0xD1E7741F
{
	array<float>                     _0xAA6B9964;                     // type:ARRAY.ATARRAY
	array<float>                     _0x48377EC1;                     // type:ARRAY.ATARRAY
	float                            _0x421812A8;                     // type:FLOAT.0
	float                            TimeBetweenPlayerEvents;         // type:FLOAT.0
	float                            _0x6D1BFFE6;                     // type:FLOAT.0
	float                            _0x635E93DE;                     // type:FLOAT.0
	float                            _0xCB1F2308;                     // type:FLOAT.0
	float                            _0xD11C90EF;                     // type:FLOAT.0
	bool                             _0xD28616CC;                     // type:BOOL.0
	bool                             _0xC127A9F7;                     // type:BOOL.0
	float                            _0x7DDB2391;                     // type:FLOAT.0
	uint                             _0x7844540D;                     // type:UINT.0
	uint                             _0x271C50BA;                     // type:UINT.0
	int                              _0x0E0A4761;                     // type:INT.0
	int                              _0x5A0EB82B;                     // type:INT.0
	float                            _0xCCECCFCD;                     // type:FLOAT.0
	float                            _0xEECD5F42;                     // type:FLOAT.2
	float                            _0x2B37B8AC;                     // type:FLOAT.0
	float                            _0x0CEB6125;                     // type:FLOAT.0
	float                            _0xF8C08A3B;                     // type:FLOAT.0
	float                            _0x7F3BC376;                     // type:FLOAT.0
	float                            _0xF11F6888;                     // type:FLOAT.0
	float                            _0x5F05C9D1;                     // type:FLOAT.0
	float                            _0x289BD38F;                     // type:FLOAT.0
	float                            _0xB7F6863C;                     // type:FLOAT.0
	float                            _0x107DACEE;                     // type:FLOAT.0
	float                            _0xA4067B98;                     // type:FLOAT.0
	float                            _0x6AC605E8;                     // type:FLOAT.0
	float                            _0x0265B4D6;                     // type:FLOAT.0
	float                            _0x861A1F35;                     // type:FLOAT.0
	float                            _0x0DB7A00A;                     // type:FLOAT.0
	float                            _0x43EAAC2D;                     // type:FLOAT.0
	float                            _0x18CD343D;                     // type:FLOAT.0
	float                            _0xD986DE50;                     // type:FLOAT.0
	float                            _0x69FED2B8;                     // type:FLOAT.0
	float                            _0x104C6AE3;                     // type:FLOAT.0
	uint                             _0xD2CEF113;                     // type:UINT.0
	struct _0x175D1BAD               _0x175D1BAD;                     // type:STRUCT.STRUCTURE
	struct _0xBA16CA07               _0xBA16CA07;                     // type:STRUCT.STRUCTURE
	int                              _0x2E719AE9;                     // type:INT.0
	int                              _0x28E092C7;                     // type:INT.0
	uint                             _0x83082381;                     // type:UINT.0
	float                            _0xD0F02031;                     // type:FLOAT.2
	float                            _0x526EAD3E;                     // type:FLOAT.0
};

struct _0xD1EBDA39 : uiDrawableBehaviorBase
{
	bool                             UsePausableTimer;                // type:BOOL.0
	bool                             _0xD0F106A2;                     // type:BOOL.0
	bool                             HoldTextureReferences;           // type:BOOL.0
	enum _0x13463B67                 RenderType;                      // type:ENUM.32BIT
	string                           _0x394CFF33;                     // type:STRING.ATNSHASHSTRING
	string                           _0xDF40C940;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2AAC1A42;                     // type:STRING.ATNSHASHSTRING
	string                           _0x13935210;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD1F1DCAF : _0x4AD37C0A
{
	array<struct _0xD58444A1>        _0x83CC65E7;                     // type:ARRAY.ATARRAY
};

struct _0xD2002F1E : camBaseCameraMetadata
{
	float                            _0xD7CC3DB4;                     // type:FLOAT.0
	float                            _0xFCE39336;                     // type:FLOAT.0
	float                            _0xC5810546;                     // type:FLOAT.0
	float                            _0x2D4AC019;                     // type:FLOAT.0
	float                            _0xE462F930;                     // type:FLOAT.0
	float                            MinPitch;                        // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	uint                             _0xD8742DE7;                     // type:UINT.0
};

struct _0xD211A0E9
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x0BAE7487;                     // type:FLOAT.0
	float                            _0xACE482A6;                     // type:FLOAT.0
	float                            _0xA8ECB90E;                     // type:FLOAT.0
	float                            _0x97AF466A;                     // type:FLOAT.0
	float                            _0x6C5B9193;                     // type:FLOAT.0
	float                            _0xEF09E980;                     // type:FLOAT.0
	float                            _0x4BC5DE81;                     // type:FLOAT.0
	float                            _0x28D72A12;                     // type:FLOAT.0
	float                            _0x9DEF41A0;                     // type:FLOAT.0
	float                            _0x71CCC2E9;                     // type:FLOAT.0
	float                            _0x244D9EFC;                     // type:FLOAT.0
	float                            _0xC12CF556;                     // type:FLOAT.0
	float                            _0x68B2D04D;                     // type:FLOAT.0
	float                            _0x305C7673;                     // type:FLOAT.0
	float                            _0x2CD1D506;                     // type:FLOAT.0
	int                              _0x7C8C65BA;                     // type:INT.0
	int                              _0xB0BA4529;                     // type:INT.0
};

struct _0xD2137166
{
	enum _0x1925B7EA                 PathType;                        // type:ENUM.32BIT
};

struct _0xD21F8F53 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xD22F3945
{
	vec2                             freqAndAmp;                      // type:VECTOR2.0
};

struct _0xD23CA9CB : _0x62C8DA81
{
	string                           ElementID;                       // type:STRING.ATNSHASHSTRING
};

struct _0xD25EE73F : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 WantedPed;                       // type:ENUM.32BIT
};

struct _0xD284298E
{
	float                            MaxDistanceForSpawnTurn;         // type:FLOAT.0
	float                            DurationOfTurns;                 // type:FLOAT.0
	float                            TimeBetweenTurns;                // type:FLOAT.0
};

struct _0xD292496C : CTuning
{
	struct _0x8E440AFD               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xD29CB77F
{
	int                              _0x8A24B3F0;                     // type:INT.0
	int                              _0xD84CDC75;                     // type:INT.0
	int                              _0xA3A480C0;                     // type:INT.0
	int                              _0xE759AF93;                     // type:INT.0
	int                              _0xC8182332;                     // type:INT.0
	int                              _0xF738E11C;                     // type:INT.0
	int                              _0x3A558428;                     // type:INT.0
	enum _0x39FAD516                 _0x8C55F564;                     // type:ENUM.32BIT
};

struct _0xD2A481D5 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xD2D9628A : CTuning
{
	uint                             _0x620BB681;                     // type:UINT.0
	uint                             _0x177C8A81;                     // type:UINT.0
};

struct _0xD302C8F7 : _0x0A510DA9
{
};

struct _0xD307B26E : CTuning
{
	struct _0x4B6F9353               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xD30F564D : _0x7EAFD12D
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD31CA25D
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             DispatchNode;                    // type:BOOL.0
	bool                             FindSpawnPointInDirection;       // type:BOOL.0
	bool                             _0x52ED15AB;                     // type:BOOL.0
	bool                             IncidentLocation;                // type:BOOL.0
};

struct _0xD3333F6E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            _0x9C346553;                     // type:FLOAT.0
};

struct _0xD37A994E
{
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            Acceleration;                    // type:FLOAT.0
	float                            Deceleration;                    // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct _0xD37D8693
{
	enum _0x637167F5                 Frequency;                       // type:ENUM.32BIT
	enum _0x97E05F75                 _0x9D3B59CF;                     // type:ENUM.32BIT
	float                            _0x98B86732;                     // type:FLOAT.0
	bitset<enum _0x927DCC44>         Flags;                           // type:BITSET.8BIT
	array<struct _0x87CB7DBA>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0xD3B2BA29 : _0x8A0DC979
{
	string                           ContentType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD3B3C45F
{
	array<string>                    Escalate;                        // type:ARRAY.ATARRAY
	string                           Forgive;                         // type:STRING.CONST_STRING
	string                           GiveUp;                          // type:STRING.CONST_STRING
};

struct _0xD3B53186 : _0x7535FFBE
{
	string                           NetworkId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0x95DA69E7;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x88F63BB2;                     // type:BOOL.0
	struct _0x1B06F3E5               _0x52860579;                     // type:STRUCT.STRUCTURE
	array<struct _0x9BE88B89>        Clips;                           // type:ARRAY.ATARRAY
	array<struct _0x03E3C77E>        Flags;                           // type:ARRAY.ATARRAY
};

struct _0xD3B61E0D
{
	struct _0xAFCCCD61               bindingNotifier;                 // type:STRUCT.SIMPLE_POINTER
};

struct _0xD3E166CF : _0x4DE5602F
{
	array<struct _0x4DE5602F>        Solvers;                         // type:ARRAY.ATARRAY
};

struct _0xD3EC86B0
{
	string                           _0x08D23800;                     // type:STRING.ATHASHVALUE16U
	string                           _0x727A6AA5;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x81F04098;                     // type:BOOL.0
};

struct _0xD3EEB381 : SavegameInventoryItem
{
	string                           Name;                            // type:STRING.MEMBER
	int                              Bitfield;                        // type:INT.0
};

struct _0xD3FCD9E3
{
	bool                             ShouldApply;                     // type:BOOL.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            OrbitDistance;                   // type:FLOAT.0
	float                            _0x9A3390D4;                     // type:FLOAT.0
};

struct _0xD4053778
{
	uint                             ThresholdValue;                  // type:UINT.0
	string                           ThresholdHash;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD41612A3
{
	struct _0x90EBE89B               Start;                           // type:STRUCT.STRUCTURE
	struct _0x90EBE89B               End;                             // type:STRUCT.STRUCTURE
	float                            Width;                           // type:FLOAT.0
};

struct _0xD46703DD
{
	map<string, struct _0xEB839956>     Entities;                        // type:MAP.ATBINARYMAP
	array<struct _0x52C3DC37>           Attachments;                     // type:ARRAY.ATARRAY
	struct _0x1C4D00E0                  RandomModelsSet;                 // type:STRUCT.STRUCTURE
	string                              ExtensionIdUnlooted;             // type:STRING.ATNONFINALHASHSTRING
	string                              ExtensionIdLooted;               // type:STRING.ATNONFINALHASHSTRING
	string                              PromptSubStringOverride;         // type:STRING.ATNONFINALHASHSTRING
	string                              PromptBaseSubStringOverride;     // type:STRING.ATNONFINALHASHSTRING
	string                              InventoryFullItemHash;           // type:STRING.ATNONFINALHASHSTRING
	string                              LootConfig;                      // type:STRING.ATNONFINALHASHSTRING
	vec3V                               WaterGroundProbeLocalOffset;     // type:VEC3V.0
	string                              InteractableSwapComposite;       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD4670C5D
{
	int                              _0xD4126F63;                     // type:INT.0
	int                              _0x4F802F63;                     // type:INT.0
};

struct _0xD469CE50
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x6A0E471E;                     // type:FLOAT.0
	float                            _0xD1AA043A;                     // type:FLOAT.0
	float                            _0x816C8B98;                     // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
};

struct _0xD46E7A34
{
	string                                   MaleClipset;                     // type:STRING.ATNONFINALHASHSTRING
	string                                   FemaleClipset;                   // type:STRING.ATNONFINALHASHSTRING
	float                                    BlendOutDuration;                // type:FLOAT.0
	string                                   BaseClipName;                    // type:STRING.ATNONFINALHASHSTRING
	float                                    BaseClipWeight;                  // type:FLOAT.0
	array<struct EmoteClipVariationInfo>     FullBodyVariations;              // type:ARRAY.ATARRAY
};

struct _0xD4905968 : CAICondition
{
	float                            _0x3A158C1D;                     // type:FLOAT.0
};

struct _0xD4AEB5BE : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xD4B07D01
{
	float                            IncapacitatedHealthThreshold;    // type:FLOAT.0
	float                            ReviveFromIncapacitationHealth;  // type:FLOAT.0
	bool                             CanBeIncapacitated;              // type:BOOL.0
};

struct _0xD4BF5556 : _0x0A698250
{
};

struct _0xD4C4DBED
{
	array<struct _0xE9024DBC>        Choices;                         // type:ARRAY.ATARRAY
};

struct _0xD4E651AE : _0xD19AF744
{
	array<struct _0x8ECFB47F>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0xD4F4C82F
{
	bool                             _0x77FE758A;                     // type:BOOL.0
	uint                             BlendInDuration;                 // type:UINT.0
	uint                             BlendOutDuration;                // type:UINT.0
	bool                             _0xBA994064;                     // type:BOOL.0
	bool                             _0x0B458DE6;                     // type:BOOL.0
};

struct _0xD5186822
{
	float                            _0x4A2BA54D;                     // type:FLOAT.0
	bool                             _0x085D9774;                     // type:BOOL.0
	float                            MinHeightAboveWater;             // type:FLOAT.0
	float                            _0x4496639C;                     // type:FLOAT.0
	bool                             _0x1C30E090;                     // type:BOOL.0
	bool                             _0x37975909;                     // type:BOOL.0
	bool                             _0xB9B13DB7;                     // type:BOOL.0
};

struct _0xD520C38A
{
	string                           _0xFB643CF2;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x3394CCA5               Value;                           // type:STRUCT.POINTER
};

struct _0xD5453C1F : _0x39DE799A
{
	uint                             Value;                           // type:UINT.0
};

struct _0xD54A5D84
{
	array<struct _0x6F6FEAB1>        Directions;                      // type:ARRAY.ATARRAY
};

struct _0xD5597ED4 : CTuning
{
};

struct _0xD55DD749 : _0x7EAFD12D
{
	uint                             Weight;                          // type:UINT.0
	uint                             MaxThreatDistance;               // type:UINT.0
};

struct _0xD55F7DEE : _0xE360F0CE
{
};

struct _0xD56F1E2C
{
	array<struct _0x9C834886>        Regions;                         // type:ARRAY.ATARRAY
};

struct _0xD57040AF : CTuning
{
	float                            _0x32C2C66F;                     // type:FLOAT.0
	float                            _0x93E083BD;                     // type:FLOAT.0
	float                            _0xC39877E0;                     // type:FLOAT.0
	float                            _0xB3CBD4F0;                     // type:FLOAT.0
	float                            _0x06B6937B;                     // type:FLOAT.0
	float                            _0x59348B4F;                     // type:FLOAT.0
};

struct _0xD5768587 : camBaseObjectMetadata
{
	struct _0x9DC3CDF6               _0x0EDDBC0B;                     // type:STRUCT.STRUCTURE
	struct _0xC3C3B3FF               _0x880A48B2;                     // type:STRUCT.STRUCTURE
	struct _0xCF515FE2               _0xCFBD1BF0;                     // type:STRUCT.STRUCTURE
	struct _0xD4F4C82F               _0x55E17782;                     // type:STRUCT.STRUCTURE
	struct _0x47D7F7B5               _0x25DBC3EA;                     // type:STRUCT.STRUCTURE
	bool                             _0xB3CA248B;                     // type:BOOL.0
};

struct _0xD57B6AB5
{
	float                            BlendDuration;                   // type:FLOAT.0
	string                           Filter;                          // type:STRING.ATNONFINALHASHSTRING
	string                           SyncType;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD58444A1 : _0xE44EB193
{
	struct _0xE51C0F55               _0xADFB6328;                     // type:STRUCT.STRUCTURE
};

struct _0xD58E1E96
{
	struct _0xCF66FD63               _0x0521AADF;                     // type:STRUCT.STRUCTURE
	struct _0xCF66FD63               _0x27C916EA;                     // type:STRUCT.STRUCTURE
	struct _0xCF66FD63               _0x084DF5A0;                     // type:STRUCT.STRUCTURE
};

struct _0xD58F2440 : UIBehavior
{
	string                           EntryId;                         // type:STRING.ATSTRING
};

struct _0xD5C04C2B
{
	string                           Preset;                          // type:STRING.ATNONFINALHASHSTRING
	struct _0xFAD18A4F               SelectionConditions;             // type:STRUCT.STRUCTURE
	float                            RandomWeight;                    // type:FLOAT.0
	float                            MinSeverityMultiplier;           // type:FLOAT.0
	float                            MaxSeverityMultiplier;           // type:FLOAT.0
	bitset<enum _0x314907A5>         Flags;                           // type:BITSET.8BIT
	char                             MinNumPeds;                      // type:CHAR.0
	char                             MaxNumPeds;                      // type:CHAR.0
};

struct _0xD5F7C394 : _0xA709E487
{
	string                           value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD5FF0435
{
	int                              Day;                             // type:INT.0
	int                              Month;                           // type:INT.0
	int                              Year;                            // type:INT.0
	int                              Hours;                           // type:INT.0
	int                              Minutes;                         // type:INT.0
	int                              Seconds;                         // type:INT.0
};

struct _0xD5FF6F61
{
	int                              Hour;                            // type:INT.0
	int                              Minute;                          // type:INT.0
	int                              Second;                          // type:INT.0
};

struct _0xD612ABCE : CTuning
{
	struct _0xE851C947               Stiffness;                       // type:STRUCT.STRUCTURE
	struct _0x637E6AB3               Forces;                          // type:STRUCT.STRUCTURE
	struct _0x8A5EA609               _0x466F9B03;                     // type:STRUCT.STRUCTURE
	struct _0x8A5EA609               _0xC0E2DBD0;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x5C9A4E45;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x3BF43DBF;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x6B933D02;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x07CE390F;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xEBF5ABCD;                     // type:STRUCT.STRUCTURE
	struct _0xF6B42D89               _0xA367FE55;                     // type:STRUCT.STRUCTURE
	struct _0xDF771251               BlendOutThreshold;               // type:STRUCT.STRUCTURE
	float                            _0xE502B6D3;                     // type:FLOAT.0
	float                            _0x9D1E93CE;                     // type:FLOAT.0
	vec2V                            _0x2A7439BF;                     // type:VEC2V.0
	vec2V                            _0xFD588744;                     // type:VEC2V.0
	float                            _0x9120D7EA;                     // type:FLOAT.0
	float                            _0x1A872591;                     // type:FLOAT.0
	float                            _0xBE8D8B82;                     // type:FLOAT.0
	float                            _0x1A1F917C;                     // type:FLOAT.0
	float                            _0xC37812B0;                     // type:FLOAT.0
	float                            _0x6D9293C8;                     // type:FLOAT.0
	float                            _0xCA8E84C8;                     // type:FLOAT.0
	float                            _0xCDC472C1;                     // type:FLOAT.0
	float                            _0x77959379;                     // type:FLOAT.0
	float                            _0x012138A9;                     // type:FLOAT.0
	float                            _0x8BEC9EA2;                     // type:FLOAT.0
	float                            _0xEE5A94B6;                     // type:FLOAT.0
	float                            _0x4D45DF85;                     // type:FLOAT.0
	float                            _0x18590F0B;                     // type:FLOAT.0
	float                            _0xE29A1568;                     // type:FLOAT.0
	float                            _0x4B522B3F;                     // type:FLOAT.0
	float                            _0x255B4766;                     // type:FLOAT.0
	float                            _0x72CB27FC;                     // type:FLOAT.0
	float                            _0x7D5959C5;                     // type:FLOAT.0
	uint                             _0x01BA033B;                     // type:UINT.0
	bool                             _0x007BBCA3;                     // type:BOOL.0
	bool                             _0xB62B3440;                     // type:BOOL.0
	bool                             _0x41ECC7E9;                     // type:BOOL.0
};

struct _0xD61B896E
{
	map<string, struct _0xED23B004>     Params;                          // type:MAP.ATBINARYMAP
};

struct _0xD65BC8F8
{
	string                           ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
	uint                             Pctg;                            // type:UINT.0
	uint                             _0x53D06284;                     // type:UINT.0
	uint                             _0x36A8BE37;                     // type:UINT.0
	string                           _0x757FA717;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             PreStream;                       // type:BOOL.0
};

struct _0xD6699E6D
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x8540D878                 Type;                            // type:ENUM.32BIT
	float                            SphereScale;                     // type:FLOAT.0
	float                            BermBoneExpansion;               // type:FLOAT.0
	float                            BermPathExpansion;               // type:FLOAT.0
	float                            BermHeightScale;                 // type:FLOAT.0
	float                            DepthOffset;                     // type:FLOAT.0
	float                            DepthBiasScale;                  // type:FLOAT.0
	float                            TrailWidthScale;                 // type:FLOAT.0
	float                            TrailVScaleMax;                  // type:FLOAT.0
	float                            TrailVScaleMin;                  // type:FLOAT.0
	float                            TrailDepthScaleMin;              // type:FLOAT.0
	float                            TrailDepthScaleMax;              // type:FLOAT.0
	float                            TrailVelocityMin;                // type:FLOAT.0
	float                            TrailVelocityMax;                // type:FLOAT.0
	string                           TrailTextureName;                // type:STRING.ATNONFINALHASHSTRING
	string                           PrintTextureName;                // type:STRING.ATNONFINALHASHSTRING
	string                           MudDisplacmentTextureName;       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD682DC60
{
	float                            _0x82007646;                     // type:FLOAT.0
	float                            _0xBF6BD963;                     // type:FLOAT.0
	float                            _0x1323F66B;                     // type:FLOAT.0
	float                            _0xC5BB48CC;                     // type:FLOAT.0
	float                            _0x18030793;                     // type:FLOAT.0
	float                            _0x6BBA1B96;                     // type:FLOAT.0
	string                           _0xC609A12F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCD9D8EF7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCF900D12;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x055C0356;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCF18DCE7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5C44560D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE9652038;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x99561A7C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDC897598;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x75114D30;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4057A9DD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4E377A25;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8CC8731D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF1A5D39F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEE977182;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAD0BEDDA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8CB7879A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x84170AC6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0E3054FD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC53AEA43;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2C7BDBA2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6D47E12C;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xE9F406EF, 3>     Speeds;                          // type:ARRAY.ATFIXEDARRAY
};

struct _0xD691046B
{
	map<string, struct _0xF066BC49>     Types;                           // type:MAP.ATMAP
};

struct _0xD6959DCC : _0x8E32D4D2
{
};

struct _0xD699B0C8 : _0x74EB5104
{
};

struct _0xD6A9AF78
{
	bool                             _0xB331DBAC;                     // type:BOOL.0
};

struct _0xD6AAF11E
{
	string                           itemName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF1C97535;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD6B30565
{
	float                            _0x41A98BAB;                     // type:FLOAT.0
	float                            _0xCED62B5F;                     // type:FLOAT.0
	float                            _0xFAA3B7D1;                     // type:FLOAT.0
	float                            _0x333765FF;                     // type:FLOAT.0
	float                            _0x7FC776A3;                     // type:FLOAT.0
	float                            _0x1410E029;                     // type:FLOAT.0
	float                            _0x48BE9A8C;                     // type:FLOAT.0
	float                            _0x73ACFD1D;                     // type:FLOAT.0
	float                            _0x8FA9945A;                     // type:FLOAT.0
};

struct _0xD6B91386
{
	float                            _0xA6C95F20;                     // type:FLOAT.0
	float                            _0x21A30668;                     // type:FLOAT.0
	float                            _0xF04BD16C;                     // type:FLOAT.0
	float                            _0x4264694F;                     // type:FLOAT.0
};

struct _0xD6CA7A33 : _0x1619E486
{
};

struct _0xD6D4AD86
{
	float                            X;                               // type:FLOAT.0
	float                            Y;                               // type:FLOAT.0
	float                            Z;                               // type:FLOAT.0
	float                            Radius;                          // type:FLOAT.0
	string                           GroupId;                         // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x2CB1DFBB>         FilterFlags;                     // type:BITSET.16BIT
	uchar                            ModifierType;                    // type:UCHAR.0
};

struct _0xD6D89E6A
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x64F382F8               Thresholds;                      // type:STRUCT.STRUCTURE
};

struct _0xD6E4C7A1 : _0xE5437D38
{
};

struct _0xD6EBC8F6 : _0x8A0DC979
{
	array<struct _0x8C354D49>        Resources;                       // type:ARRAY.ATARRAY
};

struct _0xD703C3A3 : _0x8A0DC979
{
	int                              _0x595AFB97;                     // type:INT.0
};

struct _0xD71DEF01 : CExtensionDef
{
	array<struct CExtensionDefParticleEffect>     instances;                       // type:ARRAY.ATARRAY
	array<struct CExtensionDefParticleEffect>     _0x28CF7431;                     // type:ARRAY.ATARRAY
};

struct _0xD7261B9B
{
	float                            PosX;                            // type:FLOAT.0
	float                            PosY;                            // type:FLOAT.0
	float                            PosZ;                            // type:FLOAT.0
	float                            Heading;                         // type:FLOAT.0
	float                            Pitch;                           // type:FLOAT.0
	float                            Roll;                            // type:FLOAT.0
	float                            Fov;                             // type:FLOAT.0
	float                            _0x1DBA3758;                     // type:FLOAT.0
	float                            _0x6A43FAF9;                     // type:FLOAT.0
	float                            Time;                            // type:FLOAT.0
	enum _0xB3A6FA11                 Easing;                          // type:ENUM.32BIT
};

struct _0xD738C5C2
{
	float                            SpringConstant;                  // type:FLOAT.0
	vec2                             _0xB3757775;                     // type:VECTOR2.0
	vec2                             _0x4F448991;                     // type:VECTOR2.0
	float                            ZOffset;                         // type:FLOAT.0
};

struct _0xD74AFD6A : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xD754331B : _0x4A7E9558
{
};

struct _0xD75561E9 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	array<enum eDamageType>          DamageTypes;                     // type:ARRAY.ATARRAY
};

struct _0xD762468D
{
	float                            EnvClothCombinedForceThreshold;  // type:FLOAT.0
	float                            CharClothCombinedForceThreshold; // type:FLOAT.0
	float                            CharClothCombinedForceThreshold2; // type:FLOAT.0
	float                            DistThresholdDefault;            // type:FLOAT.0
	float                            DistThresholdSniper;             // type:FLOAT.0
	float                            DistMinClothSimSkinBlend;        // type:FLOAT.0
	float                            DistMaxClothSimSkinBlend;        // type:FLOAT.0
};

struct _0xD78EAC03
{
	enum _0x6449EEE7                 VerbName;                        // type:ENUM.32BIT
};

struct _0xD7929B5C
{
	struct _0x22B199F9                              Action;                          // type:STRUCT.POINTER
	struct CInteractionActionConditional            ConditionalAction;               // type:STRUCT.STRUCTURE
	array<struct CInteractionActionConditional>     ConditionalActions;              // type:ARRAY.ATARRAY
	bitset<enum _0xF0C4B187>                        Flags;                           // type:BITSET.8BIT
	array<string>                                   Reactions;                       // type:ARRAY.ATARRAY
	float                                           TimeToListen;                    // type:FLOAT.0
};

struct _0xD7A065AF : CTuning
{
	array<struct _0xEF68F7E5, 3>     _0xF60BA2CC;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0xD7AF813B
{
	struct _0xB488D635               HeightHelper;                    // type:STRUCT.STRUCTURE
};

struct _0xD7B2BE4A
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x33C1E27F;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxRange;                       // type:FLOAT.0
};

struct _0xD7B3DEB2 : CCompendiumItemHerb
{
};

struct _0xD7C7340B : uiGenericEventDataBase
{
	string                           data;                            // type:STRING.ATNSHASHSTRING
};

struct _0xD7C7D3CA : CAICondition
{
};

struct _0xD7E8AEE9 : CTuning
{
	struct _0x8900668A               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xD7EAA1CC : CTuning
{
	float                            _0x07D242FA;                     // type:FLOAT.0
	float                            _0xC7BB7D8D;                     // type:FLOAT.0
	float                            _0xADFAA8BE;                     // type:FLOAT.0
	float                            _0xD74F0AB6;                     // type:FLOAT.0
	float                            _0x7975F048;                     // type:FLOAT.0
	bool                             _0xE9590BB2;                     // type:BOOL.0
	uchar                            _0xAF8BB668;                     // type:UCHAR.0
	float                            _0x88CC03EE;                     // type:FLOAT.0
	float                            _0xF1DBBD65;                     // type:FLOAT.0
	float                            _0x591D5C05;                     // type:FLOAT.0
	float                            _0x2DD318E7;                     // type:FLOAT.0
	float                            _0xB82D9F04;                     // type:FLOAT.0
	float                            _0xE9901B46;                     // type:FLOAT.0
};

struct _0xD805E227
{
	string                           Type;                            // type:STRING.ATSTRING
	string                           Parameters;                      // type:STRING.ATSTRING
	array<struct _0x65DE4D97>        Examples;                        // type:ARRAY.ATARRAY
};

struct _0xD80D0344 : _0xF8449058
{
	array<struct _0x7B51821B>        Actions;                         // type:ARRAY.ATARRAY
	array<string>                    FallbackCutActions;              // type:ARRAY.ATARRAY
	float                            PromptPoseThreshold;             // type:FLOAT.0
	string                           ForcedFallbackBlendOutSet;       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD8181395 : CTuning
{
	struct _0x141ED6E9               _0x2EA7A1A4;                     // type:STRUCT.STRUCTURE
	float                            _0xBE3DCD63;                     // type:FLOAT.0
	float                            _0x63655A61;                     // type:FLOAT.0
	float                            _0xCB16EB9E;                     // type:FLOAT.0
	float                            _0x18A414FC;                     // type:FLOAT.0
	float                            _0xE0D85836;                     // type:FLOAT.0
	float                            _0x9972F8EA;                     // type:FLOAT.0
	float                            _0x8E30578D;                     // type:FLOAT.0
	float                            _0x87917D51;                     // type:FLOAT.0
	float                            _0x75F36A60;                     // type:FLOAT.0
	float                            _0xD232017C;                     // type:FLOAT.0
	float                            _0x31293668;                     // type:FLOAT.0
	float                            _0xDE847F06;                     // type:FLOAT.0
	float                            _0xBFB72B32;                     // type:FLOAT.0
	float                            _0x7054603E;                     // type:FLOAT.0
	float                            _0x848A5959;                     // type:FLOAT.0
	float                            _0x42AB44FA;                     // type:FLOAT.0
	float                            _0xBCFC1F0A;                     // type:FLOAT.0
	float                            _0x655DED98;                     // type:FLOAT.0
	float                            _0xEE89A76B;                     // type:FLOAT.0
	float                            _0x23E8780F;                     // type:FLOAT.0
	float                            _0x1DB3BA4C;                     // type:FLOAT.0
	float                            _0xD6BCAA97;                     // type:FLOAT.0
	float                            _0xED3CB287;                     // type:FLOAT.0
	float                            _0x3991322E;                     // type:FLOAT.0
	float                            HashOrdering;                    // type:FLOAT.0
	float                            _0x28BA767D;                     // type:FLOAT.0
	float                            _0x9ECAC674;                     // type:FLOAT.0
	float                            MaxDistanceForDialogueWithNearbyPed; // type:FLOAT.0
	float                            _0x6596AB76;                     // type:FLOAT.0
	float                            _0x639A9CB5;                     // type:FLOAT.0
	float                            _0xAAD9F9D8;                     // type:FLOAT.0
	float                            _0x8885591D;                     // type:FLOAT.0
	float                            _0xAFDD4B82;                     // type:FLOAT.0
	string                           _0x8FD03AA6;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xED78CFFE;                     // type:UINT.0
	uchar                            _0x458C162D;                     // type:UCHAR.0
};

struct _0xD8196205 : CTuning
{
	struct _0x9408E296               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xD81FC170 : CTuning
{
	float                            _0xDEFE1B6C;                     // type:FLOAT.0
	float                            _0x00690134;                     // type:FLOAT.0
	float                            _0x37168A90;                     // type:FLOAT.0
	uint                             _0x4D3C5CA8;                     // type:UINT.0
	uint                             _0x2CDCC9CD;                     // type:UINT.0
	bool                             _0x6EDD58AD;                     // type:BOOL.0
};

struct _0xD8288110 : _0x9B440548
{
};

struct _0xD84BED2A
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            range;                           // type:FLOAT.0
	uint                             numJumpsMin;                     // type:UINT.0
	uint                             numJumpsMax;                     // type:UINT.0
	float                            panSpeed;                        // type:FLOAT.0
	float                            ceilingHeight;                   // type:FLOAT.0
	float                            minHeightAbove;                  // type:FLOAT.0
	enum rage__eLodType              ceilingLodLevel;                 // type:ENUM.32BIT
	float                            heightBetweenJumps;              // type:FLOAT.0
	float                            skipPanRange;                    // type:FLOAT.0
	uint                             maxTimeToStayInStartupModeOnLongRangeDescent; // type:UINT.0
	uint                             scenarioAnimsTimeout;            // type:UINT.0
	float                            radiusOfStreamedScenarioPedCheck; // type:FLOAT.0
};

struct _0xD8662AEC
{
	map<string, struct _0x8E41FDEE>               _0x70725FE7;                     // type:MAP.ATBINARYMAP
	map<enum _0x3B1F0870, struct _0x0A2805EE>     _0x50D2F810;                     // type:MAP.ATBINARYMAP
};

struct _0xD86EAE38
{
	string                           CarriableConf;                   // type:STRING.ATNONFINALHASHSTRING
	string                           ItemString;                      // type:STRING.ATNONFINALHASHSTRING
	string                           PromptOverrideSubstring;         // type:STRING.ATNONFINALHASHSTRING
	string                           ConditionalClipsetAnimHash;      // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xB118EA82>         Flags;                           // type:BITSET.32BIT
};

struct _0xD8839517 : _0xE453720A
{
	float                            padding;                         // type:FLOAT.0
	enum _0x53D7A951                 orientation;                     // type:ENUM.32BIT
	int                              rounding;                        // type:INT.0
};

struct _0xD8AE1A21 : _0xF643E290
{
	string                           _0x43AC121D;                     // type:STRING.ATSTRING
	vec4V                            _0xB6902640;                     // type:VEC4V.0
};

struct _0xD8B39C74 : _0x14229900
{
	enum _0x563FBCEA                 _0x091F09F1;                     // type:ENUM.32BIT
};

struct _0xD8D70658
{
	struct _0x11FBE1B2               Fight;                           // type:STRUCT.STRUCTURE
};

struct _0xD8EB148A
{
	array<struct _0x99D1D558>        pairs;                           // type:ARRAY.ATARRAY
};

struct _0xD8FC9EDD
{
	string                           _0xDEB37BEF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB28559DC;                     // type:STRING.ATNONFINALHASHSTRING
	uchar                            _0xB4E9482A;                     // type:UCHAR.0
	uchar                            _0x934B04EE;                     // type:UCHAR.0
	uchar                            _0x994E90F1;                     // type:UCHAR.0
	float                            _0x36AB4A47;                     // type:FLOAT.0
	float                            _0x660C6E67;                     // type:FLOAT.0
};

struct _0xD90EC412
{
	float                            Duration;                        // type:FLOAT.0
	float                            Magnitude;                       // type:FLOAT.0
	float                            DistanceModifier;                // type:FLOAT.0
	float                            MinDistanceModifierLimit;        // type:FLOAT.0
	float                            MaxDistanceModifierLimit;        // type:FLOAT.0
	float                            MagnitudeNetModifier;            // type:FLOAT.0
	float                            MaxDeflectionAngle;              // type:FLOAT.0
	float                            SpeedModifier;                   // type:FLOAT.0
	array<float>                     SpineStiffness;                  // type:ARRAY.ATARRAY
	array<float>                     NeckStiffness;                   // type:ARRAY.ATARRAY
	float                            PelvisStiffness;                 // type:FLOAT.0
	float                            RootStiffness;                   // type:FLOAT.0
	float                            RootLimit;                       // type:FLOAT.0
	float                            WeaponGroupModifierSniper;       // type:FLOAT.0
	float                            WeaponGroupModifierShotgun;      // type:FLOAT.0
	float                            WeaponGroupModifierBow;          // type:FLOAT.0
	float                            WeaponGroupModifierUnarmed;      // type:FLOAT.0
	float                            MinDistFromCenterThreshold;      // type:FLOAT.0
	float                            MaxDistFromCenterThreshold;      // type:FLOAT.0
	float                            LowerBodyDeflectionAngleModifier; // type:FLOAT.0
	float                            LowerBodyMinDistFromCenterThreshold; // type:FLOAT.0
	float                            LowerBodyMaxDistFromCenterThreshold; // type:FLOAT.0
};

struct _0xD9187C8E
{
	float                            _0xBEB27EB1;                     // type:FLOAT.0
	float                            _0x71074884;                     // type:FLOAT.0
	float                            _0x6AECDCEB;                     // type:FLOAT.0
	float                            _0x1D0EB95C;                     // type:FLOAT.0
	float                            _0xD8E9C178;                     // type:FLOAT.0
	float                            _0xBCD01647;                     // type:FLOAT.0
	float                            _0x6C9B62A3;                     // type:FLOAT.0
	float                            _0x60F5333E;                     // type:FLOAT.0
	float                            _0x9177BA9D;                     // type:FLOAT.0
	float                            _0xF37C15E5;                     // type:FLOAT.0
	float                            _0x985000AA;                     // type:FLOAT.0
	float                            _0x00AA37E4;                     // type:FLOAT.0
	float                            _0x7AE2C5A1;                     // type:FLOAT.0
	float                            _0xDFAD3C40;                     // type:FLOAT.0
	float                            _0x5E128170;                     // type:FLOAT.0
	float                            _0xFDF36A0B;                     // type:FLOAT.0
	uint                             _0x2C21110A;                     // type:UINT.0
	uint                             _0xA41CEDB8;                     // type:UINT.0
	array<float>                     _0xEFEDAB5F;                     // type:ARRAY.ATARRAY
};

struct _0xD93AACD7
{
	float                            TransToSwing_SpringOff;          // type:FLOAT.0
	float                            Fire_SpringOff;                  // type:FLOAT.0
	float                            TransToAim_SpringOn;             // type:FLOAT.0
};

struct _0xD946D305 : _0xE4AECA2C
{
	vec3V                            Data;                            // type:VEC3V.0
};

struct _0xD94B0C5B : _0xEF119F38
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0xD95F74CD : _0x7535FFBE
{
	array<struct _0xFC78F052>        _0x26F7969B;                     // type:ARRAY.ATARRAY
	int                              Flags;                           // type:INT.0
};

struct _0xD9626B2D
{
	string                           modelName;                       // type:STRING.ATSTRING
	string                           txdName;                         // type:STRING.ATSTRING
	string                           ptfxAssetName;                   // type:STRING.CONST_STRING
	float                            lodDist;                         // type:FLOAT.0
	float                            HDDistance;                      // type:FLOAT.0
	float                            slodDist;                        // type:FLOAT.0
	string                           ExpressionSetName;               // type:STRING.ATNONFINALHASHSTRING
	string                           slodName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD9660A3B
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x571AD0EB;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x9A37A78F;                     // type:FLOAT.0
	float                            _0x6AF61BB5;                     // type:FLOAT.0
	enum _0x4B8D1FAE                 _0x1D6DB657;                     // type:ENUM.32BIT
};

struct _0xD9679997
{
	array<struct _0x342FF120, 5>     _0x0458057F;                     // type:ARRAY.MEMBER
};

struct _0xD9683171 : _0xA0889763
{
	uint64                           value;                           // type:UINT64.0
};

struct _0xD96B702A : _0x4FF79310
{
};

struct _0xD9738A1A : _0x1054F746
{
};

struct _0xD9A14378
{
	array<struct _0x186E5166, 76>     RotationLimits;                  // type:ARRAY.POINTER_WITH_COUNT_16BIT_IDX
	array<struct _0xAE22C423, 78>     RotationEulerLimits;             // type:ARRAY.POINTER_WITH_COUNT_16BIT_IDX
	array<struct _0xAD49F41F, 80>     TranslationLimits;               // type:ARRAY.POINTER_WITH_COUNT_16BIT_IDX
	array<struct _0xBFCA850F, 82>     ScaleLimits;                     // type:ARRAY.POINTER_WITH_COUNT_16BIT_IDX
	ushort                            MaxRotationLimits;               // type:USHORT.0
	ushort                            MaxRotationEulerLimits;          // type:USHORT.0
	ushort                            MaxTranslationLimits;            // type:USHORT.0
	ushort                            MaxScaleLimits;                  // type:USHORT.0
};

struct _0xD9A93C13
{
	string                           _0x4F09E17E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7B05D3E5;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xFE6837E0>        _0xF0A1F490;                     // type:ARRAY.ATARRAY
	string                           _0xAE5C4C2E;                     // type:STRING.POINTER
};

struct _0xD9BE5667
{
	array<struct _0x9AC46B35>        ModelNames;                      // type:ARRAY.ATARRAY
	float                            Length;                          // type:FLOAT.0
	float                            _0xB0441748;                     // type:FLOAT.0
	int                              NumSections;                     // type:INT.0
	array<struct _0xDA78A922>        _0x1C055C61;                     // type:ARRAY.ATARRAY
	array<struct _0xE21F6188>        CollisionData;                   // type:ARRAY.ATARRAY
	array<vec3V>                     _0x961B96B9;                     // type:ARRAY.ATARRAY
	array<float>                     _0xE3501E38;                     // type:ARRAY.ATARRAY
	array<int>                       _0x1BE2ACAF;                     // type:ARRAY.ATARRAY
	array<struct _0xF2B314B8>        _0x39AC4B20;                     // type:ARRAY.ATARRAY
};

struct _0xD9C1B5E7 : _0xD6EBC8F6
{
};

struct _0xD9C2208C : CAICondition
{
	int                              _0x2F160BC8;                     // type:INT.0
	int                              _0x58710C3D;                     // type:INT.0
};

struct _0xD9E84323
{
	enum eNavigationInputDirection     Direction;                       // type:ENUM.32BIT
	string                             HashParameter;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0xD9F608D9 : _0x8A0DC979
{
	enum _0x5B754EBB                 Context;                         // type:ENUM.32BIT
};

struct _0xD9FA1E7E : _0xED23B004
{
};

struct _0xDA1401B8
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                           FilterId;                        // type:STRING.ATNONFINALHASHSTRING
	float                            BlendInDuration;                 // type:FLOAT.0
};

struct _0xDA1F7477 : CAICondition
{
};

struct _0xDA2B70D3
{
	uchar                            _0xA2039C71;                     // type:UCHAR.0
	uchar                            _0x41F13680;                     // type:UCHAR.0
	uchar                            _0xF07A20E3;                     // type:UCHAR.0
	uchar                            _0xCC116549;                     // type:UCHAR.0
};

struct _0xDA2C326C : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	int                              minimum;                         // type:INT.0
	int                              maximum;                         // type:INT.0
	int                              default;                         // type:INT.0
};

struct _0xDA2CEFD1 : _0x7EAFD12D
{
	enum _0x4C871DCA                 Value;                           // type:ENUM.32BIT
	string                           ColorOverride;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0xDA2DA33A
{
	struct _0x3DDA4FE9               Calculation;                     // type:STRUCT.STRUCTURE
	struct _0xED9F6E20               Helis;                           // type:STRUCT.STRUCTURE
};

struct _0xDA3B8D01
{
	struct _0x12C8F514               numPeds;                         // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x1E300C1C;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xBE0F9417;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xC0E33C7C;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x7578B1A3;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x74FCC416;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xEB678614;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x37F6E834;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xB4110CA5;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xE89615A5;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x912BBEFE;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xA5151574;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x732CC1E9;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x8D3EA1B3;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0x1B37FC3A;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xA2117DD4;                     // type:STRUCT.STRUCTURE
	struct _0x12C8F514               _0xEF6A39A9;                     // type:STRUCT.STRUCTURE
};

struct _0xDA4D85E8 : _0xB74AC865
{
};

struct _0xDA5213F7
{
	float                            ZoomThreshold;                   // type:FLOAT.0
	float                            DistanceThreshold;               // type:FLOAT.0
};

struct _0xDA57EEDC : CTuning
{
	bool                             _0x7B971AB3;                     // type:BOOL.0
	float                            _0x45120016;                     // type:FLOAT.0
	float                            _0xA37F4D9F;                     // type:FLOAT.0
	float                            _0xAF797C19;                     // type:FLOAT.0
	float                            _0xA80EA9C7;                     // type:FLOAT.0
	float                            _0x8D7F4EF4;                     // type:FLOAT.0
	float                            _0x99CA9763;                     // type:FLOAT.0
	bool                             _0x429C0F95;                     // type:BOOL.0
	bool                             _0xCF48D978;                     // type:BOOL.0
	bool                             _0xAA72A13E;                     // type:BOOL.0
	bool                             _0x2DC89983;                     // type:BOOL.0
	bool                             _0x70FD21D6;                     // type:BOOL.0
	bool                             _0x1C145062;                     // type:BOOL.0
	bool                             _0xE51CA1D6;                     // type:BOOL.0
	bool                             _0x694F3E13;                     // type:BOOL.0
	bool                             _0xC60EA42A;                     // type:BOOL.0
	bool                             _0x928ADCBD;                     // type:BOOL.0
};

struct _0xDA63D205
{
	string                           _0x3092B788;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0x8D14E938;                     // type:ENUM.32BIT
	enum eAnimBoneTag                _0x53E176D2;                     // type:ENUM.32BIT
};

struct _0xDA769AA4
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct _0x14229900               Response;                        // type:STRUCT.POINTER
};

struct _0xDA78A922
{
	vec3V                            Offset;                          // type:VEC3V.0
	int                              VertexIndex;                     // type:INT.0
	int                              BoneId;                          // type:INT.0
	int                              ConstraintBoneId;                // type:INT.0
	int                              IndexOffset;                     // type:INT.0
	int                              ExtraData;                       // type:INT.0
	int                              IsLoose;                         // type:INT.0
	bool                             IsEnabled;                       // type:BOOL.0
	bool                             IsVehicle;                       // type:BOOL.0
	bool                             IsFirstVertex;                   // type:BOOL.0
	bool                             IsLastVertex;                    // type:BOOL.0
	bool                             IsSkipEntity;                    // type:BOOL.0
	bool                             IsReplaceEntity;                 // type:BOOL.0
	bool                             IsSlide;                         // type:BOOL.0
};

struct _0xDA7F21E3 : CTuning
{
	struct _0x4DCF2845               _0x68FA2CEF;                     // type:STRUCT.STRUCTURE
	struct _0x9A45B2F1               _0x77B41517;                     // type:STRUCT.STRUCTURE
	struct _0x90AE7536               _0xCA0A8F54;                     // type:STRUCT.STRUCTURE
	struct _0x211A54A8               _0x4C2DCFBD;                     // type:STRUCT.STRUCTURE
	struct _0x31CA41AF               _0x07924B7E;                     // type:STRUCT.STRUCTURE
	struct _0x8C8958C6               _0x18E71279;                     // type:STRUCT.STRUCTURE
	struct _0x63B7EC87               _0xD6B9E1C5;                     // type:STRUCT.STRUCTURE
	struct _0x1A92D2F6               _0x49D0DA8B;                     // type:STRUCT.STRUCTURE
	struct _0x85B647CD               _0x16979236;                     // type:STRUCT.STRUCTURE
	struct _0x115F7CEA               _0xECA48668;                     // type:STRUCT.STRUCTURE
	struct _0x0058C067               _0x8D64D036;                     // type:STRUCT.STRUCTURE
	struct _0x0CA7A72F               _0x3BFFED74;                     // type:STRUCT.STRUCTURE
	struct _0xFA60BE58               _0x7E083BB0;                     // type:STRUCT.STRUCTURE
	struct _0x86645E8E               _0x716461E0;                     // type:STRUCT.STRUCTURE
	bool                             _0x3F0EB0EF;                     // type:BOOL.0
	string                           _0x933A49C9;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xD27BF724;                     // type:BOOL.0
	bool                             _0xFF0A94FF;                     // type:BOOL.0
	bool                             _0xB17F975E;                     // type:BOOL.0
	bool                             _0x042FC346;                     // type:BOOL.0
	float                            _0x0CB55234;                     // type:FLOAT.0
	float                            _0x56BF7882;                     // type:FLOAT.0
};

struct _0xDA9A09AE : _0xBA4BE0CB
{
};

struct _0xDAA66F5D : _0xC2A67265
{
	enum eUIHudDisplayModes          Value;                           // type:ENUM.32BIT
};

struct _0xDAA6E71B
{
	map<uint, struct _0xF57272CF>       _0x158F6D9A;                     // type:MAP.ATBINARYMAP
	map<string, struct _0xBF61B263>     _0xD123D0B6;                     // type:MAP.ATBINARYMAP
	uint                                _0x2FE4FA0C;                     // type:UINT.0
};

struct _0xDAA7F5D5
{
	string                           name;                            // type:STRING.ATNSHASHSTRING
	uint64                           startTime;                       // type:UINT64.0
	uint64                           endTime;                         // type:UINT64.0
	bool                             repeatsDaily;                    // type:BOOL.0
};

struct _0xDAA96D9B : _0x906508CE
{
	enum _0x8D8341C5                 _0xF544B9F7;                     // type:ENUM.32BIT
	uint                             _0x2657713E;                     // type:UINT.0
	float                            rate;                            // type:FLOAT.0
	float                            fps;                             // type:FLOAT.0
	bool                             _0x5E5D25AF;                     // type:BOOL.0
};

struct _0xDAC23158 : _0xAB76836B
{
	bool                             ApplyDefault;                    // type:BOOL.0
	string                           Default;                         // type:STRING.ATNONFINALHASHSTRING
	map<string, string>              Dictionary;                      // type:MAP.ATMAP
};

struct _0xDACB86CA
{
	enum _0x580314CC                 CarriedAttachSlot;               // type:ENUM.32BIT
	enum _0xDFD0D503                 CarriableSize;                   // type:ENUM.32BIT
	enum _0x4C293EFA                 StackedCarriableType;            // type:ENUM.32BIT
	string                           BBBodyState;                     // type:STRING.ATNONFINALHASHSTRING
	string                           PreStreamCarryMotion;            // type:STRING.ATNONFINALHASHSTRING
	string                           PreStreamCarryUpperMotion;       // type:STRING.ATNONFINALHASHSTRING
	string                           CarryingClipSet;                 // type:STRING.CONST_STRING
	string                           CarryingAnimationFilter;         // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipSet;                     // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipSetFemale;               // type:STRING.ATNONFINALHASHSTRING
	string                           GripClip;                        // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipShoulder;                // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipFilter;                  // type:STRING.ATNONFINALHASHSTRING
	string                           GripClipFilterShoulder;          // type:STRING.ATNONFINALHASHSTRING
	string                           GripFilterAiming;                // type:STRING.ATNONFINALHASHSTRING
	string                           DesiredCarryingMotionType;       // type:STRING.ATNONFINALHASHSTRING
	string                           DesiredCarryingUpperMotionType;  // type:STRING.ATNONFINALHASHSTRING
	struct _0xB3EF21B5               AttachmentData;                  // type:STRUCT.STRUCTURE
	string                           CarriedClipSet;                  // type:STRING.ATNONFINALHASHSTRING
	string                           CarriedSingleClip;               // type:STRING.ATNONFINALHASHSTRING
	string                           StruggleEscapeClipSet;           // type:STRING.ATNONFINALHASHSTRING
	float                            MoveRateOverride;                // type:FLOAT.0
	float                            MaxMBR;                          // type:FLOAT.0
	float                            CapsuleRadiusOverride;           // type:FLOAT.0
	uint                             NumCarriedEntitiesThreshold;     // type:UINT.0
	uint                             NumStackedVisualEntitiesThreshold; // type:UINT.0
	array<struct _0xB3EF21B5, 2>     StackedAttachmentData;           // type:ARRAY.ATFIXEDARRAY
	int                              NumStackedTrackedEntitiesThreshold; // type:INT.0
	string                           EscapeActionDataSet;             // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xA16F8A90>         Flags;                           // type:BITSET.64BIT
};

struct _0xDADCC046 : _0xAEC2EF8C
{
	string                           _0x5E37E22E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x49039E3A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x38B81B45;                     // type:STRING.ATNONFINALHASHSTRING
	struct fwGetupSetOverride        _0xFA38DABA;                     // type:STRUCT.STRUCTURE
	array<string>                    _0xC330E7FB;                     // type:ARRAY.ATARRAY
	array<enum _0x2A456034>          Situations;                      // type:ARRAY.ATARRAY
	array<enum _0x2A456034>          _0xDCE21ED6;                     // type:ARRAY.ATARRAY
	array<enum _0x2A456034>          _0x271BD10F;                     // type:ARRAY.ATARRAY
	array<struct _0x3795142C>        Motions;                         // type:ARRAY.ATARRAY
	array<struct _0x841F381E>        _0xF15A22EA;                     // type:ARRAY.ATARRAY
	array<struct _0x5828D5EA>        Values;                          // type:ARRAY.ATARRAY
	array<string>                    _0x859E3FD8;                     // type:ARRAY.ATARRAY
	array<string>                    _0x9E81F062;                     // type:ARRAY.ATARRAY
	array<string>                    _0xE39EAF35;                     // type:ARRAY.ATARRAY
	array<struct _0x3AB88B1D>        _0x3A34995A;                     // type:ARRAY.ATARRAY
	array<struct _0x0FC8022E>        BlackboardHashValues;            // type:ARRAY.ATARRAY
	array<struct _0x73FA5646>        BlackboardBoolValues;            // type:ARRAY.ATARRAY
	struct _0x21A3FE39               _0x8F1D522C;                     // type:STRUCT.STRUCTURE
	struct _0xFC5967C7               _0xAE77B385;                     // type:STRUCT.STRUCTURE
	float                            _0xE12DC689;                     // type:FLOAT.0
	float                            _0xA05CB6CD;                     // type:FLOAT.0
	float                            _0xA3E98D0A;                     // type:FLOAT.0
	float                            _0x8AE41494;                     // type:FLOAT.0
	string                           _0x372D6FB6;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x3259F499;                     // type:BOOL.0
	bool                             _0xD8F1F34F;                     // type:BOOL.0
	string                           _0x8E33198C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xDAE09673 : CTuning
{
	struct _0xEEA4EA1D               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xDAEABF97 : CAICondition
{
	enum _0x563FBCEA                 _0x4C8DC44F;                     // type:ENUM.32BIT
	enum _0x563FBCEA                 _0x02652FFB;                     // type:ENUM.32BIT
};

struct _0xDAF00628
{
	array<struct _0xDA2B70D3>        _0xE0E9752E;                     // type:ARRAY.ATARRAY
	array<uchar>                     _0xB8163A30;                     // type:ARRAY.ATARRAY
	float                            _0x7824E6B2;                     // type:FLOAT.0
	float                            _0x914B1902;                     // type:FLOAT.0
	float                            _0x544631DD;                     // type:FLOAT.0
	float                            _0x1F315F7A;                     // type:FLOAT.0
	float                            _0xEB677804;                     // type:FLOAT.0
	float                            _0xA51EE2C8;                     // type:FLOAT.0
	float                            _0x93F316E7;                     // type:FLOAT.0
	bool                             _0x3C397B9C;                     // type:BOOL.0
};

struct _0xDB03A162 : _0x1B26FDB1
{
	string                           Value;                           // type:STRING.ATSTRING
};

struct _0xDB053A15 : _0x8F122E3F
{
	struct _0xBF6AB023               _0xEADD2534;                     // type:STRUCT.STRUCTURE
};

struct _0xDB12012B : CExtensionDef
{
	string                           Id;                              // type:STRING.ATNONFINALHASHSTRING
};

struct _0xDB1689F7
{
	string                           to;                              // type:STRING.ATNONFINALHASHSTRING
	float                            cost;                            // type:FLOAT.0
};

struct _0xDB1D972E
{
	float                            _0x238E7A92;                     // type:FLOAT.0
	float                            _0x6DE82C40;                     // type:FLOAT.0
	float                            _0xEBC8F53B;                     // type:FLOAT.0
	float                            _0xDD4ABC55;                     // type:FLOAT.0
	float                            _0x496FB453;                     // type:FLOAT.0
	float                            _0xB99B48A5;                     // type:FLOAT.0
	float                            _0xDB90B6B4;                     // type:FLOAT.0
	float                            _0x474FB58A;                     // type:FLOAT.0
	float                            _0x9EDDF0AC;                     // type:FLOAT.0
	float                            _0x9F19E583;                     // type:FLOAT.0
	float                            _0x8904970F;                     // type:FLOAT.0
};

struct _0xDB26ED86 : _0x01843326
{
	int                              value;                           // type:INT.0
	int                              _0x12337432;                     // type:INT.0
};

struct _0xDB48D0F8
{
	array<struct _0x2E35FD1E>        boxes;                           // type:ARRAY.ATARRAY
	enum _0x1D9CF1CD                 type;                            // type:ENUM.32BIT
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           owner;                           // type:STRING.ATNONFINALHASHSTRING
	int                              permittedVehicleType;            // type:INT.0
	bool                             startedWithVehicleSavingEnabled; // type:BOOL.0
	bool                             isEnclosed;                      // type:BOOL.0
	bool                             isMPGarage;                      // type:BOOL.0
	char                             InteriorBoxIDX;                  // type:CHAR.0
	char                             ExteriorBoxIDX;                  // type:CHAR.0
};

struct _0xDB55A451 : _0xA57BA3ED
{
	array<struct _0x94D12D71>        Simplices;                       // type:ARRAY.ATARRAY
};

struct _0xDB5F3F9D
{
	array<string, 24>                pathElements;                    // type:ARRAY.ATFIXEDARRAY
};

struct _0xDB671D3F
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            climateWaitMultiplier;           // type:FLOAT.0
	array<struct _0x3DDB6317>        regionInfos;                     // type:ARRAY.ATARRAY
};

struct _0xDB819854 : CBaseSaveObject
{
	array<struct _0xED89B905, 250>     _0xCB9A5AC1;                     // type:ARRAY.ATFIXEDARRAY
	array<struct _0xF2819EC7, 50>      _0x11AA129D;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0xDB87D1A3 : CAICondition
{
};

struct _0xDB9CB655
{
	map<string, enum _0x92A659FE>     _0xAA99BE29;                     // type:MAP.ATBINARYMAP
};

struct _0xDBA405BE
{
	struct _0x658572A5               SingleDoor;                      // type:STRUCT.STRUCTURE
	struct _0x658572A5               DoubleDoor;                      // type:STRUCT.STRUCTURE
};

struct _0xDBC6D960
{
	string                           ptFxAssetName;                   // type:STRING.ATNONFINALHASHSTRING
	array<string>                    _0xE25B01F9;                     // type:ARRAY.ATARRAY
};

struct _0xDBC921F3 : _0x8A0DC979
{
	enum _0x10566484                 Owner;                           // type:ENUM.32BIT
};

struct _0xDBD068C1
{
	float                            _0x06282776;                     // type:FLOAT.0
	float                            _0x4CBEFF57;                     // type:FLOAT.0
	float                            _0xA1A46BC2;                     // type:FLOAT.0
	float                            _0x69477C51;                     // type:FLOAT.0
	float                            _0x40CC0AF1;                     // type:FLOAT.0
	float                            _0xC127D27E;                     // type:FLOAT.0
	float                            _0x60D1CF95;                     // type:FLOAT.0
	float                            _0xD1910A87;                     // type:FLOAT.0
	float                            _0x18F2CD7F;                     // type:FLOAT.0
	bool                             _0x6CE93163;                     // type:BOOL.0
	bool                             _0x02F79030;                     // type:BOOL.0
	bool                             _0x308CEA3C;                     // type:BOOL.0
	bool                             _0x35FAA959;                     // type:BOOL.0
	bool                             _0x7945AC68;                     // type:BOOL.0
	bool                             _0xE8D6FE43;                     // type:BOOL.0
	bool                             _0x28B5DAF0;                     // type:BOOL.0
	bool                             _0x622ACD51;                     // type:BOOL.0
	bool                             _0x462E107B;                     // type:BOOL.0
	bool                             _0x5C17A401;                     // type:BOOL.0
	bool                             _0xA8A4489F;                     // type:BOOL.0
	bool                             _0x6C043B03;                     // type:BOOL.0
	bool                             _0x5CF9D188;                     // type:BOOL.0
	bool                             _0xAA04E08D;                     // type:BOOL.0
	bool                             _0x0EAAEE10;                     // type:BOOL.0
	bool                             _0x9C904911;                     // type:BOOL.0
	bool                             _0xAAFF7D70;                     // type:BOOL.0
	bool                             _0x5A6D81A8;                     // type:BOOL.0
	bool                             _0x9B9CF60B;                     // type:BOOL.0
	bool                             _0xE3BE6F1C;                     // type:BOOL.0
	bool                             _0x512265ED;                     // type:BOOL.0
	bool                             _0xCFF0F7E4;                     // type:BOOL.0
	float                            _0x116CCAB6;                     // type:FLOAT.0
	float                            _0x784A0FB3;                     // type:FLOAT.0
	float                            _0xB1EE2831;                     // type:FLOAT.0
	float                            _0x60280505;                     // type:FLOAT.0
	float                            _0x6CCB8023;                     // type:FLOAT.0
	float                            _0x0FE3F439;                     // type:FLOAT.0
	float                            _0xF579605B;                     // type:FLOAT.0
	float                            _0x5CD23A73;                     // type:FLOAT.0
	bool                             _0x8947B55D;                     // type:BOOL.0
	struct _0x960C1D5F               _0x4E186B5E;                     // type:STRUCT.STRUCTURE
	struct _0x680E643C               MiniGameData;                    // type:STRUCT.STRUCTURE
	bool                             _0x6118B5CD;                     // type:BOOL.0
	int                              _0x4588F676;                     // type:INT.0
	uint                             _0x2A69128E;                     // type:UINT.0
	bool                             _0xA7C7EF11;                     // type:BOOL.0
};

struct _0xDBE022DB : CTuning
{
	int                              _0xA5029E44;                     // type:INT.0
	int                              _0x36637F91;                     // type:INT.0
	int                              _0x2C6F3A1E;                     // type:INT.0
	int                              _0x44EDE190;                     // type:INT.0
	int                              _0xC5D58CC1;                     // type:INT.0
	float                            _0x860A3B24;                     // type:FLOAT.0
	float                            _0xC8B86B16;                     // type:FLOAT.0
	float                            _0xE47DCABF;                     // type:FLOAT.0
	float                            _0x72888806;                     // type:FLOAT.0
	float                            _0xE86DA2EC;                     // type:FLOAT.0
	float                            _0xB95AFA2C;                     // type:FLOAT.0
	int                              _0xE62AEFE1;                     // type:INT.0
	int                              _0xFDE46E13;                     // type:INT.0
	float                            _0x8EDC7E29;                     // type:FLOAT.0
	float                            _0x14CA8E38;                     // type:FLOAT.0
	float                            _0xD7A40874;                     // type:FLOAT.0
	int                              _0x0B7354BD;                     // type:INT.0
};

struct _0xDBE512DA : _0x7F0198A1
{
};

struct _0xDBF077AE
{
	float                            DistanceMin;                     // type:FLOAT.0
	float                            DistanceMax;                     // type:FLOAT.0
	float                            _0x27F0132A;                     // type:FLOAT.0
	float                            _0xC6725BDD;                     // type:FLOAT.0
};

struct _0xDBF1818D : CTuning
{
	bool                             RenderDebugDraw;                 // type:BOOL.0
	vec2                             vScroll;                         // type:VECTOR2.0
	float                            fIndent;                         // type:FLOAT.0
	int                              MaxNumRequestsPerContext;        // type:INT.0
};

struct _0xDC010F64 : _0xA709E487
{
	enum _0xF8B3DF51                 _0x37015220;                     // type:ENUM.32BIT
	float                            value;                           // type:FLOAT.0
};

struct _0xDC064C53
{
	array<string>                    AgedModelHash;                   // type:ARRAY.ATARRAY
	short                            AgingPeriodHours;                // type:SHORT.0
	string                           CorpseVfxInfoHashName;           // type:STRING.ATNONFINALHASHSTRING
	float                            CorpseVfxEvo;                    // type:FLOAT.0
	string                           GroundDecalHashName;             // type:STRING.ATNONFINALHASHSTRING
	float                            GroundDecalWidth;                // type:FLOAT.0
	float                            GroundDecalHeight;               // type:FLOAT.0
	uchar                            GroundDecalColorRed;             // type:UCHAR.0
	uchar                            GroundDecalColorGreen;           // type:UCHAR.0
	uchar                            GroundDecalColorBlue;            // type:UCHAR.0
	uchar                            GroundDecalColorAlpha;           // type:UCHAR.0
};

struct _0xDC10377E : camBaseObjectMetadata
{
};

struct _0xDC14B199
{
	float                            _0x22A0BEB9;                     // type:FLOAT.0
	float                            _0xBC8327C4;                     // type:FLOAT.2
	uint                             _0x95882B15;                     // type:UINT.0
	float                            _0x955F3442;                     // type:FLOAT.0
	float                            _0x1D862E99;                     // type:FLOAT.0
	float                            _0x50A269AB;                     // type:FLOAT.0
	float                            _0x89641CAB;                     // type:FLOAT.0
};

struct _0xDC19ABBE : _0x7E1930E0
{
};

struct _0xDC1CAAAB : _0x3795142C
{
};

struct _0xDC2B8426
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0x9E16AFC8               _0x9A62AC08;                     // type:STRUCT.STRUCTURE
	struct _0xF8C79D37               _0xF4D4A92E;                     // type:STRUCT.STRUCTURE
	struct _0xD0AE15A1               _0x197DAE72;                     // type:STRUCT.STRUCTURE
};

struct _0xDC2EAEC9
{
	float                            Duration;                        // type:FLOAT.0
	float                            VelTolerance2;                   // type:FLOAT.0
	float                            AngVelTolerance2;                // type:FLOAT.0
	float                            InternalVelTolerance2;           // type:FLOAT.0
	int                              MotionlessTicks;                 // type:INT.0
	int                              AsleepTicks;                     // type:INT.0
	float                            WritheRate;                      // type:FLOAT.0
	float                            WritheMagnitude;                 // type:FLOAT.0
	float                            WritheDuration;                  // type:FLOAT.0
	float                            RelaxDuration;                   // type:FLOAT.0
	float                            _0xE71E8EC5;                     // type:FLOAT.0
	float                            _0x378D87A7;                     // type:FLOAT.0
	uint                             _0x1CD017EC;                     // type:UINT.0
	bool                             DisableSelfCollision;            // type:BOOL.0
};

struct _0xDC432819 : _0xFECF2F24
{
};

struct _0xDC63F335
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFACC409B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xDC6D47C7
{
	enum _0x99BEFEED                 AttributeType;                   // type:ENUM.32BIT
};

struct _0xDC7155C9 : _0x3AB6499E
{
	bool                             _0xCF7B626E;                     // type:BOOL.0
	bool                             _0x2561CE8F;                     // type:BOOL.0
	struct _0x62862EE1               _0x62B3A823;                     // type:STRUCT.STRUCTURE
	struct _0x093BE0FB               _0xBF594056;                     // type:STRUCT.STRUCTURE
	float                            _0xE0CB41E1;                     // type:FLOAT.0
	float                            _0x4F0E34B4;                     // type:FLOAT.0
	float                            _0x1DB698D7;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            _0xC426AA5A;                     // type:FLOAT.0
	float                            _0x5D318786;                     // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x4E54228B;                     // type:FLOAT.0
	float                            _0x73B245E2;                     // type:FLOAT.0
	float                            _0x7BBDE5F7;                     // type:FLOAT.0
	float                            _0x5E4D19C1;                     // type:FLOAT.0
	float                            _0x03C3ECAC;                     // type:FLOAT.0
	float                            _0x7EF8425D;                     // type:FLOAT.0
	float                            _0xEFD82736;                     // type:FLOAT.0
	float                            _0xE7A6EB3A;                     // type:FLOAT.0
	float                            _0xA358298B;                     // type:FLOAT.0
	float                            _0x73223F6D;                     // type:FLOAT.0
	float                            MinMBR;                          // type:FLOAT.0
	float                            _0x75179246;                     // type:FLOAT.0
	float                            MaxMBR;                          // type:FLOAT.0
	bool                             _0x6999E73A;                     // type:BOOL.0
	bool                             _0xC4AE1CAD;                     // type:BOOL.0
	float                            _0xFE9ABD25;                     // type:FLOAT.0
	float                            _0x290AF264;                     // type:FLOAT.0
	float                            _0xB9FC34BA;                     // type:FLOAT.0
	float                            _0xC3C38EE3;                     // type:FLOAT.0
	float                            _0xED2E109E;                     // type:FLOAT.0
	float                            _0x9E15FC6B;                     // type:FLOAT.0
	float                            _0xF0DEA028;                     // type:FLOAT.0
	float                            _0x59142A51;                     // type:FLOAT.0
	float                            _0xDCB89249;                     // type:FLOAT.0
	struct _0x969B3D90               _0xF1B19E68;                     // type:STRUCT.STRUCTURE
	struct _0xC02E841A               RollSettings;                    // type:STRUCT.STRUCTURE
	bool                             _0xEFC333FB;                     // type:BOOL.0
	bool                             _0xF8734C0D;                     // type:BOOL.0
	struct _0x7B6D4CCA               PullAroundSettings;              // type:STRUCT.STRUCTURE
	bool                             _0xBE818D8C;                     // type:BOOL.0
	struct _0xF62766EA               _0x8C427004;                     // type:STRUCT.STRUCTURE
	struct _0xE1CDE6F8               _0x0DD446D2;                     // type:STRUCT.STRUCTURE
};

struct _0xDCA36F5B
{
	array<struct _0x6537F8BF>        ClothPoseCollections;            // type:ARRAY.ATARRAY
};

struct _0xDCBEB708 : CTuning
{
	string                           _0xEE2D08AF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAE7AFDD5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x16FFED52;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB7079340;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAA0EB3B4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7FD7778A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x1692EFBF;                     // type:FLOAT.0
	float                            _0xFA74B419;                     // type:FLOAT.0
};

struct _0xDCC06BB8 : _0x1054F746
{
};

struct _0xDCC3E830 : _0x1054F746
{
};

struct _0xDCEADA3A
{
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Update;                          // type:STRUCT.STRUCTURE
	struct CNmTuningSet              OnBalanceFailure;                // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x47E7C6F9;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xBF768993;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Front;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              Back;                            // type:STRUCT.STRUCTURE
};

struct _0xDCEB3D64
{
	array<struct _0x1DB0B13F>        _0xC905ED00;                     // type:ARRAY.ATARRAY
	array<struct _0x1DB0B13F>        _0x4CF239B2;                     // type:ARRAY.ATARRAY
	array<struct _0x1DB0B13F>        _0x37247B9D;                     // type:ARRAY.ATARRAY
	array<struct _0xFC78F052>        Gestures;                        // type:ARRAY.ATARRAY
};

struct _0xDCF772F5
{
	string                           modelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5E64EA3E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE2BDEA7B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xECA6D302;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFBF5C716;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x46B81FF8;                     // type:FLOAT.0
	float                            _0xEC4633A5;                     // type:FLOAT.0
	uint                             _0x535A0BBE;                     // type:UINT.0
	uint                             modelId;                         // type:UINT.0
	bitset<enum _0x38E9EE08>         _0x7D27B1E8;                     // type:BITSET.32BIT
	bool                             _0x153918B6;                     // type:BOOL.0
	bool                             _0x88A76D74;                     // type:BOOL.0
	bool                             _0xC77853E4;                     // type:BOOL.0
	uchar                            _0x129E5ECE;                     // type:UCHAR.0
};

struct _0xDCFE0C5F : CTuning
{
	float                            _0x95A43872;                     // type:FLOAT.0
	float                            _0x971D79F7;                     // type:FLOAT.0
	float                            _0x26C6E8F5;                     // type:FLOAT.0
	float                            _0xC4082DC4;                     // type:FLOAT.0
	float                            _0xF0F1C150;                     // type:FLOAT.0
	float                            _0xAF74E7F4;                     // type:FLOAT.0
};

struct _0xDD0A17E0
{
	float                            _0x9F3FF300;                     // type:FLOAT.2
	float                            DetectionRadius;                 // type:FLOAT.0
	float                            _0xFF184EB7;                     // type:FLOAT.0
	float                            _0xBF688B7C;                     // type:FLOAT.0
	float                            ClipRate;                        // type:FLOAT.0
	uint                             _0x7E6907E2;                     // type:UINT.0
};

struct _0xDD0AC424
{
	string                           LootVehiclePromptSelector;       // type:STRING.ATNONFINALHASHSTRING
	string                           LootVehicleAnimSelector;         // type:STRING.ATNONFINALHASHSTRING
	string                           LootItemsSelector;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0xDD140D06
{
	enum _0x047D513A                 StatType;                        // type:ENUM.32BIT
};

struct _0xDD244EFA : CBaseSaveObject
{
	int64                            _0xA4242260;                     // type:INT64.0
	int64                            _0x965B86CF;                     // type:INT64.0
	int64                            _0x82B905AB;                     // type:INT64.0
	int64                            _0x4CE299FF;                     // type:INT64.0
	bool                             _0x644474D9;                     // type:BOOL.0
};

struct _0xDD3649EF
{
	array<struct _0x9C07E6A0>        _0x344098EF;                     // type:ARRAY.ATARRAY
	array<struct _0xE92D2430>        _0x45EBE658;                     // type:ARRAY.ATARRAY
};

struct _0xDD487738 : CAICondition
{
};

struct _0xDD4F8F77 : _0xAF24E56C
{
};

struct _0xDD5689B8 : _0xAD9BC2D3
{
};

struct _0xDD577259 : _0x8A0DC979
{
	array<string>                    CategoryList;                    // type:ARRAY.ATARRAY
	string                           Title;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xDD64E474
{
	array<uint64, 16384>             Sectors;                         // type:ARRAY.ATRANGEARRAY
};

struct _0xDD6E0168 : CTuning
{
	struct _0x5FEFA1E7               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xDD70AFAD
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	uint                             _0x2ED1BAD1;                     // type:UINT.0
	uint                             _0x545D3F89;                     // type:UINT.0
};

struct _0xDD71C9B4
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x891B2A0F>        transitions;                     // type:ARRAY.ATARRAY
};

struct _0xDD74E211 : _0x3E591342
{
	array<struct _0x9B79B490>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0xDD7D2950
{
	uint                             _0x82651D56;                     // type:UINT.0
};

struct _0xDDB22F19 : _0x2F7DA38D
{
	bitset<enum eAnimFlags>                            _0xBD916EA6;                     // type:BITSET.32BIT
	bitset<enum eIkControlFlags>                       _0xEFECA458;                     // type:BITSET.32BIT
	bitset<enum eTaskAnimationAiFlags>                 _0x1C489B94;                     // type:BITSET.32BIT
	bitset<enum eTaskAnimationPhysicsControlFlags>     _0x3EB4F7B6;                     // type:BITSET.32BIT
	bitset<enum eRagdollBlockingFlags>                 ragdollBlockingFlags;            // type:BITSET.32BIT
	float                                              _0xA4C199B7;                     // type:FLOAT.0
};

struct _0xDDBD388C
{
	uint                             idx;                             // type:UINT.0
	string                           name;                            // type:STRING.ATSTRING
	float                            min;                             // type:FLOAT.0
	float                            max;                             // type:FLOAT.0
	float                            average;                         // type:FLOAT.0
	float                            std;                             // type:FLOAT.0
};

struct _0xDDCE8D63
{
	string                           _0x65C3ECAA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x560BE798;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x597522F4;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Rate;                            // type:FLOAT.0
	string                           _0x95D24415;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x77E90B8C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x71585D1C;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x94BD6AEA               _0x24F45946;                     // type:STRUCT.STRUCTURE
};

struct _0xDDFEF534 : _0x3F0877FF
{
	struct _0x4A7AD954               TargetContext;                   // type:STRUCT.STRUCTURE
};

struct _0xDE13A900
{
	map<string, struct BleedoutProfile>     Profiles;                        // type:MAP.ATBINARYMAP
	struct BleedoutProfile                  DefaultProfile;                  // type:STRUCT.STRUCTURE
};

struct _0xDE202ECD
{
	struct _0xB0980E99               Distances;                       // type:STRUCT.STRUCTURE
	struct _0xBA2E1790               Chances;                         // type:STRUCT.STRUCTURE
};

struct _0xDE30E678 : CTuning
{
	struct _0xF223017D               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xDE396FE2
{
	array<struct _0x85B4C631>        attributes;                      // type:ARRAY.ATARRAY
	array<string>                    attributeValueStringStore;       // type:ARRAY.ATARRAY
	array<struct _0xAEB623D8>        attributeValueVecStore;          // type:ARRAY.ATARRAY
	array<struct _0x01393259>        dataNodes;                       // type:ARRAY.ATARRAY
};

struct _0xDE49C47F
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             index;                           // type:UINT.0
};

struct _0xDE4EE82C : CTuning
{
	struct _0x0F42C539               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xDE4FD4DF : _0x0A510DA9
{
	bool                             _0x49C1307A;                     // type:BOOL.0
};

struct _0xDE5DB4C2
{
	uint                             _0xBAAEE62F;                     // type:UINT.0
	array<struct _0x811C03CF>        PortalInfoList;                  // type:ARRAY.ATARRAY
	array<struct _0x771E3577>        PathNodeList;                    // type:ARRAY.ATARRAY
};

struct _0xDE5F1345
{
	array<struct CCoverPointNode>     CoverPoints;                     // type:ARRAY.ATARRAY
};

struct _0xDE5FF792 : CNmParameterRandomFloat
{
	float                            _0x52DE6F2F;                     // type:FLOAT.0
	float                            _0x0D230339;                     // type:FLOAT.0
};

struct _0xDE62D83B
{
	string                           _0xEBC2B709;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA7B103B2;                     // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                _0xB3AABF84;                     // type:ENUM.32BIT
	vec3                             _0xA0F64103;                     // type:VECTOR3.0
	vec3                             _0x44379C4A;                     // type:VECTOR3.0
	float                            ptFxRange;                       // type:FLOAT.0
	float                            ptFxScale;                       // type:FLOAT.0
	int                              ptFxProbability;                 // type:INT.0
	uchar                            _0x25F1384F;                     // type:UCHAR.0
	uchar                            _0xE5B837DA;                     // type:UCHAR.0
	uchar                            _0x19749F52;                     // type:UCHAR.0
	uchar                            _0x43D7F418;                     // type:UCHAR.0
};

struct _0xDE795AEA : _0x1FB1BCEA
{
	string                           _0x43AC121D;                     // type:STRING.ATSTRING
};

struct _0xDE7B9CD2
{
	string                           name;                            // type:STRING.CONST_STRING
	uint                             hashName;                        // type:UINT.0
};

struct _0xDE91D209 : camCinematicShotMetadata
{
	bool                             _0xFA35B1D3;                     // type:BOOL.0
	bool                             _0x37B2C980;                     // type:BOOL.0
	float                            _0xBB4DE665;                     // type:FLOAT.0
	float                            _0x276C059E;                     // type:FLOAT.0
	float                            ScanRadius;                      // type:FLOAT.0
};

struct _0xDE94E0AC
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            _0x0ED29061;                     // type:FLOAT.0
	float                            _0xE43D854D;                     // type:FLOAT.0
	float                            _0x72443177;                     // type:FLOAT.0
	float                            _0xA50FC0EB;                     // type:FLOAT.0
	bool                             _0xFD90C5F8;                     // type:BOOL.0
	bool                             _0x0546B416;                     // type:BOOL.0
	bool                             _0xD41F8E7D;                     // type:BOOL.0
	bool                             _0xE3A4272D;                     // type:BOOL.0
	bool                             _0xEDD766A7;                     // type:BOOL.0
	bool                             _0xDB277834;                     // type:BOOL.0
	bool                             _0xAFAE23EA;                     // type:BOOL.0
	bool                             noDriver;                        // type:BOOL.0
	float                            _0x1DF246D3;                     // type:FLOAT.0
	array<struct _0xDCF772F5>        _0xAC4A6F4A;                     // type:ARRAY.ATARRAY
	uint                             _0xA400A33A;                     // type:UINT.0
	float                            defaultMaxSpeed;                 // type:FLOAT.0
	float                            maxAcceleration;                 // type:FLOAT.0
	float                            maxDeceleration;                 // type:FLOAT.0
	bool                             _0x0417D23F;                     // type:BOOL.0
};

struct _0xDE99E9ED
{
	enum _0xD9E4FF14                 Type;                            // type:ENUM.32BIT
	uint                             Size;                            // type:UINT.0
	uint                             BulletsPerAnimLoop;              // type:UINT.0
};

struct _0xDE9F6713
{
	array<string>                    _0xCFC358C6;                     // type:ARRAY.ATARRAY
};

struct _0xDEA45D7A
{
	array<struct _0x3EEF38FE>        _0x440E9A1A;                     // type:ARRAY.ATARRAY
	array<struct _0xD6D89E6A>        _0xFCF68FA1;                     // type:ARRAY.ATARRAY
	array<struct _0x1FA256EF>        Attributes;                      // type:ARRAY.ATARRAY
	array<struct _0x7628D401>        _0x2E6480FF;                     // type:ARRAY.ATARRAY
	array<struct _0x77A3CA98>        AttributeStats;                  // type:ARRAY.ATARRAY
	array<struct _0x07477B01>        _0xA32C2FE2;                     // type:ARRAY.ATARRAY
	array<struct _0x58798CD4>        _0x4A8EB2B8;                     // type:ARRAY.ATARRAY
	array<struct _0xA72CDC8B>        _0x9887CB89;                     // type:ARRAY.ATARRAY
	array<struct _0xEBAE5117>        Sets;                            // type:ARRAY.ATARRAY
};

struct _0xDEA74859 : CTuning
{
	struct _0x65E725C0               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xDEB9EDC2
{
	bool                             bChargeTargetEnabled;            // type:BOOL.0
	bool                             _0xC4345FA3;                     // type:BOOL.0
	bool                             _0x3C3FDF61;                     // type:BOOL.0
	uchar                            uMaxNumActiveChargers;           // type:UCHAR.0
	uint                             uCheckForChargeTargetPeriodMS;   // type:UINT.0
	float                            fMinDistanceToTarget;            // type:FLOAT.0
	float                            _0x74CA0A88;                     // type:FLOAT.0
	float                            _0x3B20F91E;                     // type:FLOAT.0
	float                            fMaxDistanceToTarget;            // type:FLOAT.0
	float                            _0x1D0E3D93;                     // type:FLOAT.0
	float                            fMinDistToNonTargetEnemy;        // type:FLOAT.0
	float                            _0x4D10B79A;                     // type:FLOAT.0
	float                            fMinDistBetweenTargetAndOtherEnemies; // type:FLOAT.0
	float                            fDistToHidingTarget_Outer;       // type:FLOAT.0
	float                            fDistToHidingTarget_Inner;       // type:FLOAT.0
	float                            fChargeGoalCompletionRadius;     // type:FLOAT.0
	float                            fCancelTargetOutOfCoverMovedDist; // type:FLOAT.0
	float                            fCancelTargetInCoverMovedDist;   // type:FLOAT.0
	float                            _0xF18E2B73;                     // type:FLOAT.0
	float                            _0xA7EED99C;                     // type:FLOAT.0
	float                            _0x56AAE380;                     // type:FLOAT.0
	float                            TargetInfluenceSphereRadius;     // type:FLOAT.0
	float                            _0x9800C7C0;                     // type:FLOAT.0
};

struct _0xDEC06799
{
	string                           _0x9AC71C4E;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xBEEA6142                 _0xA89A7CD6;                     // type:ENUM.32BIT
	int                              probability;                     // type:INT.0
};

struct _0xDED4C939
{
	bool                             _0x695885D7;                     // type:BOOL.0
	bool                             _0xD8C87F8E;                     // type:BOOL.0
	bool                             _0x01E4885D;                     // type:BOOL.0
	float                            _0x807DE85B;                     // type:FLOAT.0
	float                            _0xC66C0FB0;                     // type:FLOAT.0
	float                            _0x5A6851C2;                     // type:FLOAT.0
	float                            _0xF18F4D3F;                     // type:FLOAT.0
	float                            _0x750CCE7D;                     // type:FLOAT.0
	float                            _0x77FF305B;                     // type:FLOAT.0
	float                            _0xC04A8F21;                     // type:FLOAT.0
	float                            _0x909E89DF;                     // type:FLOAT.0
	float                            _0x59EB6008;                     // type:FLOAT.0
	float                            _0x3C6A878B;                     // type:FLOAT.0
	string                           _0x94586770;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAC83DE41;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEA9A9CF7;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0116CE87;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF8702E2B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC4C7B6E3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x204734D8;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xCAAF0542;                     // type:UINT.0
	uint                             _0xC00A4199;                     // type:UINT.0
	struct _0x510D3B10               _0x6198C1D9;                     // type:STRUCT.STRUCTURE
	struct _0x510D3B10               _0xCE17EE08;                     // type:STRUCT.STRUCTURE
	struct _0x510D3B10               _0xBAB05926;                     // type:STRUCT.STRUCTURE
	vec2                             _0x41BE6629;                     // type:VECTOR2.0
	vec2                             _0xE1A9D9CD;                     // type:VECTOR2.0
	float                            _0x88F78010;                     // type:FLOAT.0
	float                            _0xE169D959;                     // type:FLOAT.0
	float                            _0xAE26C659;                     // type:FLOAT.0
	float                            _0xA8A197CC;                     // type:FLOAT.0
	float                            _0xD6C965CC;                     // type:FLOAT.0
	float                            _0x95C53ED0;                     // type:FLOAT.0
	float                            _0x179CE69F;                     // type:FLOAT.0
	float                            _0xD64B2089;                     // type:FLOAT.0
	float                            _0xD9C62E60;                     // type:FLOAT.0
	float                            _0x0AA87790;                     // type:FLOAT.0
	float                            _0xBA1178EE;                     // type:FLOAT.0
	float                            _0xE29E0F80;                     // type:FLOAT.0
	float                            _0x677EB637;                     // type:FLOAT.0
	float                            _0x091C4E58;                     // type:FLOAT.0
	float                            _0x79FEC164;                     // type:FLOAT.0
	float                            _0x981FB1DB;                     // type:FLOAT.0
	float                            _0x834D2CD7;                     // type:FLOAT.0
	float                            _0x563C74A7;                     // type:FLOAT.0
	float                            _0xE384BEF5;                     // type:FLOAT.0
	string                           _0x7DB15465;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAE6FE734;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x078BD94E>        _0x76D971E3;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x54A298EC;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x0CFECADF;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x7D3AD268;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0x8CBD4031;                     // type:ARRAY.ATARRAY
	float                            _0x204C9F0D;                     // type:FLOAT.0
	float                            _0x810C9050;                     // type:FLOAT.0
	float                            _0x2DE8C4A8;                     // type:FLOAT.0
	float                            _0x097890C1;                     // type:FLOAT.0
	float                            _0x0656505D;                     // type:FLOAT.0
	float                            _0xBB574159;                     // type:FLOAT.0
};

struct _0xDED9D347 : _0xAD9BC2D3
{
};

struct _0xDEDB9DC2 : _0x5C1CB98F
{
};

struct _0xDEDCD1F6 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xDEE32173 : _0xE046EA8D
{
	string                           EntryId;                         // type:STRING.ATSTRING
};

struct _0xDEE924E6 : _0x7EAFD12D
{
	string                           Value;                           // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x3DA8A32D>         LayerFlags;                      // type:BITSET.8BIT
};

struct _0xDF07D765
{
	array<struct _0x17E4C3A6>        _0x6D9031CB;                     // type:ARRAY.ATARRAY
};

struct _0xDF15B723
{
	string                           _0x74AFFDD5;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x50B9BC25                 _0x94ABD449;                     // type:ENUM.32BIT
	enum _0xEE1703D1                 SamplingMode;                    // type:ENUM.32BIT
	uint                             Duration;                        // type:UINT.0
	bool                             _0x8D6B858F;                     // type:BOOL.0
	bool                             _0xF7F47CD3;                     // type:BOOL.0
	bool                             _0x6A2BCC0D;                     // type:BOOL.0
	bool                             _0x5201B6A4;                     // type:BOOL.0
	bool                             _0xA6DEA766;                     // type:BOOL.0
	enum _0xDACF69C7                 _0x09B920BD;                     // type:ENUM.32BIT
	bool                             _0x33E5E207;                     // type:BOOL.0
	bool                             _0xE0FB2D26;                     // type:BOOL.0
	bool                             _0xEEA1A0F5;                     // type:BOOL.0
	float                            _0x75F06D85;                     // type:FLOAT.0
	float                            _0x6B30E172;                     // type:FLOAT.0
	float                            _0xD53F57F1;                     // type:FLOAT.0
	vec2V                            UVScale;                         // type:VEC2V.0
	vec2V                            _0x6B672096;                     // type:VEC2V.0
};

struct _0xDF16C2C5 : CAICondition
{
};

struct _0xDF1838C0 : _0xB8A8B4A7
{
	uchar                            _0xFE418A61;                     // type:UCHAR.0
	uchar                            _0x4A72822D;                     // type:UCHAR.0
	bool                             _0x7DC57D62;                     // type:BOOL.0
};

struct _0xDF1CE1D0
{
	vec3V                            position;                        // type:VEC3V.0
	bitset<enum _0x739A5960>         tags;                            // type:BITSET.32BIT
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           waypointrecording;               // type:STRING.ATNONFINALHASHSTRING
	string                           srl;                             // type:STRING.ATSTRING
};

struct _0xDF31A28C
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0x72274417;                     // type:BOOL.0
};

struct _0xDF3EAEDA
{
	string                           _0xC49A3696;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x853DDDA9;                     // type:STRING.ATNONFINALHASHSTRING
	map<string, string>              _0xC0ADE83F;                     // type:MAP.ATBINARYMAP
	float                            decalWidth;                      // type:FLOAT.0
	float                            decalLength;                     // type:FLOAT.0
	struct _0x9C07C204               _0xED2F5BD7;                     // type:STRUCT.STRUCTURE
	uchar                            _0xFD99F35C;                     // type:UCHAR.0
	uchar                            _0x6F9472F7;                     // type:UCHAR.0
	uchar                            _0xCD1FDB23;                     // type:UCHAR.0
	uchar                            _0x62C90F7F;                     // type:UCHAR.0
	float                            decalLife;                       // type:FLOAT.0
	float                            _0xC9D57669;                     // type:FLOAT.0
	float                            _0xE200FF83;                     // type:FLOAT.0
	float                            _0xE588588A;                     // type:FLOAT.0
	float                            _0xCCACC2FD;                     // type:FLOAT.0
	float                            _0xC20348B2;                     // type:FLOAT.0
	bool                             _0x5960F62B;                     // type:BOOL.0
	bool                             _0x84CAB4BB;                     // type:BOOL.0
	array<struct _0xB1A712DB>        _0x06C03B4C;                     // type:ARRAY.ATARRAY
};

struct _0xDF4CA4D6
{
	bitset<enum _0xD705E99D>         Flags;                           // type:BITSET.8BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0xDF673FC7 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xDF771251
{
	float                            MaxLinearVelocity;               // type:FLOAT.0
	float                            MaxAngularVelocity;              // type:FLOAT.0
	float                            _0x090C6BDA;                     // type:FLOAT.0
	int                              SettledTimeMS;                   // type:INT.0
	bool                             RandomiseSettledTime;            // type:BOOL.0
	int                              SettledTimeMinMS;                // type:INT.0
};

struct _0xDF89AD84 : _0xF487CBEA
{
};

struct _0xDF8EF746 : _0xB88D6BEE
{
};

struct _0xDF90EFDF : _0x8A0DC979
{
};

struct _0xDF970257 : _0xF643E290
{
	string                           _0xA0B13F59;                     // type:STRING.ATSTRING
	float                            startTime;                       // type:FLOAT.0
	float                            endTime;                         // type:FLOAT.0
	float                            blendInDuration;                 // type:FLOAT.0
	float                            blendOutDuration;                // type:FLOAT.0
};

struct _0xDFCD0F7C : _0x2F7DA38D
{
	struct _0xED16C5B0               _0xF565F0A4;                     // type:STRUCT.STRUCTURE
	enum _0xE4B75D55                 eventType;                       // type:ENUM.32BIT
	float                            capsuleLength;                   // type:FLOAT.0
	float                            capsuleRadius;                   // type:FLOAT.0
	float                            _0xEDDC5558;                     // type:FLOAT.0
	float                            _0xFA926EC4;                     // type:FLOAT.0
	float                            _0x852783D0;                     // type:FLOAT.0
	int                              _0xF54E0D3C;                     // type:INT.0
	int                              _0xB68DAF9E;                     // type:INT.0
};

struct _0xDFCEBA83
{
	string                           Species;                         // type:STRING.ATNONFINALHASHSTRING
	enum _0x12673732                 DomesticatedLevel;               // type:ENUM.32BIT
	enum _0x1F439FC3                 _0xE6103B7B;                     // type:ENUM.32BIT
	bool                             _0xB2775BDC;                     // type:BOOL.0
	bool                             _0x85442B0F;                     // type:BOOL.0
	bool                             _0x24AFDD51;                     // type:BOOL.0
	bool                             _0xB2A9FDED;                     // type:BOOL.0
};

struct _0xDFD0D212 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xDFE4E23E : _0xF206AE70
{
	string                           _0x643916D9;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 _0x9F894189;                     // type:ENUM.32BIT
	string                           _0x5058BF1A;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x047D513A                 _0x16061F02;                     // type:ENUM.32BIT
};

struct _0xDFE8BE45 : _0x1054F746
{
};

struct _0xDFED37A7 : _0x5604AFA2
{
};

struct _0xE009FB9A : CTuning
{
	float                            _0xE40620E1;                     // type:FLOAT.0
	float                            _0x44680C57;                     // type:FLOAT.0
	float                            _0x4FD8B5A4;                     // type:FLOAT.0
	float                            _0x488D1FA5;                     // type:FLOAT.0
	float                            _0x00C4F9F9;                     // type:FLOAT.0
	float                            _0x7F9F70B0;                     // type:FLOAT.0
	float                            _0x371EECA8;                     // type:FLOAT.0
	float                            _0xD793A5D3;                     // type:FLOAT.0
	float                            _0x25533A2C;                     // type:FLOAT.0
	float                            _0x7AA25726;                     // type:FLOAT.0
	float                            _0xD17B1D39;                     // type:FLOAT.0
	float                            _0xE5AC9940;                     // type:FLOAT.0
	float                            _0x20E7E9B7;                     // type:FLOAT.0
	float                            _0xA2C889E2;                     // type:FLOAT.0
	float                            _0x27E94285;                     // type:FLOAT.0
	float                            _0xA9F26657;                     // type:FLOAT.0
	float                            _0xBB08B9E4;                     // type:FLOAT.0
	float                            _0x628C7E2A;                     // type:FLOAT.0
	float                            _0x1E49A309;                     // type:FLOAT.0
	float                            _0xCF87C78C;                     // type:FLOAT.0
	float                            _0xBB68051E;                     // type:FLOAT.0
};

struct _0xE00C060C : _0x906508CE
{
	string                           _0xBC5FE248;                     // type:STRING.ATSTRING
	bool                             _0x6FFB467A;                     // type:BOOL.0
	array<uint>                      _0x1A72519A;                     // type:ARRAY.ATARRAY
	uint                             _0x04275AA9;                     // type:UINT.0
	bool                             _0x027C2606;                     // type:BOOL.0
	bool                             _0x66D39219;                     // type:BOOL.0
	bool                             _0xDC9970A1;                     // type:BOOL.0
	bool                             _0x3AE0CBBF;                     // type:BOOL.0
	bool                             _0x45D5BA54;                     // type:BOOL.0
	bool                             _0xCC1F563E;                     // type:BOOL.0
	bool                             _0x64BCA2E3;                     // type:BOOL.0
	bool                             DrawDebug;                       // type:BOOL.0
	bool                             _0x441800A7;                     // type:BOOL.0
	bool                             _0x6F81CF22;                     // type:BOOL.0
};

struct _0xE00E66A5
{
	bitset<enum _0x3F351331>         Flags;                           // type:BITSET.32BIT
	int                              ExtraPinRadiusChannels;          // type:INT.0
};

struct _0xE00FF4EF : _0x8A0DC979
{
};

struct _0xE0127DF5 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x010428B5                 Flag;                            // type:ENUM.32BIT
	bool                             Result;                          // type:BOOL.0
};

struct _0xE012BA6A
{
	float                            BlendInDuration;                 // type:FLOAT.0
	float                            LongerBlendInDuration;           // type:FLOAT.0
	float                            IdleSweepBlendInDuration;        // type:FLOAT.0
	float                            BlendInDurationForHitReact;      // type:FLOAT.0
	float                            IdleSweepBlendInDurationForHitReact; // type:FLOAT.0
	float                            BlendInDurationForReload;        // type:FLOAT.0
	float                            IdleSweepBlendInDurationForReload; // type:FLOAT.0
	float                            BlendInDurationForCarryingAim;   // type:FLOAT.0
	float                            IdleSweepBlendInDurationForCarryingAim; // type:FLOAT.0
	float                            IdleSweepBlendInDurationForWeaponBlocked; // type:FLOAT.0
	float                            BlendInDurationForCover;         // type:FLOAT.0
	float                            BlendInDurationForFPSCover;      // type:FLOAT.0
	float                            BlendInDurationForSoftCover;     // type:FLOAT.0
	float                            BlendInDurationForLocoToAimCrouch; // type:FLOAT.0
	float                            BlendInDurationForFPS;           // type:FLOAT.0
	float                            BlendInDurationForFPSAim;        // type:FLOAT.0
	float                            _0x754F521A;                     // type:FLOAT.0
	float                            BlendInDurationForFishingRod;    // type:FLOAT.0
	float                            IdleSweepBlendInDurationForFishingRod; // type:FLOAT.0
	float                            IdleSweepBlendInDurationForMPMoonshineJug; // type:FLOAT.0
	float                            BlendInDurationForLassoCrouched; // type:FLOAT.0
	float                            IdleSweepBlendInDurationForLassoCrouched; // type:FLOAT.0
};

struct _0xE0141974
{
	float                            DistanceFromSearcherMin;         // type:FLOAT.0
	float                            DistanceFromSearcherMax;         // type:FLOAT.0
	float                            BehindSearcher;                  // type:FLOAT.0
	float                            BehindSearcherDot;               // type:FLOAT.0
	bool                             AssignPOIsSpatially;             // type:BOOL.0
};

struct _0xE01917C6 : _0x2F7DA38D
{
	array<uint>                      _0x59A76E78;                     // type:ARRAY.ATARRAY
	array<uint>                      _0x8B6E9D14;                     // type:ARRAY.ATARRAY
};

struct _0xE026A5B8 : _0xFECF2F24
{
};

struct _0xE040EFBF : _0xA5D4CB80
{
	enum TechSavvy                   TechSavvy;                       // type:ENUM.32BIT
};

struct _0xE04538FE : _0x6992EBA1
{
};

struct _0xE046EA8D : UIBehavior
{
	string                           trigger;                         // type:STRING.ATNONFINALHASHSTRING
	struct _0x0A510DA9               condition;                       // type:STRUCT.POINTER
};

struct _0xE0550FED
{
	array<string>                    LeftHandWeaponHash;              // type:ARRAY.ATARRAY
	array<string>                    RightHandWeaponHash;             // type:ARRAY.ATARRAY
	string                           ResultDualHash;                  // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE0569CBA : SaveChallengeGoalParamBase
{
	struct StatId                    _0x371C022C;                     // type:STRUCT.STRUCTURE
};

struct _0xE06E5C5A : _0x2F7DA38D
{
	float                            _0xB5FE26E4;                     // type:FLOAT.0
	float                            _0x18F6F320;                     // type:FLOAT.0
};

struct _0xE0780CF5 : _0x1054F746
{
};

struct _0xE08E0190 : _0x8A0DC979
{
};

struct _0xE0935F17 : _0x8DCE67A8
{
	string                           _0xBD11A400;                     // type:STRING.ATNSHASHSTRING
	string                           Value;                           // type:STRING.ATHASHVALUE
};

struct _0xE09E76F6 : _0x1DE1294D
{
	enum _0x729D6EED                 Operation;                       // type:ENUM.32BIT
	int                              _0xF5264D00;                     // type:INT.0
};

struct _0xE0A40750 : _0x550DEFDE
{
};

struct _0xE0B1A55C
{
	bool                                            UseMTH;                          // type:BOOL.0
	bitset<enum _0x3B4F6F6C>                        _0x4A624E63;                     // type:BITSET.8BIT
	float                                           _0x7ED7561C;                     // type:FLOAT.0
	int                                             _0x25182CD4;                     // type:INT.0
	float                                           NetworkBlendInDuration;          // type:FLOAT.0
	string                                          _0x2FD1A30A;                     // type:STRING.ATNONFINALHASHSTRING
	string                                          _0xD2128315;                     // type:STRING.ATNONFINALHASHSTRING
	float                                           _0x473BFC77;                     // type:FLOAT.0
	bool                                            _0x133548EC;                     // type:BOOL.0
	bool                                            _0x118204DF;                     // type:BOOL.0
	bool                                            _0x897266EA;                     // type:BOOL.0
	bool                                            _0x167E99D3;                     // type:BOOL.0
	float                                           _0x47F1C6C9;                     // type:FLOAT.0
	float                                           _0x1B267888;                     // type:FLOAT.0
	float                                           _0xFE30920C;                     // type:FLOAT.0
	float                                           _0x75F361FC;                     // type:FLOAT.0
	float                                           _0xF9A6D4CA;                     // type:FLOAT.0
	float                                           _0xF297A5BD;                     // type:FLOAT.0
	bool                                            _0xDECBDF58;                     // type:BOOL.0
	float                                           _0x92DC9225;                     // type:FLOAT.0
	bitset<enum eMovementTransitionHelperFlags>     _0x4F983765;                     // type:BITSET.32BIT
	bitset<enum eMovementTransitionHelperFlags>     _0xFF3BF2EB;                     // type:BITSET.32BIT
	float                                           _0x80FFEB99;                     // type:FLOAT.0
	float                                           _0x0DEDFFE3;                     // type:FLOAT.0
	float                                           _0x9A8FB171;                     // type:FLOAT.0
	float                                           _0x8E40A3E5;                     // type:FLOAT.0
	float                                           _0xA53D148D;                     // type:FLOAT.0
	float                                           _0xA3900763;                     // type:FLOAT.0
	float                                           _0x015E353C;                     // type:FLOAT.0
	float                                           _0x3BABA5A6;                     // type:FLOAT.0
	float                                           _0x6185EF31;                     // type:FLOAT.0
	bool                                            _0xF1CF3A24;                     // type:BOOL.0
};

struct _0xE0B9D3C6 : _0xDE795AEA
{
};

struct _0xE0CA6848 : _0xCEEEEBD6
{
	string                           Input;                           // type:STRING.CONST_STRING
};

struct _0xE0CC4C41 : _0xEA13B60A
{
};

struct _0xE0D8C365 : _0x0FC1398F
{
};

struct _0xE0E6C4D1
{
	float                            _0xAA58D937;                     // type:FLOAT.0
};

struct _0xE0EED39C : _0x1054F746
{
};

struct _0xE0F2B143
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             EnableNewEnter;                  // type:BOOL.0
	bool                             EnableNewExit;                   // type:BOOL.0
	bool                             EnableImgGui;                    // type:BOOL.0
	bool                             EnableDebug;                     // type:BOOL.0
	bool                             CacheDebugResultWhenScanning;    // type:BOOL.0
	bool                             _0x331778A2;                     // type:BOOL.0
	bool                             _0xDA3673C5;                     // type:BOOL.0
	bool                             _0xD559C00F;                     // type:BOOL.0
	bool                             PlayerExclusive;                 // type:BOOL.0
	bool                             AiExclusive;                     // type:BOOL.0
	bool                             _0xE59A4FC2;                     // type:BOOL.0
	float                            FrontSeatEntryPointRadius;       // type:FLOAT.0
	float                            RearSeatEntryPointRadius;        // type:FLOAT.0
	float                            _0xD3E18626;                     // type:FLOAT.0
	float                            DistanceScore;                   // type:FLOAT.0
	float                            DriversSeatScore;                // type:FLOAT.0
	float                            CamFacingScoreModifier;          // type:FLOAT.0
	float                            PedFacingScoreModifier;          // type:FLOAT.0
	float                            _0xE7A800FD;                     // type:FLOAT.0
	float                            _0x60086BB5;                     // type:FLOAT.0
	float                            _0x041B65AF;                     // type:FLOAT.0
	float                            _0xF58036E9;                     // type:FLOAT.0
	float                            _0x9ABB209C;                     // type:FLOAT.0
	float                            _0xA49740C9;                     // type:FLOAT.0
	struct _0x8C701A64               TransportValidatePointIdle;      // type:STRUCT.STRUCTURE
	struct _0x8C701A64               TransportValidatePointFullSpeed; // type:STRUCT.STRUCTURE
	float                            _0xEC990460;                     // type:FLOAT.0
	float                            SubmergeLevelToPreventBoatEntry; // type:FLOAT.0
	float                            _0xBD5A8531;                     // type:FLOAT.0
};

struct _0xE0FD8404 : _0x5C1CB98F
{
	string                           ContextType;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE112D2EE
{
};

struct _0xE1131924
{
	string                           _0x150C7E8B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB726E05E;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE12074F9 : _0xA50A773D
{
	array<float, 2>                  _0x45A60873;                     // type:ARRAY.MEMBER
};

struct _0xE12857D5
{
	struct _0x17DC6876               CoverPoint;                      // type:STRUCT.STRUCTURE
	struct _0x8C89FB16               NavMeshPoint;                    // type:STRUCT.STRUCTURE
	struct _0x72802A8E               Position;                        // type:STRUCT.STRUCTURE
	struct _0xAE460724               Flags;                           // type:STRUCT.STRUCTURE
};

struct _0xE14F555E
{
	float                            _0xA9BC7809;                     // type:FLOAT.0
	float                            _0xD42204AA;                     // type:FLOAT.0
	uint                             _0x131CEE9A;                     // type:UINT.0
	uint                             _0x87642FB8;                     // type:UINT.0
	uint                             _0x748CFA84;                     // type:UINT.0
	uint                             _0xE1284135;                     // type:UINT.0
	float                            _0x0B7C2213;                     // type:FLOAT.2
	float                            _0x2FAD9DC5;                     // type:FLOAT.2
	float                            _0x011C1BC0;                     // type:FLOAT.2
	float                            _0x99EB5426;                     // type:FLOAT.2
	float                            _0x3A55751B;                     // type:FLOAT.2
	struct _0x0181FF7C               Run;                             // type:STRUCT.STRUCTURE
};

struct _0xE15177F9 : _0x5287CB04
{
	uint                             virtualIndex;                    // type:UINT.0
};

struct _0xE1561D2C : CTuning
{
	float                            _0xB5D33F62;                     // type:FLOAT.0
	float                            _0xEAB11F62;                     // type:FLOAT.0
	float                            _0x3C6AF43F;                     // type:FLOAT.0
	uint                             _0x2125EE36;                     // type:UINT.0
};

struct _0xE1588AC1
{
	enum _0x1925B7EA                 PathType;                        // type:ENUM.32BIT
};

struct _0xE15BB414
{
	string                           FlickClip;                       // type:STRING.ATNONFINALHASHSTRING
	float                            Probability;                     // type:FLOAT.0
};

struct _0xE15DCBF5 : _0x270FC240
{
	float                            _0x48222F3C;                     // type:FLOAT.0
	float                            _0xC167C7BF;                     // type:FLOAT.0
	float                            Step;                            // type:FLOAT.0
	float                            _0x7BB2EBB5;                     // type:FLOAT.0
	float                            _0x59077CB2;                     // type:FLOAT.0
	float                            _0x7C820912;                     // type:FLOAT.0
	float                            _0xDC6B9C99;                     // type:FLOAT.0
};

struct _0xE16366F7
{
	float                            MaxVelocity;                     // type:FLOAT.0
	float                            MaxRange;                        // type:FLOAT.0
	float                            _0xC7C9ADEA;                     // type:FLOAT.0
	float                            _0x8C2F4CF5;                     // type:FLOAT.0
	float                            _0xA8802ABA;                     // type:FLOAT.0
	float                            _0x680746E6;                     // type:FLOAT.0
	float                            _0x41F15123;                     // type:FLOAT.0
	float                            _0x404AF47F;                     // type:FLOAT.0
	float                            _0x58C37F15;                     // type:FLOAT.0
	float                            _0x06BD7C88;                     // type:FLOAT.0
	float                            _0x70EB545C;                     // type:FLOAT.0
	float                            _0x4F382D4F;                     // type:FLOAT.0
	float                            _0xB2CA7D4E;                     // type:FLOAT.0
	float                            _0x00E2193D;                     // type:FLOAT.0
};

struct _0xE168479F
{
	array<string>                    pathElements;                    // type:ARRAY.ATARRAY
};

struct _0xE1754E30 : _0x45255C77
{
	struct _0xB4BB0CE3               _0xC6D96D34;                     // type:STRUCT.STRUCTURE
	string                           _0x57F51297;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             Wrap;                            // type:BOOL.0
	bool                             _0x60323A5F;                     // type:BOOL.0
	bool                             _0x11DCAB40;                     // type:BOOL.0
};

struct _0xE1798D8F
{
	float                            fFragmentableMaxWidthGap;        // type:FLOAT.0
	float                            fFragmentableMaxHeightGap;       // type:FLOAT.0
	float                            fSegmentCastLengthPush;          // type:FLOAT.0
	bool                             bJustRemoveAllCoverPonintsOnDamage; // type:BOOL.0
};

struct _0xE18360B3 : _0xFABD9DF5
{
};

struct _0xE184D6C8 : _0x2F7DA38D
{
	array<string>                    tags;                            // type:ARRAY.ATARRAY
};

struct _0xE19E0658 : _0x11AD3051
{
	matrix34V                        matrix;                          // type:MAT34V.0
};

struct _0xE1B0AC6F
{
	float                            BaseRechargeRate;                // type:FLOAT.0
	float                            RechargeSprintingMultiplier;     // type:FLOAT.0
	float                            RechargeRunningMultiplier;       // type:FLOAT.0
	float                            RechargeMeleeMultiplier;         // type:FLOAT.0
	float                            _0xAF6C7D9F;                     // type:FLOAT.0
	float                            _0xEB316C80;                     // type:FLOAT.0
};

struct _0xE1C9B28B : _0x8A0DC979
{
	array<enum rlRosEvents>          Messages;                        // type:ARRAY.ATARRAY
	bool                             _0x84FE9599;                     // type:BOOL.0
	bool                             _0xE9513EC1;                     // type:BOOL.0
	bool                             _0xE8EF3D9C;                     // type:BOOL.0
	bool                             _0x8038E65F;                     // type:BOOL.0
};

struct _0xE1CC4086
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE1CDE6F8
{
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
	float                            _0x0457B25A;                     // type:FLOAT.0
	struct _0x1EEAF6ED               _0x494CD18B;                     // type:STRUCT.STRUCTURE
	struct _0x1EEAF6ED               _0x1AE63ECC;                     // type:STRUCT.STRUCTURE
	struct _0x1EEAF6ED               _0x1995A951;                     // type:STRUCT.STRUCTURE
	struct _0x1EEAF6ED               _0xAED8EDEF;                     // type:STRUCT.STRUCTURE
	struct _0x42FF10F9               _0xA189F393;                     // type:STRUCT.STRUCTURE
	struct _0x42FF10F9               _0x62FC604A;                     // type:STRUCT.STRUCTURE
	struct _0x42FF10F9               _0xAD5BEC4D;                     // type:STRUCT.STRUCTURE
};

struct _0xE1E5FF93 : _0x3712E192
{
};

struct _0xE1FCFE2C : CAICondition
{
};

struct _0xE2102341
{
	bool                             Disable;                         // type:BOOL.0
	float                            Min;                             // type:FLOAT.0
	float                            Target;                          // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            MultiplierForMin;                // type:FLOAT.0
	float                            _0x49ECFF37;                     // type:FLOAT.0
	float                            MultiplierForMax;                // type:FLOAT.0
};

struct _0xE2140A66 : CTuning
{
	float                            TimeBetweenSpawnAttempts;        // type:FLOAT.0
	float                            _0xF64933E8;                     // type:FLOAT.0
};

struct _0xE21CCDFD : _0x32C0AB5B
{
};

struct _0xE21F6188
{
	string                           OwnerName;                       // type:STRING.ATNONFINALHASHSTRING
	vec3V                            Offset;                          // type:VEC3V.0
	vec3V                            Position;                        // type:VEC3V.0
	vec3V                            Normal;                          // type:VEC3V.0
	vec4V                            Rotation;                        // type:VEC4V.0
	float                            CapsuleRadius;                   // type:FLOAT.0
	float                            CapsuleRadius2;                  // type:FLOAT.0
	float                            CapsuleLen;                      // type:FLOAT.0
	float                            CapsuleHalfHeight;               // type:FLOAT.0
	float                            CapsuleHalfWidth;                // type:FLOAT.0
	int                              BoneIndex;                       // type:INT.0
	int                              BoneId;                          // type:INT.0
	int                              UserData1;                       // type:INT.0
	int                              UserData2;                       // type:INT.0
	bool                             IsEnabled;                       // type:BOOL.0
	bool                             IsVehicle;                       // type:BOOL.0
	bool                             IsRing;                          // type:BOOL.0
	bool                             IsMinMax;                        // type:BOOL.0
	bool                             IsForceNameMatch;                // type:BOOL.0
	string                           MetapedTag;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE2206989 : CTuning
{
	struct _0x6E9153A9               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xE2354E46
{
	struct _0x96B34ADF               _0x801B56E0;                     // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               SensesRange;                     // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               IdentificationRangeMin;          // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               IdentificationRange;             // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               ShootRateModifier;               // type:STRUCT.STRUCTURE
	struct _0x96B34ADF               _0x7CAF2165;                     // type:STRUCT.STRUCTURE
	float                            WeaponAccuracyModifierForEvasiveMovement; // type:FLOAT.0
	float                            WeaponAccuracyModifierForOffScreen; // type:FLOAT.0
	float                            WeaponAccuracyModifierForAimedAt; // type:FLOAT.0
	float                            _0x411220FC;                     // type:FLOAT.0
	float                            MinForDrivebys;                  // type:FLOAT.0
	float                            _0x4B9F1AEC;                     // type:FLOAT.0
	float                            _0x1D5D111C;                     // type:FLOAT.0
	float                            _0xB8A707C1;                     // type:FLOAT.0
	float                            _0xB7962C8D;                     // type:FLOAT.0
};

struct _0xE2384B4B
{
	struct _0xE746537D               _0x87C3B6B7;                     // type:STRUCT.STRUCTURE
	struct _0x11DB3A6A               _0x4DCDBCB0;                     // type:STRUCT.STRUCTURE
	struct _0x11DB3A6A               _0x25C9F42B;                     // type:STRUCT.STRUCTURE
};

struct _0xE23CBBDE
{
	int                              Default;                         // type:INT.0
	array<struct _0xC1C3C7A2>        _0xE85319DA;                     // type:ARRAY.ATARRAY
};

struct _0xE245BD1C
{
	struct _0xED16C5B0               _0x84B954E7;                     // type:STRUCT.STRUCTURE
	string                           _0xEE56E9D8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE24A5D09 : _0x1054F746
{
};

struct _0xE24F1888
{
	bool                             Info;                            // type:BOOL.0
	bool                             History;                         // type:BOOL.0
	bool                             Flags;                           // type:BOOL.0
};

struct _0xE261EFC0 : _0xC48C1FCA
{
	string                           mixGroup;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE26873F4 : _0xA57BA3ED
{
	array<struct _0xEA2ED039>        Slices;                          // type:ARRAY.ATARRAY
	array<struct _0x7891D816>        Simplices;                       // type:ARRAY.ATARRAY
};

struct _0xE28711FE : CTuning
{
	float                            _0x54EE1131;                     // type:FLOAT.0
	float                            _0xDE430086;                     // type:FLOAT.0
	float                            _0x80F636D0;                     // type:FLOAT.0
	float                            _0xB244927C;                     // type:FLOAT.0
	float                            _0x88432613;                     // type:FLOAT.0
	float                            _0x838D9023;                     // type:FLOAT.0
	float                            _0x8483ED7D;                     // type:FLOAT.0
	float                            _0x6AC7BDE1;                     // type:FLOAT.0
	float                            _0xBA60477E;                     // type:FLOAT.0
	float                            _0x2207BD23;                     // type:FLOAT.0
};

struct _0xE28C2125
{
	int                              _0xE908795E;                     // type:INT.0
};

struct _0xE28ECBE1
{
	struct _0x8DD60B6F               Weights;                         // type:STRUCT.STRUCTURE
};

struct _0xE2A72CB5
{
	string                           _0x1C1F707B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1E46B1C3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4C96589B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xEA037905;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCDCFA874;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFEA56800;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2A454744;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA5A4080A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE2ADADD9
{
	vec2V                            Position;                        // type:VEC2V.0
	vec2V                            Scale;                           // type:VEC2V.0
	float                            Rotation;                        // type:FLOAT.0
	vec2V                            UVScale;                         // type:VEC2V.0
	vec2V                            _0x6B672096;                     // type:VEC2V.0
	bool                             _0xC9F69291;                     // type:BOOL.0
};

struct _0xE2BC554A
{
	float                            _0xFE582333;                     // type:FLOAT.0
	float                            _0x347C18AE;                     // type:FLOAT.0
	float                            _0xFC242A19;                     // type:FLOAT.0
	float                            _0x6BEE9D64;                     // type:FLOAT.0
};

struct _0xE2DF1F54 : _0x8A0DC979
{
};

struct _0xE2E60A2C
{
	array<short, 3>                  _0x06902932;                     // type:ARRAY.MEMBER
	ushort                           boneId;                          // type:USHORT.0
};

struct _0xE2E752F5 : _0x3795142C
{
};

struct _0xE30C80F3
{
	struct _0x4FA0E646               Sphere;                          // type:STRUCT.STRUCTURE
	struct _0x90EBE89B               Position;                        // type:STRUCT.STRUCTURE
};

struct _0xE3190244
{
	float                            _0x3BB3AC65;                     // type:FLOAT.0
	float                            _0xF4C5D266;                     // type:FLOAT.0
	float                            _0x166EE72D;                     // type:FLOAT.0
	float                            _0x97009DA7;                     // type:FLOAT.0
	float                            HeadIn;                          // type:FLOAT.0
	float                            HeadOut;                         // type:FLOAT.0
	float                            _0x3993F75A;                     // type:FLOAT.0
	float                            _0x885320DF;                     // type:FLOAT.0
	float                            _0x73520AD9;                     // type:FLOAT.0
	float                            _0x4DB434A7;                     // type:FLOAT.0
	float                            _0xA2655F5F;                     // type:FLOAT.0
	float                            _0x9C5E756C;                     // type:FLOAT.0
	float                            _0x7FBA2745;                     // type:FLOAT.0
	float                            _0x7B8F2440;                     // type:FLOAT.0
};

struct _0xE321FA11
{
};

struct _0xE32DFF77
{
	array<struct _0x026B0B35>        OnFootParams;                    // type:ARRAY.ATARRAY
	array<struct _0x026B0B35>        OnMountParams;                   // type:ARRAY.ATARRAY
};

struct _0xE33E5937 : _0xAD9BC2D3
{
	string                           Heading;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Body;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE350956F : _0x1054F746
{
};

struct _0xE360F0CE : _0x476BC347
{
	enum rage__InputGroup            inputGroup;                      // type:ENUM.32BIT
	array<struct _0x9F1EF45E>        _0xB481A8F6;                     // type:ARRAY.ATARRAY
};

struct _0xE362E748 : _0x1619E486
{
	bool                             _0x83E6E9B0;                     // type:BOOL.0
	string                           Scenario;                        // type:STRING.ATNONFINALHASHSTRING
	float                            _0x672EE3CB;                     // type:FLOAT.0
};

struct _0xE365DC6B
{
	string                           WeaponClipSetVariationActionIndex; // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xB8F39486>         Rules;                           // type:BITSET.8BIT
};

struct _0xE36E3BD4 : _0xC9A7A8AC
{
};

struct _0xE374330A
{
	bool                             Apply;                           // type:BOOL.0
	bool                             ScaleWithVelocity;               // type:BOOL.0
	float                            MinVelThreshold;                 // type:FLOAT.0
	float                            MaxVelThreshold;                 // type:FLOAT.0
	float                            MinVelMag;                       // type:FLOAT.0
	float                            MaxVelMag;                       // type:FLOAT.0
	bool                             ScaleWithUpright;                // type:BOOL.0
	bool                             ScaleWithMass;                   // type:BOOL.0
	bool                             ReduceWithPedVelocity;           // type:BOOL.0
	bool                             ReduceWithPedAngularVelocity;    // type:BOOL.0
	bool                             OnlyInContact;                   // type:BOOL.0
	bool                             OnlyNotInContact;                // type:BOOL.0
	float                            ForceMag;                        // type:FLOAT.0
	float                            MinMag;                          // type:FLOAT.0
	float                            MaxMag;                          // type:FLOAT.0
	float                            _0xCC38B7B0;                     // type:FLOAT.0
	int                              Duration;                        // type:INT.0
};

struct _0xE389040A : CTuning
{
	string                           _0x9740E9A2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x86720C2B;                     // type:FLOAT.0
	float                            _0xD398BE4B;                     // type:FLOAT.0
};

struct _0xE396729E : _0xE4042597
{
};

struct _0xE398E671
{
};

struct _0xE3A89511
{
	float                            _0x22D38B45;                     // type:FLOAT.0
	float                            _0x70C7D2ED;                     // type:FLOAT.0
	float                            _0x4F054EA0;                     // type:FLOAT.0
	float                            _0xEF6CB29C;                     // type:FLOAT.0
	float                            _0x90DD908B;                     // type:FLOAT.0
	float                            _0x5C0B6269;                     // type:FLOAT.0
	float                            _0x0769C450;                     // type:FLOAT.0
	float                            _0x18E35A3E;                     // type:FLOAT.0
	float                            _0xB93755D4;                     // type:FLOAT.0
	float                            _0xA418BFA5;                     // type:FLOAT.0
	float                            _0xB319552E;                     // type:FLOAT.0
	float                            _0xFDD99FB8;                     // type:FLOAT.0
	float                            _0x18365D35;                     // type:FLOAT.0
	float                            _0x1476557D;                     // type:FLOAT.0
	float                            _0x10C0C3FB;                     // type:FLOAT.0
	float                            _0x47215DC3;                     // type:FLOAT.0
	float                            _0xB905D967;                     // type:FLOAT.0
	float                            _0x465D7D58;                     // type:FLOAT.0
	float                            _0xF955B7D9;                     // type:FLOAT.0
	float                            _0x320C17AA;                     // type:FLOAT.0
	float                            _0x8EE0EC0A;                     // type:FLOAT.0
	float                            _0xFD305CB9;                     // type:FLOAT.0
	bool                             _0xBEBDBE4D;                     // type:BOOL.0
	string                           _0x6147F1E3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x01A322F9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x11C6BC1F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x636BE79F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9FFC9403;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x41374652;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x35B0F31E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDB5AAD71;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2A8E857C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE3B165C4 : _0x6002A167
{
	string                           ScenarioType;                    // type:STRING.ATNONFINALHASHSTRING
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct _0xE3B3ECBE : CTuning
{
	float                            fExistingTargetScoreWeight;      // type:FLOAT.0
	float                            _0xDC732C3D;                     // type:FLOAT.0
	float                            _0x8F5625D5;                     // type:FLOAT.0
	float                            fTargetingInactiveDisableTime;   // type:FLOAT.0
	float                            fBlockedLosWeighting;            // type:FLOAT.0
	float                            fTimeToIgnoreBlockedLosWeighting; // type:FLOAT.0
	float                            _0xF706B387;                     // type:FLOAT.0
	float                            _0x4479DF2C;                     // type:FLOAT.0
	float                            _0x0ED558E9;                     // type:FLOAT.0
	float                            _0x60A8F2CD;                     // type:FLOAT.0
	uint                             _0xB76D6FFE;                     // type:UINT.0
	float                            fPlayerHighThreatWeighting;      // type:FLOAT.0
	float                            _0x67DADA15;                     // type:FLOAT.0
	float                            _0x9E34E567;                     // type:FLOAT.0
	float                            _0x73E50BB5;                     // type:FLOAT.0
	float                            _0x8333FDF5;                     // type:FLOAT.0
	int                              _0x979FAC12;                     // type:INT.0
	int                              iTargetNotSeenIgnoreTimeMs;      // type:INT.0
	float                            fPlayerDirectThreatDistance;     // type:FLOAT.0
	float                            _0x10F76F5A;                     // type:FLOAT.0
	float                            fPlayerBeingTargetedExtraDistance; // type:FLOAT.0
	int                              iPlayerDirectThreatTimeMs;       // type:INT.0
	float                            _0x53022E3E;                     // type:FLOAT.0
	float                            _0x3A8B5D17;                     // type:FLOAT.0
	float                            _0x24A4B254;                     // type:FLOAT.0
	float                            _0x1BAAFC38;                     // type:FLOAT.0
	float                            _0xCE8AAF08;                     // type:FLOAT.0
	float                            _0xD9DD3750;                     // type:FLOAT.0
	float                            _0xDDC3680D;                     // type:FLOAT.0
	float                            _0x595F7D8C;                     // type:FLOAT.0
	float                            _0xD029CA34;                     // type:FLOAT.0
	float                            _0x9F73FCE9;                     // type:FLOAT.0
	float                            _0x2EF949CE;                     // type:FLOAT.0
	uint                             _0x6B057F8E;                     // type:UINT.0
	float                            _0x662338B5;                     // type:FLOAT.0
	float                            _0x2704AB2A;                     // type:FLOAT.0
	float                            _0xF408C73D;                     // type:FLOAT.0
	float                            _0xE2CA1CC1;                     // type:FLOAT.0
	float                            _0xB5A9B339;                     // type:FLOAT.0
	float                            _0xDDD03ED5;                     // type:FLOAT.0
	float                            _0x27379276;                     // type:FLOAT.0
	float                            _0x87B20B00;                     // type:FLOAT.0
	float                            _0x8853685D;                     // type:FLOAT.0
	float                            _0x18CB90EB;                     // type:FLOAT.0
	float                            _0x1E2129D1;                     // type:FLOAT.0
	float                            _0xC5DA45F1;                     // type:FLOAT.0
	float                            _0x9DE959FE;                     // type:FLOAT.0
	float                            _0xB4B6EEAA;                     // type:FLOAT.0
	float                            _0xDAB1E2FE;                     // type:FLOAT.0
	float                            _0x1F7D9C1D;                     // type:FLOAT.0
	float                            _0xE48C5CA6;                     // type:FLOAT.0
	float                            _0x0F09CC0E;                     // type:FLOAT.0
	float                            _0x3EBEB0A3;                     // type:FLOAT.0
	float                            _0x22DE5A1B;                     // type:FLOAT.0
	float                            _0xDA08D61C;                     // type:FLOAT.0
	float                            _0x636F32B2;                     // type:FLOAT.0
	float                            _0xE0D418D6;                     // type:FLOAT.0
	float                            _0x4ADA0886;                     // type:FLOAT.0
	float                            _0xB4CEAE19;                     // type:FLOAT.0
	float                            _0x6F3B41DF;                     // type:FLOAT.0
	float                            _0x9404CA42;                     // type:FLOAT.0
	float                            _0x47F43F48;                     // type:FLOAT.0
	float                            _0x8E60F717;                     // type:FLOAT.0
	float                            _0x93A00FFE;                     // type:FLOAT.0
	float                            _0x4956A5A9;                     // type:FLOAT.0
	float                            _0x50E1B135;                     // type:FLOAT.0
	float                            _0x871ECE2F;                     // type:FLOAT.0
	float                            _0x0911A3D5;                     // type:FLOAT.0
	float                            _0x2591C688;                     // type:FLOAT.0
	float                            _0x4F2F9B4A;                     // type:FLOAT.0
	float                            _0xF905385D;                     // type:FLOAT.0
	float                            _0x55756545;                     // type:FLOAT.0
	float                            _0x1B04B0E3;                     // type:FLOAT.0
	float                            _0xA5088F79;                     // type:FLOAT.0
	float                            _0xF0E97608;                     // type:FLOAT.0
	float                            _0x184CAF2C;                     // type:FLOAT.0
	float                            _0xC139F597;                     // type:FLOAT.0
	uint                             _0x1D2958FD;                     // type:UINT.0
	float                            _0xCEF05954;                     // type:FLOAT.0
	uint                             _0x731BC8D4;                     // type:UINT.0
};

struct _0xE3B7812A
{
	struct _0xB0E13FA5               AI;                              // type:STRUCT.STRUCTURE
	struct _0xB0E13FA5               Player;                          // type:STRUCT.STRUCTURE
};

struct _0xE3BD169A : _0x23232399
{
};

struct _0xE3C00A41
{
	int                              Index;                           // type:INT.0
	array<struct _0x22712F56>        _0x08E7F0C0;                     // type:ARRAY.ATARRAY
};

struct _0xE3C64D0E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6978C5D6;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xE1E5FF93>        Entries;                         // type:ARRAY.ATARRAY
};

struct _0xE3C88B47 : _0x8A0DC979
{
};

struct _0xE3C9C5BB
{
	string                           ModelName;                       // type:STRING.CONST_STRING
	string                           TuningName;                      // type:STRING.CONST_STRING
};

struct _0xE3CFCA6A
{
	float                            fMinHeightForObstacle;           // type:FLOAT.0
	float                            fMinAngleForObstacle;            // type:FLOAT.0
	float                            fClimbHeightForDrop;             // type:FLOAT.0
	float                            fMinAngleForDrop;                // type:FLOAT.0
	float                            fDropValidationDistance;         // type:FLOAT.0
	float                            fDropValidationMargin;           // type:FLOAT.0
};

struct _0xE3D2C241 : _0x7A3ED03A
{
	bool                             InitialValue;                    // type:BOOL.0
};

struct _0xE4042597
{
	string                           _0x8A944233;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE4067C8D
{
	vec3                             _0x915909D2;                     // type:VECTOR3.0
	int                              _0x14F85541;                     // type:INT.0
	uint                             _0x3D156BB7;                     // type:UINT.0
	float                            _0x0E285989;                     // type:FLOAT.0
	float                            _0x317BBC89;                     // type:FLOAT.0
	float                            _0x953C1568;                     // type:FLOAT.0
	float                            OrbitDistance;                   // type:FLOAT.0
	float                            _0x1900A35D;                     // type:FLOAT.0
	float                            _0xD22E24F0;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
};

struct _0xE409C28E
{
	char                             x;                               // type:CHAR.0
	char                             y;                               // type:CHAR.0
};

struct _0xE40CFEC8
{
	map<string, struct BreakoutClipData>     _0x61F02154;                     // type:MAP.ATBINARYMAP
};

struct _0xE418D55C : _0x8A0DC979
{
};

struct _0xE41B5615 : _0x8A0DC979
{
	enum _0x8F32A217                 RequestType;                     // type:ENUM.32BIT
	bool                             _0xD1A27966;                     // type:BOOL.0
};

struct _0xE4265CCD
{
	float                            FallingDistanceBeforeForciblyDetachingCarriedEntity; // type:FLOAT.0
	string                           CutFreeWeaponHash;               // type:STRING.ATNONFINALHASHSTRING
	float                            ForwardDropDistanceForPrimaryCarryingTask; // type:FLOAT.0
	uint                             LifeTimeAllowedForPropCarriablesInMs; // type:UINT.0
	float                            DeletionDistForPropCarriables;   // type:FLOAT.0
	float                            MaxDistanceToPlayerToPeriodicallyPerformProbes; // type:FLOAT.0
	float                            DistanceToActivateInventoryItemTasks; // type:FLOAT.0
	float                            DistanceToDestroyInventoryItemTasks; // type:FLOAT.0
	float                            HeightAbovePlayerToDisableInventoryItemTasks; // type:FLOAT.0
	float                            GroundToRootOffsetMultiplierHeightDifferenceToDisablePromptForEnter; // type:FLOAT.0
	float                            HoldToUseTime;                   // type:FLOAT.0
	float                            GroundPickupRange;               // type:FLOAT.0
	float                            WaterSurfaceIkFallbackRange;     // type:FLOAT.0
	float                            MinWaterDepthForIkFallback;      // type:FLOAT.0
	float                            _0xCB787002;                     // type:FLOAT.0
	float                            _0x35984293;                     // type:FLOAT.0
	bool                             SwimmingPickupIgnoreFootCycleForMoving; // type:BOOL.0
	bool                             ProcessSwimmingHeadingFixupWhileMoving; // type:BOOL.0
	float                            SwimmingPickupFootCycleAccuracy; // type:FLOAT.0
	float                            SwimmingHeadingFixupRate;        // type:FLOAT.0
	float                            _0x4E5532EB;                     // type:FLOAT.0
	bool                             _0x22013947;                     // type:BOOL.0
	bool                             _0x4D7F20B6;                     // type:BOOL.0
	float                            _0x22375A8F;                     // type:FLOAT.0
	float                            VerticalPromptProbeWorldOffset;  // type:FLOAT.0
	float                            PromptProbeRadius;               // type:FLOAT.0
	enum eAnimBoneTag                LocalPlayerProbeStartBoneId;     // type:ENUM.32BIT
	float                            MinStickMagnitudeForPlayerInputAbort; // type:FLOAT.0
	float                            MinStickHeadingDiffForPlayerInputAbort; // type:FLOAT.0
	float                            PeriodToPerformGroundAndWaterHeightProbes; // type:FLOAT.0
	float                            ReProbeForGroundAndWaterDisplacementTolerance; // type:FLOAT.0
	uint                             MaxNumEnemiesInMeleeCombatForCombatPromptChecks; // type:UINT.0
	float                            MeleeCombatBlockPromptRadius;    // type:FLOAT.0
	float                            LocalPlayerPromptSearchDistance; // type:FLOAT.0
	float                            LocalPlayerPromptSearchDistanceMounted; // type:FLOAT.0
	float                            DefaultFindActionTimeoutAI;      // type:FLOAT.0
	float                            DefaultFindActionTimeoutPlayer;  // type:FLOAT.0
	float                            DefaultReservationTimeOut;       // type:FLOAT.0
	float                            MinTimeTaskRunningToAllowInputAborts; // type:FLOAT.0
	float                            MaxVelocityOfTargetMountForPickupAndPlacePrompts; // type:FLOAT.0
	float                            MaxWaterAboveGroundTolerance;    // type:FLOAT.0
	float                            PromptGroundZTolerancePeds;      // type:FLOAT.0
	float                            PromptGroundZToleranceObjects;   // type:FLOAT.0
	float                            PromptGroundZToleranceReachObjects; // type:FLOAT.0
	float                            PromptGroundZToleranceHorseStowing; // type:FLOAT.0
	float                            PromptGroundZToleranceVehicleSeatStowing; // type:FLOAT.0
	float                            _0x52E434E9;                     // type:FLOAT.0
	float                            _0x18FC5FE5;                     // type:FLOAT.0
	float                            PromptGroundZToleranceCrouching; // type:FLOAT.0
	float                            PromptGroundZToleranceSupportsIKFallbacks; // type:FLOAT.0
	float                            PromptGroundZToleranceInTransportFront; // type:FLOAT.0
	float                            PromptGroundZToleranceInTransportBack; // type:FLOAT.0
	float                            _0x4EC4A974;                     // type:FLOAT.0
	float                            PromptZToleranceSwimming;        // type:FLOAT.0
	float                            _0xD38775DF;                     // type:FLOAT.0
	float                            _0xB0AAA11C;                     // type:FLOAT.0
	float                            _0x910A7F32;                     // type:FLOAT.0
	float                            _0x0B373926;                     // type:FLOAT.0
	bool                             _0xB83AD720;                     // type:BOOL.0
	string                           CarriablePromptTag;              // type:STRING.ATSTRING
	string                           HogtiePromptTag;                 // type:STRING.ATSTRING
	uint                             _0xEFD1CE7A;                     // type:UINT.0
	bool                             _0xDC33D5EC;                     // type:BOOL.0
	struct _0x28CE2FBC               HomingValues;                    // type:STRUCT.STRUCTURE
	bool                             AllowCameraCutFallbacks;         // type:BOOL.0
	bool                             AmbientHumansCarriableWhenDeadByDefault_SP; // type:BOOL.0
	bool                             AmbientHumansCarriableWhenDeadByDefault_MP; // type:BOOL.0
	bool                             DisableGroundDropProbesByDefault; // type:BOOL.0
	bool                             AllowCarriedCollision;           // type:BOOL.0
	bool                             AllowBlockingKnockOffHatShotsFromMovementData; // type:BOOL.0
	bool                             CleanupLastDroppedHatOnRespawnDefault; // type:BOOL.0
	bool                             _0x53686B13;                     // type:BOOL.0
	bool                             _0xF0C51F68;                     // type:BOOL.0
	bool                             AllowVehicleStowsOnOtherPlayersTransport; // type:BOOL.0
	bool                             AllowVehicleSeatStowsOnOtherPlayersTransport; // type:BOOL.0
	bool                             _0x5A5B03EA;                     // type:BOOL.0
	uint                             VehicleStowMaxCollisionWaitTimeMS; // type:UINT.0
	uint                             _0x9735502D;                     // type:UINT.0
	uint                             VehicleStowPostCollisionPedLargeWaitTimeMS; // type:UINT.0
	uint                             VehicleStowPostCollisionPedSmallWaitTimeMS; // type:UINT.0
	uint                             VehicleStowPostCollisionPedDefaultWaitTimeMS; // type:UINT.0
	uint                             VehicleStowPostCollisionDefaultWaitTimeMS; // type:UINT.0
	uint                             _0x5C6BD831;                     // type:UINT.0
	float                            fVehicleStowPtFxSizeLarge;       // type:FLOAT.0
	float                            fVehicleStowPtFxSizeMedium;      // type:FLOAT.0
	float                            fVehicleStowPtFxSizeSmall;       // type:FLOAT.0
	string                           _0x8D650B27;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xF4982367;                     // type:BOOL.0
	bool                             _0xC4C0C041;                     // type:BOOL.0
	uint                             _0x1A949F93;                     // type:UINT.0
	float                            _0x229682F4;                     // type:FLOAT.0
	float                            _0xC96D2D6B;                     // type:FLOAT.0
	float                            _0xE6A4DC73;                     // type:FLOAT.0
	bool                             SpecialMultipleAttachmentAbilityEnabled; // type:BOOL.0
	bool                             AllowHogtieOfKnockedOutPedsByDefault; // type:BOOL.0
	string                           HorseSideAttachSlotMetaPedAssetTag; // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x5B9107C4;                     // type:UINT.0
	bool                             SkipIntoMidActionForCurrentPositionFallbacksEnabled; // type:BOOL.0
	float                            SkipIntoMidActionMTHBlendDuration; // type:FLOAT.0
	float                            DefaultSkipIntoMidActionFromParentBlendInPhase; // type:FLOAT.0
	float                            DefaultSkipIntoMidActionBlendInPhase; // type:FLOAT.0
	float                            _0xDCA9C974;                     // type:FLOAT.0
	float                            DefaultPickupFromGrabBlendInPhase; // type:FLOAT.0
	string                           GrabDefaultLeftClipSetId;        // type:STRING.ATNONFINALHASHSTRING
	string                           GrabDefaultLeftClipId;           // type:STRING.ATNONFINALHASHSTRING
	float                            GrabDefaultLeftGripPhase;        // type:FLOAT.0
	string                           GrabDefaultRightClipSetId;       // type:STRING.ATNONFINALHASHSTRING
	string                           GrabDefaultRightClipId;          // type:STRING.ATNONFINALHASHSTRING
	float                            GrabDefaultRightGripPhase;       // type:FLOAT.0
	bool                             GrabUseTaskGrabAttachmentFixup;  // type:BOOL.0
	float                            _0x7F5F5DD9;                     // type:FLOAT.0
	float                            _0x4467D0EC;                     // type:FLOAT.0
	float                            _0x729FCA75;                     // type:FLOAT.0
	float                            _0xB4951BCA;                     // type:FLOAT.0
	float                            _0x542F713E;                     // type:FLOAT.0
	string                           DefaultPickupPromptHoldDuration; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultThrowPromptHoldDuration;  // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultPlaceOnParentPromptHoldDuration; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultPickupFromParentPromptHoldDuration; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultMercyKillPromptHoldDuration; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultHogtiePromptHoldDuration; // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultCutfreePromptHoldDuration; // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1257F0B9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB233B0D6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6DCC29F6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0BA73C47;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x655A548F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x81DCFE38;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             ShowDisabledPromptsFromActiveTasks; // type:BOOL.0
	bool                             WeaponMustBeEquippedForHogtiePromptForKnockedOutTarget; // type:BOOL.0
	vec3V                            DefaultLongArmBackCorrection;    // type:VEC3V.0
	vec3V                            DefaultLongArmBackTransCorrection; // type:VEC3V.0
	vec3V                            DefaultBowBackCorrection;        // type:VEC3V.0
	vec3V                            DefaultBowBackTransCorrection;   // type:VEC3V.0
	vec3V                            DefaultLongArmShldCorrection;    // type:VEC3V.0
	vec3V                            DefaultLongArmShldTransCorrection; // type:VEC3V.0
	vec3V                            DefaultBowShldCorrection;        // type:VEC3V.0
	vec3V                            DefaultBowShldTransCorrection;   // type:VEC3V.0
	vec3V                            MediumLongArmBackCorrection;     // type:VEC3V.0
	vec3V                            MediumLongArmBackTransCorrection; // type:VEC3V.0
	vec3V                            MediumBowBackCorrection;         // type:VEC3V.0
	vec3V                            MediumBowBackTransCorrection;    // type:VEC3V.0
	vec3V                            MediumLongArmShldCorrection;     // type:VEC3V.0
	vec3V                            MediumLongArmShldTransCorrection; // type:VEC3V.0
	vec3V                            MediumBowShldCorrection;         // type:VEC3V.0
	vec3V                            MediumBowShldTransCorrection;    // type:VEC3V.0
	float                            ForcedFirstPersonLookAngleInDegrees; // type:FLOAT.0
	float                            GrossPoseMatcherDistanceThresholdToTriggerFallback; // type:FLOAT.0
	float                            DiffFromInitialPoseMatcherDistanceChangeThresholdToTriggerFallback; // type:FLOAT.0
	float                            _0xD28875FF;                     // type:FLOAT.0
};

struct _0xE42E7067 : _0x14229900
{
};

struct _0xE44EB193 : _0x6B233B47
{
	string                           _0xBFBCFD5B;                     // type:STRING.ATHASHVALUE
	string                           _0xC357A81A;                     // type:STRING.ATHASHVALUE
	struct _0x936F849B               _0xAB735DB3;                     // type:STRUCT.STRUCTURE
};

struct _0xE453720A
{
};

struct _0xE4612B16
{
	float                            _0xC599319A;                     // type:FLOAT.0
	float                            _0xBC888EC9;                     // type:FLOAT.0
};

struct _0xE466D6E3 : _0xAE1C5728
{
};

struct _0xE48F08AC
{
	string                           key;                             // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x9FAEA6A0>        items;                           // type:ARRAY.ATARRAY
};

struct _0xE48F7859
{
	struct CCoverPointNode           _0x89F1605A;                     // type:STRUCT.STRUCTURE
	string                           SwapName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE4ADC2EA : _0xA298EB03
{
	struct _0x8A0DC979               InnerState;                      // type:STRUCT.POINTER
};

struct _0xE4AECA2C
{
};

struct _0xE4AEE827
{
	string                           _0xEC4D64C5;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x63119014;                     // type:FLOAT.0
	string                           _0xF337EF5A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x182F2EB7;                     // type:FLOAT.0
};

struct _0xE4B2C178 : _0x7EAFD12D
{
	ushort                           DelayTimeMS;                     // type:USHORT.0
	ushort                           FadeTimeMS;                      // type:USHORT.0
	bool                             FadeIn;                          // type:BOOL.0
	bool                             RemoveOnFadeOut;                 // type:BOOL.0
};

struct _0xE4C50D6A
{
	map<string, struct _0x5F498DEB>     Group;                           // type:MAP.ATBINARYMAP
};

struct _0xE4D932E8
{
	enum _0x12673732                 DomesticatedLevel;               // type:ENUM.32BIT
	enum _0xE0D62D76                 RarityLevel;                     // type:ENUM.32BIT
	array<struct _0x6CDB42AF>        _0xBBA22F8B;                     // type:ARRAY.ATARRAY
	string                           AnimalTuning;                    // type:STRING.ATNONFINALHASHSTRING
	string                           _0x74C79640;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE4DC25D5
{
	bool                             Allow;                           // type:BOOL.0
	bool                             Block;                           // type:BOOL.0
};

struct _0xE4E3FAC7
{
	struct _0x96B34ADF               TimeBetweenSpawnAttemptsModifier; // type:STRUCT.STRUCTURE
};

struct _0xE4E56AD7 : CAICondition
{
	enum _0x563FBCEA                 PlayerPed;                       // type:ENUM.32BIT
};

struct _0xE4E943D9
{
	float                            _0xC557376B;                     // type:FLOAT.0
	float                            _0x77CB288B;                     // type:FLOAT.0
	float                            _0x06F07E25;                     // type:FLOAT.0
	float                            _0xE296DD75;                     // type:FLOAT.0
	float                            _0x5D76C481;                     // type:FLOAT.0
	float                            _0xC365A80E;                     // type:FLOAT.0
	float                            _0x4FDAC417;                     // type:FLOAT.0
	float                            _0x771E2A6F;                     // type:FLOAT.0
	float                            _0xCDB70316;                     // type:FLOAT.0
	float                            _0xE342C1EF;                     // type:FLOAT.0
	float                            _0x0DABDDF2;                     // type:FLOAT.0
	float                            _0x38648122;                     // type:FLOAT.0
	float                            _0xAEA51B80;                     // type:FLOAT.0
	float                            _0xDB1D05DC;                     // type:FLOAT.0
	float                            _0x2FDBACAE;                     // type:FLOAT.0
	array<array<bool, 6>, 6>         _0x22FAA627;                     // type:ARRAY.ATRANGEARRAY
	bool                             _0x2B32F173;                     // type:BOOL.0
	bool                             _0x22652DC8;                     // type:BOOL.0
	bool                             _0xB09F657A;                     // type:BOOL.0
	bool                             _0xA967D061;                     // type:BOOL.0
	enum _0x10FDB33B                 CameraMode;                      // type:ENUM.32BIT
};

struct _0xE4EFC15E
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MinSpeed;                        // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
	float                            _0xFCEC4055;                     // type:FLOAT.0
	float                            _0xE38FEAAC;                     // type:FLOAT.0
	float                            _0xBAA5414E;                     // type:FLOAT.0
	float                            _0x9E19CB6E;                     // type:FLOAT.0
	float                            _0x1C30720E;                     // type:FLOAT.0
	float                            _0x9B3B8A54;                     // type:FLOAT.0
};

struct _0xE51C0F55
{
	ushort                           Count;                           // type:USHORT.0
	array<struct _0xE409C28E, 6>     Points;                          // type:ARRAY.MEMBER
};

struct _0xE51C662E : CTuning
{
	float                            _0x67CD16C7;                     // type:FLOAT.0
	float                            _0xB10CD9A2;                     // type:FLOAT.0
	float                            _0x36E88E51;                     // type:FLOAT.0
	float                            maxReverseSpeed;                 // type:FLOAT.0
	float                            _0xF10EDD08;                     // type:FLOAT.0
	float                            _0xE06387F5;                     // type:FLOAT.0
	float                            maxPitchAngle;                   // type:FLOAT.0
	float                            _0x5C5F1E0A;                     // type:FLOAT.0
	float                            _0xE78FEC69;                     // type:FLOAT.0
	float                            _0x42BEF282;                     // type:FLOAT.0
};

struct _0xE521CAA8
{
	string                           Target;                          // type:STRING.CONST_STRING
	struct _0xF42FB8D1               LinkType;                        // type:STRUCT.POINTER
	bool                             Immediate;                       // type:BOOL.0
	bool                             Interruptible;                   // type:BOOL.0
	enum _0x76062AE3                 LinkInfo;                        // type:ENUM.32BIT
};

struct _0xE524C09C
{
	array<float, 8>                  weights;                         // type:ARRAY.MEMBER
	array<int, 8>                    blendIndices;                    // type:ARRAY.MEMBER
};

struct _0xE531D75E
{
	string                           NameHash;                        // type:STRING.ATNONFINALHASHSTRING
	array<string>                    ContentChangeSets;               // type:ARRAY.ATARRAY
};

struct _0xE53B71BF
{
	struct _0x50BCC853                  _0x5A2A255A;                     // type:STRUCT.STRUCTURE
	map<string, struct _0x2EFB7E78>     _0x71191E39;                     // type:MAP.ATBINARYMAP
};

struct _0xE5437D38 : _0xEE278025
{
};

struct _0xE544CAA4 : CTuning
{
	struct CNmTuningSet              Start;                           // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0x7EB91512;                     // type:STRUCT.STRUCTURE
	struct CNmTuningSet              _0xDE482D34;                     // type:STRUCT.STRUCTURE
	float                            _0xB038BE78;                     // type:FLOAT.0
	float                            _0x661F4314;                     // type:FLOAT.0
	float                            _0x878451E3;                     // type:FLOAT.0
	float                            _0x7D5959C5;                     // type:FLOAT.0
	uint                             _0x05977796;                     // type:UINT.0
	uint                             _0x87D62946;                     // type:UINT.0
	uint                             _0x32D1C6F8;                     // type:UINT.0
	uint                             _0xC0817E23;                     // type:UINT.0
	bool                             _0xEAC70FFD;                     // type:BOOL.0
};

struct _0xE546CDF1 : _0x3DA511E4
{
	bool                             ToggleValue;                     // type:BOOL.0
};

struct _0xE5588C18
{
	string                           Name;                            // type:STRING.ATSTRING
	float                            _0x1136A36E;                     // type:FLOAT.0
	float                            _0x140DA4EC;                     // type:FLOAT.0
	float                            _0x8D6B0AA1;                     // type:FLOAT.0
	float                            _0xD4583314;                     // type:FLOAT.0
	float                            _0xA4AE7F05;                     // type:FLOAT.0
	float                            _0xF6E44B9A;                     // type:FLOAT.0
	float                            _0x41338DCC;                     // type:FLOAT.0
	float                            Translucency;                    // type:FLOAT.0
	float                            _0xB493C803;                     // type:FLOAT.0
	float                            _0xC00C4082;                     // type:FLOAT.0
	float                            _0x2BE1F2D7;                     // type:FLOAT.0
	float                            _0xA0DEFFEA;                     // type:FLOAT.0
	float                            _0x68492E42;                     // type:FLOAT.0
	float                            _0x829A4A6C;                     // type:FLOAT.0
	float                            _0x0EB9ADFC;                     // type:FLOAT.0
	float                            _0x1860ABBE;                     // type:FLOAT.0
	float                            _0x9C919823;                     // type:FLOAT.0
	float                            _0x7E62C82C;                     // type:FLOAT.0
	float                            _0x78997194;                     // type:FLOAT.0
	float                            _0xBDA747F5;                     // type:FLOAT.0
	float                            _0x9B6A6B73;                     // type:FLOAT.0
	vec3                             _0x6060CC93;                     // type:VECTOR3.1
	vec3                             _0x899EE1C7;                     // type:VECTOR3.1
	vec3                             _0xD15C8834;                     // type:VECTOR3.1
	vec3                             _0x600F324F;                     // type:VECTOR3.1
	string                           _0xBAD8B5FB;                     // type:STRING.ATSTRING
	int                              _0x6D34313D;                     // type:INT.0
	bool                             _0x6605AA89;                     // type:BOOL.0
	bool                             _0xF3E89086;                     // type:BOOL.0
	bool                             _0xF61F15F0;                     // type:BOOL.0
	string                           GUID;                            // type:STRING.ATSTRING
	string                           _0x7C0A1617;                     // type:STRING.ATSTRING
	array<string>                    _0xA039A93A;                     // type:ARRAY.ATARRAY
	array<string>                    Images;                          // type:ARRAY.ATARRAY
	array<string>                    Tags;                            // type:ARRAY.ATARRAY
	string                           _0xEFB35CFC;                     // type:STRING.ATSTRING
	bool                             _0xF2A84063;                     // type:BOOL.0
};

struct _0xE558F5F2
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x9166BAB3>        elements;                        // type:ARRAY.ATARRAY
};

struct _0xE55B66F7 : UIContainer
{
};

struct _0xE55F63FA : _0x5604AFA2
{
};

struct _0xE56AD047
{
	map<string, struct _0x9B8C003A>     Responses;                       // type:MAP.ATBINARYMAP
	map<string, struct _0xD61B896E>     ParamSets;                       // type:MAP.ATBINARYMAP
};

struct _0xE56C574B : _0xB74AC865
{
};

struct _0xE57A50A7 : _0xAB76836B
{
};

struct _0xE57D3394
{
	vec3V                            rotationXYZ;                     // type:VEC3V.0
	float                            fieldOfView;                     // type:FLOAT.0
	bool                             isInGameCamera;                  // type:BOOL.0
};

struct _0xE57DD5FD
{
	array<string>                    BlockedSeatsArray;               // type:ARRAY.ATARRAY
	array<string>                    BlockedEntryPointsArray;         // type:ARRAY.ATARRAY
	string                           propSetName;                     // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0xF575C67D>         requiredExtras;                  // type:BITSET.32BIT
	bitset<enum _0xF575C67D>         disabledExtras;                  // type:BITSET.32BIT
	enum _0xBEEA6142                 attachedBone;                    // type:ENUM.32BIT
	vec3                             attachedOffset;                  // type:VECTOR3.0
	string                           constrainedMovementVolumeHash;   // type:STRING.ATNONFINALHASHSTRING
	float                            spawnDistance;                   // type:FLOAT.0
	int                              requiredNumberOfOccupants;       // type:INT.0
	bool                             missionOnly;                     // type:BOOL.0
};

struct _0xE590D343 : _0x906508CE
{
	bool                             _0xCB4861BA;                     // type:BOOL.0
	string                           _0x4BF77BB2;                     // type:STRING.ATSTRING
	string                           _0x34732369;                     // type:STRING.ATSTRING
	array<string>                    _0x0A304377;                     // type:ARRAY.ATARRAY
};

struct _0xE5A7D184
{
	string                             Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct CAmbientModelVariations     Variations;                      // type:STRUCT.POINTER
};

struct _0xE5AA2C77
{
	uint                             idx;                             // type:UINT.0
	string                           name;                            // type:STRING.ATSTRING
	uint                             min;                             // type:UINT.0
	uint                             max;                             // type:UINT.0
	uint                             average;                         // type:UINT.0
	float                            std;                             // type:FLOAT.0
};

struct _0xE5B7A9F2 : CExtensionDef
{
	array<struct _0xA11E83E5>        _0x4DC20166;                     // type:ARRAY.ATARRAY
};

struct _0xE5BCA1D8 : _0x20F87B1F
{
	array<struct SaveChallengeGoal>     _0x56E0543B;                     // type:ARRAY.ATARRAY
};

struct _0xE5C73AD7 : CAICondition
{
};

struct _0xE5EEA70B
{
	vec4V                            CustomOffset;                    // type:VEC4V.0
	struct _0x8B627479               QuickPedVarData;                 // type:STRUCT.STRUCTURE
	struct _0x8B627479               LongPedVarData;                  // type:STRUCT.STRUCTURE
};

struct _0xE5F4E230
{
	float                            _0xD1AA043A;                     // type:FLOAT.0
	float                            _0x816C8B98;                     // type:FLOAT.0
	float                            _0xE2B7C6EE;                     // type:FLOAT.0
	float                            _0x0B28CE6F;                     // type:FLOAT.0
};

struct _0xE5F5FFF7 : CTuning
{
	bool                             _0xA0FCA533;                     // type:BOOL.0
	bool                             _0xBEB12D3A;                     // type:BOOL.0
	float                            _0x48654DF4;                     // type:FLOAT.0
};

struct _0xE6116337
{
	enum _0x6BCA108F                 _0xCF76EDCD;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x41177223;                     // type:ENUM.32BIT
	enum _0x6BCA108F                 _0x5595F4D4;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x932FA771;                     // type:ENUM.32BIT
};

struct _0xE62F2784
{
	float                            _0xC7373839;                     // type:FLOAT.0
	float                            Constant;                        // type:FLOAT.0
	float                            Damping;                         // type:FLOAT.0
};

struct _0xE6398DCF
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           txdName;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ovalTexName;                     // type:STRING.ATNONFINALHASHSTRING
	string                           rectTexName;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x02D87B28                 renderType;                      // type:ENUM.32BIT
	vec4V                            layersIntensity;                 // type:VEC4V.0
	float                            alphaScale;                      // type:FLOAT.0
	float                            invertAlpha;                     // type:FLOAT.0
	float                            alphaThreshold;                  // type:FLOAT.0
	float                            alphaPush;                       // type:FLOAT.0
	float                            hudMapAlphaPush;                 // type:FLOAT.0
	float                            edgeBasedAlphaRadius;            // type:FLOAT.0
	float                            edgeBasedAlphaFadeLength;        // type:FLOAT.0
	float                            screenSpaceEdgeMinZoom;          // type:FLOAT.0
	bool                             screenSpaceEdgeFade;             // type:BOOL.0
	float                            numAlphaLevels;                  // type:FLOAT.0
	float                            coverageScale;                   // type:FLOAT.0
	float                            rectSliceSize;                   // type:FLOAT.0
	bool                             rectInvertSliceDirection;        // type:BOOL.0
	float                            rectMinRandomRotation;           // type:FLOAT.0
	float                            rectMaxRandomRotation;           // type:FLOAT.0
	vec2V                            rectMinRandomScale;              // type:VEC2V.0
	vec2V                            rectMaxRandomScale;              // type:VEC2V.0
};

struct _0xE639FCC4 : _0x7E1930E0
{
};

struct _0xE63AC5D8
{
	map<string, struct _0xF61A731C>     WeaponHoldingDataByMotionType;   // type:MAP.ATBINARYMAP
};

struct _0xE6481AFF : _0x1054F746
{
};

struct _0xE65BF5A5 : _0x3AB6499E
{
	float                            _0xF00526EE;                     // type:FLOAT.0
	float                            _0xECF0B890;                     // type:FLOAT.0
	float                            _0xA493009B;                     // type:FLOAT.0
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
	float                            _0xF1705CC0;                     // type:FLOAT.0
	uint                             _0x4B09B05A;                     // type:UINT.0
	float                            _0x4A94227B;                     // type:FLOAT.0
	float                            _0x63BC1B81;                     // type:FLOAT.0
	float                            _0x5D3C5BC5;                     // type:FLOAT.0
	enum _0x0100F80E                 _0x3D2AF243;                     // type:ENUM.32BIT
	enum _0x0100F80E                 _0x68E9725C;                     // type:ENUM.32BIT
	vec3                             _0xAECE3E51;                     // type:VECTOR3.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
	float                            _0x9095DBEF;                     // type:FLOAT.0
	array<string>                    _0xC217C732;                     // type:ARRAY.ATARRAY
	float                            _0x59C3B084;                     // type:FLOAT.0
};

struct _0xE67FC385 : CAICondition
{
};

struct _0xE68C3AE7
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0xEB10540E                 _0x02597130;                     // type:ENUM.32BIT
	int                              _0xB418AED2;                     // type:INT.0
	float                            _0x8241FBE6;                     // type:FLOAT.0
	float                            _0x7F1E2571;                     // type:FLOAT.0
	int                              _0x2A68AA41;                     // type:INT.0
	int                              _0xDA4C2B4C;                     // type:INT.0
	float                            _0xBD1A54BE;                     // type:FLOAT.0
	float                            _0xD863113E;                     // type:FLOAT.0
	int                              _0x19B87F15;                     // type:INT.0
	float                            _0xF291D1EA;                     // type:FLOAT.0
	float                            alphaScale;                      // type:FLOAT.0
	bitset<enum _0x2CB1DFBB>         _0xB6A8A28C;                     // type:BITSET.32BIT
	bool                             _0x79AE0788;                     // type:BOOL.0
	bool                             _0xEDA93695;                     // type:BOOL.0
};

struct _0xE6BB869D : _0x032DA011
{
	bool                             _0xB451553E;                     // type:BOOL.0
	struct _0xBF2BD132               _0xBBB9EBAD;                     // type:STRUCT.STRUCTURE
	struct _0xBF2BD132               _0x310B481E;                     // type:STRUCT.STRUCTURE
};

struct _0xE7263587 : _0x22C375A7
{
	struct uiScreenInputCodeEventOperation       CodeEventOp;                     // type:STRUCT.SIMPLE_POINTER
	struct uiScreenInputScriptEventOperation     ScriptEventOp;                   // type:STRUCT.SIMPLE_POINTER
};

struct _0xE737C8F9 : _0xDFED37A7
{
};

struct _0xE746537D
{
	enum _0x7421E3A9                 _0xF08CAF9B;                     // type:ENUM.32BIT
	enum _0x88D3C30C                 _0xC50DB96C;                     // type:ENUM.32BIT
	enum _0x365EB1E5                 _0x07EDF821;                     // type:ENUM.32BIT
};

struct _0xE75F7EBC : _0x2F7DA38D
{
	struct _0xED16C5B0               Prop;                            // type:STRUCT.STRUCTURE
	struct _0xED16C5B0               Ped;                             // type:STRUCT.STRUCTURE
};

struct _0xE76652D2
{
	float                            _0x6209C760;                     // type:FLOAT.0
	float                            _0xA197F912;                     // type:FLOAT.0
};

struct _0xE7682A04 : _0x3AB6499E
{
	string                           _0x7A5363B6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5498A041;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8EFA7B7F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD8D8E62D;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x87EB394F;                     // type:FLOAT.0
	float                            _0xA6396808;                     // type:FLOAT.0
	float                            _0xE76EEE81;                     // type:FLOAT.0
	float                            _0x64B749C1;                     // type:FLOAT.0
	float                            _0xAD058E44;                     // type:FLOAT.0
	float                            _0x9B4B3831;                     // type:FLOAT.0
	float                            _0x37994CBC;                     // type:FLOAT.0
	float                            _0xD4564C3F;                     // type:FLOAT.0
	float                            _0x58EA24A6;                     // type:FLOAT.0
	float                            _0x4DD28219;                     // type:FLOAT.0
	float                            _0xC7F9463A;                     // type:FLOAT.0
	float                            _0x9410CD42;                     // type:FLOAT.0
	float                            _0x64DD3856;                     // type:FLOAT.0
	float                            _0xC027C10D;                     // type:FLOAT.0
	string                           _0x38ECB796;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xA3458A89;                     // type:FLOAT.0
	string                           _0x9E6371B5;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x10BF8293;                     // type:FLOAT.0
	float                            _0x1143D8D4;                     // type:FLOAT.0
	float                            _0x5CDDCED2;                     // type:FLOAT.0
	float                            _0xBD6134F2;                     // type:FLOAT.0
	float                            _0xB80B00D6;                     // type:FLOAT.0
	float                            _0x1853B1F8;                     // type:FLOAT.0
	float                            _0xE57B5F9E;                     // type:FLOAT.0
};

struct _0xE7744814
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	float                            _0x01F7B422;                     // type:FLOAT.0
	float                            _0xA2461101;                     // type:FLOAT.0
	float                            _0x6F6FA468;                     // type:FLOAT.0
	float                            _0x0705F8AA;                     // type:FLOAT.0
	bitset<enum _0xCC8D3291>         _0x248CC090;                     // type:BITSET.32BIT
	bitset<enum _0xCC8D3291>         _0x129DA8E2;                     // type:BITSET.32BIT
	float                            _0x88F39035;                     // type:FLOAT.0
	float                            _0xEAE0B3CE;                     // type:FLOAT.0
};

struct _0xE78948CC : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	char                             LowerBound;                      // type:CHAR.0
	char                             UpperBound;                      // type:CHAR.0
};

struct _0xE7921D5C : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xE7AC1E3A : _0x8A0DC979
{
	bool                             enable;                          // type:BOOL.0
	bool                             restoreOnExit;                   // type:BOOL.0
};

struct _0xE7AE10CB
{
	bool                             _0x4AF8DE70;                     // type:BOOL.0
	float                            _0x6C7A3364;                     // type:FLOAT.0
};

struct _0xE7C19226 : CTuning
{
	float                            _0x58E7A1AC;                     // type:FLOAT.2
	float                            _0xC4BE0A85;                     // type:FLOAT.2
	float                            _0xFBC391B4;                     // type:FLOAT.2
	uint                             _0x4F5E0E52;                     // type:UINT.0
	uint                             _0x94B7DC87;                     // type:UINT.0
	uint                             _0x8BF8B438;                     // type:UINT.0
};

struct _0xE7C4CE05
{
	int                              SizeOfData;                      // type:INT.0
	int                              MaxParticipants;                 // type:INT.0
	int                              NumInstances;                    // type:INT.0
};

struct _0xE7CBDA9F : StatsChallengeCalendar
{
	array<string>                    onGoalCompleteIncStats;          // type:ARRAY.ATARRAY
};

struct _0xE7D03487 : uiSelectableBehaviorBase
{
	int                              _0xD7E16E19;                     // type:INT.0
	enum eUILogEntryType             EntryType;                       // type:ENUM.32BIT
};

struct _0xE7E2C091 : SaveChallengeGoalParamBase
{
	string                           _0x371C022C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE80C9214
{
	enum _0x5705A365                 Source;                          // type:ENUM.32BIT
	float                            Value;                           // type:FLOAT.0
};

struct _0xE80D9BC7 : uiScreenInputOperationBase
{
	string                           AppId;                           // type:STRING.ATNSHASHSTRING
	string                           _0xC3BCDD81;                     // type:STRING.ATNSHASHSTRING
	string                           EntryPoint;                      // type:STRING.ATNONFINALHASHSTRING
	bool                             Force;                           // type:BOOL.0
};

struct _0xE80E8DB0
{
	array<string>                    Clips;                           // type:ARRAY.ATARRAY
	bitset<enum _0x80F45B89>         _0x256C84DF;                     // type:BITSET.32BIT
};

struct _0xE8220949 : _0xD2002F1E
{
};

struct _0xE829ED7A : _0x3F8365DA
{
	struct CAIMemoryFactFilterSubject            Subject;                         // type:STRUCT.STRUCTURE
	struct CAIMemoryFactFilterVerb               Verb;                            // type:STRUCT.STRUCTURE
	struct CAIMemoryFactFilterObject             Object;                          // type:STRUCT.STRUCTURE
	struct CAIMemoryFactFilterIndirectObject     _0xB1FB9FBC;                     // type:STRUCT.STRUCTURE
	struct _0x54FA7476                           Location;                        // type:STRUCT.STRUCTURE
	struct CAIMemoryFactFilterTimeInRange        Time;                            // type:STRUCT.STRUCTURE
	struct CAIMemoryFactFilterDaysSince          Days;                            // type:STRUCT.STRUCTURE
	struct _0xA9321569                           Priority;                        // type:STRUCT.STRUCTURE
};

struct _0xE834461E : _0x7EAFD12D
{
	int                              Count;                           // type:INT.0
};

struct _0xE83AEF77 : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	enum _0xEC1E8350                 minimum;                         // type:ENUM.32BIT
	enum _0xEC1E8350                 maximum;                         // type:ENUM.32BIT
	enum _0xEC1E8350                 default;                         // type:ENUM.32BIT
};

struct _0xE842B0D6
{
	int                              Version;                         // type:INT.0
	uint                             Build;                           // type:UINT.0
	array<struct _0xBEA9889E>        RegionDefs;                      // type:ARRAY.ATARRAY
	array<ushort>                    _0x8E1C7993;                     // type:ARRAY.ATARRAY
};

struct _0xE851C947
{
	float                            Relaxation;                      // type:FLOAT.0
	float                            HeadAndNeck;                     // type:FLOAT.0
	float                            AnkleAndWrist;                   // type:FLOAT.0
};

struct _0xE85AABF2
{
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
	struct void                      FirstPersonTorsoSpaceSet;        // type:STRUCT.EXTERNAL_NAMED
};

struct _0xE8850EF2 : CPopulationGroup
{
	string                           drivers;                         // type:STRING.ATNONFINALHASHSTRING
	string                           shotgun;                         // type:STRING.ATNONFINALHASHSTRING
	string                           passengers;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE8A1CE98 : CNmParameter
{
	float                            Blend;                           // type:FLOAT.0
};

struct _0xE8A8C72E
{
	string                           StruggleClipSet;                 // type:STRING.ATNONFINALHASHSTRING
	string                           StruggleClipSetFemale;           // type:STRING.ATNONFINALHASHSTRING
	string                           PitchStruggleClipSet;            // type:STRING.ATNONFINALHASHSTRING
	string                           PitchStruggleClipSetFemale;      // type:STRING.ATNONFINALHASHSTRING
	float                            MinTimeBetweenReelInStruggleAnims; // type:FLOAT.0
	float                            MinStruggleAnimTime;             // type:FLOAT.0
};

struct _0xE8AF7AC7
{
	float                            FractionMin;                     // type:FLOAT.0
	float                            FractionMax;                     // type:FLOAT.0
	float                            DeviationRightVariance;          // type:FLOAT.0
};

struct _0xE8BA9F98
{
	array<struct _0x4F89A557, 5>     elements;                        // type:ARRAY.ATRANGEARRAY
};

struct _0xE9024DBC
{
	float                            MinSpeed;                        // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
	float                            Weight;                          // type:FLOAT.0
};

struct _0xE91EE325
{
	array<struct _0x74FBD3D6>        presets;                         // type:ARRAY.ATARRAY
};

struct _0xE927D764
{
	array<vec3V, 3>                  Offsets;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0xE92D2430
{
	string                           _0x08968968;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x624CDF92                 number;                          // type:ENUM.32BIT
};

struct _0xE92FC01E
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct void>               ConditionalAnims;                // type:ARRAY.ATARRAY
	array<struct void>               ConditionalAnimTransitions;      // type:ARRAY.ATARRAY
};

struct _0xE936B765
{
	string                           _0xEB5AF815;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x527663C0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           MotionSet;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE9505B40 : _0x43127582
{
	enum _0x72DB1801                 ValueType;                       // type:ENUM.32BIT
};

struct _0xE9533F29
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	enum eAnimBoneTag                LeftHandIkTargetBone;            // type:ENUM.32BIT
	enum eAnimBoneTag                RightHandIkTargetBone;           // type:ENUM.32BIT
	string                           ChildBodyBlendTemplateHash;      // type:STRING.ATNONFINALHASHSTRING
	string                           ParentBodyBlendTemplateHash;     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xE95C5EAB : _0x0A510DA9
{
};

struct _0xE9627807 : uiGenericEventDataBase
{
	uint                             data;                            // type:UINT.0
};

struct _0xE966BC22 : _0x11AD3051
{
	string                           weaponName;                      // type:STRING.ATNONFINALHASHSTRING
	enum _0x8C9EBA7A                 attachPoint;                     // type:ENUM.32BIT
	enum _0x8C9EBA7A                 _0xA6F1D49A;                     // type:ENUM.32BIT
	bitset<enum _0x21185DE6>         flags;                           // type:BITSET.32BIT
	bool                             _0xD95C2AF1;                     // type:BOOL.0
};

struct _0xE975B01D
{
	string                           id;                              // type:STRING.ATNONFINALHASHSTRING
	enum _0x536D6EDE                 type;                            // type:ENUM.32BIT
};

struct _0xE97792D8 : CAICondition
{
};

struct _0xE982D7D2
{
	int                              Index0;                          // type:INT.0
	int                              Index1;                          // type:INT.0
	int                              Index2;                          // type:INT.0
};

struct _0xE991BB13
{
	string                           _0x748613F8;                     // type:STRING.ATNSHASHSTRING
	array<string>                    _0xC63EB519;                     // type:ARRAY.ATARRAY
};

struct _0xE99B9DA3
{
	string                           ParamId;                         // type:STRING.ATNONFINALHASHSTRING
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	int                              ClipSetVariationIndex;           // type:INT.0
};

struct _0xE99C27EC
{
	float                            _0x58397422;                     // type:FLOAT.0
	float                            _0x0952C945;                     // type:FLOAT.0
	struct _0x510D3B10               _0x779C0EA3;                     // type:STRUCT.STRUCTURE
	array<struct _0x078BD94E>        _0x63580EAD;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0xF9ED0014;                     // type:ARRAY.ATARRAY
	array<struct _0x078BD94E>        _0xAA6FC683;                     // type:ARRAY.ATARRAY
};

struct _0xE9A6FEDC : _0xF5CD8B85
{
};

struct _0xE9D2F540 : CTuning
{
	float                            _0x491D564A;                     // type:FLOAT.0
	float                            _0x381ECE0A;                     // type:FLOAT.0
	bool                             _0xB1EC73F7;                     // type:BOOL.0
};

struct _0xE9DA7018
{
	struct CLightAttrDef             attr;                            // type:STRUCT.STRUCTURE
	enum _0xA2FC6AD2                 eBehavior;                       // type:ENUM.32BIT
	string                           _0x0F8C4E00;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0x3E325310                 lightType;                       // type:ENUM.32BIT
	bool                             _0x0E772217;                     // type:BOOL.0
	bool                             _0xA5AAE6A7;                     // type:BOOL.0
	float                            _0x71AE3998;                     // type:FLOAT.0
	float                            _0xBA37AEE2;                     // type:FLOAT.0
	string                           textureName;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x32F6F7A1               _0xE1202BE2;                     // type:STRUCT.STRUCTURE
};

struct _0xE9F0F477 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x563FBCEA                 Target;                          // type:ENUM.32BIT
};

struct _0xE9F406EF
{
	string                           _0x50E19141;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x791ABF68;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7CDD24E2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6D183AA0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x40DA83D9;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD3A22CDD;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xEBF4BF9C;                     // type:FLOAT.0
	float                            _0xBA83FE62;                     // type:FLOAT.0
};

struct _0xEA00072A : _0x2F7DA38D
{
	float                            _0xAF8F094C;                     // type:FLOAT.0
};

struct _0xEA13B60A : _0x39DE799A
{
	string                           Value;                           // type:STRING.ATHASHVALUE
};

struct _0xEA1D8F76
{
	struct _0x0B500CE7               _0xECCA74AB;                     // type:STRUCT.STRUCTURE
	float                            _0x9C16DA97;                     // type:FLOAT.0
	float                            _0x57717A46;                     // type:FLOAT.2
	struct _0xE62F2784               _0x5257692E;                     // type:STRUCT.POINTER
	struct _0x0B500CE7               _0x6EB19FEA;                     // type:STRUCT.STRUCTURE
	float                            _0xE218D957;                     // type:FLOAT.0
	float                            _0x163FAF43;                     // type:FLOAT.2
	struct _0xE62F2784               _0xEE579B25;                     // type:STRUCT.POINTER
	struct _0x0B500CE7               _0xAB5E4DCC;                     // type:STRUCT.STRUCTURE
	float                            _0x00185FA4;                     // type:FLOAT.0
	float                            _0x20B27AE3;                     // type:FLOAT.2
	struct _0xE62F2784               _0xDB298155;                     // type:STRUCT.POINTER
	bool                             _0xCDA84877;                     // type:BOOL.0
	struct _0x0B500CE7               _0x74006546;                     // type:STRUCT.STRUCTURE
	float                            _0x3B9A2043;                     // type:FLOAT.2
	float                            _0x1B236F75;                     // type:FLOAT.0
	struct _0xE62F2784               _0xAE0EF0DE;                     // type:STRUCT.POINTER
	struct _0xE62F2784               _0xA8922D7A;                     // type:STRUCT.POINTER
	float                            _0x933172DB;                     // type:FLOAT.0
	struct _0xE62F2784               _0x7170B721;                     // type:STRUCT.POINTER
	struct _0xE62F2784               _0xEC9DA5BB;                     // type:STRUCT.POINTER
};

struct _0xEA2ED039
{
	array<struct _0x94D12D71>        Simplices;                       // type:ARRAY.ATARRAY
};

struct _0xEA2FE81F
{
	enum _0x29EC06E3                 SpawnType;                       // type:ENUM.32BIT
	uint                             _0xE2FC81D1;                     // type:UINT.0
	uint                             _0x01531DDC;                     // type:UINT.0
};

struct _0xEA4C09BF : uiScreenInputDataAdjustableBehaviorBase
{
	double                           Value;                           // type:DOUBLE.0
	double                           Step;                            // type:DOUBLE.0
};

struct _0xEA523F15 : _0xE046EA8D
{
	string                           EntryId;                         // type:STRING.ATSTRING
	bool                             IsEntryLiked;                    // type:BOOL.0
	bool                             _0xD6C7688C;                     // type:BOOL.0
	bool                             _0xF9D1E385;                     // type:BOOL.0
	bool                             CanDelete;                       // type:BOOL.0
	bool                             _0x78B65AF9;                     // type:BOOL.0
	bool                             _0x4209F457;                     // type:BOOL.0
	bool                             _0x22742D1E;                     // type:BOOL.0
	bool                             _0x88B3FA01;                     // type:BOOL.0
	bool                             _0xAA218150;                     // type:BOOL.0
	bool                             _0x802D73B7;                     // type:BOOL.0
	bool                             _0x158B340E;                     // type:BOOL.0
	bool                             _0xDADE3B2F;                     // type:BOOL.0
};

struct _0xEA528755 : CTuning
{
	struct _0x2628411E               _0xB54C7691;                     // type:STRUCT.STRUCTURE
	struct _0x2628411E               _0xFBB87BF6;                     // type:STRUCT.STRUCTURE
	float                            _0x05A0748B;                     // type:FLOAT.0
};

struct _0xEA674AFF
{
	bool                             _0xA9E92AF8;                     // type:BOOL.0
	float                            _0x12DD018E;                     // type:FLOAT.0
	float                            _0xFD6E1222;                     // type:FLOAT.0
	float                            _0xF33D066A;                     // type:FLOAT.0
	float                            _0xF0165BAD;                     // type:FLOAT.0
	float                            _0x21FE5014;                     // type:FLOAT.0
	float                            _0xD0722451;                     // type:FLOAT.0
	float                            _0xF9E4C705;                     // type:FLOAT.0
	float                            _0xE72F03C1;                     // type:FLOAT.0
	float                            _0x84660658;                     // type:FLOAT.0
	float                            _0xCE5DA3B2;                     // type:FLOAT.0
};

struct _0xEA6D6AA2
{
	float                            _0x5F6D193A;                     // type:FLOAT.0
	struct _0xE6116337               _0xBFBD24C4;                     // type:STRUCT.STRUCTURE
	struct _0x0200B851               _0x01A12ABD;                     // type:STRUCT.STRUCTURE
	struct _0x0200B851               _0x1EE35B22;                     // type:STRUCT.STRUCTURE
	struct _0x0200B851               _0x36E424C4;                     // type:STRUCT.STRUCTURE
	struct _0x0200B851               _0xE838D9CE;                     // type:STRUCT.STRUCTURE
};

struct _0xEA77EAEF : _0xC33484BF
{
	array<struct _0x4D534E80>        Elements;                        // type:ARRAY.ATARRAY
};

struct _0xEA7B17C0
{
	float                            MinTimeToReact;                  // type:FLOAT.0
	float                            MaxTimeToReact;                  // type:FLOAT.0
	float                            ChancesToHonk;                   // type:FLOAT.0
	float                            ChancesToHonkHeldDown;           // type:FLOAT.0
	float                            ChancesToFlipOff;                // type:FLOAT.0
	float                            MinTime;                         // type:FLOAT.0
	float                            MaxTime;                         // type:FLOAT.0
};

struct _0xEA953A27
{
	string                           RelGroupName;                    // type:STRING.ATNONFINALHASHSTRING
	bool                             GangFriendlyFireEnabled;         // type:BOOL.0
	bool                             ConsiderEveryoneFriendlyUnlessDangerous; // type:BOOL.0
	bool                             UseReducedShoutPositionRange;    // type:BOOL.0
	array<struct _0x377BA036>        OtherRelGroups;                  // type:ARRAY.ATARRAY
};

struct _0xEAA4214A
{
	float                            _0x15463B00;                     // type:FLOAT.0
	float                            _0xD8FA9ABC;                     // type:FLOAT.0
	float                            _0xD7B730F8;                     // type:FLOAT.0
	float                            _0x757644A9;                     // type:FLOAT.0
	float                            _0x0D2D9F8C;                     // type:FLOAT.0
	float                            MaxZDiff;                        // type:FLOAT.0
	bool                             _0x3B84226B;                     // type:BOOL.0
};

struct _0xEAA85A12 : CTuning
{
	struct _0xE24F1888               Rendering;                       // type:STRUCT.STRUCTURE
	float                            TimeBetweenLookAts;              // type:FLOAT.0
	float                            _0xB46B0CC3;                     // type:FLOAT.0
	float                            MovingAwayVelocityMSThreshold;   // type:FLOAT.0
	float                            _0x022D47F5;                     // type:FLOAT.0
	float                            _0xBB698D79;                     // type:FLOAT.0
	float                            _0xA0C0AFA5;                     // type:FLOAT.0
	float                            _0x7DE0F498;                     // type:FLOAT.0
	float                            _0xC61D6777;                     // type:FLOAT.0
	float                            _0xD4D50943;                     // type:FLOAT.0
	float                            _0xA84DE469;                     // type:FLOAT.0
	float                            _0x36575DB6;                     // type:FLOAT.0
	float                            MaxZDiff;                        // type:FLOAT.0
	float                            _0x4FCB6632;                     // type:FLOAT.0
	float                            _0xD4935D1A;                     // type:FLOAT.0
	float                            _0xC587771E;                     // type:FLOAT.0
	float                            _0xA66066DA;                     // type:FLOAT.0
	float                            _0x0BD7F82C;                     // type:FLOAT.0
	float                            _0xECECF30C;                     // type:FLOAT.0
	float                            _0x0416FB45;                     // type:FLOAT.0
	float                            _0x2FECEED6;                     // type:FLOAT.0
	float                            _0xCC60D419;                     // type:FLOAT.0
	float                            _0x2956B7E4;                     // type:FLOAT.0
	float                            _0x1DAE7BD9;                     // type:FLOAT.0
	float                            _0xF7213FC2;                     // type:FLOAT.0
	float                            _0x68F805CB;                     // type:FLOAT.0
	float                            _0x5112DD7B;                     // type:FLOAT.0
	float                            _0xFC259AF4;                     // type:FLOAT.0
	float                            _0xA3E27725;                     // type:FLOAT.0
	float                            _0x15220CD7;                     // type:FLOAT.0
	uint                             _0x70D859CA;                     // type:UINT.0
	uint                             _0xE0F53966;                     // type:UINT.0
	uint                             _0x1CF0FB3D;                     // type:UINT.0
	uint                             _0x21C2F0F0;                     // type:UINT.0
	uint                             _0xE15C6CE8;                     // type:UINT.0
	uint                             _0xE40ADDF9;                     // type:UINT.0
	uint                             _0xAE28248A;                     // type:UINT.0
	uint                             _0xE94EB11F;                     // type:UINT.0
	uint                             _0xFF76989C;                     // type:UINT.0
	uint                             _0x25614169;                     // type:UINT.0
};

struct _0xEAA95DBE : _0xDA1F7477
{
};

struct _0xEABA0019
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            _0x16EA66C3;                     // type:FLOAT.0
	float                            _0xD175B4BC;                     // type:FLOAT.0
	float                            _0xE22F6E26;                     // type:FLOAT.0
	float                            _0x54CA7556;                     // type:FLOAT.0
	float                            _0xEAD38CBC;                     // type:FLOAT.0
	float                            _0xDE5B51AA;                     // type:FLOAT.0
	string                           _0xDB614E6A;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEAC027A3 : _0xEC1B292B
{
	struct _0x4A7AD954               Context;                         // type:STRUCT.STRUCTURE
};

struct _0xEAC6C5FB : _0x2F7DA38D
{
};

struct _0xEAD3D77F : _0xAB76836B
{
	bool                             ApplyDefault;                    // type:BOOL.0
	int                              Default;                         // type:INT.0
	map<int, int>                    Dictionary;                      // type:MAP.ATMAP
};

struct _0xEAD42638
{
	float                            AttachParentHeightRatioToAttain; // type:FLOAT.0
	float                            _0x0694C9B0;                     // type:FLOAT.0
	float                            _0xA9001E87;                     // type:FLOAT.0
	float                            _0x22D5B613;                     // type:FLOAT.0
	float                            MinAttachParentHeightRatioToPushAwayFromCollision; // type:FLOAT.0
	float                            MinBlendLevelAfterPushAwayFromCollision; // type:FLOAT.0
	bool                             ShouldApplyInAttachParentLocalSpace; // type:BOOL.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	bool                             _0xBD28BE2B;                     // type:BOOL.0
	struct _0x8BA17D6C               _0x9CC48BBD;                     // type:STRUCT.STRUCTURE
};

struct _0xEADE910D : uiScreenInputBehaviorBase
{
	struct _0x4A7AD954               Target;                          // type:STRUCT.STRUCTURE
};

struct _0xEAE4BA5A : UIBehavior
{
	bitset<enum _0xB677E3DD>                    _0xCC3C08D8;                     // type:BITSET.8BIT
	bitset<enum _0xB677E3DD>                    _0xB51D0AD1;                     // type:BITSET.8BIT
	struct FeedMessageTemplate                  DefaultMessageTemplate;          // type:STRUCT.POINTER
	map<string, struct FeedMessageTemplate>     SpecializedMessageTemplates;     // type:MAP.ATMAP
	string                                      DefaultSoundSet;                 // type:STRING.ATSTRING
	string                                      _0x78E2DC05;                     // type:STRING.ATSTRING
	uint                                        _0x02EDB1F9;                     // type:UINT.0
	bool                                        _0xC5687425;                     // type:BOOL.0
	bool                                        _0x9D98A179;                     // type:BOOL.0
};

struct _0xEAF4A650 : _0x0A510DA9
{
	enum _0x1F17C8B0                 Mode;                            // type:ENUM.32BIT
};

struct _0xEB033A4D : _0xBA4BE0CB
{
};

struct _0xEB119925
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x5618AAB1>         Flags;                           // type:BITSET.32BIT
	array<struct _0xEE8158E7>        Transitions;                     // type:ARRAY.ATARRAY
};

struct _0xEB14E9E2 : _0x2F7DA38D
{
	string                           _0xFA156B85;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEB51CD6F
{
	struct _0x000ABD42               _0x18DDCB5F;                     // type:STRUCT.STRUCTURE
};

struct _0xEB558FFE : _0x1054F746
{
};

struct _0xEB587558
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEB64EDD5
{
	string                           Set;                             // type:STRING.ATNONFINALHASHSTRING
	struct _0xC4561C6C               ValidFor;                        // type:STRUCT.STRUCTURE
};

struct _0xEB67595A
{
	string                           goalHash;                        // type:STRING.ATNSHASHSTRING
	ushort                           startMinute;                     // type:USHORT.0
	ushort                           startHour;                       // type:USHORT.0
	ushort                           startDay;                        // type:USHORT.0
	ushort                           startMonth;                      // type:USHORT.0
	ushort                           startYear;                       // type:USHORT.0
	ushort                           endMinute;                       // type:USHORT.0
	ushort                           endHour;                         // type:USHORT.0
	ushort                           endDay;                          // type:USHORT.0
	ushort                           endMonth;                        // type:USHORT.0
	ushort                           endYear;                         // type:USHORT.0
	bool                             repeatsDaily;                    // type:BOOL.0
};

struct _0xEB6BCE30 : _0x8A0DC979
{
	string                           Channel;                         // type:STRING.ATNONFINALHASHSTRING
	struct uiScriptEventParsable     Event;                           // type:STRUCT.STRUCTURE
};

struct _0xEB75F559
{
	float                            _0x1F9AC6C7;                     // type:FLOAT.0
	float                            _0xF6920675;                     // type:FLOAT.0
	float                            _0xE047B151;                     // type:FLOAT.0
	float                            _0x9C07E11E;                     // type:FLOAT.0
	float                            _0xF714177F;                     // type:FLOAT.0
	float                            _0xCF75D108;                     // type:FLOAT.0
	float                            _0xEC9CA78D;                     // type:FLOAT.0
	float                            _0x9C54058B;                     // type:FLOAT.0
	float                            _0x116322BD;                     // type:FLOAT.0
	float                            _0xF02D75B8;                     // type:FLOAT.0
	float                            _0x11DDB62B;                     // type:FLOAT.0
	float                            _0x079B1029;                     // type:FLOAT.0
	float                            _0x4BFFF725;                     // type:FLOAT.0
	float                            _0x37ECB3C8;                     // type:FLOAT.0
	float                            _0x7B25D791;                     // type:FLOAT.0
	float                            _0x4333AEDB;                     // type:FLOAT.0
	float                            _0xDFD95997;                     // type:FLOAT.0
	float                            _0x9F0031F3;                     // type:FLOAT.0
	float                            MaxAngularVelocity;              // type:FLOAT.0
	float                            _0x46B1F4EA;                     // type:FLOAT.0
	float                            _0x9DA492B5;                     // type:FLOAT.0
	float                            _0x9E96A9D8;                     // type:FLOAT.0
	float                            _0xDDF623BA;                     // type:FLOAT.0
	float                            _0xAB77C136;                     // type:FLOAT.0
	float                            _0xD64FEDDB;                     // type:FLOAT.0
	float                            _0x8EB8D03D;                     // type:FLOAT.0
	float                            _0x57C0EF06;                     // type:FLOAT.0
	float                            _0x9017F42F;                     // type:FLOAT.0
	float                            _0x4723C7CE;                     // type:FLOAT.0
};

struct _0xEB839956
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x593BD40D>         Flags;                           // type:BITSET.32BIT
};

struct _0xEB8ADD2A : _0xB88D6BEE
{
	string                           AnimationName;                   // type:STRING.ATNONFINALHASHSTRING
	bool                             LinkToParentPause;               // type:BOOL.0
	bool                             LinkToParentStop;                // type:BOOL.0
	struct _0x4A7AD954               AnimationTarget;                 // type:STRUCT.STRUCTURE
};

struct _0xEB94E487
{
	string                           ScenarioCapabilities;            // type:STRING.ATSTRING
	bool                             Disabled;                        // type:BOOL.0
	float                            CooldownSeconds;                 // type:FLOAT.0
	float                            ForceAfterSeconds;               // type:FLOAT.0
};

struct _0xEB9EA3E3
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	array<vec2, 256>                 pivots;                          // type:ARRAY.ATRANGEARRAY
};

struct _0xEBA69019
{
	enum _0x2E67A35F                 Type;                            // type:ENUM.32BIT
	string                           _0xE2F99703;                     // type:STRING.ATSTRING
};

struct _0xEBADF881 : CTuning
{
	float                            _0x8FEAFD81;                     // type:FLOAT.0
	float                            _0xE04C2F41;                     // type:FLOAT.0
	float                            _0x2BEEFF04;                     // type:FLOAT.0
	float                            _0xE5E11D5D;                     // type:FLOAT.0
	float                            _0x259DC8F2;                     // type:FLOAT.0
	float                            _0x4864A43D;                     // type:FLOAT.0
	float                            _0xD6A59C33;                     // type:FLOAT.0
	int                              _0x99F9663D;                     // type:INT.0
	int                              _0xE867EFC6;                     // type:INT.0
	float                            _0x9657E66F;                     // type:FLOAT.0
	float                            _0x1B786FEF;                     // type:FLOAT.0
	float                            _0x9C823F02;                     // type:FLOAT.0
	float                            _0x069C9FCC;                     // type:FLOAT.0
	float                            _0xE781AAD4;                     // type:FLOAT.0
	float                            _0x8F58C975;                     // type:FLOAT.0
};

struct _0xEBAE5117
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6C74A30F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xAD1FB8DC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCA3BC0CD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEBAFE4E9 : _0xE321FA11
{
	uint                             _0x813AE6D6;                     // type:UINT.0
	array<string>                    _0xA56EE63E;                     // type:ARRAY.ATARRAY
	array<string>                    _0xA595C968;                     // type:ARRAY.ATARRAY
};

struct _0xEBB02FC9 : _0x255DD174
{
};

struct _0xEBBC845F
{
	string                           ID;                              // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x936422A6>        _0x6FA8E478;                     // type:ARRAY.ATARRAY
};

struct _0xEBC633C1
{
	string                           HashStringVarId;                 // type:STRING.ATNONFINALHASHSTRING
	string                           HashString;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEBD2F233
{
	int                              _0x2B4515D0;                     // type:INT.0
	int                              _0xF743175A;                     // type:INT.0
};

struct _0xEBD8F95A
{
	bool                             _0x49CA42D6;                     // type:BOOL.0
	float                            _0xE2C7B447;                     // type:FLOAT.0
	float                            _0x100027D4;                     // type:FLOAT.0
	float                            _0x880CC88B;                     // type:FLOAT.0
	uint                             _0x33C007CB;                     // type:UINT.0
};

struct _0xEBE01DA6
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x4D2E19B9                 Type;                            // type:ENUM.32BIT
	vec3V                            Position;                        // type:VEC3V.0
};

struct _0xEBE47183
{
	string                           owner;                           // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB328AAEC;                     // type:STRING.ATNONFINALHASHSTRING
	ushort                           index1;                          // type:USHORT.0
	ushort                           index2;                          // type:USHORT.0
};

struct _0xEBED8333 : UIBehavior
{
};

struct _0xEC0385E8
{
	string                           _0x4E8F2279;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xE26F6001;                     // type:FLOAT.0
	float                            _0x65D18E7B;                     // type:FLOAT.0
	float                            _0xF8FAE898;                     // type:FLOAT.0
	float                            _0x24129022;                     // type:FLOAT.0
	float                            _0xF07E969E;                     // type:FLOAT.0
	float                            _0xD708D07A;                     // type:FLOAT.0
	uint                             _0xB6371772;                     // type:UINT.0
	float                            _0x66D5A636;                     // type:FLOAT.0
	float                            _0x97347DFB;                     // type:FLOAT.0
	float                            _0x87707360;                     // type:FLOAT.0
	float                            _0x47214543;                     // type:FLOAT.0
};

struct _0xEC062BB0 : uiSelectableBehaviorBase
{
	enum _0x7D7578F3                 _0xD711F1A0;                     // type:ENUM.32BIT
	string                           EventChannel;                    // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3D490415;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x10854C0C;                     // type:BOOL.0
	bool                             _0xD3F100AF;                     // type:BOOL.0
	int                              _0x91F20435;                     // type:INT.0
	string                           Title;                           // type:STRING.ATSTRING
	string                           _0x0D3AAC7E;                     // type:STRING.ATSTRING
	struct _0x4A7AD954               _0x3B54D302;                     // type:STRUCT.STRUCTURE
};

struct _0xEC1B292B : UIBehavior
{
	float                            HorizontalRatio;                 // type:FLOAT.0
	float                            VerticalRatio;                   // type:FLOAT.0
	bool                             InvertHorizontalPadding;         // type:BOOL.0
	bool                             _0x31278AB3;                     // type:BOOL.0
};

struct _0xEC2C95AA
{
	float                            Time;                            // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
};

struct _0xEC46899E : _0x2F7DA38D
{
	struct _0xED16C5B0               ped;                             // type:STRUCT.STRUCTURE
	bitset<enum _0x11281EF7>         flags;                           // type:BITSET.32BIT
};

struct _0xEC490CE9 : _0x1054F746
{
};

struct _0xEC4C6FB9 : CTuning
{
	string                           _0x805B8320;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x353CF051;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB9636B19>        _0xDB29D854;                     // type:ARRAY.ATARRAY
	array<struct _0x65727CE7>        _0x88BE3D10;                     // type:ARRAY.ATARRAY
	array<struct _0x65727CE7>        _0xDAEFC4B9;                     // type:ARRAY.ATARRAY
	array<struct _0x65727CE7>        _0xDB038D3E;                     // type:ARRAY.ATARRAY
	array<struct _0x65727CE7>        _0xA8784F8F;                     // type:ARRAY.ATARRAY
	array<struct _0x09106DAD>        _0xFD678B22;                     // type:ARRAY.ATARRAY
	array<struct _0xCC7762ED>        _0x90A55608;                     // type:ARRAY.ATARRAY
	array<struct _0x35CF1015>        _0x1D24E319;                     // type:ARRAY.ATARRAY
	struct _0xAA32F0E8               _0x6E37DBD9;                     // type:STRUCT.STRUCTURE
	struct _0xAA32F0E8               _0x95B5D986;                     // type:STRUCT.STRUCTURE
	struct _0xAA32F0E8               _0x18F62740;                     // type:STRUCT.STRUCTURE
	struct _0xAA32F0E8               _0x18D88C1C;                     // type:STRUCT.STRUCTURE
	struct _0xAA32F0E8               _0xF241FC42;                     // type:STRUCT.STRUCTURE
	struct _0xEEFB1F13               _0xFF7F72DD;                     // type:STRUCT.STRUCTURE
	float                            _0x3A0297DE;                     // type:FLOAT.0
	float                            _0xE8BB6203;                     // type:FLOAT.0
	float                            _0x8615CE18;                     // type:FLOAT.0
	float                            _0xCBDAD5B9;                     // type:FLOAT.0
	float                            _0xBD46F1EE;                     // type:FLOAT.0
	float                            _0xE4D8A720;                     // type:FLOAT.0
	float                            _0xF7630DF4;                     // type:FLOAT.0
	float                            _0xBC8A3F8E;                     // type:FLOAT.0
	float                            _0xE2CBCFCC;                     // type:FLOAT.0
	float                            _0x5841ECA9;                     // type:FLOAT.0
	float                            _0x6B4BBD43;                     // type:FLOAT.0
	float                            _0x4A2F95A3;                     // type:FLOAT.0
	float                            _0x67B0B6BB;                     // type:FLOAT.0
	float                            _0x1C4C431A;                     // type:FLOAT.0
	float                            _0xFC38A8C5;                     // type:FLOAT.0
	float                            _0xAB0F3E64;                     // type:FLOAT.0
	float                            _0xE6CCF100;                     // type:FLOAT.0
	float                            _0xB6BE40DA;                     // type:FLOAT.0
	float                            _0xA8C24D5E;                     // type:FLOAT.0
	float                            _0x1EC7FB8B;                     // type:FLOAT.0
	float                            _0xB760274F;                     // type:FLOAT.0
	float                            _0xFFA9DC5C;                     // type:FLOAT.0
	float                            _0x99FAA732;                     // type:FLOAT.0
	float                            _0xAE950A87;                     // type:FLOAT.0
	float                            _0xCD1BDFD6;                     // type:FLOAT.0
	float                            _0xCA972C75;                     // type:FLOAT.0
	float                            _0xB6904A40;                     // type:FLOAT.0
	float                            _0x212631F0;                     // type:FLOAT.0
	float                            _0x2B6D3D42;                     // type:FLOAT.0
	float                            _0xAD9F24A2;                     // type:FLOAT.0
	float                            _0xCBDD2E9D;                     // type:FLOAT.0
	float                            _0x083C5E4F;                     // type:FLOAT.0
	float                            _0xD046BE34;                     // type:FLOAT.0
	float                            _0xA9BF0960;                     // type:FLOAT.0
	float                            _0xAA554F42;                     // type:FLOAT.0
	float                            _0x536236F8;                     // type:FLOAT.0
	float                            _0x59CBD5CC;                     // type:FLOAT.0
	float                            _0x36BC1ECC;                     // type:FLOAT.0
	float                            _0xA917FA9A;                     // type:FLOAT.0
	float                            _0xB401FA49;                     // type:FLOAT.0
	float                            _0x494787E7;                     // type:FLOAT.0
	float                            _0x64E508EB;                     // type:FLOAT.0
	float                            _0x0013E07D;                     // type:FLOAT.0
	float                            _0xF522F665;                     // type:FLOAT.0
	float                            _0xDA7160CE;                     // type:FLOAT.0
	float                            _0x4DC59CC0;                     // type:FLOAT.0
	float                            _0xF6CA17B2;                     // type:FLOAT.0
	float                            _0x4AEF7BA8;                     // type:FLOAT.0
	uint                             _0xF92BE89E;                     // type:UINT.0
	float                            _0xCD918D57;                     // type:FLOAT.0
	float                            _0xA11C3F6D;                     // type:FLOAT.0
	float                            _0x4D8851E4;                     // type:FLOAT.0
	float                            _0xD0F6B804;                     // type:FLOAT.0
	float                            _0xD3E8AF1F;                     // type:FLOAT.0
	float                            _0xB5354CA9;                     // type:FLOAT.0
	float                            _0x91086154;                     // type:FLOAT.0
	float                            _0x2AE38B02;                     // type:FLOAT.0
	float                            _0xE9B2B52E;                     // type:FLOAT.0
	float                            _0x5F62AC04;                     // type:FLOAT.0
	float                            _0x2E0DF978;                     // type:FLOAT.0
	float                            _0x3BB65084;                     // type:FLOAT.0
	float                            _0x37922055;                     // type:FLOAT.0
	float                            _0x5F74BD6A;                     // type:FLOAT.0
	float                            _0x9841A7E6;                     // type:FLOAT.0
	float                            _0x00C4C0B7;                     // type:FLOAT.0
	float                            _0xDB96B967;                     // type:FLOAT.0
	float                            _0x8543051D;                     // type:FLOAT.0
	float                            _0xE7457426;                     // type:FLOAT.0
	float                            _0x5425558A;                     // type:FLOAT.0
	float                            _0x54A706BC;                     // type:FLOAT.0
	float                            _0x6D5D1841;                     // type:FLOAT.0
	float                            _0x329EE4E0;                     // type:FLOAT.0
	array<struct _0x57A232AA>        _0xCCC330EE;                     // type:ARRAY.ATARRAY
	float                            _0x369ECC51;                     // type:FLOAT.0
	float                            _0xAE70027E;                     // type:FLOAT.0
	uint                             _0x47C13DE1;                     // type:UINT.0
	uint                             _0xFEF625C3;                     // type:UINT.0
	uint                             _0x0C2FA415;                     // type:UINT.0
	int                              _0x37F4036B;                     // type:INT.0
	int                              _0x39CB1DC7;                     // type:INT.0
	float                            _0x77D110F5;                     // type:FLOAT.0
	string                           _0xBFCBCE2E;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x3933A714;                     // type:BOOL.0
	bool                             _0xF75AA711;                     // type:BOOL.0
	bool                             _0xF4D50E4C;                     // type:BOOL.0
	bool                             _0x44FDABF6;                     // type:BOOL.0
	bool                             _0xFFCC591A;                     // type:BOOL.0
	bool                             _0x4FB82A0A;                     // type:BOOL.0
	bool                             _0x6AA839E8;                     // type:BOOL.0
	bool                             _0xD9855270;                     // type:BOOL.0
	bool                             _0x48928A9F;                     // type:BOOL.0
	bool                             _0x828BF19A;                     // type:BOOL.0
	bool                             _0xF5A2B13F;                     // type:BOOL.0
	bool                             _0x88D9B541;                     // type:BOOL.0
	uint                             _0x80A1B218;                     // type:UINT.0
	uint                             _0x674DCF5B;                     // type:UINT.0
	string                           _0x63586055;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2EB910DA;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF7CBEFF0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE4E11A39;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE8FE227C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x43773923;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA2E15B89;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4F197F8A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCA9AFC60;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1F81FF1E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC6A3C6AD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5E79B26F;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x620FB30C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1C5077B9;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x0DCB0767>        _0x9A880BFC;                     // type:ARRAY.ATARRAY
	uint                             _0x13DFF631;                     // type:UINT.0
	uint                             _0xA49A5470;                     // type:UINT.0
	float                            _0x823B9DB0;                     // type:FLOAT.0
	string                           _0xB43471C3;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0CB11085;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDEE69E62;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEC4FCAE1
{
	enum _0x180356F0                 _0x1901FFD4;                     // type:ENUM.32BIT
	enum _0x180356F0                 Head;                            // type:ENUM.32BIT
	enum _0x180356F0                 _0x1E7F9271;                     // type:ENUM.32BIT
	enum _0x180356F0                 _0x4693E2A5;                     // type:ENUM.32BIT
};

struct _0xEC516F75
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           DiskPath;                        // type:STRING.ATNONFINALHASHSTRING
	enum _0x6E0BAAA2                 Type;                            // type:ENUM.32BIT
};

struct _0xEC550523
{
	float                            SpineYawIn;                      // type:FLOAT.0
	float                            SpineYawOut;                     // type:FLOAT.0
	float                            SpinePitchIn;                    // type:FLOAT.0
	float                            SpinePitchOut;                   // type:FLOAT.0
	float                            HeadIn;                          // type:FLOAT.0
	float                            HeadOut;                         // type:FLOAT.0
	float                            ClavicleIn;                      // type:FLOAT.0
	float                            ClavicleOut;                     // type:FLOAT.0
	float                            PelvisYawIn;                     // type:FLOAT.0
	float                            PelvisYawOut;                    // type:FLOAT.0
	float                            PelvisPitchIn;                   // type:FLOAT.0
	float                            PelvisPitchOut;                  // type:FLOAT.0
	float                            RootIn;                          // type:FLOAT.0
	float                            RootOut;                         // type:FLOAT.0
	float                            SpineYawStrength;                // type:FLOAT.0
	float                            SpinePitchStrength;              // type:FLOAT.0
	float                            ClavicleStrength;                // type:FLOAT.0
	float                            PelvisYawStrength;               // type:FLOAT.0
	float                            PelvisPitchStrength;             // type:FLOAT.0
	float                            RootStrength;                    // type:FLOAT.0
	float                            HandRotationStrength;            // type:FLOAT.0
	float                            HandTranslationStrength;         // type:FLOAT.0
	float                            SpineYawComp;                    // type:FLOAT.0
	float                            HandStrengthBlendInDuration;     // type:FLOAT.0
	float                            HandStrengthBlendOutDuration;    // type:FLOAT.0
};

struct _0xEC5BB8EF : _0xDC10377E
{
	struct _0x81DC733B               _0x29FC8729;                     // type:STRUCT.STRUCTURE
	struct _0xA55CA0EA               _0x6579358E;                     // type:STRUCT.STRUCTURE
	struct _0xA55CA0EA               _0xE9F2EE0A;                     // type:STRUCT.STRUCTURE
	struct _0xCE9FEE90               _0xE8B75C8F;                     // type:STRUCT.STRUCTURE
	struct _0xCE9FEE90               _0x269D5DE1;                     // type:STRUCT.STRUCTURE
	struct _0x6F611A53               _0xFAECA38A;                     // type:STRUCT.STRUCTURE
	struct _0x6F611A53               _0xCFBCA22E;                     // type:STRUCT.STRUCTURE
};

struct _0xEC5DA8D6 : CTuning
{
	float                            _0x2F355687;                     // type:FLOAT.0
	float                            _0x60A999DA;                     // type:FLOAT.0
	float                            _0x714C33C0;                     // type:FLOAT.0
	float                            _0x8AD84858;                     // type:FLOAT.0
	float                            _0x3DB04195;                     // type:FLOAT.0
	float                            _0x1060B006;                     // type:FLOAT.0
	float                            _0xABDA6E1B;                     // type:FLOAT.0
	float                            _0xCCDEFB08;                     // type:FLOAT.0
	float                            _0x9AC55F3E;                     // type:FLOAT.0
	float                            _0x0BC15BD4;                     // type:FLOAT.0
	float                            _0xDD5FED46;                     // type:FLOAT.0
};

struct _0xEC7D06C8 : _0xF9C44B45
{
	string                           stop;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEC9A5FB1 : _0x89164127
{
	array<bool>                      Ranks;                           // type:ARRAY.ATARRAY
};

struct _0xECBD24CE
{
	bool                             _0x15914A34;                     // type:BOOL.0
	float                            _0x9A7262FA;                     // type:FLOAT.0
	float                            _0xCE361DC4;                     // type:FLOAT.0
	float                            _0x63FC0960;                     // type:FLOAT.0
	float                            _0xB798BF3A;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x9C53F9C3;                     // type:FLOAT.0
	float                            _0x1DD8CD80;                     // type:FLOAT.0
	array<string>                    _0x0F45F291;                     // type:ARRAY.ATARRAY
};

struct _0xECC05A2C
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	float                            Rate;                            // type:FLOAT.0
	bool                             HasSixDirections;                // type:BOOL.0
	bool                             HasCreateWeaponTag;              // type:BOOL.0
	bool                             HasInterruptTag;                 // type:BOOL.0
};

struct _0xECD3EB07 : _0x9B8C003A
{
	enum eAnimBoneTag                 _0xAA5A0553;                     // type:ENUM.32BIT
	vec3V                             _0x267792AB;                     // type:VEC3V.0
	uint                              _0xA9BE9E32;                     // type:UINT.0
	int                               _0x5F14E303;                     // type:INT.0
	uint                              _0x637DBF71;                     // type:UINT.0
	enum LookAtPriority               _0xA920832B;                     // type:ENUM.32BIT
	ushort                            _0xCB80E896;                     // type:USHORT.0
	enum LookIkReferenceDirection     _0x38B1135E;                     // type:ENUM.32BIT
	enum LookIkReferenceDirection     _0x1BE3737F;                     // type:ENUM.32BIT
	enum LookIkReferenceDirection     _0xA6DBB28D;                     // type:ENUM.32BIT
	enum LookIkReferenceDirection     _0x10616627;                     // type:ENUM.32BIT
	enum LookIkTurnRate               _0xE956EF93;                     // type:ENUM.32BIT
	enum LookIkBlendRate              _0xF2B56013;                     // type:ENUM.32BIT
	enum LookIkBlendRate              _0x46D02ED4;                     // type:ENUM.32BIT
	enum LookIkHeadAttitude           _0x5BDEFD08;                     // type:ENUM.32BIT
	enum LookIkRotationLimit          _0x9A8DF789;                     // type:ENUM.32BIT
	enum LookIkRotationLimit          _0xB16A5604;                     // type:ENUM.32BIT
	enum LookIkRotationLimit          _0x7A69B420;                     // type:ENUM.32BIT
	enum LookIkRotationLimit          _0x65B350FE;                     // type:ENUM.32BIT
	enum LookIkRotationLimit          _0x03ADB0D3;                     // type:ENUM.32BIT
	enum LookIkRotationLimit          _0x35001290;                     // type:ENUM.32BIT
	enum LookIkArmCompensation        _0x1667F477;                     // type:ENUM.32BIT
	enum LookIkArmCompensation        _0xB1824B87;                     // type:ENUM.32BIT
};

struct _0xECE46ABA : _0xE4AECA2C
{
	float                            Data;                            // type:FLOAT.0
};

struct _0xED02622F : _0x2F7DA38D
{
	string                           value;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xED138DAF : _0xABB31B99
{
	array<struct _0xABB31B99>        Filters;                         // type:ARRAY.ATARRAY
};

struct _0xED162196
{
	float                             _0x1364A0C4;                     // type:FLOAT.0
	float                             _0xCDE608ED;                     // type:FLOAT.0
	float                             _0xF3C2411D;                     // type:FLOAT.0
	float                             _0x004960AB;                     // type:FLOAT.0
	array<struct _0xADE9DEF0, 12>     _0xFF8DA7F1;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0xED16C5B0 : _0x11AD3051
{
	string                           _0xC3C9224B;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xED1945B6 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xED1EA580
{
	array<struct _0xB3B944A4>        Areas;                           // type:ARRAY.ATARRAY
};

struct _0xED23B004
{
};

struct _0xED26378B
{
	array<struct _0xE68C3AE7>        _0x1A774402;                     // type:ARRAY.ATARRAY
};

struct _0xED316BE5
{
	struct _0xDF771251               Ai;                              // type:STRUCT.STRUCTURE
	struct _0xDF771251               Player;                          // type:STRUCT.STRUCTURE
	struct _0xDF771251               PlayerMp;                        // type:STRUCT.STRUCTURE
};

struct _0xED55B654 : CTuning
{
	struct _0xC8098303               Scoring;                         // type:STRUCT.STRUCTURE
	float                            _0x9AED6588;                     // type:FLOAT.0
	float                            _0xCC7A23A4;                     // type:FLOAT.0
};

struct _0xED5FEF0D
{
	float                            Distance;                        // type:FLOAT.0
	float                            _0x2C906545;                     // type:FLOAT.0
	struct _0x0B500CE7               _0x48402092;                     // type:STRUCT.STRUCTURE
	string                           _0x3A211598;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0F3A8EA7;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0xBADBE5DC               _0x24467DE0;                     // type:STRUCT.STRUCTURE
	bitset<enum _0x3095DE40>         Options;                         // type:BITSET.32BIT
	float                            _0x060A1B71;                     // type:FLOAT.0
	float                            _0x1369517F;                     // type:FLOAT.0
	struct _0x7484D70F               _0xCCA38459;                     // type:STRUCT.STRUCTURE
	struct _0x7484D70F               _0x3775BD0D;                     // type:STRUCT.POINTER
	string                           _0x82024EFC;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xED680091 : _0xE4042597
{
};

struct _0xED6939C2
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0xDE102682;                     // type:FLOAT.0
	float                            _0x83304FF4;                     // type:FLOAT.0
	struct _0x34F61687               _0x3D90279A;                     // type:STRUCT.STRUCTURE
	struct _0xE4EFC15E               _0x8328A662;                     // type:STRUCT.STRUCTURE
	struct _0xE4EFC15E               _0xD7EC06F8;                     // type:STRUCT.STRUCTURE
	struct _0xE4EFC15E               _0x75C072AA;                     // type:STRUCT.STRUCTURE
	struct _0x34F61687               _0x3C7ACF08;                     // type:STRUCT.STRUCTURE
	struct _0xE4EFC15E               _0x8D363C32;                     // type:STRUCT.STRUCTURE
	struct _0x34F61687               _0xF0E5BA0B;                     // type:STRUCT.STRUCTURE
	struct _0x34F61687               _0x0C4012DF;                     // type:STRUCT.STRUCTURE
};

struct _0xED76636B
{
	struct _0x10ED8FD9               Core;                            // type:STRUCT.POINTER
	struct _0x4AF8985C               Graphics;                        // type:STRUCT.POINTER
	struct _0x43A66EF7               _0x7A6B2679;                     // type:STRUCT.POINTER
	struct _0x3F76DB61               _0xEF246CB4;                     // type:STRUCT.POINTER
	struct _0x45964312               _0x830FFA8C;                     // type:STRUCT.POINTER
	struct _0xE7744814               _0x4D68E7E3;                     // type:STRUCT.POINTER
	struct _0x59CADCC4               Misc;                            // type:STRUCT.POINTER
	struct _0x3C3BA0DB               _0x4EF6588B;                     // type:STRUCT.POINTER
	struct _0x1607545A               _0xCE05D4AA;                     // type:STRUCT.POINTER
	struct _0x7DA685CB               Weather;                         // type:STRUCT.POINTER
	struct _0xAF013D30               Fog;                             // type:STRUCT.POINTER
	struct _0x3F072A48               _0x32F62F8D;                     // type:STRUCT.POINTER
	struct _0x029FF69C               Swamp;                           // type:STRUCT.POINTER
	struct _0x8DF2CCCB               _0x1FA5AD0A;                     // type:STRUCT.POINTER
	struct _0xFCB2D8A8               _0xF9F46523;                     // type:STRUCT.POINTER
};

struct _0xED891A5E : _0x2F7DA38D
{
	struct _0xED16C5B0               _0xB1006E9A;                     // type:STRUCT.STRUCTURE
	bool                             _0x1D11698E;                     // type:BOOL.0
	bool                             _0x2E1C5DC0;                     // type:BOOL.0
	bool                             _0xB538F4DF;                     // type:BOOL.0
	bool                             _0xD349C6D2;                     // type:BOOL.0
	bool                             _0xFC669303;                     // type:BOOL.0
	bool                             _0x27883DC1;                     // type:BOOL.0
	bool                             _0x5834548A;                     // type:BOOL.0
	float                            _0xB3A26975;                     // type:FLOAT.0
	float                            _0x04D7F57E;                     // type:FLOAT.0
	float                            _0x8B59A355;                     // type:FLOAT.0
	float                            _0x19169969;                     // type:FLOAT.0
	float                            _0x0F410EA3;                     // type:FLOAT.0
	bitset<enum _0x6F7DBC65>         _0xF08E02CF;                     // type:BITSET.32BIT
};

struct _0xED8944FC : _0x3ABDED0D
{
};

struct _0xED89B905
{
	vec4V                            _0xF4A5B041;                     // type:VEC4V.0
	vec4V                            size;                            // type:VEC4V.0
	float                            normalX;                         // type:FLOAT.0
	float                            normalY;                         // type:FLOAT.0
	float                            _0x9567AAED;                     // type:FLOAT.0
	float                            _0x02F4D220;                     // type:FLOAT.0
	float                            _0x4E02682E;                     // type:FLOAT.0
	float                            _0x20418CAD;                     // type:FLOAT.0
	float                            rotation;                        // type:FLOAT.0
	float                            age;                             // type:FLOAT.0
	uint                             _0x989020E4;                     // type:UINT.0
	uint                             persCharName;                    // type:UINT.0
	string                           _0x54DC6DCE;                     // type:STRING.ATNONFINALHASHSTRING
	ushort                           boneTag;                         // type:USHORT.0
	bool                             _0x5D1EC27E;                     // type:BOOL.0
	bool                             _0x5D25C290;                     // type:BOOL.0
};

struct _0xED8B4AA3
{
	struct _0x704A69D2               Collision;                       // type:STRUCT.STRUCTURE
};

struct _0xED9F6E20
{
	struct _0x7E8A86D3               Refuel;                          // type:STRUCT.STRUCTURE
};

struct _0xEDAD3D2C
{
	float                            FOV;                             // type:FLOAT.0
	vec3V                            Translation;                     // type:VEC3V.0
	vec3V                            Rotation;                        // type:VEC3V.0
	string                           WeaponActionIndex;               // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEDAF33B4
{
	array<struct _0x1638FDAA>        _0x827F53FD;                     // type:ARRAY.ATARRAY
	array<struct _0x06A04D25>        _0xCDE324D0;                     // type:ARRAY.ATARRAY
	bool                             _0x7A207803;                     // type:BOOL.0
	bool                             _0xD861932E;                     // type:BOOL.0
	bool                             IsPlaceholder;                   // type:BOOL.0
	enum fwSpeechSubtitleType        _0xE8D0BBF5;                     // type:ENUM.32BIT
	string                           _0xFB8E129E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x71501C3C;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             AllowRepeat;                     // type:BOOL.0
	bool                             _0xC5D0ADA5;                     // type:BOOL.0
	bool                             _0x640A73DB;                     // type:BOOL.0
};

struct _0xEDB7D85F : CMission
{
};

struct _0xEDB90460
{
	float                            MinWeatherRangeModifier;         // type:FLOAT.0
	float                            MaxWeatherRangeModifier;         // type:FLOAT.0
	float                            WeatherRangeModifier;            // type:FLOAT.0
};

struct _0xEDC063B1 : _0xBB84BF68
{
	array<int>                       Ranks;                           // type:ARRAY.ATARRAY
};

struct _0xEDC1CDB4 : CAICondition
{
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	bool                             UseLowerBound;                   // type:BOOL.0
	bool                             UseUpperBound;                   // type:BOOL.0
	bool                             Absolute;                        // type:BOOL.0
};

struct _0xEDDCA5D7 : uiPromptedInputBehaviorBase
{
	float                            _0x30522BBF;                     // type:FLOAT.0
	float                            _0xF1C5D1FE;                     // type:FLOAT.0
	struct _0x4A7AD954               ScrollViewerContext;             // type:STRUCT.STRUCTURE
	bitset<enum _0x360050E5>         _0x49CCAF3D;                     // type:BITSET.8BIT
	bool                             _0xFE520AC3;                     // type:BOOL.0
};

struct _0xEDF9154C
{
	vec2V                            Center;                          // type:VEC2V.0
	bool                             _0x3D4F0943;                     // type:BOOL.0
};

struct _0xEDFC029B : CTuning
{
	float                            _0x102935B8;                     // type:FLOAT.0
	float                            _0x65FE4226;                     // type:FLOAT.0
	float                            _0x7577CE3E;                     // type:FLOAT.0
	float                            _0x5D463E17;                     // type:FLOAT.0
	float                            _0x5F9A4A2B;                     // type:FLOAT.0
	float                            _0xE6740363;                     // type:FLOAT.0
	float                            _0xDB8C78DD;                     // type:FLOAT.0
	float                            _0x09FC7FEA;                     // type:FLOAT.2
	float                            _0xE8A49538;                     // type:FLOAT.0
	float                            _0x9CC56CC5;                     // type:FLOAT.2
	float                            _0x97074578;                     // type:FLOAT.0
	uint                             _0x7DBA0953;                     // type:UINT.0
	uint                             _0x76067DD4;                     // type:UINT.0
	uint                             _0x946B1A04;                     // type:UINT.0
	uint                             _0x620B606B;                     // type:UINT.0
	bool                             _0x6F839EFA;                     // type:BOOL.0
	float                            _0xA7930B8E;                     // type:FLOAT.0
	float                            _0x5120F942;                     // type:FLOAT.0
	float                            _0x515F06EC;                     // type:FLOAT.0
	float                            _0xFCC34EE3;                     // type:FLOAT.0
	float                            _0x30D12AED;                     // type:FLOAT.0
	float                            _0xF6E90738;                     // type:FLOAT.0
	float                            _0x89213407;                     // type:FLOAT.0
	float                            _0x6BD81C77;                     // type:FLOAT.0
	float                            _0x85546985;                     // type:FLOAT.0
};

struct _0xEE002626 : _0xAC6B5263
{
	string                           ContinuedStreakText;             // type:STRING.ATNONFINALHASHSTRING
	uint                             MinutesToToast;                  // type:UINT.0
};

struct _0xEE126ABB
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	float                            Rate;                            // type:FLOAT.0
	struct void                      RewardCondition;                 // type:STRUCT.EXTERNAL_NAMED
	enum _0xF37287F0                 Type;                            // type:ENUM.32BIT
	ushort                           Min;                             // type:USHORT.0
	ushort                           Max;                             // type:USHORT.0
};

struct _0xEE1470A7 : CTuning
{
	float                            _0x2043F294;                     // type:FLOAT.0
	float                            _0x330B6E84;                     // type:FLOAT.0
	float                            _0xDEF23B71;                     // type:FLOAT.0
	float                            _0x9883623B;                     // type:FLOAT.0
	float                            _0x2C0089BC;                     // type:FLOAT.0
	float                            _0x6BF6BEF5;                     // type:FLOAT.0
	float                            _0x193D83CB;                     // type:FLOAT.0
};

struct _0xEE236B4D
{
	array<struct _0xF3A8BB6D>        versions;                        // type:ARRAY.ATARRAY
};

struct _0xEE278025 : _0x7EAFD12D
{
	int                              Count;                           // type:INT.0
	float                            DurationMS;                      // type:FLOAT.0
};

struct _0xEE3ABE18 : _0x1054F746
{
};

struct _0xEE551A04 : _0x11AD3051
{
	struct _0x24749343               clip;                            // type:STRUCT.STRUCTURE
	struct _0x8CDFF0CA               clipSet;                         // type:STRUCT.STRUCTURE
};

struct _0xEE626B8F : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	string                           WeaponName;                      // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEE764C4E
{
	bool                             _0x50228030;                     // type:BOOL.0
	bool                             _0xED5058DC;                     // type:BOOL.0
	bool                             _0x79428E6C;                     // type:BOOL.0
	bool                             _0x92EA7CD6;                     // type:BOOL.0
	bool                             _0xD89A6CD9;                     // type:BOOL.0
	bool                             _0x7228B746;                     // type:BOOL.0
};

struct _0xEE7A27EF
{
	bool                             Enabled;                         // type:BOOL.0
	float                            _0x0F88BCED;                     // type:FLOAT.0
	float                            _0xA23C55AD;                     // type:FLOAT.0
	float                            _0x5CFE5513;                     // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
	float                            _0x28DD20A9;                     // type:FLOAT.0
	float                            _0xDEF873A2;                     // type:FLOAT.0
	float                            _0x24379AC1;                     // type:FLOAT.0
	float                            _0x309B1FB2;                     // type:FLOAT.0
	float                            _0x84EFE7A3;                     // type:FLOAT.0
	float                            _0x60536083;                     // type:FLOAT.0
};

struct _0xEE7AB04D : CTuning
{
	bool                             _0x48CC3774;                     // type:BOOL.0
	bool                             _0x03030039;                     // type:BOOL.0
	bool                             _0xECCDEAAE;                     // type:BOOL.0
	bool                             _0x1323B914;                     // type:BOOL.0
	float                            _0x25A40571;                     // type:FLOAT.0
	float                            _0x6342A1F8;                     // type:FLOAT.0
	float                            _0x5B569482;                     // type:FLOAT.0
	float                            _0x710F9A8A;                     // type:FLOAT.0
	float                            _0xFC72072C;                     // type:FLOAT.0
};

struct _0xEE8158E7
{
	string                           ClipSetId1h;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetId2h;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSetIdDual;                   // type:STRING.ATNONFINALHASHSTRING
	float                            Rate;                            // type:FLOAT.0
	bitset<enum _0x26526DBA>         Flags;                           // type:BITSET.32BIT
	struct _0xC4561C6C               ValidFor;                        // type:STRUCT.STRUCTURE
	array<struct _0x1DE7B92A>        ClipData;                        // type:ARRAY.ATARRAY
};

struct _0xEEA4EA1D
{
	float                            _0x9D14AC88;                     // type:FLOAT.0
	float                            _0xC31A75E6;                     // type:FLOAT.0
	float                            _0x68244276;                     // type:FLOAT.0
	int                              _0xBB57B602;                     // type:INT.0
	bool                             _0x5D9DCABC;                     // type:BOOL.0
	bool                             _0x731ADC6A;                     // type:BOOL.0
	bool                             _0xB72E8F44;                     // type:BOOL.0
	bool                             _0x3254B6EB;                     // type:BOOL.0
	bool                             _0x639B77FA;                     // type:BOOL.0
	bool                             _0x494FF547;                     // type:BOOL.0
	bool                             _0x1248F8A1;                     // type:BOOL.0
	bool                             _0x3828E867;                     // type:BOOL.0
	bool                             _0x7F200562;                     // type:BOOL.0
	bool                             _0x28594537;                     // type:BOOL.0
	bool                             _0x3C850441;                     // type:BOOL.0
	bool                             _0xCE75ED3E;                     // type:BOOL.0
	bool                             _0xD94A8DAB;                     // type:BOOL.0
	bool                             _0x3FB060FC;                     // type:BOOL.0
	bool                             _0x3946FB18;                     // type:BOOL.0
	bool                             _0x7F0C4DA8;                     // type:BOOL.0
	bool                             _0xB75BC6C0;                     // type:BOOL.0
	bool                             _0x62EE62B0;                     // type:BOOL.0
	bool                             _0xFD0ACE3B;                     // type:BOOL.0
	float                            _0x33FB9D4F;                     // type:FLOAT.0
};

struct _0xEEA88CEA
{
	float                            _0x3E02EE70;                     // type:FLOAT.0
	float                            _0xA429AEDA;                     // type:FLOAT.0
	uint                             _0x27F70ED3;                     // type:UINT.0
};

struct _0xEEB89748 : _0xA57BA3ED
{
	array<struct _0x7891D816>        Simplices;                       // type:ARRAY.ATARRAY
};

struct _0xEEC4B8E8
{
	uint                             color;                           // type:UINT.1
	float                            midPoint;                        // type:FLOAT.0
	float                            step;                            // type:FLOAT.0
};

struct _0xEECAFE9D
{
	string                           Label;                           // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xEB3ED827;                     // type:BOOL.0
};

struct _0xEECC24AD : _0x3795142C
{
	struct _0x3795142C               Base;                            // type:STRUCT.POINTER
	array<struct _0x3795142C>        Variants;                        // type:ARRAY.ATARRAY
	array<string>                    _0x7DCB0D5D;                     // type:ARRAY.ATARRAY
	float                            _0xE12DC689;                     // type:FLOAT.0
	float                            _0xA05CB6CD;                     // type:FLOAT.0
};

struct _0xEED125F0 : uiScreenInputOpTriggerBehavior
{
};

struct _0xEED7E46F : _0x11AD3051
{
	array<struct _0x2F7DA38D>        events;                          // type:ARRAY.ATARRAY
};

struct _0xEEDF4FCB
{
	string                           SoundHashName;                   // type:STRING.ATNONFINALHASHSTRING
	enum _0x9CF47141                 SoundType;                       // type:ENUM.8BIT
};

struct _0xEEF83038
{
	bool                             _0x20E14195;                     // type:BOOL.0
	uint                             _0x11E499CE;                     // type:UINT.0
	float                            _0xC4CE7D4A;                     // type:FLOAT.0
	uint                             _0xF71DC8C3;                     // type:UINT.0
};

struct _0xEEFB1F13
{
	float                            _0x7AB1F4B2;                     // type:FLOAT.0
	float                            _0xE8E4CFEE;                     // type:FLOAT.0
	float                            ArmWeight;                       // type:FLOAT.0
	bool                             Enable;                          // type:BOOL.0
};

struct _0xEF119F38 : _0x8A0DC979
{
	enum _0x4E6D3643                 SpinnerType;                     // type:ENUM.32BIT
};

struct _0xEF355FCC : CTuning
{
	float                            TimeSinceLastSpottedToLeaveEngineOn; // type:FLOAT.0
	float                            BeJackedBlendInDuration;         // type:FLOAT.0
	float                            ExitVehicleBlendInDuration;      // type:FLOAT.0
	float                            ThroughWindScreenBlendInDuration; // type:FLOAT.0
	float                            ExitVehicleBlendOutDuration;     // type:FLOAT.0
	float                            ExitVehicleUnderWaterBlendOutDuration; // type:FLOAT.0
	float                            ExitVehicleAttempToFireBlendOutDuration; // type:FLOAT.0
	float                            FleeExitVehicleBlendOutDuration; // type:FLOAT.0
	float                            LeaderExitVehicleDistance;       // type:FLOAT.0
	float                            ExitProbeDistance;               // type:FLOAT.0
	float                            ExitDistance;                    // type:FLOAT.0
	float                            RearExitSideOffset;              // type:FLOAT.0
	float                            MinVelocityToRagdollPed;         // type:FLOAT.0
	float                            MaxTimeToReserveComponentBeforeWarp; // type:FLOAT.0
	float                            ExtraOffsetForGroundCheck;       // type:FLOAT.0
	uint                             JumpOutofSubNeutralBuoyancyTime; // type:UINT.0
	string                           DefaultClimbDownClipId;          // type:STRING.ATNONFINALHASHSTRING
	string                           DefaultClimbDownNoDoorClipId;    // type:STRING.ATNONFINALHASHSTRING
};

struct _0xEF399D0C
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xDFCEBA83>        _0x38B5F86E;                     // type:ARRAY.ATARRAY
};

struct _0xEF3EB60F
{
	array<struct _0x5857C938>        Extensions;                      // type:ARRAY.ATARRAY
};

struct _0xEF5E3761 : CTuning
{
	float                            _0x90822AD7;                     // type:FLOAT.0
	float                            _0x4F9BD4CC;                     // type:FLOAT.0
	float                            _0x1F310E42;                     // type:FLOAT.0
	float                            _0x24F0D668;                     // type:FLOAT.0
	float                            _0x6C7A0545;                     // type:FLOAT.0
	float                            _0xD4EA7D14;                     // type:FLOAT.0
	float                            _0xEC2947D4;                     // type:FLOAT.0
	float                            _0xEA83E1B1;                     // type:FLOAT.0
	float                            _0x1D3260D6;                     // type:FLOAT.0
	float                            _0x3B5BAFF9;                     // type:FLOAT.0
	float                            _0xA93E4074;                     // type:FLOAT.0
	float                            _0x2163B6AD;                     // type:FLOAT.0
	float                            _0x47D71D03;                     // type:FLOAT.0
};

struct _0xEF68F7E5
{
	array<struct _0xCF8C9E50, 4>     _0x02D95E34;                     // type:ARRAY.ATFIXEDARRAY
	array<struct _0xAB36DACC, 4>     _0x563963BF;                     // type:ARRAY.ATFIXEDARRAY
};

struct _0xEF722FDB
{
	bool                             _0x6622CE0E;                     // type:BOOL.0
	float                            _0x062EC094;                     // type:FLOAT.0
	float                            _0xE5DD8FC3;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct _0xEF840C38 : uiDataAdjustableBehaviorBase
{
	struct _0x9B79B490               Value;                           // type:STRUCT.STRUCTURE
	struct _0x9B79B490               Step;                            // type:STRUCT.STRUCTURE
	struct _0x4A7AD954               StepBindingContext;              // type:STRUCT.STRUCTURE
};

struct _0xEF93304F : CTuning
{
	float                            SlowdownDistance;                // type:FLOAT.0
	float                            RouteArrivalDistance;            // type:FLOAT.0
};

struct _0xEF9B37DC : uiDataBindingTriggerBehaviorBase
{
	array<string>                    Slides;                          // type:ARRAY.ATARRAY
};

struct _0xEFAC0EBD : _0x150A5E97
{
};

struct _0xEFAEA34C
{
};

struct _0xEFB8673F
{
	array<struct _0xE15BB414>        Flicks;                          // type:ARRAY.ATARRAY
};

struct _0xEFBDBF05 : CTuning
{
	struct _0xFCF6AE95               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xEFD56957
{
	struct rage__spdAABB                    AABB;                            // type:STRUCT.STRUCTURE
	array<struct CScenarioChainingNode>     Nodes;                           // type:ARRAY.ATARRAY
	array<struct CScenarioChainingEdge>     Edges;                           // type:ARRAY.ATARRAY
	array<struct CScenarioChain>            Chains;                          // type:ARRAY.ATARRAY
	array<ushort>                           _0x9001E6E8;                     // type:ARRAY.ATARRAY
	struct _0x6B741610                      _0x7A0D5E4B;                     // type:STRUCT.STRUCTURE
};

struct _0xEFDA1CF0 : _0xDE795AEA
{
};

struct _0xF003E9E4
{
	string                           AimingCentre;                    // type:STRING.ATNONFINALHASHSTRING
	string                           AimingRight;                     // type:STRING.ATNONFINALHASHSTRING
	string                           AimingLeft;                      // type:STRING.ATNONFINALHASHSTRING
	float                            PelvisOffsetAngle;               // type:FLOAT.0
};

struct _0xF00695A1
{
	short                            minX;                            // type:SHORT.0
	short                            minY;                            // type:SHORT.0
	short                            maxX;                            // type:SHORT.0
	short                            maxY;                            // type:SHORT.0
	uint                             c0;                              // type:UINT.1
	uint                             c1;                              // type:UINT.1
	uint                             c2;                              // type:UINT.1
	uint                             c3;                              // type:UINT.1
};

struct _0xF0096A8D
{
	array<struct _0xF489ADBF>        _0x21661E52;                     // type:ARRAY.ATARRAY
	uint64                           _0xBE6957B3;                     // type:UINT64.0
	uint64                           _0x1E04FEAC;                     // type:UINT64.0
};

struct _0xF010F3EE : CCompendiumCategoryBase
{
	array<string>                    ItemNames;                       // type:ARRAY.ATARRAY
	string                           Subcategory;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF030E31E
{
	float                            Walk;                            // type:FLOAT.0
	float                            Jog;                             // type:FLOAT.0
	float                            Run;                             // type:FLOAT.0
};

struct _0xF04B3342 : CTuning
{
	float                            _0x88F76B6E;                     // type:FLOAT.0
};

struct _0xF0529812
{
	string                           _0x80BD064C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD11525E1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x240B0AF2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD4BBA75C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1F53DF5C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x262B0CD8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x84E8F7C8;                     // type:STRING.ATNONFINALHASHSTRING
	string                           Unused;                          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x121FB7CD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8592D2B4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x161AAB78;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x45A0E2AE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x51E2FDC2;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x31925839;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA67A020C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xABE3D788;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2D907F55;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE73C7025;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x874DE8ED;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x20008C78;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x957E0CFE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5A5FF056;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x57CE1DA0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x80EE7EF0;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x88BC2C8C;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x601FE284;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x56DF7D9C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF06327C3 : CTuning
{
	float                            _0x8239A682;                     // type:FLOAT.0
};

struct _0xF066BC49
{
	struct _0xE4DC25D5                  AllDoors;                        // type:STRUCT.STRUCTURE
	array<struct _0xE4DC25D5>           SpecificDoors;                   // type:ARRAY.ATARRAY
	map<string, struct _0xF7648DD6>     Instances;                       // type:MAP.ATMAP
	bool                                DisableInteriorFlee;             // type:BOOL.0
	bool                                EscapeIfThreatInAnyRoom;         // type:BOOL.0
};

struct _0xF06982C8
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x17FACACC>         Flags;                           // type:BITSET.8BIT
};

struct _0xF07C9EED : _0xED23B004
{
	bool                             Value;                           // type:BOOL.0
};

struct _0xF084A722
{
	struct _0x4365821B               _0x6C8DC421;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0xF0795DB1;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x0F35D55E;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0xF6EBA67F;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x7D428F44;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0xABC34A07;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0xFF53FBDB;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x235F2E7B;                     // type:STRUCT.STRUCTURE
	struct _0x4365821B               _0x133EFB19;                     // type:STRUCT.STRUCTURE
};

struct _0xF0A42B6E
{
	uint                             idx;                             // type:UINT.0
	int                              layer;                           // type:INT.0
	string                           name;                            // type:STRING.ATSTRING
	string                           set;                             // type:STRING.ATSTRING
	float                            min;                             // type:FLOAT.0
	float                            max;                             // type:FLOAT.0
	float                            average;                         // type:FLOAT.0
	float                            std;                             // type:FLOAT.0
};

struct _0xF0AEFE1F
{
	float                            _0x0E285989;                     // type:FLOAT.0
	float                            _0x317BBC89;                     // type:FLOAT.0
	float                            _0x47CD0DE4;                     // type:FLOAT.0
	float                            _0x42699F1C;                     // type:FLOAT.0
};

struct _0xF0B5A4A3
{
	array<string>                    From;                            // type:ARRAY.ATARRAY
	array<string>                    To;                              // type:ARRAY.ATARRAY
	struct _0x93A066BF               Data;                            // type:STRUCT.STRUCTURE
};

struct _0xF0B6D49B
{
	struct _0x291A04C7               Cower;                           // type:STRUCT.STRUCTURE
	struct _0x291A04C7               RunAway;                         // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Mount;                           // type:STRUCT.STRUCTURE
	struct _0x291A04C7               InTraffic;                       // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Cover;                           // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Scenario;                        // type:STRUCT.STRUCTURE
	struct _0x291A04C7               InteriorCover;                   // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Hide;                            // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Trapped;                         // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Town;                            // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Law;                             // type:STRUCT.STRUCTURE
	struct _0x291A04C7               BurstFly;                        // type:STRUCT.STRUCTURE
	struct _0x291A04C7               Penned;                          // type:STRUCT.STRUCTURE
	struct _0x291A04C7               InteriorEscape;                  // type:STRUCT.STRUCTURE
	struct _0x291A04C7               FishFlee;                        // type:STRUCT.STRUCTURE
	bool                             ConstrainedCheck;                // type:BOOL.0
	bool                             ConstrainedIgnoreThreat;         // type:BOOL.0
	bool                             ConstrainedAllowStairs;          // type:BOOL.0
	bool                             ConstrainedAllowClimbsAndDrops;  // type:BOOL.0
	bool                             ConstrainedAllowLadders;         // type:BOOL.0
	bool                             ConstrainedAllowShallowWater;    // type:BOOL.0
	bool                             ConstrainedAllowDeepWater;       // type:BOOL.0
	bool                             ConstrainedAllowDoors;           // type:BOOL.0
};

struct _0xF0B8A783 : SaveChallengeGoalParamBase
{
	string                           _0x371C022C;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF0BFD5D2 : CAICondition
{
	enum _0x563FBCEA                 Horse;                           // type:ENUM.32BIT
	float                            LowerBound;                      // type:FLOAT.0
	float                            UpperBound;                      // type:FLOAT.0
};

struct _0xF0C2E315 : _0xAD9BC2D3
{
	string                           Heading;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Body;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x3DE46CE7;                     // type:UINT.0
};

struct _0xF0C4884E : _0x8A0DC979
{
	bool                             _0x24A61DAA;                     // type:BOOL.0
};

struct _0xF0C4DF63
{
	string                           _0xFE99499E;                     // type:STRING.ATNONFINALHASHSTRING
	float                            probability;                     // type:FLOAT.0
	float                            _0xB82C8C41;                     // type:FLOAT.0
	float                            _0x9E72B30A;                     // type:FLOAT.0
};

struct _0xF0CB5B74
{
	float                            _0x1E28C240;                     // type:FLOAT.0
	float                            _0x80796CDE;                     // type:FLOAT.0
	float                            _0x52D7FAB8;                     // type:FLOAT.0
	float                            _0xA0B8647A;                     // type:FLOAT.0
};

struct _0xF0D41A1F
{
	uint                             dataVersion;                     // type:UINT.0
	array<struct _0xFF47A802>        missions;                        // type:ARRAY.ATARRAY
};

struct _0xF0EF6FC6
{
	enum _0x6732A81D                 Direction;                       // type:ENUM.32BIT
	array<struct _0xE99B9DA3>        Clips;                           // type:ARRAY.ATARRAY
};

struct _0xF0F88608
{
	vec3V                            pos;                             // type:VEC3V.0
	vec3V                            scale;                           // type:VEC3V.0
	vec3V                            rotation;                        // type:VEC3V.0
	uint                             col;                             // type:UINT.1
	float                            _0xE3B22AAD;                     // type:FLOAT.0
	float                            range;                           // type:FLOAT.0
	float                            density;                         // type:FLOAT.0
	float                            _0x21FCD82C;                     // type:FLOAT.0
	float                            _0x033B3399;                     // type:FLOAT.0
	bool                             _0x20DDE892;                     // type:BOOL.0
	bool                             _0x77358084;                     // type:BOOL.0
	uint64                           interiorHash;                    // type:UINT64.0
	bool                             _0xAF7D2D08;                     // type:BOOL.0
	bool                             _0x4003775E;                     // type:BOOL.0
	bool                             _0xD8F42446;                     // type:BOOL.0
};

struct _0xF11E8DC6 : _0x68825F77
{
};

struct _0xF13A4BD4
{
	map<enum _0x3B1F0870, string>     _0x5010A29A;                     // type:MAP.ATBINARYMAP
};

struct _0xF13CB797 : _0x0A510DA9
{
	bool                             _0x915B53E1;                     // type:BOOL.0
};

struct _0xF160F19E : _0xCF886463
{
};

struct _0xF18A4F50 : SavegameInventoryItem
{
	uint                             DamageMode;                      // type:UINT.0
	uint                             AttachPoint;                     // type:UINT.0
	float                            Degradation;                     // type:FLOAT.0
	float                            PermanentDegradation;            // type:FLOAT.0
	float                            Soot;                            // type:FLOAT.0
	float                            Rust;                            // type:FLOAT.0
	float                            Dirt;                            // type:FLOAT.0
	int                              weaponCopyId;                    // type:INT.0
	bool                             Temporary;                       // type:BOOL.0
	bool                             _0xC7D7022E;                     // type:BOOL.0
};

struct _0xF1A5C6B9
{
	int                              MaxBulletHits;                   // type:INT.0
	enum _0x1786EF75                 MaxDamageCleanliness;            // type:ENUM.32BIT
	bitset<enum _0xDE2E74C3>         Flags;                           // type:BITSET.32BIT
};

struct _0xF1D33C7F
{
	float                            OverrideEnterToBaseBlendDuration; // type:FLOAT.0
	float                            MaxDistanceMoverFixup;           // type:FLOAT.0
	float                            MaxDistanceMoverFixupAI;         // type:FLOAT.0
	float                            MaxOrientationMoverFixup;        // type:FLOAT.0
	float                            AlignTaskOrientationFixup;       // type:FLOAT.0
	float                            MinBlendDurationDistanceMoverFixup; // type:FLOAT.0
	float                            MaxBlendDurationDistanceMoverFixup; // type:FLOAT.0
	float                            MinBlendDurationOrientationMoverFixup; // type:FLOAT.0
	float                            MaxBlendDurationOrientationMoverFixup; // type:FLOAT.0
};

struct _0xF1DA7B1F
{
	array<struct _0xC71D14C2>        Options;                         // type:ARRAY.ATARRAY
	array<struct _0x20133D91>        Multipliers;                     // type:ARRAY.ATARRAY
};

struct _0xF1EE6602
{
	array<float>                     _0x7B18DECD;                     // type:ARRAY.ATARRAY
};

struct _0xF1FD31B6 : _0x87CB7DBA
{
	string                           ModelSet;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MoveBlendRatio;                  // type:FLOAT.0
};

struct _0xF206AE70
{
};

struct _0xF211B895
{
	string                           _0x6ED501BF;                     // type:STRING.ATNONFINALHASHSTRING
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
	string                           Clip;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF223017D
{
	float                            _0xACBDFBCE;                     // type:FLOAT.0
	float                            _0x17C97B21;                     // type:FLOAT.0
	float                            MinSteerRate;                    // type:FLOAT.0
	float                            SteerRate;                       // type:FLOAT.0
	float                            _0x26194556;                     // type:FLOAT.0
	float                            SteerLimit;                      // type:FLOAT.0
	float                            _0x3976473A;                     // type:FLOAT.0
	float                            _0x2A93A365;                     // type:FLOAT.0
	float                            _0x846F486B;                     // type:FLOAT.0
	float                            _0x1C44D32B;                     // type:FLOAT.0
	string                           _0x638033EB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x69CF8ECE;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xDCC5D50B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x10D39BCA;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x34752707, 3>     Speeds;                          // type:ARRAY.ATFIXEDARRAY
};

struct _0xF23BE5C6 : CAICondition
{
};

struct _0xF23ED823 : CTuning
{
	float                            _0x39D7DA75;                     // type:FLOAT.0
	float                            _0x1816D186;                     // type:FLOAT.0
	float                            _0xF61FAA16;                     // type:FLOAT.0
	float                            _0xED27202C;                     // type:FLOAT.0
	float                            _0xCDC66B0A;                     // type:FLOAT.0
	float                            _0x5ACF0AE0;                     // type:FLOAT.0
	float                            _0x57D8BD6C;                     // type:FLOAT.0
	float                            _0xC1E0777B;                     // type:FLOAT.0
	float                            _0x6B7804F1;                     // type:FLOAT.0
	float                            _0xA2E57273;                     // type:FLOAT.0
	float                            _0xB9D48552;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xF5DE8045;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x5E2E7CC2;                     // type:ENUM.32BIT
};

struct _0xF253BB65
{
	enum EVolumeType                 VolumeType;                      // type:ENUM.32BIT
	string                           LocalToModelInfo;                // type:STRING.ATNONFINALHASHSTRING
	vec3V                            Position;                        // type:VEC3V.0
	vec3V                            Orientation;                     // type:VEC3V.0
	vec3V                            Scale;                           // type:VEC3V.0
	bool                             _0x22DC2C8A;                     // type:BOOL.0
};

struct _0xF266934D
{
	string                           _0xB553B457;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x13C56590;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xB7AE25E5                 _0xD5D49507;                     // type:ENUM.32BIT
	bool                             _0xD5CD15AF;                     // type:BOOL.0
	float                            _0x7FBC5852;                     // type:FLOAT.0
	float                            _0x8F383645;                     // type:FLOAT.0
	float                            _0x9B54C3C6;                     // type:FLOAT.0
	float                            _0x2A5B9FCB;                     // type:FLOAT.0
};

struct _0xF2717FE8
{
	map<string, struct _0x1DEB0C14>     _0x342B8F3E;                     // type:MAP.ATBINARYMAP
};

struct _0xF27210C7 : _0xAB695B15
{
};

struct _0xF2819EC7
{
	string                           PersCharName;                    // type:STRING.ATFINALHASHSTRING
	string                           _0x2E47310A;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xBC109F48;                     // type:UINT.0
	int                              _0x8FA6CB83;                     // type:INT.0
};

struct _0xF28AC006
{
};

struct _0xF29C16F4 : _0xBC6A0384
{
	array<struct _0xBC6A0384>        Conditions;                      // type:ARRAY.ATARRAY
};

struct _0xF2AA5C5C : _0x05C33D80
{
	string                           TextureDictionary;               // type:STRING.ATNSHASHSTRING
	string                           Texture;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF2B234D5
{
	enum _0x1F17C8B0                 _0x94FE478C;                     // type:ENUM.32BIT
	vec2                             OrbitDistanceLimitScaling;       // type:VECTOR2.0
	vec2                             _0xD1E80A59;                     // type:VECTOR2.0
};

struct _0xF2B314B8
{
	array<ushort>                    Indices;                         // type:ARRAY.ATARRAY
	array<ushort>                    _0x4BD7FBAB;                     // type:ARRAY.ATARRAY
};

struct _0xF2B9A8F6
{
	string                           MotionSetVarId;                  // type:STRING.ATNONFINALHASHSTRING
	string                           MotionSet;                       // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF2BCF878 : CCollectableInfinateFindAndTurnInItem
{
	uint                             maxItems;                        // type:UINT.0
};

struct _0xF2C76E68
{
	float                            _0xC483F398;                     // type:FLOAT.0
	float                            _0xDF0EE69C;                     // type:FLOAT.0
	float                            _0xEE6A3BE3;                     // type:FLOAT.0
	float                            _0xCA5C07EB;                     // type:FLOAT.0
	float                            _0x06B18B85;                     // type:FLOAT.0
	float                            _0x23129C71;                     // type:FLOAT.0
	float                            _0x7260BDB7;                     // type:FLOAT.0
	float                            _0xB3E19EED;                     // type:FLOAT.0
	uint                             _0xF1509538;                     // type:UINT.0
	uint                             _0xF377B894;                     // type:UINT.0
	uint                             _0x6EA584AD;                     // type:UINT.0
	float                            _0xA951C205;                     // type:FLOAT.0
	float                            _0x097C9E7F;                     // type:FLOAT.0
	float                            _0xF5733FC1;                     // type:FLOAT.0
};

struct _0xF2C8EC9D
{
	bool                             _0x30BA4589;                     // type:BOOL.0
	uint                             StartDelayDuration;              // type:UINT.0
	uint                             InDuration;                      // type:UINT.0
	uint                             HoldDuration;                    // type:UINT.0
	uint                             OutDuration;                     // type:UINT.0
	enum _0x4EEED54E                 _0xDAF10A1B;                     // type:ENUM.32BIT
	enum _0x4EEED54E                 _0x1226E0E8;                     // type:ENUM.32BIT
	enum _0x593A886B                 _0xB3EA67DE;                     // type:ENUM.32BIT
	enum _0x2AD242FD                 _0xC41368EE;                     // type:ENUM.32BIT
};

struct _0xF2D19401
{
	struct rage__spdAABB             _0x92F25517;                     // type:STRUCT.STRUCTURE
	struct rage__spdAABB             _0x522A740A;                     // type:STRUCT.STRUCTURE
	string                           _0xED3C2D79;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xB28397C2;                     // type:BOOL.0
};

struct _0xF2DE53E5 : _0x4EF87ED4
{
};

struct _0xF2E3729A
{
	string                           modifierName;                    // type:STRING.ATNONFINALHASHSTRING
	vec3V                            position;                        // type:VEC3V.0
	vec3V                            scale;                           // type:VEC3V.0
	float                            range;                           // type:FLOAT.0
	float                            percentage;                      // type:FLOAT.0
	int                              startHour;                       // type:INT.0
	int                              endHour;                         // type:INT.0
	bool                             _0x7AB682E7;                     // type:BOOL.0
};

struct _0xF2FAF49A : _0xDC10377E
{
	struct camFirstPersonShooterCameraMetadataOrientationSpring     OrientationSpring;               // type:STRUCT.STRUCTURE
	float                                                           _0x9DECDEB8;                     // type:FLOAT.0
	float                                                           MinPitch;                        // type:FLOAT.0
	float                                                           ZOffset;                         // type:FLOAT.0
	float                                                           _0x032F042A;                     // type:FLOAT.0
	uint                                                            _0x56DB77D8;                     // type:UINT.0
	uint                                                            _0x5862F35B;                     // type:UINT.0
	float                                                           _0x78771BE9;                     // type:FLOAT.0
	float                                                           _0xB0B79D19;                     // type:FLOAT.0
};

struct _0xF2FFF16E
{
	struct rage__spdAABB             AABB;                            // type:STRUCT.STRUCTURE
	bitset<enum _0x1C59FBD3>         Flags;                           // type:BITSET.32BIT
};

struct _0xF315338A
{
	array<float>                     Reserves;                        // type:ARRAY.ATARRAY
	string                           UnlockGroup;                     // type:STRING.ATNONFINALHASHSTRING
	float                            UnlockedEnergyReserveSize;       // type:FLOAT.0
	int                              UnlockedEnergyReserveCount;      // type:INT.0
	bool                             UseNonScaledTime;                // type:BOOL.0
};

struct _0xF318B270 : _0xBF9602D8
{
};

struct _0xF318D152
{
	bool                             _0x343F5EC3;                     // type:BOOL.0
	string                           _0x68D6E918;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF32DF7A6 : CAICondition
{
};

struct _0xF3322326 : _0x6DEE05B0
{
	array<float>                     array;                           // type:ARRAY.ATARRAY
	struct _0xAFCCCD61               bindingNotifier;                 // type:STRUCT.SIMPLE_POINTER
};

struct _0xF3418D6B : _0x2F7DA38D
{
	array<vec3V>                     _0x52B1CCAE;                     // type:ARRAY.ATARRAY
	array<float>                     _0xAD3C99F4;                     // type:ARRAY.ATARRAY
	bool                             _0xCB4B3A2B;                     // type:BOOL.0
	struct _0x5DA09A28               _0x97FA8DFB;                     // type:STRUCT.POINTER
};

struct _0xF35C8C5B
{
	float                            _0x0B1975C0;                     // type:FLOAT.0
	float                            _0x0BE5E488;                     // type:FLOAT.0
	float                            _0xD6C45BF7;                     // type:FLOAT.0
	float                            _0x971491C6;                     // type:FLOAT.0
	float                            _0x203BF422;                     // type:FLOAT.0
	float                            _0x6D588E0E;                     // type:FLOAT.0
	float                            _0xB3052D9A;                     // type:FLOAT.0
	array<struct _0x4B89E126, 2>     _0xD3FC1226;                     // type:ARRAY.MEMBER
};

struct _0xF37638D1
{
	array<struct _0xF37638D1>        Children;                        // type:ARRAY.ATARRAY
	string                           ID;                              // type:STRING.ATNSHASHSTRING
	struct _0x39DE799A               Bindable;                        // type:STRUCT.POINTER
};

struct _0xF38CFE80 : _0x7EAFD12D
{
	bool                             Value;                           // type:BOOL.0
};

struct _0xF395E9FA : _0x4198511D
{
};

struct _0xF39D1C3A
{
	string                           Crime;                           // type:STRING.ATNONFINALHASHSTRING
	float                            MaxTime;                         // type:FLOAT.0
	bitset<enum _0x5C11B241>         Flags;                           // type:BITSET.8BIT
};

struct _0xF3A8BB6D
{
	uint                             version;                         // type:UINT.0
	array<string>                    goals;                           // type:ARRAY.ATARRAY
};

struct _0xF3ACC0CC : CTuning
{
	float                            DefaultLookAtThreshold;          // type:FLOAT.0
	float                            _0x21CFA106;                     // type:FLOAT.0
	float                            DefaultDistanceFromWorldCenter;  // type:FLOAT.0
	float                            ExtendedDistanceFromWorldCenter; // type:FLOAT.0
	float                            MaxDistanceToScanLookAts;        // type:FLOAT.0
	float                            BaseTimeToLook;                  // type:FLOAT.0
	float                            _0x09487725;                     // type:FLOAT.0
	float                            AITimeBetweenLookAtsFailureMin;  // type:FLOAT.0
	float                            AITimeBetweenLookAtsFailureMax;  // type:FLOAT.0
	float                            PlayerTimeBetweenLookAtsMin;     // type:FLOAT.0
	float                            PlayerTimeBetweenLookAtsMax;     // type:FLOAT.0
	float                            PlayerTimeMyVehicleLookAtsMin;   // type:FLOAT.0
	float                            PlayerTimeMyVehicleLookAtsMax;   // type:FLOAT.0
	float                            _0xC006E6AC;                     // type:FLOAT.0
	float                            _0x875F6C22;                     // type:FLOAT.0
	float                            TimeBetweenScenarioScans;        // type:FLOAT.0
	float                            ScenarioScanRadius;              // type:FLOAT.0
	float                            MaxPlayerScore;                  // type:FLOAT.0
	float                            BasicPedScore;                   // type:FLOAT.0
	float                            BasicVehicleScore;               // type:FLOAT.0
	float                            BasicObjectScore;                // type:FLOAT.0
	float                            BehindPedModifier;               // type:FLOAT.0
	float                            _0xF58DAFE2;                     // type:FLOAT.0
	float                            PlayerPedModifier;               // type:FLOAT.0
	float                            WalkingRoundPedModifier;         // type:FLOAT.0
	float                            RunningPedModifier;              // type:FLOAT.0
	float                            ClimbingOrJumpingPedModifier;    // type:FLOAT.0
	float                            FightingModifier;                // type:FLOAT.0
	float                            _0x265CD6FE;                     // type:FLOAT.0
	float                            _0x12F17F64;                     // type:FLOAT.0
	float                            _0xE59407FB;                     // type:FLOAT.0
	float                            JackingModifier;                 // type:FLOAT.0
	float                            HangingAroundVehicleModifier;    // type:FLOAT.0
	float                            ScenarioToScenarioPedModifier;   // type:FLOAT.0
	float                            GangScenarioPedToPlayerModifier; // type:FLOAT.0
	float                            ApproachingPlayerModifier;       // type:FLOAT.0
	float                            ClosePlayerModifier;             // type:FLOAT.0
	float                            InRangePlayerModifier;           // type:FLOAT.0
	float                            InRangeDrivingPlayerModifier;    // type:FLOAT.0
	float                            HoldingWeaponPlayerModifier;     // type:FLOAT.0
	float                            CoveredInBloodPlayerModifier;    // type:FLOAT.0
	float                            RagdollingModifier;              // type:FLOAT.0
	float                            PickingUpBikeModifier;           // type:FLOAT.0
	float                            RecklessCarModifier;             // type:FLOAT.0
	float                            RecentlyLookedAtPlayerModifier;  // type:FLOAT.0
	float                            RecentlyLookedAtEntityModifier;  // type:FLOAT.0
	float                            _0x12FD29B2;                     // type:FLOAT.0
	float                            HighImportanceModifier;          // type:FLOAT.0
	float                            MediumImportanceModifier;        // type:FLOAT.0
	float                            LowImportanceModifier;           // type:FLOAT.0
	float                            _0x452EC6E4;                     // type:FLOAT.0
	array<string>                    ModelNamesToConsiderPlayersForScoringPurposes; // type:ARRAY.ATARRAY
	float                            RecklessCarSpeedMin;             // type:FLOAT.0
	float                            RecklessCarSpeedMax;             // type:FLOAT.0
	float                            CarSirenModifier;                // type:FLOAT.0
	float                            PlayerCopModifier;               // type:FLOAT.0
	float                            PlayerSexyPedModifier;           // type:FLOAT.0
	float                            PlayerSwankyCarModifier;         // type:FLOAT.0
	float                            PlayerCopCarModifier;            // type:FLOAT.0
	float                            PlayerHasslingModifier;          // type:FLOAT.0
	float                            HotPedMinDistance;               // type:FLOAT.0
	float                            HotPedMaxDistance;               // type:FLOAT.0
	float                            HotPedMinDotAngle;               // type:FLOAT.0
	float                            HotPedMaxDotAngle;               // type:FLOAT.0
	float                            HotPedMaxHeightDifference;       // type:FLOAT.0
	float                            InRangePlayerDistanceThreshold;  // type:FLOAT.0
	float                            _0x0CD1332F;                     // type:FLOAT.0
	float                            InRangePlayerInRaceDistanceThreshold; // type:FLOAT.0
	float                            ClosePlayerDistanceThreshold;    // type:FLOAT.0
	float                            _0xFE87B000;                     // type:FLOAT.0
	float                            ApproachingPlayerDistanceThreshold; // type:FLOAT.0
	float                            _0x08BDF678;                     // type:FLOAT.0
	float                            _0xD3B668A2;                     // type:FLOAT.0
	float                            ApproachingPlayerCosineThreshold; // type:FLOAT.0
	float                            RagdollPlayerDistanceThreshold;  // type:FLOAT.0
	float                            LookingInRangePlayerMaxDotAngle; // type:FLOAT.0
	float                            MaxVelocityForVehicleLookAtSqr;  // type:FLOAT.0
	uchar                            PlayerSwankyCarMin;              // type:UCHAR.0
	uchar                            PlayerSwankyCarMax;              // type:UCHAR.0
	bool                             HotPedRenderDebug;               // type:BOOL.0
	bool                             HotPedDisableSexinessFlagChecks; // type:BOOL.0
	float                            MinTimeBeforeSwitchLookAt;       // type:FLOAT.0
	float                            MaxLookBackAngle;                // type:FLOAT.0
	float                            MinTurnSpeedMotionOverPOI;       // type:FLOAT.0
	uint                             _0xB3AE7FCC;                     // type:UINT.0
	float                            SpeedForNarrowestAnglePickPOI;   // type:FLOAT.0
	float                            MaxAnglePickPOI;                 // type:FLOAT.0
	float                            MinAnglePickPOI;                 // type:FLOAT.0
	float                            MaxPitchingAnglePickPOI;         // type:FLOAT.0
	bool                             PlayerLookAtDebugDraw;           // type:BOOL.0
	enum LookIkTurnRate              CameraLookAtTurnRate;            // type:ENUM.32BIT
	enum LookIkTurnRate              POILookAtTurnRate;               // type:ENUM.32BIT
	enum LookIkTurnRate              MotionLookAtTurnRate;            // type:ENUM.32BIT
	enum LookIkTurnRate              VehicleJumpLookAtTurnRate;       // type:ENUM.32BIT
	enum LookIkBlendRate             CameraLookAtBlendRate;           // type:ENUM.32BIT
	enum LookIkBlendRate             POILookAtBlendRate;              // type:ENUM.32BIT
	enum LookIkBlendRate             MotionLookAtBlendRate;           // type:ENUM.32BIT
	enum LookIkBlendRate             VehicleJumpLookAtBlendRate;      // type:ENUM.32BIT
	enum LookIkRotationLimit         CameraLookAtRotationLimit;       // type:ENUM.32BIT
	enum LookIkRotationLimit         POILookAtRotationLimit;          // type:ENUM.32BIT
	enum LookIkRotationLimit         MotionLookAtRotationLimit;       // type:ENUM.32BIT
	float                            AITimeWaitingToCrossRoadMin;     // type:FLOAT.0
	float                            AITimeWaitingToCrossRoadMax;     // type:FLOAT.0
	uint                             uTimeBetweenLookBacks;           // type:UINT.0
	uint                             uTimeToLookBack;                 // type:UINT.0
	uint                             uAimToIdleLookAtTime;            // type:UINT.0
	float                            fAimToIdleBreakOutAngle;         // type:FLOAT.0
	float                            fAimToIdleAngleLimitLeft;        // type:FLOAT.0
	float                            fAimToIdleAngleLimitRight;       // type:FLOAT.0
	uint                             _0xB57A3EE8;                     // type:UINT.0
	float                            _0xED88FD70;                     // type:FLOAT.0
	float                            _0xF9AB83EF;                     // type:FLOAT.0
	float                            _0xF8045D2C;                     // type:FLOAT.0
	float                            _0x6443F4DB;                     // type:FLOAT.0
	float                            _0x84BE9848;                     // type:FLOAT.0
	float                            _0x1EA2C9EF;                     // type:FLOAT.0
	float                            _0xBA357BF0;                     // type:FLOAT.0
	float                            _0x20F34371;                     // type:FLOAT.0
	float                            _0xE4BD2BD4;                     // type:FLOAT.0
	float                            _0x68C0DC1C;                     // type:FLOAT.0
	float                            _0xD2004DAD;                     // type:FLOAT.0
	float                            _0xB61B7076;                     // type:FLOAT.0
	float                            _0xE9576337;                     // type:FLOAT.0
	uint                             _0x7B391ECB;                     // type:UINT.0
};

struct _0xF3FC0CDA : _0x8A0DC979
{
};

struct _0xF3FC4AA8
{
	array<struct _0x54B1B034>        _0xADBD7E99;                     // type:ARRAY.ATARRAY
	array<struct _0xE5588C18>        _0x3031D511;                     // type:ARRAY.ATARRAY
	array<struct _0x8BEC7F54>        Groups;                          // type:ARRAY.ATARRAY
};

struct _0xF41A59B9 : _0x2F7DA38D
{
	struct _0x24749343               clip;                            // type:STRUCT.STRUCTURE
	float                            blendInDuration;                 // type:FLOAT.0
	float                            blendOutDuration;                // type:FLOAT.0
	float                            _0x6B2E466B;                     // type:FLOAT.0
	float                            rate;                            // type:FLOAT.0
};

struct _0xF4257EC3
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	struct CAICondition              SupporterCondition;              // type:STRUCT.POINTER
	struct _0x6332BCAA               Flow;                            // type:STRUCT.STRUCTURE
	uint                             MinRepeatTime;                   // type:UINT.0
	uint                             MinPerPedRepeatTime;             // type:UINT.0
	bool                             CanIncludeSupporter;             // type:BOOL.0
	bool                             InitiateFollowPostConvo;         // type:BOOL.0
};

struct _0xF42FB8D1
{
};

struct _0xF43FEC94 : _0x0A510DA9
{
	enum _0x1100C0DF                 TargetType;                      // type:ENUM.32BIT
};

struct _0xF4456AAB : _0x476BC347
{
	enum rage__InputType             inputType;                       // type:ENUM.32BIT
};

struct _0xF4495B2C
{
	array<string>                    _0x2AF746D9;                     // type:ARRAY.ATARRAY
	array<string>                    _0x32DFC350;                     // type:ARRAY.ATARRAY
	string                           _0x29AF6BAD;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE84DF331;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9236F7BB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x387B8042;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xCAEE57D4;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ptFxScale;                       // type:FLOAT.0
	bool                             _0x8CFF024B;                     // type:BOOL.0
	float                            _0x38AAE645;                     // type:FLOAT.0
	float                            _0x446DA3FF;                     // type:FLOAT.0
	int                              _0x297AD32D;                     // type:INT.0
	float                            _0xB0C57ED8;                     // type:FLOAT.0
	bool                             _0x4269995A;                     // type:BOOL.0
	float                            _0x7FC8C013;                     // type:FLOAT.0
	float                            _0xB217A65B;                     // type:FLOAT.0
	float                            _0x1C08A48D;                     // type:FLOAT.0
	float                            _0xB2A1C79D;                     // type:FLOAT.0
	float                            _0x9FB11329;                     // type:FLOAT.0
	float                            _0x320DC114;                     // type:FLOAT.0
	float                            _0x355A7E81;                     // type:FLOAT.0
	float                            _0x49D32EDE;                     // type:FLOAT.0
	bool                             _0x0B2868C7;                     // type:BOOL.0
	float                            _0x8A342782;                     // type:FLOAT.0
	bool                             _0x66441B6D;                     // type:BOOL.0
	float                            _0x68F96335;                     // type:FLOAT.0
	float                            _0xA8C46BCA;                     // type:FLOAT.0
	float                            _0xFCB4406F;                     // type:FLOAT.0
	float                            _0x460D43E2;                     // type:FLOAT.0
	float                            _0xED0CCA48;                     // type:FLOAT.0
	float                            _0x88CA1CE0;                     // type:FLOAT.0
	float                            _0x8CFF9E67;                     // type:FLOAT.0
	float                            _0x1142A242;                     // type:FLOAT.0
	float                            _0x26A5183F;                     // type:FLOAT.0
	float                            _0xB4A4CC31;                     // type:FLOAT.0
	float                            _0xA467BD9A;                     // type:FLOAT.0
	float                            _0xAC7ED844;                     // type:FLOAT.0
	float                            _0x34BE604D;                     // type:FLOAT.0
	bool                             _0x2C1B8785;                     // type:BOOL.0
};

struct _0xF464196A
{
	string                           diffuseMapName;                  // type:STRING.ATNONFINALHASHSTRING
	string                           normalMapName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           materialAMapName;                // type:STRING.ATNONFINALHASHSTRING
	string                           materialBMapName;                // type:STRING.ATNONFINALHASHSTRING
	string                           alphaThresholdMapName;           // type:STRING.ATNONFINALHASHSTRING
	string                           damageModelHashName;             // type:STRING.ATNONFINALHASHSTRING
	bool                             isPBREnabled;                    // type:BOOL.0
	uchar                            texNumRows;                      // type:UCHAR.0
	uchar                            texNumColumns;                   // type:UCHAR.0
	uchar                            texIdA;                          // type:UCHAR.0
	uchar                            texIdB;                          // type:UCHAR.0
	float                            texAnimTime;                     // type:FLOAT.0
	float                            sizeMult;                        // type:FLOAT.0
	float                            specFalloff;                     // type:FLOAT.0
	float                            specIntensity;                   // type:FLOAT.0
	float                            specFresnel;                     // type:FLOAT.0
	bool                             parallaxUseSteep;                // type:BOOL.0
	float                            parallaxScale;                   // type:FLOAT.0
	float                            emissiveness;                    // type:FLOAT.0
	float                            wrapLength;                      // type:FLOAT.0
	float                            wrapLengthScaleWidth;            // type:FLOAT.0
	float                            materialTintAmount;              // type:FLOAT.0
	float                            translucencyAsTint;              // type:FLOAT.0
	float                            centreX;                         // type:FLOAT.0
	float                            centreY;                         // type:FLOAT.0
	array<vec3>                      vSideAlignVectors;               // type:ARRAY.ATARRAY
	float                            diffuseBlend;                    // type:FLOAT.0
	float                            normalBlend;                     // type:FLOAT.0
	bool                             isWashable;                      // type:BOOL.0
	bool                             createUnderwater;                // type:BOOL.0
	bool                             fadeUnderwater;                  // type:BOOL.0
	bool                             useAniso;                        // type:BOOL.0
	bool                             useAlphaThreshold;               // type:BOOL.0
	bool                             renderToHeightMap;               // type:BOOL.0
	bool                             isBurnable;                      // type:BOOL.0
	float                            alphaThresholdRangeMin;          // type:FLOAT.0
	float                            alphaThresholdRangeMax;          // type:FLOAT.0
	float                            alphaThresholdClampMin;          // type:FLOAT.0
	float                            alphaThresholdClampMax;          // type:FLOAT.0
	float                            alphaThresholdStartTime;         // type:FLOAT.0
	float                            alphaThresholdEndTime;           // type:FLOAT.0
	struct _0xBF2BD132               alphaThreshold;                  // type:STRUCT.STRUCTURE
	string                           trailLeadInRenderSettingsGroup;  // type:STRING.ATNONFINALHASHSTRING
	string                           trailLeadOutRenderSettingsGroup; // type:STRING.ATNONFINALHASHSTRING
	float                            trailLeadInOutLength;            // type:FLOAT.0
	vec2V                            uvScrollSpeed;                   // type:VEC2V.0
	array<struct _0x961DA0C6>        compositeSettings;               // type:ARRAY.ATARRAY
	struct _0x735C51D6               vegetationSettings;              // type:STRUCT.STRUCTURE
	struct _0x9B4E52E7               wetnessSettings;                 // type:STRUCT.STRUCTURE
};

struct _0xF4776D50 : _0x0FC1398F
{
	enum _0x039DE455                 ActionMode;                      // type:ENUM.32BIT
	bool                             _0xE1294A90;                     // type:BOOL.0
};

struct _0xF479EE77
{
	string                              Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                              _0x6978C5D6;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0xF2D36B2D;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x95DDA1DE;                     // type:STRING.ATNONFINALHASHSTRING
	string                              _0x1CB8CBD7;                     // type:STRING.ATNONFINALHASHSTRING
	enum _0xAE300DE1                    _0x95CD5D0E;                     // type:ENUM.32BIT
	string                              _0x9CF6C2AA;                     // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xDADCC046>           MotionTypes;                     // type:ARRAY.ATARRAY
	array<struct _0xDADCC046>           _0xEFB3C080;                     // type:ARRAY.ATARRAY
	array<struct _0x841F381E>           _0x18140ED7;                     // type:ARRAY.ATARRAY
	array<struct _0x841F381E>           _0x37894773;                     // type:ARRAY.ATARRAY
	array<string>                       _0x859E3FD8;                     // type:ARRAY.ATARRAY
	map<string, struct _0x2C2A81C8>     _0x6ED90957;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x2073EFE1>     _0x89FF1877;                     // type:MAP.ATBINARYMAP
	map<string, struct _0x44C611C0>     _0x9E6C3015;                     // type:MAP.ATBINARYMAP
	array<struct _0x5828D5EA>           Values;                          // type:ARRAY.ATARRAY
};

struct _0xF487CBEA : _0xAF24E56C
{
};

struct _0xF489ADBF
{
	vec3V                            _0x4023BEE1;                     // type:VEC3V.0
	vec3V                            _0x4DED5A74;                     // type:VEC3V.0
};

struct _0xF490B1A8
{
	string                           propModelName;                   // type:STRING.ATNONFINALHASHSTRING
	string                           dofId;                           // type:STRING.ATHASHVALUE16U
	float                            initialAnimValue;                // type:FLOAT.0
	float                            minAnimValue;                    // type:FLOAT.0
	float                            maxAnimValue;                    // type:FLOAT.0
	enum _0x0100F80E                 interpCurve;                     // type:ENUM.32BIT
	float                            interpSpringConstant;            // type:FLOAT.0
	float                            interpSpringRatio;               // type:FLOAT.0
	float                            minBlendAgeValue;                // type:FLOAT.0
	float                            _0xE4FEA859;                     // type:FLOAT.0
	bitset<enum _0xB2F9F539>         flags;                           // type:BITSET.8BIT
};

struct _0xF4966086
{
};

struct _0xF4A0EC16 : _0x43127582
{
	float                            GlancingChance;                  // type:FLOAT.0
	float                            _0x47774DAF;                     // type:FLOAT.0
	float                            _0xF7408BDA;                     // type:FLOAT.0
	float                            _0x464ABF95;                     // type:FLOAT.0
	float                            _0x31A9C9AA;                     // type:FLOAT.0
};

struct _0xF4C04F44 : _0x906508CE
{
	bool                             _0xCB4861BA;                     // type:BOOL.0
	uint                             _0xABD53D84;                     // type:UINT.0
	array<struct _0xE4042597>        _0x62825383;                     // type:ARRAY.ATARRAY
};

struct _0xF4C3FEF5
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x59D4005F>        ReviveTimes;                     // type:ARRAY.ATARRAY
};

struct _0xF4CF46A4
{
	uint                             _0x3226ECB9;                     // type:UINT.0
	float                            _0xDD67E705;                     // type:FLOAT.0
	float                            _0xCF6E688D;                     // type:FLOAT.0
	float                            _0xF11144B7;                     // type:FLOAT.0
	float                            _0x0E15FEF1;                     // type:FLOAT.0
	float                            _0x116821A1;                     // type:FLOAT.0
	float                            _0x9E9C7250;                     // type:FLOAT.0
	float                            _0xE805EA7F;                     // type:FLOAT.0
	enum _0x6BCA108F                 _0xF70F109C;                     // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x9CFA1A3E;                     // type:ENUM.32BIT
};

struct _0xF4FAF698 : UIBehavior
{
	string                           TextureDictionary;               // type:STRING.ATSTRING
};

struct _0xF4FFD05A
{
	float                            _0x84DC146F;                     // type:FLOAT.0
	float                            _0xC5342669;                     // type:FLOAT.0
	uint                             _0x140C1A76;                     // type:UINT.0
};

struct _0xF4FFDEDB
{
	float                            _0x794A8117;                     // type:FLOAT.0
	float                            _0x7651CC5B;                     // type:FLOAT.0
	float                            _0x269DBA9B;                     // type:FLOAT.0
	vec2                             _0x4B53DC88;                     // type:VECTOR2.0
	vec2                             _0x73E4C4FF;                     // type:VECTOR2.0
	float                            _0x3BD8B842;                     // type:FLOAT.0
	float                            _0xC7A8E55E;                     // type:FLOAT.0
	float                            _0xF2218C23;                     // type:FLOAT.0
	float                            _0x4A0517C5;                     // type:FLOAT.0
	float                            _0x585EB478;                     // type:FLOAT.0
	float                            _0x6AEFD992;                     // type:FLOAT.0
	vec2                             _0x2ECAEF3F;                     // type:VECTOR2.0
	float                            alphaScale;                      // type:FLOAT.0
	float                            _0x0E6B6818;                     // type:FLOAT.0
	float                            _0xE2B1835E;                     // type:FLOAT.0
	float                            _0xB6262130;                     // type:FLOAT.0
	float                            _0xF3C03272;                     // type:FLOAT.0
	float                            _0x8C9CCB9D;                     // type:FLOAT.0
	vec2                             _0x05688BDE;                     // type:VECTOR2.0
	vec2                             _0x5F3606A3;                     // type:VECTOR2.0
	vec2                             _0xC84DA098;                     // type:VECTOR2.0
	float                            _0xD41C3199;                     // type:FLOAT.0
	float                            _0xB039E517;                     // type:FLOAT.0
	float                            _0x4028FB9F;                     // type:FLOAT.0
	vec2                             _0xF7A741B8;                     // type:VECTOR2.0
	vec2                             noiseUVScale;                    // type:VECTOR2.0
	int                              _0x59D139D5;                     // type:INT.0
	int                              _0xFA1764E1;                     // type:INT.0
	int                              _0x495ACA44;                     // type:INT.0
	int                              _0x21EED390;                     // type:INT.0
};

struct _0xF50932F7
{
	bitset<enum _0x5CEFF047>         Flags;                           // type:BITSET.32BIT
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF50E6E65 : _0x0A510DA9
{
	enum _0x509C0B00                 Property;                        // type:ENUM.32BIT
};

struct _0xF51D5F09
{
	string                           Category;                        // type:STRING.ATNONFINALHASHSTRING
	string                           Subcategory;                     // type:STRING.ATNONFINALHASHSTRING
	string                           LocText;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF51E79D8
{
	bool                             Disable;                         // type:BOOL.0
	bool                             ClampOutOfBounds;                // type:BOOL.0
	float                            Min;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            MultiplierForMin;                // type:FLOAT.0
	float                            MultiplierForMax;                // type:FLOAT.0
	float                            MultiplierForOutOfBounds;        // type:FLOAT.0
};

struct _0xF521737E
{
	float                            _0x8C2BB76F;                     // type:FLOAT.0
	float                            _0xB34E5C99;                     // type:FLOAT.0
	float                            _0xC14B8A98;                     // type:FLOAT.0
	float                            _0xFEE046CD;                     // type:FLOAT.0
	float                            _0x94413586;                     // type:FLOAT.0
	float                            _0xE90824AA;                     // type:FLOAT.0
	float                            _0x8C907B91;                     // type:FLOAT.0
	float                            _0xC3301CB8;                     // type:FLOAT.0
	int                              _0x90E4470B;                     // type:INT.0
};

struct _0xF5316DB2 : _0x8A0DC979
{
};

struct _0xF53E0C0A : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	bool                             _0x6934F706;                     // type:BOOL.0
	bool                             Horses;                          // type:BOOL.0
	bool                             _0x51A3AC6E;                     // type:BOOL.0
};

struct _0xF553D153
{
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
	float                            Weight;                          // type:FLOAT.0
};

struct _0xF562DF8C : CTuning
{
	float                            fCutoffDistForNodeSearch;        // type:FLOAT.0
	float                            fMinDistanceBetweenNodes;        // type:FLOAT.0
	float                            fForwardProjectionInSeconds;     // type:FLOAT.0
	float                            fDistBeforeMovingToNextNode;     // type:FLOAT.0
	float                            _0x5D3B6ABE;                     // type:FLOAT.0
	float                            _0xF30B9772;                     // type:FLOAT.0
	float                            fTimeBeforeRestart;              // type:FLOAT.0
	bool                             bIgnoreSwitchedOffNodes;         // type:BOOL.0
	bool                             bUseWaterNodes;                  // type:BOOL.0
	bool                             bUseOnlyHighwayNodes;            // type:BOOL.0
	bool                             bSearchUpFromPosition;           // type:BOOL.0
};

struct _0xF57272CF
{
	bitset<enum _0xE0026AC4>         Flags;                           // type:BITSET.32BIT
	uint                             _0xF6686549;                     // type:UINT.0
	uint                             _0xF7868E5C;                     // type:UINT.0
	uint                             _0xEFE90038;                     // type:UINT.0
};

struct _0xF57B733E : _0xE453720A
{
	enum _0x465E3C3E                 hScrollBarVisibility;            // type:ENUM.32BIT
	enum _0x465E3C3E                 vScrollBarVisibility;            // type:ENUM.32BIT
	ushort                           scrollPixelHorizontalOffset;     // type:USHORT.0
	ushort                           scrollPixelVerticalOffset;       // type:USHORT.0
	bool                             scrollContents;                  // type:BOOL.0
	bool                             scrollHorizontally;              // type:BOOL.0
	bool                             scrollVertically;                // type:BOOL.0
	bool                             _0xFF575E39;                     // type:BOOL.0
};

struct _0xF57D322B : _0x940B34F5
{
	struct _0x940B34F5               Base;                            // type:STRUCT.POINTER
	array<struct _0x940B34F5>        Variants;                        // type:ARRAY.ATARRAY
	array<string>                    _0x7DCB0D5D;                     // type:ARRAY.ATARRAY
	float                            _0xE12DC689;                     // type:FLOAT.0
	float                            _0xA05CB6CD;                     // type:FLOAT.0
};

struct _0xF57D6B5C : _0xA55010A3
{
};

struct _0xF58F945F
{
	array<struct _0xB6EA09BE>        _0x21FA44EB;                     // type:ARRAY.ATARRAY
	uint                             _0x179DE28F;                     // type:UINT.0
	bool                             _0x2777C4AD;                     // type:BOOL.0
};

struct _0xF5A13AF4
{
};

struct _0xF5A3BB6D
{
	array<uint64, 16>                Bitset;                          // type:ARRAY.ATRANGEARRAY
	float                            CellSize;                        // type:FLOAT.0
	char                             GridSizeX;                       // type:CHAR.0
	char                             GridSizeY;                       // type:CHAR.0
	char                             RowSpan;                         // type:CHAR.0
};

struct _0xF5AF8ADA : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	uint                             minimum;                         // type:UINT.0
	uint                             maximum;                         // type:UINT.0
	uint                             default;                         // type:UINT.0
};

struct _0xF5CD8B85 : uiBaseInputContext
{
};

struct _0xF5E8217E : _0x2F7DA38D
{
	struct _0xED16C5B0               targetEntity;                    // type:STRUCT.STRUCTURE
	enum eAnimBoneTag                _0x28534F8C;                     // type:ENUM.32BIT
	vec3V                            targetOffset;                    // type:VEC3V.0
	enum LookIkBlendRate             _0x9869600B;                     // type:ENUM.32BIT
	enum LookIkBlendRate             _0x202EC9D2;                     // type:ENUM.32BIT
	enum LookIkTurnRate              _0xC9076054;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0xC31AF87E;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0x76AB286D;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0xFAECFADE;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0x9E70D7DE;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0x4CF9A4B0;                     // type:ENUM.32BIT
	enum LookIkRotationLimit         _0x44A1BA4A;                     // type:ENUM.32BIT
	bitset<enum _0x4F11A009>         _0xBC28C697;                     // type:BITSET.32BIT
};

struct _0xF5E8F50C
{
	bitset<enum _0x34A5CC96>         Flags;                           // type:BITSET.32BIT
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           Trigger;                         // type:STRING.ATNONFINALHASHSTRING
	string                           _0x5D1F0172;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x2EEA9C0B;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x6D511F20;                     // type:FLOAT.0
	float                            _0xAED773BF;                     // type:FLOAT.0
	float                            _0xC309CE52;                     // type:FLOAT.0
	float                            _0x90E3A803;                     // type:FLOAT.0
	float                            _0x0C530BCE;                     // type:FLOAT.0
	float                            _0x99B4F030;                     // type:FLOAT.0
	float                            _0x86DD293D;                     // type:FLOAT.0
	float                            _0xE52C5845;                     // type:FLOAT.0
	float                            _0x02C490F2;                     // type:FLOAT.0
	float                            _0x2F98F7AA;                     // type:FLOAT.0
	float                            _0x58BB676C;                     // type:FLOAT.0
	float                            _0x42640448;                     // type:FLOAT.0
	float                            _0x9EF77CFB;                     // type:FLOAT.0
};

struct _0xF5F565BD : CTuning
{
	struct _0xB8540E18               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xF5F9F610
{
	string                           propset;                         // type:STRING.ATNONFINALHASHSTRING
	string                           cargoProp;                       // type:STRING.ATNONFINALHASHSTRING
	array<ushort>                    cargo;                           // type:ARRAY.ATARRAY
	string                           ropesProp;                       // type:STRING.ATNONFINALHASHSTRING
	array<ushort>                    ropes;                           // type:ARRAY.ATARRAY
	bitset<enum _0xC609C6E4>         flags;                           // type:BITSET.8BIT
};

struct _0xF60A0664
{
	int                              _0xC90AFB3D;                     // type:INT.0
	array<struct _0x6BFCA598>        _0x36C409A9;                     // type:ARRAY.ATARRAY
	array<struct _0x8BC7ECFC>        _0x24C7A82F;                     // type:ARRAY.ATARRAY
	array<struct _0x8DF49F7E>        _0xDE014725;                     // type:ARRAY.ATARRAY
	array<string>                    _0xE30A167B;                     // type:ARRAY.ATARRAY
	array<struct _0x73B53AA2>        _0x044A816A;                     // type:ARRAY.ATARRAY
	array<struct _0x98CA566D>        _0x97D414E4;                     // type:ARRAY.ATARRAY
};

struct _0xF61A731C
{
	map<string, struct _0xFAC7C240>     WeaponHoldingDataByEntryPointKey; // type:MAP.ATBINARYMAP
};

struct _0xF6269ED0 : _0x8A0DC979
{
};

struct _0xF62766EA
{
	float                            BlendInSpringConstant;           // type:FLOAT.0
	float                            BlendOutSpringConstant;          // type:FLOAT.0
	float                            _0x98B4BE38;                     // type:FLOAT.0
	bool                             _0xC537DB09;                     // type:BOOL.0
	bool                             _0xFE697695;                     // type:BOOL.0
	float                            _0x791B55E6;                     // type:FLOAT.0
	float                            _0xFB0803FA;                     // type:FLOAT.0
	float                            _0xCEAB60A8;                     // type:FLOAT.0
	float                            _0x4CB0E408;                     // type:FLOAT.0
	float                            _0x8CCE330A;                     // type:FLOAT.0
	float                            _0xD322837A;                     // type:FLOAT.0
	uint                             _0xB27AA19F;                     // type:UINT.0
	float                            MaxRelativeHeading;              // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            ZoomFactor;                      // type:FLOAT.0
	string                           _0xEC14B931;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0xD732565C;                     // type:BOOL.0
	float                            _0xD8A0BA0E;                     // type:FLOAT.0
	float                            _0x79130A70;                     // type:FLOAT.0
	float                            _0xE5AB1ABA;                     // type:FLOAT.0
	float                            _0x4248DF8F;                     // type:FLOAT.0
	float                            _0x04ABD08F;                     // type:FLOAT.0
};

struct _0xF6282E2F : _0xE9505B40
{
	float                            Low;                             // type:FLOAT.0
	float                            High;                            // type:FLOAT.0
};

struct _0xF62DAD25 : _0x857163E6
{
	float                            Scale;                           // type:FLOAT.0
};

struct _0xF643E290 : _0x906508CE
{
	bool                             _0x8B2E2885;                     // type:BOOL.0
};

struct _0xF6444B94 : _0xA0889763
{
};

struct _0xF6624EF9
{
	uint                             LinkType;                        // type:UINT.0
	float                            MaxOcclusion;                    // type:FLOAT.0
	uint                             _0xE3674005;                     // type:UINT.0
	bool                             IsDoor;                          // type:BOOL.0
	bool                             IsGlass;                         // type:BOOL.0
};

struct _0xF66AC953 : CAICondition
{
};

struct _0xF68CC0B9 : CAICondition
{
};

struct _0xF690E45F : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xF6AA598A : CTuning
{
	float                            _0x616E4601;                     // type:FLOAT.0
	float                            _0x8DFDF265;                     // type:FLOAT.0
};

struct _0xF6B42D89
{
	float                            _0xB01F8A04;                     // type:FLOAT.0
	float                            _0x20B7EC94;                     // type:FLOAT.0
	int                              _0xF78874A0;                     // type:INT.0
	int                              _0x9FE4C57A;                     // type:INT.0
	int                              _0x5659C6DF;                     // type:INT.0
};

struct _0xF6BEAC4C : _0x3795142C
{
};

struct _0xF6C61CF6 : CAICondition
{
};

struct _0xF6DADE2D : CTuning
{
	bool                             bEnabled;                        // type:BOOL.0
	bool                             _0xF172E275;                     // type:BOOL.0
	bool                             _0xB395ACC0;                     // type:BOOL.0
	bool                             _0x4DC1F129;                     // type:BOOL.0
	bool                             _0x81CCFB00;                     // type:BOOL.0
	bool                             _0x0054AF7B;                     // type:BOOL.0
	bool                             _0xEA9E83C9;                     // type:BOOL.0
	bool                             _0x47D5F177;                     // type:BOOL.0
	bool                             _0x9EF8107C;                     // type:BOOL.0
	bool                             _0x5C5D0D2F;                     // type:BOOL.0
	bool                             _0x9FB87D71;                     // type:BOOL.0
	bool                             _0x40006DB7;                     // type:BOOL.0
	bool                             _0x82E61477;                     // type:BOOL.0
	bool                             _0x744B1DB4;                     // type:BOOL.0
	bool                             _0x5A263412;                     // type:BOOL.0
	bool                             _0x6D1059E6;                     // type:BOOL.0
	bool                             _0x7F07FDD5;                     // type:BOOL.0
	bool                             _0x01EE03A3;                     // type:BOOL.0
	bool                             _0x8AC029F9;                     // type:BOOL.0
	bool                             _0x36708D3B;                     // type:BOOL.0
	bool                             _0xFA393209;                     // type:BOOL.0
	bool                             _0x8A9DB6C6;                     // type:BOOL.0
	bool                             _0x66E3707D;                     // type:BOOL.0
	bool                             _0xA5CE16B7;                     // type:BOOL.0
	float                            _0x1308C879;                     // type:FLOAT.0
	float                            _0xC26E8F3B;                     // type:FLOAT.0
	float                            _0x5DE1913C;                     // type:FLOAT.0
	float                            _0x72921E3A;                     // type:FLOAT.0
	float                            _0xC282DBD5;                     // type:FLOAT.0
	float                            _0xDDD4BB04;                     // type:FLOAT.0
	float                            _0x0AE9B6F6;                     // type:FLOAT.0
	float                            _0x00598CE8;                     // type:FLOAT.0
	float                            _0x2E60B0CA;                     // type:FLOAT.0
	float                            _0xA6FBAAA0;                     // type:FLOAT.0
	float                            _0x4387EEA2;                     // type:FLOAT.0
	float                            _0xED135E2A;                     // type:FLOAT.0
	float                            _0x9AF8E94E;                     // type:FLOAT.0
	float                            _0xE2D2F372;                     // type:FLOAT.0
	float                            _0x0CD985D7;                     // type:FLOAT.0
	float                            _0x405229B1;                     // type:FLOAT.0
	float                            _0xDC526AB3;                     // type:FLOAT.0
	float                            _0x15E35CF4;                     // type:FLOAT.0
	float                            _0xD0CC7FCF;                     // type:FLOAT.0
	float                            _0xB0383A12;                     // type:FLOAT.0
	float                            _0xB0EEEDC8;                     // type:FLOAT.0
	float                            _0x475F1E93;                     // type:FLOAT.0
	float                            _0x0CF72278;                     // type:FLOAT.0
	float                            _0x6218B15D;                     // type:FLOAT.0
	float                            _0x6846E310;                     // type:FLOAT.0
	float                            _0x89DED848;                     // type:FLOAT.0
	float                            _0xC16FA447;                     // type:FLOAT.0
	float                            _0x36FA9741;                     // type:FLOAT.0
	float                            _0x56C26316;                     // type:FLOAT.0
	float                            _0x2DDDDC7C;                     // type:FLOAT.0
	float                            _0xC20FD6E4;                     // type:FLOAT.0
	float                            _0xD01DC5A8;                     // type:FLOAT.0
	float                            _0xFE542A50;                     // type:FLOAT.0
	float                            _0x619D3D50;                     // type:FLOAT.0
	float                            _0x053D8BF5;                     // type:FLOAT.0
	float                            _0x2CB2F033;                     // type:FLOAT.0
	float                            _0x6DD8B9EF;                     // type:FLOAT.0
	float                            _0xD21AAB67;                     // type:FLOAT.0
	float                            _0xE80F89A9;                     // type:FLOAT.0
	float                            _0x12D0216C;                     // type:FLOAT.0
	bool                             _0x497FD358;                     // type:BOOL.0
	bool                             _0x89AB1ABD;                     // type:BOOL.0
	bool                             _0x320256F7;                     // type:BOOL.0
	float                            _0x4734B9FF;                     // type:FLOAT.0
	float                            _0xF87C495F;                     // type:FLOAT.0
	float                            _0xA0561A9C;                     // type:FLOAT.0
	float                            _0xFFE95FD0;                     // type:FLOAT.0
	float                            _0x80136D21;                     // type:FLOAT.0
	float                            _0x4BA3AFF0;                     // type:FLOAT.0
	float                            _0xEC34B431;                     // type:FLOAT.0
	float                            _0x5BAFAB86;                     // type:FLOAT.0
	bool                             _0xEA9CD58F;                     // type:BOOL.0
	float                            _0x413F527F;                     // type:FLOAT.0
	float                            _0x2FD0DE85;                     // type:FLOAT.0
	int                              _0xC241682E;                     // type:INT.0
	int                              _0x28CF7E44;                     // type:INT.0
	int                              _0x14D54EE5;                     // type:INT.0
	int                              _0x796B3376;                     // type:INT.0
	int                              _0xBB661012;                     // type:INT.0
	int                              _0xB2B802D4;                     // type:INT.0
	int                              _0x1490AAED;                     // type:INT.0
	int                              _0xD88E88A0;                     // type:INT.0
	int                              _0xE549CE9F;                     // type:INT.0
	int                              _0x689A6D85;                     // type:INT.0
	int                              _0xE75861AA;                     // type:INT.0
	int                              _0x7F8E17C1;                     // type:INT.0
	int                              _0x41476EAD;                     // type:INT.0
	int                              _0x4FD7282A;                     // type:INT.0
	int                              _0x0FC27D47;                     // type:INT.0
	int                              _0x6F075985;                     // type:INT.0
	int                              _0x08C06DA6;                     // type:INT.0
	int                              _0x939C28F4;                     // type:INT.0
	int                              _0x23AFEEEC;                     // type:INT.0
	int                              _0x735BFCB7;                     // type:INT.0
	int                              _0xC7000370;                     // type:INT.0
	int                              _0x87201098;                     // type:INT.0
	int                              _0x67B3F672;                     // type:INT.0
	float                            _0xF38A658B;                     // type:FLOAT.0
	float                            _0x8B38A679;                     // type:FLOAT.0
	bool                             _0x82EBD52C;                     // type:BOOL.0
	bool                             _0xE8E52574;                     // type:BOOL.0
	bool                             _0x42D9737E;                     // type:BOOL.0
	bool                             _0xA52A29B3;                     // type:BOOL.0
	bool                             _0x1ADCA726;                     // type:BOOL.0
	bool                             _0x58661848;                     // type:BOOL.0
	bool                             _0x861F3733;                     // type:BOOL.0
	float                            _0x7803D43E;                     // type:FLOAT.0
	bool                             _0xDFBABD6C;                     // type:BOOL.0
	bool                             _0x1345B59C;                     // type:BOOL.0
	float                            _0x2F448DFC;                     // type:FLOAT.0
	float                            _0xC9086513;                     // type:FLOAT.0
	float                            _0x26D21072;                     // type:FLOAT.0
	float                            _0x88D07490;                     // type:FLOAT.0
	float                            _0x18A1D7B0;                     // type:FLOAT.0
	float                            _0x57877591;                     // type:FLOAT.0
	float                            _0x6957005F;                     // type:FLOAT.0
	float                            _0x22784B92;                     // type:FLOAT.0
	float                            _0xFD65A58C;                     // type:FLOAT.0
	float                            _0xA8C2EF88;                     // type:FLOAT.0
	float                            _0xAC6C087B;                     // type:FLOAT.0
	float                            _0x209B47B7;                     // type:FLOAT.0
	float                            _0xEEE892A8;                     // type:FLOAT.0
	float                            _0x52CC9050;                     // type:FLOAT.0
	float                            _0x7B5EE59B;                     // type:FLOAT.0
	float                            _0x67D30767;                     // type:FLOAT.0
	float                            _0x29066BCB;                     // type:FLOAT.0
	float                            _0xB86965C5;                     // type:FLOAT.0
	float                            _0xF93A12E4;                     // type:FLOAT.0
	float                            _0x4C7BD0FF;                     // type:FLOAT.0
	float                            _0x396232CD;                     // type:FLOAT.0
	float                            _0x110A67CC;                     // type:FLOAT.0
	bool                             _0xF6D2D6F3;                     // type:BOOL.0
	bool                             _0xC60BD24A;                     // type:BOOL.0
	bool                             _0x66E6CFC9;                     // type:BOOL.0
	bool                             _0x72C87A49;                     // type:BOOL.0
	float                            _0x2AE1ADE7;                     // type:FLOAT.0
	float                            _0x22EECD3E;                     // type:FLOAT.0
	float                            _0x79863094;                     // type:FLOAT.0
	bool                             _0xE1B11AA7;                     // type:BOOL.0
	bool                             _0xAD227386;                     // type:BOOL.0
	float                            _0xE6289F18;                     // type:FLOAT.0
	int                              _0x1C248FB6;                     // type:INT.0
	float                            _0x84E5EDC8;                     // type:FLOAT.0
	float                            _0x694DEBE6;                     // type:FLOAT.0
	float                            _0x4E5AF984;                     // type:FLOAT.0
	float                            _0x4213DD79;                     // type:FLOAT.0
	float                            _0xFDBE6A2D;                     // type:FLOAT.0
	float                            _0xAE26B480;                     // type:FLOAT.0
	float                            _0x8C7AFB4E;                     // type:FLOAT.0
	float                            _0x0238C151;                     // type:FLOAT.0
	float                            _0xC1B4EB0B;                     // type:FLOAT.0
	float                            _0x0A0F5690;                     // type:FLOAT.0
};

struct _0xF6EE4156 : _0x8A0DC979
{
};

struct _0xF6F994E2
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3V                            StartPosition;                   // type:VEC3V.0
	float                            StartHeading;                    // type:FLOAT.0
	vec3V                            EndPosition;                     // type:VEC3V.0
	float                            EndHeading;                      // type:FLOAT.0
	float                            EndRadius;                       // type:FLOAT.0
	enum _0xF0ABB7D4                 _0x9EFE1909;                     // type:ENUM.32BIT
	string                           WaypointRecording;               // type:STRING.ATFINALHASHSTRING
	bool                             _0x24202744;                     // type:BOOL.0
	bool                             _0xBF955C91;                     // type:BOOL.0
};

struct _0xF701F7B5 : _0x810637E9
{
	enum _0xD8143408                 ConditionTestType;               // type:ENUM.32BIT
};

struct _0xF7040A6C
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           path;                            // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF708B22C
{
	bool                             Enabled;                         // type:BOOL.0
	float                            MinTimeBeforeReact;              // type:FLOAT.0
	float                            MaxTimeBeforeReact;              // type:FLOAT.0
	float                            MaxTimeSinceShot;                // type:FLOAT.0
	float                            MaxDistance;                     // type:FLOAT.0
	float                            _0xF2533252;                     // type:FLOAT.0
};

struct _0xF70F21F5 : _0x11AD3051
{
	struct _0x66C95AB8               _0x6C60E551;                     // type:STRUCT.POINTER
	struct _0x4B852C44               conditions;                      // type:STRUCT.POINTER
	enum _0x659ABAA3                 _0xCE881158;                     // type:ENUM.32BIT
};

struct _0xF72CBA11
{
	string                           Name;                            // type:STRING.ATSTRING
	enum _0x9AA09C95                 SystemType;                      // type:ENUM.32BIT
	string                           diffuseName;                     // type:STRING.ATSTRING
	string                           distortionTexture;               // type:STRING.ATSTRING
	string                           diffuseSplashName;               // type:STRING.ATSTRING
	string                           alphaThresholdName;              // type:STRING.ATSTRING
	enum _0x1130FE8B                 driveType;                       // type:ENUM.32BIT
	float                            windInfluence;                   // type:FLOAT.0
	float                            gravity;                         // type:FLOAT.0
	float                            particleStartThreshold;          // type:FLOAT.0
	string                           emitterSettingsName;             // type:STRING.ATSTRING
	string                           renderSettingsName;              // type:STRING.ATSTRING
};

struct _0xF736D4CE : _0x906508CE
{
};

struct _0xF7380478
{
	struct _0xB4A4AC8A               TextureData;                     // type:STRUCT.STRUCTURE
};

struct _0xF7390130 : _0xB230FB19
{
	uint                             _0x3856E2E2;                     // type:UINT.0
	struct _0x4365821B               _0x63B34255;                     // type:STRUCT.STRUCTURE
};

struct _0xF73C64B7 : _0x3795142C
{
};

struct _0xF7648DD6
{
	struct _0xE4DC25D5               AllDoors;                        // type:STRUCT.STRUCTURE
	array<struct _0xE4DC25D5>        SpecificDoors;                   // type:ARRAY.ATARRAY
};

struct _0xF765B370
{
	int                              AttachBoneTag;                   // type:INT.0
	vec3                             AttachOffset;                    // type:VECTOR3.0
	bool                             _0x418AB98A;                     // type:BOOL.0
	float                            _0x74B7D87E;                     // type:FLOAT.0
	float                            _0x8BABD3AE;                     // type:FLOAT.0
	float                            _0x8F7090F7;                     // type:FLOAT.0
	float                            _0x7E2A9DA3;                     // type:FLOAT.0
	float                            MinRoll;                         // type:FLOAT.0
	float                            MaxRoll;                         // type:FLOAT.0
	float                            _0xE46E9663;                     // type:FLOAT.0
	float                            _0xD9C0A719;                     // type:FLOAT.0
	float                            _0x52EEED84;                     // type:FLOAT.0
};

struct _0xF77CA782 : CTuning
{
	array<struct _0x5DAAEF88>        Areas;                           // type:ARRAY.ATARRAY
};

struct _0xF77D5267 : CTuning
{
	float                            _0x97792FD5;                     // type:FLOAT.0
	float                            _0xDD988B10;                     // type:FLOAT.0
	float                            _0x2334D267;                     // type:FLOAT.0
	float                            _0x7F2EEB4D;                     // type:FLOAT.0
	float                            _0x91FC5A2F;                     // type:FLOAT.0
};

struct _0xF7834B01 : _0xC2A67265
{
	uint                             Value;                           // type:UINT.0
};

struct _0xF788E78A : uiFilter
{
	struct _0x3603B2DE               Properties;                      // type:STRUCT.STRUCTURE
};

struct _0xF79CF094 : _0x8A0DC979
{
};

struct _0xF7A7F505
{
	int                              HoursSinceRevived;               // type:INT.0
	string                           VfxDamagePack;                   // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF7AB507E
{
	enum _0xBEEA6142                 ExtraId;                         // type:ENUM.32BIT
	bitset<enum _0x96262837>         Flags;                           // type:BITSET.32BIT
};

struct _0xF7B6DF55 : _0x1054F746
{
};

struct _0xF7BB5CB3 : _0x0A510DA9
{
};

struct _0xF7E08DEB : _0xAF24E56C
{
	bool                             LibraryMovie;                    // type:BOOL.0
};

struct _0xF7E16543
{
	float                            Min;                             // type:FLOAT.0
	float                            Mid;                             // type:FLOAT.0
	float                            Max;                             // type:FLOAT.0
	float                            Key;                             // type:FLOAT.0
	uchar                            Set;                             // type:UCHAR.0
};

struct _0xF7E5C4D2 : uiAnimationDataBindingTriggerBehavior
{
	struct _0xAB76836B               Converter;                       // type:STRUCT.POINTER
	struct _0x4A7AD954               _0xA2C3E471;                     // type:STRUCT.STRUCTURE
};

struct _0xF8014F0E : _0xE62F2784
{
	enum _0x6BCA108F                 EaseType;                        // type:ENUM.32BIT
	enum _0xC93A7A62                 _0x27351DDE;                     // type:ENUM.32BIT
};

struct _0xF82D18CB
{
	uint                             _0xAEC1A51D;                     // type:UINT.1
	uint                             _0xBCE64166;                     // type:UINT.1
	float                            _0x39EB7557;                     // type:FLOAT.0
	float                            _0x157CFE8E;                     // type:FLOAT.0
	int                              _0xE25091F5;                     // type:INT.0
	float                            _0x48CBB542;                     // type:FLOAT.0
	float                            _0x52C05458;                     // type:FLOAT.0
};

struct _0xF8449058
{
	enum _0x56E0F299                 Type;                            // type:ENUM.32BIT
	string                           ActionScoringWeightTable;        // type:STRING.ATNONFINALHASHSTRING
	string                           AnimRateSelector;                // type:STRING.ATNONFINALHASHSTRING
	string                           MTHWeightOverrides;              // type:STRING.ATNONFINALHASHSTRING
	string                           MovingMTHWeightOverrides;        // type:STRING.ATNONFINALHASHSTRING
	float                            PoseThreshold;                   // type:FLOAT.0
	string                           PerformingStreamClipset;         // type:STRING.ATNONFINALHASHSTRING
	string                           TargetStreamClipSet;             // type:STRING.ATNONFINALHASHSTRING
	string                           SwimmingPerformerStreamClipSet;  // type:STRING.ATNONFINALHASHSTRING
	float                            WaterAboveGroundHeightTolerance; // type:FLOAT.0
	float                            WaterAboveGroundHeightTolerancePrompt; // type:FLOAT.0
	float                            WaterAboveGroundHeightTolerancePromptMPOnly; // type:FLOAT.0
	float                            VerticalHeightBlendRange;        // type:FLOAT.0
	float                            FPTargetGroundAngleThreshold;    // type:FLOAT.0
	array<enum eAnimBoneTag, 2>      ArmIkSocketBones;                // type:ARRAY.ATFIXEDARRAY
	bitset<enum _0x0BBA091E>         BaseFlags;                       // type:BITSET.32BIT
};

struct _0xF84BA9C5 : _0xB06C1886
{
};

struct _0xF881FC52 : CTuning
{
	float                            _0x3A0B6483;                     // type:FLOAT.0
	float                            _0xFB8E2B5C;                     // type:FLOAT.0
	float                            _0x621AEAE0;                     // type:FLOAT.0
};

struct _0xF886835F
{
	string                           ShadowColor;                     // type:STRING.ATNONFINALHASHSTRING
	float                            Strength;                        // type:FLOAT.0
	float                            Alpha;                           // type:FLOAT.0
	float                            HorizontalBlur;                  // type:FLOAT.0
	float                            VerticalBlur;                    // type:FLOAT.0
	int                              Distance;                        // type:INT.0
	int                              Quality;                         // type:INT.0
	int                              Angle;                           // type:INT.0
	bool                             HideObject;                      // type:BOOL.0
	bool                             InnerShadow;                     // type:BOOL.0
	bool                             Knockout;                        // type:BOOL.0
};

struct _0xF8A18CE1
{
	bool                             Enabled;                         // type:BOOL.0
	bool                             _0xFF28DF94;                     // type:BOOL.0
	uint                             _0x2EC7C73B;                     // type:UINT.1
};

struct _0xF8C79D37
{
	int                              _0xA5B72A66;                     // type:INT.0
};

struct _0xF8CB4137 : CAICondition
{
};

struct _0xF8D16938
{
	float                            _0x9D8CF6DA;                     // type:FLOAT.0
	bool                             _0xC329527D;                     // type:BOOL.0
	struct _0x28CE2FBC               _0x7BDBD6BA;                     // type:STRUCT.STRUCTURE
	bool                             _0xA264615C;                     // type:BOOL.0
	float                            MaxWaitTime;                     // type:FLOAT.0
	bool                             _0xF6EF2E97;                     // type:BOOL.0
	bool                             _0x2AF81D58;                     // type:BOOL.0
};

struct _0xF8E21062
{
	uint                             _0x54D95F03;                     // type:UINT.0
	uint                             _0x7575CAB5;                     // type:UINT.0
	uint                             _0xFDCAFBDC;                     // type:UINT.0
	uint                             _0xF336115B;                     // type:UINT.0
	uint                             _0x4AA1919C;                     // type:UINT.0
	uint                             _0x465B6AFB;                     // type:UINT.0
	float                            _0x6589CDA1;                     // type:FLOAT.0
	float                            _0xE93F6BEF;                     // type:FLOAT.2
};

struct _0xF8F954BA : _0x85B7B5BF
{
	enum _0x113E295E                 _0xDF387BCF;                     // type:ENUM.32BIT
};

struct _0xF91B3365
{
	uint                             idx;                             // type:UINT.0
	struct _0x6A74D413               _0xAEA3DD05;                     // type:STRUCT.STRUCTURE
	struct _0x6A74D413               _0x633B2D6A;                     // type:STRUCT.STRUCTURE
	struct _0x6A74D413               _0xCBE1CDA3;                     // type:STRUCT.STRUCTURE
	struct _0x6A74D413               _0x33E4BD8B;                     // type:STRUCT.STRUCTURE
};

struct _0xF920D56D : _0x8A0DC979
{
	string                           TargetStateMachine;              // type:STRING.ATNSHASHSTRING
};

struct _0xF925FBC3 : CTuning
{
	uint                             _0xDF1D52C8;                     // type:UINT.0
};

struct _0xF9607376
{
	int                              Year;                            // type:INT.0
	bool                             ClearMissionPedsOnStartMatch;    // type:BOOL.0
};

struct _0xF977FFB7
{
	string                           PersonalityName;                 // type:STRING.ATNONFINALHASHSTRING
	string                           Bravery;                         // type:STRING.ATNONFINALHASHSTRING
	string                           InteractionPersonality;          // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xD004EEEE>        InteractionPersonalities;        // type:ARRAY.ATARRAY
	string                           Intimidation;                    // type:STRING.ATNONFINALHASHSTRING
	string                           Criminality;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD0F23A48;                     // type:STRING.ATNONFINALHASHSTRING
	string                           AmbientAudio;                    // type:STRING.ATNONFINALHASHSTRING
	string                           WitnessPersonality;              // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9AD46D73;                     // type:STRING.ATNONFINALHASHSTRING
	struct _0x0FCCCE05               Agility;                         // type:STRUCT.STRUCTURE
	float                            _0x8F86B911;                     // type:FLOAT.0
	float                            _0x3C448B66;                     // type:FLOAT.0
	float                            _0x34A5443D;                     // type:FLOAT.0
	float                            _0x517E4A48;                     // type:FLOAT.0
	float                            AttackStrengthMin;               // type:FLOAT.0
	float                            AttackStrengthMax;               // type:FLOAT.0
	uint                             MotivationMin;                   // type:UINT.0
	uint                             MotivationMax;                   // type:UINT.0
	bitset<enum _0xAE1269B3>         VehicleTypes;                    // type:BITSET.32BIT
	bitset<enum _0xCC8D3291>         PersonalityFlags;                // type:BITSET.32BIT
	uchar                            DrivingAbilityMin;               // type:UCHAR.0
	uchar                            DrivingAbilityMax;               // type:UCHAR.0
	uchar                            DrivingAggressivenessMin;        // type:UCHAR.0
	uchar                            DrivingAggressivenessMax;        // type:UCHAR.0
	bool                             ShouldRewardMoneyOnDeath;        // type:BOOL.0
	bool                             IsGang;                          // type:BOOL.0
	bool                             IsSecurity;                      // type:BOOL.0
	bool                             IsWeird;                         // type:BOOL.0
	bool                             IsDangerousAnimal;               // type:BOOL.0
	bool                             CausesRumbleWhenCollidesWithPlayer; // type:BOOL.0
	bool                             AllowSlowCruisingWithMusic;      // type:BOOL.0
	bool                             AllowRoadCrossHurryOnLightChange; // type:BOOL.0
	bool                             _0x57557FF5;                     // type:BOOL.0
	bool                             IsMale;                          // type:BOOL.0
	enum Affluence                   Affluence;                       // type:ENUM.32BIT
	enum TechSavvy                   TechSavvy;                       // type:ENUM.32BIT
	string                           LookAtReactResponseSet;          // type:STRING.ATNONFINALHASHSTRING
	string                           EventReactionsSet;               // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7F7E1B82;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x55AE7E14;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF9843ABC : _0xD6959DCC
{
	enum _0x54F78522                 type;                            // type:ENUM.32BIT
	string                           displayConverter;                // type:STRING.ATNONFINALHASHSTRING
	int64                            minimum;                         // type:INT64.0
	int64                            maximum;                         // type:INT64.0
	int64                            default;                         // type:INT64.0
};

struct _0xF9A193DF : _0x67C585B9
{
};

struct _0xF9A480D0
{
	string                           _0xDF07882E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x83817F5B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4C9020AD;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF9BF4B47
{
	struct rage__spdGrid2D           grid;                            // type:STRUCT.STRUCTURE
	float                            minZ;                            // type:FLOAT.0
	float                            maxZ;                            // type:FLOAT.0
	array<char>                      _0xFAF52E8B;                     // type:ARRAY.ATARRAY
	array<struct _0x7F79FEA5>        _0x02A83304;                     // type:ARRAY._0x2087BB00
};

struct _0xF9BF6C49 : CTuning
{
	float                            MinDelay;                        // type:FLOAT.0
	float                            MaxDelay;                        // type:FLOAT.0
};

struct _0xF9C44B45 : _0xE046EA8D
{
	string                           soundset;                        // type:STRING.ATNONFINALHASHSTRING
	string                           sound;                           // type:STRING.ATNONFINALHASHSTRING
};

struct _0xF9D280DD : CTuning
{
	float                            _0x88E51EA0;                     // type:FLOAT.0
	float                            SlowDownDistanceMax;             // type:FLOAT.0
	float                            SlowDownDistanceMin;             // type:FLOAT.0
};

struct _0xF9D38E74
{
	vec4V                            PlaneCoeffs;                     // type:VEC4V.0
};

struct _0xF9EE94ED
{
	bool                             _0xF1377B68;                     // type:BOOL.0
	uint                             _0xE2730B29;                     // type:UINT.0
	uint                             _0x5B6D19B2;                     // type:UINT.0
};

struct _0xFA0239E1 : _0x23232399
{
};

struct _0xFA038593 : CAICondition
{
	string                           ClipSet;                         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFA0BEBB9 : _0x8A0DC979
{
	string                           DataStore;                       // type:STRING.ATNSHASHSTRING
};

struct _0xFA20B4F5 : _0x0D04D04D
{
};

struct _0xFA2F9D46 : _0x3AB6499E
{
	bool                             ShouldPushBeyondAttachParentIfClipping; // type:BOOL.0
	bool                             _0x6064655E;                     // type:BOOL.0
	bool                             _0x7606B051;                     // type:BOOL.0
	bool                             _0xD292A04E;                     // type:BOOL.0
	bool                             ShouldIgnoreOcclusionWithBrokenFragments; // type:BOOL.0
	bool                             ShouldIgnoreOcclusionWithBrokenFragmentsOfIgnoredEntities; // type:BOOL.0
	bool                             ShouldMoveTowardsLos;            // type:BOOL.0
	bool                             _0x9FDADA9A;                     // type:BOOL.0
	bool                             ShouldSweepToAvoidPopIn;         // type:BOOL.0
	bool                             ShouldPersistPopInBehaviour;     // type:BOOL.0
	bool                             ShouldPullBackByCapsuleRadius;   // type:BOOL.0
	bool                             ShouldIgnoreOcclusionWithSelectCollision; // type:BOOL.0
	bool                             ShouldIgnoreOcclusionWithRagdolls; // type:BOOL.0
	bool                             ShouldIgnoreFollowVehicleForCollisionOrigin; // type:BOOL.0
	float                            _0x52F1F0A0;                     // type:FLOAT.0
	bool                             _0x1D216C47;                     // type:BOOL.0
	bool                             _0x2E8B84AC;                     // type:BOOL.0
	float                            _0xBC705CD4;                     // type:FLOAT.0
	vec3                             CustomCollisionOriginRelativePosition; // type:VECTOR3.0
	bool                             ShouldUseCustomCollisionOrigin;  // type:BOOL.0
	bool                             _0x7789600A;                     // type:BOOL.0
	float                            _0x33E6AEC6;                     // type:FLOAT.0
	float                            MaxCollisionTestRadius;          // type:FLOAT.0
	float                            CollisionTestRadiusSpringConstant; // type:FLOAT.0
	float                            CollisionTestRadiusSpringDampingRatio; // type:FLOAT.0
	float                            MinSafeRadiusReductionWithinPedMoverCapsule; // type:FLOAT.0
	float                            _0x7A5D0350;                     // type:FLOAT.0
	float                            _0x661A0A61;                     // type:FLOAT.0
	float                            _0x500CDF8B;                     // type:FLOAT.0
	struct _0x7741A79C               VehicleOnTopOfVehicleCollisionSettings; // type:STRUCT.STRUCTURE
	struct _0x48ED399C               _0x057B3AEF;                     // type:STRUCT.STRUCTURE
	struct _0x4367825B               OcclusionSweep;                  // type:STRUCT.STRUCTURE
	struct _0xBE1471A7               PathFinding;                     // type:STRUCT.STRUCTURE
	struct _0x0D90C2EB               RotationTowardsLos;              // type:STRUCT.STRUCTURE
	struct _0xB12B1418               OrbitDistanceDamping;            // type:STRUCT.STRUCTURE
	struct _0x55C9D1BE               ClippingAvoidance;               // type:STRUCT.STRUCTURE
	struct _0x6B3BCA29               BuoyancySettings;                // type:STRUCT.STRUCTURE
	struct _0x19D7E025               PushBeyondEntitiesIfClipping;    // type:STRUCT.STRUCTURE
	struct _0x3FC9702F               PullBackTowardsCollision;        // type:STRUCT.STRUCTURE
	struct _0xEAD42638               CollisionFallBackPosition;       // type:STRUCT.STRUCTURE
	struct _0xFC83A6C7               _0x85870F33;                     // type:STRUCT.STRUCTURE
	struct _0x78006B48               _0x0021EDA7;                     // type:STRUCT.STRUCTURE
	struct _0x9353283C               _0xA6B99255;                     // type:STRUCT.STRUCTURE
	struct _0x13CCEA2D               _0xDB0E5157;                     // type:STRUCT.STRUCTURE
	struct _0x6596653F               _0x0810E275;                     // type:STRUCT.STRUCTURE
};

struct _0xFA317D8F
{
	array<struct _0x15492ED3>                     _0x686C4AAD;                     // type:ARRAY.ATARRAY
	array<struct CCoverPointCoverToCoverInfo>     _0x52700772;                     // type:ARRAY.ATARRAY
};

struct _0xFA3E7C39 : _0x810637E9
{
	enum _0x2FB2983C                 ConditionTestType;               // type:ENUM.32BIT
};

struct _0xFA4526CB
{
	array<struct _0xC4DEA28B>        _0x50F9FA74;                     // type:ARRAY.ATARRAY
};

struct _0xFA4D1997
{
	string                           _0xE78C5689;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFA506F4C : _0x1054F746
{
};

struct _0xFA53557B : CBaseSaveObject
{
	struct _0x7B9FC494               _0xA2D7EFD5;                     // type:STRUCT.STRUCTURE
};

struct _0xFA57AC31
{
	array<struct _0x8F122E3F>        metadataList;                    // type:ARRAY.ATARRAY
};

struct _0xFA60BE58
{
	float                            _0x52AE85B3;                     // type:FLOAT.0
	float                            _0x5FD285F9;                     // type:FLOAT.0
	int                              _0x63482C1A;                     // type:INT.0
};

struct _0xFA7639E6 : _0xC2A67265
{
	enum _0x0E496288                 Value;                           // type:ENUM.32BIT
};

struct _0xFA9E2296 : _0x2F7DA38D
{
};

struct _0xFAAF9D04
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             wasRead;                         // type:BOOL.0
};

struct _0xFABD9DF5 : _0x68825F77
{
	string                           _0x43AC121D;                     // type:STRING.ATSTRING
};

struct _0xFAC7C240
{
	array<struct _0x099D19E3>        WeaponHoldingDataGroup;          // type:ARRAY.ATARRAY
};

struct _0xFAC97A1B : _0x499E1BE4
{
	float                            _0xFEAF57CB;                     // type:FLOAT.0
	float                            _0x10DFA983;                     // type:FLOAT.0
};

struct _0xFACC4050 : CTuning
{
	float                            MinDelayTimer;                   // type:FLOAT.0
	float                            MaxDelayTimer;                   // type:FLOAT.0
	float                            _0x419638C1;                     // type:FLOAT.0
	float                            _0x8CF65960;                     // type:FLOAT.0
	float                            _0x1B71335B;                     // type:FLOAT.0
	float                            _0x7B525804;                     // type:FLOAT.0
	float                            _0x311243F4;                     // type:FLOAT.0
	float                            _0x5ADA6CC8;                     // type:FLOAT.0
	float                            _0x2F97B160;                     // type:FLOAT.0
	float                            _0x2C0A2749;                     // type:FLOAT.0
	float                            _0x7E95E75B;                     // type:FLOAT.0
	float                            _0x1C008FD1;                     // type:FLOAT.0
	string                           _0xB8B04F18;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xC1833043;                     // type:FLOAT.0
	string                           _0xB9C735A2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x41AC9C93;                     // type:FLOAT.0
	float                            _0x1C9EB44E;                     // type:FLOAT.0
	float                            _0x25236407;                     // type:FLOAT.0
	float                            _0x869C47B5;                     // type:FLOAT.0
};

struct _0xFAD18A4F
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
};

struct _0xFAD7F3DC
{
	array<float>                     SpineStiffness;                  // type:ARRAY.ATARRAY
	float                            PelvisStiffness;                 // type:FLOAT.0
	float                            RootStiffness;                   // type:FLOAT.0
	float                            WeaponGroupModifierUnarmed;      // type:FLOAT.0
};

struct _0xFADA89DD : CTuning
{
	float                            _0x1D5627E1;                     // type:FLOAT.0
	float                            _0xB56AF640;                     // type:FLOAT.0
	uint                             _0x0FF65171;                     // type:UINT.0
	uint                             _0x1AC2A841;                     // type:UINT.0
};

struct _0xFADBEA4E : _0x1054F746
{
};

struct _0xFAE67E30 : camCinematicContextMetadata
{
	array<string>                    _0xA8821239;                     // type:ARRAY.ATARRAY
};

struct _0xFAE9F5BC
{
	uint                             _0x21293CEB;                     // type:UINT.0
	uint                             _0x3450493A;                     // type:UINT.0
	uint                             _0x43B54586;                     // type:UINT.0
	uint                             _0xA10EC05A;                     // type:UINT.0
	uint                             _0x3D7A8FD6;                     // type:UINT.0
	float                            _0x88CA6B0A;                     // type:FLOAT.0
	string                           _0x524FA8EC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x662BC2DA;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFAEBEF3B
{
	array<struct _0x1FB311C6>        DecompInfos;                     // type:ARRAY.ATARRAY
	array<struct _0xDC064C53>        ModelAgingInfos;                 // type:ARRAY.ATARRAY
};

struct _0xFB02B91E : _0x1619E486
{
};

struct _0xFB1912C7
{
	struct CAICondition              Condition;                       // type:STRUCT.POINTER
	enum AmbientEventType            Response;                        // type:ENUM.32BIT
};

struct _0xFB36133A
{
	struct rage__spdSphere           bound;                           // type:STRUCT.STRUCTURE
	bitset<enum _0x00000000>         flags;                           // type:BITSET.32BIT
};

struct _0xFB3F42E2
{
	bool                             _0xBA4425D6;                     // type:BOOL.0
	float                            _0x28BFF463;                     // type:FLOAT.0
	float                            _0x1218F5FD;                     // type:FLOAT.0
};

struct _0xFB42862A : _0x2D57BE23
{
	int                              Identifier;                      // type:INT.0
};

struct _0xFB5EC7F2 : _0x0A510DA9
{
};

struct _0xFB6D3014
{
	float                            SpecFresnel;                     // type:FLOAT.0
	float                            SpecFalloffMult;                 // type:FLOAT.0
	float                            SpecIntMult;                     // type:FLOAT.0
	float                            Spec2Factor;                     // type:FLOAT.0
	float                            Spec2ColorInt;                   // type:FLOAT.0
	uint                             Spec2Color;                      // type:UINT.1
};

struct _0xFB6E0B59
{
	array<struct _0xEC516F75>        _0x8299B011;                     // type:ARRAY.ATARRAY
};

struct _0xFB7AF8EE : CExtensionDef
{
	string                           _0xB49BEF8F;                     // type:STRING.ATFINALHASHSTRING
};

struct _0xFB7FD841 : _0x4DE833E2
{
};

struct _0xFB927201
{
};

struct _0xFBA0F562
{
	float                            _0xD1FDC4BD;                     // type:FLOAT.0
	float                            _0x811CF4ED;                     // type:FLOAT.0
	float                            _0x73B84AA7;                     // type:FLOAT.0
	float                            _0xEBC01F3F;                     // type:FLOAT.0
	float                            _0x42990C3C;                     // type:FLOAT.0
};

struct _0xFBC25D8A : _0x1054F746
{
};

struct _0xFBCB598F : CTuning
{
	float                            _0x36151E0A;                     // type:FLOAT.0
	float                            _0x2AE16489;                     // type:FLOAT.0
	float                            _0x4867BE21;                     // type:FLOAT.0
	float                            _0x670817D7;                     // type:FLOAT.0
	bool                             _0x990F5FA9;                     // type:BOOL.0
};

struct _0xFBCC548D : UIContainer
{
};

struct _0xFBF7DAB5 : _0x2F7DA38D
{
};

struct _0xFBFED396
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	enum _0x06B2E17B                 _0x4DA1E99F;                     // type:ENUM.32BIT
	array<string>                    _0x91D60DB1;                     // type:ARRAY.ATARRAY
	enum _0x06B2E17B                 _0x04C7A756;                     // type:ENUM.32BIT
	array<string>                    _0x099D1771;                     // type:ARRAY.ATARRAY
	array<struct _0x4F468BAD>        _0x162F77E5;                     // type:ARRAY.ATARRAY
};

struct _0xFC01364A
{
	array<struct _0x0AE5F54A, 7>     PromptTable;                     // type:ARRAY.ATFIXEDARRAY
	bitset<enum _0xF3C99EEB>         Flags;                           // type:BITSET.32BIT
	string                           PromptSubString;                 // type:STRING.ATNONFINALHASHSTRING
	string                           PromptSubStringAlive;            // type:STRING.ATNONFINALHASHSTRING
	vec3V                            Offset;                          // type:VEC3V.0
	float                            PromptOverrideProbeRadius;       // type:FLOAT.0
	float                            FacingAngleToScalePromptRadius;  // type:FLOAT.0
	enum eAnimBoneTag                BoneTag;                         // type:ENUM.32BIT
	array<enum eAnimBoneTag>         PromptOnlyBoneTags;              // type:ARRAY.ATARRAY
};

struct _0xFC3B3C26
{
	struct _0x509D0C69               Weights;                         // type:STRUCT.STRUCTURE
	struct _0x7E357DCC               _0x0F3A2862;                     // type:STRUCT.STRUCTURE
	struct _0xE3190244               BlendDurations;                  // type:STRUCT.STRUCTURE
	struct _0x1038D339               _0xBD856691;                     // type:STRUCT.STRUCTURE
	struct _0xEC4FCAE1               _0x318C78F7;                     // type:STRUCT.STRUCTURE
	struct _0x5BE519E7               _0xC80E2C5E;                     // type:STRUCT.STRUCTURE
	struct _0x281EAA91               _0x24260A85;                     // type:STRUCT.STRUCTURE
	struct _0x1EF489A5               Options;                         // type:STRUCT.STRUCTURE
};

struct _0xFC554A58 : _0xDC10377E
{
	string                           _0xE043EED4;                     // type:STRING.ATNONFINALHASHSTRING
	string                           DofSettings;                     // type:STRING.ATNONFINALHASHSTRING
	float                            ZoomFactor;                      // type:FLOAT.0
};

struct _0xFC5967C7
{
	bool                             _0xD449BE36;                     // type:BOOL.0
	string                           _0xFFD089AB;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFC63113F
{
	float                            _0x74B0C87A;                     // type:FLOAT.0
	float                            _0x8BD70067;                     // type:FLOAT.0
	float                            _0xCD66A4F9;                     // type:FLOAT.0
	float                            _0x36A1AA6A;                     // type:FLOAT.0
	float                            _0x4857715F;                     // type:FLOAT.0
	float                            _0xDC374663;                     // type:FLOAT.0
	float                            _0x1EFE3094;                     // type:FLOAT.0
	float                            _0x41D4CD55;                     // type:FLOAT.0
	float                            _0x93013342;                     // type:FLOAT.0
	float                            _0x2C2160C3;                     // type:FLOAT.0
	float                            _0x39D885E0;                     // type:FLOAT.0
	float                            _0x2273B8D5;                     // type:FLOAT.0
	float                            _0x60B46301;                     // type:FLOAT.0
	float                            _0x46A92A7D;                     // type:FLOAT.0
	float                            _0xE95FABEA;                     // type:FLOAT.0
};

struct _0xFC669AF4 : _0x74EB5104
{
};

struct _0xFC70364F : _0x4A52B7E5
{
	struct _0xCDAFF092               CurveData;                       // type:STRUCT.POINTER
};

struct _0xFC78F052
{
	array<string>                    Clips;                           // type:ARRAY.ATARRAY
	bitset<enum _0x5CEFF047>         Flags;                           // type:BITSET.32BIT
};

struct _0xFC81E2B6 : _0x7EAFD12D
{
	float                            Value;                           // type:FLOAT.0
	bitset<enum _0x3DA8A32D>         LayerFlags;                      // type:BITSET.8BIT
};

struct _0xFC82A3BF
{
	float                            outputWidth;                     // type:FLOAT.0
	float                            outputHeight;                    // type:FLOAT.0
	float                            outputOffsetX;                   // type:FLOAT.0
	float                            outputOffsetY;                   // type:FLOAT.0
	uint                             backgroundColor;                 // type:UINT.1
};

struct _0xFC83A6C7
{
	float                            CollisionRootPositionSpringConstant; // type:FLOAT.0
	float                            CollisionRootPositionSpringDampingRatio; // type:FLOAT.0
	bool                             ShouldConstrainCollisionRootPositionAgainstClippingTypes; // type:BOOL.0
	float                            CollisionRootPositionFallBackToPivotBlendValue; // type:FLOAT.0
};

struct _0xFC8CE809 : _0xF51D5F09
{
	struct _0xA3A6919D               _0xDFCF1423;                     // type:STRUCT.STRUCTURE
	string                           MenuLink;                        // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC775A8EF;                     // type:STRING.ATNSHASHSTRING
};

struct _0xFCA61C6D : _0x2F7DA38D
{
	uint                             _0x69D919FB;                     // type:UINT.1
	float                            fadeOutDuration;                 // type:FLOAT.0
	float                            fadeInDuration;                  // type:FLOAT.0
};

struct _0xFCA95283 : _0xA0889763
{
	int64                            value;                           // type:INT64.0
};

struct _0xFCAE8080 : UIContainer
{
};

struct _0xFCB109FF
{
	string                           GroupName;                       // type:STRING.ATNONFINALHASHSTRING
	uint                             percentage;                      // type:UINT.0
};

struct _0xFCB2D8A8
{
	string                           zoneName;                        // type:STRING.ATFINALHASHSTRING
	string                           _0xA013A9AB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xC4B390D3;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x93DC930F;                     // type:FLOAT.0
	float                            _0x6C0F5E6B;                     // type:FLOAT.0
	float                            _0x0DED4FD5;                     // type:FLOAT.0
	float                            _0xEBC9DD87;                     // type:FLOAT.0
	float                            _0x258D967B;                     // type:FLOAT.0
	float                            _0x208EF6F1;                     // type:FLOAT.0
};

struct _0xFCC3036D : _0x8244CA58
{
};

struct _0xFCC94966 : CTuning
{
	struct _0x980F7231               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xFCD9EE2E : _0x1054F746
{
};

struct _0xFCF6AE95
{
};

struct _0xFD088411
{
	float                            TimeBetweenDifficultyUpdates;    // type:FLOAT.0
	float                            _0x31115F7E;                     // type:FLOAT.0
	float                            _0x7B132678;                     // type:FLOAT.0
	float                            _0x52FF509E;                     // type:FLOAT.0
};

struct _0xFD29A2EE : CTuning
{
	uint                             _0x7611252D;                     // type:UINT.0
	uint                             _0x8342FB14;                     // type:UINT.0
	uint                             _0x99A136F9;                     // type:UINT.0
	uint                             _0x380F6FA7;                     // type:UINT.0
	uint                             _0x7D3A94A6;                     // type:UINT.0
	uint                             _0xBFDF1092;                     // type:UINT.0
	float                            _0x94AF26C4;                     // type:FLOAT.0
	float                            _0xCE488FFE;                     // type:FLOAT.0
	float                            _0xE6A1B7BC;                     // type:FLOAT.0
	uint                             _0xE2DE672C;                     // type:UINT.0
	uint                             _0xABA5F3AE;                     // type:UINT.0
	uint                             _0x1BC0CE8E;                     // type:UINT.0
	uint                             _0x842BB0E7;                     // type:UINT.0
	float                            _0x96D6F289;                     // type:FLOAT.0
};

struct _0xFD2DF0AD
{
	array<struct _0x6ECB1C3E, 12>     Entries;                         // type:ARRAY.ATFIXEDARRAY
};

struct _0xFD30F02D : _0x9C958807
{
};

struct _0xFD39358F
{
	array<string>                    Editions;                        // type:ARRAY.ATARRAY
	array<string>                    Unlocks;                         // type:ARRAY.ATARRAY
	array<string>                    Items;                           // type:ARRAY.ATARRAY
};

struct _0xFD415379
{
	struct _0xDB9CB655               _0xDA3C8C12;                     // type:STRUCT.STRUCTURE
	struct _0xDB9CB655               _0x877BCBEA;                     // type:STRUCT.STRUCTURE
	struct _0xDB9CB655               _0x5DAD5FAE;                     // type:STRUCT.STRUCTURE
};

struct _0xFD4AC72D
{
	struct _0xA57BA3ED               Translator;                      // type:STRUCT.POINTER
	struct _0x507E5FA3               Alignment;                       // type:STRUCT.POINTER
	struct _0x622362A8               ExampleMappingBeforeSecondDeduplication; // type:STRUCT.STRUCTURE
	struct _0x622362A8               ExampleMappingAfterSecondDeduplication; // type:STRUCT.STRUCTURE
};

struct _0xFD5D7F02
{
};

struct _0xFD72E10B
{
	array<struct _0x8EAFF605>        DispatchPhases;                  // type:ARRAY.ATARRAY
	float                            RandomWeight;                    // type:FLOAT.0
	string                           RequiredRegionType;              // type:STRING.ATNONFINALHASHSTRING
	string                           RequiredRegion;                  // type:STRING.ATNONFINALHASHSTRING
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           CombatInfoOverride;              // type:STRING.ATNONFINALHASHSTRING
	string                           InitialSearchSituation;          // type:STRING.ATNONFINALHASHSTRING
	array<string>                    RequiredCooldowns;               // type:ARRAY.ATARRAY
	int                              MinBounty;                       // type:INT.0
	int                              _0xA759BB7D;                     // type:INT.0
	char                             MinWantedLevel;                  // type:CHAR.0
	char                             MaxWantedLevel;                  // type:CHAR.0
	uint                             CSIMaxDurationMS;                // type:UINT.0
	uint                             _0xBA572C16;                     // type:UINT.0
	float                            _0xA54F8A2C;                     // type:FLOAT.0
	float                            MaxLocationOverrideRadius;       // type:FLOAT.0
	float                            _0xD4CE393A;                     // type:FLOAT.0
	float                            MinDistanceToTown;               // type:FLOAT.0
	float                            IdealSpawnDistanceToTown;        // type:FLOAT.0
	bitset<enum _0x82A2289C>         Flags;                           // type:BITSET.32BIT
};

struct _0xFD7A877C
{
	struct _0x83361866               VelocityInheritance;             // type:STRUCT.STRUCTURE
	float                            AttachOffsetX;                   // type:FLOAT.0
	float                            AttachOffsetY;                   // type:FLOAT.0
	float                            AttachOffsetZ;                   // type:FLOAT.0
	float                            AttachOrientationX;              // type:FLOAT.0
	float                            AttachOrientationY;              // type:FLOAT.0
	float                            AttachOrientationZ;              // type:FLOAT.0
	float                            PhaseToBlendOut;                 // type:FLOAT.0
	float                            BlendOutDelta;                   // type:FLOAT.0
};

struct _0xFD7CEDA2
{
	array<struct _0x4C5E1237>        Items;                           // type:ARRAY.ATARRAY
	struct _0x2EBB01D3               PropSet;                         // type:STRUCT.STRUCTURE
	string                           ForcedLootTable;                 // type:STRING.ATNONFINALHASHSTRING
	string                           ForcedFallbackLootTable;         // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFD82796D : _0x0BBA48C1
{
	string                           ClipId;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFD85EDA4 : CAICondition
{
	string                           Motion;                          // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFD875038 : _0x9B8C003A
{
	string                                             ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                                             ClipId;                          // type:STRING.ATNONFINALHASHSTRING
	string                                             FilterId;                        // type:STRING.ATNONFINALHASHSTRING
	float                                              _0x697E42F0;                     // type:FLOAT.0
	float                                              _0xB11889B5;                     // type:FLOAT.0
	bitset<enum eAnimFlags>                            _0x6F70072B;                     // type:BITSET.32BIT
	bitset<enum eTaskAnimationAiFlags>                 _0x9D5210DD;                     // type:BITSET.32BIT
	bitset<enum eTaskAnimationPhysicsControlFlags>     _0x43920CA1;                     // type:BITSET.32BIT
	bitset<enum eIkControlFlags>                       _0x3BF40FDC;                     // type:BITSET.32BIT
};

struct _0xFDBD3D91 : CTuning
{
	float                            _0x876D9A99;                     // type:FLOAT.0
	float                            _0xD18DCA79;                     // type:FLOAT.0
	float                            _0x1C65AAB4;                     // type:FLOAT.0
	float                            _0x6969729B;                     // type:FLOAT.0
	uint                             _0xA1319C70;                     // type:UINT.0
	float                            _0x282794FE;                     // type:FLOAT.0
	float                            _0x44E5EF53;                     // type:FLOAT.0
	float                            _0x510938BA;                     // type:FLOAT.0
	bool                             _0x158622A8;                     // type:BOOL.0
};

struct _0xFDC42395
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	array<struct _0x624A4E1C>        DelayInGameHoursAfterBountyAcquired; // type:ARRAY.ATARRAY
	array<struct _0x624A4E1C>        DelayInGameHoursAfterMyIncident; // type:ARRAY.ATARRAY
	array<struct _0x624A4E1C>        DelayInGameHoursAfterMyIncidentTargetKilled; // type:ARRAY.ATARRAY
	struct _0x624A4E1C               DelayInGameHoursAfterMyIncidentTargetUndetected; // type:STRUCT.STRUCTURE
	enum _0xA39BE1FE                 MinBountyLevelForTargetUndetected; // type:ENUM.32BIT
	bool                             RequiresLocalCrime;              // type:BOOL.0
	array<string>                    _0x09D9A6D6;                     // type:ARRAY.ATARRAY
};

struct _0xFDD6CA83
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	array<struct _0xB408AD02>        Variations;                      // type:ARRAY.ATARRAY
};

struct _0xFDDBB1D6
{
	enum eWeaponEffectGroup          EffectGroup;                     // type:ENUM.32BIT
	string                           VfxBloodInfoHashName;            // type:STRING.ATNONFINALHASHSTRING
	string                           VfxBloodMeleeInfoHashName;       // type:STRING.ATNONFINALHASHSTRING
	string                           VfxBloodPoolInfoHashName;        // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponImpactAmmoInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	float                            VfxWeaponImpactAmmoStrengthEvo;  // type:FLOAT.0
	string                           VfxWeaponImpactMeleeInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	float                            VfxWeaponImpactMeleeStrengthEvo; // type:FLOAT.0
	vec3V                            VfxWeaponMuzzlePositionOverride; // type:VEC3V.0
	string                           VfxWeaponMuzzleFlashInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponMuzzleSmokeInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponBarrelSmokeInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponHammerInfoHashName;     // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponTracerInfoHashName;     // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponShellInfoHashName;      // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponGroundDisturbInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponInteriorSmokeInfoHashName; // type:STRING.ATNONFINALHASHSTRING
	string                           VfxWeaponAirDebrisInfoHashName;  // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFDDEC5A2
{
	string                           MotionSet;                       // type:STRING.ATNONFINALHASHSTRING
	string                           _0xD0983758;                     // type:STRING.ATNONFINALHASHSTRING
};

struct _0xFDF38BF1 : _0x1054F746
{
};

struct _0xFDFDCF1D : CTuning
{
	float                            _0xEDB8208B;                     // type:FLOAT.0
	float                            _0x15E85723;                     // type:FLOAT.0
	float                            _0x2C191D9C;                     // type:FLOAT.0
	float                            _0x311CB7C6;                     // type:FLOAT.0
	float                            _0x0D4E4293;                     // type:FLOAT.0
	float                            _0x17E29AF8;                     // type:FLOAT.0
	float                            _0x9B027989;                     // type:FLOAT.0
	float                            _0xA0F3D7FE;                     // type:FLOAT.0
	float                            _0xCA1D2651;                     // type:FLOAT.0
	float                            _0x41A5C799;                     // type:FLOAT.0
	float                            _0xD05FCD43;                     // type:FLOAT.0
	float                            _0xACBA3C60;                     // type:FLOAT.0
	float                            _0x6EE0DAFD;                     // type:FLOAT.0
	float                            _0x6D467FFD;                     // type:FLOAT.0
	float                            _0x30629E29;                     // type:FLOAT.0
	float                            _0x19FCE602;                     // type:FLOAT.0
	float                            _0x1D6F9D98;                     // type:FLOAT.0
	float                            _0x93769416;                     // type:FLOAT.0
	float                            _0x49398CAE;                     // type:FLOAT.0
	float                            _0x36CB532E;                     // type:FLOAT.0
	float                            _0xEFF35C0D;                     // type:FLOAT.0
	uint                             _0x5436E112;                     // type:UINT.0
	uint                             _0x96E68F65;                     // type:UINT.0
};

struct _0xFDFE767D : CTuning
{
	string                           _0xEE2D08AF;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3510D6B7;                     // type:FLOAT.0
	float                            _0xC5E64009;                     // type:FLOAT.0
	float                            _0x9E48233B;                     // type:FLOAT.0
	float                            _0xFDB42DD8;                     // type:FLOAT.0
	float                            _0x90E49B36;                     // type:FLOAT.0
	float                            _0x74BE5DDD;                     // type:FLOAT.0
	float                            _0xD1DDF4E6;                     // type:FLOAT.0
	float                            _0xF56F448C;                     // type:FLOAT.0
	float                            _0xA6AB68EA;                     // type:FLOAT.0
	uint                             _0x0B2C30D4;                     // type:UINT.0
	uint                             _0xB5D05D68;                     // type:UINT.0
	uint                             _0xFB83EE5A;                     // type:UINT.0
	uint                             _0xC9D978D0;                     // type:UINT.0
	float                            _0x0221A441;                     // type:FLOAT.0
	float                            _0xD3692B41;                     // type:FLOAT.0
	float                            _0xE12D04D4;                     // type:FLOAT.0
	float                            _0x367DB3D1;                     // type:FLOAT.0
	float                            _0xCE216463;                     // type:FLOAT.0
	uint                             _0x87F0DB51;                     // type:UINT.0
	float                            _0xFD50A2AA;                     // type:FLOAT.0
	float                            _0x74FB6896;                     // type:FLOAT.0
	float                            _0x12EC75EE;                     // type:FLOAT.0
	float                            _0x48FE11E2;                     // type:FLOAT.0
	float                            _0x7BADF015;                     // type:FLOAT.0
	float                            _0x683D75FB;                     // type:FLOAT.0
	float                            _0x4225C944;                     // type:FLOAT.0
	float                            _0xD89A2C4E;                     // type:FLOAT.0
	float                            _0x417863BA;                     // type:FLOAT.0
	float                            _0x2FCE6E29;                     // type:FLOAT.0
	float                            _0x9D574403;                     // type:FLOAT.0
	float                            _0xE855045E;                     // type:FLOAT.0
	float                            _0x8F12EE27;                     // type:FLOAT.0
	uint                             _0x9FA6EA25;                     // type:UINT.0
	uint                             _0x0FD24577;                     // type:UINT.0
	uint                             _0x5651DCA7;                     // type:UINT.0
};

struct _0xFE10B6D1 : _0x40FED52F
{
	array<struct _0x1A68C236>        Ranks;                           // type:ARRAY.ATARRAY
};

struct _0xFE24AB3B : _0x5D496F4E
{
	enum _0xCEE4FD68                 Operation;                       // type:ENUM.32BIT
	uint                             _0x0C3DE641;                     // type:UINT.0
};

struct _0xFE35F58D : _0x1FB1BCEA
{
};

struct _0xFE408D42
{
	array<string, 4>                 ValidAnimInfos;                  // type:ARRAY.ATFIXEDARRAY
};

struct _0xFE48AB75 : CTuning
{
	struct _0x9F3ED86E               TuningValues;                    // type:STRUCT.STRUCTURE
};

struct _0xFE52CA89 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
};

struct _0xFE6837E0
{
	uchar                            Albedo;                          // type:UCHAR.0
	uchar                            Material;                        // type:UCHAR.0
};

struct _0xFE7A6193
{
	uint                             textureIndex;                    // type:UINT.0
	float                            _0x0C16A9DD;                     // type:FLOAT.0
	float                            _0xDE43DFD2;                     // type:FLOAT.0
};

struct _0xFE9127C7 : CTuning
{
	float                            _0x9BE13204;                     // type:FLOAT.0
	float                            _0x3F782547;                     // type:FLOAT.2
	float                            _0x44428F24;                     // type:FLOAT.2
	float                            _0xC7F75A93;                     // type:FLOAT.2
	float                            _0xFB2DFCB7;                     // type:FLOAT.2
	float                            _0xE9231B89;                     // type:FLOAT.2
	float                            _0x1DE8501D;                     // type:FLOAT.2
	float                            _0x53C97D17;                     // type:FLOAT.2
	float                            _0xE6F42F0B;                     // type:FLOAT.0
	float                            _0x0E0DE105;                     // type:FLOAT.0
	float                            _0xA2758E51;                     // type:FLOAT.0
	float                            _0xEFBFCC02;                     // type:FLOAT.0
	float                            _0xF4A1F69B;                     // type:FLOAT.0
	float                            _0x53FCDEE4;                     // type:FLOAT.0
	float                            _0xA3686884;                     // type:FLOAT.0
	float                            _0x839401CC;                     // type:FLOAT.0
	float                            _0xE1F6722A;                     // type:FLOAT.0
	float                            _0xC0770199;                     // type:FLOAT.0
	float                            _0x313E7F88;                     // type:FLOAT.0
	float                            _0x0C8A956D;                     // type:FLOAT.0
	float                            _0xB6F35C3F;                     // type:FLOAT.0
	float                            _0x6D1B2737;                     // type:FLOAT.0
	float                            _0x1D9D68E5;                     // type:FLOAT.0
	float                            _0x3914C5B1;                     // type:FLOAT.0
};

struct _0xFE990C33 : CAICondition
{
	enum _0x563FBCEA                 Ped;                             // type:ENUM.32BIT
	enum _0x44D77E81                 _0x743B2F17;                     // type:ENUM.32BIT
};

struct _0xFEA05F30
{
	float                            EnterToBaseBlendDuration;        // type:FLOAT.0
	float                            BaseBlendDuration;               // type:FLOAT.0
	float                            ExitBlendDuration;               // type:FLOAT.0
	float                            FinishBlendDuration;             // type:FLOAT.0
	float                            AnimDrivenRagdollBlendDuration;  // type:FLOAT.0
};

struct _0xFEAE3BC0 : CBaseSaveObject
{
	uint                             dataVersion;                     // type:UINT.0
	uint                             _0xB8CD833F;                     // type:UINT.0
	uint                             _0x985F59E1;                     // type:UINT.0
	array<uchar>                     _0x76BA7267;                     // type:ARRAY._0x2087BB00
	uint                             _0x1AFABE78;                     // type:UINT.0
	uint                             _0xD571EBC0;                     // type:UINT.0
	uint                             _0x11397DEF;                     // type:UINT.0
};

struct _0xFECF2F24 : _0x8C354D49
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bool                             IsPriorityRequest;               // type:BOOL.0
};

struct _0xFEE170B8 : _0xB7587A55
{
};

struct _0xFEE4384B : camBaseObjectMetadata
{
	struct _0xB5A7E7DA               Data;                            // type:STRUCT.STRUCTURE
};

struct _0xFEE6A87B
{
	array<struct _0xE982D7D2>        FaceData;                        // type:ARRAY.ATARRAY
	array<struct _0x4925EB11>        VertexData;                      // type:ARRAY.ATARRAY
};

struct _0xFEEDE448
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	struct _0xCB0763FC               _0x5E90CFD7;                     // type:STRUCT.STRUCTURE
};

struct _0xFEF486F6
{
	string                           IdlingClipSet;                   // type:STRING.ATNONFINALHASHSTRING
	string                           IdlingSingleClip;                // type:STRING.ATNONFINALHASHSTRING
	string                           BurningClipSet;                  // type:STRING.ATNONFINALHASHSTRING
	string                           SubmergedClipSet;                // type:STRING.ATNONFINALHASHSTRING
	string                           DeepWaterClipSet;                // type:STRING.ATNONFINALHASHSTRING
	string                           ReactClipSet;                    // type:STRING.ATNONFINALHASHSTRING
	string                           CalmDirectionalClipSet;          // type:STRING.ATNONFINALHASHSTRING
	string                           StruggleDirectionalClipSet;      // type:STRING.ATNONFINALHASHSTRING
	string                           ReorientBlendOutSet;             // type:STRING.ATNONFINALHASHSTRING
	string                           EscapeBlendOutSet;               // type:STRING.ATNONFINALHASHSTRING
	string                           BreakFreeClipSet;                // type:STRING.ATNONFINALHASHSTRING
	float                            BoundZOffset;                    // type:FLOAT.0
	bitset<enum _0x87446230>         Flags;                           // type:BITSET.32BIT
};

struct _0xFEF980E4 : _0x263CA8E8
{
	array<struct _0x4A7AD954>        contexts;                        // type:ARRAY.ATARRAY
};

struct _0xFF007531 : CAICondition
{
	uint                             _0x70E63349;                     // type:UINT.0
};

struct _0xFF47A802
{
	string                           name;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             _0xCCB3D116;                     // type:UINT.0
};

struct _0xFF88C76F
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x658F32E6>         IKSolversDisabled;               // type:BITSET.32BIT
	struct _0x119962EE               TorsoDeltaLimits;                // type:STRUCT.STRUCTURE
	struct _0x119962EE               HeadDeltaLimits;                 // type:STRUCT.STRUCTURE
	struct _0x119962EE               NeckDeltaLimits;                 // type:STRUCT.STRUCTURE
	struct _0x518B037A               BodyReactData;                   // type:STRUCT.STRUCTURE
	struct _0x19ECA8D0               QuadrupedReactData;              // type:STRUCT.STRUCTURE
	struct _0x5D194698               BodyLookData;                    // type:STRUCT.STRUCTURE
	struct _0x9F8B917D               BodyRecoilData;                  // type:STRUCT.STRUCTURE
	struct _0x10D580AC               QuadrupedLegData;                // type:STRUCT.STRUCTURE
	struct _0x989572EA               LegData;                         // type:STRUCT.STRUCTURE
};

struct _0xFF8FFE07 : _0x8760E325
{
};

struct _0xFFBEDA52
{
	float                            _0x42EE3757;                     // type:FLOAT.0
	float                            _0x5260CEDE;                     // type:FLOAT.0
	float                            _0x552E9D57;                     // type:FLOAT.0
	vec2                             _0x85586E0F;                     // type:VECTOR2.0
	float                            _0xD23AEF41;                     // type:FLOAT.0
	float                            _0x3B347C44;                     // type:FLOAT.0
};

struct _0xFFC23721 : _0x67C85F24
{
};

struct _0xFFC40A3C : _0x8A6F9D4C
{
};

struct _0xFFCFACC5 : _0x9B03B63C
{
};

struct _0xFFD66084 : _0x962C1ECE
{
};

struct _0xFFE8E531
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	vec3                             Position;                        // type:VECTOR3.0
	float                            Length;                          // type:FLOAT.0
	float                            Width;                           // type:FLOAT.0
	float                            Height;                          // type:FLOAT.0
	array<string>                    ActiveBoundExclusions;           // type:ARRAY.ATARRAY
};

struct _0xFFEB72E0
{
	string                           ClipSetId;                       // type:STRING.ATNONFINALHASHSTRING
	string                           VarClipSetId;                    // type:STRING.ATNONFINALHASHSTRING
	bitset<enum _0x38432A95>         ConditionFlags;                  // type:BITSET.32BIT
	bitset<enum _0xB4DE75E6>         InformationFlags;                // type:BITSET.32BIT
};

struct _0xFFF65C66 : _0x0A510DA9
{
	bool                             _0xC4A911C5;                     // type:BOOL.0
};

struct aiNavMeshSwapData
{
	string                           BaseName;                        // type:STRING.ATNONFINALHASHSTRING
	string                           SwapName;                        // type:STRING.ATNONFINALHASHSTRING
};

struct aiNavMeshSwapGroupData
{
	string                              Name;                            // type:STRING.ATSTRING
	array<struct aiNavMeshSwapData>     Swaps;                           // type:ARRAY.ATARRAY
};

struct aiNavMeshSwapGroupListData
{
	array<struct aiNavMeshSwapGroupData>     Groups;                          // type:ARRAY.ATARRAY
};

struct audFootstepEventTuning
{
	array<struct _0x72CD57F5, 5>     SinglePlayer;                    // type:ARRAY.ATRANGEARRAY
	array<struct _0x72CD57F5, 5>     MultiPlayer;                     // type:ARRAY.ATRANGEARRAY
	float                            FoliageSoundFactor;              // type:FLOAT.0
	float                            HorseFootstepHardnessMultiplier; // type:FLOAT.0
};

struct camAimCameraMetadata : camBaseCameraMetadata
{
	string                           ControlHelperRef;                // type:STRING.ATNONFINALHASHSTRING
	float                            BaseFov;                         // type:FLOAT.0
	float                            BaseNearClip;                    // type:FLOAT.0
	uint                             MinUpdatesBeforeApplyingMotionBlur; // type:UINT.0
	float                            BaseMotionBlurStrength;          // type:FLOAT.0
	float                            ZoomMotionBlurMinFovDelta;       // type:FLOAT.0
	float                            ZoomMotionBlurMaxFovDelta;       // type:FLOAT.0
	float                            ZoomMotionBlurMaxStrengthForFov; // type:FLOAT.0
	vec3                             AttachRelativeOffset;            // type:VECTOR3.0
	bool                             ShouldApplyAttachOffsetRelativeToCamera; // type:BOOL.0
	float                            MinPitch;                        // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	float                            MinRelativeHeading;              // type:FLOAT.0
	float                            MaxRelativeHeading;              // type:FLOAT.0
};

struct camAnimSceneDirectorMetadata : camBaseDirectorMetadata
{
	string                           _0x8F6F489A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x84D8E77D;                     // type:FLOAT.0
};

struct camAnimatedCameraMetadata : camBaseCameraMetadata
{
};

struct camAnimatedShakeMetadata : camBaseShakeMetadata
{
};

struct camBaseCameraMetadata : camBaseObjectMetadata
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	string                           DofSettings;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x150C7E8B;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xB726E05E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x8EBE843F;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             CanBePaused;                     // type:BOOL.0
};

struct camBaseDirectorMetadata : camBaseObjectMetadata
{
	bool                             CanBePaused;                     // type:BOOL.0
	float                            _0xF03BEB52;                     // type:FLOAT.0
};

struct camBaseObjectMetadata
{
	string                           Name;                            // type:STRING.ATNONFINALHASHSTRING
	string                           _0x4F62AFBC;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x639FAA0D;                     // type:STRING.ATNONFINALHASHSTRING
};

struct camBaseShakeMetadata : camBaseObjectMetadata
{
	string                           _0x4B26A279;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x5520AAE0;                     // type:BOOL.0
	bool                             _0xCF6F3D4C;                     // type:BOOL.0
};

struct camBaseSplineCameraMetadata : camScriptedCameraMetadata
{
};

struct camCinematicAnimatedCameraMetadata : camAnimatedCameraMetadata
{
};

struct camCinematicCameraManCameraMetadata : camBaseCameraMetadata
{
	string                           _0xCE8048FC;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xCD8F0B69;                     // type:FLOAT.0
	float                            _0xBD396DC8;                     // type:FLOAT.0
	float                            _0x139F66D8;                     // type:FLOAT.0
	float                            _0xC99384CE;                     // type:FLOAT.0
	float                            _0xB0981EE1;                     // type:FLOAT.0
	float                            _0xB32465C1;                     // type:FLOAT.0
	float                            _0x42016A07;                     // type:FLOAT.0
	bool                             _0x06D41225;                     // type:BOOL.0
	float                            _0xF68376D4;                     // type:FLOAT.0
	float                            _0x5B7F0CA3;                     // type:FLOAT.0
	float                            CollisionRadius;                 // type:FLOAT.0
	float                            RadiusScalingForClippingTest;    // type:FLOAT.0
	float                            _0xB437AF70;                     // type:FLOAT.0
	float                            _0x326E3373;                     // type:FLOAT.0
	uint                             _0x0182BE6E;                     // type:UINT.0
	float                            _0x65514E96;                     // type:FLOAT.0
	float                            _0x4B67141E;                     // type:FLOAT.0
	float                            _0x4535531C;                     // type:FLOAT.0
	uint                             _0xBE2C8EAD;                     // type:UINT.0
	uint                             _0xABED3219;                     // type:UINT.0
	bool                             _0x0427E026;                     // type:BOOL.0
	float                            ScanRadius;                      // type:FLOAT.0
	float                            ScanDistance;                    // type:FLOAT.0
	float                            _0x0BE6AA37;                     // type:FLOAT.0
	string                           InVehicleLookAtDampingRef;       // type:STRING.ATNONFINALHASHSTRING
	string                           OnFootLookAtDampingRef;          // type:STRING.ATNONFINALHASHSTRING
	string                           _0x102EFE21;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x99B247B2;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x93AAD8FA;                     // type:FLOAT.0
	float                            _0xCDB740B9;                     // type:FLOAT.0
	float                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                            MinHeightAboveWater;             // type:FLOAT.0
	float                            _0x3DBE7085;                     // type:FLOAT.0
	bool                             _0xD1B13BE3;                     // type:BOOL.0
	float                            _0x21DC6AD2;                     // type:FLOAT.0
	float                            _0x2E90DB58;                     // type:FLOAT.0
	bool                             _0x9AC63598;                     // type:BOOL.0
	float                            _0x578932DF;                     // type:FLOAT.0
	float                            _0x2B61120B;                     // type:FLOAT.0
	float                            _0xBB34608F;                     // type:FLOAT.0
	bool                             _0xBE83DC3C;                     // type:BOOL.0
	float                            _0xB68174D7;                     // type:FLOAT.0
	float                            _0x714548E6;                     // type:FLOAT.0
	float                            _0xF386E623;                     // type:FLOAT.0
	float                            _0xC1BD32BB;                     // type:FLOAT.0
	float                            _0x24D802C7;                     // type:FLOAT.0
	float                            _0x932BBB14;                     // type:FLOAT.0
	float                            _0xE913B945;                     // type:FLOAT.0
	float                            _0x33C696E6;                     // type:FLOAT.0
	float                            _0x768BA6A6;                     // type:FLOAT.0
	float                            _0xA06A5358;                     // type:FLOAT.0
	float                            _0x75BBC523;                     // type:FLOAT.0
	float                            _0x093A2D47;                     // type:FLOAT.0
	float                            _0x873B1DA3;                     // type:FLOAT.0
	float                            _0x24379AC1;                     // type:FLOAT.0
	float                            _0xBF1B8E04;                     // type:FLOAT.0
	float                            _0xE1D34C13;                     // type:FLOAT.0
	vec2                             WorldPitchLimits;                // type:VECTOR2.0
	float                            _0x42EE3757;                     // type:FLOAT.0
	float                            _0x5260CEDE;                     // type:FLOAT.0
	float                            _0x552E9D57;                     // type:FLOAT.0
	vec2                             _0x6C2CA6CC;                     // type:VECTOR2.0
	float                            _0x0595EE98;                     // type:FLOAT.0
	struct _0xEE7A27EF               _0xDFC7D93E;                     // type:STRUCT.STRUCTURE
	struct _0xC7EF0365               _0x7F271310;                     // type:STRUCT.STRUCTURE
};

struct camCinematicCameraManShotMetadata : camCinematicShotMetadata
{
	bool                             _0xFA35B1D3;                     // type:BOOL.0
};

struct camCinematicContextMetadata : camBaseObjectMetadata
{
	array<struct camCinematicShots>     Shots;                           // type:ARRAY.ATARRAY
	bool                                _0x9143A55A;                     // type:BOOL.0
	bool                                _0xF53C6899;                     // type:BOOL.0
	bool                                _0xC3A4B495;                     // type:BOOL.0
	bool                                _0xFAF2F6EF;                     // type:BOOL.0
	bool                                _0xDC7DAB6D;                     // type:BOOL.0
	bool                                _0xB7A38E28;                     // type:BOOL.0
	float                               _0xC333573D;                     // type:FLOAT.0
	bool                                _0xEC6A6AF7;                     // type:BOOL.0
	uint                                _0xAD79549E;                     // type:UINT.0
	bool                                _0xEAD735F1;                     // type:BOOL.0
	float                               _0x65BC4664;                     // type:FLOAT.0
	string                              _0xD6547BE2;                     // type:STRING.ATNONFINALHASHSTRING
	uint                                _0x24EB9AE2;                     // type:UINT.0
	uint                                _0xA87CA1B5;                     // type:UINT.0
	bool                                _0xBD09B5C4;                     // type:BOOL.0
	bool                                _0xBB2413C8;                     // type:BOOL.0
	bool                                _0x21A26E00;                     // type:BOOL.0
};

struct camCinematicCraningCameraManShotMetadata : camCinematicShotMetadata
{
	bool                             _0xFA35B1D3;                     // type:BOOL.0
	bool                             _0x37B2C980;                     // type:BOOL.0
	float                            _0x56F555A2;                     // type:FLOAT.0
	float                            _0x84C47575;                     // type:FLOAT.0
	bool                             _0x384054C3;                     // type:BOOL.0
	uint                             _0x5FC1DC07;                     // type:UINT.0
	float                            _0xD194AD49;                     // type:FLOAT.0
	vec2                             _0xC1AA7236;                     // type:VECTOR2.0
	float                            _0xB210F27B;                     // type:FLOAT.0
	float                            ScanRadius;                      // type:FLOAT.0
};

struct camCinematicDirectorMetadata : camBaseDirectorMetadata
{
	string                                        _0xD9C66D32;                     // type:STRING.ATNONFINALHASHSTRING
	float                                         _0x7D868CDF;                     // type:FLOAT.0
	uint                                          _0x09CC5CE0;                     // type:UINT.0
	bool                                          _0x0BC0DB6F;                     // type:BOOL.0
	uint                                          _0xB1D9E82E;                     // type:UINT.0
	string                                        _0xFA3FA5D9;                     // type:STRING.ATNONFINALHASHSTRING
	float                                         _0x0BF4F3CF;                     // type:FLOAT.0
	float                                         _0xD37B3526;                     // type:FLOAT.0
	float                                         _0x47468394;                     // type:FLOAT.0
	string                                        _0x63F80EC1;                     // type:STRING.ATNONFINALHASHSTRING
	string                                        _0x7D4279FF;                     // type:STRING.ATNONFINALHASHSTRING
	float                                         _0x6F49F39C;                     // type:FLOAT.0
	float                                         _0x1963BF62;                     // type:FLOAT.0
	float                                         _0x7BF3FAE1;                     // type:FLOAT.0
	array<struct camCinematicContextMetadata>     CinematicContexts;               // type:ARRAY.ATARRAY
	bool                                          _0xC7E9A972;                     // type:BOOL.0
	float                                         _0x81C67630;                     // type:FLOAT.0
	uint                                          _0xDF22A3CB;                     // type:UINT.0
	enum _0x0100F80E                              _0x58EF5A80;                     // type:ENUM.32BIT
	uint                                          _0xCF79EC06;                     // type:UINT.0
	enum _0x0100F80E                              _0x5CD3EDDA;                     // type:ENUM.32BIT
	float                                         _0xAE00384B;                     // type:FLOAT.0
};

struct camCinematicHeliChaseCameraMetadata : camBaseCameraMetadata
{
	uint                             MinDuration;                     // type:UINT.0
	uint                             MaxDuration;                     // type:UINT.0
	uint                             _0xE284AE4B;                     // type:UINT.0
	uint                             _0x7780C4C1;                     // type:UINT.0
	uint                             _0x185D24F2;                     // type:UINT.0
	float                            _0x6B966675;                     // type:FLOAT.0
	float                            _0x73025195;                     // type:FLOAT.0
	float                            _0x42966678;                     // type:FLOAT.0
	vec2                             _0x6C7B6780;                     // type:VECTOR2.0
	float                            _0xD73B62A1;                     // type:FLOAT.0
	float                            _0xABFDBED4;                     // type:FLOAT.0
	float                            HeightAboveTarget;               // type:FLOAT.0
	float                            _0x79A2D8B5;                     // type:FLOAT.0
	float                            _0x504016C6;                     // type:FLOAT.0
	float                            _0x1D88C585;                     // type:FLOAT.0
	float                            _0x319C5ECF;                     // type:FLOAT.0
	float                            _0x38D11CD3;                     // type:FLOAT.0
	float                            _0x0BE6AA37;                     // type:FLOAT.0
	float                            _0x4CCDE372;                     // type:FLOAT.0
	float                            _0xFB90CAA2;                     // type:FLOAT.0
	float                            _0x24907ACB;                     // type:FLOAT.0
	float                            _0x06536CB9;                     // type:FLOAT.0
	uint                             _0xBE2C8EAD;                     // type:UINT.0
	uint                             _0xABED3219;                     // type:UINT.0
	float                            _0x4B67141E;                     // type:FLOAT.0
	float                            _0x65514E96;                     // type:FLOAT.0
	float                            _0x4535531C;                     // type:FLOAT.0
	float                            _0x2E90DB58;                     // type:FLOAT.0
	float                            _0x21DC6AD2;                     // type:FLOAT.0
	float                            _0x887E0F4F;                     // type:FLOAT.0
	float                            _0xDA117552;                     // type:FLOAT.0
	float                            _0xCFA9975B;                     // type:FLOAT.0
	float                            _0x42C537A6;                     // type:FLOAT.0
	float                            _0x661E18A3;                     // type:FLOAT.0
	float                            _0x35B42638;                     // type:FLOAT.0
	float                            _0x82EE7073;                     // type:FLOAT.0
	float                            NearClip;                        // type:FLOAT.0
	bool                             _0x8432D327;                     // type:BOOL.0
	bool                             _0x06D41225;                     // type:BOOL.0
	bool                             _0x8261C567;                     // type:BOOL.0
	bool                             _0x443F3E73;                     // type:BOOL.0
	bool                             _0x1A6259FD;                     // type:BOOL.0
	float                            _0xF97E48E1;                     // type:FLOAT.0
	bool                             _0x12D167D1;                     // type:BOOL.0
	vec2                             _0xD121E443;                     // type:VECTOR2.0
	vec2                             _0x94F427FF;                     // type:VECTOR2.0
	float                            _0x33861A2E;                     // type:FLOAT.0
	float                            _0x06171792;                     // type:FLOAT.0
	string                           InVehicleLookAtDampingRef;       // type:STRING.ATNONFINALHASHSTRING
	string                           OnFootLookAtDampingRef;          // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA49FEA55;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x0FEAC4DA;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x3A9F25BA;                     // type:FLOAT.0
	float                            _0xCDC05E66;                     // type:FLOAT.0
	float                            _0x8C39F4BD;                     // type:FLOAT.0
	float                            _0x24D802C7;                     // type:FLOAT.0
	float                            _0x932BBB14;                     // type:FLOAT.0
	float                            _0xF386E623;                     // type:FLOAT.0
	float                            _0xC1BD32BB;                     // type:FLOAT.0
	float                            _0xD507F72D;                     // type:FLOAT.0
	float                            _0x2D5EC2A6;                     // type:FLOAT.0
	float                            _0x561C7A1B;                     // type:FLOAT.0
	float                            _0x0D0834D6;                     // type:FLOAT.0
	float                            _0xB68174D7;                     // type:FLOAT.0
	float                            _0x714548E6;                     // type:FLOAT.0
	float                            _0x3DBE7085;                     // type:FLOAT.0
	float                            _0x42EE3757;                     // type:FLOAT.0
	float                            _0x5260CEDE;                     // type:FLOAT.0
	float                            _0x552E9D57;                     // type:FLOAT.0
	float                            _0xD664EDB6;                     // type:FLOAT.0
	vec3                             _0xE4F3AE0F;                     // type:VECTOR3.0
	float                            _0x085F35CC;                     // type:FLOAT.0
	uint                             _0xED2C61EC;                     // type:UINT.0
	float                            _0x29C5F0A3;                     // type:FLOAT.0
	float                            _0x62E17CE0;                     // type:FLOAT.0
	float                            _0x81CE6442;                     // type:FLOAT.0
	uint                             _0x8FF578F7;                     // type:UINT.0
	float                            _0x0595EE98;                     // type:FLOAT.0
	struct _0xEE7A27EF               _0xDFC7D93E;                     // type:STRUCT.STRUCTURE
	struct _0xC7EF0365               _0x7F271310;                     // type:STRUCT.STRUCTURE
};

struct camCinematicHeliTrackingShotMetadata : camCinematicShotMetadata
{
	bool                             _0xFA35B1D3;                     // type:BOOL.0
};

struct camCinematicInTrainAtStationContextMetadata : camCinematicInTrainContextMetadata
{
	uint                             _0x841639AF;                     // type:UINT.0
	uint                             _0xB9EE6580;                     // type:UINT.0
};

struct camCinematicInTrainContextMetadata : camCinematicInVehicleContextMetadata
{
	bool                             _0xD132EF52;                     // type:BOOL.0
};

struct camCinematicInTrainShotMetadata : camCinematicShotMetadata
{
};

struct camCinematicInVehicleContextMetadata : camCinematicContextMetadata
{
};

struct camCinematicInVehicleCrashContextMetadata : camCinematicContextMetadata
{
	uint                             _0x88F469C9;                     // type:UINT.0
	uint                             _0x59E71376;                     // type:UINT.0
	float                            _0xD447B795;                     // type:FLOAT.0
	enum _0xD86F27E6                 TargetType;                      // type:ENUM.32BIT
};

struct camCinematicMountedCameraMetadata : camBaseCameraMetadata
{
	string                                                                     RelativeAttachSpringConstantEnvelopeRef; // type:STRING.ATNONFINALHASHSTRING
	string                                                                     RagdollBlendEnvelopeRef;         // type:STRING.ATNONFINALHASHSTRING
	string                                                                     SpringMountRef;                  // type:STRING.ATNONFINALHASHSTRING
	float                                                                      BaseFov;                         // type:FLOAT.0
	float                                                                      BaseNearClip;                    // type:FLOAT.0
	vec3                                                                       RelativeAttachPosition;          // type:VECTOR3.0
	vec3                                                                       BoneRelativeAttachOffset;        // type:VECTOR3.0
	vec2                                                                       RelativeAttachSpringConstantLimits; // type:VECTOR2.0
	vec2                                                                       RelativeAttachSpringConstantLimitsForPassengers; // type:VECTOR2.0
	float                                                                      DefaultRelativePitch;            // type:FLOAT.0
	float                                                                      DefaultReversePitch;             // type:FLOAT.0
	bool                                                                       _0xB8F68298;                     // type:BOOL.0
	struct camCinematicMountedCameraMetadataRelativePitchScalingToThrottle     _0x906EA67C;                     // type:STRUCT.STRUCTURE
	bool                                                                       _0xFAF91DAF;                     // type:BOOL.0
	float                                                                      RelativeAttachSpringDampingRatio; // type:FLOAT.0
	float                                                                      MinSpeedForMaxRelativeAttachSpringConstant; // type:FLOAT.0
	bool                                                                       ShouldAttachToFollowPedHead;     // type:BOOL.0
	bool                                                                       _0x9D56D88F;                     // type:BOOL.0
	bool                                                                       ShouldAttachToFollowPedSeat;     // type:BOOL.0
	bool                                                                       ShouldRestictToFrontSeat;        // type:BOOL.0
	bool                                                                       ShouldAttachToVehicleExitEntryPoint; // type:BOOL.0
	bool                                                                       ShouldAttachToVehicleBone;       // type:BOOL.0
	enum _0xCAEC3EE2                                                           VehicleAttachPart;               // type:ENUM.32BIT
	enum _0x7F5C19FF                                                           LookAtBehaviour;                 // type:ENUM.32BIT
	vec3                                                                       RelativeLookAtPosition;          // type:VECTOR3.0
	vec3                                                                       LookBehindRelativeAttachPosition; // type:VECTOR3.0
	bool                                                                       ShouldUseLookBehindCustomPosition; // type:BOOL.0
	int                                                                        FollowPedLookAtBoneTag;          // type:INT.0
	struct camCinematicMountedCameraMetadataOrientationSpring                  OrientationSpring;               // type:STRUCT.STRUCTURE
	float                                                                      MinPitch;                        // type:FLOAT.0
	float                                                                      MaxPitch;                        // type:FLOAT.0
	vec2                                                                       RelativeHeadingLimitsForMobilePhoneCamera; // type:VECTOR2.0
	bool                                                                       IsBehindVehicleGlass;            // type:BOOL.0
	bool                                                                       _0x8E2F8D7E;                     // type:BOOL.0
	bool                                                                       ShouldDisplayReticule;           // type:BOOL.0
	bool                                                                       ShouldMakeFollowPedHeadInvisible; // type:BOOL.0
	bool                                                                       ShouldMakePedInAttachSeatInvisible; // type:BOOL.0
	bool                                                                       ShouldCopyVehicleCameraMotionBlur; // type:BOOL.0
	bool                                                                       LimitAttachParentRelativePitchAndHeading; // type:BOOL.0
	bool                                                                       ShouldTerminateForPitchAndHeading; // type:BOOL.0
	vec2                                                                       AttachParentRelativePitch;       // type:VECTOR2.0
	vec2                                                                       AttachParentRelativeHeading;     // type:VECTOR2.0
	vec2                                                                       InitialRelativePitchLimits;      // type:VECTOR2.0
	vec2                                                                       InitialRelativeHeadingLimits;    // type:VECTOR2.0
	bool                                                                       ShouldApplyAttachParentRoll;     // type:BOOL.0
	bool                                                                       ShouldTerminateForWorldPitch;    // type:BOOL.0
	vec2                                                                       InitialWorldPitchLimits;         // type:VECTOR2.0
	vec2                                                                       WorldPitchLimits;                // type:VECTOR2.0
	bool                                                                       ShouldTerminateForOcclusion;     // type:BOOL.0
	uint                                                                       MaxTimeToSpendOccluded;          // type:UINT.0
	bool                                                                       ShouldTerminateIfOccludedByAttachParent; // type:BOOL.0
	uint                                                                       MaxTimeToSpendOccludedByAttachParent; // type:UINT.0
	float                                                                      CollisionRadius;                 // type:FLOAT.0
	float                                                                      RadiusScalingForOcclusionTest;   // type:FLOAT.0
	bool                                                                       ShouldTerminateForDistanceToTarget; // type:BOOL.0
	float                                                                      DistanceToTerminate;             // type:FLOAT.0
	bool                                                                       ShouldCalculateXYDistance;       // type:BOOL.0
	bool                                                                       ShouldTestForClipping;           // type:BOOL.0
	uint                                                                       MaxTimeToClipIntoDynamicCollision; // type:UINT.0
	float                                                                      RadiusScalingForClippingTest;    // type:FLOAT.0
	float                                                                      MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                                                                      MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                                                                      MinHeightAboveWater;             // type:FLOAT.0
	string                                                                     InVehicleLookAtDampingRef;       // type:STRING.ATNONFINALHASHSTRING
	string                                                                     OnFootLookAtDampingRef;          // type:STRING.ATNONFINALHASHSTRING
	string                                                                     _0xFA62FF34;                     // type:STRING.ATNONFINALHASHSTRING
	bool                                                                       ShouldByPassNearClip;            // type:BOOL.0
	bool                                                                       ShouldTestForMapPenetrationFromAttachPosition; // type:BOOL.0
	float                                                                      BaseHeading;                     // type:FLOAT.0
	bool                                                                       _0x48622809;                     // type:BOOL.0
	float                                                                      _0x8AB5C747;                     // type:FLOAT.0
	float                                                                      _0x4A487626;                     // type:FLOAT.0
	struct camSpeedRelativeShakeSettingsMetadata                               _0xA2111642;                     // type:STRUCT.STRUCTURE
};

struct camCinematicMountedCameraMetadataOrientationSpring
{
	float                            _0x8054EC20;                     // type:FLOAT.0
	float                            _0x135E8606;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            _0x39ADFF2E;                     // type:FLOAT.0
	float                            _0x0E88FA34;                     // type:FLOAT.0
	float                            _0xCE1F459F;                     // type:FLOAT.0
	float                            _0x8709910F;                     // type:FLOAT.0
	float                            _0x378C3C7D;                     // type:FLOAT.0
};

struct camCinematicMountedCameraMetadataRelativePitchScalingToThrottle
{
	bool                             _0x6B728A11;                     // type:BOOL.0
	float                            _0x0BF85225;                     // type:FLOAT.0
};

struct camCinematicMountedPartCameraMetadata : camBaseCameraMetadata
{
	string                                           RelativeAttachSpringConstantEnvelopeRef; // type:STRING.ATNONFINALHASHSTRING
	string                                           SpringMountRef;                  // type:STRING.ATNONFINALHASHSTRING
	float                                            BaseFov;                         // type:FLOAT.0
	float                                            BaseNearClip;                    // type:FLOAT.0
	enum _0xCAEC3EE2                                 AttachPart;                      // type:ENUM.32BIT
	vec3                                             _0xA6C0B43B;                     // type:VECTOR3.0
	vec3                                             RelativeLookAtPosition;          // type:VECTOR3.0
	vec2                                             RelativeAttachSpringConstantLimits; // type:VECTOR2.0
	vec2                                             RelativeAttachSpringConstantLimitsForPassengers; // type:VECTOR2.0
	float                                            RelativeAttachSpringDampingRatio; // type:FLOAT.0
	float                                            MinSpeedForMaxRelativeAttachSpringConstant; // type:FLOAT.0
	struct camSpeedRelativeShakeSettingsMetadata     HighSpeedShakeSettings;          // type:STRUCT.STRUCTURE
	bool                                             IsBehindVehicleGlass;            // type:BOOL.0
	bool                                             _0x8E2F8D7E;                     // type:BOOL.0
	bool                                             ShouldDisplayReticule;           // type:BOOL.0
	bool                                             ShouldMakeFollowPedHeadInvisible; // type:BOOL.0
	bool                                             ShouldCopyVehicleCameraMotionBlur; // type:BOOL.0
	uint                                             MaxTimeToSpendOccluded;          // type:UINT.0
	float                                            CollisionRadius;                 // type:FLOAT.0
	float                                            RadiusScalingForOcclusionTest;   // type:FLOAT.0
	bool                                             ShouldTestForClipping;           // type:BOOL.0
	float                                            RadiusScalingForClippingTest;    // type:FLOAT.0
	float                                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                                            MinHeightAboveWater;             // type:FLOAT.0
};

struct camCinematicOnFootAssistedAimingContextMetadata : _0x93F54ED4
{
	uint                             _0x83800BD9;                     // type:UINT.0
};

struct camCinematicOnFootAssistedAimingKillShotMetadata : camCinematicShotMetadata
{
	uint                             _0x75270C47;                     // type:UINT.0
	float                            _0x1E997D6F;                     // type:FLOAT.0
};

struct camCinematicOnFootAssistedAimingReactionShotMetadata : camCinematicShotMetadata
{
	uint                             _0xD5585DE0;                     // type:UINT.0
};

struct camCinematicOnFootMeleeContextMetadata : _0x93F54ED4
{
};

struct camCinematicOnFootMeleeShotMetadata : camCinematicShotMetadata
{
};

struct camCinematicPedCloseUpCameraMetadata : camBaseCameraMetadata
{
	float                            BaseFov;                         // type:FLOAT.0
	float                            BaseNearClip;                    // type:FLOAT.0
	struct _0xF765B370               _0xDB53CCC2;                     // type:STRUCT.STRUCTURE
	uint                             _0xBBF791B8;                     // type:UINT.0
	struct _0xF765B370               _0x6BF9BD7D;                     // type:STRUCT.STRUCTURE
	struct _0x9C954D2D               _0x8298EC97;                     // type:STRUCT.STRUCTURE
	float                            _0xFF299066;                     // type:FLOAT.0
	float                            _0x19A7189C;                     // type:FLOAT.0
	uint                             _0x06B58AAB;                     // type:UINT.0
	uint                             _0x70953422;                     // type:UINT.0
	bool                             _0xE24503D0;                     // type:BOOL.0
	float                            _0xDC73E8ED;                     // type:FLOAT.0
	float                            _0xDFC9DBF9;                     // type:FLOAT.0
	float                            _0x8E1646A3;                     // type:FLOAT.0
	bool                             _0x8E7C7746;                     // type:BOOL.0
	string                           _0xC607587A;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xCBC4B316;                     // type:FLOAT.0
	float                            _0xAEE75726;                     // type:FLOAT.0
	float                            _0xA1D538F4;                     // type:FLOAT.0
	uint                             MaxTimeToSpendOccluded;          // type:UINT.0
	float                            _0xD722C048;                     // type:FLOAT.0
	float                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                            _0x463F94BE;                     // type:FLOAT.0
	float                            _0xE79BB6E8;                     // type:FLOAT.0
	float                            MinHeightAboveWater;             // type:FLOAT.0
	float                            _0x271F3B1C;                     // type:FLOAT.0
	float                            _0xF6A732A7;                     // type:FLOAT.0
	float                            _0x68D6F502;                     // type:FLOAT.0
	float                            _0xF507FD10;                     // type:FLOAT.0
	float                            _0x60B36337;                     // type:FLOAT.0
	bool                             _0x08C76D0A;                     // type:BOOL.0
	float                            _0xEDEB4A5A;                     // type:FLOAT.0
};

struct camCinematicPositionCameraMetadata : camBaseCameraMetadata
{
	vec2                             PitchLimits;                     // type:VECTOR2.0
	float                            CollisionRadius;                 // type:FLOAT.0
	float                            _0xED6AF816;                     // type:FLOAT.0
	float                            RadiusScalingForClippingTest;    // type:FLOAT.0
	uint                             MaxTimeToSpendOccluded;          // type:UINT.0
	float                            _0xDD794BD7;                     // type:FLOAT.0
	float                            _0xCCB6BFE8;                     // type:FLOAT.0
	float                            _0x65514E96;                     // type:FLOAT.0
	uint                             ZoomDuration;                    // type:UINT.0
	float                            _0xD722C048;                     // type:FLOAT.0
	uint                             _0x6DE38BED;                     // type:UINT.0
	float                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                            MinHeightAboveWater;             // type:FLOAT.0
	string                           InVehicleLookAtDampingRef;       // type:STRING.ATNONFINALHASHSTRING
	string                           OnFootLookAtDampingRef;          // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFA62FF34;                     // type:STRING.ATNONFINALHASHSTRING
	bool                             _0x7692014E;                     // type:BOOL.0
	bool                             _0x29042CFE;                     // type:BOOL.0
};

struct camCinematicShotMetadata : camBaseObjectMetadata
{
	string                           CameraRef;                       // type:STRING.ATNONFINALHASHSTRING
	vec2                             _0xDE3297C4;                     // type:VECTOR2.0
	bool                             _0xB2A7BEEB;                     // type:BOOL.0
	bool                             _0x20256374;                     // type:BOOL.0
	bitset<enum _0xD261D19D>         VehicleTypes;                    // type:BITSET.32BIT
	bool                             _0x32229FE1;                     // type:BOOL.0
	bool                             _0x69901655;                     // type:BOOL.0
	bool                             _0x8A5930E9;                     // type:BOOL.0
	bool                             _0x4C079FC4;                     // type:BOOL.0
	bool                             _0x9B785532;                     // type:BOOL.0
	float                            _0xBB39AB64;                     // type:FLOAT.0
	bool                             _0x5838A4E3;                     // type:BOOL.0
	bool                             _0x92A9B69B;                     // type:BOOL.0
	float                            _0xDC93A685;                     // type:FLOAT.0
	bool                             _0x4199C078;                     // type:BOOL.0
};

struct camCinematicShots
{
	string                           Shot;                            // type:STRING.ATNONFINALHASHSTRING
	uint                             Priority;                        // type:UINT.0
	float                            ProbabilityWeighting;            // type:FLOAT.0
};

struct camCinematicTrainPassengerShotMetadata : camCinematicShotMetadata
{
};

struct camCinematicTrainRoofMountedShotMetadata : camCinematicShotMetadata
{
};

struct camCinematicTrainStationShotMetadata : camCinematicShotMetadata
{
};

struct camCinematicTrainTrackShotMetadata : camCinematicShotMetadata
{
};

struct camCinematicTrainTrackingCameraMetadata : camCinematicCameraManCameraMetadata
{
	vec3                             _0x34D2E824;                     // type:VECTOR3.0
	vec2                             _0x26BC2D9F;                     // type:VECTOR2.0
	vec2                             _0xB5C8AE6E;                     // type:VECTOR2.0
	vec2                             _0x3F915EEA;                     // type:VECTOR2.0
	vec2                             _0xE46D9313;                     // type:VECTOR2.0
	vec2                             _0x1890E8E3;                     // type:VECTOR2.0
};

struct camCinematicTwoShotCameraMetadata : camBaseCameraMetadata
{
	float                            BaseNearClip;                    // type:FLOAT.0
	array<struct _0x55C4B499>        _0x7EDC6D98;                     // type:ARRAY.ATARRAY
	float                            HeightSpringConstant;            // type:FLOAT.0
	float                            _0xF889FF2E;                     // type:FLOAT.0
	float                            MinDistanceForLockOn;            // type:FLOAT.0
	float                            _0xDFC9DBF9;                     // type:FLOAT.0
	float                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                            MinHeightAboveWater;             // type:FLOAT.0
	float                            _0x8E1646A3;                     // type:FLOAT.0
	vec2                             _0x6C7B6780;                     // type:VECTOR2.0
	bool                             _0x6692839F;                     // type:BOOL.0
	float                            _0x4297E134;                     // type:FLOAT.0
	float                            _0xB9AD8152;                     // type:FLOAT.0
	bool                             _0x58D8C5BC;                     // type:BOOL.0
	float                            _0xF4A9E571;                     // type:FLOAT.0
	float                            _0x60985762;                     // type:FLOAT.0
	bool                             _0x44332EE8;                     // type:BOOL.0
	float                            _0x5678036E;                     // type:FLOAT.0
	uint                             _0xBBF791B8;                     // type:UINT.0
	float                            _0x2CA3E615;                     // type:FLOAT.0
	float                            _0xE8948F93;                     // type:FLOAT.0
	float                            _0xEDEB4A5A;                     // type:FLOAT.0
	bool                             _0xE4AECA67;                     // type:BOOL.0
};

struct camCinematicVehicleBonnetShotMetadata : camCinematicShotMetadata
{
	uint                             _0x4224F63B;                     // type:UINT.0
	uint                             _0xF88F646E;                     // type:UINT.0
	string                           _0x9EA0BD88;                     // type:STRING.ATNONFINALHASHSTRING
};

struct camCinematicVehicleLowOrbitCameraMetadata : camBaseCameraMetadata
{
	string                                           _0xC607587A;                     // type:STRING.ATNONFINALHASHSTRING
	float                                            _0xD934FF06;                     // type:FLOAT.0
	float                                            _0x53EDDCAE;                     // type:FLOAT.0
	array<struct _0x2209B7E9>                        _0x7EDC6D98;                     // type:ARRAY.ATARRAY
	float                                            _0x877C6709;                     // type:FLOAT.0
	float                                            _0x585780BE;                     // type:FLOAT.0
	float                                            _0x7623FA53;                     // type:FLOAT.0
	float                                            _0xB283A4C6;                     // type:FLOAT.0
	float                                            _0x795ABB62;                     // type:FLOAT.0
	vec2                                             _0x5443E66A;                     // type:VECTOR2.0
	vec2                                             _0x2114477E;                     // type:VECTOR2.0
	float                                            _0x7C4DD7E4;                     // type:FLOAT.0
	float                                            _0x430EA6A1;                     // type:FLOAT.0
	float                                            _0xBC4FECF4;                     // type:FLOAT.0
	bool                                             _0xF2673085;                     // type:BOOL.0
	vec2                                             _0x8B0C32A2;                     // type:VECTOR2.0
	vec2                                             _0x865DA4E8;                     // type:VECTOR2.0
	vec2                                             _0x0630EB2C;                     // type:VECTOR2.0
	uint                                             _0xD4368F58;                     // type:UINT.0
	float                                            _0x0412C00D;                     // type:FLOAT.0
	uint                                             _0x3C3E88BE;                     // type:UINT.0
	vec2                                             WorldPitchLimits;                // type:VECTOR2.0
	float                                            _0xB75C5830;                     // type:FLOAT.0
	float                                            _0xCF8A46C2;                     // type:FLOAT.0
	float                                            _0x4CCF5BF0;                     // type:FLOAT.0
	float                                            _0xB641BA04;                     // type:FLOAT.0
	float                                            AttachParentHeightRatioToAttain; // type:FLOAT.0
	float                                            CollisionRadius;                 // type:FLOAT.0
	float                                            _0xED6AF816;                     // type:FLOAT.0
	float                                            RadiusScalingForOcclusionTest;   // type:FLOAT.0
	float                                            RadiusScalingForClippingTest;    // type:FLOAT.0
	float                                            _0x21B10F71;                     // type:FLOAT.0
	float                                            _0x805ECB7E;                     // type:FLOAT.0
	float                                            _0x2DA26BB0;                     // type:FLOAT.0
	uint                                             MaxTimeToSpendOccluded;          // type:UINT.0
	uint                                             _0xF5A86649;                     // type:UINT.0
	uint                                             _0x3BB263D8;                     // type:UINT.0
	float                                            MaxDistanceForWaterClippingTest; // type:FLOAT.0
	float                                            MaxDistanceForRiverWaterClippingTest; // type:FLOAT.0
	float                                            MinHeightAboveWater;             // type:FLOAT.0
	float                                            _0xA3CABB8B;                     // type:FLOAT.0
	float                                            _0x0A6BADF5;                     // type:FLOAT.0
	struct camSpeedRelativeShakeSettingsMetadata     _0xDC81C39B;                     // type:STRUCT.STRUCTURE
	float                                            _0x42EE3757;                     // type:FLOAT.0
	float                                            _0x5260CEDE;                     // type:FLOAT.0
	float                                            _0x552E9D57;                     // type:FLOAT.0
	float                                            _0xA55E3942;                     // type:FLOAT.0
	vec3                                             _0x7D86F95C;                     // type:VECTOR3.0
	bool                                             _0xEAD735F1;                     // type:BOOL.0
	float                                            _0xB272C04C;                     // type:FLOAT.0
	float                                            _0x0595EE98;                     // type:FLOAT.0
};

struct camCinematicVehicleLowOrbitShotMetadata : camCinematicShotMetadata
{
	float                            _0x9C7F2A7E;                     // type:FLOAT.0
	uint                             _0x926640DC;                     // type:UINT.0
};

struct camCinematicVehiclePartShotMetadata : camCinematicShotMetadata
{
	uint                             _0x0DEF34BB;                     // type:UINT.0
};

struct camControlHelperMetadata : camBaseObjectMetadata
{
	struct camControlHelperMetadataZoom     Zoom;                            // type:STRUCT.STRUCTURE
};

struct camControlHelperMetadataZoom
{
	bool                             ShouldUseZoomInput;              // type:BOOL.0
	bool                             ShouldUseDiscreteZoomControl;    // type:BOOL.0
	bool                             ShouldUseGameTime;               // type:BOOL.0
	float                            MinFov;                          // type:FLOAT.0
	float                            MinFovForNetworkPlay;            // type:FLOAT.0
	float                            MaxFov;                          // type:FLOAT.0
	float                            _0x3F074F00;                     // type:FLOAT.0
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            Acceleration;                    // type:FLOAT.0
	float                            Deceleration;                    // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct camCustomTimedSplineCameraMetadata : camTimedSplineCameraMetadata
{
};

struct camCutsceneDirectorMetadata : camBaseDirectorMetadata
{
	string                           _0x6C204AE8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct camDebugDirectorMetadata : camBaseDirectorMetadata
{
	string                           _0xA3E9D158;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xA7A9F363;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xFC3EC965;                     // type:STRING.ATNONFINALHASHSTRING
};

struct camDepthOfFieldSettingsMetadata : camBaseObjectMetadata
{
	vec2                             _0xE6D4854D;                     // type:VECTOR2.0
	vec2                             _0x303F1574;                     // type:VECTOR2.0
	float                            _0xA1E61B1B;                     // type:FLOAT.0
	float                            _0xE5DABC16;                     // type:FLOAT.0
	float                            _0x48CC67D6;                     // type:FLOAT.0
	float                            _0x9E0C7CB7;                     // type:FLOAT.0
	float                            _0x54E7489E;                     // type:FLOAT.0
	float                            _0xE32151C0;                     // type:FLOAT.0
	float                            _0x466F9DD9;                     // type:FLOAT.0
	float                            _0x55D5DC61;                     // type:FLOAT.0
	float                            _0xAF4DB4D7;                     // type:FLOAT.0
	float                            _0x68EFA213;                     // type:FLOAT.0
	float                            _0x0E8FE261;                     // type:FLOAT.0
	float                            _0xA289DD57;                     // type:FLOAT.0
	float                            _0x15D98D0A;                     // type:FLOAT.0
	float                            _0x5E72D65A;                     // type:FLOAT.0
	float                            _0xF5195FB1;                     // type:FLOAT.0
	bool                             _0xEF90DE54;                     // type:BOOL.0
	bool                             _0xBCFB9251;                     // type:BOOL.0
	bool                             _0x15E673DF;                     // type:BOOL.0
	bool                             _0xDF674869;                     // type:BOOL.0
	bool                             _0x3A7C3408;                     // type:BOOL.0
};

struct camEnvelopeMetadata : camBaseObjectMetadata
{
	uint                             _0xEEAD9A5A;                     // type:UINT.0
	uint                             AttackDuration;                  // type:UINT.0
	uint                             DecayDuration;                   // type:UINT.0
	float                            _0x6773BF6B;                     // type:FLOAT.0
	int                              HoldDuration;                    // type:INT.0
	uint                             ReleaseDuration;                 // type:UINT.0
	enum eCurveType                  _0x7816FE62;                     // type:ENUM.32BIT
	enum eCurveType                  _0x3BDAFB94;                     // type:ENUM.32BIT
	bool                             _0x7DF0552E;                     // type:BOOL.0
};

struct camFirstPersonAimCameraMetadata : camAimCameraMetadata
{
	array<string>                    Modifiers;                       // type:ARRAY.ATARRAY
	enum _0xF945C864                 Context;                         // type:ENUM.32BIT
	bool                             ShouldMakeAttachedEntityInvisible; // type:BOOL.0
	bool                             _0x74CD3EAA;                     // type:BOOL.0
	bool                             ShouldDisplayReticule;           // type:BOOL.0
	bool                             _0x42C80F74;                     // type:BOOL.0
	vec2                             ShakeFirstPersonShootingAbilityLimits; // type:VECTOR2.0
	vec2                             ShakeAmplitudeScalingForShootingAbilityLimits; // type:VECTOR2.0
	float                            _0x71D2FE16;                     // type:FLOAT.0
	float                            _0x5A9152C3;                     // type:FLOAT.0
	float                            _0xE1AF3C7B;                     // type:FLOAT.0
	float                            _0x3533C3C9;                     // type:FLOAT.0
	float                            _0xF648ABC2;                     // type:FLOAT.0
	float                            _0x1339944F;                     // type:FLOAT.0
	float                            _0x0C7C2E4D;                     // type:FLOAT.0
	float                            _0x1A4363BC;                     // type:FLOAT.0
	float                            _0x3A8948CB;                     // type:FLOAT.0
	uint                             _0x6EAA2380;                     // type:UINT.0
	bool                             _0x2A714FDE;                     // type:BOOL.0
	bool                             _0x8F753700;                     // type:BOOL.0
	bool                             _0xBE58AF7E;                     // type:BOOL.0
	float                            _0xD108B25C;                     // type:FLOAT.0
	float                            _0x24FD5267;                     // type:FLOAT.0
	float                            _0xBCE0BEEE;                     // type:FLOAT.0
	float                            _0xD167B7CE;                     // type:FLOAT.0
	vec2                             _0xEF28672C;                     // type:VECTOR2.0
	vec2                             _0x2E801B54;                     // type:VECTOR2.0
};

struct camFirstPersonAimCameraMetadataHeadingCorrection
{
	float                            SpringConstant;                  // type:FLOAT.0
	float                            _0x5936E83F;                     // type:FLOAT.0
	float                            DeltaTolerance;                  // type:FLOAT.0
};

struct camFirstPersonPedAimCameraMetadata : camFirstPersonAimCameraMetadata
{
	string                           _0x5498A041;                     // type:STRING.ATNONFINALHASHSTRING
	int                              AttachBoneTag;                   // type:INT.0
	float                            TripleHeadNearClip;              // type:FLOAT.0
	float                            RelativeAttachPositionSmoothRate; // type:FLOAT.0
	bool                             ShouldTorsoIkLimitsOverrideOrbitPitchLimits; // type:BOOL.0
	bool                             _0x66B6C5D1;                     // type:BOOL.0
	struct _0x34BD0436               CoverSettings;                   // type:STRUCT.STRUCTURE
};

struct camFirstPersonShooterCameraMetadata : camFirstPersonAimCameraMetadata
{
	vec2                                                                           _0xC5EDB96C;                     // type:VECTOR2.0
	vec2                                                                           _0xEFD0648F;                     // type:VECTOR2.0
	vec2                                                                           _0x8D6B02BB;                     // type:VECTOR2.0
	vec2                                                                           _0x39EA7341;                     // type:VECTOR2.0
	vec2                                                                           _0x60C571A9;                     // type:VECTOR2.0
	vec2                                                                           _0x748F8FBF;                     // type:VECTOR2.0
	vec2                                                                           _0x6B649E01;                     // type:VECTOR2.0
	vec2                                                                           _0xE349813F;                     // type:VECTOR2.0
	vec2                                                                           _0x64C9FA77;                     // type:VECTOR2.0
	vec2                                                                           _0x4E2073FF;                     // type:VECTOR2.0
	vec2                                                                           _0x6A2BDAEC;                     // type:VECTOR2.0
	vec2                                                                           _0x62D9F9C9;                     // type:VECTOR2.0
	vec2                                                                           _0xBF50EDD7;                     // type:VECTOR2.0
	float                                                                          _0xA6BD37D2;                     // type:FLOAT.0
	float                                                                          _0x4B128F77;                     // type:FLOAT.0
	float                                                                          _0xAE7A9681;                     // type:FLOAT.0
	float                                                                          _0x436D5B50;                     // type:FLOAT.0
	float                                                                          _0xA072BBEC;                     // type:FLOAT.0
	string                                                                         _0x2B11183C;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                                         _0x3DEC08BC;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                                         _0x8DB7FC85;                     // type:STRING.ATNONFINALHASHSTRING
	int                                                                            AttachBoneTag;                   // type:INT.0
	float                                                                          RelativeAttachPositionSmoothRate; // type:FLOAT.0
	float                                                                          _0x2C46FE76;                     // type:FLOAT.0
	float                                                                          _0x6B63E329;                     // type:FLOAT.0
	float                                                                          _0x1F1D79FF;                     // type:FLOAT.0
	float                                                                          AimFov;                          // type:FLOAT.0
	float                                                                          _0x51D005D5;                     // type:FLOAT.0
	float                                                                          _0x70F773A7;                     // type:FLOAT.0
	float                                                                          _0xECE63A8B;                     // type:FLOAT.0
	float                                                                          _0xC4C9A95B;                     // type:FLOAT.0
	float                                                                          _0x72FD1C2B;                     // type:FLOAT.0
	uint                                                                           _0x3DDCB46E;                     // type:UINT.0
	float                                                                          _0x1F7C845B;                     // type:FLOAT.0
	enum _0x0100F80E                                                               _0xB07BD939;                     // type:ENUM.32BIT
	enum _0x0100F80E                                                               _0xC29C44C5;                     // type:ENUM.32BIT
	float                                                                          _0x70C7612A;                     // type:FLOAT.0
	float                                                                          _0x89D70817;                     // type:FLOAT.0
	float                                                                          RecoilShakeAmplitudeScaling;     // type:FLOAT.0
	uint                                                                           _0x7554A29D;                     // type:UINT.0
	uint                                                                           _0xA9E63C96;                     // type:UINT.0
	struct camFirstPersonShooterCameraMetadataOrientationSpring                    OrientationSpring;               // type:STRUCT.STRUCTURE
	bool                                                                           _0x1970EC26;                     // type:BOOL.0
	bool                                                                           ShouldTorsoIkLimitsOverrideOrbitPitchLimits; // type:BOOL.0
	bool                                                                           _0x66B6C5D1;                     // type:BOOL.0
	string                                                                         _0x15DBC14E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                                         _0x1CB1A23E;                     // type:STRING.ATNONFINALHASHSTRING
	float                                                                          _0x9B94B53F;                     // type:FLOAT.0
	float                                                                          _0x826CC467;                     // type:FLOAT.0
	float                                                                          _0x91E78A82;                     // type:FLOAT.0
	float                                                                          _0x84ACA96B;                     // type:FLOAT.0
	float                                                                          _0xAD82C017;                     // type:FLOAT.0
	float                                                                          _0x9A428776;                     // type:FLOAT.0
	float                                                                          _0x414871BB;                     // type:FLOAT.0
	struct _0xED6939C2                                                             _0x06F00B8F;                     // type:STRUCT.STRUCTURE
	array<struct camFirstPersonShooterCameraMetadataSprintBreakOutSettings, 2>     _0x77E58DF3;                     // type:ARRAY.ATFIXEDARRAY
	struct _0x41D2B5EA                                                             _0x92CC5DDB;                     // type:STRUCT.STRUCTURE
	struct _0x1E493CEB                                                             _0x9622BC58;                     // type:STRUCT.STRUCTURE
	float                                                                          _0x8D423125;                     // type:FLOAT.0
	uint                                                                           _0xF3A3633C;                     // type:UINT.0
	uint                                                                           _0x2181643E;                     // type:UINT.0
};

struct camFirstPersonShooterCameraMetadataOrientationSpring
{
	vec2                             HeadingLimits;                   // type:VECTOR2.0
	vec2                             PitchLimits;                     // type:VECTOR2.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct camFirstPersonShooterCameraMetadataSprintBreakOutSettings
{
	float                            _0x2C2C1321;                     // type:FLOAT.0
	float                            _0x0533A9D1;                     // type:FLOAT.0
	float                            _0xF9C61BEE;                     // type:FLOAT.0
	float                            _0x55B90048;                     // type:FLOAT.0
	float                            _0x6CA93FC7;                     // type:FLOAT.0
	float                            _0x7FD98CCF;                     // type:FLOAT.0
};

struct camFollowCameraMetadata : camThirdPersonCameraMetadata
{
	string                                                     AttachParentInAirEnvelopeRef;    // type:STRING.ATNONFINALHASHSTRING
	string                                                     AttachParentUpwardSpeedScalingOnGroundEnvelopeRef; // type:STRING.ATNONFINALHASHSTRING
	string                                                     AttachParentUpwardSpeedScalingInAirEnvelopeRef; // type:STRING.ATNONFINALHASHSTRING
	string                                                     AimBehaviourEnvelopeRef;         // type:STRING.ATNONFINALHASHSTRING
	string                                                     WaterBobShakeRef;                // type:STRING.ATNONFINALHASHSTRING
	bool                                                       ShouldIgnoreAttachParentMovementForOrientation; // type:BOOL.0
	struct camFollowCameraMetadataPullAroundSettings           PullAroundSettings;              // type:STRUCT.STRUCTURE
	struct camFollowCameraMetadataPullAroundSettings           PullAroundSettingsForLookBehind; // type:STRUCT.STRUCTURE
	bool                                                       ShouldConsiderAttachParentLocalXYVelocityForPullAround; // type:BOOL.0
	bool                                                       ShouldConsiderAttachParentForwardSpeedForPullAround; // type:BOOL.0
	bool                                                       ShouldPullAroundToAttachParentFront; // type:BOOL.0
	bool                                                       ShouldPullAroundToBasicAttachParentMatrix; // type:BOOL.0
	bool                                                       ShouldPullAroundUsingSimpleSpringDamping; // type:BOOL.0
	float                                                      MinAttachParentApproachSpeedForPitchLock; // type:FLOAT.0
	bool                                                       ShouldLockHeading;               // type:BOOL.0
	float                                                      MaxMoveSpeedForFollowOrientation; // type:FLOAT.0
	float                                                      MaxLookAroundMoveSpeedMultiplier; // type:FLOAT.0
	vec2                                                       SpeedLimitsForVerticalMoveSpeedScaling; // type:VECTOR2.0
	float                                                      VerticalMoveSpeedScaling;        // type:FLOAT.0
	float                                                      VerticalMoveSpeedScalingAtMaxSpeed; // type:FLOAT.0
	float                                                      UpwardMoveSpeedScalingOnGround;  // type:FLOAT.0
	float                                                      UpwardMoveSpeedScalingInAir;     // type:FLOAT.0
	float                                                      MaxMoveOrientationSpeedDuringLookAround; // type:FLOAT.0
	struct camFollowCameraMetadataFollowOrientationConing      FollowOrientationConing;         // type:STRUCT.STRUCTURE
	struct camFollowCameraMetadataRollSettings                 RollSettings;                    // type:STRUCT.STRUCTURE
	struct camFollowCameraMetadataHighAltitudeZoomSettings     HighAltitudeZoomSettings;        // type:STRUCT.STRUCTURE
};

struct camFollowCameraMetadataFollowOrientationConing
{
	float                            MaxAngle;                        // type:FLOAT.0
	float                            AspectRatio;                     // type:FLOAT.0
	float                            HeadingOffset;                   // type:FLOAT.0
	float                            PitchOffset;                     // type:FLOAT.0
	float                            SmoothRate;                      // type:FLOAT.0
};

struct camFollowCameraMetadataHighAltitudeZoomSettings
{
	float                            MinAltitudeDelta;                // type:FLOAT.0
	float                            MaxAltitudeDelta;                // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
	float                            MaxBaseFovScaling;               // type:FLOAT.0
};

struct camFollowCameraMetadataPullAroundSettings
{
	bool                             ShouldBlendOutWhenAttachParentIsInAir; // type:BOOL.0
	bool                             ShouldBlendOutWhenAttachParentIsOnGround; // type:BOOL.0
	bool                             ShouldBlendWithAttachParentMatrixForRelativeOrbitBlend; // type:BOOL.0
	float                            HeadingPullAroundMinMoveSpeed;   // type:FLOAT.0
	float                            HeadingPullAroundMaxMoveSpeed;   // type:FLOAT.0
	float                            HeadingPullAroundSpeedAtMaxMoveSpeed; // type:FLOAT.0
	float                            HeadingPullAroundErrorScalingBlendLevel; // type:FLOAT.0
	float                            HeadingPullAroundSpringConstant; // type:FLOAT.0
	float                            HeadingPullAroundSpringDampingRatio; // type:FLOAT.0
	float                            PitchPullAroundMinMoveSpeed;     // type:FLOAT.0
	float                            PitchPullAroundMaxMoveSpeed;     // type:FLOAT.0
	float                            PitchPullAroundSpeedAtMaxMoveSpeed; // type:FLOAT.0
	float                            PitchPullAroundErrorScalingBlendLevel; // type:FLOAT.0
	float                            PitchPullAroundSpringConstant;   // type:FLOAT.0
	float                            PitchPullAroundSpringDampingRatio; // type:FLOAT.0
};

struct camFollowCameraMetadataRollSettings
{
	bool                             ShouldApplyRoll;                 // type:BOOL.0
	float                            RollSpringConstant;              // type:FLOAT.0
	float                            RollSpringDampRatio;             // type:FLOAT.0
	float                            MinForwardSpeed;                 // type:FLOAT.0
	float                            MaxForwardSpeed;                 // type:FLOAT.0
	float                            RollAngleScale;                  // type:FLOAT.0
	float                            MaxRoll;                         // type:FLOAT.0
};

struct camFollowPedCameraMetadata : camFollowCameraMetadata
{
	bool                                                                      _0x705C17B8;                     // type:BOOL.0
	bool                                                                      _0x4852DBE0;                     // type:BOOL.0
	float                                                                     _0x1C3CB00F;                     // type:FLOAT.0
	string                                                                    _0x9020F726;                     // type:STRING.ATNONFINALHASHSTRING
	struct camFollowPedCameraMetadataAssistedMovementAlignment                _0x8A7547E4;                     // type:STRUCT.STRUCTURE
	struct camFollowPedCameraMetadataRappellingAlignment                      RappellingAlignment;             // type:STRUCT.STRUCTURE
	bool                                                                      _0x0CDE1435;                     // type:BOOL.0
	struct camFollowCameraMetadataPullAroundSettings                          _0xF8068978;                     // type:STRUCT.STRUCTURE
	bool                                                                      _0xD6247E3F;                     // type:BOOL.0
	vec2                                                                      _0xE8360A4D;                     // type:VECTOR2.0
	struct camFollowPedCameraMetadataOrbitPitchLimitsForOverheadCollision     _0x8BC35BD9;                     // type:STRUCT.STRUCTURE
	float                                                                     VehicleEntryExitPitchLevelSmoothRate; // type:FLOAT.0
	struct camFollowPedCameraMetadataRunningShakeSettings                     _0x654D84A9;                     // type:STRUCT.STRUCTURE
	struct camFollowPedCameraMetadataSwimmingShakeSettings                    _0x1DB79BBD;                     // type:STRUCT.STRUCTURE
	struct camFollowPedCameraMetadataDivingShakeSettings                      _0x8E320EF5;                     // type:STRUCT.STRUCTURE
	struct camFollowPedCameraMetadataHighFallShakeSettings                    _0x0824E384;                     // type:STRUCT.STRUCTURE
};

struct camFollowPedCameraMetadataAssistedMovementAlignment
{
	bool                                                 ShouldAlign;                     // type:BOOL.0
	string                                               _0x978184B8;                     // type:STRING.ATNONFINALHASHSTRING
	float                                                _0xBB64228B;                     // type:FLOAT.0
	float                                                _0x9B1C1553;                     // type:FLOAT.0
	struct camFollowCameraMetadataPullAroundSettings     PullAroundSettings;              // type:STRUCT.STRUCTURE
};

struct camFollowPedCameraMetadataDivingShakeSettings
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MinHeight;                       // type:FLOAT.0
	float                            MaxHeight;                       // type:FLOAT.0
	float                            MinAmplitude;                    // type:FLOAT.0
	float                            MaxAmplitude;                    // type:FLOAT.0
};

struct camFollowPedCameraMetadataHighFallShakeSettings
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	string                           _0x6669F3F3;                     // type:STRING.ATNONFINALHASHSTRING
	float                            MinSpeed;                        // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
	float                            MaxAmplitude;                    // type:FLOAT.0
};

struct camFollowPedCameraMetadataOrbitPitchLimitsForOverheadCollision
{
	vec2                             _0x6811FA9A;                     // type:VECTOR2.0
	float                            _0x0F440A09;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct camFollowPedCameraMetadataRappellingAlignment
{
	bool                             ShouldAlign;                     // type:BOOL.0
	float                            _0x0F914BA7;                     // type:FLOAT.0
};

struct camFollowPedCameraMetadataRunningShakeSettings
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MinAmplitude;                    // type:FLOAT.0
	float                            MaxAmplitude;                    // type:FLOAT.0
	float                            _0x1D476472;                     // type:FLOAT.0
	float                            _0xA0FDCCF7;                     // type:FLOAT.0
};

struct camFollowPedCameraMetadataSwimmingShakeSettings
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MinAmplitude;                    // type:FLOAT.0
	float                            MaxAmplitude;                    // type:FLOAT.0
	float                            _0x1D476472;                     // type:FLOAT.0
	float                            _0x5610E4A3;                     // type:FLOAT.0
	float                            _0x782074AF;                     // type:FLOAT.0
};

struct camFollowVehicleCameraMetadata : camFollowCameraMetadata
{
	struct camFollowVehicleCameraMetadataHandBrakeSwingSettings      HandBrakeSwingSettings;          // type:STRUCT.STRUCTURE
	struct camFollowVehicleCameraMetadataHighSpeedZoomSettings       HighSpeedZoomSettings;           // type:STRUCT.STRUCTURE
	struct camFollowVehicleCameraMetadataHighSpeedShakeSettings      HighSpeedShakeSettings;          // type:STRUCT.STRUCTURE
	struct camFollowVehicleCameraMetadataWaterEntryShakeSettings     WaterEntryShakeSettings;         // type:STRUCT.STRUCTURE
	float                                                            VehicleEntryExitPitchLevelSmoothRate; // type:FLOAT.0
	string                                                           ThirdPersonVehicleAimCameraRef;  // type:STRING.ATNONFINALHASHSTRING
};

struct camFollowVehicleCameraMetadataHandBrakeSwingSettings
{
	string                           HandBrakeInputEnvelopeRef;       // type:STRING.ATNONFINALHASHSTRING
	float                            SpringConstant;                  // type:FLOAT.0
	float                            MinLateralSkidSpeed;             // type:FLOAT.0
	float                            MaxLateralSkidSpeed;             // type:FLOAT.0
	float                            SwingSpeedAtMaxSkidSpeed;        // type:FLOAT.0
};

struct camFollowVehicleCameraMetadataHighSpeedShakeSettings
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MinForwardSpeed;                 // type:FLOAT.0
	float                            MaxForwardSpeed;                 // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
};

struct camFollowVehicleCameraMetadataHighSpeedZoomSettings
{
	float                            MinForwardSpeed;                 // type:FLOAT.0
	float                            MaxForwardSpeed;                 // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            MaxBaseFovScaling;               // type:FLOAT.0
	float                            CutsceneBlendSpringConstant;     // type:FLOAT.0
	float                            CutsceneBlendSpringDampingRatio; // type:FLOAT.0
};

struct camFollowVehicleCameraMetadataWaterEntryShakeSettings
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	uint                             MaxShakeInstances;               // type:UINT.0
	vec2                             DownwardSpeedLimits;             // type:VECTOR2.0
	vec2                             AmplitudeLimits;                 // type:VECTOR2.0
};

struct camFreeCameraMetadata : camBaseCameraMetadata
{
	vec3                             StartPosition;                   // type:VECTOR3.0
	float                            ForwardAcceleration;             // type:FLOAT.0
	float                            StrafeAcceleration;              // type:FLOAT.0
	float                            VerticalAcceleration;            // type:FLOAT.0
	float                            _0x19ABF108;                     // type:FLOAT.0
	float                            HeadingAcceleration;             // type:FLOAT.0
	float                            PitchAcceleration;               // type:FLOAT.0
	float                            RollAcceleration;                // type:FLOAT.0
	float                            _0x3B1D1624;                     // type:FLOAT.0
	float                            FovAcceleration;                 // type:FLOAT.0
	float                            _0x87AFAFDB;                     // type:FLOAT.0
	float                            MaxPitch;                        // type:FLOAT.0
	float                            _0x5246DCF8;                     // type:FLOAT.0
	float                            _0xC508AEF8;                     // type:FLOAT.0
	uint                             _0xD8742DE7;                     // type:UINT.0
};

struct camGameplayDirectorMetadata : camBaseDirectorMetadata
{
	string                                                             _0x7C8E2444;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0x1EF9BFC3;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xBFE616F6;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0x5592859D;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xF0FD0586;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xCDEBE971;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xF8EB3D9E;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0x96D72AA1;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0x8CF9AB10;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             ThirdPersonVehicleAimCameraRef;  // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0x78212FDB;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xE62794FF;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0x899777A5;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0x0067406C;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xB377AC1F;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xE7808C54;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xA41A5B1C;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                             _0xF36F4969;                     // type:STRING.ATNONFINALHASHSTRING
	array<string>                                                      _0xF886B8E8;                     // type:ARRAY.ATARRAY
	array<struct _0x08D9C6AB>                                          _0xF76DF19F;                     // type:ARRAY.ATARRAY
	float                                                              _0x50962736;                     // type:FLOAT.0
	float                                                              _0x045EFCB1;                     // type:FLOAT.0
	float                                                              _0x5456F923;                     // type:FLOAT.0
	float                                                              _0xD515FB36;                     // type:FLOAT.0
	float                                                              _0x3B246C70;                     // type:FLOAT.0
	float                                                              _0x800C09AD;                     // type:FLOAT.0
	struct _0x725734CB                                                 _0x2346D48F;                     // type:STRUCT.STRUCTURE
	uint                                                               _0x012587F3;                     // type:UINT.0
	float                                                              _0xC98894ED;                     // type:FLOAT.0
	float                                                              _0xA05A6725;                     // type:FLOAT.0
	float                                                              _0xFEC1CA4A;                     // type:FLOAT.0
	uint                                                               _0xC88A1130;                     // type:UINT.0
	uint                                                               _0xF27D3125;                     // type:UINT.0
	uint                                                               _0x603D96E3;                     // type:UINT.0
	float                                                              _0x21BC2D3F;                     // type:FLOAT.0
	float                                                              _0xEBE74228;                     // type:FLOAT.0
	uint                                                               _0xBD8FF46E;                     // type:UINT.0
	uint                                                               _0xF2E6C974;                     // type:UINT.0
	uint                                                               _0x3720ADC5;                     // type:UINT.0
	uint                                                               _0xE7DDB479;                     // type:UINT.0
	array<struct camGameplayDirectorMetadataVehicleCustomSettings>     VehicleCustomSettingsList;       // type:ARRAY.ATARRAY
	uint                                                               _0xF35C64E7;                     // type:UINT.0
	float                                                              _0xD42FDA76;                     // type:FLOAT.0
	float                                                              _0x0F7604F3;                     // type:FLOAT.0
	float                                                              _0x5AD573AB;                     // type:FLOAT.0
	uint                                                               _0xDCCA3EC7;                     // type:UINT.0
	uint                                                               _0x824A4BFD;                     // type:UINT.0
	uint                                                               _0xA4E77069;                     // type:UINT.0
	uint                                                               _0xF3B3F821;                     // type:UINT.0
	uint                                                               _0xAF490080;                     // type:UINT.0
	uint                                                               _0x3732BFAE;                     // type:UINT.0
	uint                                                               _0x2E515A61;                     // type:UINT.0
	uint                                                               _0xB8B3255B;                     // type:UINT.0
	uint                                                               _0x478C06E0;                     // type:UINT.0
	uint                                                               _0xF2AC4070;                     // type:UINT.0
	uint                                                               _0xF4368926;                     // type:UINT.0
	uint                                                               _0xF9467FA5;                     // type:UINT.0
	uint                                                               _0x0DC5264E;                     // type:UINT.0
	uint                                                               _0x865E8FC3;                     // type:UINT.0
	float                                                              _0xEC1DAC4E;                     // type:FLOAT.0
	float                                                              _0x5F308511;                     // type:FLOAT.0
	bool                                                               _0x882B05AA;                     // type:BOOL.0
	float                                                              _0xFB60C0F9;                     // type:FLOAT.0
	string                                                             _0x25F07F8E;                     // type:STRING.ATNONFINALHASHSTRING
	uint                                                               _0x3AAC6F2D;                     // type:UINT.0
	uint                                                               _0x90E51E88;                     // type:UINT.0
	vec2                                                               _0x46F68A6D;                     // type:VECTOR2.0
	vec2                                                               _0xBE5D75CC;                     // type:VECTOR2.0
	vec2                                                               _0xD0726624;                     // type:VECTOR2.0
	vec2                                                               _0x0C1326BB;                     // type:VECTOR2.0
	vec2                                                               _0x5F6058FF;                     // type:VECTOR2.0
	vec2                                                               _0x12876A11;                     // type:VECTOR2.0
	float                                                              _0x36423BD7;                     // type:FLOAT.0
	float                                                              _0x5A7F0041;                     // type:FLOAT.0
	float                                                              _0xABBCCCCD;                     // type:FLOAT.0
	float                                                              _0x4C79B9E0;                     // type:FLOAT.0
	float                                                              _0xF9B15D05;                     // type:FLOAT.0
	uint                                                               _0x3C6A1311;                     // type:UINT.0
	uint                                                               _0x591A06F6;                     // type:UINT.0
	uint                                                               _0x0198BE17;                     // type:UINT.0
	uint                                                               _0x805ACCD9;                     // type:UINT.0
	string                                                             _0xDA700A8D;                     // type:STRING.ATNONFINALHASHSTRING
	float                                                              _0x6F49F39C;                     // type:FLOAT.0
	float                                                              _0x1963BF62;                     // type:FLOAT.0
	float                                                              _0x7BF3FAE1;                     // type:FLOAT.0
	float                                                              _0xD06070D2;                     // type:FLOAT.0
	float                                                              _0xC31FA4B9;                     // type:FLOAT.0
	float                                                              _0xE613D849;                     // type:FLOAT.0
	float                                                              _0x8362E561;                     // type:FLOAT.0
	float                                                              _0x06A61062;                     // type:FLOAT.0
	float                                                              _0x8A68DD0B;                     // type:FLOAT.0
	float                                                              _0x3508F223;                     // type:FLOAT.0
	float                                                              _0x18D34140;                     // type:FLOAT.0
	float                                                              _0x799EC202;                     // type:FLOAT.0
	float                                                              _0x375A576E;                     // type:FLOAT.0
	float                                                              _0x16524DC1;                     // type:FLOAT.0
	uint                                                               _0xCE952019;                     // type:UINT.0
	uint                                                               _0xCA1A28DB;                     // type:UINT.0
	string                                                             _0x903C56C9;                     // type:STRING.ATNONFINALHASHSTRING
	vec2                                                               _0x83F07483;                     // type:VECTOR2.0
	bool                                                               _0x37FD4805;                     // type:BOOL.0
	struct camGameplayDirectorMetadataExplosionShakeSettings           _0x31B735C8;                     // type:STRUCT.STRUCTURE
	struct _0x7C2C0742                                                 _0x37C6CCE3;                     // type:STRUCT.STRUCTURE
	struct _0x3A7DEAD3                                                 _0x3D90279A;                     // type:STRUCT.STRUCTURE
	array<string>                                                      _0x386CEA69;                     // type:ARRAY.ATARRAY
};

struct camGameplayDirectorMetadataExplosionShakeSettings
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	vec2                             DistanceLimits;                  // type:VECTOR2.0
	uint                             MaxInstances;                    // type:UINT.0
	uint                             RumbleDuration;                  // type:UINT.0
	uint                             _0xB6FF7D13;                     // type:UINT.0
	float                            _0x8B566755;                     // type:FLOAT.0
	float                            _0x309ECB41;                     // type:FLOAT.0
	float                            _0x7652927F;                     // type:FLOAT.0
	float                            _0xEABE7731;                     // type:FLOAT.0
	float                            _0x38B2CBFD;                     // type:FLOAT.0
};

struct camGameplayDirectorMetadataVehicleCustomSettings
{
	string                           ModelName;                       // type:STRING.ATNONFINALHASHSTRING
	string                           SettingsRef;                     // type:STRING.ATNONFINALHASHSTRING
};

struct camLookAheadHelperMetadata : camBaseObjectMetadata
{
	float                            _0x2D9DA92D;                     // type:FLOAT.0
	float                            _0x3AE55F74;                     // type:FLOAT.0
	float                            MinSpeed;                        // type:FLOAT.0
	float                            _0xEA540D09;                     // type:FLOAT.0
	float                            _0x60CACE86;                     // type:FLOAT.0
	float                            MaxForwardSpeed;                 // type:FLOAT.0
	bool                             _0xE0873C02;                     // type:BOOL.0
	float                            _0x053FDA21;                     // type:FLOAT.0
	float                            _0x6E16C1DA;                     // type:FLOAT.0
	float                            MaxReverseSpeed;                 // type:FLOAT.0
	float                            _0xC88307B8;                     // type:FLOAT.0
	float                            _0x9633CD4C;                     // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
	float                            SpringDampingRatio;              // type:FLOAT.0
};

struct camLookAtDampingHelperMetadata : camBaseObjectMetadata
{
	float                            _0xD336CF47;                     // type:FLOAT.0
	float                            _0xA24639E6;                     // type:FLOAT.0
	float                            _0xB75C5830;                     // type:FLOAT.0
	float                            _0xCF8A46C2;                     // type:FLOAT.0
	float                            _0x65A1F372;                     // type:FLOAT.0
	float                            _0x256A3AFF;                     // type:FLOAT.0
	float                            _0xBBEC5101;                     // type:FLOAT.0
	float                            _0xE74C8B98;                     // type:FLOAT.0
};

struct camMarketingAToBCameraMetadata : camMarketingFreeCameraMetadata
{
	string                           _0x3E47BC53;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x445EDD55;                     // type:UINT.0
	uint                             _0x6CCE75C8;                     // type:UINT.0
};

struct camMarketingDirectorMetadata : camBaseDirectorMetadata
{
	array<struct camMarketingDirectorMetadataMode>     Modes;                           // type:ARRAY.ATARRAY
};

struct camMarketingDirectorMetadataMode
{
	string                           CameraRef;                       // type:STRING.ATNONFINALHASHSTRING
	string                           TextLabel;                       // type:STRING.MEMBER
};

struct camMarketingFreeCameraMetadata : camBaseCameraMetadata
{
	struct camMarketingFreeCameraMetadataInputResponse     _0xE2FA2782;                     // type:STRUCT.STRUCTURE
	struct camMarketingFreeCameraMetadataInputResponse     _0xAE5DA700;                     // type:STRUCT.STRUCTURE
	struct camMarketingFreeCameraMetadataInputResponse     _0x01D9F496;                     // type:STRUCT.STRUCTURE
	float                                                  _0xC46B0D38;                     // type:FLOAT.0
	float                                                  _0x5ED51D13;                     // type:FLOAT.0
	float                                                  _0x317652A1;                     // type:FLOAT.0
	struct camMarketingFreeCameraMetadataInputResponse     _0xBD610410;                     // type:STRUCT.STRUCTURE
	float                                                  _0xBB4263C2;                     // type:FLOAT.0
	float                                                  _0xF7CB88B6;                     // type:FLOAT.0
	float                                                  _0x76926E96;                     // type:FLOAT.0
	float                                                  MaxPitch;                        // type:FLOAT.0
	float                                                  MaxRoll;                         // type:FLOAT.0
};

struct camMarketingFreeCameraMetadataInputResponse
{
	float                            _0xE5D0F39F;                     // type:FLOAT.0
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            Acceleration;                    // type:FLOAT.0
	float                            Deceleration;                    // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct camMarketingMountedCameraMetadata : camMarketingFreeCameraMetadata
{
	float                            _0x8996E7F1;                     // type:FLOAT.0
	string                           SpringMountRef;                  // type:STRING.ATNONFINALHASHSTRING
};

struct camMarketingOrbitCameraMetadata : camMarketingFreeCameraMetadata
{
	float                            _0x8996E7F1;                     // type:FLOAT.0
	string                           SpringMountRef;                  // type:STRING.ATNONFINALHASHSTRING
};

struct camMarketingStickyCameraMetadata : camMarketingFreeCameraMetadata
{
};

struct camMetadataStore
{
	array<struct camBaseObjectMetadata>       MetadataList;                    // type:ARRAY.ATARRAY
	array<struct camBaseDirectorMetadata>     DirectorList;                    // type:ARRAY.ATARRAY
	struct _0x57D1C79E                        _0x6D444AF9;                     // type:STRUCT.POINTER
	struct _0x43DA8759                        _0x037804B8;                     // type:STRUCT.POINTER
	struct _0xAC0B3335                        _0x7495FA23;                     // type:STRUCT.POINTER
	struct _0x45F2C47B                        _0xD7A70D68;                     // type:STRUCT.POINTER
	struct _0x6F763B16                        _0x1FAF203A;                     // type:STRUCT.POINTER
	struct _0xB67D1B2D                        _0xE4C57AB3;                     // type:STRUCT.POINTER
};

struct camMotionBlurSettingsMetadata : camBaseObjectMetadata
{
	float                            MovementMotionBlurMinSpeed;      // type:FLOAT.0
	float                            MovementMotionBlurMaxSpeed;      // type:FLOAT.0
	float                            MovementMotionBlurMaxStrength;   // type:FLOAT.0
	float                            DamageMotionBlurMinDamage;       // type:FLOAT.0
	float                            DamageMotionBlurMaxDamage;       // type:FLOAT.0
	float                            DamageMotionBlurMaxStrength;     // type:FLOAT.0
	uint                             DamageMotionBlurDuration;        // type:UINT.0
	float                            _0xB94FE609;                     // type:FLOAT.0
	float                            _0xA19AADBE;                     // type:FLOAT.0
	float                            _0x393CD5B4;                     // type:FLOAT.0
	uint                             _0xDC25FE5E;                     // type:UINT.0
};

struct camNearClipScannerMetadata : camBaseObjectMetadata
{
	float                            _0x1D748F0C;                     // type:FLOAT.0
	float                            _0x66261E03;                     // type:FLOAT.0
	float                            _0xB335DC3D;                     // type:FLOAT.0
	float                            _0x598EE633;                     // type:FLOAT.0
	float                            _0xE45FE2ED;                     // type:FLOAT.0
	float                            _0x41C690C4;                     // type:FLOAT.0
	float                            _0x261E29BF;                     // type:FLOAT.0
	float                            _0x741BB44F;                     // type:FLOAT.0
	float                            _0x46256223;                     // type:FLOAT.0
	float                            _0x1F8D27F0;                     // type:FLOAT.0
	float                            _0x5582C132;                     // type:FLOAT.0
	float                            _0xBA9330A7;                     // type:FLOAT.0
	float                            _0x5AEA2A24;                     // type:FLOAT.0
	float                            _0x122872D7;                     // type:FLOAT.0
	float                            _0x93A53AE7;                     // type:FLOAT.0
};

struct camOscillatorMetadata : camBaseObjectMetadata
{
	enum _0x35C3D8A5                 Waveform;                        // type:ENUM.32BIT
	float                            Amplitude;                       // type:FLOAT.0
	float                            Frequency;                       // type:FLOAT.0
	float                            Phase;                           // type:FLOAT.0
	float                            _0xB1476162;                     // type:FLOAT.0
	float                            Decay;                           // type:FLOAT.0
};

struct camReplayBaseCameraMetadata : camBaseCameraMetadata
{
	float                            MaxCollisionTestRadius;          // type:FLOAT.0
};

struct camReplayBaseCameraMetadataCollisionSettings
{
	float                            _0x80E3A069;                     // type:FLOAT.0
	float                            WaterHeightSmoothRate;           // type:FLOAT.0
	float                            MinSafeRadiusReductionWithinPedMoverCapsule; // type:FLOAT.0
	float                            _0x26F8444A;                     // type:FLOAT.0
	float                            _0xC0A5061B;                     // type:FLOAT.0
	float                            _0x30DB73AE;                     // type:FLOAT.0
	float                            _0x07477461;                     // type:FLOAT.0
	float                            _0x2140984E;                     // type:FLOAT.0
	bool                             ShouldPushBeyondAttachParentIfClipping; // type:BOOL.0
};

struct camReplayBaseCameraMetadataInputResponse
{
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            MaxAcceleration;                 // type:FLOAT.0
	float                            MaxDeceleration;                 // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct camReplayDirectorMetadata : camBaseDirectorMetadata
{
	string                           _0xA238D92D;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x7F1E1D7A;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x1D4FC4E5;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9DDB1627;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xF2BA2F1E;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x279B4142;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xE8AA3F4C;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0xE1D97A3D;                     // type:FLOAT.0
	float                            _0x8A4472C6;                     // type:FLOAT.0
	float                            _0x5F22B4E0;                     // type:FLOAT.0
	vec3                             _0x49D6919E;                     // type:VECTOR3.0
	string                           _0x512F79CB;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x9D6027D6;                     // type:FLOAT.0
	float                            _0xB6EC5B3A;                     // type:FLOAT.0
	float                            _0x04D46045;                     // type:FLOAT.0
	string                           _0x0D924913;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x762FFEB6;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x348D2550;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x9AF628B1;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0xBF20604C;                     // type:STRING.ATNONFINALHASHSTRING
	float                            _0x64BD9234;                     // type:FLOAT.0
	float                            _0xF8A246EA;                     // type:FLOAT.0
	float                            _0xC9C51D26;                     // type:FLOAT.0
	float                            _0x38A98A64;                     // type:FLOAT.0
	float                            _0x37289BF9;                     // type:FLOAT.0
	float                            _0xE987F24F;                     // type:FLOAT.0
	float                            _0x523327D3;                     // type:FLOAT.0
	float                            _0x85DA7FCC;                     // type:FLOAT.0
};

struct camReplayFreeCameraMetadata : camReplayBaseCameraMetadata
{
	float                                                   NearClip;                        // type:FLOAT.0
	struct camReplayBaseCameraMetadataInputResponse         _0x452BD6D8;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0xA7063B94;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0x88A3F3B2;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0x01D9F496;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0xBD610410;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0x461B3A1F;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0xF105DA6B;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0x8E91F033;                     // type:STRUCT.STRUCTURE
	string                                                  _0xC8469340;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                  _0x0F34F892;                     // type:STRING.ATNONFINALHASHSTRING
	string                                                  _0xD86CF6FD;                     // type:STRING.ATNONFINALHASHSTRING
	float                                                   MaxPitch;                        // type:FLOAT.0
	float                                                   MinFov;                          // type:FLOAT.0
	float                                                   MaxFov;                          // type:FLOAT.0
	float                                                   DefaultFov;                      // type:FLOAT.0
	float                                                   CapsuleRadius;                   // type:FLOAT.0
	float                                                   _0x20071E14;                     // type:FLOAT.0
	float                                                   _0x33E6AEC6;                     // type:FLOAT.0
	float                                                   _0x3FB3AD63;                     // type:FLOAT.0
	float                                                   _0xD853A54B;                     // type:FLOAT.0
	float                                                   _0x1C976399;                     // type:FLOAT.0
	vec3                                                    _0x7BD4BCC3;                     // type:VECTOR3.0
	struct camReplayBaseCameraMetadataCollisionSettings     CollisionSettings;               // type:STRUCT.STRUCTURE
	float                                                   _0xF52AA671;                     // type:FLOAT.0
	float                                                   _0x7D3C2565;                     // type:FLOAT.0
	float                                                   _0x7CA00B1C;                     // type:FLOAT.0
	float                                                   _0x0689BD60;                     // type:FLOAT.0
	float                                                   _0x195D6CF3;                     // type:FLOAT.0
	uint                                                    _0x88393FFE;                     // type:UINT.0
	float                                                   _0xBDEBA43D;                     // type:FLOAT.0
	float                                                   _0x33331795;                     // type:FLOAT.0
	float                                                   _0x0A0538C3;                     // type:FLOAT.0
	float                                                   _0x869080EA;                     // type:FLOAT.0
	float                                                   _0xF590582B;                     // type:FLOAT.0
	uint                                                    _0xB0FA92DE;                     // type:UINT.0
	uint                                                    _0xCA4F4B14;                     // type:UINT.0
	uint                                                    _0xA12D3306;                     // type:UINT.0
	uint                                                    _0x64033BDA;                     // type:UINT.0
	uint                                                    _0x14807A68;                     // type:UINT.0
	uint                                                    _0x28A5F467;                     // type:UINT.0
	uint                                                    _0xA5DCF74D;                     // type:UINT.0
};

struct camReplayPresetCameraMetadata : camReplayBaseCameraMetadata
{
	vec3                                                    _0xC14EA605;                     // type:VECTOR3.0
	vec3                                                    RelativeLookAtPosition;          // type:VECTOR3.0
	struct camReplayBaseCameraMetadataInputResponse         _0xE6A429B3;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0x01D9F496;                     // type:STRUCT.STRUCTURE
	struct camReplayBaseCameraMetadataInputResponse         _0xBD610410;                     // type:STRUCT.STRUCTURE
	float                                                   MinFov;                          // type:FLOAT.0
	float                                                   MaxFov;                          // type:FLOAT.0
	float                                                   DefaultFov;                      // type:FLOAT.0
	float                                                   _0x2E5639D7;                     // type:FLOAT.0
	float                                                   _0x5CDAAC76;                     // type:FLOAT.0
	bool                                                    _0x40F0113C;                     // type:BOOL.0
	bool                                                    _0x93D7DDDE;                     // type:BOOL.0
	struct camReplayBaseCameraMetadataCollisionSettings     CollisionSettings;               // type:STRUCT.STRUCTURE
	float                                                   _0x20BABD9B;                     // type:FLOAT.0
	uint                                                    _0xCA4F4B14;                     // type:UINT.0
	uint                                                    _0xA12D3306;                     // type:UINT.0
	uint                                                    _0x64033BDA;                     // type:UINT.0
	uint                                                    _0x14807A68;                     // type:UINT.0
	uint                                                    _0x28A5F467;                     // type:UINT.0
	uint                                                    _0xA5DCF74D;                     // type:UINT.0
};

struct camReplayRecordedCameraMetadata : camReplayBaseCameraMetadata
{
};

struct camRoundedSplineCameraMetadata : camBaseSplineCameraMetadata
{
};

struct camScriptDirectorMetadata : camBaseDirectorMetadata
{
	string                           _0xC5354270;                     // type:STRING.ATNONFINALHASHSTRING
	string                           _0x3E47BC53;                     // type:STRING.ATNONFINALHASHSTRING
	uint                             _0x2456ADD8;                     // type:UINT.0
};

struct camScriptedCameraMetadata : camBaseCameraMetadata
{
	float                            DefaultFov;                      // type:FLOAT.0
};

struct camScriptedFlyCameraMetadata : camScriptedCameraMetadata
{
	struct camScriptedFlyCameraMetadataInputResponse     _0x452BD6D8;                     // type:STRUCT.STRUCTURE
	struct camScriptedFlyCameraMetadataInputResponse     _0xA7063B94;                     // type:STRUCT.STRUCTURE
	float                                                DefaultPitch;                    // type:FLOAT.0
	float                                                _0x46256223;                     // type:FLOAT.0
	float                                                _0xA31B32AC;                     // type:FLOAT.0
	float                                                MaxHeight;                       // type:FLOAT.0
	float                                                CapsuleRadius;                   // type:FLOAT.0
	float                                                MinHeightAboveWater;             // type:FLOAT.0
};

struct camScriptedFlyCameraMetadataInputResponse
{
	float                            InputMagPowerFactor;             // type:FLOAT.0
	float                            MaxAcceleration;                 // type:FLOAT.0
	float                            MaxDeceleration;                 // type:FLOAT.0
	float                            MaxSpeed;                        // type:FLOAT.0
};

struct camSeatSpecificCameras
{
	uint                             SeatIndex;                       // type:UINT.0
	string                           _0x4B302CA8;                     // type:STRING.ATNONFINALHASHSTRING
};

struct camShakeMetadata : camBaseShakeMetadata
{
	array<struct camShakeMetadataFrameComponent>     FrameComponents;                 // type:ARRAY.ATARRAY
	float                                            Vibration;                       // type:FLOAT.0
};

struct camShakeMetadataFrameComponent
{
	enum _0xFAB6F340                 Component;                       // type:ENUM.32BIT
	string                           _0xE67973FB;                     // type:STRING.ATNONFINALHASHSTRING
	string                           EnvelopeRef;                     // type:STRING.ATNONFINALHASHSTRING
};

struct camSmoothedSplineCameraMetadata : camRoundedSplineCameraMetadata
{
	int                              _0xE67EF8BF;                     // type:INT.0
};

struct camSpeedRelativeShakeSettingsMetadata
{
	string                           ShakeRef;                        // type:STRING.ATNONFINALHASHSTRING
	float                            MinForwardSpeed;                 // type:FLOAT.0
	float                            MaxForwardSpeed;                 // type:FLOAT.0
	float                            SpringConstant;                  // type:FLOAT.0
};

struct camSpringMountMetadata : camBaseObjectMetadata
{
	vec3                             AccelerationLimit;               // type:VECTOR3.0
	vec3                             AccelerationForce;               // type:VECTOR3.0
	vec3                             SpringForce;                     // type:VECTOR3.0
	vec3                             DampeningForce;                  // type:VECTOR3.0
};

struct camThirdPersonAimCameraMetadata : camThirdPersonCameraMetadata
{
	string                           LockOnEnvelopeRef;               // type:STRING.ATNONFINALHASHSTRING
	bool                             ShouldDisplayReticule;           // type:BOOL.0
	bool                             ShouldDisplayReticuleDuringInterpolation; // type:BOOL.0
	bool                             ShouldAllowInterpolationSourceCameraToPersistReticule; // type:BOOL.0
	bool                             ShouldApplyWeaponFov;            // type:BOOL.0
	bool                             ShouldUseLockOnAiming;           // type:BOOL.0
	bool                             ShouldLockOnToTargetEntityPosition; // type:BOOL.0
	bool                             ShouldValidateLockOnTargetPosition; // type:BOOL.0
	float                            RecoilShakeAmplitudeScaling;     // type:FLOAT.0
	float                            MinDistanceForLockOn;            // type:FLOAT.0
	float                            _0x56010809;                     // type:FLOAT.0
	float                            _0xD18BAFC0;                     // type:FLOAT.0
	float                            MinDistanceForFineAimScaling;    // type:FLOAT.0
	float                            MaxDistanceForFineAimScaling;    // type:FLOAT.0
	float                            _0xECF1E113;                     // type:FLOAT.0
	float                            MaxAngleDeltaForLockOnSwitchBlendScaling; // type:FLOAT.0
	uint                             MinBlendDurationForInitialLockOn; // type:UINT.0
	uint                             MaxBlendDurationForInitialLockOn; // type:UINT.0
	uint                             MinBlendDurationForLockOnSwitch; // type:UINT.0
	uint                             MaxBlendDurationForLockOnSwitch; // type:UINT.0
	uint                             _0x3A5C0E06;                     // type:UINT.0
	float                            FineAimBlendSpringConstant;      // type:FLOAT.0
	float                            FineAimBlendSpringDampingRatio;  // type:FLOAT.0
	float                            _0x7C6E0426;                     // type:FLOAT.0
	float                            WeaponZoomFactorSpringConstant;  // type:FLOAT.0
	float                            WeaponZoomFactorSpringDampingRatio; // type:FLOAT.0
	bool                             ShouldFocusOnLockOnTarget;       // type:BOOL.0
	float                            FocusParentToTargetBlendLevel;   // type:FLOAT.0
	float                            SecondaryFocusParentToTargetBlendLevel; // type:FLOAT.0
	float                            MinFocusToSecondaryFocusDistance; // type:FLOAT.0
	vec2                             _0x32C5502C;                     // type:VECTOR2.0
};

struct camThirdPersonCameraMetadata : camBaseCameraMetadata
{
	array<string>                                                    Modifiers;                       // type:ARRAY.ATARRAY
	enum _0xF945C864                                                 Context;                         // type:ENUM.32BIT
	string                                                           BaseAttachVelocityToIgnoreEnvelopeRef; // type:STRING.ATNONFINALHASHSTRING
	float                                                            BaseFov;                         // type:FLOAT.0
	float                                                            BaseNearClip;                    // type:FLOAT.0
	bool                                                             ShouldOrbitRelativeToAttachParentOrientation; // type:BOOL.0
	bool                                                             _0xD9E5DC22;                     // type:BOOL.0
	bool                                                             ShouldPersistOrbitOrientationRelativeToAttachParent; // type:BOOL.0
	float                                                            AttachParentMatrixForRelativeOrbitSpringConstant; // type:FLOAT.0
	float                                                            AttachParentMatrixForRelativeOrbitSpringDampingRatio; // type:FLOAT.0
	float                                                            MaxAttachParentSubmergedLevelToApplyFullAttachParentMatrixForRelativeOrbit; // type:FLOAT.0
	float                                                            _0x2E37AF7B;                     // type:FLOAT.0
	float                                                            MinAircraftGroundSpeedToApplyFullAttachParentMatrixForRelativeOrbit; // type:FLOAT.0
	float                                                            MinAircraftContactSpeedToApplyFullAttachParentMatrixForRelativeOrbit; // type:FLOAT.0
	uint                                                             MinHoldTimeToBlockFullAttachParentMatrixForRelativeOrbit; // type:UINT.0
	float                                                            MaxAttachParentSpeedToClonePitchFromCinematicMountedCameras; // type:FLOAT.0
	float                                                            _0x64CFE2B0;                     // type:FLOAT.0
	float                                                            _0xA4E6A59D;                     // type:FLOAT.0
	bool                                                             ShouldUseCustomFramingInTightSpace; // type:BOOL.0
	float                                                            _0x62DA66B4;                     // type:FLOAT.0
	float                                                            _0x91B22B1E;                     // type:FLOAT.0
	float                                                            _0xE9382891;                     // type:FLOAT.0
	float                                                            _0x8C4A80E3;                     // type:FLOAT.0
	float                                                            TightSpaceSpringDampingRatio;    // type:FLOAT.0
	string                                                           DofSettingsInTightSpace;         // type:STRING.ATNONFINALHASHSTRING
	bool                                                             ShouldAttachToParentCentreOfGravity; // type:BOOL.0
	bool                                                             ShouldUseDynamicCentreOfGravity; // type:BOOL.0
	bool                                                             ShouldIgnoreVelocityOfAttachParentAttachEntity; // type:BOOL.0
	bool                                                             _0x8AC7CD09;                     // type:BOOL.0
	float                                                            _0x95162444;                     // type:FLOAT.0
	struct camThirdPersonCameraMetadataCustomBoundingBoxSettings     CustomBoundingBoxSettings;       // type:STRUCT.STRUCTURE
	bool                                                             ShouldApplyAttachPedPelvisOffset; // type:BOOL.0
	float                                                            AttachPedPelvisOffsetSpringConstant; // type:FLOAT.0
	float                                                            AttachPedPelvisOffsetSpringDampingRatio; // type:FLOAT.0
	struct camThirdPersonCameraMetadataBasePivotPosition             BasePivotPosition;               // type:STRUCT.STRUCTURE
	struct camThirdPersonCameraMetadataPivotPosition                 PivotPosition;                   // type:STRUCT.STRUCTURE
	struct _0x7F493AC2                                               PivotOverBoundingBoxSettings;    // type:STRUCT.STRUCTURE
	float                                                            ScreenRatioForMinFootRoom;       // type:FLOAT.0
	float                                                            ScreenRatioForMaxFootRoom;       // type:FLOAT.0
	float                                                            ScreenRatioForMinFootRoomInTightSpace; // type:FLOAT.0
	float                                                            ScreenRatioForMaxFootRoomInTightSpace; // type:FLOAT.0
	float                                                            BasePivotHeightScalingForFootRoom; // type:FLOAT.0
	bool                                                             _0x998B795B;                     // type:BOOL.0
	bool                                                             ShouldIgnoreVerticalPivotOffsetForFootRoom; // type:BOOL.0
	float                                                            MinSafeOrbitDistanceScalingForExtensions; // type:FLOAT.0
	vec2                                                             CustomOrbitDistanceLimitsToForce; // type:VECTOR2.0
	float                                                            OrbitDistanceLimitSpringConstant; // type:FLOAT.0
	float                                                            OrbitDistanceLimitSpringDampingRatio; // type:FLOAT.0
	float                                                            IdealHeadingOffsetForLimiting;   // type:FLOAT.0
	vec2                                                             RelativeOrbitHeadingLimits;      // type:VECTOR2.0
	vec2                                                             OrbitPitchLimits;                // type:VECTOR2.0
	float                                                            _0xA6C948D1;                     // type:FLOAT.0
	float                                                            BaseOrbitPitchOffset;            // type:FLOAT.0
	float                                                            BaseOrbitPitchOffsetInTightSpace; // type:FLOAT.0
	struct camThirdPersonCameraMetadataLookOverSettings              LookOverSettings;                // type:STRUCT.STRUCTURE
	bool                                                             ShouldIgnoreAttachParentPitchForLookBehind; // type:BOOL.0
	vec2                                                             OrbitDistanceLimitsForBasePosition; // type:VECTOR2.0
	float                                                            PreToPostCollisionLookAtOrientationBlendValue; // type:FLOAT.0
	float                                                            AttachParentRollSpringConstant;  // type:FLOAT.0
	float                                                            AttachParentRollSpringDampingRatio; // type:FLOAT.0
	vec2                                                             AttachParentRollDampingPitchSoftLimits; // type:VECTOR2.0
	vec2                                                             AttachParentRollDampingPitchHardLimits; // type:VECTOR2.0
	struct camThirdPersonCameraMetadataStealthZoomSettings           StealthZoomSettings;             // type:STRUCT.STRUCTURE
	string                                                           MotionBlurSettings;              // type:STRING.ATNONFINALHASHSTRING
	float                                                            _0x0762A051;                     // type:FLOAT.0
	float                                                            _0x99EB63F9;                     // type:FLOAT.0
	bool                                                             _0xE83E4F54;                     // type:BOOL.0
	vec2                                                             _0xDC41F78E;                     // type:VECTOR2.0
	float                                                            _0xEAAF5B99;                     // type:FLOAT.0
};